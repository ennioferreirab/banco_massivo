[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8198",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8198/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8198/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8198/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8198",
        "id": 1951532025,
        "node_id": "I_kwDOIWuq5850UgP5",
        "number": 8198,
        "title": "[Bug]: ObjectIndex does not correctly set the table schema into VectorStore",
        "user": {
            "login": "nikhilht",
            "id": 139101914,
            "node_id": "U_kgDOCEqG2g",
            "avatar_url": "https://avatars.githubusercontent.com/u/139101914?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikhilht",
            "html_url": "https://github.com/nikhilht",
            "followers_url": "https://api.github.com/users/nikhilht/followers",
            "following_url": "https://api.github.com/users/nikhilht/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikhilht/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikhilht/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikhilht/subscriptions",
            "organizations_url": "https://api.github.com/users/nikhilht/orgs",
            "repos_url": "https://api.github.com/users/nikhilht/repos",
            "events_url": "https://api.github.com/users/nikhilht/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikhilht/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-19T07:56:22Z",
        "updated_at": "2023-10-19T08:05:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI'm working with multiple SQL tables which might require join for some queries. I followed this [guide](https://github.com/run-llama/llama_index/blob/main/docs/end_to_end_tutorials/structured_data/sql_guide.md) and added context string for each table. Now when I query these tables using **SQLTableRetrieverQueryEngine**, the query generated contains wrong column names. I'm using chatgpt-3.5-turbo and MYSQL V8 \r\n\r\n### Version\r\n\r\n0.8.46\r\n\r\n### Steps to Reproduce\r\n\r\nCode to reproduce the error:\r\n`table_node_mapping = SQLTableNodeMapping(sql_index_database)\r\ntable_schema_objs = [\r\n    (SQLTableSchema(table_name=\"a\", context_str=a)),\r\n    (SQLTableSchema(table_name=\"b\", context_str=b)),\r\n    (SQLTableSchema(table_name=\"c\", context_str=c)),\r\n    (SQLTableSchema(table_name=\"d\", context_str=d)),\r\n    (SQLTableSchema(table_name=\"e\", context_str=e)),\r\n    (SQLTableSchema(table_name=\"f\", context_str=f)),\r\n]\r\nobj_index = ObjectIndex.from_objects(\r\n    table_schema_objs,\r\n    table_node_mapping,\r\n    VectorStoreIndex,\r\n)\r\n\r\nquery_engine = SQLTableRetrieverQueryEngine(\r\n    sql_index_database, obj_index.as_retriever(similarity_top_k=1)\r\n)\r\nquery_engine.query(\"what employees are present in department b\")\r\n`\r\n\r\n**RESPONSE -> sqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1054 (42S22): Unknown column 'ab.field_name' in 'field list'**\r\nI also had to pass table names into prompt_template for service_context else it was making up table names on its own.\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nsqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1054 (42S22): Unknown column 'ab.field_name' in 'field list'\r\n[SQL: SELECT ac.field_name1, ab.field_name2, ab.field_name3, ab.field_name4\r\nFROM a ac\r\nJOIN b ab ON ac.symbol = ab.symbol AND ac.end_date = ab.end_date\r\nWHERE lower(ac.display_name) LIKE 'some string%'\r\nORDER BY ac.end_date DESC\r\nLIMIT 1;]\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8198/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8198/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8197",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8197/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8197/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8197/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8197",
        "id": 1951513170,
        "node_id": "PR_kwDOIWuq585dPDdK",
        "number": 8197,
        "title": "add SQL retriever",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-19T07:45:12Z",
        "updated_at": "2023-10-20T22:29:39Z",
        "closed_at": "2023-10-20T22:29:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8197",
            "html_url": "https://github.com/run-llama/llama_index/pull/8197",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8197.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8197.patch",
            "merged_at": "2023-10-20T22:29:38Z"
        },
        "body": "This PR refactors the usable SQL query engines to do retrieval, and then synthesis.\r\n\r\nWe create separate SQLRetriever classes that can be used on their own \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8197/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8197/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8196",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8196/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8196/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8196/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8196",
        "id": 1951417240,
        "node_id": "PR_kwDOIWuq585dOuhv",
        "number": 8196,
        "title": "add response synthesis to text-to-SQL ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-19T06:47:04Z",
        "updated_at": "2023-10-19T08:32:17Z",
        "closed_at": "2023-10-19T08:32:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8196",
            "html_url": "https://github.com/run-llama/llama_index/pull/8196",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8196.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8196.patch",
            "merged_at": "2023-10-19T08:32:15Z"
        },
        "body": "This PR is a small attempt towards adding response synthesis capabilities to our text-to-SQL engine.\r\n\r\nLeads to mildly breaking changes (replace `sql_response_str` template var with `context_str` template var).\r\n\r\nOther small changes:\r\n- fixed pgvector prompt\r\n- fixed async for text-to-sql \r\n\r\nI'm working on a bigger change to separate out SQL Retrieval (text-to-SQL retrieval) from the synthesis portion, making it similar to our other RAG pipelines. draft PR for that incoming ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8196/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8196/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8195",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8195/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8195/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8195/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8195",
        "id": 1950973027,
        "node_id": "PR_kwDOIWuq585dNO2M",
        "number": 8195,
        "title": "Support for PyTorch MPS backend where possible",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-19T00:38:23Z",
        "updated_at": "2023-10-19T16:38:25Z",
        "closed_at": "2023-10-19T16:38:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8195",
            "html_url": "https://github.com/run-llama/llama_index/pull/8195",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8195.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8195.patch",
            "merged_at": "2023-10-19T16:38:24Z"
        },
        "body": "# Description\r\n\r\nMoves to `infer_torch_device` that can include MPS backend.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8195/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8195/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8194",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8194/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8194/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8194/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8194",
        "id": 1950924058,
        "node_id": "PR_kwDOIWuq585dNDxn",
        "number": 8194,
        "title": "Not re-writing `RedisVectorStore.__init__` in notebook",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-19T00:03:05Z",
        "updated_at": "2023-10-19T16:59:02Z",
        "closed_at": "2023-10-19T16:59:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8194",
            "html_url": "https://github.com/run-llama/llama_index/pull/8194",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8194.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8194.patch",
            "merged_at": "2023-10-19T16:59:01Z"
        },
        "body": "# Description\r\n\r\nNot rewriting `RedisVectorStore.__init__` in redis demo notebook, to avoid duplication of text\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8194/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8194/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8193",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8193/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8193/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8193/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8193",
        "id": 1950852225,
        "node_id": "PR_kwDOIWuq585dM0-c",
        "number": 8193,
        "title": "feature/fusion retriever use async in async context",
        "user": {
            "login": "ryanpeach",
            "id": 14838729,
            "node_id": "MDQ6VXNlcjE0ODM4NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14838729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanpeach",
            "html_url": "https://github.com/ryanpeach",
            "followers_url": "https://api.github.com/users/ryanpeach/followers",
            "following_url": "https://api.github.com/users/ryanpeach/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanpeach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanpeach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanpeach/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanpeach/orgs",
            "repos_url": "https://api.github.com/users/ryanpeach/repos",
            "events_url": "https://api.github.com/users/ryanpeach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanpeach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-18T23:09:42Z",
        "updated_at": "2023-10-18T23:10:43Z",
        "closed_at": "2023-10-18T23:10:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8193",
            "html_url": "https://github.com/run-llama/llama_index/pull/8193",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8193.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8193.patch",
            "merged_at": null
        },
        "body": "- Added retriever_mode super call to SimpleKeywordTable\n- Update rake_base.py\n- Saving work\n- Set up well for test driven development from here on\n- aider: Convert all instances of metadata[\"scopes\"] to metadata[\"inclusive_scopes\"] and add the current scope to the list.\n- aider: Replace all instances of `metadata[\"scopes\"]` with `metadata[\"inclusive_scopes\"]` in `tests/node_parser/test_code_parser.py`.\n- changed scopes to inclusive_scopes and added the current block to the scope. This will be better for CodeSplitter\n- Fixed compile errors\n- Got first test to work!\n- aider: Updated assertions in `test_html_code_splitter` to match the structure and checks in `test_python_code_splitter`.\n- aider: Updated assertions in `test_typescript_code_splitter` to match the structure and checks in `test_python_code_splitter`.\n- all tests pass (finally\n- black\n- Renamed to code hierarchy node parser\n- Gonna need a whole folder for these tests\n- Added back the ability to add inline comments\n- Using full string equals in tests for future skeleton tests\n- Very confusing bug when trying to develop a method for skipping types like decorators while maintaining context, saving work.\n- This has to be right... But its not.\n- Typing stuff\n- asyncio.run() cannot be called from a running event loop\n\n# Description\n\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\n\nFixes # (issue)\n\n## Type of Change\n\nPlease delete options that are not relevant.\n\n- [ ] Bug fix (non-breaking change which fixes an issue)\n- [ ] New feature (non-breaking change which adds functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n- [ ] This change requires a documentation update\n\n# How Has This Been Tested?\n\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\n\n- [ ] Added new unit/integration tests\n- [ ] Added new notebook (that tests end-to-end)\n- [ ] I stared at the code and made sure it makes sense\n\n# Suggested Checklist:\n\n- [ ] I have performed a self-review of my own code\n- [ ] I have commented my code, particularly in hard-to-understand areas\n- [ ] I have made corresponding changes to the documentation\n- [ ] My changes generate no new warnings\n- [ ] I have added tests that prove my fix is effective or that my feature works\n- [ ] New and existing unit tests pass locally with my changes\n- [ ] I ran `make format; make lint` to appease the lint gods\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8193/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8192",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8192/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8192/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8192/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8192",
        "id": 1950845320,
        "node_id": "PR_kwDOIWuq585dMzcX",
        "number": 8192,
        "title": "updated README to include the Llama in example usage",
        "user": {
            "login": "jeffxtang",
            "id": 535090,
            "node_id": "MDQ6VXNlcjUzNTA5MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/535090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffxtang",
            "html_url": "https://github.com/jeffxtang",
            "followers_url": "https://api.github.com/users/jeffxtang/followers",
            "following_url": "https://api.github.com/users/jeffxtang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffxtang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffxtang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffxtang/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffxtang/orgs",
            "repos_url": "https://api.github.com/users/jeffxtang/repos",
            "events_url": "https://api.github.com/users/jeffxtang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffxtang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-18T23:03:03Z",
        "updated_at": "2023-10-21T20:00:47Z",
        "closed_at": "2023-10-21T20:00:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8192",
            "html_url": "https://github.com/run-llama/llama_index/pull/8192",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8192.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8192.patch",
            "merged_at": "2023-10-21T20:00:46Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nAdded an example usage for using OSS Llama2\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\nTested in the published demo app https://github.com/jeffxtang/llama-recipes/blob/llama-demo-apps/demo_apps/LiveData.ipynb\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8192/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8192/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8191",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8191/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8191/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8191/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8191",
        "id": 1950832436,
        "node_id": "I_kwDOIWuq5850R1c0",
        "number": 8191,
        "title": "Query Neo4j graph database without any documents involved ",
        "user": {
            "login": "zzadiues3338",
            "id": 65094709,
            "node_id": "MDQ6VXNlcjY1MDk0NzA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/65094709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zzadiues3338",
            "html_url": "https://github.com/zzadiues3338",
            "followers_url": "https://api.github.com/users/zzadiues3338/followers",
            "following_url": "https://api.github.com/users/zzadiues3338/following{/other_user}",
            "gists_url": "https://api.github.com/users/zzadiues3338/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zzadiues3338/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zzadiues3338/subscriptions",
            "organizations_url": "https://api.github.com/users/zzadiues3338/orgs",
            "repos_url": "https://api.github.com/users/zzadiues3338/repos",
            "events_url": "https://api.github.com/users/zzadiues3338/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zzadiues3338/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-18T22:50:24Z",
        "updated_at": "2023-10-19T19:08:39Z",
        "closed_at": "2023-10-19T19:08:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nthe sample documentation in the website (https://gpt-index.readthedocs.io/en/latest/examples/index_structs/knowledge_graph/Neo4jKGIndexDemo.html) involves creating a database from corpus of documents. followed by querying the graph db. \r\n\r\nI already have a populated graph database (the movies database in neo4j aura instance) and need to query that database using LLM, no documents involved in the process. \r\n\r\nI tried using a blank list for documents in the following code but it did not work, and told me that I exceeded my openAI quota. \r\n\r\n![image](https://github.com/run-llama/llama_index/assets/65094709/5d028e9e-b3fa-4ef4-9ca5-f5250cf355fd)\r\n\r\nHow can i query a pre existing graph in neo4j ? please help ! Thanks :) ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8191/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8191/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8190",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8190/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8190/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8190/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8190",
        "id": 1950690778,
        "node_id": "PR_kwDOIWuq585dMTGx",
        "number": 8190,
        "title": "Fixed missing spaces in prompt templates",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-18T21:25:41Z",
        "updated_at": "2023-10-19T19:45:29Z",
        "closed_at": "2023-10-19T19:45:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8190",
            "html_url": "https://github.com/run-llama/llama_index/pull/8190",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8190.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8190.patch",
            "merged_at": "2023-10-19T19:45:28Z"
        },
        "body": "# Description\r\n\r\nAdded missing spaces into prompt templates.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8190/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8190/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8189",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8189/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8189/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8189/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8189",
        "id": 1950482183,
        "node_id": "PR_kwDOIWuq585dLkbY",
        "number": 8189,
        "title": "Consolidating query prepending",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-18T19:22:54Z",
        "updated_at": "2023-10-19T19:21:12Z",
        "closed_at": "2023-10-19T19:21:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8189",
            "html_url": "https://github.com/run-llama/llama_index/pull/8189",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8189.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8189.patch",
            "merged_at": "2023-10-19T19:21:11Z"
        },
        "body": "# Description\r\n\r\n- Consolidates query prepending logic into `huggingface_utils`\r\n- Fixes latent bug with `ClarifaiEmbedding` having a name error\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8189/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8189/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8188",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8188/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8188/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8188/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8188",
        "id": 1950341862,
        "node_id": "PR_kwDOIWuq585dLFmF",
        "number": 8188,
        "title": "More detailed `BaseEmbedding` docstrings",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-18T18:00:19Z",
        "updated_at": "2023-10-18T18:06:07Z",
        "closed_at": "2023-10-18T18:06:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8188",
            "html_url": "https://github.com/run-llama/llama_index/pull/8188",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8188.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8188.patch",
            "merged_at": "2023-10-18T18:06:06Z"
        },
        "body": "# Description\r\n\r\n- Fills out details on the methods within `BaseEmbedding`\r\n- Uses `Embedding` type alias more, where it makes sense\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8188/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8188/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8187",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8187/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8187/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8187/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8187",
        "id": 1950253944,
        "node_id": "PR_kwDOIWuq585dKyJV",
        "number": 8187,
        "title": "update custom embedding example",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-18T17:10:39Z",
        "updated_at": "2023-10-18T17:20:00Z",
        "closed_at": "2023-10-18T17:19:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8187",
            "html_url": "https://github.com/run-llama/llama_index/pull/8187",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8187.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8187.patch",
            "merged_at": "2023-10-18T17:19:59Z"
        },
        "body": "# Description\r\n\r\nSmall update to custom embedding example\r\n\r\nFixes #8186",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8187/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8187/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8186",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8186/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8186/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8186/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8186",
        "id": 1950232357,
        "node_id": "I_kwDOIWuq5850Pi8l",
        "number": 8186,
        "title": "[Documentation]: Example for custom embedding model doesn't work",
        "user": {
            "login": "geodavic",
            "id": 41129492,
            "node_id": "MDQ6VXNlcjQxMTI5NDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/41129492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/geodavic",
            "html_url": "https://github.com/geodavic",
            "followers_url": "https://api.github.com/users/geodavic/followers",
            "following_url": "https://api.github.com/users/geodavic/following{/other_user}",
            "gists_url": "https://api.github.com/users/geodavic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/geodavic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/geodavic/subscriptions",
            "organizations_url": "https://api.github.com/users/geodavic/orgs",
            "repos_url": "https://api.github.com/users/geodavic/repos",
            "events_url": "https://api.github.com/users/geodavic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/geodavic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-18T16:57:45Z",
        "updated_at": "2023-10-18T17:20:00Z",
        "closed_at": "2023-10-18T17:20:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\r\n\r\nRunning the example for the [custom embedding model](https://docs.llamaindex.ai/en/stable/core_modules/model_modules/embeddings/usage_pattern.html#custom-embedding-model) doesn't work, as it returns a pydantic error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: Can't instantiate abstract class InstructorEmbeddings with abstract methods _aget_query_embedding, class_name\r\n```\r\n\r\nEven after implementing the `_aget_query_embedding` and `class_name` methods as follows:\r\n\r\n```\r\n    def _aget_query_embedding(self, query: Union[str, List[str]]) -> List[float]:\r\n        return self._get_query_embedding(text)\r\n\r\n    def class_name(cls) -> str:\r\n        return self.instructor_model_name\r\n```\r\n\r\na pydantic error raises:\r\n\r\n```\r\nmax_seq_length  512\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/gtorres/dev/rag/initial_testing/embedding.py\", line 46, in __init__\r\n    self._model = INSTRUCTOR(instructor_model_name)\r\n  File \"pydantic/main.py\", line 357, in pydantic.main.BaseModel.__setattr__\r\nValueError: \"InstructorEmbeddings\" object has no field \"_model\"\r\n```\r\n\r\n### Documentation Link\r\n\r\nhttps://docs.llamaindex.ai/en/stable/core_modules/model_modules/embeddings/usage_pattern.html#custom-embedding-model",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8186/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8186/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8185",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8185/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8185/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8185/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8185",
        "id": 1950013534,
        "node_id": "I_kwDOIWuq5850Othe",
        "number": 8185,
        "title": "[Documentation]: Convoluted explanation on indices",
        "user": {
            "login": "iiLaurens",
            "id": 9915637,
            "node_id": "MDQ6VXNlcjk5MTU2Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9915637?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iiLaurens",
            "html_url": "https://github.com/iiLaurens",
            "followers_url": "https://api.github.com/users/iiLaurens/followers",
            "following_url": "https://api.github.com/users/iiLaurens/following{/other_user}",
            "gists_url": "https://api.github.com/users/iiLaurens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iiLaurens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iiLaurens/subscriptions",
            "organizations_url": "https://api.github.com/users/iiLaurens/orgs",
            "repos_url": "https://api.github.com/users/iiLaurens/repos",
            "events_url": "https://api.github.com/users/iiLaurens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iiLaurens/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-18T15:19:49Z",
        "updated_at": "2023-10-19T19:08:53Z",
        "closed_at": "2023-10-19T19:08:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\r\n\r\nIn my company I work for a team that has implemented a lot of RAG solutions. This is all build ad-hoc from research notebooks. Trying to connect the different parts (storage systems, vector databases, etc) every time again takes a lot of time for something that can be standardized and left to the OS community. LlamaIndex seems a perfect solution.\r\n\r\nHowever I keep tripping over the documentation. I have spent hours reading the documentation but I fail to get a holistic view of how LlamaIndex can help me organize and retrieve my documents. I thought I could give some feedback. I am sure I cannot be alone in this and providing feedback might raise awareness for what I think could become a big hurdle in adoption. Documentation is often the most important part of any OS software.\r\n\r\nThe parts that confuse me most is indices. There seems to be several contributors to my confusion:\r\n- The terminology of 'index' is confusing. Being an Machine Learning Engineer I know data and databases well. So when I think of an index, it is just an efficient manifest ordered by some attribute(s) that points to records of a database. It allows for quick lookups. The definition of an index in LLamaIndex should be related to the general concept of indices in datastores to improve people's understanding.\r\n- What problem does the index try to solve? And what problems does it not solve?\r\n- How does an index retrieve relevant nodes? And how do the different types of indices do this differently? I know there are images and descriptions, but they are incredibly sparse in number of words for such difficult concepts. The images are also difficult to interpret. It doesn't clearly visualize how nodes are eliminated or selected. Neither does it relate how nodes relate to documents. And what does the 'root' inside some images represent? Is it the root of the index? Or is the root a document?\r\n- Can multiple indices be used to represent the same set of documents? In databases, I can build different indices on the same table to optimize different types of queries. Sometimes I want to index on Column A. Other times on column B and column C. In the context of text, I can have several embeddings from different sources (OpenAI, Cohere, local models). Some embeddings might even be optimized for certain queries (Instructor embeddings). How do I create different indices with different embeddings without duplicating text? Does any of the existing indices (tree index, summary index, etc.) support this basic use case?\r\n\r\nI hope some more attention can be given to the indices pages based on my feedback!\r\n\r\n### Documentation Link\r\n\r\nhttps://docs.llamaindex.ai/en/stable/core_modules/data_modules/index/root.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8185/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8185/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8184",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8184/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8184/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8184/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8184",
        "id": 1949812399,
        "node_id": "I_kwDOIWuq5850N8av",
        "number": 8184,
        "title": "[Question]: Tools",
        "user": {
            "login": "malinphy",
            "id": 55249305,
            "node_id": "MDQ6VXNlcjU1MjQ5MzA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/55249305?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malinphy",
            "html_url": "https://github.com/malinphy",
            "followers_url": "https://api.github.com/users/malinphy/followers",
            "following_url": "https://api.github.com/users/malinphy/following{/other_user}",
            "gists_url": "https://api.github.com/users/malinphy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malinphy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malinphy/subscriptions",
            "organizations_url": "https://api.github.com/users/malinphy/orgs",
            "repos_url": "https://api.github.com/users/malinphy/repos",
            "events_url": "https://api.github.com/users/malinphy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malinphy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-18T13:50:55Z",
        "updated_at": "2023-10-18T16:00:25Z",
        "closed_at": "2023-10-18T16:00:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nIs there any documentation or an example of how to create a custom tools that requires tool name and definiton to be selected by llm for OpenAIagents.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8184/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8184/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8183",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8183/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8183/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8183/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8183",
        "id": 1949648524,
        "node_id": "I_kwDOIWuq5850NUaM",
        "number": 8183,
        "title": "[Question]: How to print out SQL from  GPTSQLStructStoreIndex",
        "user": {
            "login": "Iwannabanana",
            "id": 54763176,
            "node_id": "MDQ6VXNlcjU0NzYzMTc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/54763176?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Iwannabanana",
            "html_url": "https://github.com/Iwannabanana",
            "followers_url": "https://api.github.com/users/Iwannabanana/followers",
            "following_url": "https://api.github.com/users/Iwannabanana/following{/other_user}",
            "gists_url": "https://api.github.com/users/Iwannabanana/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Iwannabanana/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Iwannabanana/subscriptions",
            "organizations_url": "https://api.github.com/users/Iwannabanana/orgs",
            "repos_url": "https://api.github.com/users/Iwannabanana/repos",
            "events_url": "https://api.github.com/users/Iwannabanana/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Iwannabanana/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-18T12:35:11Z",
        "updated_at": "2023-10-18T16:01:11Z",
        "closed_at": "2023-10-18T16:01:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi everyone, just a quick question\uff1a\r\nI have been querying the GPTSQLStructStoreIndex and the response gives me the final result. Is there a method that I can inspect the in-process SQL llama is using to query the database? Many thanks.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8183/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8183/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8182",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8182/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8182/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8182/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8182",
        "id": 1949633178,
        "node_id": "I_kwDOIWuq5850NQqa",
        "number": 8182,
        "title": "Only works with Llama 2?",
        "user": {
            "login": "Sequential-circuits",
            "id": 28561374,
            "node_id": "MDQ6VXNlcjI4NTYxMzc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sequential-circuits",
            "html_url": "https://github.com/Sequential-circuits",
            "followers_url": "https://api.github.com/users/Sequential-circuits/followers",
            "following_url": "https://api.github.com/users/Sequential-circuits/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sequential-circuits/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sequential-circuits/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sequential-circuits/subscriptions",
            "organizations_url": "https://api.github.com/users/Sequential-circuits/orgs",
            "repos_url": "https://api.github.com/users/Sequential-circuits/repos",
            "events_url": "https://api.github.com/users/Sequential-circuits/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sequential-circuits/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-18T12:27:39Z",
        "updated_at": "2023-10-18T16:02:17Z",
        "closed_at": "2023-10-18T16:02:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nTrying to read from a MariaDB database, but apparently it only works if the model is llama2\r\n\r\nAny other model imported by ollama such as mistral, codellama, etc generates the error \r\n  File \"/root/anaconda3/lib/python3.9/site-packages/llama_cpp/llama.py\", line 1658, in __del__\r\nTypeError: 'NoneType' object is not callable\r\n\r\nThe code is:\r\nfrom sqlalchemy import select, create_engine, MetaData, Table\r\nfrom llama_index import SQLDatabase\r\nfrom llama_index.indices.struct_store.sql_query import NLSQLTableQueryEngine\r\nfrom llama_index import StorageContext, load_index_from_storage\r\nfrom IPython.display import Markdown, display\r\nfrom llama_index.llms import Ollama\r\n\r\nengine = create_engine('mariadb+pymysql://user:$password@server:port/database')\r\nsql_database = SQLDatabase(engine)\r\nmetadata = MetaData()\r\ntable = Table(\"users\", metadata, autoload_with=engine)\r\nstmt = select(table.columns)\r\nwith engine.connect() as connection:\r\n  results = connection.execute(stmt).fetchone()\r\n  print(results)\r\n\r\n\r\nllm = Ollama(model=\"llama2:70b\")\r\nquery_engine = NLSQLTableQueryEngine(sql_database=sql_database,tables=[\"pictures\"],)\r\nquery_str = (\"how many records are there in the table users\")\r\ntry:\r\n response = query_engine.query(query_str)\r\n response_md = str(response)\r\n sql_query = response.metadata[\"sql_query\"]\r\n print(\"sql_query=\",sql_query)\r\n print(\"response_md=\",response_md)\r\nexcept Exception as ex:\r\n response_md = \"Error\"\r\n display(Markdown(f\"ERROR: {str(ex)}\"))_\r\n \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8182/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8182/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8181",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8181/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8181/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8181/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8181",
        "id": 1949446687,
        "node_id": "I_kwDOIWuq5850MjIf",
        "number": 8181,
        "title": "[Question]: Recency filter based on node metadata \"date\"",
        "user": {
            "login": "mllife",
            "id": 69006366,
            "node_id": "MDQ6VXNlcjY5MDA2MzY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/69006366?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mllife",
            "html_url": "https://github.com/mllife",
            "followers_url": "https://api.github.com/users/mllife/followers",
            "following_url": "https://api.github.com/users/mllife/following{/other_user}",
            "gists_url": "https://api.github.com/users/mllife/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mllife/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mllife/subscriptions",
            "organizations_url": "https://api.github.com/users/mllife/orgs",
            "repos_url": "https://api.github.com/users/mllife/repos",
            "events_url": "https://api.github.com/users/mllife/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mllife/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-18T10:50:35Z",
        "updated_at": "2023-10-24T06:32:22Z",
        "closed_at": "2023-10-24T06:32:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nhi, I need some assistant in creating a recency filter, which picks up nodes based date in metadata\r\n```python\r\nfrom pprint import pprint\r\nfrom llama_index import (\r\n    get_response_synthesizer,\r\n)\r\nfrom llama_index.retrievers import VectorIndexRetriever\r\nfrom llama_index.query_engine import RetrieverQueryEngine\r\nfrom llama_index.indices.postprocessor import SimilarityPostprocessor\r\nfrom llama_index.indices.postprocessor import FixedRecencyPostprocessor\r\nfrom llama_index.vector_stores.types import ExactMatchFilter, MetadataFilters\r\n\r\n\r\n# define recency postprocessor\r\nrecency_postprocessor = FixedRecencyPostprocessor(service_context=service_context)\r\n\r\n\r\n# configure retriever\r\nretriever = VectorIndexRetriever(\r\n    index=index,\r\n    similarity_top_k=3,\r\n    filters=MetadataFilters(filters=[ExactMatchFilter(key=\"ticker\", value=\"AAPL-US\")])\r\n)\r\n# configure response synthesizer\r\nresponse_synthesizer = get_response_synthesizer()\r\n\r\n# Assemble query engine\r\nquery_engine = RetrieverQueryEngine(\r\n    retriever=retriever,\r\n    response_synthesizer=response_synthesizer,\r\n    node_postprocessors=[\r\n        SimilarityPostprocessor(similarity_cutoff=0.70),\r\n        recency_postprocessor  # add recency postprocessor here\r\n    ]\r\n)\r\nquest = \"extract the parts of the content that supports 'Growth' of the company\"\r\n\r\nresponse = query_engine.query(quest)\r\n\r\n# print(response)\r\n# print(len(response.source_nodes))\r\nprint()\r\npprint(format_response(quest, response))\r\n```\r\n\r\nAll nodes in the index have date in metadata, \"date\" is corresponding to date of the document (news article).\r\nThe code\r\n```\r\nrecency_postprocessor = FixedRecencyPostprocessor(service_context=service_context)\r\n```\r\ndoes sort the nodes by date order from top-k matches. But, I want a additional filter such that it nodes to query based on the recency of stories within 3 or 6 months of the current date (and exclude older stories even if they are matching 'Growth' in their content), using metadata 'date' of nodes.\r\nHow can I do that?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8181/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8181/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8180",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8180/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8180/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8180/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8180",
        "id": 1949344459,
        "node_id": "I_kwDOIWuq5850MKLL",
        "number": 8180,
        "title": "[Question]: LLMReranker",
        "user": {
            "login": "ddealwis09",
            "id": 115846150,
            "node_id": "U_kgDOBuesBg",
            "avatar_url": "https://avatars.githubusercontent.com/u/115846150?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ddealwis09",
            "html_url": "https://github.com/ddealwis09",
            "followers_url": "https://api.github.com/users/ddealwis09/followers",
            "following_url": "https://api.github.com/users/ddealwis09/following{/other_user}",
            "gists_url": "https://api.github.com/users/ddealwis09/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ddealwis09/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ddealwis09/subscriptions",
            "organizations_url": "https://api.github.com/users/ddealwis09/orgs",
            "repos_url": "https://api.github.com/users/ddealwis09/repos",
            "events_url": "https://api.github.com/users/ddealwis09/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ddealwis09/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-18T09:57:15Z",
        "updated_at": "2023-10-24T06:32:21Z",
        "closed_at": "2023-10-24T06:32:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n\r\n### Question\r\n\r\nHello, I am having difficulty getting the LLMReranker setup, below is my code, can I am getting an error when I run the query engine. The error I am getting is \"InvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.chat_completion.ChatCompletion'>\" but the query engine works perfectly if I remove the reranker. \r\n\r\n```\r\n# cache index\r\n @st.cache_resource\r\n def load_index():\r\n       index = load_vectorstore_from_storage(path=\"./storage\")\r\n       return index\r\n\r\nllm_completion = AzureOpenAI(deployment_name=\"gpt-35-turbo1\", \r\n                                model_name=\"text-davinci-003\")\r\n    \r\n #Azure embeddings\r\nembedding_llm = LangchainEmbedding(\r\n                    OpenAIEmbeddings(\r\n                        model=\"text-embedding-ada-002\",\r\n                        deployment=\"text-embedding-ada-002\",\r\n                    ),\r\n                    embed_batch_size=1,\r\n                )\r\nservice_context = ServiceContext.from_defaults(llm=llm_completion, \r\n                                                    embed_model=embedding_llm) \r\n\r\nreranker = LLMRerank(choice_batch_size=5, top_n=3, service_context=service_context)\r\n\r\nquery_engine = index.as_query_engine(vector_store_query_mode=\"mmr\", \r\n                                                        vector_store_kwargs={\"mmr_threshold\": mmr_threshold},\r\n                                                        similarity_top_k=8,\r\n                                                        node_postprocessors=[reranker],  \r\n                                                        response_mode = \"tree_summarize\",\r\n                                                        text_qa_template=text_qa_template, \r\n                                                        refine_template=refine_template,\r\n                                                        )\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8180/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8180/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8179",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8179/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8179/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8179/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8179",
        "id": 1949337924,
        "node_id": "I_kwDOIWuq5850MIlE",
        "number": 8179,
        "title": "[Question]: 'Llama' object has no attribute 'context_params'",
        "user": {
            "login": "Sequential-circuits",
            "id": 28561374,
            "node_id": "MDQ6VXNlcjI4NTYxMzc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sequential-circuits",
            "html_url": "https://github.com/Sequential-circuits",
            "followers_url": "https://api.github.com/users/Sequential-circuits/followers",
            "following_url": "https://api.github.com/users/Sequential-circuits/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sequential-circuits/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sequential-circuits/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sequential-circuits/subscriptions",
            "organizations_url": "https://api.github.com/users/Sequential-circuits/orgs",
            "repos_url": "https://api.github.com/users/Sequential-circuits/repos",
            "events_url": "https://api.github.com/users/Sequential-circuits/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sequential-circuits/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-18T09:53:47Z",
        "updated_at": "2023-10-18T10:24:57Z",
        "closed_at": "2023-10-18T10:24:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am trying to set LLaMA 2 as the LLM to be used instead of the standard ChatGPT 3.5 in order to read from a MariaDB database, but getting the error \"'Llama' object has no attribute 'context_params'\"\r\n\r\nThe code is:\r\nfrom sqlalchemy import select, create_engine, MetaData, Table\r\nengine = create_engine('mariadb+pymysql://user:password@server:port/table')\r\nmetadata = MetaData()\r\ntable = Table(\"users\", metadata, autoload_with=engine)\r\nstmt = select(table.columns)\r\nwith engine.connect() as connection:\r\n  results = connection.execute(stmt).fetchone()\r\n  print(results)\r\n\r\nfrom llama_index import SQLDatabase\r\nsql_database = SQLDatabase(engine)\r\nfrom llama_index.indices.struct_store.sql_query import NLSQLTableQueryEngine\r\nfrom llama_index import StorageContext, load_index_from_storage\r\nfrom IPython.display import Markdown, display\r\n\r\nfrom llama_index.llms import Ollama\r\nllm = Ollama(model=\"llama2\")\r\nquery_engine = NLSQLTableQueryEngine(sql_database=sql_database,tables=[\"pictures\"],)\r\n\r\nquery_str = (\"how many records are there in the table users\")\r\ntry:\r\n response = query_engine.query(query_str)\r\n response_md = str(response)\r\n sql_query = response.metadata[\"sql_query\"]\r\n print(\"sql_query=\",sql_query)\r\n print(\"response_md=\",response_md)\r\nexcept Exception as ex:\r\n response_md = \"Error\"\r\n display(Markdown(f\"ERROR: {str(ex)}\"))\r\n \r\nthe complete error is \r\n  File \"/ai/llama_index/test.py\", line 21, in <module>\r\n    query_engine = NLSQLTableQueryEngine(sql_database=sql_database,tables=[\"pictures\"],)\r\n  File \"/ai/llama_index/llama_index/indices/struct_store/sql_query.py\", line 336, in __init__\r\n    super().__init__(\r\n  File \"/ai/llama_index/llama_index/indices/struct_store/sql_query.py\", line 228, in __init__\r\n    self._service_context = service_context or ServiceContext.from_defaults()\r\n  File \"/ai/llama_index/llama_index/indices/service_context.py\", line 167, in from_defaults\r\n    llm_metadata=llm_predictor.metadata,\r\n  File \"/ai/llama_index/llama_index/llm_predictor/base.py\", line 115, in metadata\r\n    return self._llm.metadata\r\n  File \"/ai/llama_index/llama_index/llms/llama_cpp.py\", line 154, in metadata\r\n    context_window=self._model.context_params.n_ctx,\r\nAttributeError: 'Llama' object has no attribute 'context_params'\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8179/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8179/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8178",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8178/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8178/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8178/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8178",
        "id": 1949258691,
        "node_id": "I_kwDOIWuq5850L1PD",
        "number": 8178,
        "title": "[Bug]: LLMPredictor Cache arguement",
        "user": {
            "login": "MeghaWalia-eco",
            "id": 108450391,
            "node_id": "U_kgDOBnbSVw",
            "avatar_url": "https://avatars.githubusercontent.com/u/108450391?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MeghaWalia-eco",
            "html_url": "https://github.com/MeghaWalia-eco",
            "followers_url": "https://api.github.com/users/MeghaWalia-eco/followers",
            "following_url": "https://api.github.com/users/MeghaWalia-eco/following{/other_user}",
            "gists_url": "https://api.github.com/users/MeghaWalia-eco/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MeghaWalia-eco/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MeghaWalia-eco/subscriptions",
            "organizations_url": "https://api.github.com/users/MeghaWalia-eco/orgs",
            "repos_url": "https://api.github.com/users/MeghaWalia-eco/repos",
            "events_url": "https://api.github.com/users/MeghaWalia-eco/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MeghaWalia-eco/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-10-18T09:14:44Z",
        "updated_at": "2023-11-21T06:17:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI want to add gptcache object in cache to have that in llama index, but now LLM Predictor is not taking up cache arguments, how  can we do caching now.\r\n\r\n```\r\nindex = GPTVectorStoreIndex.from_documents(\r\n    documents,\r\n    service_context=ServiceContext.from_defaults(\r\n        llm_predictor=LLMPredictor(cache=gptcache_obj)\r\n    ),\r\n```\r\n\r\ncache=gptcache_obj throws error as cache is not a valid argument.\n\n### Version\n\nlatest\n\n### Steps to Reproduce\n\ntry to integrate llama index with gpt cache\r\n\r\n```\r\nimport hashlib\r\nfrom gptcache import Cache\r\nfrom gptcache.adapter.api import init_similar_cache\r\n\r\n\r\ndef get_hashed_name(name):\r\n    return hashlib.sha256(name.encode()).hexdigest()\r\n\r\n\r\ndef init_gptcache(cache_obj: Cache, llm: str):\r\n    hashed_llm = get_hashed_name(llm)\r\n    init_similar_cache(cache_obj=cache_obj, data_dir=f\"similar_cache_{hashed_llm}\")\r\n\r\ngptcache_obj = GPTCache(init_gptcache)\r\n\r\nfrom llama_index import (\r\n    GPTVectorStoreIndex,\r\n    ServiceContext,\r\n    LLMPredictor,\r\n    SimpleWebPageReader,\r\n)\r\n\r\nloader = SimpleWebPageReader(html_to_text=True)\r\ndocuments = loader.load_data(urls=[\"https://milvus.io/docs/overview.md\"])\r\n\r\nindex = GPTVectorStoreIndex.from_documents(\r\n    documents,\r\n    service_context=ServiceContext.from_defaults(\r\n        llm_predictor=LLMPredictor(cache=gptcache_obj)\r\n    ),\r\n)\r\nquery_engine = index.as_query_engine()\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8178/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8178/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8177",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8177/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8177/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8177/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8177",
        "id": 1949130211,
        "node_id": "PR_kwDOIWuq585dG9OF",
        "number": 8177,
        "title": "[version] bump version to 0.8.46",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-18T08:07:24Z",
        "updated_at": "2023-10-18T15:32:04Z",
        "closed_at": "2023-10-18T15:32:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8177",
            "html_url": "https://github.com/run-llama/llama_index/pull/8177",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8177.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8177.patch",
            "merged_at": "2023-10-18T15:32:03Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8177/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8177/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8176",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8176/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8176/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8176/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8176",
        "id": 1949051689,
        "node_id": "I_kwDOIWuq5850LCsp",
        "number": 8176,
        "title": "[Bug]: Litellm tokeniser issue",
        "user": {
            "login": "smyja",
            "id": 20070770,
            "node_id": "MDQ6VXNlcjIwMDcwNzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20070770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smyja",
            "html_url": "https://github.com/smyja",
            "followers_url": "https://api.github.com/users/smyja/followers",
            "following_url": "https://api.github.com/users/smyja/following{/other_user}",
            "gists_url": "https://api.github.com/users/smyja/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smyja/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smyja/subscriptions",
            "organizations_url": "https://api.github.com/users/smyja/orgs",
            "repos_url": "https://api.github.com/users/smyja/repos",
            "events_url": "https://api.github.com/users/smyja/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smyja/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-18T07:30:17Z",
        "updated_at": "2023-10-18T18:12:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\ni keep getting this error\r\n`'Could not automatically map together_ai/togethercomputer/llama-2-70b-chat to a tokeniser. Please use `tiktoken.get_encoding` to explicitly get the tokeniser you expect.'`\r\n\r\ni think the issue was mentioned [here also ](https://github.com/BerriAI/litellm/issues/590)\n\n### Version\n\n0.8.44\n\n### Steps to Reproduce\n\nfrom llama_index.llms import LiteLLM\r\nllm = LiteLLM(\"together_ai/togethercomputer/llama-2-70b-chat\")\r\nembed_model = OpenAIEmbedding(embed_batch_size=42)\r\nservice_context = ServiceContext.from_defaults(llm=llm,embed_model=embed_model)\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8176/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8176/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8175",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8175/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8175/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8175/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8175",
        "id": 1948958913,
        "node_id": "I_kwDOIWuq5850KsDB",
        "number": 8175,
        "title": "[Question]: Inference speedup ",
        "user": {
            "login": "pranavbhat12",
            "id": 54463581,
            "node_id": "MDQ6VXNlcjU0NDYzNTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/54463581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavbhat12",
            "html_url": "https://github.com/pranavbhat12",
            "followers_url": "https://api.github.com/users/pranavbhat12/followers",
            "following_url": "https://api.github.com/users/pranavbhat12/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavbhat12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavbhat12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavbhat12/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavbhat12/orgs",
            "repos_url": "https://api.github.com/users/pranavbhat12/repos",
            "events_url": "https://api.github.com/users/pranavbhat12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavbhat12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-18T06:31:48Z",
        "updated_at": "2023-10-24T06:32:19Z",
        "closed_at": "2023-10-24T06:32:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIs there any way to increase the inference using llamaindex?Tried Xorbit inference but it says accuracy is not great with llama2 7b model with 4 bit quantization.Please help out if there are alternative to increase the inference speed.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8175/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8175/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8174",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8174/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8174/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8174/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8174",
        "id": 1948937648,
        "node_id": "PR_kwDOIWuq585dGTI6",
        "number": 8174,
        "title": "fine-tuning router with embeddings example",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-18T06:20:27Z",
        "updated_at": "2023-10-18T08:03:34Z",
        "closed_at": "2023-10-18T08:03:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8174",
            "html_url": "https://github.com/run-llama/llama_index/pull/8174",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8174.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8174.patch",
            "merged_at": "2023-10-18T08:03:33Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8174/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8174/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8173",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8173/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8173/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8173/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8173",
        "id": 1948691519,
        "node_id": "PR_kwDOIWuq585dFcc1",
        "number": 8173,
        "title": "add tencent vectordb as vector store",
        "user": {
            "login": "wlleiiwang",
            "id": 6872942,
            "node_id": "MDQ6VXNlcjY4NzI5NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6872942?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wlleiiwang",
            "html_url": "https://github.com/wlleiiwang",
            "followers_url": "https://api.github.com/users/wlleiiwang/followers",
            "following_url": "https://api.github.com/users/wlleiiwang/following{/other_user}",
            "gists_url": "https://api.github.com/users/wlleiiwang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wlleiiwang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wlleiiwang/subscriptions",
            "organizations_url": "https://api.github.com/users/wlleiiwang/orgs",
            "repos_url": "https://api.github.com/users/wlleiiwang/repos",
            "events_url": "https://api.github.com/users/wlleiiwang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wlleiiwang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-18T03:03:13Z",
        "updated_at": "2023-10-21T20:13:35Z",
        "closed_at": "2023-10-21T20:13:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8173",
            "html_url": "https://github.com/run-llama/llama_index/pull/8173",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8173.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8173.patch",
            "merged_at": "2023-10-21T20:13:35Z"
        },
        "body": "Hi all,\r\n\r\nI'm excited to open this PR to add support for using 'Tencent Cloud VectorDB' as a vector store.\r\n\r\nTencent Cloud VectorDB is a fully-managed, self-developed, enterprise-level distributed database service designed for storing, retrieving, and analyzing multi-dimensional vector data. The database supports multiple index types and similarity calculation methods, with a single index supporting vector scales up to 1 billion and capable of handling millions of QPS with millisecond-level query latency. Tencent Cloud VectorDB not only provides external knowledge bases for large models to improve their accuracy, but also has wide applications in AI fields such as recommendation systems, NLP services, computer vision, and intelligent customer service.\r\n\r\nThe PR includes: Implementation of Vectorstore.\r\n\r\nExample notebook and unit tests are also included.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8173/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8173/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8172",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8172/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8172/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8172/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8172",
        "id": 1948599248,
        "node_id": "I_kwDOIWuq5850JUPQ",
        "number": 8172,
        "title": "[Question]: How does llama-index using metadata for query?",
        "user": {
            "login": "Whisht",
            "id": 16497652,
            "node_id": "MDQ6VXNlcjE2NDk3NjUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16497652?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Whisht",
            "html_url": "https://github.com/Whisht",
            "followers_url": "https://api.github.com/users/Whisht/followers",
            "following_url": "https://api.github.com/users/Whisht/following{/other_user}",
            "gists_url": "https://api.github.com/users/Whisht/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Whisht/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Whisht/subscriptions",
            "organizations_url": "https://api.github.com/users/Whisht/orgs",
            "repos_url": "https://api.github.com/users/Whisht/repos",
            "events_url": "https://api.github.com/users/Whisht/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Whisht/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-18T01:39:33Z",
        "updated_at": "2023-10-18T16:12:38Z",
        "closed_at": "2023-10-18T16:12:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI have searched the documentation about `metadata`, but there are only abstracted usages, not some concrete examples helped me to know where the metadata is used. \r\n\r\nI want to customize a `Retriever`, which could improve its recall by facilitating some extracted metadata and, for instance, extending the keywords list with `summary` in `metadata`. However, I do not see any clear docs about how to customize the usage of metadata. Meanwhile, I searched the source code for `Faiss VectorStoreIndex`, but there is no implementation for using metadata. \r\n\r\nAlthough I noticed a `MetadataFilter` which can help me filter the `metadata`, I still do not know how you exploit the metadata for retrieval. I believe the `MetadataFilter` is for **decrease** the retrieved `nodes`, not for **increase** its recall. So, how could I have more retrieved nodes with `metadata`? Please help me explain this. If I have any misunderstanding, do rectify my description.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8172/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8172/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8171",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8171/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8171/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8171/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8171",
        "id": 1948442907,
        "node_id": "PR_kwDOIWuq585dEm6Q",
        "number": 8171,
        "title": "Fixed bug with duplicate `FORMAT_STR` in prompt",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-17T23:14:50Z",
        "updated_at": "2023-10-17T23:52:55Z",
        "closed_at": "2023-10-17T23:52:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8171",
            "html_url": "https://github.com/run-llama/llama_index/pull/8171",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8171.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8171.patch",
            "merged_at": "2023-10-17T23:52:54Z"
        },
        "body": "# Description\r\n\r\nThis bug is somewhat significant, where I believe for a long time, duplicate `FORMAT_STR` has been used in prompts.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8171/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8171/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8170",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8170/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8170/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8170/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8170",
        "id": 1948428730,
        "node_id": "I_kwDOIWuq5850Iqm6",
        "number": 8170,
        "title": "[Bug]: Cognitive Search import Vector (does not exist)",
        "user": {
            "login": "ChrisPriebe",
            "id": 2474869,
            "node_id": "MDQ6VXNlcjI0NzQ4Njk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2474869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChrisPriebe",
            "html_url": "https://github.com/ChrisPriebe",
            "followers_url": "https://api.github.com/users/ChrisPriebe/followers",
            "following_url": "https://api.github.com/users/ChrisPriebe/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChrisPriebe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChrisPriebe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChrisPriebe/subscriptions",
            "organizations_url": "https://api.github.com/users/ChrisPriebe/orgs",
            "repos_url": "https://api.github.com/users/ChrisPriebe/repos",
            "events_url": "https://api.github.com/users/ChrisPriebe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChrisPriebe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-17T23:01:01Z",
        "updated_at": "2023-11-01T09:47:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n```\r\n  File \"C:\\Users\\...\\Documents\\projects\\ShadowFax\\venv\\Lib\\site-packages\\llama_index\\vector_stores\\cogsearch.py\", line 518, in query\r\n    from azure.search.documents.models import Vector\r\nImportError: cannot import name 'Vector' from 'azure.search.documents.models' (C:\\Users\\...\\Documents\\projects\\ShadowFax\\venv\\Lib\\site-packages\\azure\\search\\documents\\models\\__init__.py)\r\n```\r\n\r\nProposal to fix, likely a typo and should be RawVectorQuery(please confirm), if so the fix is\r\n\r\n```\r\ndef query(self, query: VectorStoreQuery, **kwargs: Any) -> VectorStoreQueryResult:\r\n        \"\"\"Query vector store.\"\"\"\r\n        from azure.search.documents.models import RawVectorQuery\r\n\r\n        select_fields = [\r\n            self._field_mapping[\"id\"],\r\n            self._field_mapping[\"chunk\"],\r\n            self._field_mapping[\"metadata\"],\r\n            self._field_mapping[\"doc_id\"],\r\n        ]\r\n\r\n        search_query = \"*\"\r\n        vectors = None\r\n\r\n        if query.mode in (VectorStoreQueryMode.SPARSE, VectorStoreQueryMode.HYBRID):\r\n            if query.query_str is None:\r\n                raise ValueError(\"Query missing query string\")\r\n\r\n            search_query = query.query_str\r\n\r\n            logger.info(f\"Hybrid search with search text: {search_query}\")\r\n\r\n        if query.mode in (VectorStoreQueryMode.DEFAULT, VectorStoreQueryMode.HYBRID):\r\n            if not query.query_embedding:\r\n                raise ValueError(\"Query missing embedding\")\r\n\r\n            vector = RawVectorQuery(\r\n                vector=query.query_embedding,\r\n                k=query.similarity_top_k,\r\n                fields=self._field_mapping[\"embedding\"],\r\n                kind=\"vector\",\r\n            )\r\n            vectors = [vector]\r\n            logger.info(\"Vector search with supplied embedding\")\r\n\r\n        odata_filter = None\r\n        if query.filters is not None:\r\n            odata_filter = self._create_odata_filter(query.filters)\r\n\r\n        results = self._search_client.search(\r\n            search_text=search_query,\r\n            vector_queries=vectors,\r\n            top=query.similarity_top_k,\r\n            select=select_fields,\r\n            filter=odata_filter,\r\n        )\r\n ```\r\n\r\n\n\n### Version\n\nlatest\n\n### Steps to Reproduce\n\nUse code from sample notebook, will fail\n\n### Relevant Logs/Tracbacks\n\n```shell\nFile \"C:\\Users\\chrispriebe\\Documents\\projects\\ShadowFax\\venv\\Lib\\site-packages\\llama_index\\vector_stores\\cogsearch.py\", line 518, in query\r\n    from azure.search.documents.models import Vector\r\nImportError: cannot import name 'Vector' from 'azure.search.documents.models' (C:\\Users\\chrispriebe\\Documents\\projects\\ShadowFax\\venv\\Lib\\site-packages\\azure\\search\\documents\\models\\__init__.py)\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8170/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8170/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8169",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8169/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8169/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8169/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8169",
        "id": 1948425313,
        "node_id": "PR_kwDOIWuq585dEjCG",
        "number": 8169,
        "title": "llm rails embeddings",
        "user": {
            "login": "anar2706",
            "id": 51159628,
            "node_id": "MDQ6VXNlcjUxMTU5NjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51159628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anar2706",
            "html_url": "https://github.com/anar2706",
            "followers_url": "https://api.github.com/users/anar2706/followers",
            "following_url": "https://api.github.com/users/anar2706/following{/other_user}",
            "gists_url": "https://api.github.com/users/anar2706/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anar2706/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anar2706/subscriptions",
            "organizations_url": "https://api.github.com/users/anar2706/orgs",
            "repos_url": "https://api.github.com/users/anar2706/repos",
            "events_url": "https://api.github.com/users/anar2706/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anar2706/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-17T22:57:01Z",
        "updated_at": "2023-10-18T16:12:55Z",
        "closed_at": "2023-10-18T16:12:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8169",
            "html_url": "https://github.com/run-llama/llama_index/pull/8169",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8169.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8169.patch",
            "merged_at": "2023-10-18T16:12:55Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8169/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8169/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8168",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8168/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8168/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8168/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8168",
        "id": 1948309473,
        "node_id": "PR_kwDOIWuq585dEJRG",
        "number": 8168,
        "title": "Fixing incorrect spacing in prompt templates",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-17T21:27:54Z",
        "updated_at": "2023-10-18T21:26:39Z",
        "closed_at": "2023-10-18T21:26:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8168",
            "html_url": "https://github.com/run-llama/llama_index/pull/8168",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8168.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8168.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nI observed:\r\n- Some prompts were missing spaces around line wraps\r\n- 6X repeated text in different places\r\n\r\nThis PR corrects both, without touching prompt content\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8168/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8168/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8167",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8167/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8167/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8167/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8167",
        "id": 1948285801,
        "node_id": "PR_kwDOIWuq585dED7a",
        "number": 8167,
        "title": "apply black with 79 char width in docs notebooks; modify make file",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-17T21:14:06Z",
        "updated_at": "2023-10-17T22:35:00Z",
        "closed_at": "2023-10-17T22:34:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8167",
            "html_url": "https://github.com/run-llama/llama_index/pull/8167",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8167.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8167.patch",
            "merged_at": "2023-10-17T22:34:54Z"
        },
        "body": "# Description\r\n\r\nCode blocks in our docs/notebooks are not formatted, and hard to read requiring reader to scroll left-to-right often.\r\n\r\nFixes [#8151](https://github.com/run-llama/llama_index/issues/8151)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n`Before`\r\n![image](https://github.com/run-llama/llama_index/assets/92402603/5fda9dae-e585-446b-a2a7-10983447ea33)\r\n\r\n`After`\r\n![image](https://github.com/run-llama/llama_index/assets/92402603/f25acd0d-1cce-4dfb-a932-a25819d847cf)\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8167/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8167/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8166",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8166/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8166/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8166/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8166",
        "id": 1948062015,
        "node_id": "PR_kwDOIWuq585dDSoZ",
        "number": 8166,
        "title": "Fix Firestore client info",
        "user": {
            "login": "pl04351820",
            "id": 10365273,
            "node_id": "MDQ6VXNlcjEwMzY1Mjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/10365273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pl04351820",
            "html_url": "https://github.com/pl04351820",
            "followers_url": "https://api.github.com/users/pl04351820/followers",
            "following_url": "https://api.github.com/users/pl04351820/following{/other_user}",
            "gists_url": "https://api.github.com/users/pl04351820/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pl04351820/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pl04351820/subscriptions",
            "organizations_url": "https://api.github.com/users/pl04351820/orgs",
            "repos_url": "https://api.github.com/users/pl04351820/repos",
            "events_url": "https://api.github.com/users/pl04351820/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pl04351820/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-17T19:00:13Z",
        "updated_at": "2023-10-18T02:37:20Z",
        "closed_at": "2023-10-18T02:37:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8166",
            "html_url": "https://github.com/run-llama/llama_index/pull/8166",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8166.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8166.patch",
            "merged_at": "2023-10-18T02:37:20Z"
        },
        "body": "# Description\r\n\r\nThe Client Info should be ClientInfo object instead of string.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8166/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8166/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8165",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8165/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8165/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8165/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8165",
        "id": 1947884521,
        "node_id": "PR_kwDOIWuq585dCsP3",
        "number": 8165,
        "title": "minor fix: added node type in node relationship",
        "user": {
            "login": "azurewtl",
            "id": 5175672,
            "node_id": "MDQ6VXNlcjUxNzU2NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5175672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azurewtl",
            "html_url": "https://github.com/azurewtl",
            "followers_url": "https://api.github.com/users/azurewtl/followers",
            "following_url": "https://api.github.com/users/azurewtl/following{/other_user}",
            "gists_url": "https://api.github.com/users/azurewtl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azurewtl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azurewtl/subscriptions",
            "organizations_url": "https://api.github.com/users/azurewtl/orgs",
            "repos_url": "https://api.github.com/users/azurewtl/repos",
            "events_url": "https://api.github.com/users/azurewtl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azurewtl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-17T17:10:56Z",
        "updated_at": "2023-10-18T21:30:28Z",
        "closed_at": "2023-10-18T21:30:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8165",
            "html_url": "https://github.com/run-llama/llama_index/pull/8165",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8165.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8165.patch",
            "merged_at": "2023-10-18T21:30:28Z"
        },
        "body": "# Description\r\n\r\n`nodetype` was missed when construct node relationship.\r\nthis is a minor fix that added `nodetype` info in `basenode.as_related_node_info`\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8165/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8165/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8163",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8163/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8163/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8163/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8163",
        "id": 1947641407,
        "node_id": "PR_kwDOIWuq585dB3oK",
        "number": 8163,
        "title": "Minor fix in the description for an argument in cohere llm",
        "user": {
            "login": "NeilBotelho",
            "id": 39030675,
            "node_id": "MDQ6VXNlcjM5MDMwNjc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/39030675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NeilBotelho",
            "html_url": "https://github.com/NeilBotelho",
            "followers_url": "https://api.github.com/users/NeilBotelho/followers",
            "following_url": "https://api.github.com/users/NeilBotelho/following{/other_user}",
            "gists_url": "https://api.github.com/users/NeilBotelho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NeilBotelho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NeilBotelho/subscriptions",
            "organizations_url": "https://api.github.com/users/NeilBotelho/orgs",
            "repos_url": "https://api.github.com/users/NeilBotelho/repos",
            "events_url": "https://api.github.com/users/NeilBotelho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NeilBotelho/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-17T14:59:37Z",
        "updated_at": "2023-10-17T16:32:40Z",
        "closed_at": "2023-10-17T16:32:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8163",
            "html_url": "https://github.com/run-llama/llama_index/pull/8163",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8163.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8163.patch",
            "merged_at": "2023-10-17T16:32:40Z"
        },
        "body": "# Description\r\n\r\nThe description of an arguement in cohere llm mistakenly mentions anthropic. This fixes that\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8163/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8163/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8162",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8162/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8162/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8162/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8162",
        "id": 1947545037,
        "node_id": "I_kwDOIWuq5850FS3N",
        "number": 8162,
        "title": "[Question]: How do I get a tool to instantly return a tool's output?",
        "user": {
            "login": "kdcokenny",
            "id": 99611484,
            "node_id": "U_kgDOBe_zXA",
            "avatar_url": "https://avatars.githubusercontent.com/u/99611484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kdcokenny",
            "html_url": "https://github.com/kdcokenny",
            "followers_url": "https://api.github.com/users/kdcokenny/followers",
            "following_url": "https://api.github.com/users/kdcokenny/following{/other_user}",
            "gists_url": "https://api.github.com/users/kdcokenny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kdcokenny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kdcokenny/subscriptions",
            "organizations_url": "https://api.github.com/users/kdcokenny/orgs",
            "repos_url": "https://api.github.com/users/kdcokenny/repos",
            "events_url": "https://api.github.com/users/kdcokenny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kdcokenny/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-17T14:17:21Z",
        "updated_at": "2023-10-24T06:32:17Z",
        "closed_at": "2023-10-24T06:32:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHow do I get an agent to instantly return a tool's output when it calls the tool? I know it's possible in Langchain, but is it possible in llamaindex?\r\n\r\nhttps://python.langchain.com/docs/modules/agents/tools/custom_tools#using-tools-to-return-directly\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8162/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8162/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8161",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8161/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8161/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8161/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8161",
        "id": 1946961024,
        "node_id": "I_kwDOIWuq5850DESA",
        "number": 8161,
        "title": "[Feature Request]: ChatML support with LlamaCPP",
        "user": {
            "login": "daaain",
            "id": 69962,
            "node_id": "MDQ6VXNlcjY5OTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/69962?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daaain",
            "html_url": "https://github.com/daaain",
            "followers_url": "https://api.github.com/users/daaain/followers",
            "following_url": "https://api.github.com/users/daaain/following{/other_user}",
            "gists_url": "https://api.github.com/users/daaain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daaain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daaain/subscriptions",
            "organizations_url": "https://api.github.com/users/daaain/orgs",
            "repos_url": "https://api.github.com/users/daaain/repos",
            "events_url": "https://api.github.com/users/daaain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daaain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-10-17T09:23:41Z",
        "updated_at": "2023-10-27T11:29:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nI've been using the [GGUF version](https://huggingface.co/TheBloke/dolphin-2.1-mistral-7B-GGUF) of [Eric Hartford's Dolphin 2.1 Mistral 7B](https://huggingface.co/ehartford/dolphin-2.1-mistral-7b) which is an incredibly good model for RAG even at 4bit.\r\n\r\nIt's using ChatML prompt format though, so with the Llama ones I sometimes got `[/INST]` or `<</SYS>>` at the end of output (but to the model's credit it still works otherwise).\r\n\r\nSo I spent some time figuring out what I need to change and it seems mostly just the constants that feed into the default prompt functions.\r\n\r\nWith `ServiceContext.from_defaults`, `VectorStoreIndex.from_documents` and `index.as_query_engine` it seems `completion_to_prompt` is used only, not `messages_to_prompt`, so haven't tested the latter.\r\n\r\nIt would be great to have some proper support for these, so if you think this is useful and should be part of the library I can try to make it into a pull request.\r\n\r\n```python \r\n# Replacing these\r\n# from llama_index.llms.llama_utils import messages_to_prompt, completion_to_prompt\r\n\r\n# LLama instructions\r\n# <s>[INST] <<SYS>>\r\n# {your_system_message}\r\n# <</SYS>>\r\n\r\n# {user_message_1} [/INST]\r\n\r\n# ChatML instructions\r\n# <|im_start|>system\r\n# You are Dolphin, a helpful AI assistant.<|im_end|>\r\n# <|im_start|>user\r\n# {prompt}<|im_end|>\r\n# <|im_start|>assistant\r\n\r\n# BOS, EOS = \"<s>\", \"</s>\"\r\n# I wasn't sure if the <s> tokens are needed, but the model did report them in verbose mode\r\nBOS, EOS = \"<s>\", \"<|im_end|></s>\"\r\n# B_INST, E_INST = \"[INST]\", \"[/INST]\"\r\n# In theory we need this assistant bit, but it was confusing the model and it printed `<|im_end|>` at the end of the output so not using\r\n# B_INST, E_INST = \"\", \"<|im_end|>\\n<|im_start|>assistant: \"\r\nB_INST, E_INST = \"\", \"<|im_end|>\"\r\n# B_SYS, E_SYS = \"<<SYS>>\\n\", \"\\n<</SYS>>\\n\\n\"\r\nB_SYS, E_SYS = \"<|im_start|>system\\n\", \"<|im_end|>\\n<|im_start|>user\\n\"\r\nDEFAULT_SYSTEM_PROMPT = \"\"\"\\\r\nYou are a helpful, respectful and honest assistant. \\\r\nAlways answer as helpfully as possible and follow ALL given instructions. \\\r\nDo not speculate or make up information. \\\r\nDo not reference any given instructions or context. \\\r\n\"\"\"\r\n\r\n# This is unchanged from messages_to_prompt, just renamed\r\ndef chatml_messages_to_prompt(\r\n    messages: Sequence[ChatMessage], system_prompt: Optional[str] = None\r\n) -> str:\r\n    string_messages: List[str] = []\r\n    if messages[0].role == MessageRole.SYSTEM:\r\n        # pull out the system message (if it exists in messages)\r\n        system_message_str = messages[0].content or \"\"\r\n        messages = messages[1:]\r\n    else:\r\n        system_message_str = system_prompt or DEFAULT_SYSTEM_PROMPT\r\n\r\n    system_message_str = f\"{B_SYS} {system_message_str.strip()} {E_SYS}\"\r\n\r\n    for i in range(0, len(messages), 2):\r\n        # first message should always be a user\r\n        user_message = messages[i]\r\n        assert user_message.role == MessageRole.USER\r\n\r\n        if i == 0:\r\n            # make sure system prompt is included at the start\r\n            str_message = f\"{BOS} {B_INST} {system_message_str} \"\r\n        else:\r\n            # end previous user-assistant interaction\r\n            string_messages[-1] += f\" {EOS}\"\r\n            # no need to include system prompt\r\n            str_message = f\"{BOS} {B_INST} \"\r\n\r\n        # include user message content\r\n        str_message += f\"{user_message.content} {E_INST}\"\r\n\r\n        if len(messages) > (i + 1):\r\n            # if assistant message exists, add to str_message\r\n            assistant_message = messages[i + 1]\r\n            assert assistant_message.role == MessageRole.ASSISTANT\r\n            str_message += f\" {assistant_message.content}\"\r\n\r\n        string_messages.append(str_message)\r\n\r\n    final_message = \"\".join(string_messages)\r\n    # log(final_message)\r\n    return final_message\r\n\r\n# This has whitespace removed from completion_to_prompt, but maybe it doesn't matter\r\ndef chatml_completion_to_prompt(completion: str, system_prompt: Optional[str] = None) -> str:\r\n    system_prompt_str = system_prompt or DEFAULT_SYSTEM_PROMPT\r\n\r\n    final_prompt = (\r\n        f\"{B_INST}{B_SYS}{system_prompt_str.strip()}{E_SYS}\" f\"{completion.strip()}{E_INST}\"\r\n    )\r\n    # log(final_prompt)\r\n    return final_prompt\r\n```\r\n\r\n### Reason\r\n\r\nThere isn't a clean way of changing these prompt tokens, without copy pasting the whole section from the source code.\r\n\r\n### Value of Feature\r\n\r\nThere are more and more open models using ChatML format, so would be good to support it, as especially smaller models get confused if they get the Llama templates.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8161/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8161/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8160",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8160/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8160/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8160/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8160",
        "id": 1946851384,
        "node_id": "I_kwDOIWuq5850Cpg4",
        "number": 8160,
        "title": "[Bug]: EmptyIndex returns \"Empty Response\" on Python 3.9.5",
        "user": {
            "login": "marijnotte",
            "id": 6791447,
            "node_id": "MDQ6VXNlcjY3OTE0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6791447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marijnotte",
            "html_url": "https://github.com/marijnotte",
            "followers_url": "https://api.github.com/users/marijnotte/followers",
            "following_url": "https://api.github.com/users/marijnotte/following{/other_user}",
            "gists_url": "https://api.github.com/users/marijnotte/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marijnotte/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marijnotte/subscriptions",
            "organizations_url": "https://api.github.com/users/marijnotte/orgs",
            "repos_url": "https://api.github.com/users/marijnotte/repos",
            "events_url": "https://api.github.com/users/marijnotte/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marijnotte/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-17T08:26:00Z",
        "updated_at": "2023-10-20T08:44:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nA query on a query engine from an EmptyIndex returns \"Empty Repsonse\" with Python 3.9.5, while it works fine on Python 3.10.\r\n\r\nAlso, on llama-index 0.8.16 did not occur, but I don't know which exact version broke it.\n\n### Version\n\n0.8.45.post1\n\n### Steps to Reproduce\n\nCode:\r\n```\r\nimport openai\r\nfrom llama_index.callbacks import LlamaDebugHandler, CallbackManager\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom llama_index.prompts import PromptTemplate\r\nfrom llama_index import EmptyIndex, LLMPredictor, ServiceContext\r\n\r\nopenai.api_key = \"xxx\"\r\nopenai.log = \"debug\"\r\nllama_debug = LlamaDebugHandler(print_trace_on_end=True)\r\n\r\nindex = EmptyIndex()\r\n\r\nllm_predictor = LLMPredictor(\r\n    llm=ChatOpenAI(\r\n        openai_api_key=\"xxx\",\r\n        temperature=0,\r\n        model_name=\"gpt-4\",\r\n        streaming=True\r\n    )\r\n)\r\n\r\ncallback_manager = CallbackManager([llama_debug])\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, chunk_size=1024, callback_manager=callback_manager)\r\n\r\nquery_engine = index.as_query_engine(\r\n    service_context=service_context,\r\n    streaming=True,\r\n    text_qa_template=PromptTemplate(\"What is a banana?\"),\r\n    simple_template=PromptTemplate(\"What is a banana?\")\r\n)\r\n\r\nresponse = query_engine.query(\"What is a banana?\")\r\n\r\nprint(response)\r\n```\r\n\r\nResponse:\r\n```\r\n**********\r\nTrace: query\r\n    |_query ->  0.000124 seconds\r\n      |_retrieve ->  3.1e-05 seconds\r\n**********\r\nEmpty Response\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8160/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8160/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8159",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8159/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8159/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8159/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8159",
        "id": 1946593393,
        "node_id": "PR_kwDOIWuq585c-S-r",
        "number": 8159,
        "title": "Improve MyScale Hybrid Search and Add `DELETE` for MyScale vector store",
        "user": {
            "login": "mpskex",
            "id": 8456706,
            "node_id": "MDQ6VXNlcjg0NTY3MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8456706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mpskex",
            "html_url": "https://github.com/mpskex",
            "followers_url": "https://api.github.com/users/mpskex/followers",
            "following_url": "https://api.github.com/users/mpskex/following{/other_user}",
            "gists_url": "https://api.github.com/users/mpskex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mpskex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mpskex/subscriptions",
            "organizations_url": "https://api.github.com/users/mpskex/orgs",
            "repos_url": "https://api.github.com/users/mpskex/repos",
            "events_url": "https://api.github.com/users/mpskex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mpskex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-17T05:47:52Z",
        "updated_at": "2023-10-20T13:35:27Z",
        "closed_at": "2023-10-20T13:35:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8159",
            "html_url": "https://github.com/run-llama/llama_index/pull/8159",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8159.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8159.patch",
            "merged_at": "2023-10-20T13:35:27Z"
        },
        "body": "# Description\r\n\r\nThis change is made by @suchme19.\r\n\r\n-  add the delete func of myscale vectorstore  and update the corresponding document\r\n-  adjust the pre search limit ratio about hybrid search to avoid excessively large pre search result\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [X] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8159/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8159/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8158",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8158/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8158/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8158/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8158",
        "id": 1946484457,
        "node_id": "PR_kwDOIWuq585c97dc",
        "number": 8158,
        "title": "Qians/upgrade myscale delete",
        "user": {
            "login": "suchme19",
            "id": 85013118,
            "node_id": "MDQ6VXNlcjg1MDEzMTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/85013118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suchme19",
            "html_url": "https://github.com/suchme19",
            "followers_url": "https://api.github.com/users/suchme19/followers",
            "following_url": "https://api.github.com/users/suchme19/following{/other_user}",
            "gists_url": "https://api.github.com/users/suchme19/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suchme19/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suchme19/subscriptions",
            "organizations_url": "https://api.github.com/users/suchme19/orgs",
            "repos_url": "https://api.github.com/users/suchme19/repos",
            "events_url": "https://api.github.com/users/suchme19/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suchme19/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-17T03:51:35Z",
        "updated_at": "2023-10-17T03:55:44Z",
        "closed_at": "2023-10-17T03:55:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8158",
            "html_url": "https://github.com/run-llama/llama_index/pull/8158",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8158.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8158.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8158/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8158/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8157",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8157/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8157/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8157/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8157",
        "id": 1946335163,
        "node_id": "PR_kwDOIWuq585c9byZ",
        "number": 8157,
        "title": "Update installation.md - fix typo",
        "user": {
            "login": "BrianMcBrayer",
            "id": 7584774,
            "node_id": "MDQ6VXNlcjc1ODQ3NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7584774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BrianMcBrayer",
            "html_url": "https://github.com/BrianMcBrayer",
            "followers_url": "https://api.github.com/users/BrianMcBrayer/followers",
            "following_url": "https://api.github.com/users/BrianMcBrayer/following{/other_user}",
            "gists_url": "https://api.github.com/users/BrianMcBrayer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BrianMcBrayer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BrianMcBrayer/subscriptions",
            "organizations_url": "https://api.github.com/users/BrianMcBrayer/orgs",
            "repos_url": "https://api.github.com/users/BrianMcBrayer/repos",
            "events_url": "https://api.github.com/users/BrianMcBrayer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BrianMcBrayer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-17T01:03:57Z",
        "updated_at": "2023-10-17T16:34:01Z",
        "closed_at": "2023-10-17T16:34:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8157",
            "html_url": "https://github.com/run-llama/llama_index/pull/8157",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8157.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8157.patch",
            "merged_at": "2023-10-17T16:34:01Z"
        },
        "body": "Very small change - just changes a grammar issue\r\n\r\n# Description\r\n\r\nChanges \"this models\" to \"these models\". Very tiny typo and change\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nNo tests -- just a small documentation typo fix.\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8157/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8157/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8156",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8156/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8156/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8156/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8156",
        "id": 1946248757,
        "node_id": "PR_kwDOIWuq585c9JOs",
        "number": 8156,
        "title": "add more document converters",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-16T23:15:19Z",
        "updated_at": "2023-10-17T16:51:01Z",
        "closed_at": "2023-10-17T16:51:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8156",
            "html_url": "https://github.com/run-llama/llama_index/pull/8156",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8156.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8156.patch",
            "merged_at": "2023-10-17T16:51:00Z"
        },
        "body": "# Description\r\n\r\nAdds more to/from integrations on the `Document` format. This is specifically for llama-hub\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8156/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8156/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8154",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8154/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8154/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8154/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8154",
        "id": 1946185231,
        "node_id": "PR_kwDOIWuq585c87Lx",
        "number": 8154,
        "title": "Repr for JSON conversion errors",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-16T22:11:56Z",
        "updated_at": "2023-10-18T00:16:01Z",
        "closed_at": "2023-10-18T00:16:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8154",
            "html_url": "https://github.com/run-llama/llama_index/pull/8154",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8154.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8154.patch",
            "merged_at": "2023-10-18T00:16:00Z"
        },
        "body": "# Description\r\n\r\nUsed a `!r` to help make it clear the boundaries of a bad output in JSON conversion.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8154/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8154/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8153",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8153/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8153/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8153/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8153",
        "id": 1946117461,
        "node_id": "I_kwDOIWuq585z_2VV",
        "number": 8153,
        "title": "[Bug]: LlamaIndex doesn't currently support Python 3.12",
        "user": {
            "login": "yisding",
            "id": 1209314,
            "node_id": "MDQ6VXNlcjEyMDkzMTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1209314?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yisding",
            "html_url": "https://github.com/yisding",
            "followers_url": "https://api.github.com/users/yisding/followers",
            "following_url": "https://api.github.com/users/yisding/following{/other_user}",
            "gists_url": "https://api.github.com/users/yisding/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yisding/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yisding/subscriptions",
            "organizations_url": "https://api.github.com/users/yisding/orgs",
            "repos_url": "https://api.github.com/users/yisding/repos",
            "events_url": "https://api.github.com/users/yisding/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yisding/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "logan-markewich",
                "id": 22285038,
                "node_id": "MDQ6VXNlcjIyMjg1MDM4",
                "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/logan-markewich",
                "html_url": "https://github.com/logan-markewich",
                "followers_url": "https://api.github.com/users/logan-markewich/followers",
                "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
                "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
                "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
                "repos_url": "https://api.github.com/users/logan-markewich/repos",
                "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
                "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-16T21:18:53Z",
        "updated_at": "2023-12-05T01:38:01Z",
        "closed_at": "2023-12-05T01:38:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nLlamaIndex doesn't currently support the latest stable version of Python: 3.12.0.\r\n\r\nI believe we're blocked on this release: https://github.com/aio-libs/aiohttp/issues/7675\n\n### Version\n\n0.8.45.post1\n\n### Steps to Reproduce\n\nInstall Python 3.12.0\r\n\r\npip install llama-index\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8153/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8153/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8152",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8152/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8152/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8152/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8152",
        "id": 1945996847,
        "node_id": "I_kwDOIWuq585z_Y4v",
        "number": 8152,
        "title": "[Question]: Can I run LlamaIndex with structured data using a local Llama-2 model and completely on cpu?",
        "user": {
            "login": "utility-aagrawal",
            "id": 140737044,
            "node_id": "U_kgDOCGN6FA",
            "avatar_url": "https://avatars.githubusercontent.com/u/140737044?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/utility-aagrawal",
            "html_url": "https://github.com/utility-aagrawal",
            "followers_url": "https://api.github.com/users/utility-aagrawal/followers",
            "following_url": "https://api.github.com/users/utility-aagrawal/following{/other_user}",
            "gists_url": "https://api.github.com/users/utility-aagrawal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/utility-aagrawal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/utility-aagrawal/subscriptions",
            "organizations_url": "https://api.github.com/users/utility-aagrawal/orgs",
            "repos_url": "https://api.github.com/users/utility-aagrawal/repos",
            "events_url": "https://api.github.com/users/utility-aagrawal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/utility-aagrawal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-16T20:02:20Z",
        "updated_at": "2023-10-16T20:11:55Z",
        "closed_at": "2023-10-16T20:11:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am trying to use text-to-sql feature of LlamaIndex. However, I can't use openai API because of the confidentiality of my data/schema. Neither will I have access to a gpu in the target deployment environment. I am running it using a local Llama-2 7B chat model via huggingface. Is it possible to run everything on a cpu?\r\n\r\nI tried setting device_map to \"cpu\" when I instantiate HuggingFaceLLM but it doesn't work. Appreciate your help!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8152/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8152/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8151",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8151/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8151/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8151/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8151",
        "id": 1945828567,
        "node_id": "I_kwDOIWuq585z-vzX",
        "number": 8151,
        "title": "[Feature Request]: using line length of 79 in `docs/`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-16T18:18:43Z",
        "updated_at": "2023-10-17T23:26:43Z",
        "closed_at": "2023-10-17T22:34:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "The IPython notebooks in `docs/` currently (as of `llama_index==0.8.42`) use 88 chars (default of `black`).\r\n\r\nHowever, in `docs/` rendering, this means one has to scroll left/right a lot. For example, see the last block in https://gpt-index.readthedocs.io/en/stable/examples/agent/react_agent_with_query_engine.html#build-query-engine-tools\r\n\r\nIt would be nice if one didn't have to scroll for the rendered code blocks:\r\n\r\n- Default code renderings to 88 char width\r\n- `black` uses [PEP 8's 79-char width](https://peps.python.org/pep-0008/#maximum-line-length),",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8151/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8151/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8150",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8150/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8150/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8150/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8150",
        "id": 1945743195,
        "node_id": "I_kwDOIWuq585z-a9b",
        "number": 8150,
        "title": "Denodo connector for Llama-index",
        "user": {
            "login": "zzadiues",
            "id": 64059206,
            "node_id": "MDQ6VXNlcjY0MDU5MjA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64059206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zzadiues",
            "html_url": "https://github.com/zzadiues",
            "followers_url": "https://api.github.com/users/zzadiues/followers",
            "following_url": "https://api.github.com/users/zzadiues/following{/other_user}",
            "gists_url": "https://api.github.com/users/zzadiues/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zzadiues/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zzadiues/subscriptions",
            "organizations_url": "https://api.github.com/users/zzadiues/orgs",
            "repos_url": "https://api.github.com/users/zzadiues/repos",
            "events_url": "https://api.github.com/users/zzadiues/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zzadiues/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5898589294,
                "node_id": "LA_kwDOIWuq588AAAABX5VUbg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/reader",
                "name": "reader",
                "color": "797F5E",
                "default": false,
                "description": ""
            },
            {
                "id": 6129428377,
                "node_id": "LA_kwDOIWuq588AAAABbVenmQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/request%20contribution%20board",
                "name": "request contribution board",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-16T17:30:44Z",
        "updated_at": "2023-11-30T01:55:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nI am unable to find a way of connecting a denodo database to llamaindex. I see that there are database connectors for mysql, postgres, redshift etc but not for denodo. \r\nA functionality like this (see below) \r\n\r\n![image](https://github.com/run-llama/llama_index/assets/64059206/730b7bee-db9d-4a31-939b-86209e9fd859)\r\n\n\n### Reason\n\nPerhaps denodo is not so popular as other data virtualization platforms. it is rather niche. \n\n### Value of Feature\n\nmany organizations now use denodo for storing massive datasets , providing denodo connectivity will greatly enhance the reach of llamaindex and add immense value ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8150/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8150/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8149",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8149/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8149/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8149/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8149",
        "id": 1945624575,
        "node_id": "I_kwDOIWuq585z99__",
        "number": 8149,
        "title": "[Question]: Llama-2 chat with NLSQLTableQueryEngine producing unstable answers?",
        "user": {
            "login": "utility-aagrawal",
            "id": 140737044,
            "node_id": "U_kgDOCGN6FA",
            "avatar_url": "https://avatars.githubusercontent.com/u/140737044?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/utility-aagrawal",
            "html_url": "https://github.com/utility-aagrawal",
            "followers_url": "https://api.github.com/users/utility-aagrawal/followers",
            "following_url": "https://api.github.com/users/utility-aagrawal/following{/other_user}",
            "gists_url": "https://api.github.com/users/utility-aagrawal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/utility-aagrawal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/utility-aagrawal/subscriptions",
            "organizations_url": "https://api.github.com/users/utility-aagrawal/orgs",
            "repos_url": "https://api.github.com/users/utility-aagrawal/repos",
            "events_url": "https://api.github.com/users/utility-aagrawal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/utility-aagrawal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-16T16:18:06Z",
        "updated_at": "2023-10-24T06:32:16Z",
        "closed_at": "2023-10-24T06:32:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI want to implement a text-to-SQL capability using a local model. I am using Llama-2 7B chat with NLSQLTableQueryEngine but the output is unstable:\r\n\r\n**Case 1: Produces wrong output for the right query:**\r\nquery_str = (\r\n    \"Can you tell me number of countries in each region?\"\r\n)\r\nOutput:\r\nSure! Based on the question you provided, the SQL query that answers it is:\r\nSELECT regions.region_name, COUNT(*) as num_countries\r\nFROM regions\r\nJOIN countries ON regions.region_id = countries.region_id\r\nThe results of the query are:\r\n[('Americas', 25)]\r\nThis means that there are 25 countries in the Americas region.\r\n\r\n**Case 2: Produces correct output for a query with typo:**\r\nquery_str = (\r\n    \"Can you tell me number of counbtries in each region?\"\r\n)\r\nOutput:\r\nSure! Based on the SQL query you provided, here is the response for the question \"Can you tell me the number of countries in each region?\":\r\nAmericas | 5\r\nAsia | 6\r\nEurope | 8\r\nMiddle East and Africa | 6\r\n\r\nWhat is your advice to make this work reliably?\r\n\r\nAttaching the notebook as a text file for your reference. \r\n[text2sql_with_local_model.txt](https://github.com/run-llama/llama_index/files/12919281/text2sql_with_local_model.txt)\r\n\r\n\r\nLet me know if you have any questions.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8149/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8149/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8148",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8148",
        "id": 1945527791,
        "node_id": "I_kwDOIWuq585z9mXv",
        "number": 8148,
        "title": "[Feature Request]: Oobabooga API support",
        "user": {
            "login": "CorentinvdBdO",
            "id": 53038558,
            "node_id": "MDQ6VXNlcjUzMDM4NTU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/53038558?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CorentinvdBdO",
            "html_url": "https://github.com/CorentinvdBdO",
            "followers_url": "https://api.github.com/users/CorentinvdBdO/followers",
            "following_url": "https://api.github.com/users/CorentinvdBdO/following{/other_user}",
            "gists_url": "https://api.github.com/users/CorentinvdBdO/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CorentinvdBdO/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CorentinvdBdO/subscriptions",
            "organizations_url": "https://api.github.com/users/CorentinvdBdO/orgs",
            "repos_url": "https://api.github.com/users/CorentinvdBdO/repos",
            "events_url": "https://api.github.com/users/CorentinvdBdO/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CorentinvdBdO/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-16T15:34:08Z",
        "updated_at": "2023-11-01T16:49:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nHi! \r\n\r\nDo you pan to add the oobabooga/text-generation-webui inference API into LlamaIndex LLMs ? i use it a lot to test different models and the easiest way for me would be to plug it directly into LlamaIndex.\r\n\r\nThanks for your efforts!\r\n\r\nPlease forgive me if this is already supported.\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8147",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8147/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8147/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8147/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8147",
        "id": 1944725355,
        "node_id": "I_kwDOIWuq585z6idr",
        "number": 8147,
        "title": "[Bug]: Streaming on REACT chat agent not working as expected",
        "user": {
            "login": "gich2009",
            "id": 83756959,
            "node_id": "MDQ6VXNlcjgzNzU2OTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/83756959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gich2009",
            "html_url": "https://github.com/gich2009",
            "followers_url": "https://api.github.com/users/gich2009/followers",
            "following_url": "https://api.github.com/users/gich2009/following{/other_user}",
            "gists_url": "https://api.github.com/users/gich2009/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gich2009/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gich2009/subscriptions",
            "organizations_url": "https://api.github.com/users/gich2009/orgs",
            "repos_url": "https://api.github.com/users/gich2009/repos",
            "events_url": "https://api.github.com/users/gich2009/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gich2009/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-10-16T09:01:24Z",
        "updated_at": "2023-10-25T16:51:32Z",
        "closed_at": "2023-10-25T15:12:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nThe response from the REACT chat agent is not being streamed properly. The agent seems to return an additional inference block instead of the response from the completed REACT process.\n\n### Version\n\n<=0.8.45.post1\n\n### Steps to Reproduce\n\nRun a react chat agent and stream the output.\n\n### Relevant Logs/Tracbacks\n\n```shell\n$python3 test.py\r\n\r\nHi, how are you?\r\n\r\nResponse: Hello! I'm an AI teacher here to help you learn about the carbon project development process. How can I assist you today?\r\n\r\n carbon\r\n project\r\n development\r\n process\r\n consists\r\n of\r\n several\r\n stages\r\n.\r\n These\r\n stages\r\n include\r\n:\r\n\r\n\r\n1\r\n.\r\n Project\r\n Design\r\n:\r\n This\r\n is\r\n the\r\n initial\r\n stage\r\n where\r\n the\r\n project\r\n is\r\n planned\r\n and\r\n designed\r\n.\r\n\r\n\r\n2\r\n.\r\n Project\r\n Validation\r\n:\r\n In\r\n this\r\n stage\r\n,\r\n the\r\n project\r\n design\r\n is\r\n reviewed\r\n and\r\n validated\r\n to\r\n ensure\r\n its\r\n feasibility\r\n and\r\n compliance\r\n with\r\n relevant\r\n standards\r\n.\r\n\r\n\r\n3\r\n.\r\n Project\r\n Registration\r\n:\r\n Once\r\n the\r\n project\r\n design\r\n is\r\n validated\r\n,\r\n it\r\n needs\r\n to\r\n be\r\n registered\r\n with\r\n the\r\n appropriate\r\n authorities\r\n or\r\n certification\r\n bodies\r\n.\r\n\r\n\r\n4\r\n.\r\n Project\r\n Implementation\r\n:\r\n This\r\n stage\r\n involves\r\n the\r\n actual\r\n implementation\r\n of\r\n the\r\n project\r\n activities\r\n according\r\n to\r\n the\r\n design\r\n and\r\n plan\r\n.\r\n\r\n\r\n5\r\n.\r\n Project\r\n Monitoring\r\n:\r\n During\r\n this\r\n stage\r\n,\r\n the\r\n project\r\n activities\r\n are\r\n monitored\r\n to\r\n ensure\r\n they\r\n are\r\n being\r\n implemented\r\n as\r\n planned\r\n and\r\n to\r\n track\r\n the\r\n project\r\n's\r\n progress\r\n.\r\n\r\n\r\n6\r\n.\r\n Project\r\n Verification\r\n:\r\n After\r\n the\r\n project\r\n activities\r\n are\r\n completed\r\n,\r\n an\r\n independent\r\n third\r\n party\r\n verifies\r\n the\r\n project\r\n's\r\n outcomes\r\n and\r\n emissions\r\n reductions\r\n.\r\n\r\n\r\n7\r\n.\r\n Iss\r\nu\r\nance\r\n:\r\n If\r\n the\r\n project\r\n meets\r\n the\r\n verification\r\n requirements\r\n,\r\n it\r\n is\r\n issued\r\n with\r\n carbon\r\n credits\r\n or\r\n offsets\r\n.\r\n\r\n\r\n8\r\n.\r\n Sales\r\n and\r\n Retirement\r\n:\r\n The\r\n carbon\r\n credits\r\n or\r\n offsets\r\n can\r\n be\r\n sold\r\n to\r\n interested\r\n buyers\r\n,\r\n and\r\n the\r\n retired\r\n credits\r\n are\r\n permanently\r\n removed\r\n from\r\n circulation\r\n.\r\n\r\n\r\nThese\r\n stages\r\n are\r\n interconnected\r\n and\r\n form\r\n a\r\n sequential\r\n process\r\n for\r\n developing\r\n and\r\n implementing\r\n carbon\r\n projects\r\n.\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8147/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8147/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8146",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8146/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8146/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8146/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8146",
        "id": 1944667350,
        "node_id": "I_kwDOIWuq585z6UTW",
        "number": 8146,
        "title": "[Question]: i have huggingface llm depolyed in local file but i still get os.error ",
        "user": {
            "login": "james2v",
            "id": 109932859,
            "node_id": "U_kgDOBo1xOw",
            "avatar_url": "https://avatars.githubusercontent.com/u/109932859?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/james2v",
            "html_url": "https://github.com/james2v",
            "followers_url": "https://api.github.com/users/james2v/followers",
            "following_url": "https://api.github.com/users/james2v/following{/other_user}",
            "gists_url": "https://api.github.com/users/james2v/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/james2v/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/james2v/subscriptions",
            "organizations_url": "https://api.github.com/users/james2v/orgs",
            "repos_url": "https://api.github.com/users/james2v/repos",
            "events_url": "https://api.github.com/users/james2v/events{/privacy}",
            "received_events_url": "https://api.github.com/users/james2v/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-16T08:30:20Z",
        "updated_at": "2023-10-24T06:32:14Z",
        "closed_at": "2023-10-24T06:32:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nOSError: We couldn't connect to 'https://huggingface.co/' to load this file, couldn't find it in the cached files and it looks like BAAI/bge-small-en is not the path to a directory containing a file named config.json.\r\nCheckout your internet connection or see how to run the library in offline mode at 'https://huggingface.co/docs/transformers/installation#offline-mode'.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8146/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8146/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8145",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8145/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8145/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8145/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8145",
        "id": 1944251259,
        "node_id": "PR_kwDOIWuq585c2S6P",
        "number": 8145,
        "title": "normalize embeddings",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-16T02:54:56Z",
        "updated_at": "2023-10-16T16:46:09Z",
        "closed_at": "2023-10-16T16:46:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8145",
            "html_url": "https://github.com/run-llama/llama_index/pull/8145",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8145.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8145.patch",
            "merged_at": "2023-10-16T16:46:08Z"
        },
        "body": "# Description\r\n\r\nCompared to `sentence-transformers`, we were missing the step of normalizing embeddings.\r\n\r\nIn some preliminary testing, non-normalized, normalized, and mixed approaches returned the same nodes for various questions on the pg essay.\r\n\r\nFixes #8143\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested in local test-cases\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8145/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8145/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8144",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8144/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8144/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8144/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8144",
        "id": 1944202956,
        "node_id": "PR_kwDOIWuq585c2IVk",
        "number": 8144,
        "title": "Documenting `LLMMetadata`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-16T02:03:55Z",
        "updated_at": "2023-10-16T20:17:40Z",
        "closed_at": "2023-10-16T20:17:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8144",
            "html_url": "https://github.com/run-llama/llama_index/pull/8144",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8144.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8144.patch",
            "merged_at": "2023-10-16T20:17:39Z"
        },
        "body": "# Description\r\n\r\nAdded `Field`s with `description`s to `LLMMetadata` to help me figure out how to implementing Hugging Face Inference API's `metadata`.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8144/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8144/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8143",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8143/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8143/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8143/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8143",
        "id": 1944190085,
        "node_id": "I_kwDOIWuq585z4fyF",
        "number": 8143,
        "title": "[Question]: LangchainEmbedding with huggingfaceEmbeddings vs native llamaindex huggingfaceembedding",
        "user": {
            "login": "jungwooooo",
            "id": 88812230,
            "node_id": "MDQ6VXNlcjg4ODEyMjMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/88812230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jungwooooo",
            "html_url": "https://github.com/jungwooooo",
            "followers_url": "https://api.github.com/users/jungwooooo/followers",
            "following_url": "https://api.github.com/users/jungwooooo/following{/other_user}",
            "gists_url": "https://api.github.com/users/jungwooooo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jungwooooo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jungwooooo/subscriptions",
            "organizations_url": "https://api.github.com/users/jungwooooo/orgs",
            "repos_url": "https://api.github.com/users/jungwooooo/repos",
            "events_url": "https://api.github.com/users/jungwooooo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jungwooooo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-10-16T01:47:40Z",
        "updated_at": "2023-10-16T16:46:09Z",
        "closed_at": "2023-10-16T16:46:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi. I'm newb on LLM tasks.\r\nI tried to build local LLM system via llamaindex.\r\nbut i got difference result between langchain huggingfaceembedding and native huggingfaceembedding.\r\n\r\nHere are sample codes.\r\nLanghchainEmbedding with HuggingFaceEmbedding\r\n```\r\n# LlamaIndex with Langchain HuggingFaceEmbedding\r\n#!pip install sentence-transformers\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom llama_index import LangchainEmbedding, ServiceContext\r\n\r\nembed_model = LangchainEmbedding(\r\n  HuggingFaceEmbeddings(model_name=\"BAAI/bge-small-en-v1.5\")\r\n)\r\nembeddings = embed_model.get_text_embedding(\"Hello World!\")\r\nprint(len(embeddings))\r\nprint(embeddings[:5])\r\n\r\n[-0.0032757034059613943, -0.011690760031342506, 0.04155919700860977, -0.03814806044101715, 0.024183105677366257]\r\n```\r\nNative ver.\r\n```\r\nfrom llama_index.embeddings import HuggingFaceEmbedding\r\n\r\nembed_model = HuggingFaceEmbedding(model_name='BAAI/bge-small-en-v1.5')\r\nembeddings = embed_model.get_text_embedding(\"Hello World!\")\r\nprint(len(embeddings))\r\nprint(embeddings[:5])\r\n\r\n[-0.030880559235811234, -0.1102105900645256, 0.3917849361896515, -0.3596276342868805, 0.22797785699367523]\r\n```\r\n\r\nAs I know, floating error can occur returning slightly different value. but i found that return of native HugEmbedding is average 10 times of return of LangchainEmbedding(wHug).",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8143/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8143/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8140",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8140/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8140/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8140/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8140",
        "id": 1944051791,
        "node_id": "I_kwDOIWuq585z3-BP",
        "number": 8140,
        "title": "[Bug]: ctransformers not supported as OSS LLM models (from Huggingface)",
        "user": {
            "login": "geoHeil",
            "id": 1694964,
            "node_id": "MDQ6VXNlcjE2OTQ5NjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1694964?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/geoHeil",
            "html_url": "https://github.com/geoHeil",
            "followers_url": "https://api.github.com/users/geoHeil/followers",
            "following_url": "https://api.github.com/users/geoHeil/following{/other_user}",
            "gists_url": "https://api.github.com/users/geoHeil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/geoHeil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/geoHeil/subscriptions",
            "organizations_url": "https://api.github.com/users/geoHeil/orgs",
            "repos_url": "https://api.github.com/users/geoHeil/repos",
            "events_url": "https://api.github.com/users/geoHeil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/geoHeil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Disiok",
                "id": 5567282,
                "node_id": "MDQ6VXNlcjU1NjcyODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Disiok",
                "html_url": "https://github.com/Disiok",
                "followers_url": "https://api.github.com/users/Disiok/followers",
                "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
                "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
                "organizations_url": "https://api.github.com/users/Disiok/orgs",
                "repos_url": "https://api.github.com/users/Disiok/repos",
                "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Disiok/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-10-15T20:47:01Z",
        "updated_at": "2023-10-17T16:37:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nctransformer is not working with the HF adapter of llamaindex:\r\n\r\n\r\nAutoModelForCausalLM.from_pretrained('TheBloke/leo-hessianai-7B-chat-GGUF', model_file=\"leo-hessianai-7b-chat.Q4_K_M.gguf\",  model_type=\"llama\") \r\n\r\nthis is currently failing with TheBloke/leo-hessianai-7B-chat-GGUF does not appear to have a file named pytorch_model.bin, tf_model.h5, model.ckpt or flax_model.msgpack. for the AutoModelForCausalLM which is coming from the normal transformers library which is used by llamaindex?\r\n\r\n\r\nWhen instead loading the model by hand: \r\n\r\n```\r\nmodel = <load model from ctransformers>\r\nllm = HuggingFaceLLM(model=model, ...)\r\n```\r\n\r\n\r\n\r\n\r\n```\r\n123 config_dict = self._model.config.to_dict()\r\n    124 model_context_window = int(\r\n    125     config_dict.get(\"max_position_embeddings\", context_window)\r\n    126 )\r\n    127 if model_context_window and model_context_window < context_window:\r\n\r\nAttributeError: 'Config' object has no attribute 'to_dict'\r\n```\r\n\r\nhttps://github.com/run-llama/llama_index/blob/31d132c56b1836603d48e02786cd29a74a28f527/llama_index/llms/huggingface.py#L136\r\n\r\nProbably the huggingface llm class  needs to be extended and write the init to work\r\n\r\n### Version\r\n\r\n0.8.41\r\n\r\n### Steps to Reproduce\r\n\r\n\r\n```\r\nfrom llama_index.llms import HuggingFaceLLM\r\nfrom ctransformers import AutoModelForCausalLM\r\n\r\nmodel = AutoModelForCausalLM.from_pretrained('TheBloke/leo-hessianai-7B-chat-GGUF', model_file=\"leo-hessianai-7b-chat.Q4_K_M.gguf\",  model_type=\"llama\") \r\nHuggingFaceLLM(model=model)\r\n\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nllm_model.config.__dict__\r\n\r\nllm_model.config.to_dict()\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8140/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8140/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8139",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8139/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8139/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8139/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8139",
        "id": 1944047509,
        "node_id": "I_kwDOIWuq585z38-V",
        "number": 8139,
        "title": "[Documentation]:  Paul Graham Essay example - data path issue",
        "user": {
            "login": "nickknyc",
            "id": 1598572,
            "node_id": "MDQ6VXNlcjE1OTg1NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1598572?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickknyc",
            "html_url": "https://github.com/nickknyc",
            "followers_url": "https://api.github.com/users/nickknyc/followers",
            "following_url": "https://api.github.com/users/nickknyc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickknyc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickknyc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickknyc/subscriptions",
            "organizations_url": "https://api.github.com/users/nickknyc/orgs",
            "repos_url": "https://api.github.com/users/nickknyc/repos",
            "events_url": "https://api.github.com/users/nickknyc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickknyc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "logan-markewich",
                "id": 22285038,
                "node_id": "MDQ6VXNlcjIyMjg1MDM4",
                "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/logan-markewich",
                "html_url": "https://github.com/logan-markewich",
                "followers_url": "https://api.github.com/users/logan-markewich/followers",
                "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
                "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
                "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
                "repos_url": "https://api.github.com/users/logan-markewich/repos",
                "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
                "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-15T20:32:45Z",
        "updated_at": "2023-11-25T01:05:34Z",
        "closed_at": "2023-11-25T01:05:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nI was getting weird quota errors when running the Paul_graham_essay example\r\nhttps://docs.llamaindex.ai/en/stable/getting_started/starter_example.html\r\n\r\nDocs say...\r\nWe now want to navigate to the following folder:\r\n$ cd examples/paul_graham_essay\r\n.... (** NOTE: the explicit instructions to get into the examples/paul_graham_essay folder. The user will create the new .py file in that folder,**)....\r\nBuild and Query Index\r\nCreate a new .py file with the following:\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\nindex = VectorStoreIndex.from_documents(documents)\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\n\r\nThe problem seems to stem from the path to data. Perhaps the docs assume (which it should not) that the user is using a jupyter notebook. On windows, I was able to get it running by changing \r\n\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\nto \r\ndocuments = SimpleDirectoryReader('examples\\paul_graham_essay\\data').load_data()\n\n### Documentation Link\n\nhttps://docs.llamaindex.ai/en/stable/getting_started/starter_example.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8139/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8139/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8138",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8138/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8138/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8138/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8138",
        "id": 1944040307,
        "node_id": "I_kwDOIWuq585z37Nz",
        "number": 8138,
        "title": "[Bug]: Strange response from Retriever",
        "user": {
            "login": "c64er4ever",
            "id": 125486774,
            "node_id": "U_kgDOB3rGtg",
            "avatar_url": "https://avatars.githubusercontent.com/u/125486774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/c64er4ever",
            "html_url": "https://github.com/c64er4ever",
            "followers_url": "https://api.github.com/users/c64er4ever/followers",
            "following_url": "https://api.github.com/users/c64er4ever/following{/other_user}",
            "gists_url": "https://api.github.com/users/c64er4ever/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/c64er4ever/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/c64er4ever/subscriptions",
            "organizations_url": "https://api.github.com/users/c64er4ever/orgs",
            "repos_url": "https://api.github.com/users/c64er4ever/repos",
            "events_url": "https://api.github.com/users/c64er4ever/events{/privacy}",
            "received_events_url": "https://api.github.com/users/c64er4ever/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-15T20:11:02Z",
        "updated_at": "2023-10-15T22:57:13Z",
        "closed_at": "2023-10-15T22:57:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nHi\r\nI am using Retriever to retrieve a list of nodes. For testing purposes I am always using the same query with similarity_top_k=10 and I am more or less getting the same results, with multiple nodes returned by the Retriever with high similarity scores. Today, at one time, I received back only a single node with Similarity of -0.010474686220271237. After repeating the same query, it returned the usual valid reply of multiple nodes with high similarity scores. Is there an explanation why this could happen, or is this a potential issue in the Retriever implementation?\r\n\r\nCode snippet that uses the Retriever:\r\ntest_index = load_index_from_storage(storage_context, index_id=test_index_name)\r\nretriever = test_index.as_retriever(similarity_top_k=10)\r\nnodes = retriever.retrieve(query)\r\nfor node in nodes:\r\n   print(\"Node ID(\" + str(node.node.node_id) + \")\")\r\n   print(\"Similarity(\" + str(node.score) + \")\")\r\n\r\nThanks\r\nGuy\n\n### Version\n\n0.8.36\n\n### Steps to Reproduce\n\nI could not reproduce this issue, it happened to me only once.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8138/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8138/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8137",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8137/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8137/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8137/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8137",
        "id": 1943921751,
        "node_id": "PR_kwDOIWuq585c1PJT",
        "number": 8137,
        "title": "Update README.md by adding Prompting libraries & tools",
        "user": {
            "login": "Wu-Xinyu",
            "id": 77775870,
            "node_id": "MDQ6VXNlcjc3Nzc1ODcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/77775870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Wu-Xinyu",
            "html_url": "https://github.com/Wu-Xinyu",
            "followers_url": "https://api.github.com/users/Wu-Xinyu/followers",
            "following_url": "https://api.github.com/users/Wu-Xinyu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Wu-Xinyu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Wu-Xinyu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Wu-Xinyu/subscriptions",
            "organizations_url": "https://api.github.com/users/Wu-Xinyu/orgs",
            "repos_url": "https://api.github.com/users/Wu-Xinyu/repos",
            "events_url": "https://api.github.com/users/Wu-Xinyu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Wu-Xinyu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-15T14:58:28Z",
        "updated_at": "2023-10-18T21:29:52Z",
        "closed_at": "2023-10-18T21:29:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8137",
            "html_url": "https://github.com/run-llama/llama_index/pull/8137",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8137.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8137.patch",
            "merged_at": null
        },
        "body": "Update README.md by adding Prompting libraries & tools\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8137/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8137/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8135",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8135/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8135/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8135/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8135",
        "id": 1943752295,
        "node_id": "I_kwDOIWuq585z205n",
        "number": 8135,
        "title": "[Bug]: Issue with get_all_ref_doc_info() ",
        "user": {
            "login": "trrystdev",
            "id": 84622054,
            "node_id": "MDQ6VXNlcjg0NjIyMDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/84622054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trrystdev",
            "html_url": "https://github.com/trrystdev",
            "followers_url": "https://api.github.com/users/trrystdev/followers",
            "following_url": "https://api.github.com/users/trrystdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/trrystdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trrystdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trrystdev/subscriptions",
            "organizations_url": "https://api.github.com/users/trrystdev/orgs",
            "repos_url": "https://api.github.com/users/trrystdev/repos",
            "events_url": "https://api.github.com/users/trrystdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trrystdev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-15T06:50:04Z",
        "updated_at": "2023-10-15T15:17:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI was trying to use the get_all_ref_doc_info() in MongoDBDocStore to fetch all the ref_doc_info entries. I keep getting a {} instead of the entries which are there. \r\n\r\nI think this might be to do with this code \r\n\r\n```\r\ndef get_all_ref_doc_info(self) -> Optional[Dict[str, RefDocInfo]]:\r\n        \"\"\"Get a mapping of ref_doc_id -> RefDocInfo for all ingested documents.\"\"\"\r\n        ref_doc_infos = self._kvstore.get_all(collection=self._ref_doc_collection)\r\n        if ref_doc_infos is None:\r\n            return None\r\n\r\n        # TODO: deprecated legacy support\r\n        all_ref_doc_infos = {}\r\n        for doc_id, ref_doc_info in ref_doc_infos.items():\r\n            if \"doc_ids\" in ref_doc_info:\r\n                ref_doc_info[\"node_ids\"] = ref_doc_info.get(\"doc_ids\", [])\r\n                ref_doc_info.pop(\"doc_ids\")\r\n\r\n                ref_doc_info[\"metadata\"] = ref_doc_info.get(\"extra_info\", {})\r\n                ref_doc_info.pop(\"extra_info\")\r\n                all_ref_doc_infos[doc_id] = RefDocInfo(**ref_doc_info)\r\n\r\n        return all_ref_doc_infos\r\n```\r\n\r\nIf the doc_ids dont exist (but node_ids do), the code will always return a {}. Should this code not read as follows?\r\n\r\n```\r\ndef get_all_ref_doc_info(self) -> Optional[Dict[str, RefDocInfo]]:\r\n        \"\"\"Get a mapping of ref_doc_id -> RefDocInfo for all ingested documents.\"\"\"\r\n        ref_doc_infos = self._kvstore.get_all(collection=self._ref_doc_collection)\r\n        if ref_doc_infos is None:\r\n            return None\r\n\r\n        # TODO: deprecated legacy support\r\n        all_ref_doc_infos = {}\r\n        for doc_id, ref_doc_info in ref_doc_infos.items():\r\n            if \"doc_ids\" in ref_doc_info:\r\n                ref_doc_info[\"node_ids\"] = ref_doc_info.get(\"doc_ids\", [])\r\n                ref_doc_info.pop(\"doc_ids\")\r\n\r\n                ref_doc_info[\"metadata\"] = ref_doc_info.get(\"extra_info\", {})\r\n                ref_doc_info.pop(\"extra_info\")\r\n            all_ref_doc_infos[doc_id] = RefDocInfo(**ref_doc_info)\r\n\r\n        return all_ref_doc_infos\r\n```\r\n\r\nOr am I doing something totally wrong here?\n\n### Version\n\nlatest\n\n### Steps to Reproduce\n\nCreate a storage context with MongoDBDataStore - create nodes and add an index.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8135/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8135/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8134",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8134/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8134/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8134/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8134",
        "id": 1943349406,
        "node_id": "I_kwDOIWuq585z1Sie",
        "number": 8134,
        "title": "[Feature Request]: better abstraction for embeddings vs LLMs",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-14T15:39:55Z",
        "updated_at": "2023-10-15T22:58:29Z",
        "closed_at": "2023-10-15T22:58:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nThe Hugging Face Inference API supports chat, complete, and embedding capabilities.\r\n\r\nIt would be nice to be able to define one `class` that can do both what `LLM` and `BaseEmbedding` do.\r\n\r\nSo it means better structuring `LLM` and `BaseEmbedding` so one can:\r\n- Use multiple inheritance (e.g. making embeddings and chat stuff a mixin)\r\n    - This is how LangChain does it: [`Embeddings`](https://github.com/langchain-ai/langchain/blob/v0.0.314/libs/langchain/langchain/schema/embeddings.py#L6)\r\n- Compose in entities that handle separate behaviors (e.g. think how `ReActAgent` handles tools)\r\n    - Model can be given an \"embedder\" and a \"chatter\"\r\n\r\n### Reason\r\n\r\nThe current state, duplicating the same `InferenceClient`/`AsyncInferenceClient` behaviors, leads to less test coverage and more code.\r\n\r\n### Value of Feature\r\n\r\n- Avoid duplication between `llms` and `embeddings` modules\r\n- Clearer separation of what an embedding model needs vs what a chat model needs",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8134/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8134/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8133",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8133/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8133/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8133/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8133",
        "id": 1943104674,
        "node_id": "I_kwDOIWuq585z0Wyi",
        "number": 8133,
        "title": "[Bug]: Token Counter reports incorret completion count for async ops acomplete/achat",
        "user": {
            "login": "embiem",
            "id": 3866457,
            "node_id": "MDQ6VXNlcjM4NjY0NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3866457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/embiem",
            "html_url": "https://github.com/embiem",
            "followers_url": "https://api.github.com/users/embiem/followers",
            "following_url": "https://api.github.com/users/embiem/following{/other_user}",
            "gists_url": "https://api.github.com/users/embiem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/embiem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/embiem/subscriptions",
            "organizations_url": "https://api.github.com/users/embiem/orgs",
            "repos_url": "https://api.github.com/users/embiem/repos",
            "events_url": "https://api.github.com/users/embiem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/embiem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-14T09:01:20Z",
        "updated_at": "2023-10-14T09:08:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nWhen I try to use the `TokenCountingHandler` in a CallbackManager assigned to the OpenAI LLM, and use the async completion/chat APIs, I get token counts for prompts, but the token counts for completion is incorrect.\r\n\r\nLooking into the TokenCountingEvent, it shows that `completion='assistant: None'` for `llm.achat` or `completion='None'` for `llm.acomplete`.\r\n\r\n### Version\r\n\r\nmain/latest\r\n\r\n### Steps to Reproduce\r\n\r\nI have created a red test case in my fork here: https://github.com/embiem/llama_index/blob/embiem/issue-token-counting-async-completion/tests/llms/test_openai.py#L216\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```        response = await llm.acomplete(prompt)\r\n        assert response.text == \"\\n\\nThis is indeed a test\"\r\n>       assert token_counter.llm_token_counts[0].completion == \"\\n\\nThis is indeed a test\"\r\nE       AssertionError: assert 'None' == '\\n\\nThis is indeed a test'\r\nE         + None\r\nE         - \r\nE         - \r\nE         - This is indeed a test```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8133/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8133/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8132",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8132/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8132/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8132/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8132",
        "id": 1942814743,
        "node_id": "I_kwDOIWuq585zzQAX",
        "number": 8132,
        "title": "[Bug]: response_syntesizers throws an error when asking a question that retrieves ",
        "user": {
            "login": "mikeldking",
            "id": 5640648,
            "node_id": "MDQ6VXNlcjU2NDA2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5640648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeldking",
            "html_url": "https://github.com/mikeldking",
            "followers_url": "https://api.github.com/users/mikeldking/followers",
            "following_url": "https://api.github.com/users/mikeldking/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeldking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeldking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeldking/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeldking/orgs",
            "repos_url": "https://api.github.com/users/mikeldking/repos",
            "events_url": "https://api.github.com/users/mikeldking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeldking/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-14T00:28:53Z",
        "updated_at": "2023-11-07T15:48:46Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nWhen using an index as a query_engine and you ask a question that is not pertained in the index, a stack trace occurs.\r\n<img width=\"1899\" alt=\"Screenshot 2023-10-13 at 6 26 50\u202fPM\" src=\"https://github.com/run-llama/llama_index/assets/5640648/bb8d69d2-4814-4042-a299-301f881404d1\">\r\n\r\n\r\n### Version\r\n\r\n0.8.45.post1\r\n\r\n### Steps to Reproduce\r\n\r\nFollow this notebook and ask a silly question like \"Why should I work?\"\r\nhttps://colab.research.google.com/github/Arize-ai/phoenix/blob/main/tutorials/tracing/llama_index_tracing_tutorial.ipynb\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-34-bc77f716f3fb> in <cell line: 1>()\r\n----> 1 response = query_engine.query(\"Why should I go to work\")\r\n      2 print(response)\r\n\r\n3 frames\r\n/usr/local/lib/python3.10/dist-packages/llama_index/response_synthesizers/base.py in _prepare_response_output(self, response_str, source_nodes)\r\n    114                 metadata=response_metadata,\r\n    115             )\r\n--> 116         if isinstance(response_str, self._output_cls):\r\n    117             return PydanticResponse(\r\n    118                 response_str, source_nodes=source_nodes, metadata=response_metadata\r\n\r\nTypeError: isinstance() arg 2 must be a type, a tuple of types, or a union\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8132/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8132/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8131",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8131/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8131/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8131/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8131",
        "id": 1942720798,
        "node_id": "PR_kwDOIWuq585cxyvw",
        "number": 8131,
        "title": "`react_agent_with_query_engine` more intuitive ordering",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-13T22:23:47Z",
        "updated_at": "2023-10-13T23:19:15Z",
        "closed_at": "2023-10-13T23:19:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8131",
            "html_url": "https://github.com/run-llama/llama_index/pull/8131",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8131.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8131.patch",
            "merged_at": "2023-10-13T23:19:14Z"
        },
        "body": "# Description\r\n\r\nI got confused by the instruct GPT being next to non-instruct GPT.  The instruct GPT should be introduced later in the notebook, where it actually gets used.\r\n\r\nCloses https://github.com/run-llama/llama_index/issues/8127\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8131/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8131/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8130",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8130/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8130/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8130/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8130",
        "id": 1942684090,
        "node_id": "I_kwDOIWuq585zywG6",
        "number": 8130,
        "title": "[Bug]: Static Value from Example Showing up in Sub Question Query Engine without using Example Data",
        "user": {
            "login": "scottrpoulin",
            "id": 27975135,
            "node_id": "MDQ6VXNlcjI3OTc1MTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/27975135?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottrpoulin",
            "html_url": "https://github.com/scottrpoulin",
            "followers_url": "https://api.github.com/users/scottrpoulin/followers",
            "following_url": "https://api.github.com/users/scottrpoulin/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottrpoulin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottrpoulin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottrpoulin/subscriptions",
            "organizations_url": "https://api.github.com/users/scottrpoulin/orgs",
            "repos_url": "https://api.github.com/users/scottrpoulin/repos",
            "events_url": "https://api.github.com/users/scottrpoulin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottrpoulin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-13T21:48:37Z",
        "updated_at": "2023-10-13T23:10:17Z",
        "closed_at": "2023-10-13T23:10:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nReceiving KeyError: 'uber_10k'\r\nError occurs when trying to query sub question query engine. Collection of Sub Question Query Engines were NOT built with any example documents.\r\n\r\n\n\n### Version\n\n0.8.43\n\n### Steps to Reproduce\n\nlist_of_values = ['a','b','c']\r\nquery_engine_tools = []\r\nllm = LlamaCPP(\r\n        model_url=\"https://huggingface.co/TheBloke/Llama-2-13B-chat-GGUF/resolve/main/llama-2-13b-chat.Q4_0.gguf\",\r\n        temperature=0.01,\r\n        max_new_tokens=256,\r\n        context_window=3900,\r\n        generate_kwargs={},\r\n        model_kwargs={\"n_gpu_layers\": 0},\r\n        verbose=True,\r\n    )\r\nservice_context = ServiceContext.from_defaults(llm=llm, embed_model=embeddings)\r\n\r\nfor value in list_of_values:\r\n        docs = SimpleDirectoryReader(cfg.PATH_TO_DATA+\"/\"+value).load_data()\r\n        vector_index = VectorStoreIndex.from_documents(docs,service_context=service_context)\r\n        query_engine = vector_index.as_query_engine()\r\n        query_engine_tool = QueryEngineTool(\r\n            query_engine=query_engine,\r\n            metadata=ToolMetadata(name=f\"{value}\",\r\n                                  description=\"Provides information on value\" + value)\r\n        )\r\n        query_engine_tools.append(query_engine_tool)\r\n\r\nresponse_synthesizer = get_response_synthesizer(\r\n        response_mode=ResponseMode.COMPACT,\r\n    )\r\n\r\nfinal_query_engine = SubQuestionQueryEngine.from_defaults(query_engine_tools=query_engine_tools,\r\n                                                            service_context=service_context,\r\n                                                            response_synthesizer=response_synthesizer,\r\n                                                            use_async=False)\r\nquery = \"What documents use the word hello?\"\r\nfinal_query_engine.query(query)\n\n### Relevant Logs/Tracbacks\n\n```shell\n/llama_index/indices/query/base.py\", line 23, in query\r\nreturn self._query(str_or_query_bundle)\r\n/llama_index/query_engine/sub_question_query_engine.py\", line 141, in _query\r\nqa_pairs_all = [\r\n/llama_index/query_engine/sub_question_query_engine.py\", line 142, in <listcomp>\r\nself._query_subq(sub_q, color=colors[str(ind)])\r\n/llama_index/query_engine/sub_question_query_engine.py\", line 245, in _query_subq\r\nquery_engine = self._query_engines[sub_q.tool_name]\r\nKeyError: 'uber_10k'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8130/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8130/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8129",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8129/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8129/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8129/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8129",
        "id": 1942657724,
        "node_id": "I_kwDOIWuq585zypq8",
        "number": 8129,
        "title": "[Bug]: ",
        "user": {
            "login": "dougsmithstpete",
            "id": 2352696,
            "node_id": "MDQ6VXNlcjIzNTI2OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2352696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dougsmithstpete",
            "html_url": "https://github.com/dougsmithstpete",
            "followers_url": "https://api.github.com/users/dougsmithstpete/followers",
            "following_url": "https://api.github.com/users/dougsmithstpete/following{/other_user}",
            "gists_url": "https://api.github.com/users/dougsmithstpete/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dougsmithstpete/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dougsmithstpete/subscriptions",
            "organizations_url": "https://api.github.com/users/dougsmithstpete/orgs",
            "repos_url": "https://api.github.com/users/dougsmithstpete/repos",
            "events_url": "https://api.github.com/users/dougsmithstpete/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dougsmithstpete/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Disiok",
                "id": 5567282,
                "node_id": "MDQ6VXNlcjU1NjcyODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Disiok",
                "html_url": "https://github.com/Disiok",
                "followers_url": "https://api.github.com/users/Disiok/followers",
                "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
                "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
                "organizations_url": "https://api.github.com/users/Disiok/orgs",
                "repos_url": "https://api.github.com/users/Disiok/repos",
                "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Disiok/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-13T21:20:13Z",
        "updated_at": "2023-10-15T23:02:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nMulti-Document Agents. \r\n\r\nYou need to add additional code for OpenAI Key under setup and demo\r\n\r\nCurrent:\r\nllm = OpenAI(temperature=0, model=\"gpt-3.5-turbo\")\r\nservice_context = ServiceContext.from_defaults(llm=llm)\r\n\r\nRecommended:\r\nimport openai\r\n\r\n# Set the API key\r\nopenai.api_key = <Your secret key>\r\n\r\nllm = OpenAI(temperature=0, model=\"gpt-3.5-turbo\")\r\n\r\nservice_context = ServiceContext.from_defaults(llm=llm)\n\n### Version\n\nllama_index-0.8.44-py3-none-any.whl\n\n### Steps to Reproduce\n\nRun\r\n\r\nllm = OpenAI(temperature=0, model=\"gpt-3.5-turbo\")\r\nservice_context = ServiceContext.from_defaults(llm=llm)\r\n\r\nwill throw an error of no API Key\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8129/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8129/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8128",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8128/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8128/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8128/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8128",
        "id": 1942645654,
        "node_id": "PR_kwDOIWuq585cxkAl",
        "number": 8128,
        "title": "Logan/add notebook",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-13T21:09:07Z",
        "updated_at": "2023-10-13T21:09:59Z",
        "closed_at": "2023-10-13T21:09:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8128",
            "html_url": "https://github.com/run-llama/llama_index/pull/8128",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8128.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8128.patch",
            "merged_at": "2023-10-13T21:09:58Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8128/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8128/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8127",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8127/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8127/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8127/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8127",
        "id": 1942627462,
        "node_id": "I_kwDOIWuq585zyiSG",
        "number": 8127,
        "title": "[Documentation]: documenting why GPT instruct in ReActAgent",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-13T20:50:25Z",
        "updated_at": "2023-10-13T22:26:04Z",
        "closed_at": "2023-10-13T22:26:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\r\n\r\nJust looking to understand the details of the `ReActAgent` notebook.\r\n\r\nThe request is to add comments explaining why one uses `gpt-3.5-turbo-instruct` vs `gpt-3.5-turbo-0613` with the `ReActAgent`.\r\n\r\nThanks in advance!  Happy to open a PR if someone just comments why\r\n\r\n### Documentation Link\r\n\r\nhttps://gpt-index.readthedocs.io/en/stable/examples/agent/react_agent_with_query_engine.html#setup-react-agent",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8127/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8127/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8126",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8126/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8126/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8126/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8126",
        "id": 1942567374,
        "node_id": "PR_kwDOIWuq585cxUim",
        "number": 8126,
        "title": "[version] bump to v0.8.45",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-13T20:05:19Z",
        "updated_at": "2023-10-18T04:59:02Z",
        "closed_at": "2023-10-13T20:15:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8126",
            "html_url": "https://github.com/run-llama/llama_index/pull/8126",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8126.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8126.patch",
            "merged_at": "2023-10-13T20:15:59Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8126/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8126/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8125",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8125/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8125/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8125/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8125",
        "id": 1942541762,
        "node_id": "PR_kwDOIWuq585cxO_k",
        "number": 8125,
        "title": "Simplifying `ReActAgent` and missing `super()`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-13T19:41:25Z",
        "updated_at": "2023-10-15T00:05:42Z",
        "closed_at": "2023-10-15T00:05:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8125",
            "html_url": "https://github.com/run-llama/llama_index/pull/8125",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8125.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8125.patch",
            "merged_at": "2023-10-15T00:05:41Z"
        },
        "body": "# Description\r\n\r\n- Added missing `super().__init__` to `ReActAgent` to fix IDE warning\r\n- Less locals in `from_tools` implementation\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8125/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8125/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8124",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8124/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8124/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8124/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8124",
        "id": 1942540219,
        "node_id": "PR_kwDOIWuq585cxOy8",
        "number": 8124,
        "title": "Fix Docs error due to cross_encoder_finetuning notebook",
        "user": {
            "login": "bhavishpahwa",
            "id": 108733252,
            "node_id": "U_kgDOBnsjRA",
            "avatar_url": "https://avatars.githubusercontent.com/u/108733252?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhavishpahwa",
            "html_url": "https://github.com/bhavishpahwa",
            "followers_url": "https://api.github.com/users/bhavishpahwa/followers",
            "following_url": "https://api.github.com/users/bhavishpahwa/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhavishpahwa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhavishpahwa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhavishpahwa/subscriptions",
            "organizations_url": "https://api.github.com/users/bhavishpahwa/orgs",
            "repos_url": "https://api.github.com/users/bhavishpahwa/repos",
            "events_url": "https://api.github.com/users/bhavishpahwa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhavishpahwa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-13T19:40:45Z",
        "updated_at": "2023-10-13T19:58:32Z",
        "closed_at": "2023-10-13T19:58:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8124",
            "html_url": "https://github.com/run-llama/llama_index/pull/8124",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8124.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8124.patch",
            "merged_at": "2023-10-13T19:58:28Z"
        },
        "body": "# Description\r\n\r\nThis change fixes the error in llamaindex docs due to addition of cross_encoder_finetuning notebook.  Due to all major sections being on the same level as the notebook title they are also reflected in the llamaindex docs content sidebar. This change pushes them to sub-section level and reduces the respective level for each subsection.\r\n\r\nFixes # (issue)\r\nhttps://gpt-index.readthedocs.io/en/latest/examples/finetuning/cross_encoder_finetuning/cross_encoder_finetuning.html\r\n<img width=\"237\" alt=\"Screenshot 2023-10-14 at 1 07 31 AM\" src=\"https://github.com/run-llama/llama_index/assets/108733252/bf2fc323-ec42-48d7-a053-9a14cf0a19f5\">\r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8124/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8124/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8123",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8123/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8123/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8123/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8123",
        "id": 1942518711,
        "node_id": "I_kwDOIWuq585zyHu3",
        "number": 8123,
        "title": "[Bug]: the custom id_ for Document is not displayed in Pinecone",
        "user": {
            "login": "bilyalov",
            "id": 25269937,
            "node_id": "MDQ6VXNlcjI1MjY5OTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/25269937?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bilyalov",
            "html_url": "https://github.com/bilyalov",
            "followers_url": "https://api.github.com/users/bilyalov/followers",
            "following_url": "https://api.github.com/users/bilyalov/following{/other_user}",
            "gists_url": "https://api.github.com/users/bilyalov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bilyalov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bilyalov/subscriptions",
            "organizations_url": "https://api.github.com/users/bilyalov/orgs",
            "repos_url": "https://api.github.com/users/bilyalov/repos",
            "events_url": "https://api.github.com/users/bilyalov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bilyalov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-13T19:31:18Z",
        "updated_at": "2023-10-13T20:13:07Z",
        "closed_at": "2023-10-13T19:34:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nWhen I save a document to pinecone with my custom ID -  I don't see my ID in pinecone. Instead, I see the ID that llama creates by default (uuid4 string)\r\n\r\n### Version\r\n\r\n0.8.14\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Document with custom id_ (by default, this is the uuid4 string).\r\n```\r\ndoc = Document(id_=\"aHR0cHM6Ly9jaGFpbmZ\", ...)\r\n\r\nVectorStoreIndex.from_documents([doc], service_context=service_context, storage_context=storage_context)\r\n```\r\n2. After uploading the Document to Pinecone via VectorStoreIndex, in the Pinecone panel I see that the document has an ID as a uuid4 string instead of my custom ID, but the other id fields (doc_id, document_id, ref_doc_id) they have my own ID\r\n\r\n_\"_node_content\" also has the same ID that the vector has, but it's not my own ID._\r\n\r\nResult from Pinecone:\r\n```\r\nID\r\n76445bd0-8688-4e63-b805-96e373335b6f\r\n\r\nVALUES\r\n-0.00946603529, 0.016899189, -0.0179087\r\n\r\n_node_content: \"{\\\"id_\\\": \\\"76445bd0-8688-4e63-b805-96e373335b6f\\\", ...\r\nchunk_id: 4\r\ndoc_id: \"aHR0cHM6Ly9jaGFpbmZ\"\r\ndocument_id: \"aHR0cHM6Ly9jaGFpbmZ\"\r\nref_doc_id: \"aHR0cHM6Ly9jaGFpbmZ\"\r\n```\r\n\r\nAs you may have already noticed, a new ID appeared from somewhere as a UUID-4 string, and at the same time this ID is also in `_node_content`. But My Own ID is saved into doc_id, document_id and ref_doc_id, although it is expected from the sources that this `id_` will be used as Record ID when inserting a document into Pinecone\r\n\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8123/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8123/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8122",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8122/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8122/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8122/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8122",
        "id": 1942479670,
        "node_id": "PR_kwDOIWuq585cxDAM",
        "number": 8122,
        "title": "add support for text-embeddings inference",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-13T18:58:14Z",
        "updated_at": "2023-10-13T19:57:00Z",
        "closed_at": "2023-10-13T19:56:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8122",
            "html_url": "https://github.com/run-llama/llama_index/pull/8122",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8122.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8122.patch",
            "merged_at": "2023-10-13T19:56:59Z"
        },
        "body": "# Description\r\n\r\nRecently released: https://github.com/huggingface/text-embeddings-inference\r\n\r\nThis PR adds support\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8122/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8122/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8121",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8121/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8121/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8121/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8121",
        "id": 1942471824,
        "node_id": "PR_kwDOIWuq585cxBTc",
        "number": 8121,
        "title": "[IGNORE] Test",
        "user": {
            "login": "aulorbe",
            "id": 18585860,
            "node_id": "MDQ6VXNlcjE4NTg1ODYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/18585860?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aulorbe",
            "html_url": "https://github.com/aulorbe",
            "followers_url": "https://api.github.com/users/aulorbe/followers",
            "following_url": "https://api.github.com/users/aulorbe/following{/other_user}",
            "gists_url": "https://api.github.com/users/aulorbe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aulorbe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aulorbe/subscriptions",
            "organizations_url": "https://api.github.com/users/aulorbe/orgs",
            "repos_url": "https://api.github.com/users/aulorbe/repos",
            "events_url": "https://api.github.com/users/aulorbe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aulorbe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-13T18:51:11Z",
        "updated_at": "2023-10-15T22:37:26Z",
        "closed_at": "2023-10-15T22:37:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8121",
            "html_url": "https://github.com/run-llama/llama_index/pull/8121",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8121.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8121.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8121/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8121/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8120",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8120/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8120/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8120/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8120",
        "id": 1942276787,
        "node_id": "PR_kwDOIWuq585cwbtE",
        "number": 8120,
        "title": "`CompletionResponse` docs on fields",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-13T16:46:10Z",
        "updated_at": "2023-10-13T23:21:03Z",
        "closed_at": "2023-10-13T23:21:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8120",
            "html_url": "https://github.com/run-llama/llama_index/pull/8120",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8120.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8120.patch",
            "merged_at": "2023-10-13T23:21:02Z"
        },
        "body": "# Description\r\n\r\nAdds a docstring to `CompletionResponse` for its fields, coming from https://github.com/run-llama/llama_index/pull/8098#discussion_r1358487181.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8120/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8120/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8119",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8119/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8119/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8119/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8119",
        "id": 1942196412,
        "node_id": "PR_kwDOIWuq585cwKHv",
        "number": 8119,
        "title": "let huggingface embeddings load",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-13T15:47:06Z",
        "updated_at": "2023-10-13T15:57:47Z",
        "closed_at": "2023-10-13T15:57:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8119",
            "html_url": "https://github.com/run-llama/llama_index/pull/8119",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8119.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8119.patch",
            "merged_at": "2023-10-13T15:57:46Z"
        },
        "body": "# Description\r\n\r\nThis fixes a small bug where the huggingface embeddings were not added to the load function for embeddings classes.\r\n\r\nFixes #8111 \r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8119/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8119/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8118",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8118/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8118/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8118/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8118",
        "id": 1942154955,
        "node_id": "I_kwDOIWuq585zwu7L",
        "number": 8118,
        "title": "[Bug]: from llama_index.embeddings import OpenAIEmbedding taking too long to import",
        "user": {
            "login": "MrKimmich",
            "id": 64669814,
            "node_id": "MDQ6VXNlcjY0NjY5ODE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/64669814?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MrKimmich",
            "html_url": "https://github.com/MrKimmich",
            "followers_url": "https://api.github.com/users/MrKimmich/followers",
            "following_url": "https://api.github.com/users/MrKimmich/following{/other_user}",
            "gists_url": "https://api.github.com/users/MrKimmich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MrKimmich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MrKimmich/subscriptions",
            "organizations_url": "https://api.github.com/users/MrKimmich/orgs",
            "repos_url": "https://api.github.com/users/MrKimmich/repos",
            "events_url": "https://api.github.com/users/MrKimmich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MrKimmich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-13T15:18:54Z",
        "updated_at": "2023-10-14T07:07:30Z",
        "closed_at": "2023-10-14T07:07:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nimport statement `from llama_index.embeddings import OpenAIEmbedding` taking too long. Because of that getting timeouts in aws python lambda\n\n### Version\n\n0.8.41\n\n### Steps to Reproduce\n\n1. Install llama-index in aws python lambda \r\n2. try importing OpenAIEmbedding from llama_index.embeddings\r\n3. Also place logs to check before and after import statement to check import time. Sharing my import time here\r\n [INFO]\t2023-10-13T15:00:52.013Z\t\tOpenAIEmbedding imported in 11.241815567016602 seconds\r\n\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8118/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8118/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8117",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8117/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8117/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8117/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8117",
        "id": 1942084377,
        "node_id": "I_kwDOIWuq585zwdsZ",
        "number": 8117,
        "title": "[Bug]:issue with redis vector store index?",
        "user": {
            "login": "ashokrayapati",
            "id": 47033120,
            "node_id": "MDQ6VXNlcjQ3MDMzMTIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/47033120?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashokrayapati",
            "html_url": "https://github.com/ashokrayapati",
            "followers_url": "https://api.github.com/users/ashokrayapati/followers",
            "following_url": "https://api.github.com/users/ashokrayapati/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashokrayapati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashokrayapati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashokrayapati/subscriptions",
            "organizations_url": "https://api.github.com/users/ashokrayapati/orgs",
            "repos_url": "https://api.github.com/users/ashokrayapati/repos",
            "events_url": "https://api.github.com/users/ashokrayapati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashokrayapati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-10-13T14:36:09Z",
        "updated_at": "2023-10-17T08:01:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nset_global_service_context(service_context = service_context)\r\nvector_store=RedisVectorStore(index_name=folderpath[i],index_prefix=\"llama_index\",redis_url=configdata[\"REDIS_URL\"],overwrite=False)\r\nloaded_index = VectorStoreIndex.from_vector_store(vector_store,service_context=service_context)\r\nquery_engine = loaded_index.as_query_engine(similarity_top_k= 3,streaming=True)    \r\nresponse = query_engine.query(input_txt)    \r\n https://gpt-index.readthedocs.io/en/latest/examples/vector_stores/RedisIndexDemo.html\r\n\r\n\n\n### Version\n\n0.8.44\n\n### Steps to Reproduce\n\nRetriever = loading_index.as_retriever()\r\nRetriever.retrieve(input_txt)\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8117/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8117/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8116",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8116/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8116/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8116/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8116",
        "id": 1942038521,
        "node_id": "I_kwDOIWuq585zwSf5",
        "number": 8116,
        "title": "[Question]: Need help with RAG over YAML/OPENAPI Specification API documentation",
        "user": {
            "login": "hpsc3",
            "id": 144791741,
            "node_id": "U_kgDOCKFYvQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/144791741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hpsc3",
            "html_url": "https://github.com/hpsc3",
            "followers_url": "https://api.github.com/users/hpsc3/followers",
            "following_url": "https://api.github.com/users/hpsc3/following{/other_user}",
            "gists_url": "https://api.github.com/users/hpsc3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hpsc3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hpsc3/subscriptions",
            "organizations_url": "https://api.github.com/users/hpsc3/orgs",
            "repos_url": "https://api.github.com/users/hpsc3/repos",
            "events_url": "https://api.github.com/users/hpsc3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hpsc3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-13T14:09:10Z",
        "updated_at": "2023-10-24T06:32:13Z",
        "closed_at": "2023-10-24T06:32:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI want to chat with an openapi yaml specification file. The idea is that the user will ask questions about the api and the chatbot should answer from the knowledge about the api from the api specification. For eg. 'How do get a list of all accounts'-> A query engine should retrieve this. I am trying to figure our a loader for YAML files, and I found OPENAPITOOL on llama_hub, but it appears to be designed to work with agents and not query engines. I tried searching the document but did not find any YAML loaders for doing normal RAG. Any assistance over this would be appreciated. If there is any existing code examples that achieve this, that would be great to.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8116/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8116/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8114",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8114/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8114/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8114/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8114",
        "id": 1941984550,
        "node_id": "I_kwDOIWuq585zwFUm",
        "number": 8114,
        "title": "[Question]: LlamaIndex Docugami webinar documentations",
        "user": {
            "login": "utility-aagrawal",
            "id": 140737044,
            "node_id": "U_kgDOCGN6FA",
            "avatar_url": "https://avatars.githubusercontent.com/u/140737044?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/utility-aagrawal",
            "html_url": "https://github.com/utility-aagrawal",
            "followers_url": "https://api.github.com/users/utility-aagrawal/followers",
            "following_url": "https://api.github.com/users/utility-aagrawal/following{/other_user}",
            "gists_url": "https://api.github.com/users/utility-aagrawal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/utility-aagrawal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/utility-aagrawal/subscriptions",
            "organizations_url": "https://api.github.com/users/utility-aagrawal/orgs",
            "repos_url": "https://api.github.com/users/utility-aagrawal/repos",
            "events_url": "https://api.github.com/users/utility-aagrawal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/utility-aagrawal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-13T13:37:29Z",
        "updated_at": "2023-10-13T13:43:29Z",
        "closed_at": "2023-10-13T13:43:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi All,\r\n\r\nI watched your webinar with Docugami that mentioned that their notebooks would be added to LlamaIndex but I couldn't find them. I am looking for directions on how to use local models with LlamaIndex. Could you please share those notebooks?\r\n\r\nThanks!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8114/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8114/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8113",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8113/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8113/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8113/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8113",
        "id": 1941879699,
        "node_id": "I_kwDOIWuq585zvruT",
        "number": 8113,
        "title": "[Question]: Using Prompt Helper but stil exceeding LLM's maximum context length ",
        "user": {
            "login": "jorrgme",
            "id": 10991429,
            "node_id": "MDQ6VXNlcjEwOTkxNDI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/10991429?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorrgme",
            "html_url": "https://github.com/jorrgme",
            "followers_url": "https://api.github.com/users/jorrgme/followers",
            "following_url": "https://api.github.com/users/jorrgme/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorrgme/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorrgme/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorrgme/subscriptions",
            "organizations_url": "https://api.github.com/users/jorrgme/orgs",
            "repos_url": "https://api.github.com/users/jorrgme/repos",
            "events_url": "https://api.github.com/users/jorrgme/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorrgme/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-13T12:42:40Z",
        "updated_at": "2023-10-24T06:32:10Z",
        "closed_at": "2023-10-24T06:32:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI've been struggling with llama_index's PromptHelper and can't find a solution anywhere on the Internet.\r\n\r\nBut first let me talk about my use case:\r\n\r\nI'm trying to use Azure OpenAI's GPT-3.5 model to ask the model to make a summary of comments posted by users in an Instagram post, passing in the prompt as a system message all the comments and then asking a question like: \"What's the general sentiment in the comments?\".\r\n\r\nThe problem here is that there are so many comments and in many publications I exceed gpt-35-turbo-16k's 16384 tokens maximum context length. Trying to solve this issue I've been working with llama_index's PromptHelper that, if I'm not mistaken helps divide the prompt in chunks in this kind of situations. The problem is that I keep getting the same error no matter in how many ways I change PromptHelper's parameters:\r\n\r\n```\r\nInvalidRequestError: This model's maximum context length is 16384 tokens. However, your messages resulted in 22272 tokens. Please reduce the length of the messages.\r\n```\r\n\r\nI'm pretty sure I'm messing it up in something in my code but can't find where, and llama_index's documentation is not helping me much.\r\n\r\nThanks in advance for any help.\r\n\r\nHere is my code, just in case someone has any idea of what I'm doing wrong:\r\n\r\n```python\r\nfrom llama_index.llms import AzureOpenAI\r\nfrom llama_index.llms.base import ChatMessage\r\nfrom llama_index.chat_engine import SimpleChatEngine\r\nfrom llama_index import ServiceContext, PromptHelper\r\nfrom llama_index.text_splitter import TokenTextSplitter\r\nfrom llama_index.node_parser import SimpleNodeParser\r\n\r\nimport pandas as pd\r\nimport glob\r\nimport os\r\n\r\ncsv_files = glob.glob('data/csv/*.csv')\r\ndf = pd.read_csv(\r\n    csv_files[1],\r\n    sep='|'\r\n)\r\ncontext_comments = df['COMENTARIO'].to_list()\r\n\r\ncontext_message = f\"\"\"Estos son los comentarios que los usuarios han dejado en una publicaci\u00f3n de una empresa de supermercados en diferentes redes sociales: \\n \\\r\n                                        {context_comments}. \\n \\\r\n                                        Se te van a hacer preguntas sobre los comentarios de la misma, a las que deber\u00e1s responder con precisi\u00f3n, \\\r\n                                        como si estuvieras redactando un informe para los responsables de la publicaci\u00f3n, que quieren saber la acogida que ha tenido.\"\"\"\r\nprefix_messages = [ChatMessage(content=context_message, role=\"system\")]\r\n\r\n# Define the LLM\r\nllm = AzureOpenAI(\r\n    model=MODEL_NAME,\r\n    engine=DEPLOYMENT_NAME,\r\n    api_key=AZURE_OPENAI_API_KEY,\r\n    api_base=AZURE_BASE_URL,\r\n    api_type=\"azure\",\r\n    api_version=\"2023-05-15\"\r\n)\r\n\r\nnode_parser = SimpleNodeParser.from_defaults(\r\n  text_splitter=TokenTextSplitter(chunk_size=512, chunk_overlap=20)\r\n)\r\n\r\n# Define prompt helper\r\nprompt_helper = PromptHelper(\r\n  context_window=16384,\r\n  num_output=1500,\r\n  chunk_overlap_ratio=0.2,\r\n  separator=\"\\n\"\r\n)\r\n\r\n#\u00a0Create the service context\r\nservice_context = ServiceContext.from_defaults(\r\n    llm=llm,\r\n    prompt_helper=prompt_helper,\r\n    node_parser=node_parser,\r\n    embed_model=None,\r\n    chunk_size=512,\r\n    context_window=16384,\r\n    num_output=1500\r\n)\r\n\r\n# Use SimpleChatEngine to mix it all\r\nchat_engine = SimpleChatEngine.from_defaults(\r\n    service_context=service_context,\r\n    verbose=True,\r\n    prefix_messages=prefix_messages\r\n)\r\n\r\nresponse = chat_engine.chat(\"Cual es el sentimiento general de los comentarios de la publicacion?\")\r\n\r\nprint(response)\r\n```\r\n\r\nIt throws the same error as mentioned above.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8113/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8113/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8112",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8112/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8112/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8112/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8112",
        "id": 1941568842,
        "node_id": "I_kwDOIWuq585zuf1K",
        "number": 8112,
        "title": "[Question]: ",
        "user": {
            "login": "Meenakshi2604",
            "id": 62795103,
            "node_id": "MDQ6VXNlcjYyNzk1MTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/62795103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Meenakshi2604",
            "html_url": "https://github.com/Meenakshi2604",
            "followers_url": "https://api.github.com/users/Meenakshi2604/followers",
            "following_url": "https://api.github.com/users/Meenakshi2604/following{/other_user}",
            "gists_url": "https://api.github.com/users/Meenakshi2604/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Meenakshi2604/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Meenakshi2604/subscriptions",
            "organizations_url": "https://api.github.com/users/Meenakshi2604/orgs",
            "repos_url": "https://api.github.com/users/Meenakshi2604/repos",
            "events_url": "https://api.github.com/users/Meenakshi2604/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Meenakshi2604/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-13T09:15:32Z",
        "updated_at": "2023-10-24T06:32:08Z",
        "closed_at": "2023-10-24T06:32:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nWhile using the custom prompts of LlamaIndex, I get \" KeyError: 'context_str' \".\r\nI used the template:\r\ntemplate = (\r\n    \"We have provided context information below. \\n\"\r\n    \"---------------------\\n\"\r\n    \"{context_str}\"\r\n    \"\\n---------------------\\n\"\r\n    \"Given this information, please answer the question: {query_str}\\n\"\r\n)\r\nqa_template = PromptTemplate(template)\r\n\r\nWhat is meant by context_str? Even after defining the context_str, why is the KeyError generated?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8112/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8112/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8111",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8111/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8111/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8111/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8111",
        "id": 1941451186,
        "node_id": "I_kwDOIWuq585zuDGy",
        "number": 8111,
        "title": "[Question]: load_embed_model not recognizing HuggingFaceEmbedding",
        "user": {
            "login": "ylhsieh",
            "id": 9377337,
            "node_id": "MDQ6VXNlcjkzNzczMzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9377337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ylhsieh",
            "html_url": "https://github.com/ylhsieh",
            "followers_url": "https://api.github.com/users/ylhsieh/followers",
            "following_url": "https://api.github.com/users/ylhsieh/following{/other_user}",
            "gists_url": "https://api.github.com/users/ylhsieh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ylhsieh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ylhsieh/subscriptions",
            "organizations_url": "https://api.github.com/users/ylhsieh/orgs",
            "repos_url": "https://api.github.com/users/ylhsieh/repos",
            "events_url": "https://api.github.com/users/ylhsieh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ylhsieh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-13T08:03:37Z",
        "updated_at": "2023-10-13T15:57:47Z",
        "closed_at": "2023-10-13T15:57:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am trying to export `ServiceContext` to a json for deployment. My setup uses a local embedding module. During exporting and importing the config, there is an error where huggingface embedding is not recognized. Later I found in\r\nhttps://github.com/run-llama/llama_index/blob/4d6abfbacaa2b001ad174967776c192223e50fa3/llama_index/embeddings/loading.py#L10-L15\r\nthere are a few embeddings supported. `HuggingFaceEmbedding` is not one of them. Is this intentional? Is there a best practice on how to keep the config and recreate the same ServiceContext? Thanks!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8111/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8110",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8110/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8110/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8110/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8110",
        "id": 1941441643,
        "node_id": "PR_kwDOIWuq585ctkjh",
        "number": 8110,
        "title": "Added: support for output_kwargs={'max_colwidth': xx} for PandasQueryEngine",
        "user": {
            "login": "azurewtl",
            "id": 5175672,
            "node_id": "MDQ6VXNlcjUxNzU2NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5175672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azurewtl",
            "html_url": "https://github.com/azurewtl",
            "followers_url": "https://api.github.com/users/azurewtl/followers",
            "following_url": "https://api.github.com/users/azurewtl/following{/other_user}",
            "gists_url": "https://api.github.com/users/azurewtl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azurewtl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azurewtl/subscriptions",
            "organizations_url": "https://api.github.com/users/azurewtl/orgs",
            "repos_url": "https://api.github.com/users/azurewtl/repos",
            "events_url": "https://api.github.com/users/azurewtl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azurewtl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-13T07:57:09Z",
        "updated_at": "2023-10-16T18:15:52Z",
        "closed_at": "2023-10-16T18:15:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8110",
            "html_url": "https://github.com/run-llama/llama_index/pull/8110",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8110.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8110.patch",
            "merged_at": "2023-10-16T18:15:51Z"
        },
        "body": "# Description\r\n\r\nThis parameter avoids that long text is truncated during stringification of pd.dataframe\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8110/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8110/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8109",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8109/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8109/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8109/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8109",
        "id": 1941436351,
        "node_id": "PR_kwDOIWuq585ctjbi",
        "number": 8109,
        "title": "fix cross-encoder nb broken link",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-13T07:53:29Z",
        "updated_at": "2023-10-13T08:11:35Z",
        "closed_at": "2023-10-13T08:11:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8109",
            "html_url": "https://github.com/run-llama/llama_index/pull/8109",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8109.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8109.patch",
            "merged_at": "2023-10-13T08:11:34Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8109/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8109/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8108",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8108/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8108/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8108/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8108",
        "id": 1941340068,
        "node_id": "PR_kwDOIWuq585ctOpj",
        "number": 8108,
        "title": "Added `nb-clean` to `pre-commit`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-13T06:43:37Z",
        "updated_at": "2023-10-13T16:23:49Z",
        "closed_at": "2023-10-13T16:22:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8108",
            "html_url": "https://github.com/run-llama/llama_index/pull/8108",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8108.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8108.patch",
            "merged_at": "2023-10-13T16:22:19Z"
        },
        "body": "# Description\r\n\r\nIn https://github.com/run-llama/llama_index/pull/8104/files#diff-84aa9e9b1fb6c0424e9d79175b65a734c63be82bc58616c0314a286a02512521R7 I observed `metadata` being added to Jupyter notebooks that shouldn't be there.\r\n\r\nThis PR adds in the `nb-clean` tool to `pre-commit` to:\r\n- Wipe away this `metadata`\r\n- Format JSON saved in notebooks, including removal of empty cells\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8108/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8108/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8107",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8107/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8107/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8107/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8107",
        "id": 1941287007,
        "node_id": "PR_kwDOIWuq585ctDSj",
        "number": 8107,
        "title": "Passing `mypy` in Python 3.8",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-13T05:52:12Z",
        "updated_at": "2023-10-13T16:23:34Z",
        "closed_at": "2023-10-13T16:23:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8107",
            "html_url": "https://github.com/run-llama/llama_index/pull/8107",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8107.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8107.patch",
            "merged_at": "2023-10-13T16:23:33Z"
        },
        "body": "# Description\r\n\r\nBrings `mypy` to pass for Python 3.8.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8107/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8107/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8106",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8106/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8106/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8106/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8106",
        "id": 1941275008,
        "node_id": "PR_kwDOIWuq585ctAua",
        "number": 8106,
        "title": "Fix service_context not passed when DocumentSummaryIndex calls Embedd\u2026",
        "user": {
            "login": "Brad-Edwards",
            "id": 56809295,
            "node_id": "MDQ6VXNlcjU2ODA5Mjk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/56809295?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Brad-Edwards",
            "html_url": "https://github.com/Brad-Edwards",
            "followers_url": "https://api.github.com/users/Brad-Edwards/followers",
            "following_url": "https://api.github.com/users/Brad-Edwards/following{/other_user}",
            "gists_url": "https://api.github.com/users/Brad-Edwards/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Brad-Edwards/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Brad-Edwards/subscriptions",
            "organizations_url": "https://api.github.com/users/Brad-Edwards/orgs",
            "repos_url": "https://api.github.com/users/Brad-Edwards/repos",
            "events_url": "https://api.github.com/users/Brad-Edwards/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Brad-Edwards/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-13T05:37:56Z",
        "updated_at": "2023-10-13T16:30:00Z",
        "closed_at": "2023-10-13T16:30:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8106",
            "html_url": "https://github.com/run-llama/llama_index/pull/8106",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8106.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8106.patch",
            "merged_at": "2023-10-13T16:30:00Z"
        },
        "body": "\u2026ingRetriever\r\n\r\n# Description\r\n\r\nPasses the document summary index's service_context when generating an embedding retriever in _RetrieverMode.EMBEDDING mode.\r\n\r\nNote: Anyone who (for whatever reason) relied on explicitly set service_context being ignored in favour of default when in _RetrieverMode.EMBEDDING mode will see a change in behaviour since the explictly set service_context will now be used instead of the default.\r\n\r\nUsing an explicitly set service_context seems reasonable, but it is a change.\r\n\r\nFixes #8102 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [X] New and existing unit tests pass locally with my changes\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8106/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8106/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8105",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8105/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8105/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8105/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8105",
        "id": 1941247701,
        "node_id": "I_kwDOIWuq585ztRbV",
        "number": 8105,
        "title": "[Bug]: Not able to use GPU with LLama CPP",
        "user": {
            "login": "kamathis4",
            "id": 11575549,
            "node_id": "MDQ6VXNlcjExNTc1NTQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11575549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kamathis4",
            "html_url": "https://github.com/kamathis4",
            "followers_url": "https://api.github.com/users/kamathis4/followers",
            "following_url": "https://api.github.com/users/kamathis4/following{/other_user}",
            "gists_url": "https://api.github.com/users/kamathis4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kamathis4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kamathis4/subscriptions",
            "organizations_url": "https://api.github.com/users/kamathis4/orgs",
            "repos_url": "https://api.github.com/users/kamathis4/repos",
            "events_url": "https://api.github.com/users/kamathis4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kamathis4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-13T05:10:25Z",
        "updated_at": "2023-10-13T15:57:24Z",
        "closed_at": "2023-10-13T15:57:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nNot able to use GPU with Llama CPP with llama index\r\n\r\n![Screenshot from 2023-10-13 10-32-05](https://github.com/run-llama/llama_index/assets/11575549/273226bd-f602-4d6d-a523-8b25cbdd7a74)\r\n\r\n\n\n### Version\n\n0.8.44\n\n### Steps to Reproduce\n\nTried to use the same with [llama CPP](https://gpt-index.readthedocs.io/en/latest/examples/llm/llama_2_llama_cpp.html) \n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8105/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8105/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8104",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8104/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8104/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8104/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8104",
        "id": 1941117183,
        "node_id": "PR_kwDOIWuq585csevv",
        "number": 8104,
        "title": "Brad/fix 8103 usability and errors ingestion notebook",
        "user": {
            "login": "Brad-Edwards",
            "id": 56809295,
            "node_id": "MDQ6VXNlcjU2ODA5Mjk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/56809295?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Brad-Edwards",
            "html_url": "https://github.com/Brad-Edwards",
            "followers_url": "https://api.github.com/users/Brad-Edwards/followers",
            "following_url": "https://api.github.com/users/Brad-Edwards/following{/other_user}",
            "gists_url": "https://api.github.com/users/Brad-Edwards/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Brad-Edwards/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Brad-Edwards/subscriptions",
            "organizations_url": "https://api.github.com/users/Brad-Edwards/orgs",
            "repos_url": "https://api.github.com/users/Brad-Edwards/repos",
            "events_url": "https://api.github.com/users/Brad-Edwards/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Brad-Edwards/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-13T02:26:47Z",
        "updated_at": "2023-10-13T03:42:06Z",
        "closed_at": "2023-10-13T03:41:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8104",
            "html_url": "https://github.com/run-llama/llama_index/pull/8104",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8104.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8104.patch",
            "merged_at": "2023-10-13T03:41:55Z"
        },
        "body": "# Description\r\n\r\nDeveloper Experience/Missing Steps\r\n1. Add install dependencies\r\n2. Add instructions to get Pinecone and OpenAI keys\r\n3. Add environment variable loading that works with hosted notebooks\r\n4. Add info/code to for deleting indexes on subsequent runs (for Pinecone Starter accounts)\r\n\r\nErrors\r\n1. Replaced PyMuPDF from Llama Hub with vanilla PyMuPDF package to avoid errors from fitz, frontend and Starlette packages\r\n\r\nFixes #8103 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n- [X] Notebook runs as expected\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8104/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8104/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8103",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8103/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8103/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8103/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8103",
        "id": 1940998352,
        "node_id": "I_kwDOIWuq585zsUjQ",
        "number": 8103,
        "title": "[Bug]: Building Data Ingestion from Scratch Notebook Missing Imports and Throws Errors",
        "user": {
            "login": "Brad-Edwards",
            "id": 56809295,
            "node_id": "MDQ6VXNlcjU2ODA5Mjk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/56809295?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Brad-Edwards",
            "html_url": "https://github.com/Brad-Edwards",
            "followers_url": "https://api.github.com/users/Brad-Edwards/followers",
            "following_url": "https://api.github.com/users/Brad-Edwards/following{/other_user}",
            "gists_url": "https://api.github.com/users/Brad-Edwards/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Brad-Edwards/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Brad-Edwards/subscriptions",
            "organizations_url": "https://api.github.com/users/Brad-Edwards/orgs",
            "repos_url": "https://api.github.com/users/Brad-Edwards/repos",
            "events_url": "https://api.github.com/users/Brad-Edwards/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Brad-Edwards/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-13T00:21:22Z",
        "updated_at": "2023-10-13T03:41:56Z",
        "closed_at": "2023-10-13T03:41:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nThe notebook example notebook does not run as presented, which may confuse newer AIEs or create a negative developer experience. \r\n\r\n1. Setup makes assumptions re: Pinecone DB that do not hold for trial accounts (i.e. environment)\r\n2. Document does not indicate that trial accounts will have to delete the index before re-running pinecone.create_index\r\n3. Relies on python packages that are not pre-installed and does not have an install block\r\n4. Requires llama-hub to use PyMuPDF, which introduces errors at run time that take multiple steps to resolve (install fitz, which then asks for frontend, which then causes errors that Starlette cannot find 'static/'\r\n5. \r\n\n\n### Version\n\n0.8.44\n\n### Steps to Reproduce\n\n1. Create a trial Pinecone account\r\n2. Attempt to follow the tutorial as written or execute the tutorial notebook directly from the codebase\n\n### Relevant Logs/Tracbacks\n\n```shell\n** Code **\r\nloader = PyMuPDFReader()\r\ndocuments = loader.load(file_path=\"./data/llama2.pdf\")\r\n\r\n** Errors **\r\nRun as is:\r\nModuleNotFoundError                       Traceback (most recent call last)\r\n[<ipython-input-16-99edf020dd7a>](https://localhost:8080/#) in <cell line: 2>()\r\n      1 loader = PyMuPDFReader()\r\n----> 2 documents = loader.load(file_path=\"./data/llama2.pdf\")\r\n\r\n[/usr/local/lib/python3.10/dist-packages/llama_hub/file/pymu_pdf/base.py](https://localhost:8080/#) in load(self, file_path, metadata, extra_info)\r\n     39             List[Document]: list of documents.\r\n     40         \"\"\"\r\n---> 41         import fitz\r\n     42 \r\n     43         # check if file_path is a string or Path\r\n\r\nModuleNotFoundError: No module named 'fitz'\r\n\r\n---------------------------------------------------------------------------\r\nNOTE: If your import is failing due to a missing package, you can\r\nmanually install dependencies using either !pip or !apt.\r\n\r\nTo view examples of installing some common dependencies, click the\r\n\"Open Examples\" button below.\r\n---------------------------------------------------------------------------\r\n\r\nAfter installing fitz:\r\n---------------------------------------------------------------------------\r\nModuleNotFoundError                       Traceback (most recent call last)\r\n<ipython-input-22-99edf020dd7a> in <cell line: 2>()\r\n      1 loader = PyMuPDFReader()\r\n----> 2 documents = loader.load(file_path=\"./data/llama2.pdf\")\r\n\r\n1 frames\r\n/usr/local/lib/python3.10/dist-packages/fitz/__init__.py in <module>\r\n----> 1 from frontend import *\r\n      2 import tools\r\n      3 import os.path as op\r\n      4 \r\n      5 __version__ = '0.0.1dev2'\r\n\r\nModuleNotFoundError: No module named 'frontend'\r\n\r\n---------------------------------------------------------------------------\r\nNOTE: If your import is failing due to a missing package, you can\r\nmanually install dependencies using either !pip or !apt.\r\n\r\nTo view examples of installing some common dependencies, click the\r\n\"Open Examples\" button below.\r\n---------------------------------------------------------------------------\r\n\r\nAfter installing frontend:\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-24-99edf020dd7a> in <cell line: 2>()\r\n      1 loader = PyMuPDFReader()\r\n----> 2 documents = loader.load(file_path=\"./data/llama2.pdf\")\r\n\r\n8 frames\r\n/usr/local/lib/python3.10/dist-packages/starlette/staticfiles.py in __init__(self, directory, packages, html, check_dir, follow_symlink)\r\n     55         self.follow_symlink = follow_symlink\r\n     56         if check_dir and directory is not None and not os.path.isdir(directory):\r\n---> 57             raise RuntimeError(f\"Directory '{directory}' does not exist\")\r\n     58 \r\n     59     def get_directories(\r\n\r\nRuntimeError: Directory 'static/' does not exist\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8103/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8103/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8102",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8102/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8102/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8102/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8102",
        "id": 1940926884,
        "node_id": "I_kwDOIWuq585zsDGk",
        "number": 8102,
        "title": "[Bug]: DocumentSummaryIndex() ignores the embed_model setting in service_context",
        "user": {
            "login": "jc1518",
            "id": 4754235,
            "node_id": "MDQ6VXNlcjQ3NTQyMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4754235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jc1518",
            "html_url": "https://github.com/jc1518",
            "followers_url": "https://api.github.com/users/jc1518/followers",
            "following_url": "https://api.github.com/users/jc1518/following{/other_user}",
            "gists_url": "https://api.github.com/users/jc1518/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jc1518/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jc1518/subscriptions",
            "organizations_url": "https://api.github.com/users/jc1518/orgs",
            "repos_url": "https://api.github.com/users/jc1518/repos",
            "events_url": "https://api.github.com/users/jc1518/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jc1518/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-12T23:05:56Z",
        "updated_at": "2023-10-13T16:30:02Z",
        "closed_at": "2023-10-13T16:30:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nDocumentSummaryIndex() ignores the embed_model setting.\r\n\r\nembed_model is explicitly configured in the service_context to use langchain.embeddings.BedrockEmbedding, but the DocumentSummaryIndex() ignores it and falls back to the default embedding model (try openai first, if not available, try local llamacpp).\r\n\r\n### Version\r\n\r\n0.8.44\r\n\r\n### Steps to Reproduce\r\n\r\nThe following code can be used:\r\n\r\n```python\r\nimport boto3\r\nfrom langchain.embeddings import BedrockEmbeddings\r\nfrom langchain.llms import Bedrock\r\n\r\nfrom llama_index import (\r\n    LLMPredictor,\r\n    ServiceContext,\r\n    VectorStoreIndex,\r\n    get_response_synthesizer,\r\n)\r\nfrom llama_hub.web.simple_web.base import SimpleWebPageReader\r\nfrom llama_index.callbacks import CallbackManager, LlamaDebugHandler\r\nfrom llama_index.indices.document_summary import DocumentSummaryIndex\r\n\r\n# Change the region if needed \r\nsession = boto3.Session(region_name=\"us-west-2\")\r\nboto3_bedrock = session.client(\"bedrock-runtime\")\r\n\r\nllm = Bedrock(\r\n    client=boto3_bedrock,\r\n    model_id=\"anthropic.claude-v2\",\r\n    streaming=True,\r\n    verbose=True,\r\n    model_kwargs={\"temperature\": 0.1, \"max_tokens_to_sample\": 512},\r\n)\r\n\r\nllm_predictor = LLMPredictor(llm)\r\n\r\nembed_model = BedrockEmbeddings(\r\n    client=boto3_bedrock,\r\n    model_id=\"amazon.titan-embed-text-v1\",\r\n)\r\n\r\nllama_debug = LlamaDebugHandler(print_trace_on_end=True)\r\ncallback_manager = CallbackManager([llama_debug])\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n    llm_predictor=llm_predictor,\r\n    embed_model=embed_model,\r\n    callback_manager=callback_manager,\r\n)\r\n\r\nreader = SimpleWebPageReader(html_to_text=True)\r\ndocs = reader.load_data(\r\n    urls=[\"https://blog.llamaindex.ai/llamaindex-update-2023-10-10-3718a3d19fb9\"]\r\n)\r\n\r\n# Vector index embedding works fine\r\nindex = VectorStoreIndex.from_documents(\r\n    docs, service_context=service_context, show_progress=True\r\n)\r\nquery_engine = index.as_query_engine()\r\nprint(query_engine.query(\"What are the updates?\"))\r\n\r\nresponse_synthesizer = get_response_synthesizer(\r\n    response_mode=\"tree_summarize\", use_async=True\r\n)\r\n\r\n# Summary index embedding falls back to default (OpenAI then llamacpp)\r\n# Even the embed_model is set to use Bedrock in service_context\r\nsummary_index = DocumentSummaryIndex(\r\n    docs,\r\n    service_context=service_context,\r\n    response_synthesizer=response_synthesizer,\r\n    show_progress=True,\r\n)\r\nsummary_query_engine = summary_index.as_query_engine()\r\nprint(summary_query_engine.query(\"What are the updates?\"))\r\n\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n\u279c  sandbox python test.py\r\nParsing documents into nodes: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00, 10.06it/s]\r\nGenerating embeddings: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 26/26 [00:09<00:00,  2.77it/s]\r\n**********\r\nTrace: index_construction\r\n    |_node_parsing ->  0.117312 seconds\r\n      |_chunking ->  0.094967 seconds\r\n    |_embedding ->  4.161817 seconds\r\n    |_embedding ->  3.396642 seconds\r\n    |_embedding ->  1.81063 seconds\r\n**********\r\n**********\r\nTrace: query\r\n    |_query ->  14.047066 seconds\r\n      |_retrieve ->  0.273317 seconds\r\n        |_embedding ->  0.269527 seconds\r\n      |_synthesize ->  13.773558 seconds\r\n        |_templating ->  5.4e-05 seconds\r\n        |_llm ->  13.763149 seconds\r\n**********\r\n Based on the context provided, here are the key updates:\r\n\r\n- RetrieverEvaluator allows enhanced retrieval evaluations with benchmarking, metrics, and synthetic dataset creation.\r\n\r\n- Added support for 3 more HuggingFace embedding models - base embeddings wrapper, instructor embeddings, and optimum embeddings in ONNX format. \r\n\r\n- Introduced multi-document agents (v0) for advanced QA beyond typical top-k RAG. Supports diverse queries from single to multiple docs.\r\n\r\n- Experimenting with ensemble retriever using diverse document chunking and ensembling for improved retrieval.\r\n\r\n- Using OpenAI's latest function calling fine-tuning to enhance gpt-3.5-turbo's structured data extraction for RAG.\r\n\r\n- Integrated with Arize AI Phoenix for full observability in RAG pipelines - tracking prompts, timing, retrieval visualizations etc. while keeping data local.\r\n\r\n- Streamlit hackathon winners - NewsGPT and FinSight.\r\n\r\n# This is where the issue is - DocumentSummaryIndex() ignores the embed_model setting in service_context.\r\n******\r\nCould not load OpenAI model. Using default LlamaCPP=llama2-13b-chat. If you intended to use OpenAI, please check your OPENAI_API_KEY.\r\nOriginal error:\r\nNo API key found for OpenAI.\r\nPlease set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\nAPI keys can be found or created at https://platform.openai.com/account/api-keys\r\n\r\n******\r\nTraceback (most recent call last):\r\n  File \"/Users/jackiexc/.pyenv/versions/3.10.12/lib/python3.10/site-packages/llama_index/llms/llama_cpp.py\", line 88, in __init__\r\n    from llama_cpp import Llama\r\nModuleNotFoundError: No module named 'llama_cpp'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/jackiexc/Desktop/sandbox/test.py\", line 53, in <module>\r\n    response_synthesizer = get_response_synthesizer(\r\n  File \"/Users/jackiexc/.pyenv/versions/3.10.12/lib/python3.10/site-packages/llama_index/response_synthesizers/factory.py\", line 50, in get_response_synthesizer\r\n    service_context = service_context or ServiceContext.from_defaults(\r\n  File \"/Users/jackiexc/.pyenv/versions/3.10.12/lib/python3.10/site-packages/llama_index/indices/service_context.py\", line 154, in from_defaults\r\n    llm_predictor = llm_predictor or LLMPredictor(llm=llm)\r\n  File \"/Users/jackiexc/.pyenv/versions/3.10.12/lib/python3.10/site-packages/llama_index/llm_predictor/base.py\", line 89, in __init__\r\n    self._llm = resolve_llm(llm)\r\n  File \"/Users/jackiexc/.pyenv/versions/3.10.12/lib/python3.10/site-packages/llama_index/llms/utils.py\", line 40, in resolve_llm\r\n    llm = LlamaCPP(\r\n  File \"/Users/jackiexc/.pyenv/versions/3.10.12/lib/python3.10/site-packages/llama_index/llms/llama_cpp.py\", line 90, in __init__\r\n    raise ImportError(\r\nImportError: Could not import llama_cpp library.Please install llama_cpp with `pip install llama-cpp-python`.See the full installation guide for GPU support at `https://github.com/abetlen/llama-cpp-python`\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8102/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8102/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8101",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8101/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8101/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8101/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8101",
        "id": 1940920963,
        "node_id": "I_kwDOIWuq585zsBqD",
        "number": 8101,
        "title": "[Bug]:  site-packages/llama_cpp/llama.py\", line 1658, in __del__",
        "user": {
            "login": "Khan-Tzar",
            "id": 29702138,
            "node_id": "MDQ6VXNlcjI5NzAyMTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/29702138?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Khan-Tzar",
            "html_url": "https://github.com/Khan-Tzar",
            "followers_url": "https://api.github.com/users/Khan-Tzar/followers",
            "following_url": "https://api.github.com/users/Khan-Tzar/following{/other_user}",
            "gists_url": "https://api.github.com/users/Khan-Tzar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Khan-Tzar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Khan-Tzar/subscriptions",
            "organizations_url": "https://api.github.com/users/Khan-Tzar/orgs",
            "repos_url": "https://api.github.com/users/Khan-Tzar/repos",
            "events_url": "https://api.github.com/users/Khan-Tzar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Khan-Tzar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-12T23:01:29Z",
        "updated_at": "2023-10-30T07:47:01Z",
        "closed_at": "2023-10-30T07:47:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI follow starter instructions here [starter_example.html ](https://gpt-index.readthedocs.io/en/stable/getting_started/starter_example.html )\r\n\r\nI put these lines in mytry.py file \r\n```\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader\r\n\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\nindex = VectorStoreIndex.from_documents(documents)\r\n```\r\nI receive this error:\r\n```\r\nException ignored in: <function Llama.__del__ at 0xffff84018360>\r\nTraceback (most recent call last):\r\n  File \"/mywork/.local/lib/python3.11/site-packages/llama_cpp/llama.py\", line 1658, in __del__\r\nTypeError: 'NoneType' object is not callable\r\n```\r\nI work in Docker container:\r\nPRETTY_NAME=\"Debian GNU/Linux 12 (bookworm)\"\r\n Python 3.11.5\r\n\r\nCould you help to fix this problem, please?\n\n### Version\n\n0.8.42\n\n### Steps to Reproduce\n\nMy Docker file \r\n```\r\nFROM  python:3.11.5 as python-sdk\r\n# Install packages\r\nRUN apt update && apt install -y git vim sudo rsync\r\nRUN git clone https://github.com/jerryjliu/llama_index.git && \\\r\n\tcd llama_index && pip install --upgrade pip && \\\r\n\tpip install -e . && \\\r\n\tpip install oci docx2txt llama-index llama-cpp-python pypdf torch transformers python-pptx Pillow sentence_transformers && \\\r\n\tpip install -r requirements.txt \r\n``` \r\nMy steps into the container \r\n```bash\r\ngit clone https://github.com/jerryjliu/llama_index.git\r\ncd llama_index/examples/paul_graham_essay\r\n```\r\nvi my_example.py\r\n```python\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\nindex = VectorStoreIndex.from_documents(documents)\r\n```\r\n```bash\r\npython ./my_example.py\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8101/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8101/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8100",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8100/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8100/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8100/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8100",
        "id": 1940829038,
        "node_id": "PR_kwDOIWuq585creig",
        "number": 8100,
        "title": "add fusion retriever",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-12T21:39:24Z",
        "updated_at": "2023-10-13T20:00:44Z",
        "closed_at": "2023-10-13T20:00:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8100",
            "html_url": "https://github.com/run-llama/llama_index/pull/8100",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8100.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8100.patch",
            "merged_at": "2023-10-13T20:00:43Z"
        },
        "body": "# Description\r\n\r\nThis PR adds a new retriever that can\r\n- combine multiple retrievers\r\n- generate extra queries for retrieval\r\n- merge retrieval results with `simple` (just order by score) or `reciprocal_rerank` (order by ranking across multiple indexes)\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n\r\nFull credits to https://github.com/Raudaschl/rag-fusion",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8100/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8100/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8099",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8099/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8099/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8099/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8099",
        "id": 1940572914,
        "node_id": "I_kwDOIWuq585zqsry",
        "number": 8099,
        "title": "[Feature Request]: Vespa VectorDB Connection",
        "user": {
            "login": "Unristricted",
            "id": 22667922,
            "node_id": "MDQ6VXNlcjIyNjY3OTIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/22667922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Unristricted",
            "html_url": "https://github.com/Unristricted",
            "followers_url": "https://api.github.com/users/Unristricted/followers",
            "following_url": "https://api.github.com/users/Unristricted/following{/other_user}",
            "gists_url": "https://api.github.com/users/Unristricted/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Unristricted/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Unristricted/subscriptions",
            "organizations_url": "https://api.github.com/users/Unristricted/orgs",
            "repos_url": "https://api.github.com/users/Unristricted/repos",
            "events_url": "https://api.github.com/users/Unristricted/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Unristricted/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6129428377,
                "node_id": "LA_kwDOIWuq588AAAABbVenmQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/request%20contribution%20board",
                "name": "request contribution board",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-12T18:37:16Z",
        "updated_at": "2023-11-30T16:00:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nMy team is using Vespa as our VectorDB solution and we wanted to start using LLamaIndex in our project. We would just need to create a connector that can work with existing Vespa deployments so it would be a seamless connection with the library. I could work on this if possible.\n\n### Reason\n\nNo such connector exists at the moment.\n\n### Value of Feature\n\nThis would add to the already robust arsenal of Vector Databases supported by LLamaIndex and would allow our team to start using this library as well.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8099/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8099/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8098",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8098/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8098/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8098/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8098",
        "id": 1940469955,
        "node_id": "PR_kwDOIWuq585cqPGn",
        "number": 8098,
        "title": "Hugging Face Inference API",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-12T17:33:46Z",
        "updated_at": "2023-10-22T03:32:31Z",
        "closed_at": "2023-10-22T03:32:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8098",
            "html_url": "https://github.com/run-llama/llama_index/pull/8098",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8098.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8098.patch",
            "merged_at": "2023-10-22T03:32:30Z"
        },
        "body": "# Description\r\n\r\nSupport for the Hugging Face Inference API as a `LLM` subclass.\r\n\r\nCloses https://github.com/run-llama/llama_index/issues/7905.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8098/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8098/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8097",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8097/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8097/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8097/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8097",
        "id": 1940439076,
        "node_id": "I_kwDOIWuq585zqMAk",
        "number": 8097,
        "title": "[Bug]: Pydantic output parser breaks when using Llama 70B ",
        "user": {
            "login": "smyja",
            "id": 20070770,
            "node_id": "MDQ6VXNlcjIwMDcwNzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20070770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smyja",
            "html_url": "https://github.com/smyja",
            "followers_url": "https://api.github.com/users/smyja/followers",
            "following_url": "https://api.github.com/users/smyja/following{/other_user}",
            "gists_url": "https://api.github.com/users/smyja/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smyja/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smyja/subscriptions",
            "organizations_url": "https://api.github.com/users/smyja/orgs",
            "repos_url": "https://api.github.com/users/smyja/repos",
            "events_url": "https://api.github.com/users/smyja/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smyja/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-12T17:10:44Z",
        "updated_at": "2023-10-13T07:45:26Z",
        "closed_at": "2023-10-13T07:45:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI am getting this error when i use the pydantic output parser, notice that it actually outputs the response but not as json which i believe causes it to break.\r\n```\r\n\r\n  File \"/Users/mac/Documents/GitHub/datagpt/pluralsh/dev/lib/python3.8/site-packages/llama_index/indices/query/base.py\", line 23, in query\r\n    return self._query(str_or_query_bundle)\r\n  File \"/Users/mac/Documents/GitHub/datagpt/pluralsh/dev/lib/python3.8/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 177, in _query\r\n    response = self._response_synthesizer.synthesize(\r\n  File \"/Users/mac/Documents/GitHub/datagpt/pluralsh/dev/lib/python3.8/site-packages/llama_index/response_synthesizers/base.py\", line 140, in synthesize\r\n    response_str = self.get_response(\r\n  File \"/Users/mac/Documents/GitHub/datagpt/pluralsh/dev/lib/python3.8/site-packages/llama_index/response_synthesizers/tree_summarize.py\", line 125, in get_response\r\n    response = self._service_context.llm_predictor.predict(\r\n  File \"/Users/mac/Documents/GitHub/datagpt/pluralsh/dev/lib/python3.8/site-packages/llama_index/llm_predictor/base.py\", line 166, in predict\r\n    output = self._run_program(output_cls, prompt, **prompt_args)\r\n  File \"/Users/mac/Documents/GitHub/datagpt/pluralsh/dev/lib/python3.8/site-packages/llama_index/llm_predictor/base.py\", line 140, in _run_program\r\n    chat_response = program(**prompt_args)\r\n  File \"/Users/mac/Documents/GitHub/datagpt/pluralsh/dev/lib/python3.8/site-packages/llama_index/program/llm_program.py\", line 79, in __call__\r\n    return self._output_parser.parse(raw_output)\r\n  File \"/Users/mac/Documents/GitHub/datagpt/pluralsh/dev/lib/python3.8/site-packages/llama_index/output_parsers/pydantic.py\", line 51, in parse\r\n    json_str = extract_json_str(text)\r\n  File \"/Users/mac/Documents/GitHub/datagpt/pluralsh/dev/lib/python3.8/site-packages/llama_index/output_parsers/utils.py\", line 68, in extract_json_str\r\n    raise ValueError(f\"Could not extract json string from output: {text}\")\r\nValueError: Could not extract json string from output:  Yes, you can set \r\n```\r\n\r\n### Version\r\n\r\nllama-index \r\n\r\n### Steps to Reproduce\r\n```\r\n\r\nimport os\r\nfrom pathlib import Path\r\nfrom llama_index import (\r\n    download_loader,\r\n    VectorStoreIndex,\r\n    StorageContext,\r\n    ServiceContext,\r\n    load_index_from_storage\r\n)\r\nfrom llama_index.storage.docstore import SimpleDocumentStore\r\nfrom llama_index.storage.index_store import SimpleIndexStore\r\nfrom llama_index.vector_stores import SimpleVectorStore\r\nfrom dotenv import load_dotenv\r\nfrom llama_index.llms import Anyscale\r\nfrom llama_index.embeddings import OpenAIEmbedding\r\nfrom typing import List,Optional\r\nfrom pydantic import BaseModel\r\n\r\nfrom llama_index.output_parsers import LangchainOutputParser\r\nfrom llama_index.llm_predictor import StructuredLLMPredictor\r\nfrom langchain.output_parsers import StructuredOutputParser, ResponseSchema\r\nfrom llama_index.prompts import PromptTemplate\r\nfrom llama_index.prompts.default_prompts import (\r\n    DEFAULT_TEXT_QA_PROMPT_TMPL,\r\n    DEFAULT_REFINE_PROMPT_TMPL,\r\n)\r\nimport time\r\n\r\n# Start the timer\r\nstart_time = time.time()\r\nllm_predictor = StructuredLLMPredictor()\r\n# Your code starts here\r\nJSONReader = download_loader(\"JSONReader\")\r\nloader = JSONReader()\r\ndocuments = loader.load_data(Path(\"./whogohost.json\"))\r\nload_dotenv()\r\nANYSCALE_API_KEY = os.environ[\"ANYSCALE_API_KEY\"]\r\nmodel = \"command\"\r\ntemperature = 0\r\nmax_tokens = 256\r\n\r\nclass Reference(BaseModel):\r\n    \"Source model of the answer to the question\"\r\n    url: List[str]\r\n\r\nclass SearchResult(BaseModel):\r\n    \"\"\"Data model for  Search results.\"\"\"\r\n    question: str  # The original question or query\r\n    answer: str  # The direct answer to the question\r\n    references: List[Reference]  # A list of sources or references supporting the answer\r\n    questions_people_might_ask: List[str]\r\n\r\nllm = Anyscale(\"meta-llama/Llama-2-70b-chat-hf\", api_key=ANYSCALE_API_KEY)\r\nembed_model = OpenAIEmbedding(embed_batch_size=42)\r\nservice_context = ServiceContext.from_defaults(llm=llm,embed_model=embed_model)\r\n\r\n# index = VectorStoreIndex.from_documents(documents,service_context=service_context)\r\n# index.storage_context.persist(persist_dir=\"storage\")\r\nstorage_context = StorageContext.from_defaults(\r\n    docstore=SimpleDocumentStore.from_persist_dir(persist_dir=\"./storage\"),\r\n    vector_store=SimpleVectorStore.from_persist_dir(persist_dir=\"./storage\"),\r\n    index_store=SimpleIndexStore.from_persist_dir(persist_dir=\"./storage\"),\r\n)\r\nprint(\"done indexing\")\r\n\r\nloaded_index = load_index_from_storage(storage_context,service_context=service_context)\r\nquery_engine = loaded_index.as_query_engine(output_cls=SearchResult, response_mode=\"tree_summarize\")\r\nresponse = query_engine.query(\"can i setup email with gsyys?\")\r\nprint(response)\r\n\r\n# Your code ends here\r\n\r\n# End the timer\r\nend_time = time.time()\r\n\r\n# Calculate and print the total execution time\r\ntotal_time = end_time - start_time\r\nprint(f\"Total execution time: {total_time:.2f} seconds\")\r\n```\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8097/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8097/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8096",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8096/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8096/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8096/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8096",
        "id": 1940359494,
        "node_id": "PR_kwDOIWuq585cp2WV",
        "number": 8096,
        "title": "improve interface to bm25, fix tokenizer",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-12T16:30:26Z",
        "updated_at": "2023-10-12T21:06:07Z",
        "closed_at": "2023-10-12T21:06:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8096",
            "html_url": "https://github.com/run-llama/llama_index/pull/8096",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8096.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8096.patch",
            "merged_at": "2023-10-12T21:06:06Z"
        },
        "body": "# Description\r\n\r\nThe previous bm25 retriever had a bit of a confusing interface. Further, the tokenizer was actually converting into token IDs, not single words \ud83d\ude2e\u200d\ud83d\udca8 So a simple fix for that as well (this will need to be customized for non-space-friendly languages)\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8096/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8096/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8095",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8095/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8095/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8095/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8095",
        "id": 1940320531,
        "node_id": "PR_kwDOIWuq585cpty8",
        "number": 8095,
        "title": "fix: `max_docs` in `SimpleMongoReader`",
        "user": {
            "login": "david20571015",
            "id": 51911434,
            "node_id": "MDQ6VXNlcjUxOTExNDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david20571015",
            "html_url": "https://github.com/david20571015",
            "followers_url": "https://api.github.com/users/david20571015/followers",
            "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
            "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
            "organizations_url": "https://api.github.com/users/david20571015/orgs",
            "repos_url": "https://api.github.com/users/david20571015/repos",
            "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david20571015/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-12T16:04:59Z",
        "updated_at": "2023-10-13T04:46:20Z",
        "closed_at": "2023-10-12T21:53:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8095",
            "html_url": "https://github.com/run-llama/llama_index/pull/8095",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8095.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8095.patch",
            "merged_at": "2023-10-12T21:53:30Z"
        },
        "body": "# Description\r\n\r\nUse `max_docs` as the limit of query. Additionally, refactor the code of invoking `find`.\r\n\r\nI am not familiar with `unittest`, so please notify me if there are any issues with the tests I have written.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8095/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8095/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8094",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8094/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8094/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8094/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8094",
        "id": 1940270823,
        "node_id": "PR_kwDOIWuq585cpikM",
        "number": 8094,
        "title": "[version] bump version to 0.8.44",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-12T15:43:18Z",
        "updated_at": "2023-10-12T15:50:21Z",
        "closed_at": "2023-10-12T15:50:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8094",
            "html_url": "https://github.com/run-llama/llama_index/pull/8094",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8094.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8094.patch",
            "merged_at": "2023-10-12T15:50:20Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8094/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8094/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8093",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8093/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8093/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8093/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8093",
        "id": 1940118845,
        "node_id": "I_kwDOIWuq585zo909",
        "number": 8093,
        "title": "[Question]: About llamaCPP",
        "user": {
            "login": "shun010409",
            "id": 141603755,
            "node_id": "U_kgDOCHCzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/141603755?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shun010409",
            "html_url": "https://github.com/shun010409",
            "followers_url": "https://api.github.com/users/shun010409/followers",
            "following_url": "https://api.github.com/users/shun010409/following{/other_user}",
            "gists_url": "https://api.github.com/users/shun010409/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shun010409/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shun010409/subscriptions",
            "organizations_url": "https://api.github.com/users/shun010409/orgs",
            "repos_url": "https://api.github.com/users/shun010409/repos",
            "events_url": "https://api.github.com/users/shun010409/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shun010409/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-12T14:25:23Z",
        "updated_at": "2023-10-12T16:33:34Z",
        "closed_at": "2023-10-12T16:33:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI was building llamaCPP , but the following error message appeared when setting up the query engine.\r\nwhere is context_params?\r\n\r\n\r\nerror message: 'Llama' object has no attribute 'context_params'",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8093/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8093/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    }
]