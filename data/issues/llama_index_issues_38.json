[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1131",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1131/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1131/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1131/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1131",
        "id": 1661503983,
        "node_id": "I_kwDOIWuq585jCInv",
        "number": 1131,
        "title": "Bug: OpenSearchIndex queries take a long duration and use extraordinarily more tokens",
        "user": {
            "login": "sanganisuraj-applens",
            "id": 121515274,
            "node_id": "U_kgDOBz4tCg",
            "avatar_url": "https://avatars.githubusercontent.com/u/121515274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sanganisuraj-applens",
            "html_url": "https://github.com/sanganisuraj-applens",
            "followers_url": "https://api.github.com/users/sanganisuraj-applens/followers",
            "following_url": "https://api.github.com/users/sanganisuraj-applens/following{/other_user}",
            "gists_url": "https://api.github.com/users/sanganisuraj-applens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sanganisuraj-applens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sanganisuraj-applens/subscriptions",
            "organizations_url": "https://api.github.com/users/sanganisuraj-applens/orgs",
            "repos_url": "https://api.github.com/users/sanganisuraj-applens/repos",
            "events_url": "https://api.github.com/users/sanganisuraj-applens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sanganisuraj-applens/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-10T22:52:39Z",
        "updated_at": "2023-09-10T17:05:30Z",
        "closed_at": "2023-09-10T17:05:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Not sure if discord is viewable from here but the entire discussion can be found here: https://discord.com/channels/1059199217496772688/1093566875096592535\r\n\r\nTo summarize the issue, I am putting 2 documents in to an OS Index (documents_latest that is not created via OpenSearchVectorClient), using ElasticSearchReader to download the documents from that index, and then using OpenSearchVectorClient to load those documents into a new index (documents_6) where I am seeing an issue of search taking longer and using more tokens.\r\n\r\n\r\nI validated that my OS Index only has 2 documents: `Applens is a software development organization` and `The value of X is 25`\r\n\r\nI am consistently seeing latencies of around 10-20 seconds for the query on `What is Applens`?\r\n\r\nI am also seeing these token usages:\r\n\r\n```\r\nINFO:llama_index.token_counter.token_counter:> [build_index_from_nodes] Total LLM token usage: 0 tokens\r\nINFO:llama_index.token_counter.token_counter:> [build_index_from_nodes] Total LLM token usage: 0 tokens\r\nINFO:llama_index.token_counter.token_counter:> [build_index_from_nodes] Total embedding token usage: 101 tokens\r\nINFO:llama_index.token_counter.token_counter:> [build_index_from_nodes] Total embedding token usage: 101 tokens\r\nINFO:llama_index.token_counter.token_counter:> [query] Total LLM token usage: 19851 tokens\r\nINFO:llama_index.token_counter.token_counter:> [query] Total LLM token usage: 19851 tokens\r\nINFO:llama_index.token_counter.token_counter:> [query] Total embedding token usage: 5 tokens\r\nINFO:llama_index.token_counter.token_counter:> [query] Total embedding token usage: 5 tokens\r\n```\r\n\r\nEntire Logs are here: [message.txt](https://github.com/jerryjliu/llama_index/files/11194572/message.txt)\r\n\r\nThis is the relevant code:\r\n\r\n```\r\ndef create_index_from_os(organization_id: str):\r\n    \"\"\"\r\n    Create the index from os documents\r\n    \"\"\"\r\n    text_field = \"content\"\r\n    embedding_field = \"embedding\"\r\n    query_dict = {\r\n        \"query\": {\r\n            \"bool\": {\r\n                \"must\": [\r\n                    {\r\n                        \"match\": {\r\n                            \"organization_id\": organization_id\r\n                        },\r\n                    },\r\n                ]\r\n            }\r\n        },\r\n    }\r\n\r\n    elasticsearch_reader = download_loader(\"ElasticsearchReader\")\r\n    reader = elasticsearch_reader(\r\n        OS_ENDPOINTS.get(ENV_STAGE),\r\n        \"documents_latest\",\r\n    )\r\n\r\n    documents = reader.load_data(\"value\", query=query_dict, embedding_field=embedding_field)\r\n\r\n    client = OpensearchVectorClient(\r\n        OS_ENDPOINTS.get(ENV_STAGE),\r\n        \"documents_6\",\r\n        1536,\r\n        embedding_field=embedding_field,\r\n        text_field=text_field,\r\n    )\r\n\r\n    service_context = ServiceContext.from_defaults(chunk_size_limit=10000)\r\n    index = GPTOpensearchIndex.from_documents(documents=documents, client=client, service_context=service_context)\r\n\r\n    return index\r\n\r\ndef query_all_llm_indexes(\r\n    query_param: str, organization_id: str\r\n) -> (int, SearchResult):\r\n    \"\"\"This function gets an index and then queries the index with a query_param\"\"\"\r\n    index = create_index_from_os(organization_id)\r\n    response = index.query(query_param)\r\n    # print(\"Printing\")\r\n    print(response.source_nodes)\r\n    print(response.response)\r\n    search_results: List[SearchResult] = []\r\n    return 0, search_results\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1131/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1131/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1130",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1130/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1130/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1130/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1130",
        "id": 1661293265,
        "node_id": "I_kwDOIWuq585jBVLR",
        "number": 1130,
        "title": "Prompt asking for a list returns 1 random item",
        "user": {
            "login": "dano1066",
            "id": 11457826,
            "node_id": "MDQ6VXNlcjExNDU3ODI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11457826?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dano1066",
            "html_url": "https://github.com/dano1066",
            "followers_url": "https://api.github.com/users/dano1066/followers",
            "following_url": "https://api.github.com/users/dano1066/following{/other_user}",
            "gists_url": "https://api.github.com/users/dano1066/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dano1066/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dano1066/subscriptions",
            "organizations_url": "https://api.github.com/users/dano1066/orgs",
            "repos_url": "https://api.github.com/users/dano1066/repos",
            "events_url": "https://api.github.com/users/dano1066/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dano1066/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-10T20:08:08Z",
        "updated_at": "2023-09-10T17:05:38Z",
        "closed_at": "2023-09-10T17:05:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have a super basic script that I want to use for querying an index. \r\n\r\n`print(\"Enter prompt\")\r\nprompt = input()\r\n\r\nindex = GPTSimpleVectorIndex.load_from_disk('testIndex.json')\r\nprint(index.query(prompt))`\r\n\r\nI am asking it to give me 10 key points from the document and it responds with a valid point that is indeed from the index but only one. It seems to give me back a single item. It might be something like \r\n\r\n> INFO:llama_index.token_counter.token_counter:> [query] Total LLM token usage: 4794 tokens\r\n> INFO:llama_index.token_counter.token_counter:> [query] Total embedding token usage: 9 tokens\r\n> \r\n> 6. some valid and important fact...etc.\r\n\r\nSince the data is returned is valid data and its exactly what I wanted, I know its definitely querying the indexc but it has me wondering if i am not outputting this correctly. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1130/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1130/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1129",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1129/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1129/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1129/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1129",
        "id": 1661139518,
        "node_id": "I_kwDOIWuq585jAvo-",
        "number": 1129,
        "title": "Install Is Failing To Find Dependencies ",
        "user": {
            "login": "dano1066",
            "id": 11457826,
            "node_id": "MDQ6VXNlcjExNDU3ODI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11457826?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dano1066",
            "html_url": "https://github.com/dano1066",
            "followers_url": "https://api.github.com/users/dano1066/followers",
            "following_url": "https://api.github.com/users/dano1066/following{/other_user}",
            "gists_url": "https://api.github.com/users/dano1066/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dano1066/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dano1066/subscriptions",
            "organizations_url": "https://api.github.com/users/dano1066/orgs",
            "repos_url": "https://api.github.com/users/dano1066/repos",
            "events_url": "https://api.github.com/users/dano1066/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dano1066/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-10T18:02:46Z",
        "updated_at": "2023-05-16T09:24:53Z",
        "closed_at": "2023-04-10T20:03:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Following the ReadMe Instructions, I have run \"pip install llama-index\" on windows 10. It seems to be downloading a lot of versions of Llama Index for some reason. Surely I just need the latest but either way, it is dumping out a lot of errors about conflicting dependencies. Anyone know what is going on here?\r\n\r\n`ERROR: Cannot install llama-index==0.4.10, llama-index==0.4.11, llama-index==0.4.12, llama-index==0.4.13, llama-index==0.4.14, llama-index==0.4.15, llama-index==0.4.16, llama-index==0.4.17, llama-index==0.4.18, llama-index==0.4.19, llama-index==0.4.20, llama-index==0.4.21, llama-index==0.4.22, llama-index==0.4.22.post1, llama-index==0.4.23, llama-index==0.4.24, llama-index==0.4.25, llama-index==0.4.26, llama-index==0.4.27, llama-index==0.4.28, llama-index==0.4.29, llama-index==0.4.30, llama-index==0.4.31, llama-index==0.4.32, llama-index==0.4.33, llama-index==0.4.34, llama-index==0.4.35, llama-index==0.4.35.post1, llama-index==0.4.36, llama-index==0.4.37, llama-index==0.4.38, llama-index==0.4.39, llama-index==0.4.4.post2, llama-index==0.4.40, llama-index==0.4.5, llama-index==0.4.6, llama-index==0.4.7, llama-index==0.4.8, llama-index==0.4.9, llama-index==0.5.0, llama-index==0.5.1, llama-index==0.5.10, llama-index==0.5.11, llama-index==0.5.12, llama-index==0.5.2, llama-index==0.5.3, llama-index==0.5.4, llama-index==0.5.5, llama-index==0.5.6, llama-index==0.5.7, llama-index==0.5.8 and llama-index==0.5.9 because these package versions have conflicting dependencies.\r\n\r\nThe conflict is caused by:\r\n    llama-index 0.5.12 depends on langchain>=0.0.123\r\n    llama-index 0.5.11 depends on langchain>=0.0.123\r\n    llama-index 0.5.10 depends on langchain>=0.0.123\r\n    llama-index 0.5.9 depends on openai>=0.26.4\r\n    llama-index 0.5.8 depends on openai>=0.26.4\r\n    llama-index 0.5.7 depends on openai>=0.26.4\r\n    llama-index 0.5.6 depends on openai>=0.26.4\r\n    llama-index 0.5.5 depends on openai>=0.26.4\r\n    llama-index 0.5.4 depends on openai>=0.26.4\r\n    llama-index 0.5.3 depends on openai>=0.26.4\r\n    llama-index 0.5.2 depends on openai>=0.26.4\r\n    llama-index 0.5.1 depends on openai>=0.26.4\r\n    llama-index 0.5.0 depends on openai>=0.26.4\r\n    llama-index 0.4.40 depends on openai>=0.26.4\r\n    llama-index 0.4.39 depends on openai>=0.26.4\r\n    llama-index 0.4.38 depends on openai>=0.26.4\r\n    llama-index 0.4.37 depends on openai>=0.26.4\r\n    llama-index 0.4.36 depends on openai>=0.26.4\r\n    llama-index 0.4.35.post1 depends on openai>=0.26.4\r\n    llama-index 0.4.35 depends on openai>=0.26.4\r\n    llama-index 0.4.34 depends on openai>=0.26.4\r\n    llama-index 0.4.33 depends on openai>=0.26.4\r\n    llama-index 0.4.32 depends on openai>=0.26.4\r\n    llama-index 0.4.31 depends on openai>=0.26.4\r\n    llama-index 0.4.30 depends on openai>=0.26.4\r\n    llama-index 0.4.29 depends on openai>=0.26.4\r\n    llama-index 0.4.28 depends on openai>=0.26.4\r\n    llama-index 0.4.27 depends on openai>=0.26.4\r\n    llama-index 0.4.26 depends on openai>=0.26.4\r\n    llama-index 0.4.25 depends on openai>=0.26.4\r\n    llama-index 0.4.24 depends on openai>=0.26.4\r\n    llama-index 0.4.23 depends on openai>=0.26.4\r\n    llama-index 0.4.22.post1 depends on openai>=0.26.4\r\n    llama-index 0.4.22 depends on openai>=0.26.4\r\n    llama-index 0.4.21 depends on openai>=0.26.4\r\n    llama-index 0.4.20 depends on openai>=0.26.4\r\n    llama-index 0.4.19 depends on openai>=0.26.4\r\n    llama-index 0.4.18 depends on openai>=0.26.4\r\n    llama-index 0.4.17 depends on openai>=0.26.4\r\n    llama-index 0.4.16 depends on openai>=0.26.4\r\n    llama-index 0.4.15 depends on openai>=0.26.4\r\n    llama-index 0.4.14 depends on openai>=0.26.4\r\n    llama-index 0.4.13 depends on openai>=0.26.4\r\n    llama-index 0.4.12 depends on openai>=0.26.4\r\n    llama-index 0.4.11 depends on openai>=0.26.4\r\n    llama-index 0.4.10 depends on openai>=0.26.4\r\n    llama-index 0.4.9 depends on openai>=0.26.4\r\n    llama-index 0.4.8 depends on openai>=0.26.4\r\n    llama-index 0.4.7 depends on openai>=0.26.4\r\n    llama-index 0.4.6 depends on openai>=0.26.4\r\n    llama-index 0.4.5 depends on openai>=0.26.4\r\n    llama-index 0.4.4.post2 depends on openai>=0.26.4\r\n\r\nTo fix this you could try to:\r\n1. loosen the range of package versions you've specified\r\n2. remove package versions to allow pip attempt to solve the dependency conflict`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1129/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1129/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1128",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1128/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1128/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1128/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1128",
        "id": 1660925060,
        "node_id": "PR_kwDOIWuq585N8Szf",
        "number": 1128,
        "title": "Updated package name",
        "user": {
            "login": "abderrahmaneizri",
            "id": 127345130,
            "node_id": "U_kgDOB5ch6g",
            "avatar_url": "https://avatars.githubusercontent.com/u/127345130?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abderrahmaneizri",
            "html_url": "https://github.com/abderrahmaneizri",
            "followers_url": "https://api.github.com/users/abderrahmaneizri/followers",
            "following_url": "https://api.github.com/users/abderrahmaneizri/following{/other_user}",
            "gists_url": "https://api.github.com/users/abderrahmaneizri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abderrahmaneizri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abderrahmaneizri/subscriptions",
            "organizations_url": "https://api.github.com/users/abderrahmaneizri/orgs",
            "repos_url": "https://api.github.com/users/abderrahmaneizri/repos",
            "events_url": "https://api.github.com/users/abderrahmaneizri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abderrahmaneizri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T15:08:05Z",
        "updated_at": "2023-04-11T02:48:12Z",
        "closed_at": "2023-04-11T02:48:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1128",
            "html_url": "https://github.com/run-llama/llama_index/pull/1128",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1128.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1128.patch",
            "merged_at": "2023-04-11T02:48:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1128/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1128/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1127",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1127/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1127/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1127/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1127",
        "id": 1660919450,
        "node_id": "PR_kwDOIWuq585N8Rlg",
        "number": 1127,
        "title": "Updated package name to llama_index",
        "user": {
            "login": "abderrahmaneizri",
            "id": 127345130,
            "node_id": "U_kgDOB5ch6g",
            "avatar_url": "https://avatars.githubusercontent.com/u/127345130?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abderrahmaneizri",
            "html_url": "https://github.com/abderrahmaneizri",
            "followers_url": "https://api.github.com/users/abderrahmaneizri/followers",
            "following_url": "https://api.github.com/users/abderrahmaneizri/following{/other_user}",
            "gists_url": "https://api.github.com/users/abderrahmaneizri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abderrahmaneizri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abderrahmaneizri/subscriptions",
            "organizations_url": "https://api.github.com/users/abderrahmaneizri/orgs",
            "repos_url": "https://api.github.com/users/abderrahmaneizri/repos",
            "events_url": "https://api.github.com/users/abderrahmaneizri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abderrahmaneizri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T15:04:31Z",
        "updated_at": "2023-04-11T02:48:28Z",
        "closed_at": "2023-04-11T02:48:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1127",
            "html_url": "https://github.com/run-llama/llama_index/pull/1127",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1127.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1127.patch",
            "merged_at": "2023-04-11T02:48:28Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1127/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1127/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1126",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1126/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1126/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1126/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1126",
        "id": 1660410659,
        "node_id": "PR_kwDOIWuq585N6jKO",
        "number": 1126,
        "title": "[experimental][cli] Update README.md and add support for keyword index and structured predictor",
        "user": {
            "login": "iaalm",
            "id": 4934907,
            "node_id": "MDQ6VXNlcjQ5MzQ5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4934907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iaalm",
            "html_url": "https://github.com/iaalm",
            "followers_url": "https://api.github.com/users/iaalm/followers",
            "following_url": "https://api.github.com/users/iaalm/following{/other_user}",
            "gists_url": "https://api.github.com/users/iaalm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iaalm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iaalm/subscriptions",
            "organizations_url": "https://api.github.com/users/iaalm/orgs",
            "repos_url": "https://api.github.com/users/iaalm/repos",
            "events_url": "https://api.github.com/users/iaalm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iaalm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-10T08:03:54Z",
        "updated_at": "2023-04-11T02:51:47Z",
        "closed_at": "2023-04-11T02:51:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1126",
            "html_url": "https://github.com/run-llama/llama_index/pull/1126",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1126.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1126.patch",
            "merged_at": "2023-04-11T02:51:47Z"
        },
        "body": "The main purpose of this PR is to update README.md to add more instruction.\r\nAlso packaged in following changes\r\n- Support keyword index\r\n- Support structured LLM predictor",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1126/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1126/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1125",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1125/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1125/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1125/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1125",
        "id": 1660316369,
        "node_id": "PR_kwDOIWuq585N6O6m",
        "number": 1125,
        "title": "[version] bump version to 0.5.12",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T06:32:10Z",
        "updated_at": "2023-04-10T06:50:09Z",
        "closed_at": "2023-04-10T06:50:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1125",
            "html_url": "https://github.com/run-llama/llama_index/pull/1125",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1125.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1125.patch",
            "merged_at": "2023-04-10T06:50:08Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1125/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1125/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1124",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1124/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1124/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1124/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1124",
        "id": 1660161550,
        "node_id": "I_kwDOIWuq585i9A4O",
        "number": 1124,
        "title": "Unable to install llama-index in a sqlalchemy v2 environment",
        "user": {
            "login": "ryugonomura",
            "id": 7021453,
            "node_id": "MDQ6VXNlcjcwMjE0NTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7021453?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryugonomura",
            "html_url": "https://github.com/ryugonomura",
            "followers_url": "https://api.github.com/users/ryugonomura/followers",
            "following_url": "https://api.github.com/users/ryugonomura/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryugonomura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryugonomura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryugonomura/subscriptions",
            "organizations_url": "https://api.github.com/users/ryugonomura/orgs",
            "repos_url": "https://api.github.com/users/ryugonomura/repos",
            "events_url": "https://api.github.com/users/ryugonomura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryugonomura/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-10T03:08:48Z",
        "updated_at": "2023-07-22T19:22:41Z",
        "closed_at": "2023-07-22T19:22:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I was able to install llama-index up to version v0.5.9 with sqlalchemy v2 series environment,\r\nHowever, llama-index version 0.5.10 or later cannot be installed in a sqlalchemy v2 environment.\r\n\r\nThe following is what happens when the command is executed.\r\n```shell\r\n$ poetry add llama-index@latest\r\nUsing version ^0.5.11 for llama-index\r\n\r\nUpdating dependencies\r\nResolving dependencies... (0.6s)\r\n\r\nBecause no versions of langchain match >0.0.123,<0.0.124 || >0.0.124,<0.0.125 || >0.0.125,<0.0.126 || >0.0.126,<0.0.127 || >0.0.127,<0.0.128 || >0.0.128,<0.0.129 || >0.0.129,<0.0.130 || >0.0.130,<0.0.131 || >0.0.131,<0.0.132 || >0.0.132,<0.0.133 || >0.0.133,<0.0.134 || >0.0.134,<0.0.135 || >0.0.135,<0.0.136 || >0.0.136\r\n and langchain (0.0.123) depends on SQLAlchemy (>=1,<2), langchain (>=0.0.123,<0.0.124 || >0.0.124,<0.0.125 || >0.0.125,<0.0.126 || >0.0.126,<0.0.127 || >0.0.127,<0.0.128 || >0.0.128,<0.0.129 || >0.0.129,<0.0.130 || >0.0.130,<0.0.131 || >0.0.131,<0.0.132 || >0.0.132,<0.0.133 || >0.0.133,<0.0.134 || >0.0.134,<0.0.135 || >0.0.135,<0.0.136 || >0.0.136) requires SQLAlchemy (>=1,<2).\r\nAnd because langchain (0.0.124) depends on SQLAlchemy (>=1,<2), langchain (>=0.0.123,<0.0.125 || >0.0.125,<0.0.126 || >0.0.126,<0.0.127 || >0.0.127,<0.0.128 || >0.0.128,<0.0.129 || >0.0.129,<0.0.130 || >0.0.130,<0.0.131 || >0.0.131,<0.0.132 || >0.0.132,<0.0.133 || >0.0.133,<0.0.134 || >0.0.134,<0.0.135 || >0.0.135,<0.0.136 || >0.0.136) requires SQLAlchemy (>=1,<2).\r\nAnd because langchain (0.0.125) depends on SQLAlchemy (>=1,<2)\r\n and langchain (0.0.126) depends on SQLAlchemy (>=1,<2), langchain (>=0.0.123,<0.0.127 || >0.0.127,<0.0.128 || >0.0.128,<0.0.129 || >0.0.129,<0.0.130 || >0.0.130,<0.0.131 || >0.0.131,<0.0.132 || >0.0.132,<0.0.133 || >0.0.133,<0.0.134 || >0.0.134,<0.0.135 || >0.0.135,<0.0.136 || >0.0.136) requires SQLAlchemy (>=1,<2).\r\nAnd because langchain (0.0.127) depends on SQLAlchemy (>=1,<2)\r\n and langchain (0.0.128) depends on SQLAlchemy (>=1,<2), langchain (>=0.0.123,<0.0.129 || >0.0.129,<0.0.130 || >0.0.130,<0.0.131 || >0.0.131,<0.0.132 || >0.0.132,<0.0.133 || >0.0.133,<0.0.134 || >0.0.134,<0.0.135 || >0.0.135,<0.0.136 || >0.0.136) requires SQLAlchemy (>=1,<2).\r\nAnd because langchain (0.0.129) depends on SQLAlchemy (>=1,<2)\r\n and langchain (0.0.130) depends on SQLAlchemy (>=1,<2), langchain (>=0.0.123,<0.0.131 || >0.0.131,<0.0.132 || >0.0.132,<0.0.133 || >0.0.133,<0.0.134 || >0.0.134,<0.0.135 || >0.0.135,<0.0.136 || >0.0.136) requires SQLAlchemy (>=1,<2).\r\nAnd because langchain (0.0.131) depends on SQLAlchemy (>=1,<2)\r\n and langchain (0.0.132) depends on SQLAlchemy (>=1,<2), langchain (>=0.0.123,<0.0.133 || >0.0.133,<0.0.134 || >0.0.134,<0.0.135 || >0.0.135,<0.0.136 || >0.0.136) requires SQLAlchemy (>=1,<2).\r\nAnd because langchain (0.0.133) depends on SQLAlchemy (>=1,<2)\r\n and langchain (0.0.134) depends on SQLAlchemy (>=1,<2), langchain (>=0.0.123,<0.0.135 || >0.0.135,<0.0.136 || >0.0.136) requires SQLAlchemy (>=1,<2).\r\nAnd because langchain (0.0.135) depends on SQLAlchemy (>=1,<2)\r\n and langchain (0.0.136) depends on SQLAlchemy (>=1,<2), langchain (>=0.0.123) requires SQLAlchemy (>=1,<2).\r\nBecause no versions of llama-index match >0.5.11,<0.6.0\r\n and llama-index (0.5.11) depends on langchain (>=0.0.123), llama-index (>=0.5.11,<0.6.0) requires langchain (>=0.0.123).\r\nThus, llama-index (>=0.5.11,<0.6.0) requires SQLAlchemy (>=1,<2).\r\nSo, because sampleproduct depends on both sqlalchemy (^2.0.9) and llama-index (^0.5.11), version solving failed.\r\n``` ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1124/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1124/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1123",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1123/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1123/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1123/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1123",
        "id": 1660066865,
        "node_id": "PR_kwDOIWuq585N5aXj",
        "number": 1123,
        "title": "add node postprocessor to docs ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T00:54:01Z",
        "updated_at": "2023-04-10T01:00:56Z",
        "closed_at": "2023-04-10T01:00:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1123",
            "html_url": "https://github.com/run-llama/llama_index/pull/1123",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1123.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1123.patch",
            "merged_at": "2023-04-10T01:00:55Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1123/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1123/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1122",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1122/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1122/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1122/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1122",
        "id": 1660011106,
        "node_id": "I_kwDOIWuq585i8cJi",
        "number": 1122,
        "title": "System hangs when using Llamacpp as LLM",
        "user": {
            "login": "MLTQ",
            "id": 58714428,
            "node_id": "MDQ6VXNlcjU4NzE0NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/58714428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MLTQ",
            "html_url": "https://github.com/MLTQ",
            "followers_url": "https://api.github.com/users/MLTQ/followers",
            "following_url": "https://api.github.com/users/MLTQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/MLTQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MLTQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MLTQ/subscriptions",
            "organizations_url": "https://api.github.com/users/MLTQ/orgs",
            "repos_url": "https://api.github.com/users/MLTQ/repos",
            "events_url": "https://api.github.com/users/MLTQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MLTQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-09T21:37:36Z",
        "updated_at": "2023-07-26T06:19:33Z",
        "closed_at": "2023-07-26T06:19:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The following code appears to load the llamacpp model properly, but it just ramps up the CPU load and hangs for hours if allowed. \r\nIf `service_context=service_context` is removed from `GPTSimpleVectorIndex.from_documents()` then it uses OpenAI's api and works fine. What step is missing here to run llama locally? It outputs all the debug text like loading llamacpp normally does, so it *is* loading it. \r\n\r\n```\r\nllm_predictor = LLMPredictor(llm = LlamaCpp(model_path=\"~/Code/llama.cpp/models/30B/ggml-model-q4_0.bin\", n_threads=10))\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor)\r\n\r\nObsidianReader = download_loader('ObsidianReader')\r\ndocuments = ObsidianReader('~/Documents/Obsidian').load_data()\r\n\r\n\r\n\r\nindex = GPTSimpleVectorIndex.from_documents(documents, service_context=service_context)\r\n\r\n\r\nprint(index.query(\"Any query here\"))\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1122/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1122/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1121",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1121/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1121/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1121/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1121",
        "id": 1659960138,
        "node_id": "PR_kwDOIWuq585N5GfS",
        "number": 1121,
        "title": "add parent child relationships in nodes",
        "user": {
            "login": "yisding",
            "id": 1209314,
            "node_id": "MDQ6VXNlcjEyMDkzMTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1209314?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yisding",
            "html_url": "https://github.com/yisding",
            "followers_url": "https://api.github.com/users/yisding/followers",
            "following_url": "https://api.github.com/users/yisding/following{/other_user}",
            "gists_url": "https://api.github.com/users/yisding/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yisding/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yisding/subscriptions",
            "organizations_url": "https://api.github.com/users/yisding/orgs",
            "repos_url": "https://api.github.com/users/yisding/repos",
            "events_url": "https://api.github.com/users/yisding/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yisding/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-09T18:19:58Z",
        "updated_at": "2023-04-12T02:05:04Z",
        "closed_at": "2023-04-12T02:05:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1121",
            "html_url": "https://github.com/run-llama/llama_index/pull/1121",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1121.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1121.patch",
            "merged_at": "2023-04-12T02:05:03Z"
        },
        "body": "Add parent and child relationships to node v2. Useful for trees such as JSON and YAML.\r\n\r\nIs the Union OK (for multiple children) or should we separate out children into a separate attribute?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1121/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1121/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1120",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1120/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1120/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1120/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1120",
        "id": 1659940275,
        "node_id": "I_kwDOIWuq585i8K2z",
        "number": 1120,
        "title": "OpenSearch Indices not loading documents",
        "user": {
            "login": "sanganisuraj-applens",
            "id": 121515274,
            "node_id": "U_kgDOBz4tCg",
            "avatar_url": "https://avatars.githubusercontent.com/u/121515274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sanganisuraj-applens",
            "html_url": "https://github.com/sanganisuraj-applens",
            "followers_url": "https://api.github.com/users/sanganisuraj-applens/followers",
            "following_url": "https://api.github.com/users/sanganisuraj-applens/following{/other_user}",
            "gists_url": "https://api.github.com/users/sanganisuraj-applens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sanganisuraj-applens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sanganisuraj-applens/subscriptions",
            "organizations_url": "https://api.github.com/users/sanganisuraj-applens/orgs",
            "repos_url": "https://api.github.com/users/sanganisuraj-applens/repos",
            "events_url": "https://api.github.com/users/sanganisuraj-applens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sanganisuraj-applens/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-09T17:06:03Z",
        "updated_at": "2023-04-09T18:23:25Z",
        "closed_at": "2023-04-09T18:23:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "After looking at https://llamahub.ai/l/elasticsearch and https://github.com/jerryjliu/llama_index/blob/main/examples/vector_indices/OpensearchDemo.ipynb, I understood that the documents from OpenSearch need to be loaded into the GPTOpensearchIndex. However I run into an issue here where the index is just empty even though the document exists in OpenSearch. Also the documents that are loaded using the reader has the document I am interested in. The code below is run after the document is loaded into the `documents` index in opensearch.\r\n\r\nThe reason I opted for this approach is because I want to keep the indexes separate per `organization_id`.\r\n\r\n```\r\ndef create_index_from_os(organization_id: str):\r\n    \"\"\"\r\n    Create the index from os documents\r\n    \"\"\"\r\n    text_field = \"content\"\r\n    embedding_field = \"value\"\r\n    query_dict = {\r\n        \"query\": {\r\n            \"bool\": {\r\n                \"must\": [\r\n                    {\r\n                        \"match\": {\r\n                            \"organization_id\": organization_id\r\n                        },\r\n                    },\r\n                ]\r\n            }\r\n        },\r\n    }\r\n\r\n    elasticsearch_reader = download_loader(\"ElasticsearchReader\")\r\n    reader = elasticsearch_reader(\r\n        OS_ENDPOINTS.get(ENV_STAGE),\r\n        \"documents\",\r\n    )\r\n\r\n    documents = reader.load_data(\"value\", query=query_dict, embedding_field=embedding_field)\r\n\r\n    client = OpensearchVectorClient(\r\n        OS_ENDPOINTS.get(ENV_STAGE),\r\n        \"documents\",\r\n        1536,\r\n        embedding_field=embedding_field,\r\n        text_field=text_field,\r\n    )\r\n\r\n    index = GPTOpensearchIndex.from_documents(documents=documents, client=client)\r\n\r\n    return index\r\n```\r\n \r\n\r\nRelevant Error Logs:\r\n```\r\nDEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/engines/text-embedding-ada-002/embeddings\r\nDEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/engines/text-embedding-ada-002/embeddings\r\nDEBUG:openai:api_version=None data='{\"input\": [\"What are the methods of Data Collection?\"], \"encoding_format\": \"base64\"}' message='Post details'\r\nDEBUG:openai:api_version=None data='{\"input\": [\"What are the methods of Data Collection?\"], \"encoding_format\": \"base64\"}' message='Post details'\r\nDEBUG:urllib3.connectionpool:[https://api.openai.com:443/](https://api.openai.com/) \"POST /v1/engines/text-embedding-ada-002/embeddings HTTP/1.1\" 200 None\r\nDEBUG:urllib3.connectionpool:[https://api.openai.com:443/](https://api.openai.com/) \"POST /v1/engines/text-embedding-ada-002/embeddings HTTP/1.1\" 200 None\r\nDEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/engines/text-embedding-ada-002/embeddings processing_ms=158 request_id=ea0249fdebb1ae5e8c8bef3f4f6b2187 response_code=200\r\nDEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/engines/text-embedding-ada-002/embeddings processing_ms=158 request_id=ea0249fdebb1ae5e8c8bef3f4f6b2187 response_code=200\r\nDEBUG:httpx._client:HTTP Request: POST http://localhost:9200/documents/_search \"HTTP/1.1 400 Bad Request\"\r\nDEBUG:httpx._client:HTTP Request: POST http://localhost:9200/documents/_search \"HTTP/1.1 400 Bad Request\"\r\nERROR:app.main.service.hooks.llm_search:{\"event\": \"SearchIndexes\", \"event_type\": \"Error\", \"value\": 1, \"data\": {}}\r\nERROR:app.main.service.hooks.llm_search:{\"event\": \"SearchIndexes\", \"event_type\": \"Error\", \"value\": 1, \"data\": {}}\r\n```\r\n\r\nWhat am I doing wrong with the above code?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1120/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1120/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1119",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1119/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1119/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1119/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1119",
        "id": 1659789579,
        "node_id": "PR_kwDOIWuq585N4m4g",
        "number": 1119,
        "title": "[version] bump version to 0.5.11",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-09T08:01:16Z",
        "updated_at": "2023-04-09T08:17:36Z",
        "closed_at": "2023-04-09T08:17:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1119",
            "html_url": "https://github.com/run-llama/llama_index/pull/1119",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1119.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1119.patch",
            "merged_at": "2023-04-09T08:17:35Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1119/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1119/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1118",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1118/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1118/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1118/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1118",
        "id": 1659788981,
        "node_id": "PR_kwDOIWuq585N4mxi",
        "number": 1118,
        "title": "fix recency nb ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-09T07:59:02Z",
        "updated_at": "2023-04-09T08:02:14Z",
        "closed_at": "2023-04-09T08:02:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1118",
            "html_url": "https://github.com/run-llama/llama_index/pull/1118",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1118.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1118.patch",
            "merged_at": "2023-04-09T08:02:13Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1118/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1118/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1117",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1117/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1117/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1117/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1117",
        "id": 1659773653,
        "node_id": "PR_kwDOIWuq585N4kJi",
        "number": 1117,
        "title": "add recency-based node postprocessor ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-09T06:54:55Z",
        "updated_at": "2023-04-09T07:57:06Z",
        "closed_at": "2023-04-09T07:57:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1117",
            "html_url": "https://github.com/run-llama/llama_index/pull/1117",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1117.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1117.patch",
            "merged_at": "2023-04-09T07:57:05Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1117/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1117/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1116",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1116/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1116/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1116/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1116",
        "id": 1659736858,
        "node_id": "PR_kwDOIWuq585N4d94",
        "number": 1116,
        "title": "Add Evaluation based on query and response",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-09T03:47:53Z",
        "updated_at": "2023-04-10T03:53:05Z",
        "closed_at": "2023-04-10T03:53:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1116",
            "html_url": "https://github.com/run-llama/llama_index/pull/1116",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1116.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1116.patch",
            "merged_at": "2023-04-10T03:53:05Z"
        },
        "body": "Hi,\r\n\r\nI have added an evaluation based on the query and response. \r\n\r\nAction Items:\r\n1. Prompt Engineering for query and response evaluation.\r\n2. Adding example notebook.\r\n\r\nThank you.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1116/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1116/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1115",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1115/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1115/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1115/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1115",
        "id": 1659735755,
        "node_id": "PR_kwDOIWuq585N4dym",
        "number": 1115,
        "title": "Avoid download NLTK stop words every time",
        "user": {
            "login": "iaalm",
            "id": 4934907,
            "node_id": "MDQ6VXNlcjQ5MzQ5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4934907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iaalm",
            "html_url": "https://github.com/iaalm",
            "followers_url": "https://api.github.com/users/iaalm/followers",
            "following_url": "https://api.github.com/users/iaalm/following{/other_user}",
            "gists_url": "https://api.github.com/users/iaalm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iaalm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iaalm/subscriptions",
            "organizations_url": "https://api.github.com/users/iaalm/orgs",
            "repos_url": "https://api.github.com/users/iaalm/repos",
            "events_url": "https://api.github.com/users/iaalm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iaalm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-09T03:41:47Z",
        "updated_at": "2023-04-09T21:10:43Z",
        "closed_at": "2023-04-09T21:10:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1115",
            "html_url": "https://github.com/run-llama/llama_index/pull/1115",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1115.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1115.patch",
            "merged_at": "2023-04-09T21:10:43Z"
        },
        "body": "While internet connection is unstable, this step become slow.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1115/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1115/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1114",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1114/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1114/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1114/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1114",
        "id": 1659633482,
        "node_id": "I_kwDOIWuq585i6_9K",
        "number": 1114,
        "title": "Question: Is there a way to replace the default chat refine prompt?",
        "user": {
            "login": "LLYX",
            "id": 10430633,
            "node_id": "MDQ6VXNlcjEwNDMwNjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/10430633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LLYX",
            "html_url": "https://github.com/LLYX",
            "followers_url": "https://api.github.com/users/LLYX/followers",
            "following_url": "https://api.github.com/users/LLYX/following{/other_user}",
            "gists_url": "https://api.github.com/users/LLYX/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LLYX/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LLYX/subscriptions",
            "organizations_url": "https://api.github.com/users/LLYX/orgs",
            "repos_url": "https://api.github.com/users/LLYX/repos",
            "events_url": "https://api.github.com/users/LLYX/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LLYX/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-04-08T20:12:43Z",
        "updated_at": "2023-04-09T20:56:03Z",
        "closed_at": "2023-04-09T20:56:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I wrote a custom refine prompt but when I use ChatGPT, it doesn't seem to be using my custom prompt. \r\n\r\nhttps://github.com/jerryjliu/llama_index/pull/867",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1114/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1114/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1113",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1113/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1113/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1113/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1113",
        "id": 1659585717,
        "node_id": "I_kwDOIWuq585i60S1",
        "number": 1113,
        "title": "Could we get some better instructions on this...",
        "user": {
            "login": "Atlas3DSS",
            "id": 89653506,
            "node_id": "MDQ6VXNlcjg5NjUzNTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/89653506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Atlas3DSS",
            "html_url": "https://github.com/Atlas3DSS",
            "followers_url": "https://api.github.com/users/Atlas3DSS/followers",
            "following_url": "https://api.github.com/users/Atlas3DSS/following{/other_user}",
            "gists_url": "https://api.github.com/users/Atlas3DSS/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Atlas3DSS/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Atlas3DSS/subscriptions",
            "organizations_url": "https://api.github.com/users/Atlas3DSS/orgs",
            "repos_url": "https://api.github.com/users/Atlas3DSS/repos",
            "events_url": "https://api.github.com/users/Atlas3DSS/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Atlas3DSS/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-08T17:13:22Z",
        "updated_at": "2023-07-22T19:37:26Z",
        "closed_at": "2023-07-22T19:37:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "![image](https://user-images.githubusercontent.com/89653506/230734202-3d28e77a-ccbc-49f2-be1a-7659257e1e8c.png)\r\n\r\n\r\nI understand that newbs need to \"git gud\" but clearer followable instructions on the examples would be super helpful. None of them work out of the box and its very difficult as a newb to try and learn while following the examples. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1113/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1113/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1112",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1112/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1112/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1112/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1112",
        "id": 1659519868,
        "node_id": "I_kwDOIWuq585i6kN8",
        "number": 1112,
        "title": "What would be the best way to give the name of document who contains the answer?",
        "user": {
            "login": "clement-fifty",
            "id": 48443958,
            "node_id": "MDQ6VXNlcjQ4NDQzOTU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/48443958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clement-fifty",
            "html_url": "https://github.com/clement-fifty",
            "followers_url": "https://api.github.com/users/clement-fifty/followers",
            "following_url": "https://api.github.com/users/clement-fifty/following{/other_user}",
            "gists_url": "https://api.github.com/users/clement-fifty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clement-fifty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clement-fifty/subscriptions",
            "organizations_url": "https://api.github.com/users/clement-fifty/orgs",
            "repos_url": "https://api.github.com/users/clement-fifty/repos",
            "events_url": "https://api.github.com/users/clement-fifty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clement-fifty/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-08T13:11:53Z",
        "updated_at": "2023-04-08T19:49:08Z",
        "closed_at": "2023-04-08T19:49:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This project is great!\r\n\r\nI'm trying to have a bot who can answer based on answers in many PDF files. It would be a huge help if the bot could also say which document the answer is from.\r\n\r\nHow could I achieve this?\r\n\r\nThanks in advance",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1112/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1112/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1111",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1111/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1111/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1111/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1111",
        "id": 1659449224,
        "node_id": "I_kwDOIWuq585i6S-I",
        "number": 1111,
        "title": "Output parsers breaks for Chatgpt",
        "user": {
            "login": "smyja",
            "id": 20070770,
            "node_id": "MDQ6VXNlcjIwMDcwNzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20070770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smyja",
            "html_url": "https://github.com/smyja",
            "followers_url": "https://api.github.com/users/smyja/followers",
            "following_url": "https://api.github.com/users/smyja/following{/other_user}",
            "gists_url": "https://api.github.com/users/smyja/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smyja/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smyja/subscriptions",
            "organizations_url": "https://api.github.com/users/smyja/orgs",
            "repos_url": "https://api.github.com/users/smyja/repos",
            "events_url": "https://api.github.com/users/smyja/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smyja/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-08T08:44:06Z",
        "updated_at": "2023-09-12T20:48:08Z",
        "closed_at": "2023-08-18T16:16:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "i noticed that the guardrails outparser breaks and outputs the rails specification when i try to use gpt3.5-turbo wiith llamaindex `llm_predictor = StructuredLLMPredictor(llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\"))`\r\n i don't have any issue with other models.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1111/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1110",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1110/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1110/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1110/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1110",
        "id": 1659444468,
        "node_id": "I_kwDOIWuq585i6Rz0",
        "number": 1110,
        "title": "ValueError: chroma_collection is required when composing graph from GPTChromaIndex",
        "user": {
            "login": "jakkaj",
            "id": 5225782,
            "node_id": "MDQ6VXNlcjUyMjU3ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5225782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakkaj",
            "html_url": "https://github.com/jakkaj",
            "followers_url": "https://api.github.com/users/jakkaj/followers",
            "following_url": "https://api.github.com/users/jakkaj/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakkaj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakkaj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakkaj/subscriptions",
            "organizations_url": "https://api.github.com/users/jakkaj/orgs",
            "repos_url": "https://api.github.com/users/jakkaj/repos",
            "events_url": "https://api.github.com/users/jakkaj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakkaj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-08T08:23:41Z",
        "updated_at": "2023-09-10T17:05:48Z",
        "closed_at": "2023-09-10T17:05:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hey team. \r\n\r\nI'm trialing producing graphs from multiple GPTChromaIndex elements. \r\n\r\nEach individual chroma index is a different collection within the same chroma database. They are sourced in this case from GitHub repos. \r\n\r\nIt is produced like this:\r\n```python\r\nindex = GPTChromaIndex.from_documents(docs_branch, service_context=service_context, chroma_collection=chroma_collection)\r\nindex.save_to_disk(f'./index_{collection_name}.json')\r\n```\r\n\r\nWhen querying in my code, it works fine if I just use each collection as a `IndexToolConfig` and pass them in to a new `LlamaToolkit` object. \r\n\r\n```python\r\n\r\nindex_names = [i[\"name\"] for i in index_summaries]\r\n\r\nfor i in index_summaries:\r\n        \r\n    collection = i[\"collection\"]\r\n    print(collection)\r\n\r\n    chroma_client = chromadb.Client( Settings(\r\n            persist_directory='../data/chromadata_sample',\r\n            chroma_db_impl=\"duckdb+parquet\",\r\n        ))\r\n\r\n    chroma_collection = chroma_client.get_or_create_collection(collection)\r\n    #cur_index = GPTSimpleVectorIndex.load_from_disk(f'index_edifice.json', service_context=service_context)\r\n    cur_index = GPTChromaIndex.load_from_disk(f'./index_{collection}.json', chroma_collection=chroma_collection, service_context=service_context)\r\n    indices.append(cur_index)\r\n\r\n    print(len(cur_index.docstore.ref_doc_info))\r\n\r\n    tool_config = IndexToolConfig(\r\n        index=cur_index, \r\n        \r\n        name=i[\"name\"],\r\n        description=i[\"description\"],\r\n        index_query_kwargs={\"similarity_top_k\": 5},\r\n        tool_kwargs={\"return_direct\": True}\r\n    )\r\n\r\n    index_configs.append(tool_config)\r\n\r\n\r\n```\r\n\r\nHowever when I try to use a composed graph over the same collections I get an error. \r\n\r\n```\r\n  File \"/usr/local/lib/python3.10/runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"/usr/local/lib/python3.10/runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/vscode/.vscode-server-insiders/extensions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy/__main__.py\", line 39, in <module>\r\n    cli.main()\r\n  File \"/home/vscode/.vscode-server-insiders/extensions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy/../debugpy/server/cli.py\", line 430, in main\r\n    run()\r\n  File \"/home/vscode/.vscode-server-insiders/extensions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy/../debugpy/server/cli.py\", line 284, in run_file\r\n    runpy.run_path(target, run_name=\"__main__\")\r\n  File \"/home/vscode/.vscode-server-insiders/extensions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py\", line 321, in run_path\r\n    return _run_module_code(code, init_globals, run_name,\r\n  File \"/home/vscode/.vscode-server-insiders/extensions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py\", line 135, in _run_module_code\r\n    _run_code(code, mod_globals, init_globals,\r\n  File \"/home/vscode/.vscode-server-insiders/extensions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py\", line 124, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/workspaces/cseGPT/autoripper/autoripper_tester.py\", line 204, in <module>\r\n    response = agent_chain.run(input=text_input)\r\n  File \"/usr/local/lib/python3.10/site-packages/langchain/chains/base.py\", line 216, in run\r\n    return self(kwargs)[self.output_keys[0]]\r\n  File \"/usr/local/lib/python3.10/site-packages/langchain/chains/base.py\", line 116, in __call__\r\n    raise e\r\n  File \"/usr/local/lib/python3.10/site-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n  File \"/usr/local/lib/python3.10/site-packages/langchain/agents/agent.py\", line 637, in _call\r\n    next_step_output = self._take_next_step(\r\n  File \"/usr/local/lib/python3.10/site-packages/langchain/agents/agent.py\", line 569, in _take_next_step\r\n    observation = tool.run(\r\n  File \"/usr/local/lib/python3.10/site-packages/langchain/tools/base.py\", line 73, in run\r\n    raise e\r\n  File \"/usr/local/lib/python3.10/site-packages/langchain/tools/base.py\", line 70, in run\r\n    observation = self._run(tool_input)\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/langchain_helpers/agents/tools.py\", line 89, in _run\r\n    response = self.graph.query(tool_input, query_configs=query_configs)\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/indices/composability/graph.py\", line 145, in query\r\n    return query_runner.query(query_str)\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/indices/query/query_runner.py\", line 342, in query\r\n    return query_combiner.run(query_bundle, level)\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/indices/query/query_combiner/base.py\", line 66, in run\r\n    return self._query_runner.query_transformed(\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/indices/query/query_runner.py\", line 192, in query_transformed\r\n    node_with_score, source_nodes = self._fetch_recursive_nodes(\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/indices/query/query_runner.py\", line 219, in _fetch_recursive_nodes\r\n    response = self.query(query_bundle, index_node.index_id, level + 1)\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/indices/query/query_runner.py\", line 342, in query\r\n    return query_combiner.run(query_bundle, level)\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/indices/query/query_combiner/base.py\", line 66, in run\r\n    return self._query_runner.query_transformed(\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/indices/query/query_runner.py\", line 182, in query_transformed\r\n    query_obj = self._get_query_obj(index_struct)\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/indices/query/query_runner.py\", line 167, in _get_query_obj\r\n    query_obj = query_cls(\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/indices/vector_store/queries.py\", line 203, in __init__\r\n    raise ValueError(\"chroma_collection is required.\")\r\nValueError: chroma_collection is required.\r\n```\r\n\r\nThe graph config is as follows:\r\n\r\n```python\r\n\r\ngraph = ComposableGraph.from_indices(\r\n    GPTListIndex,\r\n    indices, \r\n    index_summaries=index_names,\r\n    service_context=service_context,\r\n)\r\n\r\n\r\n\r\ndecompose_transform = DecomposeQueryTransform(\r\n    llm_predictor, verbose=True\r\n)\r\n\r\n# define query configs for graph \r\nquery_configs = [\r\n    {\r\n        \"index_struct_type\": \"simple_dict\",\r\n        \"query_mode\": \"default\",\r\n        \"query_kwargs\": {\r\n            \"similarity_top_k\": 1,\r\n            # \"include_summary\": True\r\n        },\r\n        \"query_transform\": decompose_transform\r\n    },\r\n    {\r\n        \"index_struct_type\": \"list\",\r\n        \"query_mode\": \"default\",\r\n        \"query_kwargs\": {\r\n            \"response_mode\": \"tree_summarize\",\r\n            \"verbose\": True\r\n        }\r\n    },    \r\n    {\r\n        \"index_struct_type\": \"tree\",\r\n        \"query_mode\": \"default\",\r\n        \"query_kwargs\": {\r\n            \"verbose\": True\r\n        },\r\n    },\r\n]\r\n# graph config\r\ngraph_config = GraphToolConfig(\r\n    graph=graph,\r\n    name=f\"Graph Index\",\r\n    description=\"useful for when you want to answer queries that require analyzing multiple documents for the Edifice Project.\",\r\n    query_configs=query_configs,\r\n    tool_kwargs={\"return_direct\": False}\r\n)\r\n```\r\n\r\nI'd pass in the chroma_collection as kwargs, but it doesn't make sense as each separate sub index has a different collection. \r\n\r\nAny advice appreciated!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1110/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1110/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1109",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1109/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1109/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1109/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1109",
        "id": 1659441438,
        "node_id": "PR_kwDOIWuq585N3qXq",
        "number": 1109,
        "title": "QdrantVectorStore new index creation fix",
        "user": {
            "login": "Mikkolehtimaki",
            "id": 13274545,
            "node_id": "MDQ6VXNlcjEzMjc0NTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13274545?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mikkolehtimaki",
            "html_url": "https://github.com/Mikkolehtimaki",
            "followers_url": "https://api.github.com/users/Mikkolehtimaki/followers",
            "following_url": "https://api.github.com/users/Mikkolehtimaki/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mikkolehtimaki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mikkolehtimaki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mikkolehtimaki/subscriptions",
            "organizations_url": "https://api.github.com/users/Mikkolehtimaki/orgs",
            "repos_url": "https://api.github.com/users/Mikkolehtimaki/repos",
            "events_url": "https://api.github.com/users/Mikkolehtimaki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mikkolehtimaki/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-08T08:11:16Z",
        "updated_at": "2023-04-09T17:33:22Z",
        "closed_at": "2023-04-09T17:33:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1109",
            "html_url": "https://github.com/run-llama/llama_index/pull/1109",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1109.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1109.patch",
            "merged_at": "2023-04-09T17:33:21Z"
        },
        "body": "QdrantVectorStore was failing to create new collections with the HTTP client. Reason was that the check for already existing collections did not catch the correct exception from the failing `get_collection` call.\r\n\r\nIf a collection is not found, Qdrant Client throws an UnexceptedResponse. Added this to checking if collection exists.\r\n\r\n@kacperlukawski what do you think of the solution?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1109/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1109/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1108",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1108/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1108/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1108/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1108",
        "id": 1659440919,
        "node_id": "PR_kwDOIWuq585N3qRx",
        "number": 1108,
        "title": "update environment setup to include windows",
        "user": {
            "login": "notauserx",
            "id": 82922717,
            "node_id": "MDQ6VXNlcjgyOTIyNzE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/82922717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/notauserx",
            "html_url": "https://github.com/notauserx",
            "followers_url": "https://api.github.com/users/notauserx/followers",
            "following_url": "https://api.github.com/users/notauserx/following{/other_user}",
            "gists_url": "https://api.github.com/users/notauserx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/notauserx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/notauserx/subscriptions",
            "organizations_url": "https://api.github.com/users/notauserx/orgs",
            "repos_url": "https://api.github.com/users/notauserx/repos",
            "events_url": "https://api.github.com/users/notauserx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/notauserx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-08T08:09:08Z",
        "updated_at": "2023-04-11T02:53:20Z",
        "closed_at": "2023-04-11T02:53:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1108",
            "html_url": "https://github.com/run-llama/llama_index/pull/1108",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1108.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1108.patch",
            "merged_at": "2023-04-11T02:53:20Z"
        },
        "body": "when I was setting up my dev environment, I found the instructions for Windows were missing in the environment setup section. I've updated the docs to include the activation instruction for Windows",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1108/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1108/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1107",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1107/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1107/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1107/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1107",
        "id": 1659432744,
        "node_id": "I_kwDOIWuq585i6O8o",
        "number": 1107,
        "title": "How to get the usage and other information responded by OpenAI?",
        "user": {
            "login": "RockerFlower",
            "id": 5019152,
            "node_id": "MDQ6VXNlcjUwMTkxNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5019152?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RockerFlower",
            "html_url": "https://github.com/RockerFlower",
            "followers_url": "https://api.github.com/users/RockerFlower/followers",
            "following_url": "https://api.github.com/users/RockerFlower/following{/other_user}",
            "gists_url": "https://api.github.com/users/RockerFlower/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RockerFlower/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RockerFlower/subscriptions",
            "organizations_url": "https://api.github.com/users/RockerFlower/orgs",
            "repos_url": "https://api.github.com/users/RockerFlower/repos",
            "events_url": "https://api.github.com/users/RockerFlower/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RockerFlower/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-08T07:38:04Z",
        "updated_at": "2023-07-22T19:08:12Z",
        "closed_at": "2023-07-22T19:08:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "This is the response message from the OpenAI api:\r\n\r\n```\r\n{\r\n   \"id\":\"chatcmpl-abc123\",\r\n   \"object\":\"chat.completion\",\r\n   \"created\":1677858242,\r\n   \"model\":\"gpt-3.5-turbo-0301\",\r\n   \"usage\":{\r\n      \"prompt_tokens\":13,\r\n      \"completion_tokens\":7,\r\n      \"total_tokens\":20\r\n   },\r\n   \"choices\":[\r\n      {\r\n         \"message\":{\r\n            \"role\":\"assistant\",\r\n            \"content\":\"\\n\\nThis is a test!\"\r\n         },\r\n         \"finish_reason\":\"stop\",\r\n         \"index\":0\r\n      }\r\n   ]\r\n}\r\n```\r\n\r\nHere's the response I get using index.query:\r\n\r\n```\r\n{\r\n    \"extra_info\": null,\r\n    \"response\": \"text\",\r\n    \"source_nodes\": [\r\n        {\r\n            \"node\": {\r\n                \"doc_hash\": \"42b5f8b6acb0c03e229b6093479990dccf70e77525d9ce869cabea7bc8389460\",\r\n                \"doc_id\": \"047322ad-3bc6-49be-a2fb-6a0a710c39fb\",\r\n                \"embedding\": null,\r\n                \"extra_info\": null,\r\n                \"node_info\": {\r\n                    \"end\": 12360,\r\n                    \"start\": 11744\r\n                },\r\n                \"relationships\": {\r\n                    \"1\": \"a07a2f85-7735-4648-b78f-a43b66bc38fb\",\r\n                    \"2\": \"85320698-eeef-4682-ad22-a1fc4d968807\",\r\n                    \"3\": \"729bf224-b65c-4285-94df-7492abf989d1\"\r\n                },\r\n                \"text\":\"\\ntext\\n\"\r\n            },\r\n            \"score\": 0.8182768021866872\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nHow can I get the `usage` and other information returned by OpenAI? Compared with the prediction, this really reflects my spending.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1107/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1107/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1106",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1106/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1106/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1106/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1106",
        "id": 1659399806,
        "node_id": "I_kwDOIWuq585i6G5-",
        "number": 1106,
        "title": "\"ValueError: Vector store is required for vector store query.\" after loading ComposableGraph from disk",
        "user": {
            "login": "LLYX",
            "id": 10430633,
            "node_id": "MDQ6VXNlcjEwNDMwNjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/10430633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LLYX",
            "html_url": "https://github.com/LLYX",
            "followers_url": "https://api.github.com/users/LLYX/followers",
            "following_url": "https://api.github.com/users/LLYX/following{/other_user}",
            "gists_url": "https://api.github.com/users/LLYX/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LLYX/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LLYX/subscriptions",
            "organizations_url": "https://api.github.com/users/LLYX/orgs",
            "repos_url": "https://api.github.com/users/LLYX/repos",
            "events_url": "https://api.github.com/users/LLYX/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LLYX/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-08T05:25:52Z",
        "updated_at": "2023-04-09T07:56:55Z",
        "closed_at": "2023-04-09T07:56:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I created a ComposableGraph on top of some SimpleVectorStore indices, and it worked during the first session. I saved the graph to disk, and then loaded it later, however now attempting to query it results in the \"ValueError: Vector store is required for vector store query.\" from the title. Am I doing something wrong during the saving and loading process? I'm just using graph.save_to_disk(-filepath-) and ComposableGraph.load_from_disk(-filepath-).",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1106/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1106/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1105",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1105/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1105/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1105/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1105",
        "id": 1659293237,
        "node_id": "PR_kwDOIWuq585N3Noy",
        "number": 1105,
        "title": "[version] bump version to 0.5.10",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-07T23:37:57Z",
        "updated_at": "2023-04-07T23:44:12Z",
        "closed_at": "2023-04-07T23:44:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1105",
            "html_url": "https://github.com/run-llama/llama_index/pull/1105",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1105.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1105.patch",
            "merged_at": "2023-04-07T23:44:11Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1105/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1105/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1104",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1104/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1104/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1104/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1104",
        "id": 1659285387,
        "node_id": "PR_kwDOIWuq585N3MC-",
        "number": 1104,
        "title": "Weaviate hybrid search support ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-07T23:15:02Z",
        "updated_at": "2023-04-07T23:36:41Z",
        "closed_at": "2023-04-07T23:36:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1104",
            "html_url": "https://github.com/run-llama/llama_index/pull/1104",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1104.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1104.patch",
            "merged_at": "2023-04-07T23:36:40Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1104/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1104/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1103",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1103/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1103/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1103/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1103",
        "id": 1659240066,
        "node_id": "PR_kwDOIWuq585N3Cbg",
        "number": 1103,
        "title": "Cleanup Weaviate code ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-07T21:54:54Z",
        "updated_at": "2023-04-07T22:13:01Z",
        "closed_at": "2023-04-07T22:13:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1103",
            "html_url": "https://github.com/run-llama/llama_index/pull/1103",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1103.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1103.patch",
            "merged_at": "2023-04-07T22:13:00Z"
        },
        "body": "Minimal no-op cleanup. Rip out coupling with IndexStruct. Only operate on Nodes. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1103/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1103/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1102",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1102/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1102/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1102/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1102",
        "id": 1659220983,
        "node_id": "PR_kwDOIWuq585N2-s1",
        "number": 1102,
        "title": "fix hybrid notebook ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-07T21:30:47Z",
        "updated_at": "2023-04-07T21:35:22Z",
        "closed_at": "2023-04-07T21:35:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1102",
            "html_url": "https://github.com/run-llama/llama_index/pull/1102",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1102.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1102.patch",
            "merged_at": "2023-04-07T21:35:22Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1102/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1102/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1101",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1101/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1101/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1101/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1101",
        "id": 1659128020,
        "node_id": "PR_kwDOIWuq585N2q0b",
        "number": 1101,
        "title": "Hot fix Weaviate test",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-07T19:39:13Z",
        "updated_at": "2023-04-07T19:43:30Z",
        "closed_at": "2023-04-07T19:43:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1101",
            "html_url": "https://github.com/run-llama/llama_index/pull/1101",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1101.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1101.patch",
            "merged_at": "2023-04-07T19:43:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1101/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1101/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1100",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1100/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1100/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1100/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1100",
        "id": 1658962326,
        "node_id": "I_kwDOIWuq585i4cGW",
        "number": 1100,
        "title": "How to perform semantic search on GPTSimpleVectorIndex",
        "user": {
            "login": "athenawisdoms",
            "id": 6615285,
            "node_id": "MDQ6VXNlcjY2MTUyODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6615285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/athenawisdoms",
            "html_url": "https://github.com/athenawisdoms",
            "followers_url": "https://api.github.com/users/athenawisdoms/followers",
            "following_url": "https://api.github.com/users/athenawisdoms/following{/other_user}",
            "gists_url": "https://api.github.com/users/athenawisdoms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/athenawisdoms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/athenawisdoms/subscriptions",
            "organizations_url": "https://api.github.com/users/athenawisdoms/orgs",
            "repos_url": "https://api.github.com/users/athenawisdoms/repos",
            "events_url": "https://api.github.com/users/athenawisdoms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/athenawisdoms/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-07T16:04:58Z",
        "updated_at": "2023-05-13T12:30:49Z",
        "closed_at": "2023-04-07T19:32:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Given a `GPTSimpleVectorIndex`, is it possible to query it as a semantic search, so it returns the relavant text without sending it to the LLM?\r\n\r\nThe only way to query the index that I am aware of (shown below) will use the LLM.\r\n\r\n```py\r\nindex = GPTSimpleVectorIndex.load_from_disk(\"index.json\")\r\nresponse = index.query(query_str)\r\n```\r\n\r\nIf not possible with `GPTSimpleVectorIndex`, what is the next best way to perform the semantic search?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1100/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1100/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1099",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1099/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1099/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1099/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1099",
        "id": 1658868795,
        "node_id": "I_kwDOIWuq585i4FQ7",
        "number": 1099,
        "title": "How to make him answer only based on the content of my document when asking",
        "user": {
            "login": "xiaojun2sheng",
            "id": 33241230,
            "node_id": "MDQ6VXNlcjMzMjQxMjMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/33241230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaojun2sheng",
            "html_url": "https://github.com/xiaojun2sheng",
            "followers_url": "https://api.github.com/users/xiaojun2sheng/followers",
            "following_url": "https://api.github.com/users/xiaojun2sheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaojun2sheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaojun2sheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaojun2sheng/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaojun2sheng/orgs",
            "repos_url": "https://api.github.com/users/xiaojun2sheng/repos",
            "events_url": "https://api.github.com/users/xiaojun2sheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaojun2sheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-07T14:31:57Z",
        "updated_at": "2023-04-11T14:09:25Z",
        "closed_at": "2023-04-08T13:49:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "How to make him answer only based on the content of my document when asking, and don't use knowledge beyond the document to reply to me. If you can't find the corresponding answer in the document, reply to my fixed copy\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1099/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1099/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1098",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1098/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1098/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1098/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1098",
        "id": 1658784349,
        "node_id": "I_kwDOIWuq585i3wpd",
        "number": 1098,
        "title": "\u600e\u4e48\u914d\u7f6e\u4ee3\u7406\u80fd\u8fde\u63a5\u5230openAI api\uff1fWARNING:urllib3.connectionpool:Retrying",
        "user": {
            "login": "lvjianxin",
            "id": 14145018,
            "node_id": "MDQ6VXNlcjE0MTQ1MDE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/14145018?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lvjianxin",
            "html_url": "https://github.com/lvjianxin",
            "followers_url": "https://api.github.com/users/lvjianxin/followers",
            "following_url": "https://api.github.com/users/lvjianxin/following{/other_user}",
            "gists_url": "https://api.github.com/users/lvjianxin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lvjianxin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lvjianxin/subscriptions",
            "organizations_url": "https://api.github.com/users/lvjianxin/orgs",
            "repos_url": "https://api.github.com/users/lvjianxin/repos",
            "events_url": "https://api.github.com/users/lvjianxin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lvjianxin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-07T13:02:41Z",
        "updated_at": "2023-04-08T19:55:23Z",
        "closed_at": "2023-04-08T19:55:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "WARNING:urllib3.connectionpool:Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', OSError('Tunnel connection failed: 400 Bad Request'))': /v1....",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1098/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1098/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1097",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1097/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1097/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1097/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1097",
        "id": 1658623987,
        "node_id": "I_kwDOIWuq585i3Jfz",
        "number": 1097,
        "title": "Can i get similarity_top_k in faiss index?",
        "user": {
            "login": "roujun1115",
            "id": 114386336,
            "node_id": "U_kgDOBtFloA",
            "avatar_url": "https://avatars.githubusercontent.com/u/114386336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/roujun1115",
            "html_url": "https://github.com/roujun1115",
            "followers_url": "https://api.github.com/users/roujun1115/followers",
            "following_url": "https://api.github.com/users/roujun1115/following{/other_user}",
            "gists_url": "https://api.github.com/users/roujun1115/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/roujun1115/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/roujun1115/subscriptions",
            "organizations_url": "https://api.github.com/users/roujun1115/orgs",
            "repos_url": "https://api.github.com/users/roujun1115/repos",
            "events_url": "https://api.github.com/users/roujun1115/events{/privacy}",
            "received_events_url": "https://api.github.com/users/roujun1115/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-07T10:02:06Z",
        "updated_at": "2023-09-10T17:05:58Z",
        "closed_at": "2023-09-10T17:05:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using GPTFaissIndex and want to get the top 5 closest matching term to the query. \r\nCan someone clarify where to set the parameter? i have tried to set in index.query but failed\r\nCode:\r\n```\r\nquery = \"Who is the author in the book?\"\r\nd = 1536\r\nfaiss_index = faiss.IndexFlatL2(d)\r\ndocuments = SimpleDirectoryReader('./test').load_data()\r\npromptHelper = PromptHelper(2000, 512,20)\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=promptHelper)\r\nindex = GPTFaissIndex.from_documents(documents, faiss_index=faiss_index, service_context=service_context)\r\nresult = index.query(\r\n      query_final,\r\n      similarity_top_k=5,\r\n      text_qa_template=prompt,\r\n      mode=\"embedding\",\r\n)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1097/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1097/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1096",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1096/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1096/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1096/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1096",
        "id": 1658613310,
        "node_id": "PR_kwDOIWuq585N1BKN",
        "number": 1096,
        "title": "Fix GPTFaissIndex vector store",
        "user": {
            "login": "dominicqi",
            "id": 12235378,
            "node_id": "MDQ6VXNlcjEyMjM1Mzc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12235378?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dominicqi",
            "html_url": "https://github.com/dominicqi",
            "followers_url": "https://api.github.com/users/dominicqi/followers",
            "following_url": "https://api.github.com/users/dominicqi/following{/other_user}",
            "gists_url": "https://api.github.com/users/dominicqi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dominicqi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dominicqi/subscriptions",
            "organizations_url": "https://api.github.com/users/dominicqi/orgs",
            "repos_url": "https://api.github.com/users/dominicqi/repos",
            "events_url": "https://api.github.com/users/dominicqi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dominicqi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-07T09:51:54Z",
        "updated_at": "2023-04-07T20:48:42Z",
        "closed_at": "2023-04-07T20:48:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1096",
            "html_url": "https://github.com/run-llama/llama_index/pull/1096",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1096.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1096.patch",
            "merged_at": "2023-04-07T20:48:41Z"
        },
        "body": "### Summary\r\n\r\nGPTFaissIndex.load_from_disk error \r\n\r\nFix GPTFaissIndex vector store after #1011 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1096/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1096/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1095",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1095/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1095/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1095/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1095",
        "id": 1658541266,
        "node_id": "PR_kwDOIWuq585N0yeE",
        "number": 1095,
        "title": "[WIP] change vector store query interface / support initial hybrid search (for pinecone) ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-07T08:39:00Z",
        "updated_at": "2023-04-07T20:42:06Z",
        "closed_at": "2023-04-07T20:42:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1095",
            "html_url": "https://github.com/run-llama/llama_index/pull/1095",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1095.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1095.patch",
            "merged_at": "2023-04-07T20:42:05Z"
        },
        "body": "1) abstracted query args in vector store to VectorStoreQuery dataclass. Allows us to add more configurable arguments to each query call (including the search mode like dense/sparse/hybrid\r\n\r\n2) implemented basic sparse vector encoding + querying for pinecone, following this guide. https://docs.pinecone.io/docs/hybrid-search. Helps to enable hybrid search.\r\n\r\nNeed to fix some tests but tested on pinecone nb and it seems to work ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1095/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1095/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1094",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1094/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1094/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1094/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1094",
        "id": 1658356525,
        "node_id": "I_kwDOIWuq585i2IMt",
        "number": 1094,
        "title": "AttributeError: 'ChatOpenAI' object has no attribute 'get_llm_metadata'",
        "user": {
            "login": "handrew",
            "id": 1425219,
            "node_id": "MDQ6VXNlcjE0MjUyMTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1425219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/handrew",
            "html_url": "https://github.com/handrew",
            "followers_url": "https://api.github.com/users/handrew/followers",
            "following_url": "https://api.github.com/users/handrew/following{/other_user}",
            "gists_url": "https://api.github.com/users/handrew/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/handrew/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/handrew/subscriptions",
            "organizations_url": "https://api.github.com/users/handrew/orgs",
            "repos_url": "https://api.github.com/users/handrew/repos",
            "events_url": "https://api.github.com/users/handrew/events{/privacy}",
            "received_events_url": "https://api.github.com/users/handrew/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-07T04:46:01Z",
        "updated_at": "2023-04-07T05:18:38Z",
        "closed_at": "2023-04-07T05:00:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I was previously using a custom LLMPredictor from LangChain to use gpt-3.5-turbo to query embeddings (see below). That no longer works with the 0.5.x updates. How do I use 3.5 now :(? \r\n\r\n```\r\nllm_predictor = LLMPredictor(llm=ChatOpenAI(**CHATGPT_KWARGS))\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor)\r\nindex = GPTSimpleVectorIndex.from_documents(docs, service_context=service_context)\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1094/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1094/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1093",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1093/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1093/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1093/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1093",
        "id": 1658337244,
        "node_id": "PR_kwDOIWuq585N0KAa",
        "number": 1093,
        "title": "Ping langchain version",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-07T04:11:32Z",
        "updated_at": "2023-04-07T04:12:50Z",
        "closed_at": "2023-04-07T04:12:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1093",
            "html_url": "https://github.com/run-llama/llama_index/pull/1093",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1093.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1093.patch",
            "merged_at": "2023-04-07T04:12:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1093/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1093/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1092",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1092/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1092/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1092/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1092",
        "id": 1658332638,
        "node_id": "PR_kwDOIWuq585N0JFV",
        "number": 1092,
        "title": "Revise vector store ctors",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-07T04:04:32Z",
        "updated_at": "2023-04-07T04:07:02Z",
        "closed_at": "2023-04-07T04:07:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1092",
            "html_url": "https://github.com/run-llama/llama_index/pull/1092",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1092.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1092.patch",
            "merged_at": "2023-04-07T04:07:01Z"
        },
        "body": "### Summary\r\n* Revise vector store ctors after https://github.com/jerryjliu/llama_index/pull/1011\r\n* Add simple save/load test for Weaviate  ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1092/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1092/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1091",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1091/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1091/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1091/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1091",
        "id": 1658295320,
        "node_id": "I_kwDOIWuq585i15QY",
        "number": 1091,
        "title": "Get gpt-3.5-turbo query to respond like ChatGPT website?",
        "user": {
            "login": "gameveloster",
            "id": 103383490,
            "node_id": "U_kgDOBimBwg",
            "avatar_url": "https://avatars.githubusercontent.com/u/103383490?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gameveloster",
            "html_url": "https://github.com/gameveloster",
            "followers_url": "https://api.github.com/users/gameveloster/followers",
            "following_url": "https://api.github.com/users/gameveloster/following{/other_user}",
            "gists_url": "https://api.github.com/users/gameveloster/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gameveloster/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gameveloster/subscriptions",
            "organizations_url": "https://api.github.com/users/gameveloster/orgs",
            "repos_url": "https://api.github.com/users/gameveloster/repos",
            "events_url": "https://api.github.com/users/gameveloster/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gameveloster/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-07T02:59:57Z",
        "updated_at": "2023-04-08T20:09:02Z",
        "closed_at": "2023-04-08T20:09:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I notice that when using `llama-index` with `gpt-3.5-turbo`, the response was very much like a regular human. \r\n\r\n```py\r\nindex = GPTSimpleVectorIndex(documents, service_context=service_context)\r\nresponse = index.query(the_query)\r\n```\r\n\r\nIs there a way to configure the query such that the response is similar to what you get on `chat.openai.com/chat`, where the response tends to contain a list of bullet points (but not always)?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1091/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1091/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1090",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1090/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1090/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1090/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1090",
        "id": 1658251658,
        "node_id": "I_kwDOIWuq585i1umK",
        "number": 1090,
        "title": "Unable to create GPTListIndex - ValueError: nodes must be a list of Node objects",
        "user": {
            "login": "athenawisdoms",
            "id": 6615285,
            "node_id": "MDQ6VXNlcjY2MTUyODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6615285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/athenawisdoms",
            "html_url": "https://github.com/athenawisdoms",
            "followers_url": "https://api.github.com/users/athenawisdoms/followers",
            "following_url": "https://api.github.com/users/athenawisdoms/following{/other_user}",
            "gists_url": "https://api.github.com/users/athenawisdoms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/athenawisdoms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/athenawisdoms/subscriptions",
            "organizations_url": "https://api.github.com/users/athenawisdoms/orgs",
            "repos_url": "https://api.github.com/users/athenawisdoms/repos",
            "events_url": "https://api.github.com/users/athenawisdoms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/athenawisdoms/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-07T02:01:00Z",
        "updated_at": "2023-04-11T19:38:30Z",
        "closed_at": "2023-04-07T04:33:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When trying to construct a `GPTListIndex` from a list of `GPTSimpleVectorIndex`, I'm getting the error\r\n\r\n> ValueError: nodes must be a list of Node objects\r\n\r\nHere's my code that raises this error:\r\n\r\n```py\r\nfrom llama_index import (\r\n    GPTListIndex,\r\n    GPTSimpleVectorIndex,\r\n)\r\n\r\nidx_1 = GPTSimpleVectorIndex.load_from_disk(\"foo.json\")\r\nindex = GPTListIndex([idx_1])\r\n```\r\n\r\nFull trace\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/foo/test.py\", line 18, in <module>\r\n    index = GPTListIndex([idx_1])\r\n  File \"/home/foo/.local/lib/python3.10/site-packages/llama_index/indices/list/base.py\", line 54, in __init__\r\n    super().__init__(\r\n  File \"/home/foo/.local/lib/python3.10/site-packages/llama_index/indices/base.py\", line 62, in __init__\r\n    raise ValueError(\"nodes must be a list of Node objects.\")\r\nValueError: nodes must be a list of Node objects.\r\n```\r\n\r\nUsing `llama-index==0.5.9`\r\n\r\nWhy is the creation of `GPTListIndex` giving an error?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1090/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1090/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1089",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1089/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1089/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1089/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1089",
        "id": 1658238635,
        "node_id": "I_kwDOIWuq585i1rar",
        "number": 1089,
        "title": "How to format the data in text file to train the vector index",
        "user": {
            "login": "swloo618",
            "id": 8215791,
            "node_id": "MDQ6VXNlcjgyMTU3OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8215791?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/swloo618",
            "html_url": "https://github.com/swloo618",
            "followers_url": "https://api.github.com/users/swloo618/followers",
            "following_url": "https://api.github.com/users/swloo618/following{/other_user}",
            "gists_url": "https://api.github.com/users/swloo618/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/swloo618/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/swloo618/subscriptions",
            "organizations_url": "https://api.github.com/users/swloo618/orgs",
            "repos_url": "https://api.github.com/users/swloo618/repos",
            "events_url": "https://api.github.com/users/swloo618/events{/privacy}",
            "received_events_url": "https://api.github.com/users/swloo618/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-07T01:38:01Z",
        "updated_at": "2023-04-08T20:18:17Z",
        "closed_at": "2023-04-08T20:18:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have a data as below,\r\n\r\ncurry chicken | $10 | Small\r\ncurry chicken | $12 | medium\r\ncurry chicken | $18 | large\r\ncurry mutton | $18 | medium\r\ncurry mutton | $23 |large\r\nstir fried vege | $8 | medium\r\nstir fried vege | $10 | large\r\n\r\nI try to create a vector index using GPTSimpleVectorIndex and save it to json file.  When I query the  by passing in prompt \"how much you charge for curry chicken, it show me un-train model, can't find the answer.\r\n\r\ncurry chicken , $10 , Small\r\ncurry chicken , $12 , medium\r\ncurry chicken , $18 , large\r\ncurry mutton , $18 , medium\r\ncurry mutton , $23 , large\r\nstir fried vege , $8 , medium\r\nstir fried vege , $10 , large\r\n\r\nI try to re-format my data as above and re-create the vector index again.  This time it's show me $23, small.  The response is not correct.  How I can re-format my data before I build the vector index?\r\n\r\nbelow is the code I use to create the vector index\r\n\r\n    def createvectorindex(path):\r\n        max_input = 4096\r\n        tokens = 256\r\n        chunk_size = 600\r\n        max_chunk_overlap = 20\r\n\r\n        prompt_helper = PromptHelper(max_input, tokens, max_chunk_overlap, chunk_size_limit=chunk_size)\r\n\r\n        # def LLM\r\n        predictor = LLMPredictor(llm=OpenAI(temperature=0, model_name=\"text-davinci-003\", max_tokens=tokens))\r\n\r\n       # def doc\r\n       docs = SimpleDirectoryReader(path).load_data()\r\n       servicecontext = ServiceContext.from_defaults(llm_predictor=predictor, prompt_helper=prompt_helper)\r\n\r\n      # create vector index\r\n      vectorindex = GPTSimpleVectorIndex.from_documents(documents=docs, service_context=servicecontext)\r\n\r\n      vectorindex.save_to_disk('vector.json')\r\n      return vectorindex\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1089/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1089/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1088",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1088/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1088/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1088/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1088",
        "id": 1658222003,
        "node_id": "I_kwDOIWuq585i1nWz",
        "number": 1088,
        "title": "problem document seems to have caused chunker error",
        "user": {
            "login": "fredzannarbor",
            "id": 1165771,
            "node_id": "MDQ6VXNlcjExNjU3NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1165771?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fredzannarbor",
            "html_url": "https://github.com/fredzannarbor",
            "followers_url": "https://api.github.com/users/fredzannarbor/followers",
            "following_url": "https://api.github.com/users/fredzannarbor/following{/other_user}",
            "gists_url": "https://api.github.com/users/fredzannarbor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fredzannarbor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fredzannarbor/subscriptions",
            "organizations_url": "https://api.github.com/users/fredzannarbor/orgs",
            "repos_url": "https://api.github.com/users/fredzannarbor/repos",
            "events_url": "https://api.github.com/users/fredzannarbor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fredzannarbor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-07T01:07:31Z",
        "updated_at": "2023-06-07T19:48:47Z",
        "closed_at": "2023-06-07T19:48:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Error message generated by ChatGPT via llama-index 0.5.\r\nmy code:\r\n```\r\n max_input_size = 4096\r\n    # set number of output tokens\r\n    num_output = 256\r\n    # set maximum chunk overlap\r\n    max_chunk_overlap = 20\r\n    prompt_helper = PromptHelper(max_input_size, num_output, max_chunk_overlap)\r\n    llm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\"))\r\n    service_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, chunk_size_limit=512)\r\n\r\n documents = loader.load_data(Path(thisdoc_dir + '/text.json'))\r\n            nodes = parser.get_nodes_from_documents(documents)\r\n            list_index = GPTListIndex(nodes, service_context=metadatas['service context'])\r\n\r\n[..]\r\ndef summarize_index(metadatas, index):\r\n    summary = index.query(\"Please summarize this document in several paragraphs.\", response_mode=\"tree_summarize\")\r\n    metadatas['summary response'] = summary\r\n    metadatas['summary sources'] = summary.get_formatted_sources()\r\n    return metadatas, summary\r\n\r\n```\r\nthe problematic response. **It looks as if this highly tabular data confused the chunker.**\r\n```\r\n{\r\n  \"code\": \"context_length_exceeded\",\r\n  \"type\": \"invalid_request_error\",\r\n  \"param\": \"messages\",\r\n  \"message\": \"This model's maximum context length is 4096 tokens. However, your messages resulted in 4193 tokens. Please reduce the length of the messages.\"\r\n}\r\n\r\n\r\nMessages\r\n\r\nContext information is below. \r\n---------------------\r\nlist is formatted as follows:  The international designator and number of excluded debris in \\nparenthesis are followed by the SSN numbers, which are not debris.  A blank line separates years. \\n \\nInternational Designator \\n \\n \\n1961-015 (2) - \\n116 117 \\n \\n1962-057 (0) - \\n \\n1963-047 (0) - \\n \\n1964-006 (28) - 746 748 750 751 14427 14428 15786 16544 16545 16546 16547 16548 18589 18686 19010 \\n19173 19990 19991 19992 19993 19994 19995 19996 19997 19998 20101 20224 21621 \\n1964-070 (1) - \\n920 \\n \\n1965-012 (1) - \\n1095 \\n1965-020 (3) - \\n1267 1268 1269 \\n1965-082 (1) - \\n1641 \\n1965-088 (23)  \\n1707 1708 1740 1741 1784 1785 1786 1787 1788 1789 1790 1791 1792 1793 1794 1795 1796 \\n1797 1798 1799 1800 1801 1802 \\n1965-108 (4) -  \\n1870  1902  1941 13912 \\n \\n1966-012 (2) - \\n2012 2014 \\n1966-046 (3) - \\n2186 2189 2190 \\n1966-056 (3) - \\n2255 2256 2511 \\n1966-059 (1)\r\n(1) - \\n2291 \\n1966-088 (1) \\u2013     2438 \\n1966-101 (0) \\u2013 \\n \\n1967-116 (1) - \\n3048  \\n \\n1968-003 (1) - \\n3096 \\n1968-025 (1) - \\n3170 \\n1968-081 (5) - \\n3428 3429 3430 3431 5999 \\n1968-090 (0) - \\n \\n1968-091 (1) - \\n3505 \\n1968-097 (0) \\u2013 \\n1968-114 (1) -     3615 \\n \\n \\n\"\r\n\"0\": \" \\n 690 \\n1969-013 (1) - \\n3691  \\n1969-029 (1) - \\n3835 \\n1969-064 (1) - \\n4051 \\n1969-082 (10) - 4111 4132 4166 4168 4237 4247 4256 4257 4259 4295 \\n \\n1970-025 (2) - \\n4362 4363 \\n1970-089 (1) - \\n4597 \\n1970-091 (0) - \\n \\n \\n1971-015 (1) - \\n4965 \\n1971-106 (4) - \\n5650 5664 5665 5672 \\n \\n1972-058 (1) - \\n6126 \\n \\n1973-017 (1) - \\n6398 \\n1973-021 (4) -\r\n(4) - \\n6434 6436 6442 6443 \\n1973-086 (1) - \\n6920 \\n \\n1974-015 (1) - \\n7218 \\n1974-089 (3) - \\n7529 7530 7531 \\n1974-103 (1) - \\n7588 \\n \\n1975-004 (1) - \\n7615 \\n1975-052 (2) - \\n7924 7965 \\n1975-080 (1) - \\n8192 \\n1975-102 (1) - \\n8417 \\n \\n1976-023 (9) -     8746  8747  8748  8749  8750  8752  8753  8832 13753 \\n1976-063 (1) - \\n8933 \\n1976-067 (2) - \\n9013 9016 \\n1976-072 (1) - \\n9048 \\n1976-077 (1) - \\n9057 \\n1976-105 (3) - \\n9496 9497 9506 \\n1976-120 (2) - \\n9604 9605 \\n1976-123 (4) - \\n9623 9624 9639 9640 \\n1976-126 (3) - \\n9643 9644 9645 \\n \\n1977-027 (3) - \\n9912 9913 9921 \\n1977-047 (3) - \\n10060 10066 10089 \\n1977-065 (3) - \\n10143 10145 10156 \\n1977-068 (3) -\r\n(3) - \\n10151 10152 10167 \\n1977-092 (6) - \\n10366 10367 10368 10408 10484 11571 \\n1977-121 (1) - \\n10532 \\n \\n1978-026 (2) - \\n10702 10703 \\n1978-083 (3) - \\n11016 11017 11076 \\n1978-098 (2) - \\n11080 18605 \\n1978-100 (4) - \\n11084 11085 11086 11177 \\n \\n1979-017 (3) - \\n11279 11291 11322 \\n1979-033 (2) - \\n11334 11367 \\n1979-058 (3) - \\n11418 11423 11555 \\n1979-077 (3) - \\n11512 11513 11550 \\n1979-087 (4) -    11562 17939 18966 18971    \\n1979-101 (2) -  \\n11636 11637 \\n1979-104 (3) - \\n11645 24754 25098 \\n\"\r\n\"0\": \" \\n 691 \\n \\n1980-021 (1) - \\n11730 \\n1980-028 (5) - \\n11758 11759 11760 11761 11762 \\n1980-030 (1) - \\n11766 \\n1980-050 (3) -  \\n11845 11846 11847 \\n1980-057 (3) - \\n11872 11873 11888 \\n1980-085 (3) - \\n12033 12034\r\n12034 12035 \\n1980-089 (1) - \\n12055 \\n \\n1981-016 (4) - \\n12304 12305 12306 12311 \\n1981-028 (1) - \\n12365 \\n1981-031 (3) - \\n12377 12378 12384 \\n1981-053 (1) - \\n12508 \\n1981-058 (3) - \\n12548 12549 12561 \\n1981-071 (3) - \\n12629 12630 12680 \\n1981-072 (1) - \\n12632 \\n1981-088 (5) - \\n12818 12819 12820 12821 12822 \\n1981-089 (1) - \\n12829 \\n1981-108 (3) - \\n12934 12935 12940 \\n \\n1982-025 (1) - \\n13114 \\n1982-029 (3) -      13125 13126 13169 \\n1982-038 (1) - \\n13151 \\n1982-055 (2) - \\n13260 13261 \\n1982-088 (1) - \\n13509 \\n1982-092 (2) -   13553 42060 \\n1982-093 (5) -     13555 13556 13583 13584 14115 \\n1982-115 (4) - \\n13685 13686 13692 13693 \\n \\n1983-020 (3) - \\n13901 13903 20413 \\n1983-022 (8) - \\n13924 14477 16502 16503\r\n16503 28604 38839 38840 38841 \\n1983-038 (6) - \\n14036 14037 14038 14041 14042 14043 \\n1983-044 (1) - \\n14065 \\n1983-070 (3) - \\n14183 14184 14191 \\n1983-075 (5) - \\n14208 14209 14229 14631 14928 \\n1983-127 (7) - \\n14590 14591 14592 14593 14594 14595 14607 \\n \\n1984-011 (6) - \\n14681 14688 14689 14692 14695 14696 \\n1984-083 (1) - \\n15168 \\n1984-106 (6) - \\n15333 15334 15335 15336 15337 17358 \\n1984-114 (2) - \\n15385 15386 \\n \\n1985-030 (1) - \\n15654 \\n1985-037 (7) - \\n15697 15698 15699 15700 15701 15702 15715 \\n1985-039 (1) - \\n15735 \\n1985-042 (5) - \\n15755 15770 15771 15772 15774 \\n1985-082 (1) - \\n16055 \\n1985-094 (6) - \\n16138 16140 16141 16142 16143 16144 \\n1985-108 (1) -  \\n16262 \\n1985-118 (10) - 16396 16397 16398 16399 16403 16404 16405 16406 16407 16445 \\n1985-121 (5) -\r\n- \\n16434 16435 16436 16437 16438 \\n \\n1986-019 (3) - \\n16613 16614 16616 \\n1986-059 (1) - \\n16896 \\n1986-069 (4) -      16946 16947 16948 16949 \\n \\n\"\r\n\"0\": \" \\n 692 \\n1987-004 (1) - \\n17298 \\n1987-020 (4) - \\n17536 26111 26601 26982 \\n1987-059 (2) - \\n18185 18186 \\n1987-062 (1) - \\n18215 \\n1987-068 (1) - \\n18312 \\n1987-078 (3) - \\n18350 18351 18353 \\n1987-079 (6) - \\n18355 18356 18357 18358 18359 18360 \\n1987-108 (1) - \\n18714 \\n1987-109 (5) - \\n18715 18716 18717 18718 18722 \\n \\n1988-005 (3) -  \\n18821 38540 38543 \\n1988-006 (5) - \\n18845 18846 18855 18956 18984  \\n1988-007 (1) - \\n18824 \\n1988-023 (1) -  \\n18986 \\n1988-040 (1) - \\n19121 \\n1988-085 (6) - \\n19501 19502 19503 19504 19505 21751 \\n1988-109 (3) - \\n19687 19688 19690\r\n19690 \\n \\n1989-001 (6) - \\n19749 19750 19751 19752 19753 19754 \\n1989-004 (5) - \\n19765 19766 19767 19768 19776 \\n1989-006 (1) - \\n19772 \\n1989-039 (7) - \\n20024 20025 20026 20027 20028 20044 20082 \\n1989-052 (5) - \\n20107 20108 20109 20110 20115 \\n1989-054 (1) - \\n20125 \\n1989-056 (2) - \\n20137 20138 \\n1989-089 (79) -  20322 20324 20328 22625 22683 22695 22747 22748 22749 22750 22751 22752 22753 22754 \\n22755 22756 22757 22758 22759 22760 22761 22762 22763 22764 22765 22766 22767 22768 \\n22769 22770 22771 22772 22773 22774 22775 22776 22820 22852 22853 22854 22855 22856 \\n22857 22858 22972 23053 23054 23055 23056 23057 23058 23059 23060 23061 23062 23063 \\n23064 23065 23066 23067 23068 23069 23070 23071 23072 23073 23074 23075 23076 23077 \\n23078 23079 23080 23081 23082 23083 23084 23085 23086 \\n1989-100 (38) - 20389 20397 20398 20408 20467 20468 20515 20522 20531 20532 20637 20640 20802 20803\r\n20803 \\n20821 20822 20823 20911 21020 21021 21022 21023 21042 21043 21064 21205 21206 21207 \\n21537 21540 21767 21768 21769 21770 21771 21772 21773 21774 \\n1989-101 (6) - \\n20391 20392 20393 20394 20400 21648 \\n \\n1990-045 (5) - \\n20619 20620 20621 20622 20623 \\n1990-081 (7) - \\n20788 20789 20790 20792 20793 20797 20798 \\n1990-087 (1) - \\n20829 \\n1990-102 (5) - \\n20953 20954 20955 20958 21046 \\n1990-105 (1) - \\n20978 \\n1990-110 (6) - \\n21006 21007 21008 21009 21010 21011 \\n \\n1991-003 (3) - \\n21055 21056 21058 \\n1991-009 (8) - \\n21100 21101 21102 21103 21104 21105 21106 21107 \\n1991-010 (5) - \\n21111 21112 21113 21122 21129 \\n1991-015 (4) - \\n21139 21140 21142 21904 \\n1991-025 (5) - \\n21216 21217 21218 21219 21221 \\n1991-056 (1) - \\n21655 \\n1991-068 (6) - \\n21728 21729 21730 21731 21732 21733 \\n1991-071 (1) - \\n21742\r\n\\n1991-075 (1) - \\n21765 \\n1991-082 (4) \\n21800 21801 21825 21836 \\n \\n1992-021 (3) - \\n21939 21940 21942 \\n1992-041 (8) - \\n22027 22028 22033 27484 27485 27486 27487 27675 \\n\"\r\n\"0\": \" \\n 693 \\n1992-047 (6) - \\n22056 22057 22058 22059 22060\r\n\r\n\\n22056 22057 22058 22059 22060 22061 \\n1992-082 (5) - \\n22245 22246 22247 22248 22249 \\n1992-088 (5) -  \\n22269 22270 22271 22272 22273 \\n1992-091 (1) - \\n22281 \\n1992-093 (5) - \\n22284 22290 22291 22292 22293 \\n \\n1993-016 (3) - \\n22565 22575 22576 \\n1993-018 (1) - \\n22586 \\n1993-028 (1) - \\n22642 \\n1993-036 (3) - \\n22676 23007 25028 \\n1993-045 (1) - \\n22717 \\n1993-057 (2) - \\n22790 22953 \\n1993-072 (5) - \\n22907 22908 22909 22910 22926 \\n \\n1994-004 (2) - \\n22973 22987 \\n1994-029 (1) - \\n23105 \\n1994-038 (5) -\r\n---------------------\r\nGiven the context information and not prior knowledge, answer the question: Please summarize this document in several paragraphs.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1088/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1088/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1087",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1087/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1087/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1087/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1087",
        "id": 1658192692,
        "node_id": "PR_kwDOIWuq585NzuEy",
        "number": 1087,
        "title": "Implement Milvus Vector Store",
        "user": {
            "login": "filip-halt",
            "id": 81822489,
            "node_id": "MDQ6VXNlcjgxODIyNDg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/81822489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/filip-halt",
            "html_url": "https://github.com/filip-halt",
            "followers_url": "https://api.github.com/users/filip-halt/followers",
            "following_url": "https://api.github.com/users/filip-halt/following{/other_user}",
            "gists_url": "https://api.github.com/users/filip-halt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/filip-halt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/filip-halt/subscriptions",
            "organizations_url": "https://api.github.com/users/filip-halt/orgs",
            "repos_url": "https://api.github.com/users/filip-halt/repos",
            "events_url": "https://api.github.com/users/filip-halt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/filip-halt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-07T00:17:13Z",
        "updated_at": "2023-04-07T21:04:54Z",
        "closed_at": "2023-04-07T21:04:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1087",
            "html_url": "https://github.com/run-llama/llama_index/pull/1087",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1087.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1087.patch",
            "merged_at": "2023-04-07T21:04:53Z"
        },
        "body": "This PR implements the Milvus vector store.\r\n\r\nMilvus vector store can carry document base metadata and embeddings. Future versions will allow for json data. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1087/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1087/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1086",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1086/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1086/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1086/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1086",
        "id": 1658164398,
        "node_id": "I_kwDOIWuq585i1ZSu",
        "number": 1086,
        "title": "Question: Build conversation chat with Index query over set of documents",
        "user": {
            "login": "TahaDouaji",
            "id": 15859337,
            "node_id": "MDQ6VXNlcjE1ODU5MzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15859337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TahaDouaji",
            "html_url": "https://github.com/TahaDouaji",
            "followers_url": "https://api.github.com/users/TahaDouaji/followers",
            "following_url": "https://api.github.com/users/TahaDouaji/following{/other_user}",
            "gists_url": "https://api.github.com/users/TahaDouaji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TahaDouaji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TahaDouaji/subscriptions",
            "organizations_url": "https://api.github.com/users/TahaDouaji/orgs",
            "repos_url": "https://api.github.com/users/TahaDouaji/repos",
            "events_url": "https://api.github.com/users/TahaDouaji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TahaDouaji/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-06T23:27:24Z",
        "updated_at": "2023-04-08T19:57:46Z",
        "closed_at": "2023-04-08T19:57:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello there,\r\nI'm trying to do queries on a set of custom documents, using Openai integration\r\n\r\n```\r\ndocuments = SimpleDirectoryReader('data_folder').load_data()\r\nindex = GPTSimpleVectorIndex.from_documents(documents) \r\n```\r\n\r\nHere, when sending a Query\r\n`index.query(\"some question\")`\r\nHow can we have a conversation chat here, like sending the previous questions?\r\nthanks a lot",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1086/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1086/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1085",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1085/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1085/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1085/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1085",
        "id": 1657841543,
        "node_id": "PR_kwDOIWuq585Nyklt",
        "number": 1085,
        "title": "Update app_showcase.md",
        "user": {
            "login": "det-sys",
            "id": 109180393,
            "node_id": "U_kgDOBoH16Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/109180393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/det-sys",
            "html_url": "https://github.com/det-sys",
            "followers_url": "https://api.github.com/users/det-sys/followers",
            "following_url": "https://api.github.com/users/det-sys/following{/other_user}",
            "gists_url": "https://api.github.com/users/det-sys/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/det-sys/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/det-sys/subscriptions",
            "organizations_url": "https://api.github.com/users/det-sys/orgs",
            "repos_url": "https://api.github.com/users/det-sys/repos",
            "events_url": "https://api.github.com/users/det-sys/events{/privacy}",
            "received_events_url": "https://api.github.com/users/det-sys/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-06T18:05:02Z",
        "updated_at": "2023-04-06T20:14:37Z",
        "closed_at": "2023-04-06T20:14:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1085",
            "html_url": "https://github.com/run-llama/llama_index/pull/1085",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1085.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1085.patch",
            "merged_at": "2023-04-06T20:14:23Z"
        },
        "body": "I used llama_index to build free https://anysummary.app . Would love to be listed in your showcase list, maybe it inspires someone else!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1085/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1085/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1084",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1084/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1084/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1084/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1084",
        "id": 1657770719,
        "node_id": "PR_kwDOIWuq585NyWGp",
        "number": 1084,
        "title": "[version] Bump version to 0.5.9",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-06T17:04:53Z",
        "updated_at": "2023-04-06T17:05:08Z",
        "closed_at": "2023-04-06T17:05:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1084",
            "html_url": "https://github.com/run-llama/llama_index/pull/1084",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1084.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1084.patch",
            "merged_at": "2023-04-06T17:05:07Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1084/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1084/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1083",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1083/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1083/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1083/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1083",
        "id": 1657666796,
        "node_id": "I_kwDOIWuq585izfzs",
        "number": 1083,
        "title": "Why is there a limit on the number of characters returned in the query results?",
        "user": {
            "login": "xiaojun2sheng",
            "id": 33241230,
            "node_id": "MDQ6VXNlcjMzMjQxMjMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/33241230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaojun2sheng",
            "html_url": "https://github.com/xiaojun2sheng",
            "followers_url": "https://api.github.com/users/xiaojun2sheng/followers",
            "following_url": "https://api.github.com/users/xiaojun2sheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaojun2sheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaojun2sheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaojun2sheng/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaojun2sheng/orgs",
            "repos_url": "https://api.github.com/users/xiaojun2sheng/repos",
            "events_url": "https://api.github.com/users/xiaojun2sheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaojun2sheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-06T15:47:02Z",
        "updated_at": "2023-04-07T14:29:42Z",
        "closed_at": "2023-04-06T18:47:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Why is there a limit on the number of characters returned in the query results?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1083/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1083/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1082",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1082/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1082/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1082/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1082",
        "id": 1657511050,
        "node_id": "PR_kwDOIWuq585NxhLa",
        "number": 1082,
        "title": "Update README.md",
        "user": {
            "login": "chriscarrollsmith",
            "id": 75859865,
            "node_id": "MDQ6VXNlcjc1ODU5ODY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/75859865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriscarrollsmith",
            "html_url": "https://github.com/chriscarrollsmith",
            "followers_url": "https://api.github.com/users/chriscarrollsmith/followers",
            "following_url": "https://api.github.com/users/chriscarrollsmith/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriscarrollsmith/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriscarrollsmith/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriscarrollsmith/subscriptions",
            "organizations_url": "https://api.github.com/users/chriscarrollsmith/orgs",
            "repos_url": "https://api.github.com/users/chriscarrollsmith/repos",
            "events_url": "https://api.github.com/users/chriscarrollsmith/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriscarrollsmith/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-06T14:15:35Z",
        "updated_at": "2023-04-06T16:58:54Z",
        "closed_at": "2023-04-06T16:58:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1082",
            "html_url": "https://github.com/run-llama/llama_index/pull/1082",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1082.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1082.patch",
            "merged_at": "2023-04-06T16:58:54Z"
        },
        "body": "Fixed your citation url :)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1082/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1082/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1081",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1081/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1081/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1081/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1081",
        "id": 1657313293,
        "node_id": "I_kwDOIWuq585iyJgN",
        "number": 1081,
        "title": "Extend query interface in `VectorStore` to be able to perform filtered search",
        "user": {
            "login": "joein",
            "id": 22641570,
            "node_id": "MDQ6VXNlcjIyNjQxNTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/22641570?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joein",
            "html_url": "https://github.com/joein",
            "followers_url": "https://api.github.com/users/joein/followers",
            "following_url": "https://api.github.com/users/joein/following{/other_user}",
            "gists_url": "https://api.github.com/users/joein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joein/subscriptions",
            "organizations_url": "https://api.github.com/users/joein/orgs",
            "repos_url": "https://api.github.com/users/joein/repos",
            "events_url": "https://api.github.com/users/joein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joein/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-06T12:14:57Z",
        "updated_at": "2023-06-06T00:52:41Z",
        "closed_at": "2023-06-06T00:52:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I encountered #969 and found out that there is no convenient interface to perform a filtered search at the moment.\r\n\r\nI guess only pinecone has a possibility to search with filters and in a hackish way (for each filter set you need to create a separate instance of `VectorStore`).\r\n\r\nI haven't dived deep into the library yet, but maybe it is possible just to extend `VectorStore.query` signature to have `filters` argument or at least add `**kwargs`?\r\n\r\nIf it could be done without getting into the guts of the library, I could work on a PR",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1081/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1081/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1080",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1080/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1080/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1080/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1080",
        "id": 1657175712,
        "node_id": "I_kwDOIWuq585ixn6g",
        "number": 1080,
        "title": "Gpt4all model issue when using llama-index ",
        "user": {
            "login": "Mohamedballouch",
            "id": 28219393,
            "node_id": "MDQ6VXNlcjI4MjE5Mzkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/28219393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mohamedballouch",
            "html_url": "https://github.com/Mohamedballouch",
            "followers_url": "https://api.github.com/users/Mohamedballouch/followers",
            "following_url": "https://api.github.com/users/Mohamedballouch/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mohamedballouch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mohamedballouch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mohamedballouch/subscriptions",
            "organizations_url": "https://api.github.com/users/Mohamedballouch/orgs",
            "repos_url": "https://api.github.com/users/Mohamedballouch/repos",
            "events_url": "https://api.github.com/users/Mohamedballouch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mohamedballouch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-06T10:45:43Z",
        "updated_at": "2023-04-09T09:51:59Z",
        "closed_at": "2023-04-08T19:59:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "```\r\n\r\nfrom langchain.llms.base import LLM\r\nfrom llama_cpp import Llama\r\nfrom typing import Optional, List, Mapping, Any\r\nfrom gpt_index import SimpleDirectoryReader, GPTListIndex, GPTSimpleVectorIndex, LLMPredictor, PromptHelper,ServiceContext\r\n\r\nclass LlamaLLM(LLM):\r\n    model_path: str\r\n    llm: Llama\r\n\r\n    @property\r\n    def _llm_type(self) -> str:\r\n        return \"llama-cpp-python\"\r\n\r\n    def __init__(self, model_path: str, **kwargs: Any):\r\n        model_path = model_path\r\n        llm = Llama(model_path=model_path)\r\n        super().__init__(model_path=model_path, llm=llm, **kwargs)\r\n\r\n    def _call(self, prompt: str, stop: Optional[List[str]] = None) -> str:\r\n        response = self.llm(prompt, stop=stop or [])\r\n        return response[\"choices\"][0][\"text\"]\r\n\r\n    @property\r\n    def _identifying_params(self) -> Mapping[str, Any]:\r\n        return {\"model_path\": self.model_path}\r\n\r\nllm = LlamaLLM(model_path=\"./gpt4all-converted.bin\")\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\nmax_input_size = 7096\r\nnum_outputs = 2000\r\nmax_chunk_overlap = 20\r\nchunk_size_limit = 600\r\n\r\nprompt_helper = PromptHelper(max_input_size, num_outputs, max_chunk_overlap, chunk_size_limit=chunk_size_limit)\r\n\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\n\r\n\r\ndocuments = SimpleDirectoryReader('docs').load_data()\r\nindex = GPTSimpleVectorIndex.from_documents(documents, service_context=service_context)\r\nindex.save_to_disk('index.json')\r\n#Query and print response\r\nresponse = index.query(\"hello\")\r\nprint(response\r\n```\r\nResponse: (can someone advise me on this issue)\r\nAVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 | \r\n\r\nFile [c:\\Users\\usr1\\Anaconda3\\envs\\chatgpt1\\lib\\site-packages\\gpt_index\\embeddings\\openai.py:147](file:///C:/Users/usr1/Anaconda3/envs/chatgpt1/lib/site-packages/gpt_index/embeddings/openai.py:147), in get_embeddings(list_of_text, engine)\r\n    145 list_of_text = [text.replace(\"\\n\", \" \") for text in list_of_text]\r\n--> 147 data = openai.Embedding.create(input=list_of_text, engine=engine).data\r\n    148 data = sorted(data, key=lambda x: x[\"index\"])  # maintain the same order as input.\r\n    \r\nFile [c:\\Users\\usr1\\Anaconda3\\envs\\chatgpt1\\lib\\site-packages\\openai\\api_resources\\embedding.py:33](file:///C:/Users/usr1/Anaconda3/envs/chatgpt1/lib/site-packages/openai/api_resources/embedding.py:33), in Embedding.create(cls, *args, **kwargs)\r\n     32 try:\r\n---> 33     response = super().create(*args, **kwargs)\r\n     35     # If a user specifies base64, we'll just return the encoded string.\r\n     36     # This is only for the default case.\r\n\r\nFile [c:\\Users\\usr1\\Anaconda3\\envs\\chatgpt1\\lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py:149](file:///C:/Users/usr1/Anaconda3/envs/chatgpt1/lib/site-packages/openai/api_resources/abstract/engine_api_resource.py:149), in EngineAPIResource.create(cls, api_key, api_base, api_type, request_id, api_version, organization, **params)\r\n    127 @classmethod\r\n    128 def create(\r\n    129     cls,\r\n   (...)\r\n    136     **params,\r\n    137 ):\r\n...\r\n--> 326     raise retry_exc from fut.exception()\r\n    328 if self.wait:\r\n    329     sleep = self.wait(retry_state)\r\n\r\nRetryError: RetryError[]",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1080/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1080/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1079",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1079/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1079/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1079/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1079",
        "id": 1657022333,
        "node_id": "PR_kwDOIWuq585Nv7m8",
        "number": 1079,
        "title": "ZH tokenizer fix",
        "user": {
            "login": "hongyishi",
            "id": 7098202,
            "node_id": "MDQ6VXNlcjcwOTgyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7098202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hongyishi",
            "html_url": "https://github.com/hongyishi",
            "followers_url": "https://api.github.com/users/hongyishi/followers",
            "following_url": "https://api.github.com/users/hongyishi/following{/other_user}",
            "gists_url": "https://api.github.com/users/hongyishi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hongyishi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hongyishi/subscriptions",
            "organizations_url": "https://api.github.com/users/hongyishi/orgs",
            "repos_url": "https://api.github.com/users/hongyishi/repos",
            "events_url": "https://api.github.com/users/hongyishi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hongyishi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-06T09:32:43Z",
        "updated_at": "2023-04-06T19:49:51Z",
        "closed_at": "2023-04-06T19:49:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1079",
            "html_url": "https://github.com/run-llama/llama_index/pull/1079",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1079.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1079.patch",
            "merged_at": "2023-04-06T19:49:50Z"
        },
        "body": "Added Chinese period to list of phrase separators.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1079/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1079/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1078",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1078/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1078/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1078/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1078",
        "id": 1656570166,
        "node_id": "PR_kwDOIWuq585Nuep_",
        "number": 1078,
        "title": "Add terms definitions tutorial",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-06T02:34:25Z",
        "updated_at": "2023-04-07T04:22:16Z",
        "closed_at": "2023-04-07T04:22:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1078",
            "html_url": "https://github.com/run-llama/llama_index/pull/1078",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1078.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1078.patch",
            "merged_at": "2023-04-07T04:22:16Z"
        },
        "body": "This PR adds a new tutorial on creating a streamlit app that can extract terms and definitions while querying against the extracted data. Effectively, a user learns how to build their own knowledge base.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1078/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1078/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1077",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1077/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1077/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1077/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1077",
        "id": 1656455123,
        "node_id": "PR_kwDOIWuq585NuGNS",
        "number": 1077,
        "title": "add city analysis nb",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-05T23:46:17Z",
        "updated_at": "2023-04-05T23:50:02Z",
        "closed_at": "2023-04-05T23:50:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1077",
            "html_url": "https://github.com/run-llama/llama_index/pull/1077",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1077.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1077.patch",
            "merged_at": "2023-04-05T23:50:01Z"
        },
        "body": "similar to existing one, but with keyword table ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1077/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1077/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1076",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1076/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1076/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1076/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1076",
        "id": 1656416585,
        "node_id": "PR_kwDOIWuq585Nt9-c",
        "number": 1076,
        "title": "Select more rules for ruff",
        "user": {
            "login": "cry-stal-lee",
            "id": 52181740,
            "node_id": "MDQ6VXNlcjUyMTgxNzQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/52181740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cry-stal-lee",
            "html_url": "https://github.com/cry-stal-lee",
            "followers_url": "https://api.github.com/users/cry-stal-lee/followers",
            "following_url": "https://api.github.com/users/cry-stal-lee/following{/other_user}",
            "gists_url": "https://api.github.com/users/cry-stal-lee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cry-stal-lee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cry-stal-lee/subscriptions",
            "organizations_url": "https://api.github.com/users/cry-stal-lee/orgs",
            "repos_url": "https://api.github.com/users/cry-stal-lee/repos",
            "events_url": "https://api.github.com/users/cry-stal-lee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cry-stal-lee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-05T23:05:26Z",
        "updated_at": "2023-05-01T17:35:40Z",
        "closed_at": "2023-05-01T17:35:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1076",
            "html_url": "https://github.com/run-llama/llama_index/pull/1076",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1076.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1076.patch",
            "merged_at": null
        },
        "body": "- Selects `isort`, `Pycodestyle`, and `Pyflakes` rules in `ruff` configuration\r\n- Leaving out `McCabe` complexity rules for now\r\n- Also sets `fix` to `True` so `ruff` will automatically fix errors when it lints",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1076/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1076/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1075",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1075/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1075/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1075/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1075",
        "id": 1656226251,
        "node_id": "I_kwDOIWuq585iuAHL",
        "number": 1075,
        "title": "feat(agent): Add functionality for langchain agent with LlamaToolkit to return sources",
        "user": {
            "login": "ajndkr",
            "id": 26824103,
            "node_id": "MDQ6VXNlcjI2ODI0MTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/26824103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajndkr",
            "html_url": "https://github.com/ajndkr",
            "followers_url": "https://api.github.com/users/ajndkr/followers",
            "following_url": "https://api.github.com/users/ajndkr/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajndkr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajndkr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajndkr/subscriptions",
            "organizations_url": "https://api.github.com/users/ajndkr/orgs",
            "repos_url": "https://api.github.com/users/ajndkr/repos",
            "events_url": "https://api.github.com/users/ajndkr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajndkr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-05T20:15:25Z",
        "updated_at": "2023-09-10T17:06:07Z",
        "closed_at": "2023-09-10T17:06:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## Description\r\n\r\nI am experimenting with the langchain agent solution provided by `llama-index` using `create_llama_agent` and `LlamaToolkit`. While it provides an easy approach to communicate with my index, the agent only responds back with the string LLM response. The agent should have an optional functionality to return sources as well, similar to [`load_qa_with_sources_chain`](https://python.langchain.com/en/latest/modules/chains/index_examples/qa_with_sources.html) from langchain.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1075/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1075/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1074",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1074/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1074/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1074/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1074",
        "id": 1656222045,
        "node_id": "I_kwDOIWuq585it_Fd",
        "number": 1074,
        "title": "[Question] Is custom data added to the index reported back to OpenAI / ChatGPT?",
        "user": {
            "login": "jeffmiller00",
            "id": 3729078,
            "node_id": "MDQ6VXNlcjM3MjkwNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3729078?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffmiller00",
            "html_url": "https://github.com/jeffmiller00",
            "followers_url": "https://api.github.com/users/jeffmiller00/followers",
            "following_url": "https://api.github.com/users/jeffmiller00/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffmiller00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffmiller00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffmiller00/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffmiller00/orgs",
            "repos_url": "https://api.github.com/users/jeffmiller00/repos",
            "events_url": "https://api.github.com/users/jeffmiller00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffmiller00/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-04-05T20:11:36Z",
        "updated_at": "2023-04-07T18:02:55Z",
        "closed_at": "2023-04-06T14:42:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is data loaded via documents or [Loaders](https://llamahub.ai/) ever sent to external sources including OpenAI / the general ChatGPT model or is everything stored locally?\r\n\r\nI couldn't find a clear answer elsewhere. Thanks in advance!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1074/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1074/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1073",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1073/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1073/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1073/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1073",
        "id": 1656017941,
        "node_id": "I_kwDOIWuq585itNQV",
        "number": 1073,
        "title": "Bugs: StepDecomposeQueryTransform",
        "user": {
            "login": "chengyjonathan",
            "id": 37084761,
            "node_id": "MDQ6VXNlcjM3MDg0NzYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/37084761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chengyjonathan",
            "html_url": "https://github.com/chengyjonathan",
            "followers_url": "https://api.github.com/users/chengyjonathan/followers",
            "following_url": "https://api.github.com/users/chengyjonathan/following{/other_user}",
            "gists_url": "https://api.github.com/users/chengyjonathan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chengyjonathan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chengyjonathan/subscriptions",
            "organizations_url": "https://api.github.com/users/chengyjonathan/orgs",
            "repos_url": "https://api.github.com/users/chengyjonathan/repos",
            "events_url": "https://api.github.com/users/chengyjonathan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chengyjonathan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-05T17:25:12Z",
        "updated_at": "2023-09-10T17:06:17Z",
        "closed_at": "2023-09-10T17:06:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "1) In the source code, there's a note that says: `NOTE: doesn't work yet.` Not sure if this is true.\r\n2) When I try to get the source text from this step decompose query, ie:\r\n\r\n```\r\nfor node in response.source_nodes:\r\n        source_text = node.node.get_text()\r\n```\r\n\r\nI get a good response from two different sources. \r\nBUT only one of the source (the latest one) is recorded.\r\nAnd I know this is the case, because there's no way the response could've been informed by just the source that's recorded.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1073/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1073/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1072",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1072/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1072/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1072/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1072",
        "id": 1655975490,
        "node_id": "PR_kwDOIWuq585Nsfbl",
        "number": 1072,
        "title": "Update Qdrant api usage, use in-memory Qdrant by default",
        "user": {
            "login": "joein",
            "id": 22641570,
            "node_id": "MDQ6VXNlcjIyNjQxNTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/22641570?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joein",
            "html_url": "https://github.com/joein",
            "followers_url": "https://api.github.com/users/joein/followers",
            "following_url": "https://api.github.com/users/joein/following{/other_user}",
            "gists_url": "https://api.github.com/users/joein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joein/subscriptions",
            "organizations_url": "https://api.github.com/users/joein/orgs",
            "repos_url": "https://api.github.com/users/joein/repos",
            "events_url": "https://api.github.com/users/joein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joein/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-05T16:50:05Z",
        "updated_at": "2023-04-06T20:12:25Z",
        "closed_at": "2023-04-06T20:12:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1072",
            "html_url": "https://github.com/run-llama/llama_index/pull/1072",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1072.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1072.patch",
            "merged_at": "2023-04-06T20:12:25Z"
        },
        "body": "I've implemented some updates to increase upsert speed for Qdrant and fixed API usage.\r\n\r\n`qdrant-client==1.1.1` brought up a new feature - in-memory Qdrant, which allows to run experiments without having a dedicated Qdrant instance. I set it as a default option in the example.\r\n\r\n  \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1072/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1072/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1071",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1071/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1071/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1071/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1071",
        "id": 1655833161,
        "node_id": "PR_kwDOIWuq585NsCfO",
        "number": 1071,
        "title": "Fix index delete - again!",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-05T15:21:49Z",
        "updated_at": "2023-04-05T20:51:31Z",
        "closed_at": "2023-04-05T20:51:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1071",
            "html_url": "https://github.com/run-llama/llama_index/pull/1071",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1071.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1071.patch",
            "merged_at": "2023-04-05T20:51:30Z"
        },
        "body": "One more delete bug!\r\n\r\nIf you construct a vector index using the documents from the client, calling delete will never work if we raise a ValueError\r\n\r\n```python\r\nindex = GPTQdrantIndex([], client=qdrant_client_instance, collection_name=self._collection_name)\r\nindex.delete(\"some_remote_id\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1071/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1071/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1070",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1070/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1070/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1070/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1070",
        "id": 1655633751,
        "node_id": "I_kwDOIWuq585irvdX",
        "number": 1070,
        "title": "Cost of building and querying each index ",
        "user": {
            "login": "ShubhamVerma16",
            "id": 46774613,
            "node_id": "MDQ6VXNlcjQ2Nzc0NjEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/46774613?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShubhamVerma16",
            "html_url": "https://github.com/ShubhamVerma16",
            "followers_url": "https://api.github.com/users/ShubhamVerma16/followers",
            "following_url": "https://api.github.com/users/ShubhamVerma16/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShubhamVerma16/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShubhamVerma16/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShubhamVerma16/subscriptions",
            "organizations_url": "https://api.github.com/users/ShubhamVerma16/orgs",
            "repos_url": "https://api.github.com/users/ShubhamVerma16/repos",
            "events_url": "https://api.github.com/users/ShubhamVerma16/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShubhamVerma16/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-05T13:34:36Z",
        "updated_at": "2023-07-26T06:20:31Z",
        "closed_at": "2023-07-26T06:20:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "From the document it was clear that we can find the values of last_token_usage\r\nAlso it is mentioned cost of building and querying each index is a TODO in reference documentation.\r\n\r\nPlease help me with the below questions:\r\n1. Any update or estimated time for update on cost of building and querying each index\r\n2. What is the default embedding model used if there is no embedding model specified   \r\n3. I am connecting llama_index to Azure Openai and if the embedding model is not specified, does it incur a cost on the default embedding model\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1070/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1070/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1069",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1069/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1069/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1069/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1069",
        "id": 1655335388,
        "node_id": "I_kwDOIWuq585iqmnc",
        "number": 1069,
        "title": "Finding relevant images to a query",
        "user": {
            "login": "kindler-king",
            "id": 53633591,
            "node_id": "MDQ6VXNlcjUzNjMzNTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/53633591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kindler-king",
            "html_url": "https://github.com/kindler-king",
            "followers_url": "https://api.github.com/users/kindler-king/followers",
            "following_url": "https://api.github.com/users/kindler-king/following{/other_user}",
            "gists_url": "https://api.github.com/users/kindler-king/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kindler-king/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kindler-king/subscriptions",
            "organizations_url": "https://api.github.com/users/kindler-king/orgs",
            "repos_url": "https://api.github.com/users/kindler-king/repos",
            "events_url": "https://api.github.com/users/kindler-king/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kindler-king/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-05T10:16:05Z",
        "updated_at": "2023-09-10T17:06:26Z",
        "closed_at": "2023-09-10T17:06:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello,\r\n\r\nI am interested in serving images, present in a page along with the query.\r\nNow, using something like PyPdf2 or PdfMiner, I can extract the images present in each page, then match the source nodes of a Query from Llamaindex with text extracted from PdfMiner and serve the images that are present in that page along with the response to the Query I made.\r\nHowever, there will be a huge problem of speed, in this roundabout solution.\r\n\r\nIs there any better way, that we can find relevant images to a node ?  And potentially even serve the relevant images with the RESPONSE to a Query.\r\nThanks a lot for the help :D ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1069/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1069/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1068",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1068/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1068/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1068/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1068",
        "id": 1655236781,
        "node_id": "PR_kwDOIWuq585NqAzh",
        "number": 1068,
        "title": "[experimental] Add command line tool for llama_index",
        "user": {
            "login": "iaalm",
            "id": 4934907,
            "node_id": "MDQ6VXNlcjQ5MzQ5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4934907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iaalm",
            "html_url": "https://github.com/iaalm",
            "followers_url": "https://api.github.com/users/iaalm/followers",
            "following_url": "https://api.github.com/users/iaalm/following{/other_user}",
            "gists_url": "https://api.github.com/users/iaalm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iaalm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iaalm/subscriptions",
            "organizations_url": "https://api.github.com/users/iaalm/orgs",
            "repos_url": "https://api.github.com/users/iaalm/repos",
            "events_url": "https://api.github.com/users/iaalm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iaalm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-04-05T09:11:05Z",
        "updated_at": "2023-04-09T06:30:50Z",
        "closed_at": "2023-04-08T06:40:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1068",
            "html_url": "https://github.com/run-llama/llama_index/pull/1068",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1068.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1068.patch",
            "merged_at": "2023-04-08T06:40:10Z"
        },
        "body": "Based on discussion #1054, add command line with following features:\r\n```\r\n# create a local config file in local dir\r\npython -m experimental.cli init\r\n\r\n# add file to index\r\npython -m experimental.cli add ../data/\r\n\r\n# query\r\npython -m experimental.cli query \"Some question?\"\r\n```\r\n\r\nThe idea is quite straightforward, there're two files put in current directory\r\n- **config.ini** stores embedding/predicter model setup along with its parameters\r\n- **index.json** the index file\r\n\r\nThere is still a lot of work to be done, such as supporting various embedding models (even a local LLM maybe?), and removing/updating the current index. However, I am considering merging this fundamental part first so that I can tackle the project step by step.\r\n\r\nOpen to suggestions/changes.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1068/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1068/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1067",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1067/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1067/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1067/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1067",
        "id": 1655051275,
        "node_id": "PR_kwDOIWuq585NpY7_",
        "number": 1067,
        "title": "[version] bump version to 0.5.8",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-05T06:59:54Z",
        "updated_at": "2023-04-05T07:06:18Z",
        "closed_at": "2023-04-05T07:06:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1067",
            "html_url": "https://github.com/run-llama/llama_index/pull/1067",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1067.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1067.patch",
            "merged_at": "2023-04-05T07:06:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1067/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1067/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1066",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1066/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1066/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1066/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1066",
        "id": 1654999726,
        "node_id": "PR_kwDOIWuq585NpOCZ",
        "number": 1066,
        "title": "Fix incorrect indent in Weaviate `from_gpt_index_batch`",
        "user": {
            "login": "spearki",
            "id": 1217253,
            "node_id": "MDQ6VXNlcjEyMTcyNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spearki",
            "html_url": "https://github.com/spearki",
            "followers_url": "https://api.github.com/users/spearki/followers",
            "following_url": "https://api.github.com/users/spearki/following{/other_user}",
            "gists_url": "https://api.github.com/users/spearki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spearki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spearki/subscriptions",
            "organizations_url": "https://api.github.com/users/spearki/orgs",
            "repos_url": "https://api.github.com/users/spearki/repos",
            "events_url": "https://api.github.com/users/spearki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spearki/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-05T06:11:09Z",
        "updated_at": "2023-04-06T05:28:47Z",
        "closed_at": "2023-04-05T06:43:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1066",
            "html_url": "https://github.com/run-llama/llama_index/pull/1066",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1066.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1066.patch",
            "merged_at": "2023-04-05T06:43:07Z"
        },
        "body": "Noticed weaviate indexing wasn't working correctly.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1066/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1066/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1065",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1065/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1065/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1065/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1065",
        "id": 1654948781,
        "node_id": "I_kwDOIWuq585ipIOt",
        "number": 1065,
        "title": "Returning wrong answer in top level Response",
        "user": {
            "login": "LLYX",
            "id": 10430633,
            "node_id": "MDQ6VXNlcjEwNDMwNjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/10430633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LLYX",
            "html_url": "https://github.com/LLYX",
            "followers_url": "https://api.github.com/users/LLYX/followers",
            "following_url": "https://api.github.com/users/LLYX/following{/other_user}",
            "gists_url": "https://api.github.com/users/LLYX/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LLYX/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LLYX/subscriptions",
            "organizations_url": "https://api.github.com/users/LLYX/orgs",
            "repos_url": "https://api.github.com/users/LLYX/repos",
            "events_url": "https://api.github.com/users/LLYX/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LLYX/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-05T05:11:24Z",
        "updated_at": "2023-07-26T06:21:47Z",
        "closed_at": "2023-07-26T06:21:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "During my queries over a tree index, the returned response.response is \"The original answer already accurately addresses the question based on the limited context provided. Therefore, no refinement is needed with the new context.\", however when I inspect the source nodes, the correct/desired response is present in the first source node. How do I fix this behavior?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1065/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1065/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1064",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1064/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1064/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1064/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1064",
        "id": 1654943379,
        "node_id": "PR_kwDOIWuq585NpCUT",
        "number": 1064,
        "title": "Fix bug with delete",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-05T05:04:56Z",
        "updated_at": "2023-04-05T05:47:05Z",
        "closed_at": "2023-04-05T05:47:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1064",
            "html_url": "https://github.com/run-llama/llama_index/pull/1064",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1064.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1064.patch",
            "merged_at": "2023-04-05T05:47:04Z"
        },
        "body": "There was a small bug with delete.\r\n\r\nA few users have noticed some odd behaviour whenever delete is called (including refresh, update, etc.) I think this should fix it!\r\n\r\nThe specific bug I was testing went like this:\r\n\r\n```\r\ndoc1 = Document(\"test1\", doc_id=\"test1\")\r\ndoc2 = Document(\"test2\", doc_id=\"test2\")\r\n\r\nindex = GPTSimpleVectorIndex.from_documents([doc1, doc2])\r\n\r\ndoc1.text = \"new_test1\"\r\nindex.update(doc1)\r\ndoc1.text = \"new_new_test1\"\r\nindex.update(doc1)   # <-- this causes a key error in current version\r\nprint('done!')\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1064/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1064/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1063",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1063/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1063/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1063/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1063",
        "id": 1654921297,
        "node_id": "I_kwDOIWuq585ipBhR",
        "number": 1063,
        "title": "How can merge multi index file",
        "user": {
            "login": "loi-nguyen-khanh",
            "id": 9484338,
            "node_id": "MDQ6VXNlcjk0ODQzMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9484338?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/loi-nguyen-khanh",
            "html_url": "https://github.com/loi-nguyen-khanh",
            "followers_url": "https://api.github.com/users/loi-nguyen-khanh/followers",
            "following_url": "https://api.github.com/users/loi-nguyen-khanh/following{/other_user}",
            "gists_url": "https://api.github.com/users/loi-nguyen-khanh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/loi-nguyen-khanh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/loi-nguyen-khanh/subscriptions",
            "organizations_url": "https://api.github.com/users/loi-nguyen-khanh/orgs",
            "repos_url": "https://api.github.com/users/loi-nguyen-khanh/repos",
            "events_url": "https://api.github.com/users/loi-nguyen-khanh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/loi-nguyen-khanh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-04-05T04:35:08Z",
        "updated_at": "2023-11-24T06:48:29Z",
        "closed_at": "2023-09-10T17:06:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n\r\nFor example I have 2 folder, folder 1 I use GPTTreeIndex and save to index1.json. And folder 2 I save to index2.json.\r\nSo, now I want to load 2 index files. Ho can I do it?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1063/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1063/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1062",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1062/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1062/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1062/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1062",
        "id": 1654860350,
        "node_id": "PR_kwDOIWuq585NowtP",
        "number": 1062,
        "title": "keep track of response over refine chunks",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-05T03:09:58Z",
        "updated_at": "2023-04-05T06:48:49Z",
        "closed_at": "2023-04-05T06:48:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1062",
            "html_url": "https://github.com/run-llama/llama_index/pull/1062",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1062.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1062.patch",
            "merged_at": "2023-04-05T06:48:48Z"
        },
        "body": "There's a small bug (or at least I think it's a bug) during the refine process.\r\n\r\nIf a node is broken into multiple chunks, the previous answer was not being tracked,\r\n\r\nLet me know if this was not a bug, but otherwise, I think this should be fixed.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1062/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1062/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1061",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1061/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1061/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1061/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1061",
        "id": 1654803588,
        "node_id": "PR_kwDOIWuq585NokoR",
        "number": 1061,
        "title": "[experimental] Local filesystem abstraction",
        "user": {
            "login": "handrew",
            "id": 1425219,
            "node_id": "MDQ6VXNlcjE0MjUyMTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1425219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/handrew",
            "html_url": "https://github.com/handrew",
            "followers_url": "https://api.github.com/users/handrew/followers",
            "following_url": "https://api.github.com/users/handrew/following{/other_user}",
            "gists_url": "https://api.github.com/users/handrew/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/handrew/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/handrew/subscriptions",
            "organizations_url": "https://api.github.com/users/handrew/orgs",
            "repos_url": "https://api.github.com/users/handrew/repos",
            "events_url": "https://api.github.com/users/handrew/events{/privacy}",
            "received_events_url": "https://api.github.com/users/handrew/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-05T01:56:33Z",
        "updated_at": "2023-06-21T06:36:13Z",
        "closed_at": "2023-06-21T06:36:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1061",
            "html_url": "https://github.com/run-llama/llama_index/pull/1061",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1061.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1061.patch",
            "merged_at": null
        },
        "body": "Apologies in advance if it's unpolished or not following the right contributing guidelines\u2014this is my first PR to an open source library. \r\n\r\nI've been using Llama Index a lot in a few projects and felt the need for an abstraction over indexes stored on disk. For those who don't necessarily want to use a vector database, it might be a helpful utility to get started with some of Llama Index's powerful capabilities. \r\n\r\nMy [original repo](https://github.com/handrew/gpt-memory) for the abstraction is linked; the readme is pasted below.\r\n\r\nOpen to suggestions/changes.\r\n\r\n# \ud83e\udde0 GPT Memory\r\n\r\nLocalFilesystemMemory is a layer over Llama Index's GPTSimpleVectorIndex which abstracts away the details of managing indexes saved on disk. It assumes / creates a directory structure for storing indexes and provides a simple interface for managing them.\r\n\r\n## LocalFilesystemMemory\r\n\r\n1. Instantiate the memory with a folder where it will store its persistent memory.\r\n2. Create and name indexes. It will automatically generate a summary of the documents you provide.\r\n3. When you are ready, you can query the memory, and it will proceed in two steps. (a) It will figure out which of the named indexes is the right one to load into memory and query, based on how your query matches against the previously generated summaries. (b) It will then run that query against the most relevant index.\r\n\r\nAn example using some Wikipedia files you can find in this repo:\r\n\r\n```python\r\nfrom llama_index import SimpleDirectoryReader\r\nfrom gpt_memory import LocalFilesystemMemory\r\nphil = SimpleDirectoryReader(\"gpt_memory/examples/phil\")\r\nanimals = SimpleDirectoryReader(\"gpt_memory/examples/animals\")\r\nphil_docs = phil.load_data()\r\nanimal_docs = animals.load_data()\r\n\r\nmemory = LocalFilesystemMemory(\"example\")\r\nmemory.create_index(\"phil\", phil_docs)\r\nmemory.create_index(\"animals\", animal_docs)\r\nquery = \"What is a capybara?\"\r\nprint(memory.query(query))\r\n```\r\n\r\nReturns: ```A capybara is a giant cavy rodent native to South America, which is the largest living rodent and a member of the genus Hydrochoerus. It inhabits savannas and dense forests, lives near bodies of water, and is a highly social species that can be found in groups as large as 100 individuals. The capybara is hunted for its meat and hide and also for grease from its thick fatty skin, but it is not considered a threatened species.```\r\n\r\n### Methods\r\n\r\n- ```memory.query(prompt)```: The main entrypoint to ask a question.\r\n- ```memory.create_index(name, docs, description=None)```: The main way to create an index. Docs can be strings, lists of strings, or lists of GPTIndex's Document objects.\r\n- ```memory.update_index(name, docs)```: Update an index with new docs.\r\n- ```memory.delete_index(name)```: Delete an index.\r\n\r\nUnder the hood, those functions use:\r\n- ```memory.get_index(name)```\r\n- ```memory.query_index(name, prompt)```\r\n- ```memory.find_most_relevant_index(prompt)```\r\n\r\n\r\n### Under the hood\r\nUnder the hood, the directory structure is as follows:\r\n```\r\n- index_folder/\r\n    -  metadata.json\r\n    -  indexes/\r\n        -  index_1.json\r\n        -  index_2.json\r\n        -  ...\r\n```\r\n\r\nThe metadata.json file contains the following information:\r\n\r\n```\r\n{\r\n    \"index_count\": 2,\r\n    \"index_descriptions\": [\r\n        {\r\n            \"name\": \"index_1\",\r\n            \"description\": \"Description of index generated by GPT Index.\",\r\n        },\r\n        {\r\n            \"name\": \"index_2\",\r\n            \"description\": \"Description of index generated by GPT Index.\",\r\n        },\r\n    ]\r\n}\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1061/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1061/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1060",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1060/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1060/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1060/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1060",
        "id": 1654802084,
        "node_id": "PR_kwDOIWuq585NokVX",
        "number": 1060,
        "title": "Remove deprecated `text_qa_template` from vector index ctors ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-05T01:54:04Z",
        "updated_at": "2023-04-05T03:07:13Z",
        "closed_at": "2023-04-05T03:07:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1060",
            "html_url": "https://github.com/run-llama/llama_index/pull/1060",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1060.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1060.patch",
            "merged_at": "2023-04-05T03:07:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1060/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1060/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1059",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1059/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1059/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1059/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1059",
        "id": 1654647275,
        "node_id": "PR_kwDOIWuq585NoDk0",
        "number": 1059,
        "title": "[Hacky] Fix streaming",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-04T22:12:25Z",
        "updated_at": "2023-08-28T17:11:37Z",
        "closed_at": "2023-05-09T23:03:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1059",
            "html_url": "https://github.com/run-llama/llama_index/pull/1059",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1059.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1059.patch",
            "merged_at": null
        },
        "body": "LangChain's callback manager provides an `on_llm_new_token` method that's called for each token returned in a streaming setting.\r\n\r\nThe challenge with integrating with LlamaIndex is that we only want `on_llm_new_token` to be called for the *final* response,\r\nrather than for every intermediate response. This notebook below shows you how to set that up.\r\n\r\nKey components:\r\n- `ChatOpenAI` LLM class with `streaming=True`\r\n- `ChatGPTLLMPredictor` with LLM and `CallbackManager` specified\r\n- call `index.query` with `streaming=True`\r\n\r\nA few notes:\r\n- We've provided a demo `StreamStdoutCallbackHandler` that outputs tokens to stdout, but would highly encourage you to develop your own CallbackHandler\r\n\r\nTbh this solution is pretty hacky - for composed graphs it will still stream \"multiple\" intermediate responses. \r\nThis API will probably change in the near future",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1059/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1059/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1058",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1058/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1058/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1058/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1058",
        "id": 1654643768,
        "node_id": "I_kwDOIWuq585in9w4",
        "number": 1058,
        "title": "OpenAI LLM being used even when using ServiceContext with a custom LLM",
        "user": {
            "login": "kirtishrinkhala",
            "id": 74126876,
            "node_id": "MDQ6VXNlcjc0MTI2ODc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/74126876?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kirtishrinkhala",
            "html_url": "https://github.com/kirtishrinkhala",
            "followers_url": "https://api.github.com/users/kirtishrinkhala/followers",
            "following_url": "https://api.github.com/users/kirtishrinkhala/following{/other_user}",
            "gists_url": "https://api.github.com/users/kirtishrinkhala/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kirtishrinkhala/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kirtishrinkhala/subscriptions",
            "organizations_url": "https://api.github.com/users/kirtishrinkhala/orgs",
            "repos_url": "https://api.github.com/users/kirtishrinkhala/repos",
            "events_url": "https://api.github.com/users/kirtishrinkhala/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kirtishrinkhala/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-04T22:08:17Z",
        "updated_at": "2023-04-04T22:39:57Z",
        "closed_at": "2023-04-04T22:39:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Version : llama_index 5.7\r\n\r\n```\r\nllm = Anthropic(anthropic_api_key=ANTHROPIC_API_KEY, temperature=0)\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\nmodel_name = \"sentence-transformers/sentence-t5-large\"\r\nhf = HuggingFaceEmbeddings(model_name=model_name)\r\nembed_model = LangchainEmbedding(hf)\r\n\r\nparser = SimpleNodeParser()\r\nnodes = parser.get_nodes_from_documents(documents)\r\n\r\nmax_input_size = 4096\r\nnum_output = 256\r\nmax_chunk_overlap = 20\r\n\r\nprompt_helper = PromptHelper(max_input_size, num_output, max_chunk_overlap)\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper\r\n\r\nindex = GPTSimpleVectorIndex(nodes, service_context=service_context)\r\n\r\n```\r\n\r\nError:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/tenacity/__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/llama_index/embeddings/openai.py\", line 147, in get_embeddings\r\n    data = openai.Embedding.create(input=list_of_text, engine=engine).data\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/openai/api_resources/embedding.py\", line 33, in create\r\n    response = super().create(*args, **kwargs)\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 149, in create\r\n    ) = cls.__prepare_create_request(\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 106, in __prepare_create_request\r\n    requestor = api_requestor.APIRequestor(\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/openai/api_requestor.py\", line 130, in __init__\r\n    self.api_key = key or util.default_api_key()\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/openai/util.py\", line 186, in default_api_key\r\n    raise openai.error.AuthenticationError(\r\nopenai.error.AuthenticationError: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://onboard.openai.com for details, or email support@openai.com if you have any questions.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/agent/c_agent.py\", line 140, in get_txt_plans_index_global\r\n    index = GPTSimpleVectorIndex(nodes, service_context=service_context)\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/llama_index/indices/vector_store/vector_indices.py\", line 94, in __init__\r\n    super().__init__(\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/llama_index/indices/vector_store/base.py\", line 57, in __init__\r\n    super().__init__(\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/llama_index/indices/base.py\", line 69, in __init__\r\n    index_struct = self.build_index_from_nodes(nodes)\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/llama_index/token_counter/token_counter.py\", line 78, in wrapped_llm_predict\r\n    f_return_val = f(_self, *args, **kwargs)\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/llama_index/indices/vector_store/base.py\", line 213, in build_index_from_nodes\r\n    return self._build_index_from_nodes(nodes)\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/llama_index/indices/vector_store/base.py\", line 202, in _build_index_from_nodes\r\n    self._add_nodes_to_index(index_struct, nodes)\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/llama_index/indices/vector_store/base.py\", line 181, in _add_nodes_to_index\r\n    embedding_results = self._get_node_embedding_results(\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/llama_index/indices/vector_store/base.py\", line 99, in _get_node_embedding_results\r\n    ) = self._service_context.embed_model.get_queued_text_embeddings()\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/llama_index/embeddings/base.py\", line 151, in get_queued_text_embeddings\r\n    embeddings = self._get_text_embeddings(cur_batch_texts)\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/llama_index/embeddings/openai.py\", line 261, in _get_text_embeddings\r\n    embeddings = get_embeddings(texts, engine=engine)\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/tenacity/__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/tenacity/__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n  File \"/home/.pyenv/versions/3.8.11/lib/python3.8/site-packages/tenacity/__init__.py\", line 326, in iter\r\n    raise retry_exc from fut.exception()\r\ntenacity.RetryError: RetryError[<Future at 0x7f7070b38b50 state=finished raised AuthenticationError>]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1058/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1058/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1057",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1057/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1057/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1057/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1057",
        "id": 1654637585,
        "node_id": "I_kwDOIWuq585in8QR",
        "number": 1057,
        "title": "Is it possible to just return the SQL query ONLY when running `index.query`?",
        "user": {
            "login": "pavitrakumar78",
            "id": 5354407,
            "node_id": "MDQ6VXNlcjUzNTQ0MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5354407?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pavitrakumar78",
            "html_url": "https://github.com/pavitrakumar78",
            "followers_url": "https://api.github.com/users/pavitrakumar78/followers",
            "following_url": "https://api.github.com/users/pavitrakumar78/following{/other_user}",
            "gists_url": "https://api.github.com/users/pavitrakumar78/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pavitrakumar78/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pavitrakumar78/subscriptions",
            "organizations_url": "https://api.github.com/users/pavitrakumar78/orgs",
            "repos_url": "https://api.github.com/users/pavitrakumar78/repos",
            "events_url": "https://api.github.com/users/pavitrakumar78/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pavitrakumar78/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-04T22:01:23Z",
        "updated_at": "2023-09-10T17:06:45Z",
        "closed_at": "2023-09-10T17:06:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n\r\nI don't want to always run queries on the table. Is there a param that I can specify to only return the SQL query when calling the `query()` method?\r\n\r\nThank you!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1057/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1057/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1056",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1056/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1056/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1056/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1056",
        "id": 1654244640,
        "node_id": "PR_kwDOIWuq585Nmr4d",
        "number": 1056,
        "title": "fix langchain lint ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-04T16:58:33Z",
        "updated_at": "2023-04-04T17:01:49Z",
        "closed_at": "2023-04-04T17:01:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1056",
            "html_url": "https://github.com/run-llama/llama_index/pull/1056",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1056.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1056.patch",
            "merged_at": "2023-04-04T17:01:48Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1056/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1056/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1055",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1055/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1055/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1055/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1055",
        "id": 1654223033,
        "node_id": "I_kwDOIWuq585imXC5",
        "number": 1055,
        "title": "Chatbot Agent Tools deviates from prompt instruction not staying within index context",
        "user": {
            "login": "timothymugayi",
            "id": 27059510,
            "node_id": "MDQ6VXNlcjI3MDU5NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/27059510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timothymugayi",
            "html_url": "https://github.com/timothymugayi",
            "followers_url": "https://api.github.com/users/timothymugayi/followers",
            "following_url": "https://api.github.com/users/timothymugayi/following{/other_user}",
            "gists_url": "https://api.github.com/users/timothymugayi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timothymugayi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timothymugayi/subscriptions",
            "organizations_url": "https://api.github.com/users/timothymugayi/orgs",
            "repos_url": "https://api.github.com/users/timothymugayi/repos",
            "events_url": "https://api.github.com/users/timothymugayi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timothymugayi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-04T16:43:13Z",
        "updated_at": "2023-04-08T20:11:50Z",
        "closed_at": "2023-04-08T20:11:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi guys, wondering if is it possible to ensure indexes do not deviate from the actual provided context within agent tools \r\n\r\n`index = GPTSimpleVectorIndex.from_documents(documents)`\r\n\r\nThe above loads an index based on website data, below prompt seems to ensure any questions that deviate from context are not answered. \r\n\r\n```\r\nQQA_PROMPT_TMPL = (\r\n    \"We have provided context information below. \\n\"\r\n    \"---------------------\\n\"\r\n    \"{context_str}\"\r\n    \"\\n---------------------\\n\"\r\n    \"Given this information, please answer only based on context if the question is not part of context do not answer. Instead respond with I don't know: {query_str} also return back the context used as part of the answer\\n\"\r\n)\r\nQA_PROMPT = QuestionAnswerPrompt(QA_PROMPT_TMPL)\r\n\r\n\r\nprint(index.query(\"Who is the president of france\",\r\n                  text_qa_template=QA_PROMPT,\r\n                  response_mode=\"compact\"))\r\n```\r\n\r\nThis returns \r\n\r\n_**I don't know. Context: title: Reldyn, length: 1215, excerpt: Leverage digital transformation with us for efficient and better customer experience., byline: None, dir: None, lang: en, siteName: None.\r\n.**_\r\n\r\n\r\nTried a similar approach using agents and tools where the tools loads up the GPTSimpleVectorIndex based off the same web content as above example, at times it works perfectly. Sometimes it just loses the instruction to keep within the context. Any points to ensure am approaching this correctly would be appreciated. \r\n\r\n```\r\n\r\n prompt = PromptTemplate(\r\n        template=\"\"\"You are a personal assistant for Reldyn company your job is to answer questions. Use only context Website Index to provide answers.\r\n                    Do not provide any answers that deviate from your tools documents. If you don't know the answer, just say \"Hmm, Im not sure.\" Don't try to make up an answer up.:\r\n                   --------\r\n                   Question: {query}\r\n                  \"\"\",\r\n        input_variables=[\"query\"],\r\n    )\r\n\r\ntools = [Tool(\r\n    name=\"Website Index\",\r\n    func=lambda q: str(index.query(q)),\r\n    description=f\"useful for when you want to answer questions from indexed text. Always, you must try the index first, only answer based on index text\",\r\n)]\r\n\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\")\r\nagent_chain = initialize_agent(\r\n    tools,\r\n    llm,\r\n    agent=\"zero-shot-react-description\",\r\n    memory=memory,\r\n    verbose=True,\r\n    max_iterations=5,\r\n)\r\n\r\nagent_prompt = prompt.format(query=user_input)\r\nresponse = str(agent_chain.run(agent_prompt)).strip()\r\n```\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1055/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1055/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1054",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1054/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1054/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1054/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1054",
        "id": 1654184881,
        "node_id": "I_kwDOIWuq585imNux",
        "number": 1054,
        "title": "Command line for llama_index?",
        "user": {
            "login": "iaalm",
            "id": 4934907,
            "node_id": "MDQ6VXNlcjQ5MzQ5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4934907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iaalm",
            "html_url": "https://github.com/iaalm",
            "followers_url": "https://api.github.com/users/iaalm/followers",
            "following_url": "https://api.github.com/users/iaalm/following{/other_user}",
            "gists_url": "https://api.github.com/users/iaalm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iaalm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iaalm/subscriptions",
            "organizations_url": "https://api.github.com/users/iaalm/orgs",
            "repos_url": "https://api.github.com/users/iaalm/repos",
            "events_url": "https://api.github.com/users/iaalm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iaalm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-04T16:13:52Z",
        "updated_at": "2023-07-26T06:22:22Z",
        "closed_at": "2023-07-26T06:22:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Hi,\r\nllama_index is exceptionally useful to me as it opens up a plethora of opportunities for private document handling. However, relying solely on Python coding is not the most convenient way. I am contemplating if there is a possibility to develop a command line/shell interface akin to openai-python, incorporating both Python library and command interface. I am unsure if this aligns with llama_index's objectives or if others require this feature too. Hence, I have created an issue here. I am willing to try and implement this function if it is deemed useful by the community.\r\n\r\nSome random ideas:\r\n```\r\n# init a repo in current directory. Create index.json, maybe a config file also\r\nllama-index-cmd init\r\n\r\n# add file to index\r\nllama-index-cmd add [path to file]\r\n\r\n# query, or maybe a REPL way?\r\nllama-index-cmd query \"What's llama?\"\r\n\r\n# query index info\r\nllama-index-cmd info\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1054/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1054/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1053",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1053/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1053/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1053/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1053",
        "id": 1653886372,
        "node_id": "I_kwDOIWuq585ilE2k",
        "number": 1053,
        "title": "Issue in GPTTreeIndex tree building",
        "user": {
            "login": "AnshulP10",
            "id": 44372786,
            "node_id": "MDQ6VXNlcjQ0MzcyNzg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/44372786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AnshulP10",
            "html_url": "https://github.com/AnshulP10",
            "followers_url": "https://api.github.com/users/AnshulP10/followers",
            "following_url": "https://api.github.com/users/AnshulP10/following{/other_user}",
            "gists_url": "https://api.github.com/users/AnshulP10/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AnshulP10/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AnshulP10/subscriptions",
            "organizations_url": "https://api.github.com/users/AnshulP10/orgs",
            "repos_url": "https://api.github.com/users/AnshulP10/repos",
            "events_url": "https://api.github.com/users/AnshulP10/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AnshulP10/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-04T13:24:05Z",
        "updated_at": "2023-07-26T06:22:30Z",
        "closed_at": "2023-07-26T06:22:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am trying to build a GPTTreeIndex from a set of 20 customer support tickets. I have a summaryprompt which has instructions on which aspect to focus on. Unfortunately sometimes I am seeing that the same input tickets are being returned in the root nodes\r\n<img width=\"638\" alt=\"Screenshot 2023-04-04 at 6 47 13 PM\" src=\"https://user-images.githubusercontent.com/44372786/229806733-b56c39f3-ec89-4bd6-982f-c4481de3c9e0.png\">\r\n\r\n\r\nI can also see that in the tree building phase no LLM tokens are being used to create the tree\r\n<img width=\"917\" alt=\"image\" src=\"https://user-images.githubusercontent.com/44372786/229805621-5ad60b77-f07a-4774-9276-ce41961c6939.png\">\r\n\r\nCan you help me in understanding why this is happening\r\n\r\nI am using llama_index==0.4.12",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1053/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1053/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1052",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1052/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1052/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1052/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1052",
        "id": 1653824488,
        "node_id": "I_kwDOIWuq585ik1vo",
        "number": 1052,
        "title": "This model's maximum context length was exceeded.",
        "user": {
            "login": "JoshuaeKaiser",
            "id": 17850490,
            "node_id": "MDQ6VXNlcjE3ODUwNDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/17850490?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JoshuaeKaiser",
            "html_url": "https://github.com/JoshuaeKaiser",
            "followers_url": "https://api.github.com/users/JoshuaeKaiser/followers",
            "following_url": "https://api.github.com/users/JoshuaeKaiser/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoshuaeKaiser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JoshuaeKaiser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoshuaeKaiser/subscriptions",
            "organizations_url": "https://api.github.com/users/JoshuaeKaiser/orgs",
            "repos_url": "https://api.github.com/users/JoshuaeKaiser/repos",
            "events_url": "https://api.github.com/users/JoshuaeKaiser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JoshuaeKaiser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-04T12:46:28Z",
        "updated_at": "2023-07-26T06:22:37Z",
        "closed_at": "2023-07-26T06:22:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This model's maximum context length is 4097 tokens, however you requested 4120 tokens (3864 in your prompt; 256 for the completion). Please reduce your prompt; or completion length.\r\n\r\nThe above error occurs only sometimes when I query across my index.\r\n\r\nI see that the docs specify that we can control the prompt token count and the completion count. \r\n\r\nWhat does the community recommend to ensure as much context as passed as possible without killing the size of the index chunks. Should we just chop off the end of the context passed is the query pushes over the max char count ?\r\n\r\nMy query template bellow.\r\n\r\nQA_PROMPT_TMPL = (\r\n    \"We have provided context information below. \\n\"\r\n    \"---------------------\\n\"\r\n    \"{context_str}\"\r\n    \"\\n---------------------\\n\"\r\n    \"Given this information, please answer the following question: {query_str}\\n\"\r\n    \"If you can't awnser the question from the context provided respond with 'I am unable to awnser'\"\r\n)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1052/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1052/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1051",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1051/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1051/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1051/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1051",
        "id": 1653818816,
        "node_id": "I_kwDOIWuq585ik0XA",
        "number": 1051,
        "title": "Custom LLM's How-To link in usage_pattern.md is broken",
        "user": {
            "login": "user32000",
            "id": 16737006,
            "node_id": "MDQ6VXNlcjE2NzM3MDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16737006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/user32000",
            "html_url": "https://github.com/user32000",
            "followers_url": "https://api.github.com/users/user32000/followers",
            "following_url": "https://api.github.com/users/user32000/following{/other_user}",
            "gists_url": "https://api.github.com/users/user32000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/user32000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/user32000/subscriptions",
            "organizations_url": "https://api.github.com/users/user32000/orgs",
            "repos_url": "https://api.github.com/users/user32000/repos",
            "events_url": "https://api.github.com/users/user32000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/user32000/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-04T12:42:55Z",
        "updated_at": "2023-04-08T20:07:45Z",
        "closed_at": "2023-04-08T20:07:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Clicking on this link ends in an error 404:\r\n\r\n```'jerryjliu/llama_index' repository doesn't contain the 'how_to/customization/custom_llms.md' path in 'main'.  ```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1051/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1051/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1050",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1050/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1050/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1050/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1050",
        "id": 1653817055,
        "node_id": "I_kwDOIWuq585ikz7f",
        "number": 1050,
        "title": "Question: Communicate with LLM from web app",
        "user": {
            "login": "pelyhe",
            "id": 75569619,
            "node_id": "MDQ6VXNlcjc1NTY5NjE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/75569619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pelyhe",
            "html_url": "https://github.com/pelyhe",
            "followers_url": "https://api.github.com/users/pelyhe/followers",
            "following_url": "https://api.github.com/users/pelyhe/following{/other_user}",
            "gists_url": "https://api.github.com/users/pelyhe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pelyhe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pelyhe/subscriptions",
            "organizations_url": "https://api.github.com/users/pelyhe/orgs",
            "repos_url": "https://api.github.com/users/pelyhe/repos",
            "events_url": "https://api.github.com/users/pelyhe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pelyhe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-04T12:41:49Z",
        "updated_at": "2023-04-08T20:04:06Z",
        "closed_at": "2023-04-08T20:04:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi!\r\n\r\nI used llama_index library to train the gpt-3.5-turbo model with google docs. It is working perfectly from the python code. I want to integrate this to my Flutter web application. Is there any best practice solution I should use? Can I build a rest api which uses a prompt and sends back the response? \r\nThanks in advance!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1050/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1050/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1049",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1049/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1049/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1049/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1049",
        "id": 1653806027,
        "node_id": "I_kwDOIWuq585ikxPL",
        "number": 1049,
        "title": "cannot import name 'ServiceContext' from 'llama_index'",
        "user": {
            "login": "JoshuaeKaiser",
            "id": 17850490,
            "node_id": "MDQ6VXNlcjE3ODUwNDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/17850490?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JoshuaeKaiser",
            "html_url": "https://github.com/JoshuaeKaiser",
            "followers_url": "https://api.github.com/users/JoshuaeKaiser/followers",
            "following_url": "https://api.github.com/users/JoshuaeKaiser/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoshuaeKaiser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JoshuaeKaiser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoshuaeKaiser/subscriptions",
            "organizations_url": "https://api.github.com/users/JoshuaeKaiser/orgs",
            "repos_url": "https://api.github.com/users/JoshuaeKaiser/repos",
            "events_url": "https://api.github.com/users/JoshuaeKaiser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JoshuaeKaiser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-04T12:34:51Z",
        "updated_at": "2023-04-07T05:37:19Z",
        "closed_at": "2023-04-07T05:37:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Any idea why i get the following error when trying to import the service context\r\n\r\ncannot import name 'ServiceContext' from 'llama_index'\r\n\r\nFollowed docs, My code looks right.\r\n\r\n# Import necessary packages\r\nfrom llama_index import GPTSimpleVectorIndex, download_loader, QuestionAnswerPrompt, PromptHelper\r\nfrom llama_index import LLMPredictor, ServiceContext\r\nimport os\r\nfrom flask import Flask, json, request\r\nfrom flask_cors import CORS, cross_origin\r\n\r\nos.environ['OPENAI_API_KEY'] = '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'\r\n\r\napp = Flask(__name__)\r\ncors = CORS(app)\r\napp.config['CORS_HEADERS'] = 'Content-Type'\r\n\r\nSimpleDirectoryReader = download_loader(\"SimpleDirectoryReader\")\r\n\r\nQA_PROMPT_TMPL = (\r\n    \"We have provided context information below. \\n\"\r\n    \"---------------------\\n\"\r\n    \"{context_str}\"\r\n    \"\\n---------------------\\n\"\r\n    \"Given this information, please answer the following question: {query_str}\\n\"\r\n    \"If you can't awnser the question from the context provided respond with 'I am unable to awnser'\"\r\n)\r\nQA_PROMPT = QuestionAnswerPrompt(QA_PROMPT_TMPL)\r\n\r\n# define LLM\r\nllm_predictor = LLMPredictor(llm=OpenAI(temperature=0, model_name=\"text-davinci-003\"))\r\n\r\n# define prompt helper\r\n# set maximum input size\r\nmax_input_size = 4096\r\n# set number of output tokens\r\nnum_output = 256\r\n# set maximum chunk overlap\r\nmax_chunk_overlap = 20\r\nprompt_helper = PromptHelper(max_input_size, num_output, max_chunk_overlap)\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1049/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1049/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1048",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1048/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1048/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1048/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1048",
        "id": 1653741678,
        "node_id": "I_kwDOIWuq585ikhhu",
        "number": 1048,
        "title": "I need help regarding: ModuleNotFoundError: There is no module named 'llama_index.indices.composability'.",
        "user": {
            "login": "ashen001",
            "id": 30037543,
            "node_id": "MDQ6VXNlcjMwMDM3NTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/30037543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashen001",
            "html_url": "https://github.com/ashen001",
            "followers_url": "https://api.github.com/users/ashen001/followers",
            "following_url": "https://api.github.com/users/ashen001/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashen001/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashen001/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashen001/subscriptions",
            "organizations_url": "https://api.github.com/users/ashen001/orgs",
            "repos_url": "https://api.github.com/users/ashen001/repos",
            "events_url": "https://api.github.com/users/ashen001/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashen001/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-04T11:53:33Z",
        "updated_at": "2023-04-04T15:17:32Z",
        "closed_at": "2023-04-04T15:17:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I wrote an example on merge query by referring to the sample example.\r\nAfter I run\r\nComposableGraph import from llama_index.indices.composability.\r\nAfter the appearance of\r\n    Importing ComposableGraph from llama_index.indices.composability.\r\nModuleNotFoundError: There is no module named 'llama_index.indices.composability'.\r\n\r\nMy script:\r\nfrom llama_index import (\r\n    GPTSimpleVectorIndex,\r\n    GPTSimpleKeywordTableIndex,\r\n    GPTListIndex,\r\n    SimpleDirectoryReader\r\n)\r\nimport openai\r\nfrom llama_index.indices.composability import ComposableGraph\r\nos.environ[\"OPENAI_API_KEY\"] = \"xxxxx\"\r\n\r\nnyc_index = GPTSimpleVectorIndex.load_from_disk('index.json')\r\nessay_index = GPTSimpleVectorIndex.load_from_disk('index1.json')\r\n\r\nnyc_index_summary = \"\"\"\r\n    index\r\n\"\"\"\r\nessay_index_summary = \"\"\"\r\nindex1\r\n\"\"\"\r\n\r\ngraph = ComposableGraph.from_indices(\r\n    GPTSimpleKeywordTableIndex,\r\n    [nyc_index, essay_index],\r\n    index_summaries=[nyc_index_summary, essay_index_summary],\r\n    max_keywords_per_chunk=50\r\n)\r\n\r\nresponse = graph.query(\r\n    \"What is the climate of New York City like? How cold is it during the winter?\",\r\n    query_configs=query_configs\r\n)\r\n\r\nMy llama-index version:\r\nName: llama-index\r\nVersion: 0.4.32\r\nSummary: Interface between LLMs and your data.\r\nHome-page: https://github.com/jerryjliu/gpt_index\r\n\r\nI need your help very much, thank you very much!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1048/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1048/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1047",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1047/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1047/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1047/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1047",
        "id": 1653557373,
        "node_id": "PR_kwDOIWuq585NkXTV",
        "number": 1047,
        "title": "Update opensearch.py",
        "user": {
            "login": "kimtth",
            "id": 13846660,
            "node_id": "MDQ6VXNlcjEzODQ2NjYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/13846660?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kimtth",
            "html_url": "https://github.com/kimtth",
            "followers_url": "https://api.github.com/users/kimtth/followers",
            "following_url": "https://api.github.com/users/kimtth/following{/other_user}",
            "gists_url": "https://api.github.com/users/kimtth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kimtth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kimtth/subscriptions",
            "organizations_url": "https://api.github.com/users/kimtth/orgs",
            "repos_url": "https://api.github.com/users/kimtth/repos",
            "events_url": "https://api.github.com/users/kimtth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kimtth/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-04T09:53:12Z",
        "updated_at": "2023-04-08T21:41:15Z",
        "closed_at": "2023-04-08T21:41:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1047",
            "html_url": "https://github.com/run-llama/llama_index/pull/1047",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1047.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1047.patch",
            "merged_at": "2023-04-08T21:41:15Z"
        },
        "body": "I have added some lines of code to handle \"python-httpx\" client parameters. \r\n\r\n\"Open search\" docker image can bypass security settings with the following option, but the most common use case is to access it with basic auth, such as a username and password. The docker option will take out \"Open search > Security\" options and for that \"Open search\" only can be accessed in HTTP with no authentification.\r\n\r\n  - \"DISABLE_SECURITY_PLUGIN=true\"\r\n\r\nPlease review them to ensure that they are correct and will address the issue.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1047/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1047/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1046",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1046/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1046/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1046/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1046",
        "id": 1653515690,
        "node_id": "I_kwDOIWuq585ijqWq",
        "number": 1046,
        "title": "question answering system returns different answers for the same query",
        "user": {
            "login": "zainabalthafeeri1",
            "id": 113511844,
            "node_id": "U_kgDOBsQNpA",
            "avatar_url": "https://avatars.githubusercontent.com/u/113511844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zainabalthafeeri1",
            "html_url": "https://github.com/zainabalthafeeri1",
            "followers_url": "https://api.github.com/users/zainabalthafeeri1/followers",
            "following_url": "https://api.github.com/users/zainabalthafeeri1/following{/other_user}",
            "gists_url": "https://api.github.com/users/zainabalthafeeri1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zainabalthafeeri1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zainabalthafeeri1/subscriptions",
            "organizations_url": "https://api.github.com/users/zainabalthafeeri1/orgs",
            "repos_url": "https://api.github.com/users/zainabalthafeeri1/repos",
            "events_url": "https://api.github.com/users/zainabalthafeeri1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zainabalthafeeri1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-04T09:26:03Z",
        "updated_at": "2023-04-06T11:48:29Z",
        "closed_at": "2023-04-06T11:48:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have created a question-answering system using llama and custom llm (calling completion API  https://api.openai.com/v1/completions using requests library). When I try to send a query multiple times each time, a different response is returned, and the temperature param to zero.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1046/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1045",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1045/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1045/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1045/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1045",
        "id": 1653511098,
        "node_id": "I_kwDOIWuq585ijpO6",
        "number": 1045,
        "title": "Is there a way to only get the context _str, but not to call the openai",
        "user": {
            "login": "huajiayi",
            "id": 23312307,
            "node_id": "MDQ6VXNlcjIzMzEyMzA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/23312307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huajiayi",
            "html_url": "https://github.com/huajiayi",
            "followers_url": "https://api.github.com/users/huajiayi/followers",
            "following_url": "https://api.github.com/users/huajiayi/following{/other_user}",
            "gists_url": "https://api.github.com/users/huajiayi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huajiayi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huajiayi/subscriptions",
            "organizations_url": "https://api.github.com/users/huajiayi/orgs",
            "repos_url": "https://api.github.com/users/huajiayi/repos",
            "events_url": "https://api.github.com/users/huajiayi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huajiayi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-04T09:23:09Z",
        "updated_at": "2023-09-18T16:07:53Z",
        "closed_at": "2023-04-08T20:16:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is there a way to only get the context _str, but not to call the openai, like this:\r\n```python\r\ncontext_str = index.query(query_str)\r\n# call openai by myself\r\n```\r\nI want to put the context_str into system prompt, after my test, it can achieve better results under certain conditions, so i need call openai by myself.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1045/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1045/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1044",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1044/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1044/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1044/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1044",
        "id": 1653457685,
        "node_id": "I_kwDOIWuq585ijcMV",
        "number": 1044,
        "title": "\"ValueError: summary field of the index_struct not set.\" during Multi-Step Query Transformations",
        "user": {
            "login": "LLYX",
            "id": 10430633,
            "node_id": "MDQ6VXNlcjEwNDMwNjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/10430633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LLYX",
            "html_url": "https://github.com/LLYX",
            "followers_url": "https://api.github.com/users/LLYX/followers",
            "following_url": "https://api.github.com/users/LLYX/following{/other_user}",
            "gists_url": "https://api.github.com/users/LLYX/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LLYX/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LLYX/subscriptions",
            "organizations_url": "https://api.github.com/users/LLYX/orgs",
            "repos_url": "https://api.github.com/users/LLYX/repos",
            "events_url": "https://api.github.com/users/LLYX/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LLYX/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-04T08:49:07Z",
        "updated_at": "2023-09-10T17:06:53Z",
        "closed_at": "2023-09-10T17:06:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I created a ComposableGraph using a GPTTreeIndex on top of a collection of GPTSimpleVectorIndex objects, and I made sure that each individual vector index had its own summary, and that the graph itself also had a summary. Querying it normally seems to work fine, single step query decomposition also works fine, but when I attempt to do multi step query decomposition, I get thrown the error.\r\n\r\n```\r\ngraph = ComposableGraph.from_indices(GPTTreeIndex, [indices[key] for key in indices], [str(summaries[key]) for key in indices], service_context=service_context)\r\ngraph.index_struct.summary = \"<my_summary>\"\r\nstep_decompose_transform = StepDecomposeQueryTransform(llm_predictor_chatgpt, verbose=True)\r\nresponse = graph.query(\"<my_query>\", query_transform=None, service_context=service_context) # Works\r\nresponse = graph.query(\"<my_query>\", query_transform=step_decomposable_transform, service_context=service_context) # Throws error\r\n```\r\n\r\nllama_index=0.5.6",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1044/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1044/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1043",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1043/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1043/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1043/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1043",
        "id": 1653270699,
        "node_id": "PR_kwDOIWuq585NjaIj",
        "number": 1043,
        "title": "[version] bump version to 0.5.7",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-04T06:31:04Z",
        "updated_at": "2023-04-04T06:43:54Z",
        "closed_at": "2023-04-04T06:43:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1043",
            "html_url": "https://github.com/run-llama/llama_index/pull/1043",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1043.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1043.patch",
            "merged_at": "2023-04-04T06:43:53Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1043/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1043/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1042",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1042/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1042/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1042/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1042",
        "id": 1653205258,
        "node_id": "I_kwDOIWuq585iiekK",
        "number": 1042,
        "title": "Unable to add Document using GPTTreeIndex.insert",
        "user": {
            "login": "hxbs-zyy",
            "id": 54540775,
            "node_id": "MDQ6VXNlcjU0NTQwNzc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/54540775?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hxbs-zyy",
            "html_url": "https://github.com/hxbs-zyy",
            "followers_url": "https://api.github.com/users/hxbs-zyy/followers",
            "following_url": "https://api.github.com/users/hxbs-zyy/following{/other_user}",
            "gists_url": "https://api.github.com/users/hxbs-zyy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hxbs-zyy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hxbs-zyy/subscriptions",
            "organizations_url": "https://api.github.com/users/hxbs-zyy/orgs",
            "repos_url": "https://api.github.com/users/hxbs-zyy/repos",
            "events_url": "https://api.github.com/users/hxbs-zyy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hxbs-zyy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-04T05:33:31Z",
        "updated_at": "2023-04-14T07:02:08Z",
        "closed_at": "2023-04-14T07:02:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I want to use GPTTreeIndex to build an index for batches of documents, but I found an error when using the insert function.\r\nBelow is my case\uff1a\r\n```\r\nimport os\r\n\r\nfrom llama_index import SimpleDirectoryReader, GPTTreeIndex\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"xxx\"\r\nindex_name = \"./index.json\"\r\n\r\n\r\ndef get_index() -> GPTTreeIndex:\r\n    \"\"\"\r\n    Initialize the index, if the index already exists,\r\n    use the already trained index, otherwise create a new index\r\n    \"\"\"\r\n    if os.path.exists(index_name):\r\n        index = GPTTreeIndex.load_from_disk(index_name)\r\n    else:\r\n        index = GPTTreeIndex([])\r\n        index.save_to_disk(index_name)\r\n    return index\r\n\r\n\r\ndef insert_into_index(doc_file_path) -> None:\r\n    \"\"\"Insert document into index\"\"\"\r\n\r\n    index = get_index()\r\n    documents = SimpleDirectoryReader(input_files=[doc_file_path]).load_data()\r\n    for doc in documents:\r\n        index.insert(doc)\r\n    index.save_to_disk(index_name)\r\n\r\n\r\nif __name__ == '__main__':\r\n    insert_into_index('./pdfs/\u8305\u53f01.pdf')\r\n```\r\nBelow is the error message\uff1a\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/yueyang/Desktop/ant/finassetpreference/\u6211\u7684GPTDemo/save_to_index.py\", line 60, in <module>\r\n    insert_into_index('./pdfs/\u8305\u53f01.pdf')\r\n  File \"/Users/yueyang/Desktop/ant/finassetpreference/\u6211\u7684GPTDemo/save_to_index.py\", line 52, in insert_into_index\r\n    index.insert(Document.from_langchain_format(doc))\r\n  File \"/Library/Python/3.9/site-packages/llama_index/indices/base.py\", line 144, in insert\r\n    self.insert_nodes(nodes, **insert_kwargs)\r\n  File \"/Library/Python/3.9/site-packages/llama_index/token_counter/token_counter.py\", line 78, in wrapped_llm_predict\r\n    f_return_val = f(_self, *args, **kwargs)\r\n  File \"/Library/Python/3.9/site-packages/llama_index/indices/base.py\", line 139, in insert_nodes\r\n    self._insert(nodes, **insert_kwargs)\r\n  File \"/Library/Python/3.9/site-packages/llama_index/indices/tree/base.py\", line 125, in _insert\r\n    inserter.insert(nodes)\r\n  File \"/Library/Python/3.9/site-packages/llama_index/indices/tree/inserter.py\", line 159, in insert\r\n    self._insert_node(node)\r\n  File \"/Library/Python/3.9/site-packages/llama_index/indices/tree/inserter.py\", line 114, in _insert_node\r\n    elif len(self.index_graph.get_children(cur_graph_node_list[0])) == 0:\r\n  File \"/Library/Python/3.9/site-packages/llama_index/data_structs/data_structs_v2.py\", line 94, in get_children\r\n    children_ids = self.node_id_to_children_ids[parent_id]\r\nKeyError: '4e432679-ee81-4c25-875c-8678982048b3'\r\n```\r\nAfter troubleshooting, it was found that the IndexGraph.insert_under_parent function did not create a corresponding child node empty sequence in node_id_to_children_ids when adding a parent node. Causes an error on subsequent calls to IndexGraph.get_children.\r\n\r\nI try to fix using the code below:\r\n```\r\n    def get_children(self, parent_node: Optional[Node]) -> Dict[int, str]:\r\n        \"\"\"Get children nodes.\"\"\"\r\n        if parent_node is None:\r\n            return self.root_nodes\r\n        else:\r\n            parent_id = parent_node.get_doc_id()\r\n            # ###########\r\n            if parent_id not in self.node_id_to_children_ids:  # Returns an empty dictionary if not in node_id_to_children_ids\r\n                return {}\r\n            # ###########\r\n            children_ids = self.node_id_to_children_ids[parent_id]\r\n            return {\r\n                self.node_id_to_index[child_id]: child_id for child_id in children_ids\r\n            }\r\n```\r\nCan you please help me to look into this issue? Is it me or is there something wrong with the way I use it? If it is a missing bug, I submit a pr.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1042/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1042/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1041",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1041/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1041/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1041/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1041",
        "id": 1653184946,
        "node_id": "PR_kwDOIWuq585NjHgx",
        "number": 1041,
        "title": "Update contribution guide ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-04T05:12:13Z",
        "updated_at": "2023-04-04T17:08:03Z",
        "closed_at": "2023-04-04T17:08:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1041",
            "html_url": "https://github.com/run-llama/llama_index/pull/1041",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1041.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1041.patch",
            "merged_at": "2023-04-04T17:08:02Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1041/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1041/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1040",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1040/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1040/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1040/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1040",
        "id": 1653173140,
        "node_id": "PR_kwDOIWuq585NjE9k",
        "number": 1040,
        "title": "Revert \"Add Notebooks to Docs/Sphinx (#1039)\"",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-04T04:58:12Z",
        "updated_at": "2023-04-04T05:02:25Z",
        "closed_at": "2023-04-04T05:02:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1040",
            "html_url": "https://github.com/run-llama/llama_index/pull/1040",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1040.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1040.patch",
            "merged_at": "2023-04-04T05:02:24Z"
        },
        "body": "This reverts commit 684cdbca00f1650ba8a5f80f41ffebcf3e7b535f.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1040/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1040/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1039",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1039/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1039/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1039/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1039",
        "id": 1653071537,
        "node_id": "PR_kwDOIWuq585Nivhv",
        "number": 1039,
        "title": "Add Notebooks to Docs/Sphinx",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-04T02:46:19Z",
        "updated_at": "2023-04-04T03:38:03Z",
        "closed_at": "2023-04-04T03:38:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1039",
            "html_url": "https://github.com/run-llama/llama_index/pull/1039",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1039.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1039.patch",
            "merged_at": "2023-04-04T03:38:03Z"
        },
        "body": "Ok, new PR (now featuring ZERO committed API keys)\r\n\r\nThis embeds our notebooks into our docs using sphinx. Now, all our example notebooks will come up in search results.\r\n\r\nIt's a little manual at the moment (need to run build_notebooks.py and add to the TOC tree for new notebooks), but this can be automated eventually with git workflows\r\n\r\n![image](https://user-images.githubusercontent.com/22285038/229673581-7539c96b-ba13-4371-8bc1-3463e93a9481.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1039/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1039/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1038",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1038/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1038/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1038/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1038",
        "id": 1653019454,
        "node_id": "PR_kwDOIWuq585Nik01",
        "number": 1038,
        "title": "add pinecone unit test",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-04T01:33:26Z",
        "updated_at": "2023-04-04T03:41:28Z",
        "closed_at": "2023-04-04T03:41:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1038",
            "html_url": "https://github.com/run-llama/llama_index/pull/1038",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1038.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1038.patch",
            "merged_at": "2023-04-04T03:41:27Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1038/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1038/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1037",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1037/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1037/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1037/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1037",
        "id": 1652946190,
        "node_id": "PR_kwDOIWuq585NiVOf",
        "number": 1037,
        "title": "fix node id's assigned to vector store + pinecone ref doc id ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-04T00:05:34Z",
        "updated_at": "2023-04-04T03:36:31Z",
        "closed_at": "2023-04-04T03:36:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1037",
            "html_url": "https://github.com/run-llama/llama_index/pull/1037",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1037.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1037.patch",
            "merged_at": "2023-04-04T03:36:31Z"
        },
        "body": "1) fix `new_id` generated in indices/vector_store/base.py. Not sure why we didn't just use `node.get_doc_id()` before\r\n2) fix pinecone to use the actual node id as the returned doc_id, and return \"doc_id\" as the source doc relationship id instead (this is pretty confusing tbh) \r\n\r\nTests:\r\n- added two tests for simple vector and faiss to check id's\r\n- manually ran pinecone nb ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1037/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1037/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1036",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1036/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1036/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1036/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1036",
        "id": 1652940345,
        "node_id": "PR_kwDOIWuq585NiT6M",
        "number": 1036,
        "title": "Weaviate serialize Node relationships",
        "user": {
            "login": "dominguezmaria",
            "id": 16541888,
            "node_id": "MDQ6VXNlcjE2NTQxODg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16541888?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dominguezmaria",
            "html_url": "https://github.com/dominguezmaria",
            "followers_url": "https://api.github.com/users/dominguezmaria/followers",
            "following_url": "https://api.github.com/users/dominguezmaria/following{/other_user}",
            "gists_url": "https://api.github.com/users/dominguezmaria/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dominguezmaria/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dominguezmaria/subscriptions",
            "organizations_url": "https://api.github.com/users/dominguezmaria/orgs",
            "repos_url": "https://api.github.com/users/dominguezmaria/repos",
            "events_url": "https://api.github.com/users/dominguezmaria/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dominguezmaria/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-04T00:00:56Z",
        "updated_at": "2023-04-04T08:27:26Z",
        "closed_at": "2023-04-04T03:27:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1036",
            "html_url": "https://github.com/run-llama/llama_index/pull/1036",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1036.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1036.patch",
            "merged_at": "2023-04-04T03:27:39Z"
        },
        "body": "On this PR:\r\n- Create doc_hash and relationships as properties on the weaviate schema\r\n- Serialize and deserialize relationships when writing to / reading from weaviate\r\n- Serialize ref_doc_id when writing to weaviate because the delete_document method uses a where filter on this property. This is not needed when reading from weaviate because on the python side, ref_doc_id is read from the relationships.\r\n- Make the Response. get_formatted_sources method compatible with the new version of Node\r\n\r\nThis should fix issue #970.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1036/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1036/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1035",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1035/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1035/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1035/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1035",
        "id": 1652773579,
        "node_id": "PR_kwDOIWuq585NhvtE",
        "number": 1035,
        "title": "fix: example github repo should be llama_index",
        "user": {
            "login": "jonmrjr",
            "id": 31930,
            "node_id": "MDQ6VXNlcjMxOTMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/31930?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonmrjr",
            "html_url": "https://github.com/jonmrjr",
            "followers_url": "https://api.github.com/users/jonmrjr/followers",
            "following_url": "https://api.github.com/users/jonmrjr/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonmrjr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonmrjr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonmrjr/subscriptions",
            "organizations_url": "https://api.github.com/users/jonmrjr/orgs",
            "repos_url": "https://api.github.com/users/jonmrjr/repos",
            "events_url": "https://api.github.com/users/jonmrjr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonmrjr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-03T21:08:47Z",
        "updated_at": "2023-04-04T00:17:36Z",
        "closed_at": "2023-04-04T00:17:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1035",
            "html_url": "https://github.com/run-llama/llama_index/pull/1035",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1035.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1035.patch",
            "merged_at": "2023-04-04T00:17:36Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1035/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1035/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1034",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1034/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1034/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1034/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1034",
        "id": 1652525223,
        "node_id": "PR_kwDOIWuq585Ng6Al",
        "number": 1034,
        "title": "fix langchain llm link ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-03T18:04:19Z",
        "updated_at": "2023-04-03T18:09:59Z",
        "closed_at": "2023-04-03T18:09:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1034",
            "html_url": "https://github.com/run-llama/llama_index/pull/1034",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1034.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1034.patch",
            "merged_at": "2023-04-03T18:09:58Z"
        },
        "body": "Closes #1032 ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1034/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1034/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1033",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1033/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1033/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1033/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1033",
        "id": 1652309002,
        "node_id": "I_kwDOIWuq585ifDwK",
        "number": 1033,
        "title": "Custom model issue when llama-index is upgraded to 0.5.x",
        "user": {
            "login": "paulsiu1887",
            "id": 26831118,
            "node_id": "MDQ6VXNlcjI2ODMxMTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/26831118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulsiu1887",
            "html_url": "https://github.com/paulsiu1887",
            "followers_url": "https://api.github.com/users/paulsiu1887/followers",
            "following_url": "https://api.github.com/users/paulsiu1887/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulsiu1887/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulsiu1887/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulsiu1887/subscriptions",
            "organizations_url": "https://api.github.com/users/paulsiu1887/orgs",
            "repos_url": "https://api.github.com/users/paulsiu1887/repos",
            "events_url": "https://api.github.com/users/paulsiu1887/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulsiu1887/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-03T15:37:29Z",
        "updated_at": "2023-04-07T05:40:31Z",
        "closed_at": "2023-04-07T05:40:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I upgraded llama-index from 0.4.28 to 0.5.5. I got the following error on the following code:\r\n\r\n```\r\nimport os\r\nimport torch\r\nfrom llama_index import SimpleDirectoryReader, LangchainEmbedding, GPTSimpleVectorIndex, PromptHelper\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom llama_index import LLMPredictor\r\nfrom langchain.llms.base import LLM\r\nfrom transformers import pipeline\r\n\r\nclass FlanLLM(LLM):\r\n    model_name = 'google/flan-t5-large'\r\n    pipeline = pipeline('text2text-generation', model = model_name, device = \"cpu\", model_kwargs={'torch_dtype': torch.bfloat16})\r\n    \r\n    def _call(self, prompt, stop=None):\r\n        return self.pipeline(prompt, max_length=9999)[0]['generated_text']\r\n\r\n    def _identifying_params(self):\r\n        return {'name_of_model': self.model.name}\r\n    \r\n    def _llm_type(self):\r\n        return \"custom\"\r\n    \r\nllm_predictor = LLMPredictor(llm=FlanLLM())\r\nhfemb = HuggingFaceEmbeddings()\r\nembed_model = LangchainEmbedding(hfemb)\r\ndocuments = SimpleDirectoryReader('Data').load_data()\r\n\r\nmax_input_size = 714\r\nnum_output=256\r\nmax_chuck_overlap = 0\r\nprompt_helper = PromptHelper(max_input_size, num_output, max_chuck_overlap)\r\nindex = GPTSimpleVectorIndex(documents, embed_model = embed_model, llm_predictor = llm_predictor, prompt_helper = prompt_helper)\r\n\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In [5], line 5\r\n      3 max_chuck_overlap = 0\r\n      4 prompt_helper = PromptHelper(max_input_size, num_output, max_chuck_overlap)\r\n----> 5 index = GPTSimpleVectorIndex(documents, embed_model = embed_model, llm_predictor = llm_predictor, prompt_helper = prompt_helper)\r\n      6 #index.save_to_disk('index.json')\r\n\r\nFile /opt/conda/lib/python3.9/site-packages/llama_index/indices/vector_store/vector_indices.py:94, in GPTSimpleVectorIndex.__init__(self, nodes, index_struct, service_context, text_qa_template, simple_vector_store_data_dict, **kwargs)\r\n     86     simple_vector_store_data_dict = {\r\n     87         \"embedding_dict\": index_struct.embeddings_dict,\r\n     88     }\r\n     90 vector_store = SimpleVectorStore(\r\n     91     simple_vector_store_data_dict=simple_vector_store_data_dict\r\n     92 )\r\n---> 94 super().__init__(\r\n     95     nodes=nodes,\r\n     96     index_struct=index_struct,\r\n     97     service_context=service_context,\r\n     98     text_qa_template=text_qa_template,\r\n     99     vector_store=vector_store,\r\n    100     **kwargs,\r\n    101 )\r\n    103 # TODO: Temporary hack to also store embeddings in index_struct\r\n    104 embedding_dict = vector_store._data.embedding_dict\r\n\r\nFile /opt/conda/lib/python3.9/site-packages/llama_index/indices/vector_store/base.py:58, in GPTVectorStoreIndex.__init__(self, nodes, index_struct, service_context, text_qa_template, vector_store, use_async, **kwargs)\r\n     56 self.text_qa_template = text_qa_template or DEFAULT_TEXT_QA_PROMPT\r\n     57 self._use_async = use_async\r\n---> 58 super().__init__(\r\n     59     nodes=nodes,\r\n     60     index_struct=index_struct,\r\n     61     service_context=service_context,\r\n     62     **kwargs,\r\n     63 )\r\n\r\nTypeError: __init__() got an unexpected keyword argument 'embed_model'\r\n```\r\n\r\nThe code worked in 0.4.28, but appears to start failing when we upgraded version to 0.5.x. Is there something more we have to do now for 0.5.x? Note that langchain version is 0.0.127. Note that SimpleDirectoryReader is just loading plain text files.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1033/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1033/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1032",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1032/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1032/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1032/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1032",
        "id": 1652277748,
        "node_id": "I_kwDOIWuq585ie8H0",
        "number": 1032,
        "title": "documentation link to langchain LLM page 404s",
        "user": {
            "login": "jobooker",
            "id": 2370624,
            "node_id": "MDQ6VXNlcjIzNzA2MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2370624?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jobooker",
            "html_url": "https://github.com/jobooker",
            "followers_url": "https://api.github.com/users/jobooker/followers",
            "following_url": "https://api.github.com/users/jobooker/following{/other_user}",
            "gists_url": "https://api.github.com/users/jobooker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jobooker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jobooker/subscriptions",
            "organizations_url": "https://api.github.com/users/jobooker/orgs",
            "repos_url": "https://api.github.com/users/jobooker/repos",
            "events_url": "https://api.github.com/users/jobooker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jobooker/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-03T15:16:56Z",
        "updated_at": "2023-04-03T18:09:59Z",
        "closed_at": "2023-04-03T18:09:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The doc for [Defining LLMS > Example: Changing the underlying LLM](https://gpt-index.readthedocs.io/en/latest/how_to/customization/custom_llms.html#example-changing-the-underlying-llm) has the following text with a dead link: \r\n\r\n>  \"Note that you may plug in any LLM shown on Langchain\u2019s [LLM](https://langchain.readthedocs.io/en/latest/modules/llms.html) page.\"\r\n\r\nPresumably it means to go here now: https://python.langchain.com/en/latest/modules/models/llms.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1032/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1032/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    }
]