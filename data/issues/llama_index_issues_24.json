[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6988",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6988/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6988/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6988/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6988",
        "id": 1814463598,
        "node_id": "PR_kwDOIWuq585WBwxU",
        "number": 6988,
        "title": "[version] bump to v0.7.11.post1",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-20T17:17:47Z",
        "updated_at": "2023-07-20T17:28:55Z",
        "closed_at": "2023-07-20T17:28:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6988",
            "html_url": "https://github.com/run-llama/llama_index/pull/6988",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6988.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6988.patch",
            "merged_at": "2023-07-20T17:28:54Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6988/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6988/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6987",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6987/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6987/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6987/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6987",
        "id": 1814459414,
        "node_id": "PR_kwDOIWuq585WBv1o",
        "number": 6987,
        "title": "move sub question callbacks to each subq",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-20T17:14:56Z",
        "updated_at": "2023-07-28T18:17:05Z",
        "closed_at": "2023-07-28T18:17:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6987",
            "html_url": "https://github.com/run-llama/llama_index/pull/6987",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6987.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6987.patch",
            "merged_at": "2023-07-28T18:17:04Z"
        },
        "body": "# Description\r\n\r\nWe can report sub-q callbacks for each question, rather than at the end, to better show progress of subquestions to the handler.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Todo:\r\n\r\n- [x] Test that this actually works\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6987/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6987/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6986",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6986/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6986/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6986/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6986",
        "id": 1814412052,
        "node_id": "I_kwDOIWuq585sJbsU",
        "number": 6986,
        "title": "[Question]: Truncation Issues ",
        "user": {
            "login": "azaiman1",
            "id": 133413688,
            "node_id": "U_kgDOB_O7OA",
            "avatar_url": "https://avatars.githubusercontent.com/u/133413688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azaiman1",
            "html_url": "https://github.com/azaiman1",
            "followers_url": "https://api.github.com/users/azaiman1/followers",
            "following_url": "https://api.github.com/users/azaiman1/following{/other_user}",
            "gists_url": "https://api.github.com/users/azaiman1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azaiman1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azaiman1/subscriptions",
            "organizations_url": "https://api.github.com/users/azaiman1/orgs",
            "repos_url": "https://api.github.com/users/azaiman1/repos",
            "events_url": "https://api.github.com/users/azaiman1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azaiman1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-20T16:42:31Z",
        "updated_at": "2023-07-21T15:12:25Z",
        "closed_at": "2023-07-21T15:12:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [x] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI am currently using my own custom Embeddings to have weighted embeddings to feed into the database. However, when I try to to embed the data it seems as if the text is being truncated leading to many errors. I believe it is because of the ServiceContext truncating the text however there is nothing on what the default chunk size is. I am wondering how to make it so it does not truncate any text chunk",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6986/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6986/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6985",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6985/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6985/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6985/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6985",
        "id": 1814304370,
        "node_id": "I_kwDOIWuq585sJBZy",
        "number": 6985,
        "title": "[Feature Request]: Agent Step Iterator",
        "user": {
            "login": "SlapDrone",
            "id": 32279503,
            "node_id": "MDQ6VXNlcjMyMjc5NTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/32279503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SlapDrone",
            "html_url": "https://github.com/SlapDrone",
            "followers_url": "https://api.github.com/users/SlapDrone/followers",
            "following_url": "https://api.github.com/users/SlapDrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/SlapDrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SlapDrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SlapDrone/subscriptions",
            "organizations_url": "https://api.github.com/users/SlapDrone/orgs",
            "repos_url": "https://api.github.com/users/SlapDrone/repos",
            "events_url": "https://api.github.com/users/SlapDrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SlapDrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-20T15:43:43Z",
        "updated_at": "2023-10-30T16:02:50Z",
        "closed_at": "2023-10-30T16:02:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nHey folks,\r\n\r\nWhat do you think about having the new native Agent classes able to yield/stream all their steps (function calls, thoughts, observations, etc) rather than just the final output? I've been digging through the source code after this was mentioned in passing in [the docs](https://gpt-index.readthedocs.io/en/latest/examples/agent/openai_agent.html#streaming-chat), but I don't see this implemented yet.\r\n\r\nA colleague and I implemented a similar thing in a [PR for Langchain](https://github.com/hwchase17/langchain/pull/6929), so this is definitely something we could either help the established devs with if it is already in the pipeline here, or take the lead on if not.\r\n\r\n### Reason\r\n\r\nI don't think there's anything stopping this structurally, it just requires modifying some internals.\r\n\r\nThe places that would need adapted would be the `stream_chat` method for example here:\r\n\r\nhttps://github.com/jerryjliu/llama_index/blob/be0ded30701f45bd097b30a00fa93d2cdf06a592/llama_index/agent/openai_agent.py#L141\r\n\r\nAnd (potentially?) the `StreamingAgentChatResponse` here.\r\n\r\nhttps://github.com/jerryjliu/llama_index/blob/be0ded30701f45bd097b30a00fa93d2cdf06a592/llama_index/chat_engine/types.py#L27\r\n\r\n### Value of Feature\r\n\r\nThis is super valuable to us because it's generally useful to be able to hook into the whole  \"reasoning\" process, both for debugging and for transparency in a chat interface. If only the final answer is revealed and it happens to be wrong, it is harder to understand where the problem lies. When talking to an agent in an interactive setting, we can also see and potentially interrupt and guide its trajectory earlier and with finer detail if we can resolve each step. Imagine a chat where one can elect to see/sort/modify function calls / tool outputs / intermediate \"thoughts\".",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6985/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6985/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6984",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6984/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6984/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6984/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6984",
        "id": 1814287692,
        "node_id": "I_kwDOIWuq585sI9VM",
        "number": 6984,
        "title": "[Question]: Connect llama_index to my API",
        "user": {
            "login": "Alois-B",
            "id": 73989748,
            "node_id": "MDQ6VXNlcjczOTg5NzQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/73989748?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alois-B",
            "html_url": "https://github.com/Alois-B",
            "followers_url": "https://api.github.com/users/Alois-B/followers",
            "following_url": "https://api.github.com/users/Alois-B/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alois-B/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alois-B/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alois-B/subscriptions",
            "organizations_url": "https://api.github.com/users/Alois-B/orgs",
            "repos_url": "https://api.github.com/users/Alois-B/repos",
            "events_url": "https://api.github.com/users/Alois-B/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alois-B/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-20T15:36:20Z",
        "updated_at": "2023-07-28T05:44:58Z",
        "closed_at": "2023-07-28T05:44:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nHello,\r\n\r\nI'm a student and I'm using Llama_index for educational purposes.\r\nI would like to connect my \"chatgpt\" API to llama_index, The idea behind is to not use ChatGPT and instead use my local model.\r\nSo what I've done is that :\r\n\r\n```python\r\nfrom pathlib import Path\r\nfrom llama_index import (\r\n    download_loader,\r\n    LLMPredictor,\r\n    ServiceContext,\r\n    GPTVectorStoreIndex,\r\n    PromptHelper,\r\n    VectorStoreIndex,\r\n    LangchainEmbedding\r\n)\r\nimport openai\r\nimport os\r\nfrom langchain.llms import OpenAI as OpenAI_LC\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\n\r\n# Loader for DOCX\r\nDocxReader = download_loader(\"DocxReader\")\r\nloader_docx = DocxReader()\r\ndata_docx = \"\" # path doc\r\ndocuments = loader_docx.load_data(file=Path(data_docx))\r\n\r\ntemperature = 0.5\r\nopenai.api_type = os.environ[\"OPENAI_API_TYPE\"] = \"azure\"\r\nopenai.api_version = os.environ[\"OPENAI_API_VERSION\"] = \"2023-07-20\"\r\nopenai.api_base = os.environ[\"OPENAI_API_BASE\"] = \"http://localhost:3000\" # OPENAI_API_BASE\r\nopenai.api_key = os.environ[\"OPENAI_API_KEY\"] = \"\" # OPENAI_API_KEY\r\n\r\ndeployment_name = \"toto\"\r\nmodel_name = \"gpt-3.5-turbo\"\r\n\r\nllm_openai_lc = OpenAI_LI(temperature=temperature, openai_api_base=openai.api_base, openai_api_key=openai.api_key)\r\n\r\n\r\nllm_predictor = LLMPredictor(llm=llm_openai_lc)\r\nembedding_llm = LangchainEmbedding(\r\n    OpenAIEmbeddings(\r\n        model=model_name,\r\n        #deployment=deployment_name,\r\n        openai_api_key=openai.api_key,\r\n        openai_api_base=openai.api_base,\r\n        openai_api_type=openai.api_type,\r\n        openai_api_version=openai.api_version,\r\n    ),\r\n    embed_batch_size=1,\r\n)\r\n\r\nservice_context = ServiceContext.from_defaults(llm=llm_openai_lc, embed_model=embedding_llm)\r\n\r\nindex = GPTVectorStoreIndex.from_documents(documents, service_context=service_context)\r\n\r\n# get response from query and index\r\nquery_engine = index.as_query_engine()\r\n\r\n# query for testing the model\r\nquery_test = \"What's the topic of the document ?\"\r\nresponse_test = query_engine.query(query_test)\r\nprint(response_test)\r\n```\r\n\r\nmy problem is that I received that message :\r\n\r\n```python\r\nRetrying langchain.embeddings.openai.embed_with_retry.<locals>._embed_with_retry in 4.0 seconds as it raised APIError: HTTP code 404 from API (<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>Error</title>\r\n</head>\r\n<body>\r\n<pre>Cannot POST /openai/deployments/text-embedding-ada-002/embeddings</pre>\r\n</body>\r\n</html>\r\n).\r\nRetrying langchain.embeddings.openai.embed_with_retry.<locals>._embed_with_retry in 4.0 seconds as it raised APIError: HTTP code 404 from API (<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>Error</title>\r\n</head>\r\n<body>\r\n<pre>Cannot POST /openai/deployments/text-embedding-ada-002/embeddings</pre>\r\n</body>\r\n</html>\r\n).\r\nRetrying langchain.embeddings.openai.embed_with_retry.<locals>._embed_with_retry in 4.0 seconds as it raised APIError: HTTP code 404 from API (<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>Error</title>\r\n</head>\r\n<body>\r\n<pre>Cannot POST /openai/deployments/text-embedding-ada-002/embeddings</pre>\r\n</body>\r\n</html>\r\n).\r\n```\r\n \r\nMy question is : Do I have to use a Embeddings for using my API with llama_index ? (Not sure that it's related but my chatgpt works fine without having a route for embeddings)\r\n\r\nBecause when I don't use it, I received : \r\n\r\n```python\r\nFile \"/home/user/.local/lib/python3.10/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 83, in __prepare_create_request\r\n    raise error.InvalidRequestError(\r\nopenai.error.InvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.embedding.Embedding'>\r\n```\r\n\r\nAnd if I've to use an embedding, how can I fix the POST request problem ?\r\n\r\n\r\nThanks for your help !",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6984/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6984/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6983",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6983/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6983/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6983/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6983",
        "id": 1814273894,
        "node_id": "PR_kwDOIWuq585WBG25",
        "number": 6983,
        "title": "fix variable name",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-20T15:30:44Z",
        "updated_at": "2023-07-20T15:30:55Z",
        "closed_at": "2023-07-20T15:30:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6983",
            "html_url": "https://github.com/run-llama/llama_index/pull/6983",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6983.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6983.patch",
            "merged_at": "2023-07-20T15:30:54Z"
        },
        "body": "# Description\r\n\r\nSmall variable fix.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/6975",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6983/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6983/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6982",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6982/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6982/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6982/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6982",
        "id": 1814052398,
        "node_id": "I_kwDOIWuq585sID4u",
        "number": 6982,
        "title": "[Bug]: There are 2 selections, please use .inds.",
        "user": {
            "login": "nitins2016",
            "id": 20789732,
            "node_id": "MDQ6VXNlcjIwNzg5NzMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/20789732?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nitins2016",
            "html_url": "https://github.com/nitins2016",
            "followers_url": "https://api.github.com/users/nitins2016/followers",
            "following_url": "https://api.github.com/users/nitins2016/following{/other_user}",
            "gists_url": "https://api.github.com/users/nitins2016/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nitins2016/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nitins2016/subscriptions",
            "organizations_url": "https://api.github.com/users/nitins2016/orgs",
            "repos_url": "https://api.github.com/users/nitins2016/repos",
            "events_url": "https://api.github.com/users/nitins2016/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nitins2016/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-20T13:52:28Z",
        "updated_at": "2023-10-26T16:02:06Z",
        "closed_at": "2023-10-26T16:02:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI am working on a solution which Combining Text-to-SQL with Semantic Search. Query engine is not working as expected some times. It throws error - \"There are 2 selections, please use .inds.\"\r\nIt works some time. In some cases it throws error.\r\ni am using Chroma db for vector database and sqlite for database.\n\n### Version\n\n0.7.11\n\n### Steps to Reproduce\n\n\r\ni am following steps as mentioned in this article\r\nhttps://medium.com/llamaindex-blog/combining-text-to-sql-with-semantic-search-for-retrieval-augmented-generation-c60af30ec3b\r\nerror is coming when I am sending query for response. It works some time. In some cases it throws error.\r\nquery_engine.query('my query')\n\n### Relevant Logs/Tracbacks\n\n```shell\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<command-2022975761324598> in <module>\r\n      1 query = \"My Query\"\r\n----> 2 get_answer(query)\r\n\r\n<command-2022975761324008> in get_answer(query)\r\n      1 def get_answer(query):\r\n----> 2   response = query_engine.query(query)\r\n      3   print(\"----------  Final Response-------------\")\r\n      4   print(response.response)\r\n      5 \r\n\r\n/databricks/python/lib/python3.8/site-packages/llama_index/indices/query/base.py in query(self, str_or_query_bundle)\r\n     21             if isinstance(str_or_query_bundle, str):\r\n     22                 str_or_query_bundle = QueryBundle(str_or_query_bundle)\r\n---> 23             response = self._query(str_or_query_bundle)\r\n     24             return response\r\n     25 \r\n\r\n/databricks/python/lib/python3.8/site-packages/llama_index/query_engine/sql_join_query_engine.py in _query(self, query_bundle)\r\n    257         result = self._selector.select(metadatas, query_bundle)\r\n    258         # pick sql query\r\n--> 259         if result.ind == 0:\r\n    260             if self._verbose:\r\n    261                 print_text(f\"Querying SQL database: {result.reason}\\n\", color=\"blue\")\r\n\r\n/databricks/python/lib/python3.8/site-packages/llama_index/selectors/types.py in ind(self)\r\n     24     def ind(self) -> int:\r\n     25         if len(self.selections) != 1:\r\n---> 26             raise ValueError(\r\n     27                 f\"There are {len(self.selections)} selections, \" \"please use .inds.\"\r\n     28             )\r\n\r\nValueError: There are 2 selections, please use .inds\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6982/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6982/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6981",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6981/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6981/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6981/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6981",
        "id": 1813682117,
        "node_id": "PR_kwDOIWuq585V_DyE",
        "number": 6981,
        "title": "Added missing query parameters.",
        "user": {
            "login": "obilixilido",
            "id": 43101965,
            "node_id": "MDQ6VXNlcjQzMTAxOTY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43101965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/obilixilido",
            "html_url": "https://github.com/obilixilido",
            "followers_url": "https://api.github.com/users/obilixilido/followers",
            "following_url": "https://api.github.com/users/obilixilido/following{/other_user}",
            "gists_url": "https://api.github.com/users/obilixilido/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/obilixilido/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/obilixilido/subscriptions",
            "organizations_url": "https://api.github.com/users/obilixilido/orgs",
            "repos_url": "https://api.github.com/users/obilixilido/repos",
            "events_url": "https://api.github.com/users/obilixilido/events{/privacy}",
            "received_events_url": "https://api.github.com/users/obilixilido/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-20T10:39:30Z",
        "updated_at": "2023-07-20T17:17:21Z",
        "closed_at": "2023-07-20T17:17:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6981",
            "html_url": "https://github.com/run-llama/llama_index/pull/6981",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6981.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6981.patch",
            "merged_at": "2023-07-20T17:17:21Z"
        },
        "body": "# Description\r\n\r\nEvaluation sample doesn't work.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6981/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6981/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6979",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6979/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6979/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6979/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6979",
        "id": 1813603536,
        "node_id": "PR_kwDOIWuq585V-ybz",
        "number": 6979,
        "title": "Chat buffer should return last messages, not first",
        "user": {
            "login": "proDOOMman",
            "id": 82411,
            "node_id": "MDQ6VXNlcjgyNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/82411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/proDOOMman",
            "html_url": "https://github.com/proDOOMman",
            "followers_url": "https://api.github.com/users/proDOOMman/followers",
            "following_url": "https://api.github.com/users/proDOOMman/following{/other_user}",
            "gists_url": "https://api.github.com/users/proDOOMman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/proDOOMman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/proDOOMman/subscriptions",
            "organizations_url": "https://api.github.com/users/proDOOMman/orgs",
            "repos_url": "https://api.github.com/users/proDOOMman/repos",
            "events_url": "https://api.github.com/users/proDOOMman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/proDOOMman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-20T09:53:53Z",
        "updated_at": "2023-07-20T17:10:32Z",
        "closed_at": "2023-07-20T17:09:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6979",
            "html_url": "https://github.com/run-llama/llama_index/pull/6979",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6979.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6979.patch",
            "merged_at": "2023-07-20T17:09:57Z"
        },
        "body": "# Description\r\n\r\nChat buffer should return last messages, not first.\r\nAt the code above (lines 43 and 51) message_str calculated as ``chat_history[-message_count:]``, but at the end of function will be returned ``chat_history[:message_count]``. The is a bug, that prevent to send new messages to llm\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6979/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6979/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6978",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6978/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6978/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6978/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6978",
        "id": 1813574429,
        "node_id": "I_kwDOIWuq585sGPMd",
        "number": 6978,
        "title": "[Documentation]: Questions for RedisIndex",
        "user": {
            "login": "aetherwu",
            "id": 1645472,
            "node_id": "MDQ6VXNlcjE2NDU0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1645472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aetherwu",
            "html_url": "https://github.com/aetherwu",
            "followers_url": "https://api.github.com/users/aetherwu/followers",
            "following_url": "https://api.github.com/users/aetherwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/aetherwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aetherwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aetherwu/subscriptions",
            "organizations_url": "https://api.github.com/users/aetherwu/orgs",
            "repos_url": "https://api.github.com/users/aetherwu/repos",
            "events_url": "https://api.github.com/users/aetherwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aetherwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-20T09:37:41Z",
        "updated_at": "2023-10-13T14:22:52Z",
        "closed_at": "2023-07-21T07:34:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nMay I ask for more explaination for doc of RedisStore.\r\n- How to load index in RedisVectorStore that had been loaded previously? (So that it avoids embedding and cost again.)\r\n- Would SimpleDirectoryReader('data').load_data() do it automatically (Assume files are all unchange) \r\n- Or neither of it and VectorStoreIndex.from_documents do it, which means I need to implement this layer myself? \r\n\r\nI also suggest that add 'retriever = index.as_retriever()' part to this page, so that readers can understand its usage with flexibility.\n\n### Documenation Link\n\nhttps://gpt-index.readthedocs.io/en/latest/examples/vector_stores/RedisIndexDemo.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6978/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6978/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6977",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6977/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6977/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6977/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6977",
        "id": 1813425494,
        "node_id": "I_kwDOIWuq585sFq1W",
        "number": 6977,
        "title": "[Question]: When customize the LLM, using VectorStoreIndex, it reports error ",
        "user": {
            "login": "Danny-C-Auditore",
            "id": 66711049,
            "node_id": "MDQ6VXNlcjY2NzExMDQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/66711049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Danny-C-Auditore",
            "html_url": "https://github.com/Danny-C-Auditore",
            "followers_url": "https://api.github.com/users/Danny-C-Auditore/followers",
            "following_url": "https://api.github.com/users/Danny-C-Auditore/following{/other_user}",
            "gists_url": "https://api.github.com/users/Danny-C-Auditore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Danny-C-Auditore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Danny-C-Auditore/subscriptions",
            "organizations_url": "https://api.github.com/users/Danny-C-Auditore/orgs",
            "repos_url": "https://api.github.com/users/Danny-C-Auditore/repos",
            "events_url": "https://api.github.com/users/Danny-C-Auditore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Danny-C-Auditore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            },
            {
                "id": 5860091515,
                "node_id": "LA_kwDOIWuq588AAAABXUnmew",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-07-20T08:11:33Z",
        "updated_at": "2023-10-24T06:29:54Z",
        "closed_at": "2023-10-24T06:29:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nTraceback (most recent call last):\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/tenacity/__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/llama_index/embeddings/openai.py\", line 165, in get_embeddings\r\n    data = openai.Embedding.create(input=list_of_text, model=engine, **kwargs).data\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/openai/api_resources/embedding.py\", line 33, in create\r\n    response = super().create(*args, **kwargs)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 149, in create\r\n    ) = cls.__prepare_create_request(\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 106, in __prepare_create_request\r\n    requestor = api_requestor.APIRequestor(\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/openai/api_requestor.py\", line 138, in __init__\r\n    self.api_key = key or util.default_api_key()\r\n                          ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/openai/util.py\", line 186, in default_api_key\r\n    raise openai.error.AuthenticationError(\r\nopenai.error.AuthenticationError: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/yaoyunzhang897/llama-index/test.py\", line 82, in <module>\r\n    index = VectorStoreIndex.from_documents(documents, service_context=service_context)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/llama_index/indices/base.py\", line 102, in from_documents\r\n    return cls(\r\n           ^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 46, in __init__\r\n    super().__init__(\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/llama_index/indices/base.py\", line 71, in __init__\r\n    index_struct = self.build_index_from_nodes(nodes)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 241, in build_index_from_nodes\r\n    return self._build_index_from_nodes(nodes)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 229, in _build_index_from_nodes\r\n    self._add_nodes_to_index(\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 201, in _add_nodes_to_index\r\n    embedding_results = self._get_node_embedding_results(nodes, show_progress)\r\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 111, in _get_node_embedding_results\r\n    ) = self._service_context.embed_model.get_queued_text_embeddings(show_progress)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home//.local/lib/python3.11/site-packages/llama_index/embeddings/base.py\", line 180, in get_queued_text_embeddings\r\n    embeddings = self._get_text_embeddings(cur_batch_texts)\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/llama_index/embeddings/openai.py\", line 285, in _get_text_embeddings\r\n    return get_embeddings(\r\n           ^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/tenacity/__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/tenacity/__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/yaoyunzhang897/.local/lib/python3.11/site-packages/tenacity/__init__.py\", line 326, in iter\r\n    raise retry_exc from fut.exception()\r\ntenacity.RetryError: RetryError[<Future at 0x7fd5edf13d10 state=finished raised AuthenticationError>]\r\n\r\n\r\nit reports \"openai.error.AuthenticationError: No API key provided.\"\r\nBut the question is that I didn't try to use the Openai model,  why would I need the API key?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6977/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6977/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6976",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6976/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6976/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6976/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6976",
        "id": 1813175106,
        "node_id": "I_kwDOIWuq585sEttC",
        "number": 6976,
        "title": "[Bug]: RecursionError: maximum recursion depth exceeded in comparison thrown with DocumentSummaryIndex",
        "user": {
            "login": "hwuiwon",
            "id": 15950753,
            "node_id": "MDQ6VXNlcjE1OTUwNzUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/15950753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwuiwon",
            "html_url": "https://github.com/hwuiwon",
            "followers_url": "https://api.github.com/users/hwuiwon/followers",
            "following_url": "https://api.github.com/users/hwuiwon/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwuiwon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwuiwon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwuiwon/subscriptions",
            "organizations_url": "https://api.github.com/users/hwuiwon/orgs",
            "repos_url": "https://api.github.com/users/hwuiwon/repos",
            "events_url": "https://api.github.com/users/hwuiwon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwuiwon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-20T05:13:50Z",
        "updated_at": "2023-12-08T16:01:41Z",
        "closed_at": "2023-12-08T16:01:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nHi, not sure why but when I run the code below that queries a query_engine created with DocumentSummaryIndex, I get a following error `RecursionError: maximum recursion depth exceeded in comparison`.\r\n\r\nIt looks like that it depends on the provided text length. Can someone take a look? Thanks.\r\n\r\n```\r\nimport nest_asyncio\r\nnest_asyncio.apply()\r\n\r\na = SummarizeHandler()\r\nb = await a.query(\"Efficient and effective content creation. Generative AI could significantly reduce the time required for ideation and content drafting, saving valuable time and effort. It can also facilitate consistency across different pieces of content, ensuring a uniform brand voice, writing style, and format. Team members can collaborate via generative AI, which can integrate their ideas into a single cohesive piece. This would allow teams to significantly enhance personalization of marketing messages aimed at different customer segments, geographies, and demographics. Mass email campaigns can be instantly translated into as many languages as needed, with different imagery and messaging depending on the audience. Generative AI\u2019s ability to produce content with varying specifications could increase customer value, attraction, conversion, and retention over a lifetime and at a scale beyond what is currently possible through traditional techniques.\")\r\n```\r\n\r\n\r\n```\r\nimport logging\r\n\r\nimport tiktoken\r\nfrom llama_index import ServiceContext, StringIterableReader\r\nfrom llama_index.callbacks import CallbackManager, TokenCountingHandler\r\nfrom llama_index.indices.document_summary import DocumentSummaryIndex\r\nfrom llama_index.llms import OpenAI\r\n\r\n\r\nclass SummarizeHandler():\r\n    def __init__(self):\r\n        self.model_name = \"gpt-3.5-turbo\"\r\n        self.token_counter = TokenCountingHandler(\r\n            tokenizer=tiktoken.encoding_for_model(self.model_name).encode,\r\n            verbose=True,\r\n        )\r\n        self.service_context = ServiceContext.from_defaults(\r\n            llm=OpenAI(model=self.model_name, user=user, temperature=0, max_retries=3),\r\n            chunk_size=1024,\r\n            callback_manager=CallbackManager([self.token_counter]),\r\n        )\r\n        self.prompt = \"\"\"\r\n        Please provide a summary and analysis of these important elements, explaining their significance in an understandable and user-friendly manner.\r\n        Assume the reader has no background knowledge on the topic.\r\n        \"\"\"\r\n\r\n    def query(self, query: str) -> str:\r\n        self.create_query_engine(query)\r\n        response = self.query_engine.query(self.prompt.replace(\"\\n\", \" \"))\r\n\r\n        logging.info(\r\n            f\"\u25b6 Embedding Tokens: {self.token_counter.total_embedding_token_count},\\n\"\r\n            f\"\u25b6 LLM Prompt Tokens: {self.token_counter.prompt_llm_token_count},\\n\"\r\n            f\"\u25b6 LLM Completion Tokens {self.token_counter.completion_llm_token_count},\\n\"\r\n            f\"\u25b6 Total LLM Token Count: {self.token_counter.total_llm_token_count}\"\r\n        )\r\n\r\n        return response.response\r\n\r\n    def create_query_engine(self, data: str) -> None:\r\n        document = StringIterableReader().load_data(texts=[data])\r\n        documents = []\r\n        documents.extend(document)\r\n        doc_summary_index = DocumentSummaryIndex.from_documents(\r\n            documents, service_context=self.service_context\r\n        )\r\n        self.query_engine = doc_summary_index.as_query_engine(\r\n            response_mode=\"tree_summarize\", use_async=True\r\n        )\r\n```\r\n\r\n### Version\r\n\r\n0.7.6\r\n\r\n### Steps to Reproduce\r\n\r\nRun the code snippet above\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n---------------------------------------------------------------------------\r\nRecursionError                            Traceback (most recent call last)\r\nCell In[8], line 5\r\n      2 nest_asyncio.apply()\r\n      4 a = SummarizeHandler()\r\n----> 5 b = await a.query(\"Efficient and effective content creation. Generative AI could significantly reduce the time required for ideation and content drafting, saving valuable time and effort. It can also facilitate consistency across different pieces of content, ensuring a uniform brand voice, writing style, and format. Team members can collaborate via generative AI, which can integrate their ideas into a single cohesive piece. This would allow teams to significantly enhance personalization of marketing messages aimed at different customer segments, geographies, and demographics. Mass email campaigns can be instantly translated into as many languages as needed, with different imagery and messaging depending on the audience. Generative AI\u2019s ability to produce content with varying specifications could increase customer value, attraction, conversion, and retention over a lifetime and at a scale beyond what is currently possible through traditional techniques.\")\r\n\r\nCell In[2], line 41, in SummarizeHandler.query(self, query)\r\n     39 async def query(self, query: str) -> str:\r\n     40     self.create_query_engine(query)\r\n---> 41     response = self.query_engine.query(self.prompt.replace(\"\\n\", \" \"))\r\n     42     logging.info(\r\n     43         f\"\u25b6 Embedding Tokens: {self.token_counter.total_embedding_token_count},\\n\"\r\n   (...)\r\n     47         f\"\u25b6 Total LLM Token Count: {self.token_counter.total_llm_token_count}\"\r\n     48     )\r\n     49     return response.response\r\n\r\nFile /usr/local/Caskroom/miniconda/base/envs/strat/lib/python3.8/site-packages/llama_index/indices/query/base.py:23, in BaseQueryEngine.query(self, str_or_query_bundle)\r\n     21 if isinstance(str_or_query_bundle, str):\r\n     22     str_or_query_bundle = QueryBundle(str_or_query_bundle)\r\n---> 23 response = self._query(str_or_query_bundle)\r\n     24 return response\r\n...\r\n--> 138 y = memo.get(d, _nil)\r\n    139 if y is not _nil:\r\n    140     return y\r\n\r\nRecursionError: maximum recursion depth exceeded in comparison\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6976/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6976/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6975",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6975/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6975/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6975/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6975",
        "id": 1813169950,
        "node_id": "I_kwDOIWuq585sEsce",
        "number": 6975,
        "title": "[Question]: sql_query_engine in SQLAutoVectorQueryEngine tutorial is not defined",
        "user": {
            "login": "cjen07",
            "id": 14173750,
            "node_id": "MDQ6VXNlcjE0MTczNzUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/14173750?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjen07",
            "html_url": "https://github.com/cjen07",
            "followers_url": "https://api.github.com/users/cjen07/followers",
            "following_url": "https://api.github.com/users/cjen07/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjen07/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjen07/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjen07/subscriptions",
            "organizations_url": "https://api.github.com/users/cjen07/orgs",
            "repos_url": "https://api.github.com/users/cjen07/repos",
            "events_url": "https://api.github.com/users/cjen07/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjen07/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-20T05:07:21Z",
        "updated_at": "2023-07-21T22:05:08Z",
        "closed_at": "2023-07-21T22:05:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi, \r\nin this [SQLAutoVectorQueryEngine tutorial](https://gpt-index.readthedocs.io/en/latest/examples/query_engine/SQLAutoVectorQueryEngine.html) the variable `sql_query_engine` is not defined, what is the best way to fix it?\r\nThanks in advance.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6975/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6975/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6974",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6974/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6974/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6974/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6974",
        "id": 1813061272,
        "node_id": "PR_kwDOIWuq585V88OR",
        "number": 6974,
        "title": "Update DynamoDBDocstoreDemo notebook description",
        "user": {
            "login": "hwuiwon",
            "id": 15950753,
            "node_id": "MDQ6VXNlcjE1OTUwNzUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/15950753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwuiwon",
            "html_url": "https://github.com/hwuiwon",
            "followers_url": "https://api.github.com/users/hwuiwon/followers",
            "following_url": "https://api.github.com/users/hwuiwon/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwuiwon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwuiwon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwuiwon/subscriptions",
            "organizations_url": "https://api.github.com/users/hwuiwon/orgs",
            "repos_url": "https://api.github.com/users/hwuiwon/repos",
            "events_url": "https://api.github.com/users/hwuiwon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwuiwon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-20T03:09:07Z",
        "updated_at": "2023-07-20T17:17:32Z",
        "closed_at": "2023-07-20T17:17:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6974",
            "html_url": "https://github.com/run-llama/llama_index/pull/6974",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6974.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6974.patch",
            "merged_at": "2023-07-20T17:17:32Z"
        },
        "body": "# Description\r\n\r\nAdded vector_store to StorageContext to load vector_index from DynamoDB storage. Current description will not load vector_store from the DynamoDB table. It also includes one small typo fix.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6974/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6974/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6973",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6973/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6973/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6973/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6973",
        "id": 1812978670,
        "node_id": "PR_kwDOIWuq585V8qSv",
        "number": 6973,
        "title": "[version] bump version to 0.7.11",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-20T01:26:39Z",
        "updated_at": "2023-07-20T01:39:05Z",
        "closed_at": "2023-07-20T01:39:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6973",
            "html_url": "https://github.com/run-llama/llama_index/pull/6973",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6973.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6973.patch",
            "merged_at": "2023-07-20T01:39:04Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6973/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6973/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6972",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6972/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6972/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6972/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6972",
        "id": 1812788377,
        "node_id": "I_kwDOIWuq585sDPSZ",
        "number": 6972,
        "title": "[Question]: How to right structure the data? (Company chat history)",
        "user": {
            "login": "mvcastellari",
            "id": 40399310,
            "node_id": "MDQ6VXNlcjQwMzk5MzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/40399310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mvcastellari",
            "html_url": "https://github.com/mvcastellari",
            "followers_url": "https://api.github.com/users/mvcastellari/followers",
            "following_url": "https://api.github.com/users/mvcastellari/following{/other_user}",
            "gists_url": "https://api.github.com/users/mvcastellari/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mvcastellari/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mvcastellari/subscriptions",
            "organizations_url": "https://api.github.com/users/mvcastellari/orgs",
            "repos_url": "https://api.github.com/users/mvcastellari/repos",
            "events_url": "https://api.github.com/users/mvcastellari/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mvcastellari/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            },
            {
                "id": 5860091515,
                "node_id": "LA_kwDOIWuq588AAAABXUnmew",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-19T21:55:47Z",
        "updated_at": "2023-10-24T06:29:52Z",
        "closed_at": "2023-10-24T06:29:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello, we're trying to use our support chat history (from our database) to feed the llama_index, right now I've exported all the data to a JSON file and put it on the \"data\" folder (millions of lines). But I was wondering how will the AI know what is the customer question vs what is the chat attendant answer? Is there a way to send like an index for each phrase (QUESTION:, ANSWER:)?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6972/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6972/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6971",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6971/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6971/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6971/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6971",
        "id": 1812742079,
        "node_id": "PR_kwDOIWuq585V719K",
        "number": 6971,
        "title": "add kwargs to from_tools",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-19T21:13:39Z",
        "updated_at": "2023-07-19T21:27:34Z",
        "closed_at": "2023-07-19T21:27:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6971",
            "html_url": "https://github.com/run-llama/llama_index/pull/6971",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6971.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6971.patch",
            "merged_at": "2023-07-19T21:27:33Z"
        },
        "body": "# Description\r\n\r\n`as_chat_engine` breaks when extra kwargs are passed, because the agents are being passed kwargs they don't use.\r\n\r\nJust a quick change to allow these things to be passed nicely.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/6967\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6971/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6971/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6970",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6970/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6970/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6970/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6970",
        "id": 1812685354,
        "node_id": "PR_kwDOIWuq585V7pim",
        "number": 6970,
        "title": "Add `KuzuGraphStore`",
        "user": {
            "login": "mewim",
            "id": 14037726,
            "node_id": "MDQ6VXNlcjE0MDM3NzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/14037726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mewim",
            "html_url": "https://github.com/mewim",
            "followers_url": "https://api.github.com/users/mewim/followers",
            "following_url": "https://api.github.com/users/mewim/following{/other_user}",
            "gists_url": "https://api.github.com/users/mewim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mewim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mewim/subscriptions",
            "organizations_url": "https://api.github.com/users/mewim/orgs",
            "repos_url": "https://api.github.com/users/mewim/repos",
            "events_url": "https://api.github.com/users/mewim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mewim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-19T20:31:19Z",
        "updated_at": "2023-07-28T16:31:57Z",
        "closed_at": "2023-07-28T16:31:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6970",
            "html_url": "https://github.com/run-llama/llama_index/pull/6970",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6970.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6970.patch",
            "merged_at": "2023-07-28T16:31:49Z"
        },
        "body": "# Description\r\n\r\nThis PR adds `KuzuGraphStore`, which allows using [K\u00f9zu database](https://kuzudb.com) for persisting graphs.\r\n\r\nIt also fixes an issue in `get_networkx_graph` function. According to https://github.com/jerryjliu/llama_index/blob/dd0bc90810f0b5d702febbe8eaa71e80dec503ad/llama_index/indices/knowledge_graph/retriever.py#L261\r\n\r\nThe return value from `get_rel_map` should be in the format of `subject [predicate, object, predicate_next_hop, object_next_hop ...]`, which allows more than two values in the list, but `get_networkx_graph` function assumes that each list contains only two values. \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6970/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6970/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6969",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6969/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6969/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6969/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6969",
        "id": 1812679049,
        "node_id": "PR_kwDOIWuq585V7oKw",
        "number": 6969,
        "title": "fix llama2 in query engines",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-19T20:26:14Z",
        "updated_at": "2023-07-19T23:48:05Z",
        "closed_at": "2023-07-19T23:48:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6969",
            "html_url": "https://github.com/run-llama/llama_index/pull/6969",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6969.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6969.patch",
            "merged_at": "2023-07-19T23:48:04Z"
        },
        "body": "# Description\r\n\r\nLlama2 needs some very specific formatting. Our chat endpoints used the proper formatting, but the completion endpoints did not.\r\n\r\nThis PR adds that, plus a notebook, plus fixing the kwarg names for `max_length` vs. `context_window`\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6969/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6969/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6968",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6968/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6968/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6968/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6968",
        "id": 1812613418,
        "node_id": "PR_kwDOIWuq585V7Zzz",
        "number": 6968,
        "title": "Incorporate metadata filters into PGVector store querying",
        "user": {
            "login": "sourabhdesai",
            "id": 3005241,
            "node_id": "MDQ6VXNlcjMwMDUyNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3005241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sourabhdesai",
            "html_url": "https://github.com/sourabhdesai",
            "followers_url": "https://api.github.com/users/sourabhdesai/followers",
            "following_url": "https://api.github.com/users/sourabhdesai/following{/other_user}",
            "gists_url": "https://api.github.com/users/sourabhdesai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sourabhdesai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sourabhdesai/subscriptions",
            "organizations_url": "https://api.github.com/users/sourabhdesai/orgs",
            "repos_url": "https://api.github.com/users/sourabhdesai/repos",
            "events_url": "https://api.github.com/users/sourabhdesai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sourabhdesai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-19T19:37:03Z",
        "updated_at": "2023-07-19T20:37:16Z",
        "closed_at": "2023-07-19T20:35:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6968",
            "html_url": "https://github.com/run-llama/llama_index/pull/6968",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6968.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6968.patch",
            "merged_at": "2023-07-19T20:35:43Z"
        },
        "body": "# Description\r\n\r\nInclude metadata filters when constructing the query within the PGVector vector-store integration.\r\n\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Ran this against some local test code I have setup\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6968/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6967",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6967/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6967/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6967/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6967",
        "id": 1812487402,
        "node_id": "I_kwDOIWuq585sCFzq",
        "number": 6967,
        "title": "[Question]: React Chat Mode breaking change? ",
        "user": {
            "login": "elmegatan26",
            "id": 124077199,
            "node_id": "U_kgDOB2VEjw",
            "avatar_url": "https://avatars.githubusercontent.com/u/124077199?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elmegatan26",
            "html_url": "https://github.com/elmegatan26",
            "followers_url": "https://api.github.com/users/elmegatan26/followers",
            "following_url": "https://api.github.com/users/elmegatan26/following{/other_user}",
            "gists_url": "https://api.github.com/users/elmegatan26/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/elmegatan26/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/elmegatan26/subscriptions",
            "organizations_url": "https://api.github.com/users/elmegatan26/orgs",
            "repos_url": "https://api.github.com/users/elmegatan26/repos",
            "events_url": "https://api.github.com/users/elmegatan26/events{/privacy}",
            "received_events_url": "https://api.github.com/users/elmegatan26/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-19T18:20:20Z",
        "updated_at": "2023-07-19T21:27:35Z",
        "closed_at": "2023-07-19T21:27:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nThrough Llamaindex version 0.7.6 the following chat engine setup worked without any issue:\r\n\r\n```\r\nchat_engine` = index.as_chat_engine(\r\n        chat_mode='react', \r\n        chat_history=custom_chat_history, \r\n        verbose=true,\r\n        similarity_top_k=7,\r\n        refine_template=DEFAULT_REFINE_PROMPT, \r\n        text_qa_template=custom_prompt\r\n    )\r\n```\r\nbeginning with version 0.7.7 the same config now throws this error:\r\n\r\n```\r\n  File \"/app/./server.py\", line 214, in query_index\r\n    chat_engine = index.as_chat_engine(chat_mode='react',\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/base.py\", line 383, in as_chat_engine\r\n    return ReActAgent.from_tools(\r\n           ^^^^^^^^^^^^^^^^^^^^^^\r\nTypeError: ReActAgent.from_tools() got an unexpected keyword argument 'similarity_top_k'\r\n```\r\n\n\n### Version\n\n0.7.7 - 0.7.10\n\n### Steps to Reproduce\n\nImplement a chat engine using react with a Llamaindex using 0.7.7 or above\r\n\r\n```\r\nchat_engine` = index.as_chat_engine(\r\n        chat_mode='react', \r\n        chat_history=custom_chat_history, \r\n        verbose=true,\r\n        similarity_top_k=7,\r\n        refine_template=DEFAULT_REFINE_PROMPT, \r\n        text_qa_template=custom_prompt\r\n    )\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\nFile \"/app/./server.py\", line 214, in query_index\r\n    chat_engine = index.as_chat_engine(chat_mode='react',\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/base.py\", line 383, in as_chat_engine\r\n    return ReActAgent.from_tools(\r\n           ^^^^^^^^^^^^^^^^^^^^^^\r\nTypeError: ReActAgent.from_tools() got an unexpected keyword argument 'similarity_top_k'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6967/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6967/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6966",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6966/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6966/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6966/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6966",
        "id": 1811455577,
        "node_id": "PR_kwDOIWuq585V3aVv",
        "number": 6966,
        "title": "Don't force \"python\" exec_option in deeplake query",
        "user": {
            "login": "proDOOMman",
            "id": 82411,
            "node_id": "MDQ6VXNlcjgyNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/82411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/proDOOMman",
            "html_url": "https://github.com/proDOOMman",
            "followers_url": "https://api.github.com/users/proDOOMman/followers",
            "following_url": "https://api.github.com/users/proDOOMman/following{/other_user}",
            "gists_url": "https://api.github.com/users/proDOOMman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/proDOOMman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/proDOOMman/subscriptions",
            "organizations_url": "https://api.github.com/users/proDOOMman/orgs",
            "repos_url": "https://api.github.com/users/proDOOMman/repos",
            "events_url": "https://api.github.com/users/proDOOMman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/proDOOMman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-19T08:37:56Z",
        "updated_at": "2023-07-21T16:26:46Z",
        "closed_at": "2023-07-21T16:26:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6966",
            "html_url": "https://github.com/run-llama/llama_index/pull/6966",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6966.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6966.patch",
            "merged_at": "2023-07-21T16:26:46Z"
        },
        "body": "# Description\r\n\r\nThe current implementation forces \"python\" exec_option in query. This PR will set exec_option to deeplake VectorStore self exec_option.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6966/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6966/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6965",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6965/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6965/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6965/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6965",
        "id": 1811386060,
        "node_id": "PR_kwDOIWuq585V3LFt",
        "number": 6965,
        "title": "Add llama 2 notebook and better handling of prompt structure",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-19T07:58:19Z",
        "updated_at": "2023-07-19T17:53:44Z",
        "closed_at": "2023-07-19T17:53:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6965",
            "html_url": "https://github.com/run-llama/llama_index/pull/6965",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6965.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6965.patch",
            "merged_at": "2023-07-19T17:53:43Z"
        },
        "body": "# Description\r\n\r\nAdd llama 2 notebook and better handling of prompt structure\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6965/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6965/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6964",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6964/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6964/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6964/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6964",
        "id": 1811229995,
        "node_id": "PR_kwDOIWuq585V2pc8",
        "number": 6964,
        "title": "Fix typo in usage_pattern.md",
        "user": {
            "login": "revsystem",
            "id": 17801281,
            "node_id": "MDQ6VXNlcjE3ODAxMjgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/17801281?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revsystem",
            "html_url": "https://github.com/revsystem",
            "followers_url": "https://api.github.com/users/revsystem/followers",
            "following_url": "https://api.github.com/users/revsystem/following{/other_user}",
            "gists_url": "https://api.github.com/users/revsystem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revsystem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revsystem/subscriptions",
            "organizations_url": "https://api.github.com/users/revsystem/orgs",
            "repos_url": "https://api.github.com/users/revsystem/repos",
            "events_url": "https://api.github.com/users/revsystem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revsystem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-19T06:13:30Z",
        "updated_at": "2023-07-19T08:36:29Z",
        "closed_at": "2023-07-19T08:36:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6964",
            "html_url": "https://github.com/run-llama/llama_index/pull/6964",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6964.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6964.patch",
            "merged_at": "2023-07-19T08:36:28Z"
        },
        "body": "# Description\r\n\r\nThis fix is related to \"Fix typo in usage_pattern.md #6959\".\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6964/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6963",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6963/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6963/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6963/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6963",
        "id": 1811091462,
        "node_id": "I_kwDOIWuq585r8xAG",
        "number": 6963,
        "title": "[Question]: Merging Vector Indexes from Multiple Milvus Databases",
        "user": {
            "login": "Shangziyu",
            "id": 57931618,
            "node_id": "MDQ6VXNlcjU3OTMxNjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/57931618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Shangziyu",
            "html_url": "https://github.com/Shangziyu",
            "followers_url": "https://api.github.com/users/Shangziyu/followers",
            "following_url": "https://api.github.com/users/Shangziyu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Shangziyu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Shangziyu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Shangziyu/subscriptions",
            "organizations_url": "https://api.github.com/users/Shangziyu/orgs",
            "repos_url": "https://api.github.com/users/Shangziyu/repos",
            "events_url": "https://api.github.com/users/Shangziyu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Shangziyu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            },
            {
                "id": 5860091515,
                "node_id": "LA_kwDOIWuq588AAAABXUnmew",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-19T03:49:09Z",
        "updated_at": "2023-10-24T06:29:51Z",
        "closed_at": "2023-10-24T06:29:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI have 2 vector indexes of classes stored in Milvus and now I want to read and merge them in order to open a conversation with ReActChatEngine.chat. \r\nHow do I do that? I have created two separate MilvusVectorStore objects.\r\n![\u56fe\u7247](https://github.com/jerryjliu/llama_index/assets/57931618/8658c4ae-39cd-44fa-8d23-697fd28c6731)\r\nI have tried to merge the two indexes using GPTListIndex, but it failed.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6963/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6963/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6962",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6962/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6962/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6962/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6962",
        "id": 1811036129,
        "node_id": "PR_kwDOIWuq585V1_oS",
        "number": 6962,
        "title": "add embeddings to embeddings callback hooks",
        "user": {
            "login": "axiomofjoy",
            "id": 15664869,
            "node_id": "MDQ6VXNlcjE1NjY0ODY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15664869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axiomofjoy",
            "html_url": "https://github.com/axiomofjoy",
            "followers_url": "https://api.github.com/users/axiomofjoy/followers",
            "following_url": "https://api.github.com/users/axiomofjoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/axiomofjoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axiomofjoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axiomofjoy/subscriptions",
            "organizations_url": "https://api.github.com/users/axiomofjoy/orgs",
            "repos_url": "https://api.github.com/users/axiomofjoy/repos",
            "events_url": "https://api.github.com/users/axiomofjoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axiomofjoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-19T02:46:34Z",
        "updated_at": "2023-07-23T00:26:53Z",
        "closed_at": "2023-07-22T05:51:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6962",
            "html_url": "https://github.com/run-llama/llama_index/pull/6962",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6962.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6962.patch",
            "merged_at": "2023-07-22T05:51:52Z"
        },
        "body": "# Description\r\n\r\nThe embeddings callback hook currently returns the embedded text but not the embeddings themselves, which are useful for analysis and debugging of retrieval-augmented systems. I am building a [callback handler](https://github.com/Arize-ai/llama_index/pull/1) that requires access to the embeddings for use with Phoenix.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense.\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6962/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6962/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6961",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6961/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6961/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6961/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6961",
        "id": 1810822898,
        "node_id": "PR_kwDOIWuq585V1Rln",
        "number": 6961,
        "title": "v0.7.10.post1",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-18T22:40:44Z",
        "updated_at": "2023-07-18T22:46:30Z",
        "closed_at": "2023-07-18T22:46:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6961",
            "html_url": "https://github.com/run-llama/llama_index/pull/6961",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6961.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6961.patch",
            "merged_at": "2023-07-18T22:46:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6961/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6961/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6960",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6960/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6960/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6960/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6960",
        "id": 1810635475,
        "node_id": "PR_kwDOIWuq585V0n_R",
        "number": 6960,
        "title": "Add Replicate LLM integration",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-18T20:06:58Z",
        "updated_at": "2023-07-18T22:32:30Z",
        "closed_at": "2023-07-18T22:32:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6960",
            "html_url": "https://github.com/run-llama/llama_index/pull/6960",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6960.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6960.patch",
            "merged_at": "2023-07-18T22:32:29Z"
        },
        "body": "# Description\r\n\r\nAdd Replicate LLM integration\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6960/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6960/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6959",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6959/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6959/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6959/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6959",
        "id": 1810448382,
        "node_id": "PR_kwDOIWuq585V0EzK",
        "number": 6959,
        "title": "Fix typo in usage_pattern.md",
        "user": {
            "login": "revsystem",
            "id": 17801281,
            "node_id": "MDQ6VXNlcjE3ODAxMjgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/17801281?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revsystem",
            "html_url": "https://github.com/revsystem",
            "followers_url": "https://api.github.com/users/revsystem/followers",
            "following_url": "https://api.github.com/users/revsystem/following{/other_user}",
            "gists_url": "https://api.github.com/users/revsystem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revsystem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revsystem/subscriptions",
            "organizations_url": "https://api.github.com/users/revsystem/orgs",
            "repos_url": "https://api.github.com/users/revsystem/repos",
            "events_url": "https://api.github.com/users/revsystem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revsystem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-18T18:08:04Z",
        "updated_at": "2023-07-18T20:09:37Z",
        "closed_at": "2023-07-18T20:09:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6959",
            "html_url": "https://github.com/run-llama/llama_index/pull/6959",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6959.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6959.patch",
            "merged_at": "2023-07-18T20:09:37Z"
        },
        "body": "# Description\r\n\r\nFixes misspelling of args.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6959/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6959/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6958",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6958/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6958/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6958/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6958",
        "id": 1810387093,
        "node_id": "PR_kwDOIWuq585Vz3hC",
        "number": 6958,
        "title": "fix condense engine streaming",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-18T17:19:27Z",
        "updated_at": "2023-07-18T17:43:10Z",
        "closed_at": "2023-07-18T17:43:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6958",
            "html_url": "https://github.com/run-llama/llama_index/pull/6958",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6958.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6958.patch",
            "merged_at": "2023-07-18T17:43:09Z"
        },
        "body": "# Description\r\n\r\nThe condense chat engine was a) not starting a thread for streaming and b) calling `str()` on the query response outputs, removing any chance of streaming\r\n\r\nThis PR fixes both of those issues.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n- [x] Tested with the notebook\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6958/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6957",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6957/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6957/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6957/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6957",
        "id": 1810289403,
        "node_id": "PR_kwDOIWuq585VziYO",
        "number": 6957,
        "title": "Update KnowledgeGraphIndex_vs_VectorStoreIndex_vs_CustomIndex_combine\u2026",
        "user": {
            "login": "bernard-rr",
            "id": 89081878,
            "node_id": "MDQ6VXNlcjg5MDgxODc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/89081878?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bernard-rr",
            "html_url": "https://github.com/bernard-rr",
            "followers_url": "https://api.github.com/users/bernard-rr/followers",
            "following_url": "https://api.github.com/users/bernard-rr/following{/other_user}",
            "gists_url": "https://api.github.com/users/bernard-rr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bernard-rr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bernard-rr/subscriptions",
            "organizations_url": "https://api.github.com/users/bernard-rr/orgs",
            "repos_url": "https://api.github.com/users/bernard-rr/repos",
            "events_url": "https://api.github.com/users/bernard-rr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bernard-rr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-18T16:26:41Z",
        "updated_at": "2023-07-18T20:32:07Z",
        "closed_at": "2023-07-18T20:10:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6957",
            "html_url": "https://github.com/run-llama/llama_index/pull/6957",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6957.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6957.patch",
            "merged_at": "2023-07-18T20:10:03Z"
        },
        "body": "\u2026d.ipynb\r\n\r\nMade a minor correction to the spelling of \"knowledge\"\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6957/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6957/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6956",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6956/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6956/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6956/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6956",
        "id": 1810107510,
        "node_id": "I_kwDOIWuq585r5Ax2",
        "number": 6956,
        "title": "[Question]: Sources (documents in metadata) are missing on QueryPlanTool and OpenAIAgent when dependencies are included in the QueryPlan",
        "user": {
            "login": "carpric",
            "id": 54773950,
            "node_id": "MDQ6VXNlcjU0NzczOTUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/54773950?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carpric",
            "html_url": "https://github.com/carpric",
            "followers_url": "https://api.github.com/users/carpric/followers",
            "following_url": "https://api.github.com/users/carpric/following{/other_user}",
            "gists_url": "https://api.github.com/users/carpric/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carpric/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carpric/subscriptions",
            "organizations_url": "https://api.github.com/users/carpric/orgs",
            "repos_url": "https://api.github.com/users/carpric/repos",
            "events_url": "https://api.github.com/users/carpric/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carpric/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            },
            {
                "id": 5860091515,
                "node_id": "LA_kwDOIWuq588AAAABXUnmew",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-18T14:56:45Z",
        "updated_at": "2023-10-24T06:29:49Z",
        "closed_at": "2023-10-24T06:29:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nHello everyone,\r\n\r\nI've seen using OpenAIAgent and QueryPlanTool for my use-case and works really good. However, when the QueryPlan is composed of multiple nodes that includes dependencies, the sources (i.e. documents consulted and such) is not included as for instance if only one node is executed.\r\n\r\nExample:\r\n\r\nCalling function: query_tool with args: {\r\n  \"nodes\": [\r\n    {\r\n      \"id\": 1,\r\n      \"query_str\": \"Question A\",\r\n      \"tool_name\": \"test\",\r\n      \"dependencies\": []\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"query_str\": \"Question B\",\r\n      \"tool_name\": \"test\",\r\n      \"dependencies\": []\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"query_str\": \"Qyestion C\",\r\n      \"tool_name\": \"test\",\r\n      \"dependencies\": [1, 2]\r\n    }\r\n  ]\r\n}\r\n\r\nThe response.sources (documents consulted/metadata) don't include any information after this query is executed. Anyone knows how I can solve this problem?\r\n\r\nNote: When only one node is executed (no dependencies), I can extract the documents consulted.\r\n\r\nThank you in advance.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6956/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6956/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6955",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6955/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6955/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6955/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6955",
        "id": 1810004549,
        "node_id": "PR_kwDOIWuq585VyjuJ",
        "number": 6955,
        "title": "Fix quick start links",
        "user": {
            "login": "joshreini1",
            "id": 60949774,
            "node_id": "MDQ6VXNlcjYwOTQ5Nzc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/60949774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshreini1",
            "html_url": "https://github.com/joshreini1",
            "followers_url": "https://api.github.com/users/joshreini1/followers",
            "following_url": "https://api.github.com/users/joshreini1/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshreini1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshreini1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshreini1/subscriptions",
            "organizations_url": "https://api.github.com/users/joshreini1/orgs",
            "repos_url": "https://api.github.com/users/joshreini1/repos",
            "events_url": "https://api.github.com/users/joshreini1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshreini1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-18T14:02:06Z",
        "updated_at": "2023-07-18T14:34:21Z",
        "closed_at": "2023-07-18T14:34:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6955",
            "html_url": "https://github.com/run-llama/llama_index/pull/6955",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6955.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6955.patch",
            "merged_at": "2023-07-18T14:34:21Z"
        },
        "body": "Fix images/links on integration page\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6955/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6954",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6954/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6954/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6954/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6954",
        "id": 1809988406,
        "node_id": "PR_kwDOIWuq585VygLN",
        "number": 6954,
        "title": "feature(TextSplit): add metadata field to TextSplit",
        "user": {
            "login": "mirth",
            "id": 1296970,
            "node_id": "MDQ6VXNlcjEyOTY5NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1296970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirth",
            "html_url": "https://github.com/mirth",
            "followers_url": "https://api.github.com/users/mirth/followers",
            "following_url": "https://api.github.com/users/mirth/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirth/subscriptions",
            "organizations_url": "https://api.github.com/users/mirth/orgs",
            "repos_url": "https://api.github.com/users/mirth/repos",
            "events_url": "https://api.github.com/users/mirth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirth/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-18T13:53:34Z",
        "updated_at": "2023-07-22T03:08:40Z",
        "closed_at": "2023-07-22T03:08:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6954",
            "html_url": "https://github.com/run-llama/llama_index/pull/6954",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6954.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6954.patch",
            "merged_at": "2023-07-22T03:08:40Z"
        },
        "body": "# Description\r\n\r\nSometimes it needed to add more granular metadata per node. The changes adds `metadata` field to `TextSplit`.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6954/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6953",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6953/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6953/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6953/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6953",
        "id": 1809949525,
        "node_id": "I_kwDOIWuq585r4aNV",
        "number": 6953,
        "title": "[Question]: RemoteReader not working while reading PDF data from URL",
        "user": {
            "login": "qaixerabbas",
            "id": 22142102,
            "node_id": "MDQ6VXNlcjIyMTQyMTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/22142102?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qaixerabbas",
            "html_url": "https://github.com/qaixerabbas",
            "followers_url": "https://api.github.com/users/qaixerabbas/followers",
            "following_url": "https://api.github.com/users/qaixerabbas/following{/other_user}",
            "gists_url": "https://api.github.com/users/qaixerabbas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/qaixerabbas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/qaixerabbas/subscriptions",
            "organizations_url": "https://api.github.com/users/qaixerabbas/orgs",
            "repos_url": "https://api.github.com/users/qaixerabbas/repos",
            "events_url": "https://api.github.com/users/qaixerabbas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/qaixerabbas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            },
            {
                "id": 5860091515,
                "node_id": "LA_kwDOIWuq588AAAABXUnmew",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T13:33:37Z",
        "updated_at": "2023-10-24T06:29:48Z",
        "closed_at": "2023-10-24T06:29:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am trying to read PDF data using RemoteReader from llama_hub but stuck into some JSONDecoreError. I am not sure what is causing the error here is my code below  (copied directly from [this link](https://llamahub.ai/l/remote)):\r\n\r\n```\r\nfrom llama_index import download_loader\r\nRemoteReader = download_loader(\"RemoteReader\")\r\nurl = \"URL to a pdf\"\r\nloader = RemoteReader()\r\ndocuments = loader.load_data(url=url)\r\n```\r\nNot sure it is a bug or some other issue but I am not able to run this code.\r\n\r\nThe code is throwing following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"D:\\1. SDSol Projects\\Between Sessions\\AI Progress Notes Generator\\worksheet analysis\\experiments\\another_test.py\", line 3, in <module>\r\n    RemoteReader = download_loader(\"RemoteReader\")\r\n  File \"C:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\llama_index\\readers\\download.py\", line 133, in download_loader\r\n    library = json.loads(library_raw_content)\r\n  File \"C:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\__init__.py\", line 346, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"C:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\decoder.py\", line 340, in decode\r\n    raise JSONDecodeError(\"Extra data\", s, end)\r\njson.decoder.JSONDecodeError: Extra data: line 1 column 4 (char 3)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6953/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6952",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6952/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6952/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6952/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6952",
        "id": 1809804240,
        "node_id": "I_kwDOIWuq585r32vQ",
        "number": 6952,
        "title": "[Question]: How do I load an already existing index created using NebulaGraphStore for querying instead of running KnowledgeGraphIndex.from_documents every time?",
        "user": {
            "login": "sridharac93",
            "id": 59831590,
            "node_id": "MDQ6VXNlcjU5ODMxNTkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59831590?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sridharac93",
            "html_url": "https://github.com/sridharac93",
            "followers_url": "https://api.github.com/users/sridharac93/followers",
            "following_url": "https://api.github.com/users/sridharac93/following{/other_user}",
            "gists_url": "https://api.github.com/users/sridharac93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sridharac93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sridharac93/subscriptions",
            "organizations_url": "https://api.github.com/users/sridharac93/orgs",
            "repos_url": "https://api.github.com/users/sridharac93/repos",
            "events_url": "https://api.github.com/users/sridharac93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sridharac93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-18T12:13:35Z",
        "updated_at": "2023-10-08T23:02:16Z",
        "closed_at": "2023-10-08T23:02:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHow do I load an already existing index created using NebulaGraphStore for querying instead of running KnowledgeGraphIndex.from_documents every time?\r\nIn documentation there is clarification about this and also there is no loader/ reader for nebula graph db\r\nThere is no clear way to use an already loaded index.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6952/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6952/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6951",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6951/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6951/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6951/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6951",
        "id": 1809587454,
        "node_id": "PR_kwDOIWuq585VxIO8",
        "number": 6951,
        "title": "feat: add get_by_id to retrieve row_ids for deletion of documents in...",
        "user": {
            "login": "Daniel199438",
            "id": 16019073,
            "node_id": "MDQ6VXNlcjE2MDE5MDcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/16019073?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Daniel199438",
            "html_url": "https://github.com/Daniel199438",
            "followers_url": "https://api.github.com/users/Daniel199438/followers",
            "following_url": "https://api.github.com/users/Daniel199438/following{/other_user}",
            "gists_url": "https://api.github.com/users/Daniel199438/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Daniel199438/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Daniel199438/subscriptions",
            "organizations_url": "https://api.github.com/users/Daniel199438/orgs",
            "repos_url": "https://api.github.com/users/Daniel199438/repos",
            "events_url": "https://api.github.com/users/Daniel199438/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Daniel199438/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-18T09:52:56Z",
        "updated_at": "2023-09-04T23:11:00Z",
        "closed_at": "2023-09-04T23:10:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6951",
            "html_url": "https://github.com/run-llama/llama_index/pull/6951",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6951.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6951.patch",
            "merged_at": "2023-09-04T23:10:52Z"
        },
        "body": "\u2026supabase vector stores and complete delete function for supabase vector stores\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n6735\r\n\r\n\r\n## Type of Change\r\nadded functionality\r\n\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6951/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6951/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6950",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6950/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6950/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6950/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6950",
        "id": 1809480248,
        "node_id": "PR_kwDOIWuq585VwwlT",
        "number": 6950,
        "title": "chore: fixed escape caused spacing in head and tail",
        "user": {
            "login": "wey-gu",
            "id": 1651790,
            "node_id": "MDQ6VXNlcjE2NTE3OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1651790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wey-gu",
            "html_url": "https://github.com/wey-gu",
            "followers_url": "https://api.github.com/users/wey-gu/followers",
            "following_url": "https://api.github.com/users/wey-gu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wey-gu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wey-gu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wey-gu/subscriptions",
            "organizations_url": "https://api.github.com/users/wey-gu/orgs",
            "repos_url": "https://api.github.com/users/wey-gu/repos",
            "events_url": "https://api.github.com/users/wey-gu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wey-gu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T08:54:45Z",
        "updated_at": "2023-07-19T00:07:08Z",
        "closed_at": "2023-07-18T20:10:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6950",
            "html_url": "https://github.com/run-llama/llama_index/pull/6950",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6950.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6950.patch",
            "merged_at": "2023-07-18T20:10:28Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6950/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6949",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6949/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6949/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6949/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6949",
        "id": 1809149660,
        "node_id": "PR_kwDOIWuq585Vvn2_",
        "number": 6949,
        "title": "Add function calling based sub question generator class, and use it by default if possible",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-18T05:35:27Z",
        "updated_at": "2023-07-20T17:15:23Z",
        "closed_at": "2023-07-20T17:15:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6949",
            "html_url": "https://github.com/run-llama/llama_index/pull/6949",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6949.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6949.patch",
            "merged_at": "2023-07-20T17:15:22Z"
        },
        "body": "# Description\r\n\r\nAdd function calling based sub question generator class, and use it by default if possible\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6949/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6949/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6948",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6948/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6948/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6948/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6948",
        "id": 1809115002,
        "node_id": "I_kwDOIWuq585r1Od6",
        "number": 6948,
        "title": "[Feature Request]: Filter on metadata for SimpleVectorstoreindex",
        "user": {
            "login": "AravAct",
            "id": 122975761,
            "node_id": "U_kgDOB1R2EQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/122975761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AravAct",
            "html_url": "https://github.com/AravAct",
            "followers_url": "https://api.github.com/users/AravAct/followers",
            "following_url": "https://api.github.com/users/AravAct/following{/other_user}",
            "gists_url": "https://api.github.com/users/AravAct/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AravAct/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AravAct/subscriptions",
            "organizations_url": "https://api.github.com/users/AravAct/orgs",
            "repos_url": "https://api.github.com/users/AravAct/repos",
            "events_url": "https://api.github.com/users/AravAct/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AravAct/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-18T05:02:24Z",
        "updated_at": "2023-09-17T18:10:15Z",
        "closed_at": "2023-09-17T18:10:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nBased on the discussion from #6908,  #6813 \r\nFiltering on metadata based for SimpleVectorstore index. It is implemented in pincone vector index. \r\n```\r\ndef query(\r\n        self,\r\n        query: VectorStoreQuery,\r\n        **kwargs: Any,\r\n    ) -> VectorStoreQueryResult:\r\n        \"\"\"Get nodes for response.\"\"\"\r\n        if query.filters is not None:\r\n            raise ValueError(\r\n                \"Metadata filters not implemented for SimpleVectorStore yet.\"\r\n            )\r\n```\r\nMaking it similar to implementation on pinecone vector index\r\n```\r\n if query.filters is not None:\r\n            if \"filter\" in kwargs:\r\n                raise ValueError(\r\n                    \"Cannot specify filter via both query and kwargs. \"\r\n                    \"Use kwargs only for pinecone specific items that are \"\r\n                    \"not supported via the generic query interface.\"\r\n                )\r\n            filter = _to_pinecone_filter(query.filters)\r\n        else:\r\n            filter = kwargs.pop(\"filter\", {})\r\n\r\n```\n\n### Reason\n\nNone\n\n### Value of Feature\n\nMost users use SimpleVectorstore index to build internal tools. Adding this feature will also bring the simple index to same level as pinecone and other indexes",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6948/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6947",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6947/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6947/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6947/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6947",
        "id": 1809074189,
        "node_id": "PR_kwDOIWuq585VvXjj",
        "number": 6947,
        "title": "[version] bump to version 0.7.10",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-18T04:36:53Z",
        "updated_at": "2023-07-18T04:41:36Z",
        "closed_at": "2023-07-18T04:41:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6947",
            "html_url": "https://github.com/run-llama/llama_index/pull/6947",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6947.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6947.patch",
            "merged_at": "2023-07-18T04:41:35Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6947/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6947/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6946",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6946/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6946/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6946/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6946",
        "id": 1808748101,
        "node_id": "I_kwDOIWuq585rz05F",
        "number": 6946,
        "title": "[Question]: Errors with persisting graph as KeywordTableIndex/SimpleKeywordTableIndex ",
        "user": {
            "login": "yuvansharma",
            "id": 79559370,
            "node_id": "MDQ6VXNlcjc5NTU5Mzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/79559370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuvansharma",
            "html_url": "https://github.com/yuvansharma",
            "followers_url": "https://api.github.com/users/yuvansharma/followers",
            "following_url": "https://api.github.com/users/yuvansharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuvansharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuvansharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuvansharma/subscriptions",
            "organizations_url": "https://api.github.com/users/yuvansharma/orgs",
            "repos_url": "https://api.github.com/users/yuvansharma/repos",
            "events_url": "https://api.github.com/users/yuvansharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuvansharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T22:54:45Z",
        "updated_at": "2023-10-23T16:02:45Z",
        "closed_at": "2023-10-23T16:02:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am persisting a SimpleKeywordTableIndex or KeywordTableIndex graph to storage (pushing to an Azure fileshare), and when reloading and querying, it goes into a continuous loop trying to answer the query until I hit an openai RateLimit error. This is not happening with other types of indices like TreeIndex as far as I have tested.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6946/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6946/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6945",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6945/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6945/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6945/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6945",
        "id": 1808732482,
        "node_id": "I_kwDOIWuq585rzxFC",
        "number": 6945,
        "title": "[Feature Request]: Automatically extract fields given a document for structure data (e.g., pandas data frames)",
        "user": {
            "login": "brando90",
            "id": 1855278,
            "node_id": "MDQ6VXNlcjE4NTUyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1855278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brando90",
            "html_url": "https://github.com/brando90",
            "followers_url": "https://api.github.com/users/brando90/followers",
            "following_url": "https://api.github.com/users/brando90/following{/other_user}",
            "gists_url": "https://api.github.com/users/brando90/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brando90/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brando90/subscriptions",
            "organizations_url": "https://api.github.com/users/brando90/orgs",
            "repos_url": "https://api.github.com/users/brando90/repos",
            "events_url": "https://api.github.com/users/brando90/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brando90/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-17T22:38:06Z",
        "updated_at": "2023-11-03T16:03:06Z",
        "closed_at": "2023-11-03T16:03:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nEvaporate is a system that can automatically extract structured data from unstructured or semi-structured documents like HTML pages, PDFs, and text files. Based on the paper, Evaporate takes a collection of documents as input and outputs a structured table with columns corresponding to fields or attributes extracted from the documents.\r\n\r\nHowever, current code forces the user to predefine a set of fields. This shouldn't be the case. \r\n\r\ncode: Evaporate is a system that can automatically extract structured data from unstructured or semi-structured documents like HTML pages, PDFs, and text files. Based on the paper, Evaporate takes a collection of documents as input and outputs a structured table with columns corresponding to fields or attributes extracted from the documents.\n\n### Reason\n\nEvaporate should extract fields automatically if None are given.\n\n### Value of Feature\n\nAutomatic field exraction is crucial for an end to end usage -- and correct full implementation of evaporate. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6945/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6945/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6944",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6944/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6944/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6944/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6944",
        "id": 1808552240,
        "node_id": "PR_kwDOIWuq585Vtlq0",
        "number": 6944,
        "title": "feat(eval): Add semantic similarity / entailment evaluators, QnA gen",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-17T20:20:10Z",
        "updated_at": "2023-10-15T21:37:46Z",
        "closed_at": "2023-10-15T21:37:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6944",
            "html_url": "https://github.com/run-llama/llama_index/pull/6944",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6944.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6944.patch",
            "merged_at": null
        },
        "body": "# Description\r\nEval e2e\r\n\r\nNotebook: https://github.com/jerryjliu/llama_index/blob/369ebcc61e439d220b69ba5b6935f48ceace2240/docs/examples/evaluation/QnA-Gen-Answer-Similarity.ipynb\r\n\r\nThe notebook should render differently in sphinx\r\n![image](https://github.com/jerryjliu/llama_index/assets/9093549/77dd8ac3-aeb2-4daf-a46b-f4e38c67aca2)\r\n\r\n\r\n## Type of Change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n- [X] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6944/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6943",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6943/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6943/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6943/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6943",
        "id": 1808529529,
        "node_id": "PR_kwDOIWuq585Vtgjy",
        "number": 6943,
        "title": "Fixed notebook links",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-17T20:06:13Z",
        "updated_at": "2023-07-19T15:58:07Z",
        "closed_at": "2023-07-19T15:58:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6943",
            "html_url": "https://github.com/run-llama/llama_index/pull/6943",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6943.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6943.patch",
            "merged_at": "2023-07-19T15:58:07Z"
        },
        "body": "# Description\r\n\r\nFixes notebook links for MongoDB and Redis Index stores.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] This change requires a documentation update\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6943/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6942",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6942/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6942/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6942/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6942",
        "id": 1808351473,
        "node_id": "I_kwDOIWuq585ryUDx",
        "number": 6942,
        "title": "[Bug]: Multimodal.ipynb doesn't OCR receipt correctly",
        "user": {
            "login": "ruze00",
            "id": 3300000,
            "node_id": "MDQ6VXNlcjMzMDAwMDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3300000?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ruze00",
            "html_url": "https://github.com/ruze00",
            "followers_url": "https://api.github.com/users/ruze00/followers",
            "following_url": "https://api.github.com/users/ruze00/following{/other_user}",
            "gists_url": "https://api.github.com/users/ruze00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ruze00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ruze00/subscriptions",
            "organizations_url": "https://api.github.com/users/ruze00/orgs",
            "repos_url": "https://api.github.com/users/ruze00/repos",
            "events_url": "https://api.github.com/users/ruze00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ruze00/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T18:31:55Z",
        "updated_at": "2023-10-23T16:02:51Z",
        "closed_at": "2023-10-23T16:02:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen running the Multimodal.ipynb example as is, the 3rd receipt shows McDonald's converted incorrectly to Md Donald's in the `receipt_reader.load_data()` method.  The value of text is:\r\n\r\n```\r\n<s_menu><s_nm> Story</s_nm><s_num> 16725 Stony Platin Rd</s_nm><s_num> Store#:</s_nm><s_num> 3659</s_num><s_price> 700-418-8362</s_price><sep/><s_nm> Welcome to all day breakfast dormist O Md Donald's</s_nm><s_num> 192</s_num><s_price> 192</s_price><sep/><s_nm> QTY ITEM</s_nm><s_num> OTAL</s_num><s_unitprice> 03/10/2018</s_unitprice><s_cnt> 1</s_cnt><s_price> 07:39:12 PM</s_price><sep/><s_nm> Delivery</s_nm><s_cnt> 1</s_cnt><s_price> 0.00</s_price><sep/><s_nm> 10 McNuggets EVM</s_nm><s_cnt> 1</s_cnt><s_price> 10.29</s_price><sep/><s_nm> Barbeque Sauce</s_nm><s_cnt> 1</s_cnt><s_price> 1</s_price><sep/><s_nm> Barbeque Sauce</s_nm><s_num> 1</s_cnt><s_price> 0.40</s_price><sep/><s_nm> L Coke</s_nm><s_cnt> 1</s_cnt><s_price> 0.40</s_price><sep/><s_nm> M French Fries</s_nm><s_cnt> 1</s_cnt><s_price> 3.99</s_price><sep/><s_nm> HM GrChS S-Fry Yog</s_nm><s_cnt> 1</s_cnt><sep/><s_nm> Smoonya</s_nm><s_cnt> 1</s_cnt><sep/><s_nm> HM Apple Juice</s_nm><s_cnt> 1</s_cnt><s_price> 2.89</s_price><sep/><s_nm> Cookies</s_nm><s_cnt> 6</s_cnt><s_price> 2.89</s_price><sep/><s_nm> Choc Chip Cookie</s_nm><s_cnt> 6</s_cnt><s_price> 1.19</s_price><sep/><s_nm> Baked Apple Pie</s_nm><s_cnt> 1</s_cnt><s_price> 3.29</s_price><sep/><s_nm> French Fries</s_nm><s_cnt> 1</s_cnt><s_price> 2.99</s_price><sep/><s_nm> Iced Tea</s_nm><s_cnt> 1</s_cnt><s_price> 2.99</s_price></s_menu><s_sub_total><s_subtotal_price> 25.04</s_subtotal_price><s_tax_price> 1.11</s_tax_price></s_sub_total><s_total><s_total_price> 26.15</s_total_price><s_changeprice> 0.00</s_changeprice><s_creditcardprice> 26.15</s_creditcardprice></s_total>\r\n```\r\n\r\nand `display_response(receipts_response)` subsequently returns:\r\n\r\n```\r\nFinal Response: There is no information provided to answer this question.\r\n```\n\n### Version\n\n0.7.9\n\n### Steps to Reproduce\n\nRun the Multimodal.ipynb notebook.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6942/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6942/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6941",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6941/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6941/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6941/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6941",
        "id": 1808174140,
        "node_id": "I_kwDOIWuq585rxow8",
        "number": 6941,
        "title": "[Feature Request]: ",
        "user": {
            "login": "TSFelg",
            "id": 38079600,
            "node_id": "MDQ6VXNlcjM4MDc5NjAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/38079600?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TSFelg",
            "html_url": "https://github.com/TSFelg",
            "followers_url": "https://api.github.com/users/TSFelg/followers",
            "following_url": "https://api.github.com/users/TSFelg/following{/other_user}",
            "gists_url": "https://api.github.com/users/TSFelg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TSFelg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TSFelg/subscriptions",
            "organizations_url": "https://api.github.com/users/TSFelg/orgs",
            "repos_url": "https://api.github.com/users/TSFelg/repos",
            "events_url": "https://api.github.com/users/TSFelg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TSFelg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-17T16:51:44Z",
        "updated_at": "2023-07-18T08:38:12Z",
        "closed_at": "2023-07-18T08:38:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nThe current implementation makes it possible to evaluate the end-to-end performance of the LLM application, but it would be useful to be able to evaluate the retrieval part of the system in isolation.\r\n\r\nThe process would be similar to the current one, but when generating the Q&A pairs on a per-chunk basis, we would also need to store a reference to the chunks that were used. The idea would be automatically generate [BEIR-compatible datasets](https://huggingface.co/datasets/BeIR/quora) like the following:\r\n\r\n```\r\ncorpus = {\r\n    \"doc1\" : {\r\n        \"title\": \"Albert Einstein\", \r\n        \"text\": \"Albert Einstein was a German-born theoretical physicist. who developed the theory of relativity, \\\r\n                 one of the two pillars of modern physics (alongside quantum mechanics). His work is also known for \\\r\n                 its influence on the philosophy of science. He is best known to the general public for his mass\u00e2\u20ac\u201cenergy \\\r\n                 equivalence formula E = mc2, which has been dubbed 'the world's most famous equation'. He received the 1921 \\\r\n                 Nobel Prize in Physics 'for his services to theoretical physics, and especially for his discovery of the law \\\r\n                 of the photoelectric effect', a pivotal step in the development of quantum theory.\"\r\n        },\r\n    \"doc2\" : {\r\n        \"title\": \"\", # Keep title an empty string if not present\r\n        \"text\": \"Wheat beer is a top-fermented beer which is brewed with a large proportion of wheat relative to the amount of \\\r\n                 malted barley. The two main varieties are German Wei\u00c3\u0178bier and Belgian witbier; other types include Lambic (made\\\r\n                 with wild yeast), Berliner Weisse (a cloudy, sour beer), and Gose (a sour, salty beer).\"\r\n    },\r\n}\r\n\r\nqueries = {\r\n    \"q1\" : \"Who developed the mass-energy equivalence formula?\",\r\n    \"q2\" : \"Which beer is brewed with a large proportion of wheat?\"\r\n}\r\n\r\nqrels = {\r\n    \"q1\" : {\"doc1\": 1},\r\n    \"q2\" : {\"doc2\": 1},\r\n}\r\n```\r\n\r\nA dataset like this could then be used to calculate metrics like recall similarly to the BEIR benchmark.\r\n\r\nIs this possible with the current implementation, or are there plans to support in the future?\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\nIt would allow us to evaluate the retrieval system in isolation and hence disambiguate it from the rest of the pipeline. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6941/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6940",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6940/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6940/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6940/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6940",
        "id": 1807933771,
        "node_id": "PR_kwDOIWuq585VrgZQ",
        "number": 6940,
        "title": "validate presence and format of OpenAI API key on LLM init",
        "user": {
            "login": "tyre",
            "id": 1015847,
            "node_id": "MDQ6VXNlcjEwMTU4NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1015847?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tyre",
            "html_url": "https://github.com/tyre",
            "followers_url": "https://api.github.com/users/tyre/followers",
            "following_url": "https://api.github.com/users/tyre/following{/other_user}",
            "gists_url": "https://api.github.com/users/tyre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tyre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tyre/subscriptions",
            "organizations_url": "https://api.github.com/users/tyre/orgs",
            "repos_url": "https://api.github.com/users/tyre/repos",
            "events_url": "https://api.github.com/users/tyre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tyre/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-17T14:37:48Z",
        "updated_at": "2023-07-22T22:56:11Z",
        "closed_at": "2023-07-22T22:56:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6940",
            "html_url": "https://github.com/run-llama/llama_index/pull/6940",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6940.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6940.patch",
            "merged_at": "2023-07-22T22:56:11Z"
        },
        "body": "# Description\r\n\r\nIn response to #6932, validates the presence and format of an OpenAI API key when initializing `OpenAI()`\r\n\r\nChecks that either the `OPENAI_API_KEY` variable or the `openai.api_key` library value, then validates it according to the expected format.\r\n\r\n## Type of Change\r\n\r\nI don't believe that this is a breaking change exactly, since prior code shouldn't (?) work functionally anyway.\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6940/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6940/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6939",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6939/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6939/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6939/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6939",
        "id": 1807599738,
        "node_id": "PR_kwDOIWuq585VqXEH",
        "number": 6939,
        "title": "Update utils.py",
        "user": {
            "login": "ElmiraGhorbani",
            "id": 23237541,
            "node_id": "MDQ6VXNlcjIzMjM3NTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23237541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ElmiraGhorbani",
            "html_url": "https://github.com/ElmiraGhorbani",
            "followers_url": "https://api.github.com/users/ElmiraGhorbani/followers",
            "following_url": "https://api.github.com/users/ElmiraGhorbani/following{/other_user}",
            "gists_url": "https://api.github.com/users/ElmiraGhorbani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ElmiraGhorbani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ElmiraGhorbani/subscriptions",
            "organizations_url": "https://api.github.com/users/ElmiraGhorbani/orgs",
            "repos_url": "https://api.github.com/users/ElmiraGhorbani/repos",
            "events_url": "https://api.github.com/users/ElmiraGhorbani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ElmiraGhorbani/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-17T11:50:11Z",
        "updated_at": "2023-07-18T08:22:23Z",
        "closed_at": "2023-07-18T08:22:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6939",
            "html_url": "https://github.com/run-llama/llama_index/pull/6939",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6939.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6939.patch",
            "merged_at": null
        },
        "body": "Hi,\r\n\r\nI wanted to share my findings while working on creating an index for the VectorStoreIndex. I encountered an issue with the LLM predictor not functioning correctly when using the GPT-3.5-turbo model. Interestingly, I found that it worked fine when using the text-davinci-003 model.\r\n\r\nI believe that having the ability to choose the model, even through environment variables, would help us avoid such problems. This would provide flexibility and ensure that we can select the most suitable model for our specific use case. just:\r\nfor example : \r\n```export LLM_MODEL=gpt-3.5-turbo ```\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6939/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6939/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6938",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6938/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6938/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6938/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6938",
        "id": 1807324451,
        "node_id": "I_kwDOIWuq585ruZUj",
        "number": 6938,
        "title": "[Question]: KeyError when using VectorStoreIndex.from_documents for text embedding",
        "user": {
            "login": "Ethan-Gu",
            "id": 84122903,
            "node_id": "MDQ6VXNlcjg0MTIyOTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/84122903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ethan-Gu",
            "html_url": "https://github.com/Ethan-Gu",
            "followers_url": "https://api.github.com/users/Ethan-Gu/followers",
            "following_url": "https://api.github.com/users/Ethan-Gu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ethan-Gu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ethan-Gu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ethan-Gu/subscriptions",
            "organizations_url": "https://api.github.com/users/Ethan-Gu/orgs",
            "repos_url": "https://api.github.com/users/Ethan-Gu/repos",
            "events_url": "https://api.github.com/users/Ethan-Gu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ethan-Gu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-17T09:09:40Z",
        "updated_at": "2023-08-17T11:42:22Z",
        "closed_at": "2023-08-17T11:42:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi all,\r\n\r\nI used llama-index(0.7.9) for text embedding. When my document is small, it works fine. When two nodes are got from my documents, there raise a KeyError.\r\n\r\n```\r\ndocuments = SimpleDirectoryReader(input_files=['data/basic_case.json']).load_data()\r\nindex = VectorStoreIndex.from_documents(documents, service_context=service_context)\r\n```\r\nHere is the Error:\r\n```\r\nFile \"/venv/lib/python3.9/site-packages/llama_index/indices/vector_store/base.py\", in _get_node_embedding_results\r\n embedding = id_to_embed_map[node.node_id]\r\nKeyError: '660bc961-55bb-4bd7-8211-880f31423ee5'\r\n```\r\nI print the response from \"gpt-3.5-turbo\", and it seems to return only one element in the response data. Thus only one node id is added to `id_to_embed_map` when using `zip`. \r\n```\r\n        # call embedding model to get embeddings\r\n        (\r\n            result_ids,\r\n            result_embeddings,\r\n        ) = self._service_context.embed_model.get_queued_text_embeddings(show_progress)\r\n        for new_id, text_embedding in zip(result_ids, result_embeddings):\r\n            id_to_embed_map[new_id] = text_embedding\r\n\r\n        results = []\r\n        for node in nodes:\r\n            embedding = id_to_embed_map[node.node_id]\r\n            result = NodeWithEmbedding(node=node, embedding=embedding)\r\n            results.append(result)\r\n        return results\r\n```\r\nIs it because my document is too long? Could you please tell me how to use it correctly?\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6938/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6938/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6937",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6937/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6937/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6937/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6937",
        "id": 1806761565,
        "node_id": "PR_kwDOIWuq585Vne3t",
        "number": 6937,
        "title": "updates for 0.4.0",
        "user": {
            "login": "jeffchuber",
            "id": 891664,
            "node_id": "MDQ6VXNlcjg5MTY2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/891664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffchuber",
            "html_url": "https://github.com/jeffchuber",
            "followers_url": "https://api.github.com/users/jeffchuber/followers",
            "following_url": "https://api.github.com/users/jeffchuber/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffchuber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffchuber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffchuber/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffchuber/orgs",
            "repos_url": "https://api.github.com/users/jeffchuber/repos",
            "events_url": "https://api.github.com/users/jeffchuber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffchuber/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-16T23:53:55Z",
        "updated_at": "2023-07-18T03:53:24Z",
        "closed_at": "2023-07-18T03:53:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6937",
            "html_url": "https://github.com/run-llama/llama_index/pull/6937",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6937.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6937.patch",
            "merged_at": "2023-07-18T03:53:23Z"
        },
        "body": "** This should land Monday the 17th ** \r\n\r\nChroma is upgrading from `0.3.29` to `0.4.0`. `0.4.0` is easier to build, more durable, faster, smaller, and more extensible. This comes with a few changes:\r\n\r\n1. A simplified and improved client setup. Instead of having to remember weird settings, users can just do `EphemeralClient`, `PersistentClient` or `HttpClient` (the underlying direct `Client` implementation is also still accessible)\r\n\r\n2. We migrated data stores away from `duckdb` and `clickhouse`. This changes the api for the `PersistentClient` that used to reference `chroma_db_impl=\"duckdb+parquet\"`. Now we simply set `is_persistent=true`. `is_persistent` is set for you to `true` if you use `PersistentClient`. \r\n\r\n3. Because we migrated away from `duckdb` and `clickhouse` - this also means that users need to migrate their data into the new layout and schema. Chroma is committed to providing extension notification and tooling around any schema and data migrations (for example - this PR!). \r\n\r\nAfter upgrading to `0.4.0` - if users try to access their data that was stored in the previous regime, the system will throw an `Exception` and instruct them how to use the migration assistant to migrate their data. The migration assitant is a pip installable CLI: `pip install chroma_migrate`. And is runnable by calling `chroma_migrate` \r\n\r\n-- TODO ADD here is a short video demonstrating how it works. \r\n\r\nPlease reference the readme at [chroma-core/chroma-migrate](https://github.com/chroma-core/chroma-migrate) to see a full write-up of our philosophy on migrations as well as more details about this particular migration. \r\n\r\nPlease direct any users facing issues upgrading to our Discord channel called [#get-help](https://discord.com/channels/1073293645303795742/1129200523111841883). We have also created a [email listserv](https://airtable.com/shrHaErIs1j9F97BE) to notify developers directly in the future about breaking changes. \r\n\r\nTODO\r\n- [x] Migrated any `duckdb+parquet` strings to the new format\r\n- [ ] Notified users about the breaking change (this PR, other suggestions?)\r\n- [x] Move pypi target away from feature-branch and to `0.4.0` after `0.4.0` is released. \r\n- [x] We need to merge in a more flexible range for `fastapi` to the chroma branch - as is in-progress here https://github.com/chroma-core/chroma/pull/807",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6937/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6937/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6936",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6936/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6936/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6936/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6936",
        "id": 1806739655,
        "node_id": "PR_kwDOIWuq585VnanD",
        "number": 6936,
        "title": "feat(local defaults): Add local default for `llm_predictor` based on `llama.cpp` - `llama-2-13b`",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-16T22:26:48Z",
        "updated_at": "2023-08-08T01:30:24Z",
        "closed_at": "2023-08-08T01:30:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6936",
            "html_url": "https://github.com/run-llama/llama_index/pull/6936",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6936.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6936.patch",
            "merged_at": null
        },
        "body": "# Description\r\nllama.cpp is one of the few models that can run well on laptop at LLM scale (e.g. 13B). \r\n\r\nHere we introduce a default.\r\n\r\nFixes: https://github.com/jerryjliu/llama_index/issues/6720\r\n\r\nNotebook: https://github.com/jerryjliu/llama_index/blob/96b33b46a5283968e6c19e91bd30f702dc1ace4d/docs/examples/node_postprocessor/LocalModelWithPostprocessors.ipynb\r\n\r\nDepends upon: https://github.com/jerryjliu/llama_index/pull/6934 for the example\r\n\r\n## Type of Change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] I have made corresponding changes to the documentation\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6936/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6936/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6935",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6935/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6935/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6935/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6935",
        "id": 1806704966,
        "node_id": "PR_kwDOIWuq585VnT0f",
        "number": 6935,
        "title": "add support for eval with string containing numpy",
        "user": {
            "login": "Nsigma-Bill",
            "id": 73856811,
            "node_id": "MDQ6VXNlcjczODU2ODEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/73856811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nsigma-Bill",
            "html_url": "https://github.com/Nsigma-Bill",
            "followers_url": "https://api.github.com/users/Nsigma-Bill/followers",
            "following_url": "https://api.github.com/users/Nsigma-Bill/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nsigma-Bill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nsigma-Bill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nsigma-Bill/subscriptions",
            "organizations_url": "https://api.github.com/users/Nsigma-Bill/orgs",
            "repos_url": "https://api.github.com/users/Nsigma-Bill/repos",
            "events_url": "https://api.github.com/users/Nsigma-Bill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nsigma-Bill/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-16T20:08:01Z",
        "updated_at": "2023-07-19T16:07:22Z",
        "closed_at": "2023-07-19T16:07:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6935",
            "html_url": "https://github.com/run-llama/llama_index/pull/6935",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6935.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6935.patch",
            "merged_at": "2023-07-19T16:07:21Z"
        },
        "body": "# Description\r\n\r\n* Change: Add `import numpy as np` to the `llama_index/query_engine/pandas_query_engine.py`\r\n* Motivation: support executing query like `eval(\"np.percentile(df[col], [25, 50, 75])\")`\r\n* Origin issue: `NameError: name 'np' is not defined` when the execution query is something like `eval(\"np.percentile(df[col], [25, 50, 75])\")`\r\n* Future: we could also add other modules in addition to `numpy` which are encountered frequently in execution code to scale up the functionality of our query.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] My changes generate no new warnings\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6935/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6935/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6934",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6934/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6934/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6934/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6934",
        "id": 1806702766,
        "node_id": "PR_kwDOIWuq585VnTZF",
        "number": 6934,
        "title": "feat(post processor): add `SentenceTransformerRerank`",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T20:00:00Z",
        "updated_at": "2023-07-19T03:22:52Z",
        "closed_at": "2023-07-19T03:22:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6934",
            "html_url": "https://github.com/run-llama/llama_index/pull/6934",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6934.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6934.patch",
            "merged_at": "2023-07-19T03:22:51Z"
        },
        "body": "# Description\r\n\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/6860\r\n\r\nNotebook: https://github.com/jerryjliu/llama_index/blob/6712033f318c62ba875b25a1c37b99d59248d544/docs/examples/node_postprocessor/SentenceTransformerRerank.ipynb\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6934/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6933",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6933/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6933/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6933/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6933",
        "id": 1806693591,
        "node_id": "I_kwDOIWuq585rr_TX",
        "number": 6933,
        "title": "[Bug]: Logging with DEBUG produces LLM-related output twice",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T19:27:04Z",
        "updated_at": "2023-10-22T16:03:06Z",
        "closed_at": "2023-10-22T16:03:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nSee below\n\n### Version\n\nmain\n\n### Steps to Reproduce\n\n```python\r\nimport logging\r\nimport sys\r\n\r\nlogging.basicConfig(stream=sys.stdout, level=logging.DEBUG)\r\nlogging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\nDEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3688 request_id=72ab2a8a14e22f4db4a492f6161973e6 response_code=200\r\nmessage='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3688 request_id=72ab2a8a14e22f4db4a492f6161973e6 response_code=200\r\nDEBUG:llama_index.llm_predictor.base:\r\nIn this essay, Sam Altman recounts his experiences as a young artist in New York City, his involvement in the startup world, and his eventual founding of Y Combinator. He explains how he and his partners created Y Combinator to provide seed funding and other support to startups, and how their approach was novel in the angel investing world. He also discusses how his experiences at RISD and Interleaf informed his decisions in founding Y Combinator.\r\n\r\nIn this essay, Sam Altman recounts his experiences as a young artist in New York City, his involvement in the startup world, and his eventual founding of Y Combinator. He explains how he and his partners created Y Combinator to provide seed funding and other support to startups, and how their approach was novel in the angel investing world. He also discusses how his experiences at RISD and Interleaf informed his decisions in founding Y Combinator.\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6933/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6933/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6932",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6932/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6932/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6932/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6932",
        "id": 1806680514,
        "node_id": "I_kwDOIWuq585rr8HC",
        "number": 6932,
        "title": "[Bug (UX)]: Open AI key validation should happen earlier",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-16T18:42:11Z",
        "updated_at": "2023-07-23T03:57:02Z",
        "closed_at": "2023-07-23T03:57:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nIn my experience, it takes about 30s for the key validation to take place. I think we should validate on creation of the various classes. (Embedding, LLM)\r\n\r\n### Version\r\n\r\nmaster\r\n\r\n### Steps to Reproduce\r\n\r\nCreate an embedding or LLM without key.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6932/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6932/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6931",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6931/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6931/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6931/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6931",
        "id": 1806676702,
        "node_id": "I_kwDOIWuq585rr7Le",
        "number": 6931,
        "title": "[Feature Request]: Give components canonical names",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T18:28:11Z",
        "updated_at": "2023-10-22T16:03:12Z",
        "closed_at": "2023-10-22T16:03:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nFor the purpose of debug/tracing, it would be nice to give every component a canonical name, for instance derived from a base class and specific details like model name.\r\n\r\nGive all of our components canonical names which will be suitable for tracing as well. So it should be some common method/attribute for each class (llm, embedding, ranker). \r\n\r\nFor instance: `retrieve: hf:sentence-transformers/all-LM-v2, rank: sentence-transformers/ms-marco-TinyBERT-v2`\r\n`llm: openai:text-davinci-003`. This is similar to llm `metadata` attribute, but more generally applied to other components.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6931/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6931/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6930",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6930/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6930/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6930/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6930",
        "id": 1806672196,
        "node_id": "I_kwDOIWuq585rr6FE",
        "number": 6930,
        "title": "[Tracking]: Source-node formatting",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T18:12:48Z",
        "updated_at": "2023-10-22T16:03:17Z",
        "closed_at": "2023-10-22T16:03:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nThere are many types of information one would like to display in source nodes. Including:\r\n1. Most relevant sentences / chunks https://github.com/jerryjliu/llama_index/issues/6836\r\n2. Which post processors were applied to it\r\n   - sentence pruning\r\n   - ranking sequence \r\n     - e.g. `retrieve: hf:sentence-transformers/all-LM-v2, rank: sentence-transformers/ms-marco-TinyBERT-v2`. \r\n     - Relatedly we need to give all of our components canonical names: https://github.com/jerryjliu/llama_index/issues/6931\r\n   - time-relevancy pruning\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6930/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6930/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6929",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6929/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6929/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6929/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6929",
        "id": 1806558516,
        "node_id": "I_kwDOIWuq585rreU0",
        "number": 6929,
        "title": "[Question]: Add chat history / GPTIndexChatMemory",
        "user": {
            "login": "sorrentinopasquale",
            "id": 12128251,
            "node_id": "MDQ6VXNlcjEyMTI4MjUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12128251?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sorrentinopasquale",
            "html_url": "https://github.com/sorrentinopasquale",
            "followers_url": "https://api.github.com/users/sorrentinopasquale/followers",
            "following_url": "https://api.github.com/users/sorrentinopasquale/following{/other_user}",
            "gists_url": "https://api.github.com/users/sorrentinopasquale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sorrentinopasquale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sorrentinopasquale/subscriptions",
            "organizations_url": "https://api.github.com/users/sorrentinopasquale/orgs",
            "repos_url": "https://api.github.com/users/sorrentinopasquale/repos",
            "events_url": "https://api.github.com/users/sorrentinopasquale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sorrentinopasquale/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-16T12:11:56Z",
        "updated_at": "2023-10-24T06:29:46Z",
        "closed_at": "2023-10-24T06:29:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi all,\r\nI upgraded a couple of weeks ago to llama-index==0.6.37 and I would now like to implement the chat history, can you kindly support me? Do you have any reference or can lead me to docs? I saw some examples but they use OpenAIChat /agent_executor\r\n\r\nThanks\r\n\r\n`      documents = SimpleDirectoryReader(folder_name).load_data()\r\n\r\n        llm_predictor = LLMPredictor(\r\n            llm=OpenAI(temperature=0, model_name=ai_model, max_tokens=512)\r\n        )\r\n        service_context = ServiceContext.from_defaults(llm_predictor=llm_predictor)\r\n\r\n        # Call VectorStoreIndex.load_from_disk\r\n        index = VectorStoreIndex.from_documents(\r\n            documents, service_context=service_context\r\n        )\r\n        query_engine = index.as_query_engine()\r\n        results = query_engine.query(prompt)\r\n        # Query the index\r\n        message_to_send = results.response`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6929/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6929/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6928",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6928/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6928/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6928/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6928",
        "id": 1806542570,
        "node_id": "I_kwDOIWuq585rrabq",
        "number": 6928,
        "title": "Different Results between direct Azure Open API call vs through llamaindex Interface",
        "user": {
            "login": "BharahthyKannan",
            "id": 17752392,
            "node_id": "MDQ6VXNlcjE3NzUyMzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/17752392?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BharahthyKannan",
            "html_url": "https://github.com/BharahthyKannan",
            "followers_url": "https://api.github.com/users/BharahthyKannan/followers",
            "following_url": "https://api.github.com/users/BharahthyKannan/following{/other_user}",
            "gists_url": "https://api.github.com/users/BharahthyKannan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BharahthyKannan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BharahthyKannan/subscriptions",
            "organizations_url": "https://api.github.com/users/BharahthyKannan/orgs",
            "repos_url": "https://api.github.com/users/BharahthyKannan/repos",
            "events_url": "https://api.github.com/users/BharahthyKannan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BharahthyKannan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T11:14:59Z",
        "updated_at": "2023-10-22T16:03:21Z",
        "closed_at": "2023-10-22T16:03:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nInput CSV\r\n\r\nMyUtilisation, Q1FY22,Q2FY22,Q3FY22,Q4FY22,Q1FY23,Q2FY23,Q3FY23,Q4FY23,Q1FY24\r\nproject1,17.20%,16.10%,15.60%,15.00%,14.70%,14.70%,14.90%,14,90%\r\nproject2,82.80%,83.90%,84.40%,85.00%,85.30%,85.30%,85.10%,85.10%\r\n\r\n**Direct API Call:**\r\n\r\nresponse = openai.ChatCompletion.create(\r\n  engine=\"gpt-35-turbo\",\r\n  messages = [{\"role\": \"user\", \"content\": \"Context information is below.\\\\n---------------------\\\\nMyUtilisation,  Q1FY22, Q2FY22, Q3FY22, Q4FY22, Q1FY23, Q2FY23, Q3FY23, Q4FY23, Q1FY24\\\\nproject1, 17.20%, 16.10%, 15.60%, 15.00%, 14.70%, 14.70%, 14.90%, 14, 90%\\\\nproject2, 82.80%, 83.90%, 84.40%, 85.00%, 85.30%, 85.30%, 85.10%, 85.10%\\\\n---------------------\\\\nGiven the context information and not prior knowledge, answer the question: What is MyUtilisation of Q3FY22?\\\\n\"}],\r\n  temperature=0.0,\r\n  max_tokens=800,\r\n  top_p=0.95,\r\n  frequency_penalty=0,\r\n  presence_penalty=0,\r\n  stop=None)\r\n\r\n\r\nprint(response)\r\n\r\nResponse: \r\n{\r\n  \"choices\": [\r\n    {\r\n      \"finish_reason\": \"stop\",\r\n      \"index\": 0,\r\n      \"message\": {\r\n        \"content\": **\"The MyUtilisation of Q3FY22 is 15.60%.\",**\r\n        \"role\": \"assistant\"\r\n      }\r\n    }\r\n  ]\r\n\r\n**Through Llama interface:** \r\n\r\nUsing Azure openAi embeddings, retrieved the context and connection made to Azureopenai Chat/Completion api \r\n\r\napi_version=2023-05-15 data='{\"messages\": [{\"role\": \"user\", \"content\": \"Context information is below.\\\\n---------------------\\\\nMyUtilisation,  Q1FY22, Q2FY22, Q3FY22, Q4FY22, Q1FY23, Q2FY23, Q3FY23, Q4FY23, Q1FY24\\\\nproject1, 17.20%, 16.10%, 15.60%, 15.00%, 14.70%, 14.70%, 14.90%, 14, 90%\\\\nproject2, 82.80%, 83.90%, 84.40%, 85.00%, 85.30%, 85.30%, 85.10%, 85.10%\\\\n---------------------\\\\nGiven the context information and not prior knowledge, answer the question: What is MyUtilisation of Q4FY22?\\\\n\"}], \"model\": \"gpt-3.5-turbo\", \"max_tokens\": null, \"stream\": false, \"n\": 1, \"temperature\": 0.0}' message='Post details'\r\n\r\n\r\nResponse: DEBUG:llama_index.llm_predictor.base:The MyUtilisation of Q4FY22 is not provided in the given context information.\r\nThe MyUtilisation of Q4FY22 is not provided in the given context information.\r\nThe MyUtilisation of Q4FY22 is not provided in the given context information.\r\n\r\n\r\nIs this expected behavior? ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6928/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6927",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6927/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6927/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6927/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6927",
        "id": 1806426000,
        "node_id": "PR_kwDOIWuq585VmdJI",
        "number": 6927,
        "title": "[version] 0.7.9",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-16T04:36:45Z",
        "updated_at": "2023-07-16T04:37:09Z",
        "closed_at": "2023-07-16T04:37:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6927",
            "html_url": "https://github.com/run-llama/llama_index/pull/6927",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6927.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6927.patch",
            "merged_at": "2023-07-16T04:37:08Z"
        },
        "body": "# Description\r\n\r\nBump version to 0.7.9\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6927/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6927/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6926",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6926/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6926/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6926/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6926",
        "id": 1806385809,
        "node_id": "PR_kwDOIWuq585VmVrH",
        "number": 6926,
        "title": "Update llama_index/indices/base.py",
        "user": {
            "login": "kevinlu1248",
            "id": 26889185,
            "node_id": "MDQ6VXNlcjI2ODg5MTg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/26889185?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinlu1248",
            "html_url": "https://github.com/kevinlu1248",
            "followers_url": "https://api.github.com/users/kevinlu1248/followers",
            "following_url": "https://api.github.com/users/kevinlu1248/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinlu1248/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinlu1248/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinlu1248/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinlu1248/orgs",
            "repos_url": "https://api.github.com/users/kevinlu1248/repos",
            "events_url": "https://api.github.com/users/kevinlu1248/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinlu1248/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-16T00:54:33Z",
        "updated_at": "2023-07-19T04:38:30Z",
        "closed_at": "2023-07-16T04:32:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6926",
            "html_url": "https://github.com/run-llama/llama_index/pull/6926",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6926.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6926.patch",
            "merged_at": null
        },
        "body": "This PR is copied from https://github.com/kevinlu1248/llama_index/pull/10 which was generated by Sweep, an AI junior dev.\r\n\r\n# Description\r\n\r\nThis PR adds support for the Time-Weighted Rerank postprocessor during the document insertion process in the LlamaIndex repository. The Time-Weighted Rerank postprocessor allows for better ranking of documents based on their recency.\r\n\r\nChanges Made:\r\n- Modified the `insert` and `insert_nodes` methods in `llama_index/indices/base.py` to apply the Time-Weighted Rerank postprocessor during the document insertion process.\r\n- Updated the `_add_nodes_to_index` and `_async_add_nodes_to_index` methods in `llama_index/indices/vector_store/base.py` to properly store the document's metadata (including its timestamp) in the index.\r\n\r\nFixes #6914 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6926/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6926/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6925",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6925/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6925/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6925/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6925",
        "id": 1806344306,
        "node_id": "I_kwDOIWuq585rqqBy",
        "number": 6925,
        "title": "[Research/Advanced]: Automated/Unsupervised Fine-Tuning of Retrieval",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-15T21:45:54Z",
        "updated_at": "2023-10-24T16:02:44Z",
        "closed_at": "2023-10-24T16:02:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\n- [Augmentation-Adapted Retriever Improves Generalization of Language\r\nModels as Generic Plug-In](https://aclanthology.org/2023.acl-long.136.pdf) shows that one can use a cheap source LM (e.g. Flan-T5-Base - 250M params) to pre-train a retriever (e2e) on a task (MSMARCO) separate to the test-time task. We can look into some of the methodology to see how this could be applied to: 1. fine tuning retrieval on cheap source LM on user's dataset. 2. fine tuning retrieval with the target model on user's dataset (may not be possible as this seems to require access to attention scores on the doc tokens). But it is highly reminiscent of utilizing relevancy scores from reranker to fine-tune.\r\n- [Unsupervised Domain Adaptation](https://arxiv.org/abs/2303.00807)\r\n- [Some other MSFT paper on RAG](https://arxiv.org/pdf/2307.07164.pdf)\r\n\r\n### Resources\r\n1. [PyTorch Metric Learning](https://kevinmusgrave.github.io/pytorch-metric-learning/)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6925/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6925/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6924",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6924/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6924/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6924/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6924",
        "id": 1806339016,
        "node_id": "PR_kwDOIWuq585VmM84",
        "number": 6924,
        "title": "Don't require setting `streaming` in chat engine",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-15T21:35:06Z",
        "updated_at": "2023-07-15T23:19:16Z",
        "closed_at": "2023-07-15T23:19:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6924",
            "html_url": "https://github.com/run-llama/llama_index/pull/6924",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6924.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6924.patch",
            "merged_at": "2023-07-15T23:19:15Z"
        },
        "body": "# Description\r\n\r\nWe are moving towards using separate methods for streaming vs. non-streaming endpoints.\r\nRight now query engine is still class attribute to toggle between streaming vs. non-streaming.\r\n\r\nBefore we fully update query engine to expose `stream_query`, right now we need a way to automatically turn on streaming in the condense question chat engine.\r\nThis adds a minor hack to do so.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6924/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6924/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6923",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6923/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6923/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6923/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6923",
        "id": 1806338908,
        "node_id": "I_kwDOIWuq585rqotc",
        "number": 6923,
        "title": "GPTIndexChatMemory doesn't work as expected with langchain and the agent doesn't use the chat history[Bug]: ",
        "user": {
            "login": "Eng-ZeyadTarek",
            "id": 61242145,
            "node_id": "MDQ6VXNlcjYxMjQyMTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/61242145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Eng-ZeyadTarek",
            "html_url": "https://github.com/Eng-ZeyadTarek",
            "followers_url": "https://api.github.com/users/Eng-ZeyadTarek/followers",
            "following_url": "https://api.github.com/users/Eng-ZeyadTarek/following{/other_user}",
            "gists_url": "https://api.github.com/users/Eng-ZeyadTarek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Eng-ZeyadTarek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Eng-ZeyadTarek/subscriptions",
            "organizations_url": "https://api.github.com/users/Eng-ZeyadTarek/orgs",
            "repos_url": "https://api.github.com/users/Eng-ZeyadTarek/repos",
            "events_url": "https://api.github.com/users/Eng-ZeyadTarek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Eng-ZeyadTarek/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-15T21:34:29Z",
        "updated_at": "2023-10-21T16:03:06Z",
        "closed_at": "2023-10-21T16:03:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nThe code works without any errors but when I'm trying to use GPTIndexChatMemory to embed my conversation and store the whole of it, this feature (memory) doesn't work anymore, and this is my code, also I want to save the memory in a folder with its embeddings but I can't\r\n\r\n\r\n\r\n### Version\r\n\r\nlangchain version: '0.0.230'\r\nllama-index version: '0.7.4'\r\npython: 3.10.11\r\n\r\n### My Code\r\n\r\n```\r\nfrom llama_index.langchain_helpers.memory_wrapper import GPTIndexChatMemory, GPTIndexMemory\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.agents import AgentType\r\nfrom llama_index import  ServiceContext\r\nfrom llama_index import GPTListIndex\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\n\r\nllm = ChatOpenAI(temperature=0)\r\nembed_model = LangchainEmbedding(OpenAIEmbeddings())\r\nservice_context = ServiceContext.from_defaults(embed_model=embed_model)\r\nindex = GPTListIndex([], service_context=service_context)\r\nmemory = GPTIndexChatMemory(\r\n    index=index,\r\n    memory_key=\"chat_history\",\r\n    query_kwargs={\"response_mode\": \"compact\", \"service_context\":service_context},\r\n    input_key=\"input\",\r\n    return_messages=True,\r\n    return_source= True\r\n)\r\n\r\nagent_executor = initialize_agent(\r\n    [], llm, verbose = True,agent=AgentType.CONVERSATIONAL_REACT_DESCRIPTION, memory=memory, handle_parsing_errors=\"Check your output and make sure it conforms!\"\r\n)\r\n\r\nagent_executor.agent.llm_chain.prompt.template = \"\"\"Assistant is a large language model trained by OpenAI.\r\n\r\nAssistant is designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, Assistant is able to generate human-like text based on the input it receives, allowing it to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\r\n\r\nAssistant is constantly learning and improving, and its capabilities are constantly evolving. It is able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. Additionally, Assistant is able to generate its own text based on the input it receives, allowing it to engage in discussions and provide explanations and descriptions on a wide range of topics.\r\n\r\nOverall, Assistant is a powerful tool that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether you need help with a specific question or just want to have a conversation about a particular topic, Assistant is here to assist.\r\n\r\n\r\nplease use the following format:\r\n\r\n\r\nAI: [your response here]\r\n\r\n\r\nBegin!\r\n\r\nPrevious conversation history:\r\n{chat_history}\r\n\r\nNew input: {input}\r\n{agent_scratchpad}\"\"\"\r\n\r\n\r\nprint(agent_executor.run(\"my name is zeyad\"))\r\n\r\n```\r\n\r\n**this would be the output for the first print statement.**\r\n\r\n**AI: Hello Zeyad! How can I assist you today?**\r\n\r\n```print(\"Do you know my name?\")```\r\n\r\n**this would be the output for the first print statement (unexcepted output), one week ago it was working fine without any problems.**\r\n\r\n**AI: As an AI language model, I don't have access to personal information unless you provide it to me. Therefore, I don't know your name unless you tell me. Is there anything specific you would like assistance with?**\r\n\r\n**Expected behavior**\r\nthe expected output for the second statement must be:\r\n\r\n**AI: Yes, you told me before that your name is Zeyad.**\r\n\r\n**I really appreciate any help you can provide.**\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6923/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6923/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6922",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6922/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6922/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6922/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6922",
        "id": 1806311180,
        "node_id": "PR_kwDOIWuq585VmHVo",
        "number": 6922,
        "title": "Fix Streaming is not enabled in  usage_pattern.md of chat_engines",
        "user": {
            "login": "tkreuder",
            "id": 385110,
            "node_id": "MDQ6VXNlcjM4NTExMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/385110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tkreuder",
            "html_url": "https://github.com/tkreuder",
            "followers_url": "https://api.github.com/users/tkreuder/followers",
            "following_url": "https://api.github.com/users/tkreuder/following{/other_user}",
            "gists_url": "https://api.github.com/users/tkreuder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tkreuder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tkreuder/subscriptions",
            "organizations_url": "https://api.github.com/users/tkreuder/orgs",
            "repos_url": "https://api.github.com/users/tkreuder/repos",
            "events_url": "https://api.github.com/users/tkreuder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tkreuder/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-15T20:07:49Z",
        "updated_at": "2023-07-15T21:06:52Z",
        "closed_at": "2023-07-15T21:06:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6922",
            "html_url": "https://github.com/run-llama/llama_index/pull/6922",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6922.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6922.patch",
            "merged_at": "2023-07-15T21:06:52Z"
        },
        "body": "Hi,\r\nI found an issue, while trying chat_engine, like described in the docs.  Thanks everyone for this awesome project :) \r\n```  \r\nchat_engine/condense_question.py:176, in CondenseQuestionChatEngine.stream_chat(self, message, chat_history)\r\n    168     response = StreamingResponse(\r\n    169         response_gen_with_chat_history(\r\n    170             message, chat_history, response.response_gen\r\n   (...)\r\n    173         metadata=response.metadata,\r\n    174     )\r\n    175 else:\r\n--> 176     raise ValueError(\"Streaming is not enabled. Please use chat() instead.\")\r\n    177 return response\r\n\r\nValueError: Streaming is not enabled. Please use chat() instead.\r\n```\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6922/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6922/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6921",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6921/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6921/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6921/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6921",
        "id": 1806077333,
        "node_id": "PR_kwDOIWuq585VlWYi",
        "number": 6921,
        "title": "Adding support for encoding argument on SimpleDirectoryReader",
        "user": {
            "login": "joaomdmoura",
            "id": 667063,
            "node_id": "MDQ6VXNlcjY2NzA2Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/667063?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joaomdmoura",
            "html_url": "https://github.com/joaomdmoura",
            "followers_url": "https://api.github.com/users/joaomdmoura/followers",
            "following_url": "https://api.github.com/users/joaomdmoura/following{/other_user}",
            "gists_url": "https://api.github.com/users/joaomdmoura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joaomdmoura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joaomdmoura/subscriptions",
            "organizations_url": "https://api.github.com/users/joaomdmoura/orgs",
            "repos_url": "https://api.github.com/users/joaomdmoura/repos",
            "events_url": "https://api.github.com/users/joaomdmoura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joaomdmoura/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-15T13:20:42Z",
        "updated_at": "2023-07-15T20:29:08Z",
        "closed_at": "2023-07-15T20:29:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6921",
            "html_url": "https://github.com/run-llama/llama_index/pull/6921",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6921.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6921.patch",
            "merged_at": "2023-07-15T20:29:07Z"
        },
        "body": "# Description\r\n\r\nThis allows users to pass on the encoding they want to use to open the files in a given directory.\r\nHaving this would remove the need to convert files into a specific encoding to get them to work and also avoid potentially unnoticed data loss by loading documents with the wrong encoding.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6921/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6921/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6920",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6920/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6920/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6920/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6920",
        "id": 1805971137,
        "node_id": "I_kwDOIWuq585rpO7B",
        "number": 6920,
        "title": "[Question]: AuthenticationError when using OpenAI Embedding API in llama_index",
        "user": {
            "login": "Abdulk084",
            "id": 31172014,
            "node_id": "MDQ6VXNlcjMxMTcyMDE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/31172014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Abdulk084",
            "html_url": "https://github.com/Abdulk084",
            "followers_url": "https://api.github.com/users/Abdulk084/followers",
            "following_url": "https://api.github.com/users/Abdulk084/following{/other_user}",
            "gists_url": "https://api.github.com/users/Abdulk084/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Abdulk084/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Abdulk084/subscriptions",
            "organizations_url": "https://api.github.com/users/Abdulk084/orgs",
            "repos_url": "https://api.github.com/users/Abdulk084/repos",
            "events_url": "https://api.github.com/users/Abdulk084/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Abdulk084/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-15T08:31:21Z",
        "updated_at": "2023-10-24T06:29:39Z",
        "closed_at": "2023-10-24T06:29:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [x] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI'm encountering an AuthenticationError when trying to generate embeddings using the OpenAI API in my application that uses the llama_index library. Here's a snippet of the code where the issue occurs:\r\n\r\n```\r\nfrom flask import Flask, render_template, request, jsonify\r\nfrom llama_index import SimpleDirectoryReader, VectorStoreIndex, StorageContext\r\nfrom llama_index.vector_stores import PineconeVectorStore\r\nimport pinecone\r\nimport re\r\nimport openai\r\nimport time\r\nos.environ[\"OPENAI_API_KEY\"] = 'xxx'\r\npinecone.init(api_key=\"xxxx\", environment=\"xxx\")\r\nindex = pinecone.Index(\"index-name\")\r\nvector_store = PineconeVectorStore(pinecone_index=index)\r\nloaded_index = VectorStoreIndex.from_vector_store(vector_store=vector_store)\r\n\r\nquery_engine = loaded_index.as_query_engine(similarity_top_k=3)\r\nresponse = query_engine.query(\"walking,standing\")\r\n```\r\nAnd the error message I get is:\r\n\r\n```\r\nAuthenticationError Traceback (most recent call last)\r\n...\r\nRetryError: RetryError[<Future at 0x1682020d0 state=finished raised AuthenticationError>]\r\n```\r\n\r\nThe error is raised when trying to create an embedding using the OpenAI's service, but it fails due to an authentication issue. It seems like the tenacity library is trying to retry the operation, but it fails every time due to the same error.\r\n\r\nAny help on how to resolve this would be much appreciated.\r\n\r\n\r\n```\r\n/venv/lib/python3.11/site-packages/openai/api_resources/embedding.py:33, in Embedding.create(cls, *args, **kwargs)\r\n     32 try:\r\n---> 33     response = super().create(*args, **kwargs)\r\n     35     # If a user specifies base64, we'll just return the encoded string.\r\n     36     # This is only for the default case.\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6920/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6920/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6919",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6919/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6919/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6919/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6919",
        "id": 1805965742,
        "node_id": "I_kwDOIWuq585rpNmu",
        "number": 6919,
        "title": "[Feature Request]: Knowledge-Intensive Benchmark - KILT",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-15T08:14:21Z",
        "updated_at": "2023-10-21T16:03:11Z",
        "closed_at": "2023-10-21T16:03:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\n\r\nLet's integrate the appropriate benchmarks from [KILT](https://github.com/facebookresearch/KILT/). We can start with the more critical ones and add more as we go along.\r\n\r\nA paper from 2022 with [Re2G - Retrieve, Rerank, Generate](https://arxiv.org/abs/2207.06300), shows good performance on this benchmark.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6919/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6919/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6918",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6918/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6918/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6918/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6918",
        "id": 1805957792,
        "node_id": "I_kwDOIWuq585rpLqg",
        "number": 6918,
        "title": "[Feature Request]: Arize Tracing / Callback Handler",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-15T07:49:39Z",
        "updated_at": "2023-10-21T16:03:17Z",
        "closed_at": "2023-10-21T16:03:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nAdd tracing integrations with https://arize.com/\r\n\r\nImplementor: @axiomofjoy\r\nPR: https://github.com/jerryjliu/llama_index/pull/6853",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6918/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6918/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6917",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6917/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6917/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6917/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6917",
        "id": 1805807958,
        "node_id": "PR_kwDOIWuq585Vkf6I",
        "number": 6917,
        "title": "Minor missing changes ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-15T01:45:54Z",
        "updated_at": "2023-07-15T01:46:19Z",
        "closed_at": "2023-07-15T01:46:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6917",
            "html_url": "https://github.com/run-llama/llama_index/pull/6917",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6917.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6917.patch",
            "merged_at": "2023-07-15T01:46:18Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6917/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6917/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6916",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6916/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6916/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6916/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6916",
        "id": 1805765457,
        "node_id": "PR_kwDOIWuq585VkWuw",
        "number": 6916,
        "title": "Add docs for simple directory reader",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-15T00:44:17Z",
        "updated_at": "2023-07-15T01:18:34Z",
        "closed_at": "2023-07-15T01:18:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6916",
            "html_url": "https://github.com/run-llama/llama_index/pull/6916",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6916.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6916.patch",
            "merged_at": "2023-07-15T01:18:33Z"
        },
        "body": "# Description\r\n\r\nAdd docs for simple directory reader",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6916/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6916/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6915",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6915/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6915/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6915/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6915",
        "id": 1805759290,
        "node_id": "I_kwDOIWuq585robM6",
        "number": 6915,
        "title": "[Bug]: concatenate is not actually an argument ",
        "user": {
            "login": "brando90",
            "id": 1855278,
            "node_id": "MDQ6VXNlcjE4NTUyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1855278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brando90",
            "html_url": "https://github.com/brando90",
            "followers_url": "https://api.github.com/users/brando90/followers",
            "following_url": "https://api.github.com/users/brando90/following{/other_user}",
            "gists_url": "https://api.github.com/users/brando90/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brando90/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brando90/subscriptions",
            "organizations_url": "https://api.github.com/users/brando90/orgs",
            "repos_url": "https://api.github.com/users/brando90/repos",
            "events_url": "https://api.github.com/users/brando90/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brando90/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-15T00:35:04Z",
        "updated_at": "2023-07-15T01:35:13Z",
        "closed_at": "2023-07-15T01:35:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\ndocs say concatenate is an arg. It's not + that variable name is never use in the file except in the doc strings:\r\n```\r\n    def load_data(self) -> List[Document]:\r\n        \"\"\"Load data from the input directory.\r\n\r\n        Args:\r\n            concatenate (bool): whether to concatenate all text docs into a single doc.\r\n                If set to True, file metadata is ignored. False by default.\r\n                This setting does not apply to image docs (always one doc per image).\r\n\r\n        Returns:\r\n            List[Document]: A list of documents.\r\n\r\n        \"\"\"\r\n        documents = []\r\n        for input_file in self.input_files:\r\n            metadata: Optional[dict] = None\r\n            if self.file_metadata is not None:\r\n                metadata = self.file_metadata(str(input_file))\r\n\r\n            file_suffix = input_file.suffix.lower()\r\n            if (\r\n                file_suffix in self.supported_suffix\r\n                or file_suffix in self.file_extractor\r\n            ):\r\n                # use file readers\r\n                if file_suffix not in self.file_extractor:\r\n                    # instantiate file reader if not already\r\n                    reader_cls = DEFAULT_FILE_READER_CLS[file_suffix]\r\n                    self.file_extractor[file_suffix] = reader_cls()\r\n                reader = self.file_extractor[file_suffix]\r\n                docs = reader.load_data(input_file, extra_info=metadata)\r\n\r\n                # iterate over docs if needed\r\n                if self.filename_as_id:\r\n                    for i, doc in enumerate(docs):\r\n                        doc.id_ = f\"{str(input_file)}_part_{i}\"\r\n\r\n                documents.extend(docs)\r\n            else:\r\n                # do standard read\r\n                with open(input_file, \"r\", errors=self.errors, encoding=\"utf8\") as f:\r\n                    data = f.read()\r\n\r\n                doc = Document(text=data, metadata=metadata or {})\r\n                if self.filename_as_id:\r\n                    doc.id_ = str(input_file)\r\n\r\n                documents.append(doc)\r\n\r\n        return documents\r\n        ```\r\n        \r\n        \r\nfile/base.py\n\n### Version\n\n0.7.8\n\n### Steps to Reproduce\n\nhttps://gpt-index.readthedocs.io/en/latest/examples/output_parsing/evaporate_program.html\r\n\r\nload any data \r\n\r\n```\r\n    path2pdf: Path = Path('~/data/maf/textbooks/sipser1.3.pdf').expanduser()\r\n\r\n    # -- pdf to text\r\n    # - read doc into one text file\r\n    doc = SimpleDirectoryReader(path2pdf).load_data()\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\nsays no concatenate arg exists.\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6915/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6915/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6914",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6914/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6914/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6914/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6914",
        "id": 1805755882,
        "node_id": "I_kwDOIWuq585roaXq",
        "number": 6914,
        "title": "Document Insertion with time-weighted postprocessor",
        "user": {
            "login": "adiagarwalrock",
            "id": 41755080,
            "node_id": "MDQ6VXNlcjQxNzU1MDgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/41755080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adiagarwalrock",
            "html_url": "https://github.com/adiagarwalrock",
            "followers_url": "https://api.github.com/users/adiagarwalrock/followers",
            "following_url": "https://api.github.com/users/adiagarwalrock/following{/other_user}",
            "gists_url": "https://api.github.com/users/adiagarwalrock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adiagarwalrock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adiagarwalrock/subscriptions",
            "organizations_url": "https://api.github.com/users/adiagarwalrock/orgs",
            "repos_url": "https://api.github.com/users/adiagarwalrock/repos",
            "events_url": "https://api.github.com/users/adiagarwalrock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adiagarwalrock/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-15T00:30:05Z",
        "updated_at": "2023-10-22T16:03:32Z",
        "closed_at": "2023-10-22T16:03:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI want to insert a document (initially text like pdf, docx, etc.) into an existing index w/ [Time-Weighted Rerank](https://gpt-index.readthedocs.io/en/latest/examples/node_postprocessor/TimeWeightedPostprocessorDemo.html).\r\n\r\nThe index is already created with metadata for time-stamping, How can the insertion be conducted for any new data(docs) to insert in the existing one.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6914/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6913",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6913/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6913/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6913/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6913",
        "id": 1805582181,
        "node_id": "PR_kwDOIWuq585Vjtwd",
        "number": 6913,
        "title": "Allow ComposableGraphQueryEngine to customize similarity_top_k if the\u2026",
        "user": {
            "login": "junying1",
            "id": 24239233,
            "node_id": "MDQ6VXNlcjI0MjM5MjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24239233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/junying1",
            "html_url": "https://github.com/junying1",
            "followers_url": "https://api.github.com/users/junying1/followers",
            "following_url": "https://api.github.com/users/junying1/following{/other_user}",
            "gists_url": "https://api.github.com/users/junying1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/junying1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/junying1/subscriptions",
            "organizations_url": "https://api.github.com/users/junying1/orgs",
            "repos_url": "https://api.github.com/users/junying1/repos",
            "events_url": "https://api.github.com/users/junying1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/junying1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-14T21:08:39Z",
        "updated_at": "2023-07-21T02:07:16Z",
        "closed_at": "2023-07-21T01:10:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6913",
            "html_url": "https://github.com/run-llama/llama_index/pull/6913",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6913.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6913.patch",
            "merged_at": null
        },
        "body": "\u2026 underlying index is a VectorStoreIndex.\r\n\r\n# Description\r\n\r\nAdd similarity_top_k to ComposableGraphQueryEngine constructor. Pass the value to the underlying index.as_query_engine call if the index is a VectorStoreIndex.\r\n\r\nIt could be easily extended to other underlying index types that support similarity_top_k.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6913/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6913/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6912",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6912/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6912/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6912/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6912",
        "id": 1805228417,
        "node_id": "PR_kwDOIWuq585ViePd",
        "number": 6912,
        "title": "improve legacy fallback for existing vector dbs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-14T17:27:51Z",
        "updated_at": "2023-07-14T17:48:25Z",
        "closed_at": "2023-07-14T17:48:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6912",
            "html_url": "https://github.com/run-llama/llama_index/pull/6912",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6912.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6912.patch",
            "merged_at": "2023-07-14T17:48:24Z"
        },
        "body": "# Description\r\n\r\nExisting pinecone vector dbs may not have metadata, so we should fallback to an empty dict\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/6910\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/6898\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6912/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6912/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6911",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6911/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6911/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6911/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6911",
        "id": 1805167073,
        "node_id": "PR_kwDOIWuq585ViQpH",
        "number": 6911,
        "title": "add model name to langchain metadata, pass retriever service context to response synthesizer",
        "user": {
            "login": "tyre",
            "id": 1015847,
            "node_id": "MDQ6VXNlcjEwMTU4NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1015847?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tyre",
            "html_url": "https://github.com/tyre",
            "followers_url": "https://api.github.com/users/tyre/followers",
            "following_url": "https://api.github.com/users/tyre/following{/other_user}",
            "gists_url": "https://api.github.com/users/tyre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tyre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tyre/subscriptions",
            "organizations_url": "https://api.github.com/users/tyre/orgs",
            "repos_url": "https://api.github.com/users/tyre/repos",
            "events_url": "https://api.github.com/users/tyre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tyre/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-14T16:44:44Z",
        "updated_at": "2023-07-19T21:19:04Z",
        "closed_at": "2023-07-19T16:25:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6911",
            "html_url": "https://github.com/run-llama/llama_index/pull/6911",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6911.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6911.patch",
            "merged_at": "2023-07-19T16:25:16Z"
        },
        "body": "# Description\r\n\r\nFixes #6620 and #6510 \r\nAdds `model_name` to `LLMMetadata` that is automatically set when possible.\r\n\r\n**RetrieverQueryEngine service_context param**\r\nThere are two issues here. In #6510, the service context is not being propagated when `as_query_engine` is called on an index. While it attempts to add a `service_context` argument to the call to `RetrieverQueryEngine.from_args`, `RetrieverQueryEngine.__init__` doesn't actually support a `service_context` parameter.\r\n\r\nSo this adds a `service_context` parameter to `RetrieverQueryEngine.__init__`, which fixes this.\r\n\r\n**RetrieverQueryEngine fallback to retriever's service context**\r\nFor #6630, `RetrieverQueryEngine` was not passed any explicit `service_context`. Its only required parameter is a `retriever`. For these cases, we can fall back to that retriever's service context. The `BaseReceiver` will try to calculate a service context since these can be stored directly or on the index depending on the type.\r\n\r\n**Add model_name to LLMMetadata**\r\nOne of the challenges in testing this was that the model name for an instance of an LLM isn't easily accessible. When users were trying to debug their code, it's non-obvious that the wrong model is being used.\r\n\r\nTo simplify this, I've added a `model_name` to `LLMMetadata` and we'll automatically set it when possible.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6911/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6911/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6910",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6910/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6910/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6910/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6910",
        "id": 1805146399,
        "node_id": "I_kwDOIWuq585rmFkf",
        "number": 6910,
        "title": "[Bug]: AttributeError: 'NoneType' object has no attribute 'copy'",
        "user": {
            "login": "sameerbabu",
            "id": 5107289,
            "node_id": "MDQ6VXNlcjUxMDcyODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5107289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sameerbabu",
            "html_url": "https://github.com/sameerbabu",
            "followers_url": "https://api.github.com/users/sameerbabu/followers",
            "following_url": "https://api.github.com/users/sameerbabu/following{/other_user}",
            "gists_url": "https://api.github.com/users/sameerbabu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sameerbabu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sameerbabu/subscriptions",
            "organizations_url": "https://api.github.com/users/sameerbabu/orgs",
            "repos_url": "https://api.github.com/users/sameerbabu/repos",
            "events_url": "https://api.github.com/users/sameerbabu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sameerbabu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-14T16:27:26Z",
        "updated_at": "2023-07-14T17:48:25Z",
        "closed_at": "2023-07-14T17:48:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWe did the following steps \r\n\r\n1. We have a text file, created embeddings using \"api.openai.com\"\r\n2. We have created an index in pinecone \r\n3. We have used pinecone upsert to create vectors in pinecone\r\n\r\n**We have done all the above steps offline, outside llama**\r\n\r\nNow, \r\nWe have created a py file to query a question using llama with below content\r\n\r\n```\r\npinecone.init(api_key=api_key, environment=environment)  \r\npinecone_index = pinecone.Index(\"testindex\")\r\nprint(pinecone_index.describe_index_stats())\r\n\r\nvector_store = PineconeVectorStore(pinecone_index=pinecone_index)\r\nindex = VectorStoreIndex.from_vector_store(vector_store=vector_store)\r\n\r\n#query_engine = index.as_query_engine()\r\n#Init query engine like this if you want to use filters\r\nquery_engine = index.as_query_engine(\r\n    similarity_top_k=3,\r\n    vector_store_query_mode=\"default\"\r\n)\r\nres = query_engine.query(\"movie inception?\")\r\n\r\n```\r\nWe got the below error on running above mentioned llama-app.py code\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/vscode-workspace/chatgpt/llama-app.py\", line 36, in <module>\r\n    res = query_engine.query(\"who directed movie inception?\")\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/indices/query/base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 147, in _query\r\n    nodes = self.retrieve(query_bundle)\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 107, in retrieve\r\n    nodes = self._retriever.retrieve(query_bundle)\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/indices/base_retriever.py\", line 21, in retrieve\r\n    return self._retrieve(str_or_query_bundle)\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/indices/vector_store/retrievers/retriever.py\", line 85, in _retrieve\r\n    query_result = self._vector_store.query(query, **self._kwargs)\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/vector_stores/pinecone.py\", line 298, in query\r\n    metadata, node_info, relationships = legacy_metadata_dict_to_node(\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/vector_stores/utils.py\", line 72, in legacy_metadata_dict_to_node\r\n    metadata = metadata.copy()\r\nAttributeError: 'NoneType' object has no attribute 'copy'\r\n\r\n```\r\n\r\nOn enabling debugging logs, we got the following\r\n\r\n```\r\nDEBUG:llama_index.vector_stores.pinecone:Failed to parse Node metadata, fallback to legacy logic.\r\nFailed to parse Node metadata, fallback to legacy logic.\r\n```\n\n### Version\n\n0.7.8\n\n### Steps to Reproduce\n\nPinecone index has been updated offline using openai embeddings API and pinecone upsert API\r\n\r\nTrying to do a basic search via llama. \r\nWe have followed the steps mentioned in the below documentation URL.\r\n\r\nhttps://gpt-index.readthedocs.io/en/latest/core_modules/data_modules/index/vector_store_guide.html#connect-to-external-vector-stores-with-existing-embeddings\n\n### Relevant Logs/Tracbacks\n\n```shell\nTraceback (most recent call last):\r\n  File \"/vscode-workspace/chatgpt/llama-app.py\", line 36, in <module>\r\n    res = query_engine.query(\"who directed movie inception?\")\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/indices/query/base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 147, in _query\r\n    nodes = self.retrieve(query_bundle)\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 107, in retrieve\r\n    nodes = self._retriever.retrieve(query_bundle)\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/indices/base_retriever.py\", line 21, in retrieve\r\n    return self._retrieve(str_or_query_bundle)\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/indices/vector_store/retrievers/retriever.py\", line 85, in _retrieve\r\n    query_result = self._vector_store.query(query, **self._kwargs)\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/vector_stores/pinecone.py\", line 298, in query\r\n    metadata, node_info, relationships = legacy_metadata_dict_to_node(\r\n  File \"/vscode-workspace/chatgpt/venv/lib/python3.9/site-packages/llama_index/vector_stores/utils.py\", line 72, in legacy_metadata_dict_to_node\r\n    metadata = metadata.copy()\r\nAttributeError: 'NoneType' object has no attribute 'copy'\r\n\r\n\r\n\r\nOn enabling debugging logs, we got the following\r\n\r\nDEBUG:llama_index.vector_stores.pinecone:Failed to parse Node metadata, fallback to legacy logic.\r\nFailed to parse Node metadata, fallback to legacy logic.\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6910/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6910/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6909",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6909/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6909/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6909/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6909",
        "id": 1805128660,
        "node_id": "I_kwDOIWuq585rmBPU",
        "number": 6909,
        "title": "[Question]: why is llama-index using the wrong model and temperature?",
        "user": {
            "login": "thedoor76",
            "id": 75886096,
            "node_id": "MDQ6VXNlcjc1ODg2MDk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/75886096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thedoor76",
            "html_url": "https://github.com/thedoor76",
            "followers_url": "https://api.github.com/users/thedoor76/followers",
            "following_url": "https://api.github.com/users/thedoor76/following{/other_user}",
            "gists_url": "https://api.github.com/users/thedoor76/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thedoor76/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thedoor76/subscriptions",
            "organizations_url": "https://api.github.com/users/thedoor76/orgs",
            "repos_url": "https://api.github.com/users/thedoor76/repos",
            "events_url": "https://api.github.com/users/thedoor76/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thedoor76/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-14T16:13:47Z",
        "updated_at": "2023-07-15T02:36:13Z",
        "closed_at": "2023-07-15T02:36:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI feel this must be a goofy mistake on my part, but I cannot figure it out..\r\n\r\nI am attempting to formulate an answer using qdrant vector store.\r\n\r\nThis is my method:\r\n```\r\n    def query(self, query, top_k=10, temp=0, model_name='gpt-3.5-turbo', filters=None, response_mode='compact'):\r\n        vector_store = QdrantVectorStore(client=self._client, collection_name=self._collection)\r\n        llm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=temp, model_name=model_name))\r\n        storage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n        service_context = ServiceContext.from_defaults(llm_predictor=llm_predictor)\r\n        index = GPTVectorStoreIndex([], storage_context=storage_context, service_context=service_context)\r\n\r\n        #setup filters\r\n        flts = []        \r\n        for key, value in filters.items():            \r\n            flts.append(ExactMatchFilter(key=key, value=value))\r\n\r\n        # https://gpt-index.readthedocs.io/en/latest/core_modules/query_modules/response_synthesizers/usage_pattern.html\r\n        response_synthesizer = get_response_synthesizer(response_mode=response_mode, text_qa_template=self._PROMPT_TEXT_QA)\r\n        query_engine = index.as_query_engine(filters=MetadataFilters(filters=flts), similarity_top_k=top_k, response_synthesizer=response_synthesizer, service_context=service_context)        \r\n\r\n        results = query_engine.query(query)\r\n```\r\n\r\nThis is how I invoke the method:\r\n`answer = q.query(query=question, temp=0.25, model_name=\"gpt-3.5-turbo\", filters=qdrant_filters, top_k=6, response_mode=\"compact\")\r\n`\r\n\r\nBut when I look at debug info, I see no mention of gpt-3.5-turbo or temp 0.25. Instead, I noticed that the following is used:\r\n`\"stream\": false, \"model\": \"text-davinci-003\", \"temperature\": 0.0, \"max_tokens\": 675`\r\n\r\nCan anyone point me in the right direction?\r\n\r\nThank you in advance.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6909/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6909/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6908",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6908/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6908/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6908/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6908",
        "id": 1804862950,
        "node_id": "I_kwDOIWuq585rlAXm",
        "number": 6908,
        "title": "[Question]: Filtering on metadata in SimpleVectorStore index",
        "user": {
            "login": "AravAct",
            "id": 122975761,
            "node_id": "U_kgDOB1R2EQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/122975761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AravAct",
            "html_url": "https://github.com/AravAct",
            "followers_url": "https://api.github.com/users/AravAct/followers",
            "following_url": "https://api.github.com/users/AravAct/following{/other_user}",
            "gists_url": "https://api.github.com/users/AravAct/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AravAct/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AravAct/subscriptions",
            "organizations_url": "https://api.github.com/users/AravAct/orgs",
            "repos_url": "https://api.github.com/users/AravAct/repos",
            "events_url": "https://api.github.com/users/AravAct/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AravAct/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            },
            {
                "id": 5860091515,
                "node_id": "LA_kwDOIWuq588AAAABXUnmew",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-14T13:11:58Z",
        "updated_at": "2023-10-24T06:29:33Z",
        "closed_at": "2023-10-24T06:29:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI want to create a single combined index that can either answer from all the files, or when a user wants to focus on single file, I want to be able to answer that. This requires ability to filter on metadata or doc_id while querying. Is there an option to do this?\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6908/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6908/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6907",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6907/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6907/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6907/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6907",
        "id": 1804825253,
        "node_id": "PR_kwDOIWuq585VhF9A",
        "number": 6907,
        "title": "doc: fix typo in model modules -> embeddings",
        "user": {
            "login": "maheshbansod",
            "id": 4703636,
            "node_id": "MDQ6VXNlcjQ3MDM2MzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4703636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maheshbansod",
            "html_url": "https://github.com/maheshbansod",
            "followers_url": "https://api.github.com/users/maheshbansod/followers",
            "following_url": "https://api.github.com/users/maheshbansod/following{/other_user}",
            "gists_url": "https://api.github.com/users/maheshbansod/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maheshbansod/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maheshbansod/subscriptions",
            "organizations_url": "https://api.github.com/users/maheshbansod/orgs",
            "repos_url": "https://api.github.com/users/maheshbansod/repos",
            "events_url": "https://api.github.com/users/maheshbansod/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maheshbansod/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-14T12:47:16Z",
        "updated_at": "2023-07-14T16:25:55Z",
        "closed_at": "2023-07-14T16:25:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6907",
            "html_url": "https://github.com/run-llama/llama_index/pull/6907",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6907.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6907.patch",
            "merged_at": "2023-07-14T16:25:54Z"
        },
        "body": "# Description\r\n\r\ntypo\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6907/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6907/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6906",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6906/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6906/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6906/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6906",
        "id": 1804703173,
        "node_id": "PR_kwDOIWuq585VgrCN",
        "number": 6906,
        "title": "feat(post processor): Relevance Post-Processor Abstractions (rerankers, node pruners)",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-14T11:19:40Z",
        "updated_at": "2023-11-07T16:02:31Z",
        "closed_at": "2023-11-07T16:02:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6906",
            "html_url": "https://github.com/run-llama/llama_index/pull/6906",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6906.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6906.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nFixes part of: https://github.com/jerryjliu/llama_index/issues/6884\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6906/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6906/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6905",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6905/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6905/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6905/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6905",
        "id": 1804602388,
        "node_id": "I_kwDOIWuq585rkAwU",
        "number": 6905,
        "title": "[Feature Request]: Is there a way to generate images a long with text?",
        "user": {
            "login": "dinhan92",
            "id": 86275789,
            "node_id": "MDQ6VXNlcjg2Mjc1Nzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/86275789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dinhan92",
            "html_url": "https://github.com/dinhan92",
            "followers_url": "https://api.github.com/users/dinhan92/followers",
            "following_url": "https://api.github.com/users/dinhan92/following{/other_user}",
            "gists_url": "https://api.github.com/users/dinhan92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dinhan92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dinhan92/subscriptions",
            "organizations_url": "https://api.github.com/users/dinhan92/orgs",
            "repos_url": "https://api.github.com/users/dinhan92/repos",
            "events_url": "https://api.github.com/users/dinhan92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dinhan92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-14T10:09:42Z",
        "updated_at": "2023-10-21T16:03:31Z",
        "closed_at": "2023-10-21T16:03:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nAs I learn from this link: https://github.com/jerryjliu/llama_index/blob/main/examples/multimodal/Multimodal.ipynb\r\nIt only generates images, so I wonder if there is a way generating both images and text when the users ask something like: \"Descriptions and images of this cat\" ?\n\n### Reason\n\nThat will make the messages look more flexible\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6905/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6905/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6904",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6904/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6904/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6904/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6904",
        "id": 1804576353,
        "node_id": "I_kwDOIWuq585rj6Zh",
        "number": 6904,
        "title": "[Documentation]: full details",
        "user": {
            "login": "alan-m-thomas",
            "id": 67413151,
            "node_id": "MDQ6VXNlcjY3NDEzMTUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/67413151?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alan-m-thomas",
            "html_url": "https://github.com/alan-m-thomas",
            "followers_url": "https://api.github.com/users/alan-m-thomas/followers",
            "following_url": "https://api.github.com/users/alan-m-thomas/following{/other_user}",
            "gists_url": "https://api.github.com/users/alan-m-thomas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alan-m-thomas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alan-m-thomas/subscriptions",
            "organizations_url": "https://api.github.com/users/alan-m-thomas/orgs",
            "repos_url": "https://api.github.com/users/alan-m-thomas/repos",
            "events_url": "https://api.github.com/users/alan-m-thomas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alan-m-thomas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-14T09:53:00Z",
        "updated_at": "2023-07-14T17:29:38Z",
        "closed_at": "2023-07-14T17:29:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nn\n\n### Documenation Link\n\nn",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6904/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6904/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6903",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6903/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6903/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6903/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6903",
        "id": 1804254345,
        "node_id": "I_kwDOIWuq585riryJ",
        "number": 6903,
        "title": "[Feature Request]: Improve Embeddings for Hugging Face - differentiate between query and passage embeddings",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-07-14T06:13:29Z",
        "updated_at": "2023-10-22T16:03:42Z",
        "closed_at": "2023-10-22T16:03:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nPurpose: support asymmetric embeddings e.g.\r\nhttps://www.sbert.net/examples/applications/semantic-search/README.html. We will test on BEIR.\r\n\r\nI think that to deal with this correctly, we should define our own `HuggingFaceEmbedding`s. @logan-markewich \r\n\r\nNot entirely sure how things work with openai, seems there are some models that are asymmetric but `text-embedding-ada-002` seems to be symmetric.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6903/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6903/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6902",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6902/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6902/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6902/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6902",
        "id": 1804182425,
        "node_id": "I_kwDOIWuq585riaOZ",
        "number": 6902,
        "title": "[Question]: how to set as_query_engine model\uff1f not working\uff01",
        "user": {
            "login": "ZhuJD-China",
            "id": 50070803,
            "node_id": "MDQ6VXNlcjUwMDcwODAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/50070803?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZhuJD-China",
            "html_url": "https://github.com/ZhuJD-China",
            "followers_url": "https://api.github.com/users/ZhuJD-China/followers",
            "following_url": "https://api.github.com/users/ZhuJD-China/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZhuJD-China/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZhuJD-China/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZhuJD-China/subscriptions",
            "organizations_url": "https://api.github.com/users/ZhuJD-China/orgs",
            "repos_url": "https://api.github.com/users/ZhuJD-China/repos",
            "events_url": "https://api.github.com/users/ZhuJD-China/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZhuJD-China/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-14T05:09:43Z",
        "updated_at": "2023-07-14T17:31:08Z",
        "closed_at": "2023-07-14T17:31:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n# query_engine = index.as_query_engine()\r\nquery_engine = index.as_query_engine(streaming=True, language_model=OpenAI(model=\"gpt-3.5-turbo-0613\"))\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6902/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6902/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6901",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6901/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6901/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6901/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6901",
        "id": 1804068354,
        "node_id": "PR_kwDOIWuq585Veg13",
        "number": 6901,
        "title": "Github issue analysis and misc improvements",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-14T02:57:12Z",
        "updated_at": "2023-07-15T01:33:08Z",
        "closed_at": "2023-07-15T01:33:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6901",
            "html_url": "https://github.com/run-llama/llama_index/pull/6901",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6901.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6901.patch",
            "merged_at": "2023-07-15T01:33:07Z"
        },
        "body": "# Description\r\n\r\n* Add github issue analysis notebook.\r\n> use github repo issue loader to load issues\r\n> use openai pydantic program to parse out tags from each ticket\r\n> ask GPT-4 to summarize all the tags across tickets (in single call)\r\n* Add async `acall` endpoint to `OpenAIPydanticProgram`\r\n* Add `batch_gather` to `llama_index.async_utils`\r\n> this is necessary to process a batch of completion requests without dying from rate limit error.\r\n> exp back off retry doesn't work when we have a batch workload, the retry attempts flood the API with failed requests that count towards the rate limit.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6901/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6901/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6900",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6900/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6900/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6900/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6900",
        "id": 1804045110,
        "node_id": "PR_kwDOIWuq585Veb7B",
        "number": 6900,
        "title": "[version] bump version to 0.7.8 ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-14T02:29:49Z",
        "updated_at": "2023-07-14T02:43:12Z",
        "closed_at": "2023-07-14T02:43:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6900",
            "html_url": "https://github.com/run-llama/llama_index/pull/6900",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6900.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6900.patch",
            "merged_at": "2023-07-14T02:43:11Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6900/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6900/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6899",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6899/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6899/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6899/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6899",
        "id": 1803705584,
        "node_id": "PR_kwDOIWuq585VdRYM",
        "number": 6899,
        "title": "fix(bench embeddings): bug not taking into account string length",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-13T20:18:16Z",
        "updated_at": "2023-07-13T20:26:41Z",
        "closed_at": "2023-07-13T20:26:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6899",
            "html_url": "https://github.com/run-llama/llama_index/pull/6899",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6899.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6899.patch",
            "merged_at": "2023-07-13T20:26:41Z"
        },
        "body": "# Description\r\nWhoops, turns out that seq length does matter after all. \r\n\r\nLet me be a bit more careful about blindly hitting tab on copilot...\r\n![image](https://github.com/jerryjliu/llama_index/assets/9093549/c0d52687-043e-4d59-9b27-d7f99a876366)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6899/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6899/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6898",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6898/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6898/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6898/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6898",
        "id": 1803702670,
        "node_id": "I_kwDOIWuq585rglGO",
        "number": 6898,
        "title": "[Bug]: Cannot query Chroma db with None metadata: AttributeError: 'NoneType' object has no attribute 'copy'",
        "user": {
            "login": "tnunamak",
            "id": 1095217,
            "node_id": "MDQ6VXNlcjEwOTUyMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tnunamak",
            "html_url": "https://github.com/tnunamak",
            "followers_url": "https://api.github.com/users/tnunamak/followers",
            "following_url": "https://api.github.com/users/tnunamak/following{/other_user}",
            "gists_url": "https://api.github.com/users/tnunamak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tnunamak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tnunamak/subscriptions",
            "organizations_url": "https://api.github.com/users/tnunamak/orgs",
            "repos_url": "https://api.github.com/users/tnunamak/repos",
            "events_url": "https://api.github.com/users/tnunamak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tnunamak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-13T20:15:50Z",
        "updated_at": "2023-07-14T17:48:26Z",
        "closed_at": "2023-07-14T17:48:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI have added documents to a Chroma collection with `None` for metadatas, because Chroma no longer supports `{}`: https://github.com/chroma-core/chroma/issues/791#issuecomment-1630909852\r\n\r\n```\r\ndb._collection.add(\r\n  ids=[str(uuid.uuid1())], metadatas=doc.metadata or None, documents=doc.page_content\r\n)\r\n```\r\n\r\nThe problem is, when I create a VectorStoreIndex from the collection and query it, I get the error: `AttributeError: 'NoneType' object has no attribute 'copy'`.\n\n### Version\n\nllama-index = \"^0.7.5\" and chromadb = \"^0.3.29\"\n\n### Steps to Reproduce\n\nMy code is roughly:\r\n\r\n```python\r\n    vector_store = ChromaVectorStore(chroma_collection=db._collection)\r\n    storage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n    document_index = VectorStoreIndex.from_vector_store(\r\n        vector_store=vector_store,\r\n        storage_context=storage_context,\r\n        service_context=service_context,\r\n    )\r\n\r\n    document_index\r\n      .as_query_engine(response_mode=\"tree_summarize\")\r\n      .query(\"What is a summary of this document?\")\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\n...\r\n    .query(\"What is a summary of this document?\")\r\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/dondo/Library/Caches/pypoetry/virtualenvs/my-app-IE1VmXUs-py3.11/lib/python3.11/site-packages/llama_index/indices/query/base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/dondo/Library/Caches/pypoetry/virtualenvs/my-app-IE1VmXUs-py3.11/lib/python3.11/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 147, in _query\r\n    nodes = self.retrieve(query_bundle)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/dondo/Library/Caches/pypoetry/virtualenvs/my-app-IE1VmXUs-py3.11/lib/python3.11/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 107, in retrieve\r\n    nodes = self._retriever.retrieve(query_bundle)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/dondo/Library/Caches/pypoetry/virtualenvs/my-app-IE1VmXUs-py3.11/lib/python3.11/site-packages/llama_index/indices/base_retriever.py\", line 21, in retrieve\r\n    return self._retrieve(str_or_query_bundle)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/dondo/Library/Caches/pypoetry/virtualenvs/my-app-IE1VmXUs-py3.11/lib/python3.11/site-packages/llama_index/indices/vector_store/retrievers/retriever.py\", line 85, in _retrieve\r\n    query_result = self._vector_store.query(query, **self._kwargs)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/dondo/Library/Caches/pypoetry/virtualenvs/my-app-IE1VmXUs-py3.11/lib/python3.11/site-packages/llama_index/vector_stores/chroma.py\", line 154, in query\r\n    metadata, node_info, relationships = legacy_metadata_dict_to_node(\r\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/dondo/Library/Caches/pypoetry/virtualenvs/my-app-IE1VmXUs-py3.11/lib/python3.11/site-packages/llama_index/vector_stores/utils.py\", line 70, in legacy_metadata_dict_to_node\r\n    metadata = metadata.copy()\r\n               ^^^^^^^^^^^^^\r\nAttributeError: 'NoneType' object has no attribute 'copy'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6898/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6898/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6897",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6897/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6897/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6897/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6897",
        "id": 1803695935,
        "node_id": "PR_kwDOIWuq585VdPN3",
        "number": 6897,
        "title": "take into account overlap size when determining if single token in a \u2026",
        "user": {
            "login": "tyre",
            "id": 1015847,
            "node_id": "MDQ6VXNlcjEwMTU4NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1015847?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tyre",
            "html_url": "https://github.com/tyre",
            "followers_url": "https://api.github.com/users/tyre/followers",
            "following_url": "https://api.github.com/users/tyre/following{/other_user}",
            "gists_url": "https://api.github.com/users/tyre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tyre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tyre/subscriptions",
            "organizations_url": "https://api.github.com/users/tyre/orgs",
            "repos_url": "https://api.github.com/users/tyre/repos",
            "events_url": "https://api.github.com/users/tyre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tyre/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-13T20:11:48Z",
        "updated_at": "2023-08-07T15:43:56Z",
        "closed_at": "2023-08-07T15:43:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6897",
            "html_url": "https://github.com/run-llama/llama_index/pull/6897",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6897.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6897.patch",
            "merged_at": null
        },
        "body": "\u2026sentence is still too large\r\n\r\n# Description\r\n\r\nFixes #6834 but I'd like confirmation that this is correct.\r\n\r\nWhen `SentenceSplitter.split_text_with_overlaps` encounters a sentence that is longer than the `chunk_size`, it will try splitting it by the `secondary_chunking_regex` option. It will then check those pieces to see if they are too long and, if necessary, do another fallback to `separator`.\r\n\r\nThe issue in #6834 is when the pieces from `secondary_chunking_regex` are less than the `chunk_size` (good) but larger than `chunk_size - overlap`. That infinite loops.\r\n\r\nAdditionally, there's a weird case where the `separator` might not actually save us, so I added a check there as well.\r\n\r\n**question**: Is it correct to be checking `effective_chunk_size - self._chunk_overlap` instead of `effective_chunk_size` in these places?\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6897/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6896",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6896/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6896/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6896/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6896",
        "id": 1803544027,
        "node_id": "PR_kwDOIWuq585VctrB",
        "number": 6896,
        "title": "raise error if the model does not support functions",
        "user": {
            "login": "tyre",
            "id": 1015847,
            "node_id": "MDQ6VXNlcjEwMTU4NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1015847?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tyre",
            "html_url": "https://github.com/tyre",
            "followers_url": "https://api.github.com/users/tyre/followers",
            "following_url": "https://api.github.com/users/tyre/following{/other_user}",
            "gists_url": "https://api.github.com/users/tyre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tyre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tyre/subscriptions",
            "organizations_url": "https://api.github.com/users/tyre/orgs",
            "repos_url": "https://api.github.com/users/tyre/repos",
            "events_url": "https://api.github.com/users/tyre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tyre/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-13T18:21:43Z",
        "updated_at": "2023-07-14T09:50:42Z",
        "closed_at": "2023-07-13T20:12:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6896",
            "html_url": "https://github.com/run-llama/llama_index/pull/6896",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6896.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6896.patch",
            "merged_at": "2023-07-13T20:12:14Z"
        },
        "body": "# Description\r\nRegression in #6870 that raises when a model does support functions. We want to raise when it does not.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6896/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6896/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6895",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6895/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6895/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6895/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6895",
        "id": 1803455913,
        "node_id": "PR_kwDOIWuq585VcaUo",
        "number": 6895,
        "title": "remove toctrees from deprecated_terms",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-13T17:21:34Z",
        "updated_at": "2023-07-13T17:38:38Z",
        "closed_at": "2023-07-13T17:38:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6895",
            "html_url": "https://github.com/run-llama/llama_index/pull/6895",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6895.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6895.patch",
            "merged_at": "2023-07-13T17:38:37Z"
        },
        "body": "# Description\r\n\r\nTocTrees were creating misleading trees in the sidebar\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6895/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6895/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6894",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6894/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6894/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6894/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6894",
        "id": 1803322378,
        "node_id": "PR_kwDOIWuq585Vb9KL",
        "number": 6894,
        "title": "[version] bump version to 0.7.7",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-13T15:58:19Z",
        "updated_at": "2023-07-13T16:11:57Z",
        "closed_at": "2023-07-13T16:11:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6894",
            "html_url": "https://github.com/run-llama/llama_index/pull/6894",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6894.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6894.patch",
            "merged_at": "2023-07-13T16:11:56Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6894/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6893",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6893/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6893/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6893/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6893",
        "id": 1803310437,
        "node_id": "PR_kwDOIWuq585Vb6kd",
        "number": 6893,
        "title": "fix agent docs",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-13T15:50:45Z",
        "updated_at": "2023-07-13T15:56:22Z",
        "closed_at": "2023-07-13T15:56:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6893",
            "html_url": "https://github.com/run-llama/llama_index/pull/6893",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6893.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6893.patch",
            "merged_at": "2023-07-13T15:56:21Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6893/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6893/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6892",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6892/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6892/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6892/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6892",
        "id": 1803263781,
        "node_id": "PR_kwDOIWuq585VbwXQ",
        "number": 6892,
        "title": "fix tool import links",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-13T15:23:54Z",
        "updated_at": "2023-07-13T15:50:58Z",
        "closed_at": "2023-07-13T15:50:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6892",
            "html_url": "https://github.com/run-llama/llama_index/pull/6892",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6892.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6892.patch",
            "merged_at": "2023-07-13T15:50:56Z"
        },
        "body": "# Description\r\n\r\nUpdating outdated imports for tools\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6892/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6891",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6891/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6891/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6891/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6891",
        "id": 1803208182,
        "node_id": "PR_kwDOIWuq585VbkFm",
        "number": 6891,
        "title": "Include context_str in string returned by _get_table_context",
        "user": {
            "login": "richardguinness",
            "id": 47474926,
            "node_id": "MDQ6VXNlcjQ3NDc0OTI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/47474926?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/richardguinness",
            "html_url": "https://github.com/richardguinness",
            "followers_url": "https://api.github.com/users/richardguinness/followers",
            "following_url": "https://api.github.com/users/richardguinness/following{/other_user}",
            "gists_url": "https://api.github.com/users/richardguinness/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/richardguinness/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/richardguinness/subscriptions",
            "organizations_url": "https://api.github.com/users/richardguinness/orgs",
            "repos_url": "https://api.github.com/users/richardguinness/repos",
            "events_url": "https://api.github.com/users/richardguinness/events{/privacy}",
            "received_events_url": "https://api.github.com/users/richardguinness/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-13T14:54:25Z",
        "updated_at": "2023-07-13T16:28:00Z",
        "closed_at": "2023-07-13T16:28:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6891",
            "html_url": "https://github.com/run-llama/llama_index/pull/6891",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6891.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6891.patch",
            "merged_at": "2023-07-13T16:28:00Z"
        },
        "body": "# Description\r\n\r\nAdapted `_get_table_context` member method of class `SQLTableRetrieverQueryEngine` to simply append `context_str` (if it exists) to the returned string.\r\n\r\nFixes #6886\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [none necessary] I have commented my code, particularly in hard-to-understand areas\r\n- [none necessary] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6891/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6891/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6890",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6890/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6890/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6890/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6890",
        "id": 1803202173,
        "node_id": "I_kwDOIWuq585req59",
        "number": 6890,
        "title": "[Bug]: Search_params default values are not properly set from index_params when creating collection and index in MilvusVectorStore",
        "user": {
            "login": "faileon",
            "id": 9354213,
            "node_id": "MDQ6VXNlcjkzNTQyMTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9354213?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faileon",
            "html_url": "https://github.com/faileon",
            "followers_url": "https://api.github.com/users/faileon/followers",
            "following_url": "https://api.github.com/users/faileon/following{/other_user}",
            "gists_url": "https://api.github.com/users/faileon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faileon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faileon/subscriptions",
            "organizations_url": "https://api.github.com/users/faileon/orgs",
            "repos_url": "https://api.github.com/users/faileon/repos",
            "events_url": "https://api.github.com/users/faileon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faileon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-13T14:51:55Z",
        "updated_at": "2023-10-21T16:03:41Z",
        "closed_at": "2023-10-21T16:03:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nConsider the following code snippet\r\n```py\r\nindex_params = {\r\n    \"index_type\": \"HNSW\",\r\n    \"metric_type\": \"L2\",\r\n    \"params\": {\r\n        \"M\": 8,\r\n        \"efConstruction\": 64\r\n    }\r\n}\r\nvector_store = MilvusVectorStore(collection_name=\"myindex\", index_params=index_params, host=\"localhost\", port=\"19530\", overwrite=True)\r\nstorage_context = StorageContext.from_defaults(vector_store=vector_store)\r\nindex = VectorStoreIndex.from_documents(documents, service_context=service_context, storage_context=storage_context)\r\nquery_engine = index.as_query_engine()\r\nresponse = query_engine.query(\"Some question\")\r\n```\r\nWill fail with the following error:\r\n> metric type not match: expected=L2, actual=IP: invalid parameter\r\n\r\n\r\nI am overriding a collection and creating an index with some parameters. If I run a query on this store, it will fail, because search_params did not get the right metric_type set. Search_params will default to IP, despite index being created with L2.\r\n\r\nThe workaround currently is to set the search_params explicitly such as\r\n```py\r\nindex_params = {\r\n    \"index_type\": \"HNSW\",\r\n    \"metric_type\": \"L2\",\r\n    \"params\": {\r\n        \"M\": 8,\r\n        \"efConstruction\": 64\r\n    }\r\n}\r\n\r\nsearch_params = {\r\n    \"metric_type\": \"L2\",\r\n}\r\nvector_store = MilvusVectorStore(collection_name=\"virtllamaindexlinda\", index_params=index_params, search_params=search_params, host=\"localhost\", port=\"19530\", overwrite=True)\r\n```\r\n\r\nHowever tracing the source code I believe this [line](https://github.com/jerryjliu/llama_index/blob/fc3eed13b1334278e85fb4120d46759081a5ad66/llama_index/vector_stores/milvus.py#L155C7-L155C7) should be an `if` instead of `elif` and the bug will be resolved without any side effects?\r\n\r\n### Version\r\n\r\n0.7.6\r\n\r\n### Steps to Reproduce\r\n\r\nCreate a collection and index in Milvus - specify custom index_params.\r\nObserve search_params are not being created correctly according to index_params. Instead defaulting to default_search_params.\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6890/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6890/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6889",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6889/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6889/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6889/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6889",
        "id": 1802796743,
        "node_id": "I_kwDOIWuq585rdH7H",
        "number": 6889,
        "title": "feat(context length): QnA Summarization as a relevant information extractor",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T11:16:30Z",
        "updated_at": "2023-10-19T16:03:41Z",
        "closed_at": "2023-10-19T16:03:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nSummarizer can help in cases where the information is evenly distributed in the document i.e. a large amount of context is required but the language is verbose or there are many irrelevant details. Summarization specific to the query can help.\r\n\r\nEither cheap local model or even LLM are options; the latter for reducing latency due to large context window in RAG. \r\n\r\nAnother place where it helps is that percentile and top_k don't account for variable information density. (However, this may be solved with inter-node sub-node reranking). \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6889/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6889/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6888",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6888/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6888/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6888/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6888",
        "id": 1802758991,
        "node_id": "I_kwDOIWuq585rc-tP",
        "number": 6888,
        "title": "[Feature Request]: Query Augmentation/Rewriting - Keyword generation for Lexical search",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-13T10:54:16Z",
        "updated_at": "2023-10-19T16:03:46Z",
        "closed_at": "2023-10-19T16:03:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nIn classical lexical search, this is called something like query rewriting.\r\n\r\nOf a similar vein to HyDE (should be put in a similar abstraction).\r\n\r\nCan feed directly into the hybrid/lexical search portion of the index. For instance, instead of issuing a hybrid query, one could issue 2 queries - original query, and keyword query for lexical search.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6888/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6888/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]