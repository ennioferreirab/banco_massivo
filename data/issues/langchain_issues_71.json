[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7022",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7022/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7022/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7022/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7022",
        "id": 1784058856,
        "node_id": "PR_kwDOIPDwls5UaePc",
        "number": 7022,
        "title": "Rename Databerry to Chaindesk",
        "user": {
            "login": "gmpetrov",
            "id": 4693180,
            "node_id": "MDQ6VXNlcjQ2OTMxODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4693180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmpetrov",
            "html_url": "https://github.com/gmpetrov",
            "followers_url": "https://api.github.com/users/gmpetrov/followers",
            "following_url": "https://api.github.com/users/gmpetrov/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmpetrov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmpetrov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmpetrov/subscriptions",
            "organizations_url": "https://api.github.com/users/gmpetrov/orgs",
            "repos_url": "https://api.github.com/users/gmpetrov/repos",
            "events_url": "https://api.github.com/users/gmpetrov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmpetrov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-01T16:21:47Z",
        "updated_at": "2023-07-07T21:28:05Z",
        "closed_at": "2023-07-07T21:28:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7022",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7022",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7022.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7022.patch",
            "merged_at": "2023-07-07T21:28:04Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7022/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7022/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7021",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7021/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7021/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7021/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7021",
        "id": 1784042187,
        "node_id": "PR_kwDOIPDwls5UaaiS",
        "number": 7021,
        "title": "fix(pipeline prompt): support  PipelinePrompt format missing varable",
        "user": {
            "login": "NINTING",
            "id": 31238314,
            "node_id": "MDQ6VXNlcjMxMjM4MzE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/31238314?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NINTING",
            "html_url": "https://github.com/NINTING",
            "followers_url": "https://api.github.com/users/NINTING/followers",
            "following_url": "https://api.github.com/users/NINTING/following{/other_user}",
            "gists_url": "https://api.github.com/users/NINTING/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NINTING/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NINTING/subscriptions",
            "organizations_url": "https://api.github.com/users/NINTING/orgs",
            "repos_url": "https://api.github.com/users/NINTING/repos",
            "events_url": "https://api.github.com/users/NINTING/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NINTING/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-01T15:57:39Z",
        "updated_at": "2023-11-07T03:48:53Z",
        "closed_at": "2023-11-07T03:48:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7021",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7021",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7021.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7021.patch",
            "merged_at": null
        },
        "body": "Replace this comment with:\r\n  - Description: fixed the bug where PipelinePromptTemplate throws an error when input variable is missing, \r\n  - Issue: the issue #7016 it fixes (if applicable),\r\n  - Dependencies: none\r\n  - Tag maintainer: @dev2049\r\n  - Twitter handle: \r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7021/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7021/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7020",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7020/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7020/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7020/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7020",
        "id": 1784032576,
        "node_id": "PR_kwDOIPDwls5UaYUC",
        "number": 7020,
        "title": "added customizable pipeline tool",
        "user": {
            "login": "hanzhichao2000",
            "id": 230746,
            "node_id": "MDQ6VXNlcjIzMDc0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/230746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hanzhichao2000",
            "html_url": "https://github.com/hanzhichao2000",
            "followers_url": "https://api.github.com/users/hanzhichao2000/followers",
            "following_url": "https://api.github.com/users/hanzhichao2000/following{/other_user}",
            "gists_url": "https://api.github.com/users/hanzhichao2000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hanzhichao2000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hanzhichao2000/subscriptions",
            "organizations_url": "https://api.github.com/users/hanzhichao2000/orgs",
            "repos_url": "https://api.github.com/users/hanzhichao2000/repos",
            "events_url": "https://api.github.com/users/hanzhichao2000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hanzhichao2000/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-01T15:50:35Z",
        "updated_at": "2023-07-06T15:41:48Z",
        "closed_at": "2023-07-06T15:41:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7020",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7020",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7020.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7020.patch",
            "merged_at": null
        },
        "body": "## Description\r\n\r\nadded a pipeline tool consisting multiple steps that makes tool/chain reuse easier.\r\nwith more generic tools reused by domain task tools, metadata-driven agent-tool chain loading will be easier.\r\n\r\n##  Dependencies\r\n\r\nNone\r\n\r\n## Maintainer\r\n\r\n - Agents / Tools / Toolkits: @vowelparrot\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7020/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7020/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7019",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7019/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7019/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7019/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7019",
        "id": 1784012562,
        "node_id": "I_kwDOIPDwls5qVd8S",
        "number": 7019,
        "title": "Could not import sentence_transformers python package.",
        "user": {
            "login": "frankandrobot",
            "id": 787249,
            "node_id": "MDQ6VXNlcjc4NzI0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/787249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frankandrobot",
            "html_url": "https://github.com/frankandrobot",
            "followers_url": "https://api.github.com/users/frankandrobot/followers",
            "following_url": "https://api.github.com/users/frankandrobot/following{/other_user}",
            "gists_url": "https://api.github.com/users/frankandrobot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frankandrobot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frankandrobot/subscriptions",
            "organizations_url": "https://api.github.com/users/frankandrobot/orgs",
            "repos_url": "https://api.github.com/users/frankandrobot/repos",
            "events_url": "https://api.github.com/users/frankandrobot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frankandrobot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-01T15:22:37Z",
        "updated_at": "2023-08-10T08:22:31Z",
        "closed_at": "2023-07-03T03:57:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n  ```\r\n  langchain: latest as of yesterday\r\n  M2 Pro\r\n  16 GB\r\n  Macosx\r\n  \r\n  Darwin UAVALOS-M-NR30 22.5.0 Darwin Kernel Version 22.5.0: Thu Jun  8 22:22:23 PDT 2023; root:xnu-8796.121.3~7/RELEASE_ARM64_T6020 arm64\r\n  \r\n  Python 3.10.10\r\n  GNU Make 3.81\r\n  Apple clang version 14.0.3 (clang-1403.0.22.14.1)\r\n  \r\n  ```\r\n\r\n\r\n### Who can help?\r\n\r\n@eyurtsev\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nSteps to repo.\r\n\r\n1. Install latest requirement\r\n2. Try to load the `gtr-t5-xxl` embedding model from file.\r\n\r\n```\r\n!pip uninstall llama-cpp-python -y\r\n!CMAKE_ARGS=\"-DLLAMA_METAL=on\" FORCE_CMAKE=1 pip install -U llama-cpp-python --no-cache-dir\r\n!pip install 'llama-cpp-python[server]'\r\n\r\n!pip install sentence_transformers\r\n!pip install git+https://github.com/huggingface/peft.git\r\n!pip install git+https://github.com/huggingface/transformers.git\r\n!pip install -v datasets loralib sentencepiece \r\n!pip -v install bitsandbytes accelerate\r\n!pip -v install langchain\r\n!pip install scipy\r\n!pip install xformers\r\n!pip install langchain faiss-cpu\r\n# needed to load git repo\r\n!pip install GitPython \r\n\r\n!pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cpu\r\n\r\n// not this is the latest repo cloned locally\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nembeddings = HuggingFaceEmbeddings(model_name='/Users/uavalos/Documents/gtr-t5-xxl')\r\n```\r\n\r\n### Expected behavior\r\n\r\n* that it loads the embeddings just fine\r\n* in fact, it was working a few days ago\r\n* it stopped working after creating a new conda environment and reinstalling everything fresh\r\n* if you look at the logs, it's looking for a module that's already installed. It's also failing to import the `google` module... i get the same error if i explicitly install that as well\r\n\r\nFailure logs\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nModuleNotFoundError                       Traceback (most recent call last)\r\nFile ~/miniconda3/envs/llama3/lib/python3.11/site-packages/langchain/embeddings/huggingface.py:51, in HuggingFaceEmbeddings.__init__(self, **kwargs)\r\n     50 try:\r\n---> 51     import sentence_transformers\r\n     53 except ImportError as exc:\r\n\r\nFile ~/miniconda3/envs/llama3/lib/python3.11/site-packages/sentence_transformers/__init__.py:3\r\n      2 __MODEL_HUB_ORGANIZATION__ = 'sentence-transformers'\r\n----> 3 from .datasets import SentencesDataset, ParallelSentencesDataset\r\n      4 from .LoggingHandler import LoggingHandler\r\n\r\nFile ~/miniconda3/envs/llama3/lib/python3.11/site-packages/sentence_transformers/datasets/__init__.py:3\r\n      2 from .NoDuplicatesDataLoader import NoDuplicatesDataLoader\r\n----> 3 from .ParallelSentencesDataset import ParallelSentencesDataset\r\n      4 from .SentencesDataset import SentencesDataset\r\n\r\nFile ~/miniconda3/envs/llama3/lib/python3.11/site-packages/sentence_transformers/datasets/ParallelSentencesDataset.py:4\r\n      3 import gzip\r\n----> 4 from .. import SentenceTransformer\r\n      5 from ..readers import InputExample\r\n\r\nFile ~/miniconda3/envs/llama3/lib/python3.11/site-packages/sentence_transformers/SentenceTransformer.py:11\r\n     10 from numpy import ndarray\r\n---> 11 import transformers\r\n     12 from huggingface_hub import HfApi, HfFolder, Repository, hf_hub_url, cached_download\r\n\r\nFile ~/miniconda3/envs/llama3/lib/python3.11/site-packages/transformers/__init__.py:26\r\n     25 # Check the dependencies satisfy the minimal versions required.\r\n---> 26 from . import dependency_versions_check\r\n     27 from .utils import (\r\n     28     OptionalDependencyNotAvailable,\r\n     29     _LazyModule,\r\n   (...)\r\n     42     logging,\r\n     43 )\r\n\r\nFile ~/miniconda3/envs/llama3/lib/python3.11/site-packages/transformers/dependency_versions_check.py:16\r\n     15 from .dependency_versions_table import deps\r\n---> 16 from .utils.versions import require_version, require_version_core\r\n     19 # define which module versions we always want to check at run time\r\n     20 # (usually the ones defined in `install_requires` in setup.py)\r\n     21 #\r\n     22 # order specific notes:\r\n     23 # - tqdm must be checked before tokenizers\r\n\r\nFile ~/miniconda3/envs/llama3/lib/python3.11/site-packages/transformers/utils/__init__.py:188\r\n    186 else:\r\n    187     # just to get the expected `No module named 'google.protobuf'` error\r\n--> 188     from . import sentencepiece_model_pb2\r\n    191 WEIGHTS_NAME = \"pytorch_model.bin\"\r\n\r\nFile ~/miniconda3/envs/llama3/lib/python3.11/site-packages/transformers/utils/sentencepiece_model_pb2.py:17\r\n      1 # Generated by the protocol buffer compiler.  DO NOT EDIT!\r\n      2 # source: sentencepiece_model.proto\r\n      3 \r\n   (...)\r\n     15 # See the License for the specific language governing permissions and\r\n     16 # limitations under the License.\r\n---> 17 from google.protobuf import descriptor as _descriptor\r\n     18 from google.protobuf import message as _message\r\n\r\nModuleNotFoundError: No module named 'google'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nImportError                               Traceback (most recent call last)\r\nCell In[8], line 2\r\n      1 from langchain.embeddings import HuggingFaceEmbeddings\r\n----> 2 embeddings = HuggingFaceEmbeddings(model_name='/Users/uavalos/Documents/gtr-t5-xxl')\r\n\r\nFile ~/miniconda3/envs/llama3/lib/python3.11/site-packages/langchain/embeddings/huggingface.py:54, in HuggingFaceEmbeddings.__init__(self, **kwargs)\r\n     51     import sentence_transformers\r\n     53 except ImportError as exc:\r\n---> 54     raise ImportError(\r\n     55         \"Could not import sentence_transformers python package. \"\r\n     56         \"Please install it with `pip install sentence_transformers`.\"\r\n     57     ) from exc\r\n     59 self.client = sentence_transformers.SentenceTransformer(\r\n     60     self.model_name, cache_folder=self.cache_folder, **self.model_kwargs\r\n     61 )\r\n\r\nImportError: Could not import sentence_transformers python package. Please install it with `pip install sentence_transformers`.\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7019/reactions",
            "total_count": 3,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7019/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7018",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7018/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7018/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7018/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7018",
        "id": 1783981699,
        "node_id": "I_kwDOIPDwls5qVWaD",
        "number": 7018,
        "title": "jinja2 formate suppot trim_blocks mode",
        "user": {
            "login": "NINTING",
            "id": 31238314,
            "node_id": "MDQ6VXNlcjMxMjM4MzE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/31238314?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NINTING",
            "html_url": "https://github.com/NINTING",
            "followers_url": "https://api.github.com/users/NINTING/followers",
            "following_url": "https://api.github.com/users/NINTING/following{/other_user}",
            "gists_url": "https://api.github.com/users/NINTING/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NINTING/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NINTING/subscriptions",
            "organizations_url": "https://api.github.com/users/NINTING/orgs",
            "repos_url": "https://api.github.com/users/NINTING/repos",
            "events_url": "https://api.github.com/users/NINTING/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NINTING/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-01T14:43:22Z",
        "updated_at": "2023-10-07T16:05:07Z",
        "closed_at": "2023-10-07T16:05:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nwhen i use jinja2 template\uff0c i get the following the problem\r\ntemplate:\r\n```\r\n{% if a %}\\n\r\n{{a}}\\n\r\n{% endif %}\\n\r\n{{b}}\r\n```\r\nand i pass b variable to template render,then the output like this\r\n```\r\n\\n\r\nb\r\n```\r\nEach variable placeholder is followed by a  '\\n'. \r\nSince a is not passed in, and '\\n' is left after rendering\r\n\r\ni wand the right output is this:\r\n```\r\nb\r\n```\r\nin jinja2 ,use enviroment create template ,and enable trim_blocks ,the jinja2 can ignore '\\n'.\r\n\r\nthis is origin code \r\n```python\r\ndef jinja2_formatter(template: str, **kwargs: Any) -> str:\r\n    \"\"\"Format a template using jinja2.\"\"\"\r\n    try:\r\n        from jinja2 import Template\r\n    except ImportError:\r\n        raise ImportError(\r\n            \"jinja2 not installed, which is needed to use the jinja2_formatter. \"\r\n            \"Please install it with `pip install jinja2`.\"\r\n        )\r\n\r\n    return Template(template).render(**kwargs)\r\n```\r\nI tried modifying it a bit\r\n```python\r\ndef jinja2_formatter(template: str, **kwargs: Any) -> str:\r\n    \"\"\"Format a template using jinja2.\"\"\"\r\n    try:\r\n        from jinja2 import Environment\r\n    except ImportError:\r\n        raise ImportError(\r\n            \"jinja2 not installed, which is needed to use the jinja2_formatter. \"\r\n            \"Please install it with `pip install jinja2`.\"\r\n        )\r\n\r\n    env = Environment(trim_blocks=True) \r\n    jinja_template = env.from_string(template) \r\n\r\n    return jinja_template.render(**kwargs) \r\n```\r\n\r\n\r\n\r\n\n\n### Motivation\n\nI often use the control semantics of Jinja2 to construct prompt templates, creating several different prompts by passing in different variables. \r\n\r\nHowever, since the Jinja2 render in Langchain does not support trim_blocks, it always results in unnecessary blank lines. \r\n\r\nPerhaps LLM doesn't care about these extra lines, but as a human being, my OCD makes me feel uncomfortable with them.\n\n### Your contribution\n\nThe jinja2_formatter function is too low-level within the Langchain code. \r\n\r\nAlthough the modification is simple, I fear that the PR I submit could potentially affect other parts of the code.\r\n\r\nSo, if you have time, perhaps you could personally implement this feature.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7018/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7018/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7017",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7017/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7017/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7017/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7017",
        "id": 1783923053,
        "node_id": "PR_kwDOIPDwls5UZ_7i",
        "number": 7017,
        "title": "Second Attempt - Add concurrent insertion of vector rows in the Cassandra Vector Store",
        "user": {
            "login": "hemidactylus",
            "id": 14221764,
            "node_id": "MDQ6VXNlcjE0MjIxNzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/14221764?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemidactylus",
            "html_url": "https://github.com/hemidactylus",
            "followers_url": "https://api.github.com/users/hemidactylus/followers",
            "following_url": "https://api.github.com/users/hemidactylus/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemidactylus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemidactylus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemidactylus/subscriptions",
            "organizations_url": "https://api.github.com/users/hemidactylus/orgs",
            "repos_url": "https://api.github.com/users/hemidactylus/repos",
            "events_url": "https://api.github.com/users/hemidactylus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemidactylus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-01T13:41:46Z",
        "updated_at": "2023-08-31T00:06:00Z",
        "closed_at": "2023-07-01T18:09:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7017",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7017",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7017.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7017.patch",
            "merged_at": "2023-07-01T18:09:52Z"
        },
        "body": "Retrying with the same improvements as in #6772, this time trying not to mess up with branches.\r\n\r\n@rlancemartin doing a fresh new PR from a branch with a new name. This should do. Thank you for your help!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7017/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7017/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7016",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7016/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7016/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7016/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7016",
        "id": 1783894983,
        "node_id": "I_kwDOIPDwls5qVBPH",
        "number": 7016,
        "title": "PipelinePromptTemplate  format_prompt should support missing keyword",
        "user": {
            "login": "NINTING",
            "id": 31238314,
            "node_id": "MDQ6VXNlcjMxMjM4MzE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/31238314?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NINTING",
            "html_url": "https://github.com/NINTING",
            "followers_url": "https://api.github.com/users/NINTING/followers",
            "following_url": "https://api.github.com/users/NINTING/following{/other_user}",
            "gists_url": "https://api.github.com/users/NINTING/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NINTING/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NINTING/subscriptions",
            "organizations_url": "https://api.github.com/users/NINTING/orgs",
            "repos_url": "https://api.github.com/users/NINTING/repos",
            "events_url": "https://api.github.com/users/NINTING/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NINTING/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-01T13:16:11Z",
        "updated_at": "2023-10-12T16:07:57Z",
        "closed_at": "2023-10-12T16:07:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nthe following is part of  the format code for PipelinePromptTemplate\r\n```python\r\ndef _get_inputs(inputs: dict, input_variables: List[str]) -> dict:\r\n    return {k: inputs[k] for k in input_variables}\r\nclass PipelinePromptTemplate(BasePromptTemplate):\r\n  ....\r\n  def format_prompt(self, **kwargs: Any) -> PromptValue:\r\n      for k, prompt in self.pipeline_prompts:\r\n          _inputs = _get_inputs(kwargs, prompt.input_variables)\r\n          if isinstance(prompt, BaseChatPromptTemplate):\r\n              kwargs[k] = prompt.format_messages(**_inputs)\r\n          else:\r\n              kwargs[k] = prompt.format(**_inputs)\r\n      _inputs = _get_inputs(kwargs, self.final_prompt.input_variables)\r\n      return self.final_prompt.format_prompt(**_inputs)\r\n```\r\nthe function _get_inputs should support miss keyword process\uff0clike:\r\n```python\r\ndef _get_inputs(inputs: dict, input_variables: List[str]) -> dict:\r\n    return {k: inputs.get(k) for k in input_variables}\r\n```\n\n### Motivation\n\nI primarily use the Jinja2 template format and frequently use control statements. Consequently, there are times when I choose not to pass in certain variables. Thus, I hope that PipelinePromptTemplate could support handling missing variables.\n\n### Your contribution\n\nPerhaps, I can submit a PR to add this feature or fix this bug . If you don't have the time to address it, that is.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7016/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7016/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7015",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7015/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7015/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7015/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7015",
        "id": 1783836724,
        "node_id": "PR_kwDOIPDwls5UZszP",
        "number": 7015,
        "title": "The Fellowship of the Vectors: New Embeddings Filter using clustering.",
        "user": {
            "login": "GMartin-dev",
            "id": 1821407,
            "node_id": "MDQ6VXNlcjE4MjE0MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1821407?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GMartin-dev",
            "html_url": "https://github.com/GMartin-dev",
            "followers_url": "https://api.github.com/users/GMartin-dev/followers",
            "following_url": "https://api.github.com/users/GMartin-dev/following{/other_user}",
            "gists_url": "https://api.github.com/users/GMartin-dev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GMartin-dev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GMartin-dev/subscriptions",
            "organizations_url": "https://api.github.com/users/GMartin-dev/orgs",
            "repos_url": "https://api.github.com/users/GMartin-dev/repos",
            "events_url": "https://api.github.com/users/GMartin-dev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GMartin-dev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-01T11:43:32Z",
        "updated_at": "2023-07-07T20:08:28Z",
        "closed_at": "2023-07-07T17:28:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7015",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7015",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7015.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7015.patch",
            "merged_at": "2023-07-07T17:28:18Z"
        },
        "body": "Continuing with Tolkien inspired series of langchain tools. I bring to you:\r\n**The Fellowship of the Vectors**, AKA EmbeddingsClusteringFilter.\r\nThis document filter uses embeddings to group vectors together into clusters, then allows you to pick an arbitrary number of documents vector based on proximity to the cluster centers. That's a representative sample of the cluster.\r\n\r\nThe original idea is from [Greg Kamradt](https://github.com/gkamradt) from this video (Level4):\r\nhttps://www.youtube.com/watch?v=qaPMdcCqtWk&t=365s\r\n\r\nI added few tricks to make it a bit more versatile, so you can parametrize what to do with duplicate documents in case of cluster overlap: replace the duplicates with the next closest document or remove it. This allow you to use it as an special kind of redundant filter too.\r\nAdditionally you can choose 2 diff orders:  grouped by cluster or respecting the original retriever scores.\r\nIn my use case I was using the docs grouped by cluster to run refine chains per cluster to generate summarization over a large corpus of documents.\r\nLet me know if you want to change anything!\r\n\r\n@rlancemartin, @eyurtsev, @hwchase17, \r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7015/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7015/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7014",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7014/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7014/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7014/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7014",
        "id": 1783782521,
        "node_id": "PR_kwDOIPDwls5UZg-2",
        "number": 7014,
        "title": "Support params on GoogleSearchApiWrapper (#6810)",
        "user": {
            "login": "skspark",
            "id": 118829871,
            "node_id": "U_kgDOBxUzLw",
            "avatar_url": "https://avatars.githubusercontent.com/u/118829871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skspark",
            "html_url": "https://github.com/skspark",
            "followers_url": "https://api.github.com/users/skspark/followers",
            "following_url": "https://api.github.com/users/skspark/following{/other_user}",
            "gists_url": "https://api.github.com/users/skspark/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skspark/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skspark/subscriptions",
            "organizations_url": "https://api.github.com/users/skspark/orgs",
            "repos_url": "https://api.github.com/users/skspark/repos",
            "events_url": "https://api.github.com/users/skspark/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skspark/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-01T10:23:48Z",
        "updated_at": "2023-07-02T07:18:39Z",
        "closed_at": "2023-07-02T07:18:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7014",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7014",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7014.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7014.patch",
            "merged_at": "2023-07-02T07:18:38Z"
        },
        "body": "## Description\r\nSupport search params in GoogleSearchApiWrapper's result call, for the extra filtering on search,\r\nto support extra query parameters that google cse provides:\r\nhttps://developers.google.com/custom-search/v1/reference/rest/v1/cse/list?hl=ko\r\n\r\n## Issue\r\n#6810 \r\n\r\n## Dependencies\r\nNone\r\n\r\n## Maintainer\r\n@dev2049 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7014/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7014/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7013",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7013/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7013/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7013/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7013",
        "id": 1783707603,
        "node_id": "PR_kwDOIPDwls5UZQDk",
        "number": 7013,
        "title": "Rm retriever kwargs",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-01T08:58:08Z",
        "updated_at": "2023-07-02T17:24:12Z",
        "closed_at": "2023-07-02T14:22:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7013",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7013",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7013.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7013.patch",
            "merged_at": "2023-07-02T14:22:25Z"
        },
        "body": "Doesn't actually limit the Retriever interface but hopefully in practice it does",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7013/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7013/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7012",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7012/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7012/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7012/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7012",
        "id": 1783704263,
        "node_id": "PR_kwDOIPDwls5UZPUh",
        "number": 7012,
        "title": "openapi chain nit",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-01T08:52:48Z",
        "updated_at": "2023-07-03T08:22:54Z",
        "closed_at": "2023-07-03T08:22:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7012",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7012",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7012.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7012.patch",
            "merged_at": "2023-07-03T08:22:53Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7012/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7012/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7011",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7011/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7011/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7011/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7011",
        "id": 1783681691,
        "node_id": "I_kwDOIPDwls5qUNKb",
        "number": 7011,
        "title": "How to save embeddings when using Agent for local document Q&A to avoid unnecessary waste by rereading API calls to generate embeddings",
        "user": {
            "login": "Lufffya",
            "id": 49063302,
            "node_id": "MDQ6VXNlcjQ5MDYzMzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/49063302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lufffya",
            "html_url": "https://github.com/Lufffya",
            "followers_url": "https://api.github.com/users/Lufffya/followers",
            "following_url": "https://api.github.com/users/Lufffya/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lufffya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lufffya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lufffya/subscriptions",
            "organizations_url": "https://api.github.com/users/Lufffya/orgs",
            "repos_url": "https://api.github.com/users/Lufffya/repos",
            "events_url": "https://api.github.com/users/Lufffya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lufffya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-01T08:31:43Z",
        "updated_at": "2023-10-07T16:05:17Z",
        "closed_at": "2023-10-07T16:05:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Attach my code\r\n\r\n```\r\nllm = OpenAI(model_name='gpt-4', temperature=0)\r\nembeddings = OpenAIEmbeddings(model='text-embedding-ada-002')\r\n\r\ndocs = TextLoader(\"state_of_the_union.txt\").load()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ntexts = text_splitter.split_documents(docs)\r\nstate_of_union_store = Chroma.from_documents(\r\n   texts, \r\n   embeddings, \r\n   collection_name=\"state-of-union\"\r\n   )\r\n\r\nvectorstore_info = VectorStoreInfo(\r\n   name=\"state_of_union_address\",\r\n   description=\"the most recent state of the Union adress\",\r\n   vectorstore=state_of_union_store,\r\n)\r\ntoolkit = VectorStoreToolkit(vectorstore_info=vectorstore_info)\r\nagent_executor = create_vectorstore_agent(llm=llm, toolkit=toolkit, verbose=True)\r\n\r\nagent_executor(\"What did biden say about ketanji brown jackson in the state of the union address?\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7011/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7011/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7010",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7010/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7010/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7010/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7010",
        "id": 1783670404,
        "node_id": "I_kwDOIPDwls5qUKaE",
        "number": 7010,
        "title": "How to add memory with` create_vectorstore_agent`",
        "user": {
            "login": "Lufffya",
            "id": 49063302,
            "node_id": "MDQ6VXNlcjQ5MDYzMzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/49063302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lufffya",
            "html_url": "https://github.com/Lufffya",
            "followers_url": "https://api.github.com/users/Lufffya/followers",
            "following_url": "https://api.github.com/users/Lufffya/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lufffya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lufffya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lufffya/subscriptions",
            "organizations_url": "https://api.github.com/users/Lufffya/orgs",
            "repos_url": "https://api.github.com/users/Lufffya/repos",
            "events_url": "https://api.github.com/users/Lufffya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lufffya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-01T08:18:12Z",
        "updated_at": "2023-10-07T16:05:22Z",
        "closed_at": "2023-10-07T16:05:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I want to add memory context for Agent, so I referred to the document [here](https://python.langchain.com/docs/modules/memory/how_to/agent_with_memory)\r\n\r\nThere is such a step in it\r\n![image](https://github.com/hwchase17/langchain/assets/49063302/17005b7e-05f1-47b5-9d41-9766601bf56e)\r\n\r\nI want to implement the same step in the `create_vectorstore_agent `function, \r\n![image](https://github.com/hwchase17/langchain/assets/49063302/a7491872-2d23-4a14-b0ca-6be987523ee1)\r\n\r\nbut I found that `create_vectorstore_agent `is a pre-defined, \r\nit has no way to pass some parameters, such as suffix(into `ZeroShotAgent.create_prompt`), \r\nwhich means, if I want to use the `agent_with_memory `function , \r\nI must build the agent from scratch, and cannot use `create_vectorstore_agent`\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7010/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7010/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7009",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7009/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7009/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7009/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7009",
        "id": 1783632265,
        "node_id": "I_kwDOIPDwls5qUBGJ",
        "number": 7009,
        "title": "python tool issue: NameError: name 're' is not defined",
        "user": {
            "login": "twtdata",
            "id": 138284319,
            "node_id": "U_kgDOCD4NHw",
            "avatar_url": "https://avatars.githubusercontent.com/u/138284319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/twtdata",
            "html_url": "https://github.com/twtdata",
            "followers_url": "https://api.github.com/users/twtdata/followers",
            "following_url": "https://api.github.com/users/twtdata/following{/other_user}",
            "gists_url": "https://api.github.com/users/twtdata/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/twtdata/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/twtdata/subscriptions",
            "organizations_url": "https://api.github.com/users/twtdata/orgs",
            "repos_url": "https://api.github.com/users/twtdata/repos",
            "events_url": "https://api.github.com/users/twtdata/events{/privacy}",
            "received_events_url": "https://api.github.com/users/twtdata/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-01T07:39:21Z",
        "updated_at": "2023-10-07T16:05:28Z",
        "closed_at": "2023-10-07T16:05:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI am using a create_pandas_dataframe_agent like so:\r\n\r\n```\r\ncreate_pandas_dataframe_agent(ChatOpenAI(model_name='gpt-4', temperature=0), df, verbose=True,\r\n                                         max_iterations=2,\r\n                                         early_stopping_method=\"generate\",\r\n                                         handle_parsing_errors=\"I'm sorry, but the question you have asked is not available within the dataset. Is there anything else I can help you with?\")\r\n```\r\n\r\nWhen I try to prompt it to do anything that requires a regex the output i get:\r\n\r\n```\r\nThought: The client wants to know the top 5 hashtags used in the tweets. To find this, I need to extract all the hashtags from the 'full_text' column of the dataframe, count the frequency of each hashtag, and then return the top 5. However, the dataframe does not contain a column for hashtags. Therefore, I need to create a new column 'hashtags' in the dataframe where each entry is a list of hashtags found in the corresponding 'full_text'. Then, I can count the frequency of each hashtag in this new column and return the top 5.\r\n\r\nAction: python_repl_ast\r\nAction Input:\r\n```python\r\nimport re\r\nimport pandas as pd\r\n\r\n# Function to extract hashtags from a text\r\ndef extract_hashtags(text):\r\n    return re.findall(r'\\#\\w+', text)\r\n\r\n# Create a new column 'hashtags' in the dataframe\r\ndf['hashtags'] = df['full_text'].apply(extract_hashtags)\r\n\r\n# Flatten the list of hashtags and count the frequency of each hashtag\r\nhashtag_counts = pd.Series([hashtag for hashtags in df['hashtags'] for hashtag in hashtags]).value_counts()\r\n\r\n# Get the top 5 hashtags\r\ntop_5_hashtags = hashtag_counts.head(5)\r\n\r\ntop_5_hashtags\r\n```\r\n\r\n**Observation: NameError: name 're' is not defined**\r\n```\r\n\r\nCan anyone help?\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nuse this agent:\r\ncreate_pandas_dataframe_agent(ChatOpenAI(model_name='gpt-4', temperature=0), df, verbose=True,\r\n                                         max_iterations=2,\r\n                                         early_stopping_method=\"generate\",\r\n                                         handle_parsing_errors=\"I'm sorry, but the question you have asked is not available within the dataset. Is there anything else I can help you with?\")\r\n\r\nthen prompt it with\r\n\r\ntop 5 hashtags used\n\n### Expected behavior\n\nthe regex should work and return the answer",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7009/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7009/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7008",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7008/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7008/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7008/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7008",
        "id": 1783615598,
        "node_id": "PR_kwDOIPDwls5UY7PD",
        "number": 7008,
        "title": "docs: Fix wrong usage code",
        "user": {
            "login": "100gle",
            "id": 36526527,
            "node_id": "MDQ6VXNlcjM2NTI2NTI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/36526527?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/100gle",
            "html_url": "https://github.com/100gle",
            "followers_url": "https://api.github.com/users/100gle/followers",
            "following_url": "https://api.github.com/users/100gle/following{/other_user}",
            "gists_url": "https://api.github.com/users/100gle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/100gle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/100gle/subscriptions",
            "organizations_url": "https://api.github.com/users/100gle/orgs",
            "repos_url": "https://api.github.com/users/100gle/repos",
            "events_url": "https://api.github.com/users/100gle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/100gle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-01T07:14:48Z",
        "updated_at": "2023-07-01T07:21:06Z",
        "closed_at": "2023-07-01T07:20:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7008",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7008",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7008.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7008.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nIn the latest langchain version, the `predict()` method seems to be deprecated. Now we just call LLM object again to send some prompt or content as the changes shown.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7008/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7008/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7006",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7006/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7006/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7006/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7006",
        "id": 1783593724,
        "node_id": "PR_kwDOIPDwls5UY2aY",
        "number": 7006,
        "title": "Remove duplicate mongodb integration doc",
        "user": {
            "login": "adam91holt",
            "id": 9592417,
            "node_id": "MDQ6VXNlcjk1OTI0MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9592417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adam91holt",
            "html_url": "https://github.com/adam91holt",
            "followers_url": "https://api.github.com/users/adam91holt/followers",
            "following_url": "https://api.github.com/users/adam91holt/following{/other_user}",
            "gists_url": "https://api.github.com/users/adam91holt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adam91holt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adam91holt/subscriptions",
            "organizations_url": "https://api.github.com/users/adam91holt/orgs",
            "repos_url": "https://api.github.com/users/adam91holt/repos",
            "events_url": "https://api.github.com/users/adam91holt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adam91holt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-01T06:44:13Z",
        "updated_at": "2023-07-03T20:29:50Z",
        "closed_at": "2023-07-03T08:23:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7006",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7006",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7006.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7006.patch",
            "merged_at": "2023-07-03T08:23:34Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: Removes MongoDB Atlas duplicate entry in the docs\r\n  - Twitter handle: @adam91holt\r\n\r\n\r\nMaintainer responsibilities:\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7006/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7006/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7005",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7005/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7005/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7005/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7005",
        "id": 1783565603,
        "node_id": "PR_kwDOIPDwls5UYwBj",
        "number": 7005,
        "title": "Update get_started.mdx",
        "user": {
            "login": "joaomsimoes",
            "id": 77450786,
            "node_id": "MDQ6VXNlcjc3NDUwNzg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/77450786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joaomsimoes",
            "html_url": "https://github.com/joaomsimoes",
            "followers_url": "https://api.github.com/users/joaomsimoes/followers",
            "following_url": "https://api.github.com/users/joaomsimoes/following{/other_user}",
            "gists_url": "https://api.github.com/users/joaomsimoes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joaomsimoes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joaomsimoes/subscriptions",
            "organizations_url": "https://api.github.com/users/joaomsimoes/orgs",
            "repos_url": "https://api.github.com/users/joaomsimoes/repos",
            "events_url": "https://api.github.com/users/joaomsimoes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joaomsimoes/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-01T06:11:27Z",
        "updated_at": "2023-07-03T08:23:13Z",
        "closed_at": "2023-07-03T08:23:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7005",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7005",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7005.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7005.patch",
            "merged_at": "2023-07-03T08:23:13Z"
        },
        "body": "typo in chat = ChatOpenAI(open_api_key=\"...\") should be openai_api_key\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7005/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7005/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7004",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7004/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7004/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7004/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7004",
        "id": 1783463930,
        "node_id": "I_kwDOIPDwls5qTX_6",
        "number": 7004,
        "title": "ElasticSearch embedding need a function to add single text string as AzureOpenAI only support single text input now",
        "user": {
            "login": "jasoncaojingren",
            "id": 49200785,
            "node_id": "MDQ6VXNlcjQ5MjAwNzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/49200785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasoncaojingren",
            "html_url": "https://github.com/jasoncaojingren",
            "followers_url": "https://api.github.com/users/jasoncaojingren/followers",
            "following_url": "https://api.github.com/users/jasoncaojingren/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasoncaojingren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasoncaojingren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasoncaojingren/subscriptions",
            "organizations_url": "https://api.github.com/users/jasoncaojingren/orgs",
            "repos_url": "https://api.github.com/users/jasoncaojingren/repos",
            "events_url": "https://api.github.com/users/jasoncaojingren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasoncaojingren/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-01T03:54:40Z",
        "updated_at": "2023-10-07T16:05:33Z",
        "closed_at": "2023-10-07T16:05:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nElasticSearch embedding need a function to add single text string as Azure OpenAI only support single text input now.\r\n\r\nMessage from Azure OpenAI Embedding:\r\n\r\nembed_documents(texts)\r\n\r\n    # openai.error.InvalidRequestError: Too many inputs for model None.\r\n    # The max number of inputs is 1.  We hope to increase the number of inputs per request soon.\r\n    # Please contact us through an Azure support request at: https://go.microsoft.com/fwlink/?linkid=2213926 for further questions.\n\n### Motivation\n\nTo support to use Azure OpenAI embedding API\n\n### Your contribution\n\nI can do more test after if this fixed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7004/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7004/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7003",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7003/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7003/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7003/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7003",
        "id": 1783422507,
        "node_id": "PR_kwDOIPDwls5UYPP7",
        "number": 7003,
        "title": "Persist chroma db",
        "user": {
            "login": "rjarun8",
            "id": 50106442,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjUwMTA2NDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/50106442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjarun8",
            "html_url": "https://github.com/rjarun8",
            "followers_url": "https://api.github.com/users/rjarun8/followers",
            "following_url": "https://api.github.com/users/rjarun8/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjarun8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjarun8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjarun8/subscriptions",
            "organizations_url": "https://api.github.com/users/rjarun8/orgs",
            "repos_url": "https://api.github.com/users/rjarun8/repos",
            "events_url": "https://api.github.com/users/rjarun8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjarun8/received_events",
            "type": "Organization",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-07-01T03:24:18Z",
        "updated_at": "2023-07-07T17:26:47Z",
        "closed_at": "2023-07-07T17:26:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7003",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7003",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7003.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7003.patch",
            "merged_at": null
        },
        "body": "Description:\r\nI have made changes to the Chroma DB Vector Store Wrapper to accept a persistent directory from client settings.\r\n\r\nIssue: \r\nhttps://github.com/hwchase17/langchain/issues/6938\r\n\r\nDependencies:\r\nNone\r\n\r\nTag maintainer: @rlancemartin, @eyurtsev \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7003/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7003/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7002",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7002/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7002/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7002/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7002",
        "id": 1783366350,
        "node_id": "I_kwDOIPDwls5qTALO",
        "number": 7002,
        "title": "FAISS Support for filter while using the as_retriever()",
        "user": {
            "login": "geg00",
            "id": 10646838,
            "node_id": "MDQ6VXNlcjEwNjQ2ODM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/10646838?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/geg00",
            "html_url": "https://github.com/geg00",
            "followers_url": "https://api.github.com/users/geg00/followers",
            "following_url": "https://api.github.com/users/geg00/following{/other_user}",
            "gists_url": "https://api.github.com/users/geg00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/geg00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/geg00/subscriptions",
            "organizations_url": "https://api.github.com/users/geg00/orgs",
            "repos_url": "https://api.github.com/users/geg00/repos",
            "events_url": "https://api.github.com/users/geg00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/geg00/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-01T02:31:45Z",
        "updated_at": "2023-10-07T16:05:38Z",
        "closed_at": "2023-10-07T16:05:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\n[https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss](https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss)\r\n\r\nThere's a section that allows you to filter the documents stored in FAISS\r\nIt will be cool to allow\r\nresults = db.similarity_search(\"foo\", filter=dict(page=1), k=1, fetch_k=4)\r\nwhen you are doing \r\nvectorstore.as_retriever(<<Include the filter here>>)\r\nThis can allow you to select a subset of your vector documents to chat with them.\r\n\r\nThis is if I have multiple documents from multiple sources loaded in the vectorstroe.\r\n\n\n### Motivation\n\nWhen I do a conversational\r\n\r\n\r\n            qa = ConversationalRetrievalChain(\r\n                    retriever=vector..as_retriever(), ...\r\n\r\nIf allow to use only a portion of the document \r\n\r\n\r\n            qa = ConversationalRetrievalChain(\r\n                    retriever=vector.as_retriever(<<Filter goes here>>>), ...\r\n\r\n\n\n### Your contribution\n\nI can test it :-) ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7002/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7002/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7001",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7001/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7001/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7001/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7001",
        "id": 1783315774,
        "node_id": "I_kwDOIPDwls5qSz0-",
        "number": 7001,
        "title": "Bug of csv agent, basically all query failed with json error",
        "user": {
            "login": "yockgen",
            "id": 38022976,
            "node_id": "MDQ6VXNlcjM4MDIyOTc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/38022976?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yockgen",
            "html_url": "https://github.com/yockgen",
            "followers_url": "https://api.github.com/users/yockgen/followers",
            "following_url": "https://api.github.com/users/yockgen/following{/other_user}",
            "gists_url": "https://api.github.com/users/yockgen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yockgen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yockgen/subscriptions",
            "organizations_url": "https://api.github.com/users/yockgen/orgs",
            "repos_url": "https://api.github.com/users/yockgen/repos",
            "events_url": "https://api.github.com/users/yockgen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yockgen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-07-01T01:11:10Z",
        "updated_at": "2023-11-06T12:40:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython version: Python 3.10.6\r\nLangchain version:  0.0.219\r\nOS: Ubuntu 22.04\r\n\n\n### Who can help?\n\n@eyurtsev\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI've simple code like this\r\n```\r\nfrom langchain.agents import create_csv_agent\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.agents.agent_types import AgentType\r\nimport os\r\nimport sys\r\n\r\ndirectory = './test'\r\n\r\nf = []\r\nfor filename in os.listdir(directory):\r\n    if filename.endswith(\".csv\"):\r\n        f.append(directory + \"/\" +filename)\r\n\r\nagent = create_csv_agent(\r\n    ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\"),\r\n    f,\r\n    verbose=True,\r\n    agent_type=AgentType.OPENAI_FUNCTIONS,\r\n)\r\n\r\nqry =\"how many rows are there?\"\r\n\r\nwhile True:\r\n  if not qry:\r\n    qry = input(\"Q: \")\r\n  if qry in ['quit', 'q', 'exit']:\r\n    sys.exit()\r\n\r\n  agent.run(qry)\r\n  qry = None\r\n```\r\nI'm using titanic dataset\r\n```\r\nhttps://github.com/datasciencedojo/datasets/blob/master/titanic.csv\r\n```\r\n\r\nError as below\r\n```\r\n$ python3 langchain-csv.py\r\n\r\n\r\n> Entering new  chain...\r\nTraceback (most recent call last):\r\n  File \"/home/yockgenm/.local/lib/python3.10/site-packages/langchain/agents/openai_functions_agent/base.py\", line 112, in _parse_ai_message\r\n    _tool_input = json.loads(function_call[\"arguments\"])\r\n  File \"/usr/lib/python3.10/json/__init__.py\", line 346, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/usr/lib/python3.10/json/decoder.py\", line 337, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/usr/lib/python3.10/json/decoder.py\", line 355, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/data/mytuition/langchain-csv.py\", line 32, in <module>\r\n    agent.run(qry)\r\n  File \"/home/yockgenm/.local/lib/python3.10/site-packages/langchain/chains/base.py\", line 290, in run\r\n    return self(args[0], callbacks=callbacks, tags=tags)[_output_key]\r\n  File \"/home/yockgenm/.local/lib/python3.10/site-packages/langchain/chains/base.py\", line 166, in __call__\r\n    raise e\r\n  File \"/home/yockgenm/.local/lib/python3.10/site-packages/langchain/chains/base.py\", line 160, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"/home/yockgenm/.local/lib/python3.10/site-packages/langchain/agents/agent.py\", line 987, in _call\r\n    next_step_output = self._take_next_step(\r\n  File \"/home/yockgenm/.local/lib/python3.10/site-packages/langchain/agents/agent.py\", line 803, in _take_next_step\r\n    raise e\r\n  File \"/home/yockgenm/.local/lib/python3.10/site-packages/langchain/agents/agent.py\", line 792, in _take_next_step\r\n    output = self.agent.plan(\r\n  File \"/home/yockgenm/.local/lib/python3.10/site-packages/langchain/agents/openai_functions_agent/base.py\", line 212, in plan\r\n    agent_decision = _parse_ai_message(predicted_message)\r\n  File \"/home/yockgenm/.local/lib/python3.10/site-packages/langchain/agents/openai_functions_agent/base.py\", line 114, in _parse_ai_message\r\n    raise OutputParserException(\r\nlangchain.schema.OutputParserException: Could not parse tool input: {'name': 'python', 'arguments': 'len(df)'} because the `arguments` is not valid JSON.\r\n\r\n```\r\n\r\n\n\n### Expected behavior\n\nLangchain provided answer of total row",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7001/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7001/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7000",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7000/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7000/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7000/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7000",
        "id": 1783303990,
        "node_id": "PR_kwDOIPDwls5UX0Xm",
        "number": 7000,
        "title": "Create arize_llm_observability.ipynb",
        "user": {
            "login": "hakantekgul",
            "id": 14350521,
            "node_id": "MDQ6VXNlcjE0MzUwNTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/14350521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hakantekgul",
            "html_url": "https://github.com/hakantekgul",
            "followers_url": "https://api.github.com/users/hakantekgul/followers",
            "following_url": "https://api.github.com/users/hakantekgul/following{/other_user}",
            "gists_url": "https://api.github.com/users/hakantekgul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hakantekgul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hakantekgul/subscriptions",
            "organizations_url": "https://api.github.com/users/hakantekgul/orgs",
            "repos_url": "https://api.github.com/users/hakantekgul/repos",
            "events_url": "https://api.github.com/users/hakantekgul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hakantekgul/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-01T00:50:40Z",
        "updated_at": "2023-07-05T19:55:48Z",
        "closed_at": "2023-07-05T19:55:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7000",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7000",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7000.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7000.patch",
            "merged_at": "2023-07-05T19:55:48Z"
        },
        "body": "Adding documentation and notebook for Arize callback handler. \r\n\r\n  - @dev2049\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7000/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7000/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6999",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6999/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6999/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6999/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6999",
        "id": 1783222113,
        "node_id": "I_kwDOIPDwls5qSc9h",
        "number": 6999,
        "title": "Unable to load OPENAI Embeddings",
        "user": {
            "login": "HasaanIjaz",
            "id": 80366914,
            "node_id": "MDQ6VXNlcjgwMzY2OTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/80366914?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HasaanIjaz",
            "html_url": "https://github.com/HasaanIjaz",
            "followers_url": "https://api.github.com/users/HasaanIjaz/followers",
            "following_url": "https://api.github.com/users/HasaanIjaz/following{/other_user}",
            "gists_url": "https://api.github.com/users/HasaanIjaz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HasaanIjaz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HasaanIjaz/subscriptions",
            "organizations_url": "https://api.github.com/users/HasaanIjaz/orgs",
            "repos_url": "https://api.github.com/users/HasaanIjaz/repos",
            "events_url": "https://api.github.com/users/HasaanIjaz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HasaanIjaz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T22:26:08Z",
        "updated_at": "2023-10-06T16:05:33Z",
        "closed_at": "2023-10-06T16:05:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nMost recent versions of all\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @agola11 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [x] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n    from langchain.embeddings.openai import OpenAIEmbeddings\r\n  File \"C:\\Users\\hasaa\\anaconda3\\lib\\site-packages\\langchain\\__init__.py\", line 6, in <module>\r\n    from langchain.agents import MRKLChain, ReActChain, SelfAskWithSearchChain\r\n  File \"C:\\Users\\hasaa\\anaconda3\\lib\\site-packages\\langchain\\agents\\__init__.py\", line 2, in <module>\r\n    from langchain.agents.agent import (\r\n  File \"C:\\Users\\hasaa\\anaconda3\\lib\\site-packages\\langchain\\agents\\agent.py\", line 30, in <module>\r\n    from langchain.prompts.few_shot import FewShotPromptTemplate\r\n  File \"C:\\Users\\hasaa\\anaconda3\\lib\\site-packages\\langchain\\prompts\\__init__.py\", line 12, in <module>\r\n    from langchain.prompts.example_selector import (\r\n  File \"C:\\Users\\hasaa\\anaconda3\\lib\\site-packages\\langchain\\prompts\\example_selector\\__init__.py\", line 4, in <module>\r\n    from langchain.prompts.example_selector.semantic_similarity import (\r\n  File \"C:\\Users\\hasaa\\anaconda3\\lib\\site-packages\\langchain\\prompts\\example_selector\\semantic_similarity.py\", line 10, in <module>\r\n    from langchain.vectorstores.base import VectorStore\r\n  File \"C:\\Users\\hasaa\\anaconda3\\lib\\site-packages\\langchain\\vectorstores\\__init__.py\", line 2, in <module>\r\n    from langchain.vectorstores.alibabacloud_opensearch import (\r\n  File \"C:\\Users\\hasaa\\anaconda3\\lib\\site-packages\\langchain\\vectorstores\\alibabacloud_opensearch.py\", line 9, in <module>\r\n    from langchain.vectorstores.base import VectorStore\r\n  File \"C:\\Users\\hasaa\\anaconda3\\lib\\site-packages\\langchain\\vectorstores\\base.py\", line 372, in <module>\r\n    class VectorStoreRetriever(BaseRetriever, BaseModel):\r\n  File \"C:\\Users\\hasaa\\anaconda3\\lib\\site-packages\\langchain\\vectorstores\\base.py\", line 388, in VectorStoreRetriever\r\n    def validate_search_type(cls, values: Dict) -> Dict:\r\n  File \"pydantic\\class_validators.py\", line 126, in pydantic.class_validators.root_validator.dec\r\n  File \"pydantic\\class_validators.py\", line 144, in pydantic.class_validators._prepare_validator\r\npydantic.errors.ConfigError: duplicate validator function \"langchain.vectorstores.base.VectorStoreRetriever.validate_search_type\"; if this is intended, set `allow_reuse=True`\r\n\r\n### Expected behavior\r\n\r\nThe error I am facing is due to a duplicate validator function in the VectorStoreRetriever",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6999/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6999/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6998",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6998/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6998/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6998/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6998",
        "id": 1783160731,
        "node_id": "I_kwDOIPDwls5qSN-b",
        "number": 6998,
        "title": "DOC: <Please write a comprehensive title after the 'DOC: ' prefix>",
        "user": {
            "login": "Travis-Barton",
            "id": 39603097,
            "node_id": "MDQ6VXNlcjM5NjAzMDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/39603097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Travis-Barton",
            "html_url": "https://github.com/Travis-Barton",
            "followers_url": "https://api.github.com/users/Travis-Barton/followers",
            "following_url": "https://api.github.com/users/Travis-Barton/following{/other_user}",
            "gists_url": "https://api.github.com/users/Travis-Barton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Travis-Barton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Travis-Barton/subscriptions",
            "organizations_url": "https://api.github.com/users/Travis-Barton/orgs",
            "repos_url": "https://api.github.com/users/Travis-Barton/repos",
            "events_url": "https://api.github.com/users/Travis-Barton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Travis-Barton/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-30T20:58:25Z",
        "updated_at": "2023-06-30T21:02:55Z",
        "closed_at": "2023-06-30T21:02:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nYou can get chat completions by passing one or more messages to the chat model. The response will be a message. The types of messages currently supported in LangChain are AIMessage, HumanMessage, SystemMessage, and ChatMessage -- ChatMessage takes in an arbitrary role parameter. Most of the time, you'll just be dealing with HumanMessage, AIMessage, and SystemMessage.\r\n```\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.schema import (\r\n    AIMessage,\r\n    HumanMessage,\r\n    SystemMessage\r\n)\r\n\r\nchat = ChatOpenAI(temperature=0)\r\nchat.predict_messages([HumanMessage(content=\"Translate this sentence from English to French. I love programming.\")])\r\n# >> AIMessage(content=\"J'aime programmer.\", additional_kwargs={})\r\n```\r\n\r\nIt is useful to understand how chat models are different from a normal LLM, but it can often be handy to just be able to treat them the same. LangChain makes that easy by also exposing an interface through which you can interact with a chat model as you would a normal LLM. You can access this through the predict interface.\r\n```\r\nchat.predict(\"Translate this sentence from English to French. I love programming.\")\r\n# >> J'aime programmer\r\n```\n\n### Idea or request for content:\n\nThis code gives me the error:\r\n```\r\nAttributeError: 'ChatOpenAI' object has no attribute 'predict'\r\n```\r\nIs there really an exposed interface for predict?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6998/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6998/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6997",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6997/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6997/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6997/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6997",
        "id": 1783124885,
        "node_id": "I_kwDOIPDwls5qSFOV",
        "number": 6997,
        "title": "GoogleDriveLoader: AttributeError: 'Credentials' object has no attribute 'with_scopes'",
        "user": {
            "login": "chrisedington",
            "id": 2725500,
            "node_id": "MDQ6VXNlcjI3MjU1MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2725500?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisedington",
            "html_url": "https://github.com/chrisedington",
            "followers_url": "https://api.github.com/users/chrisedington/followers",
            "following_url": "https://api.github.com/users/chrisedington/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisedington/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisedington/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisedington/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisedington/orgs",
            "repos_url": "https://api.github.com/users/chrisedington/repos",
            "events_url": "https://api.github.com/users/chrisedington/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisedington/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-30T20:25:55Z",
        "updated_at": "2023-07-05T18:00:02Z",
        "closed_at": "2023-07-05T18:00:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nMacbook OSX\r\nPython 3.11.4 (main, Jun 25 2023, 18:18:14) [Clang 14.0.3 (clang-1403.0.22.14.1)] on darwin\r\nLangChain Environment:\r\nsdk_version:0.0.17\r\nlibrary:langchainplus_sdk\r\nplatform:macOS-13.3.1-arm64-arm-64bit\r\nruntime:python\r\nruntime_version:3.11.4\r\n\r\nI'm getting this error, and no matter what configurations I try, I cannot get past it.\r\n\r\n```\r\nAttributeError: 'Credentials' object has no attribute 'with_scopes'\r\n```\r\n\r\nMy abbreviated code snippet:\r\n\r\n```\r\nfrom langchain.document_loaders import GoogleDriveLoader\r\nloader = GoogleDriveLoader(\r\n    folder_id=\"xxxx\",    recursive=True,\r\n)\r\n\r\ndocs = loader.load()\r\n```\r\n\r\n```\r\ncat ~/.credentials/credentials.json\r\n{\r\n  \"installed\": {\r\n    \"client_id\": \"xxxxxxxxx.apps.googleusercontent.com\",\r\n    \"project_id\": \"xxxxxxxxx\",\r\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\r\n    \"token_uri\": \"https://oauth2.googleapis.com/token\",\r\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\r\n    \"client_secret\": \"xxxxxxxxx\",\r\n    \"redirect_uris\": [\r\n      \"http://localhost\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n```\r\n#gcloud info\r\n\r\nGoogle Cloud SDK [437.0.1]\r\n\r\nPlatform: [Mac OS X, arm] uname_result(system='Darwin', node='xxxxs-MBP-3', release='22.4.0', version='Darwin Kernel Version 22.4.0: Mon Mar  6 20:59:28 PST 2023; root:xnu-8796.101.5~3/RELEASE_ARM64_T6000', machine='arm64')\r\nLocale: (None, 'UTF-8')\r\nPython Version: [3.11.4 (main, Jun 25 2023, 18:18:14) [Clang 14.0.3 (clang-1403.0.22.14.1)]]\r\nPython Location: [/Users/xxxx/.asdf/installs/python/3.11.4/bin/python3]\r\nOpenSSL: [OpenSSL 1.1.1u  30 May 2023]\r\nRequests Version: [2.25.1]\r\nurllib3 Version: [1.26.9]\r\nDefault CA certs file: [/Users/xxxx/google-cloud-sdk/lib/third_party/certifi/cacert.pem]\r\nSite Packages: [Disabled]\r\n\r\nInstallation Root: [/Users/xxxx/google-cloud-sdk]\r\nInstalled Components:\r\n  gsutil: [5.24]\r\n  core: [2023.06.30]\r\n  bq: [2.0.93]\r\n  gcloud-crc32c: [1.0.0]\r\nSystem PATH: [/Users/xxxx/.asdf/plugins/python/shims:/Users/xxxx/.asdf/installs/python/3.11.4/bin:/Users/xxxx/.rvm/gems/ruby-3.0.3/bin:/Users/xxxx/.rvm/gems/ruby-3.0.3@global/bin:/Users/xxxx/.rvm/rubies/ruby-3.0.3/bin:/Users/xxxx/.rvm/bin:/Users/xxxx/google-cloud-sdk/bin:/Users/xxxx/.asdf/shims:/opt/homebrew/opt/asdf/libexec/bin:/Users/xxxx/.sdkman/candidates/gradle/current/bin:/Users/xxxx/.jenv/shims:/Users/xxxx/.jenv/bin:/Users/xxxx/.nvm/versions/node/v17.6.0/bin:/opt/homebrew/opt/mysql@5.7/bin:/opt/homebrew/opt/mysql-client/bin:/opt/homebrew/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/Apple/usr/bin:/Applications/Postgres.app/Contents/Versions/latest/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/xxxx/Library/Android/sdk/emulator:/Users/xxxx/Library/Android/sdk/platform-tools]\r\nPython PATH: [/Users/xxxx/google-cloud-sdk/lib/third_party:/Users/xxxx/google-cloud-sdk/lib:/Users/xxxx/.asdf/installs/python/3.11.4/lib/python311.zip:/Users/xxxx/.asdf/installs/python/3.11.4/lib/python3.11:/Users/xxxx/.asdf/installs/python/3.11.4/lib/python3.11/lib-dynload]\r\nCloud SDK on PATH: [True]\r\nKubectl on PATH: [/usr/local/bin/kubectl]\r\n\r\nInstallation Properties: [/Users/xxxx/google-cloud-sdk/properties]\r\nUser Config Directory: [/Users/xxx/.config/gcloud]\r\nActive Configuration Name: [default]\r\nActive Configuration Path: [/Users/xxxx/.config/gcloud/configurations/config_default]\r\n\r\nAccount: [xxxxxx@xxx.com]\r\nProject: [project-name-replaced]\r\n\r\nCurrent Properties:\r\n  [compute]\r\n    zone: [europe-west1-b] (property file)\r\n    region: [europe-west1] (property file)\r\n  [core]\r\n    account: [xxxxxx@xxx.com] (property file)\r\n    disable_usage_reporting: [True] (property file)\r\n    project: [project-name-replaced] (property file)\r\n\r\nLogs Directory: [/Users/xxx/.config/gcloud/logs]\r\nLast Log File: [/Users/xxx/.config/gcloud/logs/xxxx.log]\r\n\r\ngit: [git version 2.39.2]\r\nssh: [OpenSSH_9.0p1, LibreSSL 3.3.6]\r\n```\r\n\r\n\n\n### Who can help?\n\n@eyurtsev I think?\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nIt's happening with a base app, nothing special. Using this template:\r\n\r\nhttps://github.com/hwchase17/langchain-streamlit-template\n\n### Expected behavior\n\nExpected to get the oAuth window?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6997/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6997/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6996",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6996/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6996/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6996/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6996",
        "id": 1783082367,
        "node_id": "PR_kwDOIPDwls5UXEBB",
        "number": 6996,
        "title": "Remove Promptlayer Notebook",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T19:51:57Z",
        "updated_at": "2023-06-30T21:39:06Z",
        "closed_at": "2023-06-30T21:30:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6996",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6996",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6996.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6996.patch",
            "merged_at": "2023-06-30T21:30:24Z"
        },
        "body": "It's breaking our docs build",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6996/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6996/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6995",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6995/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6995/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6995/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6995",
        "id": 1783030624,
        "node_id": "PR_kwDOIPDwls5UW40_",
        "number": 6995,
        "title": "move base prompt to schema",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T19:01:38Z",
        "updated_at": "2023-07-03T02:39:01Z",
        "closed_at": "2023-07-03T02:39:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6995",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6995",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6995.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6995.patch",
            "merged_at": "2023-07-03T02:39:00Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6995/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6995/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6994",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6994/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6994/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6994/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6994",
        "id": 1783018334,
        "node_id": "PR_kwDOIPDwls5UW2BE",
        "number": 6994,
        "title": "Harrison/docs combine document chain",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T18:55:09Z",
        "updated_at": "2023-07-04T18:51:06Z",
        "closed_at": "2023-07-04T18:51:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6994",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6994",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6994.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6994.patch",
            "merged_at": "2023-07-04T18:51:04Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6994/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6994/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6993",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6993/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6993/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6993/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6993",
        "id": 1783014565,
        "node_id": "I_kwDOIPDwls5qRqSl",
        "number": 6993,
        "title": "HuggingFaceTextGenInference does not accept 0 temperature",
        "user": {
            "login": "maxmealy",
            "id": 11277856,
            "node_id": "MDQ6VXNlcjExMjc3ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11277856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maxmealy",
            "html_url": "https://github.com/maxmealy",
            "followers_url": "https://api.github.com/users/maxmealy/followers",
            "following_url": "https://api.github.com/users/maxmealy/following{/other_user}",
            "gists_url": "https://api.github.com/users/maxmealy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maxmealy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maxmealy/subscriptions",
            "organizations_url": "https://api.github.com/users/maxmealy/orgs",
            "repos_url": "https://api.github.com/users/maxmealy/repos",
            "events_url": "https://api.github.com/users/maxmealy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maxmealy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-30T18:51:33Z",
        "updated_at": "2023-09-29T16:20:59Z",
        "closed_at": "2023-09-29T16:20:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n\r\nrunning google/flan-tf-xxl on ghcr.io/huggingface/text-generation-inference:0.8\r\n\r\nlangchain==0.0.220\r\ntext-generation==0.6.0\n\n### Who can help?\n\n@hwchase17 \r\n@agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [x] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n`HuggingFaceTextGenInference` does not accept a temperature parameter of 0 or None.\r\n\r\n```\r\nllm = HuggingFaceTextGenInference(\r\n    inference_server_url=\"http://localhost:8010/\",\r\n    temperature=0.\r\n)\r\nllm(\"What did foo say about bar?\")\r\n```\r\n\r\nValidationError: `temperature` must be strictly positive\r\n\r\n\r\n```\r\nllm = HuggingFaceTextGenInference(\r\n    inference_server_url=\"http://localhost:8010/\",\r\n    temperature=None\r\n)\r\nllm(\"What did foo say about bar?\")\r\n```\r\n\r\nValidationError: 1 validation error for HuggingFaceTextGenInference\r\ntemperature none is not an allowed value (type=type_error.none.not_allowed)\n\n### Expected behavior\n\nI expect to be able to pass a parameter to `HuggingFaceTextGenInference` that instructs the model to do greedy decoding without getting an error.\r\n\r\nIt seems like the issue is that LangChain enforces that temperature be an integer while the text-generation [client requires temperature](https://github.com/huggingface/text-generation-inference/blob/main/clients/python/text_generation/types.py#L74C4-L74C4) be None for greedy decoding or >0 for sampling.\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6993/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6993/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6992",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6992/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6992/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6992/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6992",
        "id": 1782988773,
        "node_id": "PR_kwDOIPDwls5UWvhd",
        "number": 6992,
        "title": "Replace JIRA Arbitrary Code Execution vulnerability with finer grain API wrapper",
        "user": {
            "login": "JamalRahman",
            "id": 12476255,
            "node_id": "MDQ6VXNlcjEyNDc2MjU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12476255?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JamalRahman",
            "html_url": "https://github.com/JamalRahman",
            "followers_url": "https://api.github.com/users/JamalRahman/followers",
            "following_url": "https://api.github.com/users/JamalRahman/following{/other_user}",
            "gists_url": "https://api.github.com/users/JamalRahman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JamalRahman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JamalRahman/subscriptions",
            "organizations_url": "https://api.github.com/users/JamalRahman/orgs",
            "repos_url": "https://api.github.com/users/JamalRahman/repos",
            "events_url": "https://api.github.com/users/JamalRahman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JamalRahman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-30T18:28:53Z",
        "updated_at": "2023-11-17T16:40:22Z",
        "closed_at": "2023-07-05T19:56:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6992",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6992",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6992.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6992.patch",
            "merged_at": "2023-07-05T19:56:01Z"
        },
        "body": "This fixes #4833 and the critical vulnerability https://nvd.nist.gov/vuln/detail/CVE-2023-34540\r\n\r\nPreviously, the JIRA API Wrapper had a mode that simply pipelined user input into an `exec()` function.\r\n[The intended use of the 'other' mode is to cover any of Atlassian's API that don't have an existing interface](https://github.com/hwchase17/langchain/blob/cc33bde74ff2e050a400e4451e04ff5b32c4a7bd/langchain/tools/jira/prompt.py#L24)\r\n\r\nFortunately all of the [Atlassian JIRA API methods are subfunctions of their `Jira` class](https://atlassian-python-api.readthedocs.io/jira.html), so this implementation calls these subfunctions directly.\r\n\r\nAs well as passing a string representation of the function to call, the implementation flexibly allows for optionally passing args and/or keyword-args. These are given as part of the dictionary input. Example:\r\n```\r\n    {\r\n        \"function\": \"update_issue_field\",   #function to execute\r\n        \"args\": [                           #list of ordered args similar to other examples in this JiraAPIWrapper\r\n            \"key\",\r\n            {\"summary\": \"New summary\"}\r\n        ],\r\n        \"kwargs\": {}                        #dict of key value keyword-args pairs\r\n    }\r\n```\r\n\r\nthe above is equivalent to `self.jira.update_issue_field(\"key\", {\"summary\": \"New summary\"})`\r\n\r\nAlternate query schema designs are welcome to make querying easier without passing and evaluating arbitrary python code. I considered parsing (without evaluating) input python code and extracting the function, args, and kwargs from there and then pipelining them into the callable function via `*f(args, **kwargs)` - but this seemed more direct.\r\n\r\n@vowelparrot @dev2049 \r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6992/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6992/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6991",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6991/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6991/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6991/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6991",
        "id": 1782974926,
        "node_id": "I_kwDOIPDwls5qRgnO",
        "number": 6991,
        "title": "langchain takes much time to reload",
        "user": {
            "login": "nihalpawar4",
            "id": 96010796,
            "node_id": "U_kgDOBbkCLA",
            "avatar_url": "https://avatars.githubusercontent.com/u/96010796?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nihalpawar4",
            "html_url": "https://github.com/nihalpawar4",
            "followers_url": "https://api.github.com/users/nihalpawar4/followers",
            "following_url": "https://api.github.com/users/nihalpawar4/following{/other_user}",
            "gists_url": "https://api.github.com/users/nihalpawar4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nihalpawar4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nihalpawar4/subscriptions",
            "organizations_url": "https://api.github.com/users/nihalpawar4/orgs",
            "repos_url": "https://api.github.com/users/nihalpawar4/repos",
            "events_url": "https://api.github.com/users/nihalpawar4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nihalpawar4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-30T18:17:21Z",
        "updated_at": "2023-10-07T16:05:43Z",
        "closed_at": "2023-10-07T16:05:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nMacos system\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [X] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nloading malfunction\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6991/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6991/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6990",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6990/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6990/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6990/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6990",
        "id": 1782944151,
        "node_id": "PR_kwDOIPDwls5UWmQD",
        "number": 6990,
        "title": "Pack of small fixes and refactorings that don't affect functionality",
        "user": {
            "login": "Nayjest",
            "id": 153999,
            "node_id": "MDQ6VXNlcjE1Mzk5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/153999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nayjest",
            "html_url": "https://github.com/Nayjest",
            "followers_url": "https://api.github.com/users/Nayjest/followers",
            "following_url": "https://api.github.com/users/Nayjest/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nayjest/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nayjest/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nayjest/subscriptions",
            "organizations_url": "https://api.github.com/users/Nayjest/orgs",
            "repos_url": "https://api.github.com/users/Nayjest/repos",
            "events_url": "https://api.github.com/users/Nayjest/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nayjest/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T18:02:41Z",
        "updated_at": "2023-07-07T07:40:50Z",
        "closed_at": "2023-07-07T07:40:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6990",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6990",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6990.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6990.patch",
            "merged_at": "2023-07-07T07:40:50Z"
        },
        "body": "Description: Pack of small fixes and refactorings that don't affect functionality, just making code prettier & fixing some misspelling (hand-filtered improvements proposed by SeniorAi.online, prototype of code improving tool based on gpt4), agents and callbacks folders was covered.\r\n\r\nDependencies: Nothing changed\r\n\r\nTwitter: https://twitter.com/nayjest\r\n\r\n@dev2049\r\n@vowelparrot\r\n@agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6990/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6990/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6989",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6989/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6989/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6989/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6989",
        "id": 1782921268,
        "node_id": "PR_kwDOIPDwls5UWiiE",
        "number": 6989,
        "title": "added `Brave Search` document_loader",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-30T17:47:51Z",
        "updated_at": "2023-07-03T02:11:33Z",
        "closed_at": "2023-07-03T02:01:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6989",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6989",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6989.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6989.patch",
            "merged_at": "2023-07-03T02:01:25Z"
        },
        "body": "- Added `Brave Search` document loader.\r\n- Refactored BraveSearch wrapper\r\n- Added a Jupyter Notebook example\r\n- Added `Ecosystem/Integrations` BraveSearch page \r\n\r\nPlease review:\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6989/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6989/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6988",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6988/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6988/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6988/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6988",
        "id": 1782915486,
        "node_id": "PR_kwDOIPDwls5UWhcL",
        "number": 6988,
        "title": "Fix: Correct typo",
        "user": {
            "login": "waveFrontSet",
            "id": 4996688,
            "node_id": "MDQ6VXNlcjQ5OTY2ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4996688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/waveFrontSet",
            "html_url": "https://github.com/waveFrontSet",
            "followers_url": "https://api.github.com/users/waveFrontSet/followers",
            "following_url": "https://api.github.com/users/waveFrontSet/following{/other_user}",
            "gists_url": "https://api.github.com/users/waveFrontSet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/waveFrontSet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/waveFrontSet/subscriptions",
            "organizations_url": "https://api.github.com/users/waveFrontSet/orgs",
            "repos_url": "https://api.github.com/users/waveFrontSet/repos",
            "events_url": "https://api.github.com/users/waveFrontSet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/waveFrontSet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-30T17:44:43Z",
        "updated_at": "2023-07-01T08:53:35Z",
        "closed_at": "2023-07-01T08:53:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6988",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6988",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6988.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6988.patch",
            "merged_at": "2023-07-01T08:53:35Z"
        },
        "body": "Description: Correct a minor typo in the docs. @dev2049 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6988/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6988/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6987",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6987/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6987/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6987/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6987",
        "id": 1782869608,
        "node_id": "PR_kwDOIPDwls5UWZUh",
        "number": 6987,
        "title": "Handle kwargs in FAISS.load_local()",
        "user": {
            "login": "mssalvatore",
            "id": 19957806,
            "node_id": "MDQ6VXNlcjE5OTU3ODA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/19957806?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mssalvatore",
            "html_url": "https://github.com/mssalvatore",
            "followers_url": "https://api.github.com/users/mssalvatore/followers",
            "following_url": "https://api.github.com/users/mssalvatore/following{/other_user}",
            "gists_url": "https://api.github.com/users/mssalvatore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mssalvatore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mssalvatore/subscriptions",
            "organizations_url": "https://api.github.com/users/mssalvatore/orgs",
            "repos_url": "https://api.github.com/users/mssalvatore/repos",
            "events_url": "https://api.github.com/users/mssalvatore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mssalvatore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T17:12:31Z",
        "updated_at": "2023-08-23T16:00:35Z",
        "closed_at": "2023-07-05T19:56:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6987",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6987",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6987.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6987.patch",
            "merged_at": "2023-07-05T19:56:41Z"
        },
        "body": "- Description: This allows parameters such as `relevance_score_fn` to be passed to the `FAISS` constructor via the `load_local()` class method.\r\n-  Tag maintainer: @rlancemartin @eyurtsev \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6987/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6987/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6986",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6986/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6986/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6986/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6986",
        "id": 1782857862,
        "node_id": "PR_kwDOIPDwls5UWWt9",
        "number": 6986,
        "title": "Add Flyte Callback Handler (#6139)",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T17:03:10Z",
        "updated_at": "2023-06-30T19:25:23Z",
        "closed_at": "2023-06-30T19:25:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6986",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6986",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6986.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6986.patch",
            "merged_at": "2023-06-30T19:25:22Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6986/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6986/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6985",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6985/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6985/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6985/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6985",
        "id": 1782842255,
        "node_id": "PR_kwDOIPDwls5UWTVq",
        "number": 6985,
        "title": "Fix typo in quickstart.mdx",
        "user": {
            "login": "mfosterw",
            "id": 15671892,
            "node_id": "MDQ6VXNlcjE1NjcxODky",
            "avatar_url": "https://avatars.githubusercontent.com/u/15671892?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mfosterw",
            "html_url": "https://github.com/mfosterw",
            "followers_url": "https://api.github.com/users/mfosterw/followers",
            "following_url": "https://api.github.com/users/mfosterw/following{/other_user}",
            "gists_url": "https://api.github.com/users/mfosterw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mfosterw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mfosterw/subscriptions",
            "organizations_url": "https://api.github.com/users/mfosterw/orgs",
            "repos_url": "https://api.github.com/users/mfosterw/repos",
            "events_url": "https://api.github.com/users/mfosterw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mfosterw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-30T16:49:00Z",
        "updated_at": "2023-07-01T08:53:54Z",
        "closed_at": "2023-07-01T08:53:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6985",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6985",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6985.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6985.patch",
            "merged_at": "2023-07-01T08:53:53Z"
        },
        "body": "Removed an extra \"to\" from a sentence. @dev2049 very minor documentation fix.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6985/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6985/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6984",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6984/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6984/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6984/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6984",
        "id": 1782833784,
        "node_id": "I_kwDOIPDwls5qQ-J4",
        "number": 6984,
        "title": "VectaraRetriever does not use the parameters passed in by `Vectara.as_retriever()`",
        "user": {
            "login": "dcellison",
            "id": 134390741,
            "node_id": "U_kgDOCAKj1Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/134390741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcellison",
            "html_url": "https://github.com/dcellison",
            "followers_url": "https://api.github.com/users/dcellison/followers",
            "following_url": "https://api.github.com/users/dcellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcellison/subscriptions",
            "organizations_url": "https://api.github.com/users/dcellison/orgs",
            "repos_url": "https://api.github.com/users/dcellison/repos",
            "events_url": "https://api.github.com/users/dcellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-30T16:42:27Z",
        "updated_at": "2023-10-08T16:05:51Z",
        "closed_at": "2023-10-08T16:05:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`class VectaraRetriever` does not use the parameters passed in by `Vectara.as_retriever()`. The class definition sets up `vectorstore` and `search_kwargs` but then there is no check for values coming in from `Vectara.as_retriever()`.\r\n\r\nhttps://github.com/hwchase17/langchain/blob/e3b7effc8f39333076c2bedd7306de81ce988de6/langchain/vectorstores/vectara.py#L307",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6984/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6984/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6983",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6983/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6983/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6983/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6983",
        "id": 1782823112,
        "node_id": "I_kwDOIPDwls5qQ7jI",
        "number": 6983,
        "title": "DOC: \"Edit this page\" returns 404",
        "user": {
            "login": "mfosterw",
            "id": 15671892,
            "node_id": "MDQ6VXNlcjE1NjcxODky",
            "avatar_url": "https://avatars.githubusercontent.com/u/15671892?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mfosterw",
            "html_url": "https://github.com/mfosterw",
            "followers_url": "https://api.github.com/users/mfosterw/followers",
            "following_url": "https://api.github.com/users/mfosterw/following{/other_user}",
            "gists_url": "https://api.github.com/users/mfosterw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mfosterw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mfosterw/subscriptions",
            "organizations_url": "https://api.github.com/users/mfosterw/orgs",
            "repos_url": "https://api.github.com/users/mfosterw/repos",
            "events_url": "https://api.github.com/users/mfosterw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mfosterw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T16:33:59Z",
        "updated_at": "2023-10-06T16:05:48Z",
        "closed_at": "2023-10-06T16:05:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nThe links in the documentation to make contributions to pages point to the wrong file location within the repository. For example, the link on the \"Quickstart\" page points to the filepath `docs/docs/get_started/quickstart.mdx`, when it should point to `docs/docs_skeleton/docs/get_started/quickstart.mdx`. Presumably this is a result of #6300 and the links not getting updated.\n\n### Idea or request for content:\n\nIf someone more familiar with the structure of the docs could tell me where to find the base template where the link templates are specified, and preferably a bit of guidance on how the documentation is structured now to make it easier to figure out the correct links, then I can make the updates.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6983/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6983/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6982",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6982/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6982/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6982/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6982",
        "id": 1782809247,
        "node_id": "I_kwDOIPDwls5qQ4Kf",
        "number": 6982,
        "title": "RetrievalQAWithSourcesChain object default prompt is problematic",
        "user": {
            "login": "lingyu001",
            "id": 36165082,
            "node_id": "MDQ6VXNlcjM2MTY1MDgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36165082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lingyu001",
            "html_url": "https://github.com/lingyu001",
            "followers_url": "https://api.github.com/users/lingyu001/followers",
            "following_url": "https://api.github.com/users/lingyu001/following{/other_user}",
            "gists_url": "https://api.github.com/users/lingyu001/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lingyu001/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lingyu001/subscriptions",
            "organizations_url": "https://api.github.com/users/lingyu001/orgs",
            "repos_url": "https://api.github.com/users/lingyu001/repos",
            "events_url": "https://api.github.com/users/lingyu001/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lingyu001/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-30T16:22:47Z",
        "updated_at": "2023-10-06T16:05:53Z",
        "closed_at": "2023-10-06T16:05:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHere is my code to initialize the Chain, it should come with the default prompt template:\r\n\r\nqa_source_chain = RetrievalQAWithSourcesChain.from_chain_type(\r\n    llm=llm_chat,\r\n    chain_type=\"stuff\",\r\n    retriever=db_test.as_retriever()\r\n)\r\n\r\nHere is the source chain object, I guess default template for this chain is hacked?\r\n\r\nRetrievalQAWithSourcesChain(memory=None, callbacks=None, callback_manager=None, verbose=False, combine_documents_chain=StuffDocumentsChain(memory=None, callbacks=None, callback_manager=None, verbose=False, input_key='input_documents', output_key='output_text', llm_chain=LLMChain(memory=None, callbacks=None, callback_manager=None, verbose=False, prompt=PromptTemplate(input_variables=['summaries', 'question'], output_parser=None, partial_variables={}, template='Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \\nIf you don\\'t know the answer, just say that you don\\'t know. Don\\'t try to make up an answer.\\nALWAYS return a \"SOURCES\" part in your answer.\\n\\nQUESTION: Which state/country\\'s law governs the interpretation of the contract?\\n=========\\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\\nSource: 28-pl\\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\\nSource: 30-pl\\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\\nSource: 4-pl\\n=========\\nFINAL ANSWER: This Agreement is governed by English law.\\nSOURCES: 28-pl\\n\\nQUESTION: What did the president say about Michael Jackson?\\n=========\\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\\nSource: 0-pl\\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\\nSource: 24-pl\\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\\nSource: 5-pl\\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\\nSource: 34-pl\\n=========\\nFINAL ANSWER: The president did not mention Michael Jackson.\\nSOURCES:\\n\\nQUESTION: {question}\\n=========\\n{summaries}\\n=========\\nFINAL ANSWER:', template_format='f-string', validate_template=True), llm=ChatOpenAI(verbose=False, callbacks=None, callback_manager=None, client=<class 'openai.api_resources.chat_completion.ChatCompletion'>, model_name='gpt-3.5-turbo', temperature=0.0, model_kwargs={}, openai_api_key='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', openai_api_base=None, openai_organization=None, openai_proxy=None, request_timeout=None, max_retries=6, streaming=False, n=1, max_tokens=2000), output_key='text'), document_prompt=PromptTemplate(input_variables=['page_content', 'source'], output_parser=None, partial_variables={}, template='Content: {page_content}\\nSource: {source}', template_format='f-string', validate_template=True), document_variable_name='summaries', document_separator='\\n\\n'), question_key='question', input_docs_key='docs', answer_key='answer', sources_answer_key='sources', return_source_documents=False, retriever=VectorStoreRetriever(vectorstore=<langchain.vectorstores.chroma.Chroma object at 0x14fa7cb50>, search_type='similarity', search_kwargs={}), reduce_k_below_max_tokens=False, max_tokens_limit=3375)\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. import and initialize a RetrievalQAWithSourcesChain, using RetrievalQAWithSourcesChain.from_chain_type() method\r\n2. check the default prompt template of the RetrievalQAWithSourcesChain object\n\n### Expected behavior\n\nThe default template should be very similar to a RetrievalQA chain object",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6982/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6982/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6981",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6981/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6981/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6981/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6981",
        "id": 1782808760,
        "node_id": "I_kwDOIPDwls5qQ4C4",
        "number": 6981,
        "title": "Issue: 401 error when using ConversationalRetrievalQAChain",
        "user": {
            "login": "santiagocalvoazumo",
            "id": 120129886,
            "node_id": "U_kgDOBykJXg",
            "avatar_url": "https://avatars.githubusercontent.com/u/120129886?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/santiagocalvoazumo",
            "html_url": "https://github.com/santiagocalvoazumo",
            "followers_url": "https://api.github.com/users/santiagocalvoazumo/followers",
            "following_url": "https://api.github.com/users/santiagocalvoazumo/following{/other_user}",
            "gists_url": "https://api.github.com/users/santiagocalvoazumo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/santiagocalvoazumo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/santiagocalvoazumo/subscriptions",
            "organizations_url": "https://api.github.com/users/santiagocalvoazumo/orgs",
            "repos_url": "https://api.github.com/users/santiagocalvoazumo/repos",
            "events_url": "https://api.github.com/users/santiagocalvoazumo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/santiagocalvoazumo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-30T16:22:20Z",
        "updated_at": "2023-10-06T16:05:58Z",
        "closed_at": "2023-10-06T16:05:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nEverything was working fine 10 min ago, but now when I use the ConversationalRetrievalQAChain I always get a 401 error, I tried 2 difrent API keys and the error persists, don't really know what the issue mght be, any ideas? \r\n\r\nThis is the error log:\r\n[chain/error] [1:chain:conversational_retrieval_chain] [315ms] Chain run errored with error: \"Request failed with status code 401\"\r\nerror Error: Request failed with status code 401\r\n    at createError (EDITED\\node_modules\\axios\\lib\\core\\createError.js:16:15)\r\n    at settle (EDITED\\node_modules\\axios\\lib\\core\\settle.js:17:12)\r\n    at IncomingMessage.handleStreamEnd (EDITED\\node_modules\\axios\\lib\\adapters\\http.js:322:11)\r\n    at IncomingMessage.emit (node:events:525:35)\r\n    at IncomingMessage.emit (node:domain:489:12)\r\n    at endReadableNT (node:internal/streams/readable:1359:12)\r\n    at processTicksAndRejections (node:internal/process/task_queues:82:21) {\r\n  config: {\r\n    transitional: {\r\n      silentJSONParsing: true,\r\n      forcedJSONParsing: true,\r\n      clarifyTimeoutError: false\r\n    },\r\n    adapter: [Function: httpAdapter],\r\n    transformRequest: [ [Function: transformRequest] ],\r\n    transformResponse: [ [Function: transformResponse] ],\r\n    timeout: 0,\r\n    xsrfCookieName: 'XSRF-TOKEN',\r\n    xsrfHeaderName: 'X-XSRF-TOKEN',\r\n    maxContentLength: -1,\r\n    maxBodyLength: -1,\r\n    validateStatus: [Function: validateStatus],\r\n    headers: {\r\n      Accept: 'application/json, text/plain, */*',\r\n      'Content-Type': 'application/json',\r\n      'User-Agent': 'OpenAI/NodeJS/3.2.1',\r\n      Authorization: 'Bearer EDITED',\r\n      'Content-Length': 53\r\n    },\r\n    method: 'post',\r\n    data: '{\"model\":\"text-embedding-ada-002\",\"input\":\"hi there\"}',\r\n    url: 'https://api.openai.com/v1/embeddings'\r\n  },\r\n  request: <ref *1> ClientRequest {\r\n    _events: [Object: null prototype] {\r\n      abort: [Function (anonymous)],\r\n      aborted: [Function (anonymous)],\r\n      connect: [Function (anonymous)],\r\n      error: [Function (anonymous)],\r\n      socket: [Function (anonymous)],\r\n      timeout: [Function (anonymous)],\r\n      finish: [Function: requestOnFinish]\r\n    },\r\n    _eventsCount: 7,\r\n    _maxListeners: undefined,\r\n    outputData: [],\r\n    outputSize: 0,\r\n    writable: true,\r\n    destroyed: false,\r\n    _last: true,\r\n    chunkedEncoding: false,\r\n    shouldKeepAlive: false,\r\n    maxRequestsOnConnectionReached: false,\r\n    _defaultKeepAlive: true,\r\n    useChunkedEncodingByDefault: true,\r\n    sendDate: false,\r\n    _removedConnection: false,\r\n    _removedContLen: false,\r\n    _removedTE: false,\r\n    strictContentLength: false,\r\n    _contentLength: 53,\r\n    _hasBody: true,\r\n    _trailer: '',\r\n    finished: true,\r\n    _headerSent: true,\r\n    _closed: false,\r\n    socket: TLSSocket {\r\n      _tlsOptions: [Object],\r\n      _secureEstablished: true,\r\n      _securePending: false,\r\n      _newSessionPending: false,\r\n      _controlReleased: true,\r\n      secureConnecting: false,\r\n      _SNICallback: null,\r\n      servername: 'api.openai.com',\r\n      alpnProtocol: false,\r\n      authorized: true,\r\n      authorizationError: null,\r\n      encrypted: true,\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 10,\r\n      connecting: false,\r\n      _hadError: false,\r\n      _parent: null,\r\n      _host: 'api.openai.com',\r\n      _closeAfterHandlingError: false,\r\n      _readableState: [ReadableState],\r\n      _maxListeners: undefined,\r\n      _writableState: [WritableState],\r\n      allowHalfOpen: false,\r\n      _sockname: null,\r\n      _pendingData: null,\r\n      _pendingEncoding: '',\r\n      server: undefined,\r\n      _server: null,\r\n      ssl: [TLSWrap],\r\n      _requestCert: true,\r\n      _rejectUnauthorized: true,\r\n      parser: null,\r\n      _httpMessage: [Circular *1],\r\n      [Symbol(res)]: [TLSWrap],\r\n      [Symbol(verified)]: true,\r\n      [Symbol(pendingSession)]: null,\r\n      [Symbol(async_id_symbol)]: 56,\r\n      [Symbol(kHandle)]: [TLSWrap],\r\n      [Symbol(lastWriteQueueSize)]: 0,\r\n      [Symbol(timeout)]: null,\r\n      [Symbol(kBuffer)]: null,\r\n      [Symbol(kBufferCb)]: null,\r\n      [Symbol(kBufferGen)]: null,\r\n      [Symbol(kCapture)]: false,\r\n      [Symbol(kSetNoDelay)]: false,\r\n      [Symbol(kSetKeepAlive)]: true,\r\n      [Symbol(kSetKeepAliveInitialDelay)]: 60,\r\n      [Symbol(kBytesRead)]: 0,\r\n      [Symbol(kBytesWritten)]: 0,\r\n      [Symbol(connect-options)]: [Object]\r\n    },\r\n    _header: 'POST /v1/embeddings HTTP/1.1\\r\\n' +\r\n      'Accept: application/json, text/plain, */*\\r\\n' +\r\n      'Content-Type: application/json\\r\\n' +\r\n      'User-Agent: OpenAI/NodeJS/3.2.1\\r\\n' +\r\n      'Authorization: Bearer EDITED' +\r\n      'Content-Length: 53\\r\\n' +\r\n      'Host: api.openai.com\\r\\n' +\r\n      'Connection: close\\r\\n' +\r\n      '\\r\\n',\r\n    _keepAliveTimeout: 0,\r\n    _onPendingData: [Function: nop],\r\n    agent: Agent {\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 2,\r\n      _maxListeners: undefined,\r\n      defaultPort: 443,\r\n      protocol: 'https:',\r\n      options: [Object: null prototype],\r\n      requests: [Object: null prototype] {},\r\n      sockets: [Object: null prototype],\r\n      freeSockets: [Object: null prototype] {},\r\n      keepAliveMsecs: 1000,\r\n      keepAlive: false,\r\n      maxSockets: Infinity,\r\n      maxFreeSockets: 256,\r\n      scheduling: 'lifo',\r\n      maxTotalSockets: Infinity,\r\n      totalSocketCount: 1,\r\n      maxCachedSessions: 100,\r\n      _sessionCache: [Object],\r\n      [Symbol(kCapture)]: false\r\n    },\r\n    socketPath: undefined,\r\n    method: 'POST',\r\n    maxHeaderSize: undefined,\r\n    insecureHTTPParser: undefined,\r\n    joinDuplicateHeaders: undefined,\r\n    path: '/v1/embeddings',\r\n    _ended: true,\r\n    res: IncomingMessage {\r\n      _readableState: [ReadableState],\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 4,\r\n      _maxListeners: undefined,\r\n      socket: [TLSSocket],\r\n      httpVersionMajor: 1,\r\n      httpVersionMinor: 1,\r\n      httpVersion: '1.1',\r\n      complete: true,\r\n      rawHeaders: [Array],\r\n      rawTrailers: [],\r\n      joinDuplicateHeaders: undefined,\r\n      aborted: false,\r\n      upgrade: false,\r\n      url: '',\r\n      method: null,\r\n      statusCode: 401,\r\n      statusMessage: 'Unauthorized',\r\n      client: [TLSSocket],\r\n      _consuming: false,\r\n      _dumped: false,\r\n      req: [Circular *1],\r\n      responseUrl: 'https://api.openai.com/v1/embeddings',\r\n      redirects: [],\r\n      [Symbol(kCapture)]: false,\r\n      [Symbol(kHeaders)]: [Object],\r\n      [Symbol(kHeadersCount)]: 22,\r\n      [Symbol(kTrailers)]: null,\r\n      [Symbol(kTrailersCount)]: 0\r\n    },\r\n    aborted: false,\r\n    timeoutCb: null,\r\n    upgradeOrConnect: false,\r\n    parser: null,\r\n    maxHeadersCount: null,\r\n    reusedSocket: false,\r\n    host: 'api.openai.com',\r\n    protocol: 'https:',\r\n    _redirectable: Writable {\r\n      _writableState: [WritableState],\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 3,\r\n      _maxListeners: undefined,\r\n      _options: [Object],\r\n      _ended: true,\r\n      _ending: true,\r\n      _redirectCount: 0,\r\n      _redirects: [],\r\n      _requestBodyLength: 53,\r\n      _requestBodyBuffers: [],\r\n      _onNativeResponse: [Function (anonymous)],\r\n      _currentRequest: [Circular *1],\r\n      _currentUrl: 'https://api.openai.com/v1/embeddings',\r\n      [Symbol(kCapture)]: false\r\n    },\r\n    [Symbol(kCapture)]: false,\r\n    [Symbol(kBytesWritten)]: 0,\r\n    [Symbol(kEndCalled)]: true,\r\n    [Symbol(kNeedDrain)]: false,\r\n    [Symbol(corked)]: 0,\r\n    [Symbol(kOutHeaders)]: [Object: null prototype] {\r\n      accept: [Array],\r\n      'content-type': [Array],\r\n      'user-agent': [Array],\r\n      authorization: [Array],\r\n      'content-length': [Array],\r\n      host: [Array]\r\n    },\r\n    [Symbol(errored)]: null,\r\n    [Symbol(kUniqueHeaders)]: null\r\n  },\r\n  response: {\r\n    status: 401,\r\n    statusText: 'Unauthorized',\r\n    headers: {\r\n      date: 'Fri, 30 Jun 2023 16:16:14 GMT',\r\n      'content-type': 'application/json; charset=utf-8',\r\n      'content-length': '301',\r\n      connection: 'close',\r\n      vary: 'Origin',\r\n      'x-request-id': '6cebdf4cc24074e40d3c1c80d9ab9fff',\r\n      'strict-transport-security': 'max-age=15724800; includeSubDomains',\r\n      'cf-cache-status': 'DYNAMIC',\r\n      server: 'cloudflare',\r\n      'cf-ray': '7df7b66a7cdbba73-EZE',\r\n      'alt-svc': 'h3=\":443\"; ma=86400'\r\n    },\r\n    config: {\r\n      transitional: [Object],\r\n      adapter: [Function: httpAdapter],\r\n      transformRequest: [Array],\r\n      transformResponse: [Array],\r\n      timeout: 0,\r\n      xsrfCookieName: 'XSRF-TOKEN',\r\n      xsrfHeaderName: 'X-XSRF-TOKEN',\r\n      maxContentLength: -1,\r\n      maxBodyLength: -1,\r\n      validateStatus: [Function: validateStatus],\r\n      headers: [Object],\r\n      method: 'post',\r\n      data: '{\"model\":\"text-embedding-ada-002\",\"input\":\"hi there\"}',\r\n      url: 'https://api.openai.com/v1/embeddings'\r\n    },\r\n    request: <ref *1> ClientRequest {\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 7,\r\n      _maxListeners: undefined,\r\n      outputData: [],\r\n      outputSize: 0,\r\n      writable: true,\r\n      destroyed: false,\r\n      _last: true,\r\n      chunkedEncoding: false,\r\n      shouldKeepAlive: false,\r\n      maxRequestsOnConnectionReached: false,\r\n      _defaultKeepAlive: true,\r\n      useChunkedEncodingByDefault: true,\r\n      sendDate: false,\r\n      _removedConnection: false,\r\n      _removedContLen: false,\r\n      _removedTE: false,\r\n      strictContentLength: false,\r\n      _contentLength: 53,\r\n      _hasBody: true,\r\n      _trailer: '',\r\n      finished: true,\r\n      _headerSent: true,\r\n      _closed: false,\r\n      socket: [TLSSocket],\r\n      _header: 'POST /v1/embeddings HTTP/1.1\\r\\n' +\r\n        'Accept: application/json, text/plain, */*\\r\\n' +\r\n        'Content-Type: application/json\\r\\n' +\r\n        'User-Agent: OpenAI/NodeJS/3.2.1\\r\\n' +\r\n        'Authorization: Bearer EDITED' +\r\n        'Content-Length: 53\\r\\n' +\r\n        'Host: api.openai.com\\r\\n' +\r\n        'Connection: close\\r\\n' +\r\n        '\\r\\n',\r\n      _keepAliveTimeout: 0,\r\n      _onPendingData: [Function: nop],\r\n      agent: [Agent],\r\n      socketPath: undefined,\r\n      method: 'POST',\r\n      maxHeaderSize: undefined,\r\n      insecureHTTPParser: undefined,\r\n      joinDuplicateHeaders: undefined,\r\n      path: '/v1/embeddings',\r\n      _ended: true,\r\n      res: [IncomingMessage],\r\n      aborted: false,\r\n      timeoutCb: null,\r\n      upgradeOrConnect: false,\r\n      parser: null,\r\n      maxHeadersCount: null,\r\n      reusedSocket: false,\r\n      host: 'api.openai.com',\r\n      protocol: 'https:',\r\n      _redirectable: [Writable],\r\n      [Symbol(kCapture)]: false,\r\n      [Symbol(kBytesWritten)]: 0,\r\n      [Symbol(kEndCalled)]: true,\r\n      [Symbol(kNeedDrain)]: false,\r\n      [Symbol(corked)]: 0,\r\n      [Symbol(kOutHeaders)]: [Object: null prototype],\r\n      [Symbol(errored)]: null,\r\n      [Symbol(kUniqueHeaders)]: null\r\n    },\r\n    data: { error: [Object] }\r\n  },\r\n  isAxiosError: true,\r\n  toJSON: [Function: toJSON],\r\n  attemptNumber: 1,\r\n  retriesLeft: 6\r\n}\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6981/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6981/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6980",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6980/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6980/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6980/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6980",
        "id": 1782808752,
        "node_id": "I_kwDOIPDwls5qQ4Cw",
        "number": 6980,
        "title": "llma Embeddings error",
        "user": {
            "login": "sirrrik",
            "id": 47517623,
            "node_id": "MDQ6VXNlcjQ3NTE3NjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/47517623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sirrrik",
            "html_url": "https://github.com/sirrrik",
            "followers_url": "https://api.github.com/users/sirrrik/followers",
            "following_url": "https://api.github.com/users/sirrrik/following{/other_user}",
            "gists_url": "https://api.github.com/users/sirrrik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sirrrik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sirrrik/subscriptions",
            "organizations_url": "https://api.github.com/users/sirrrik/orgs",
            "repos_url": "https://api.github.com/users/sirrrik/repos",
            "events_url": "https://api.github.com/users/sirrrik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sirrrik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-30T16:22:20Z",
        "updated_at": "2023-12-01T16:09:18Z",
        "closed_at": "2023-12-01T16:09:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nTraceback (most recent call last):\r\n  File \"/Users/apple/Desktop/LLM/gpt4all_langchain_chatbots/teacher/lib/python3.10/site-packages/langchain/embeddings/llamacpp.py\", line 85, in validate_environment\r\n    from llama_cpp import Llama\r\nModuleNotFoundError: No module named 'llama_cpp'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/apple/Desktop/LLM/gpt4all_langchain_chatbots/mine.py\", line 3, in <module>\r\n    llama = LlamaCppEmbeddings(model_path=\"./models/ggml-gpt4all-j.bin\")\r\n  File \"pydantic/main.py\", line 339, in pydantic.main.BaseModel.__init__\r\n  File \"pydantic/main.py\", line 1102, in pydantic.main.validate_model\r\n  File \"/Users/apple/Desktop/LLM/gpt4all_langchain_chatbots/teacher/lib/python3.10/site-packages/langchain/embeddings/llamacpp.py\", line 89, in validate_environment\r\n    raise ModuleNotFoundError(\r\nModuleNotFoundError: Could not import llama-cpp-python library. Please install the llama-cpp-python library to use this embedding model: pip install llama-cpp-python\r\n\r\n\r\n\n\n### Who can help?\n\n@sirrrik\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\npip install the latest langChain package from pypy on mac\n\n### Expected behavior\n\nTraceback (most recent call last):\r\n  File \"/Users/apple/Desktop/LLM/gpt4all_langchain_chatbots/teacher/lib/python3.10/site-packages/langchain/embeddings/llamacpp.py\", line 85, in validate_environment\r\n    from llama_cpp import Llama\r\nModuleNotFoundError: No module named 'llama_cpp'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/apple/Desktop/LLM/gpt4all_langchain_chatbots/mine.py\", line 3, in <module>\r\n    llama = LlamaCppEmbeddings(model_path=\"./models/ggml-gpt4all-j.bin\")\r\n  File \"pydantic/main.py\", line 339, in pydantic.main.BaseModel.__init__\r\n  File \"pydantic/main.py\", line 1102, in pydantic.main.validate_model\r\n  File \"/Users/apple/Desktop/LLM/gpt4all_langchain_chatbots/teacher/lib/python3.10/site-packages/langchain/embeddings/llamacpp.py\", line 89, in validate_environment\r\n    raise ModuleNotFoundError(\r\nModuleNotFoundError: Could not import llama-cpp-python library. Please install the llama-cpp-python library to use this embedding model: pip install llama-cpp-python",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6980/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6980/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6979",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6979/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6979/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6979/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6979",
        "id": 1782804627,
        "node_id": "PR_kwDOIPDwls5UWLEy",
        "number": 6979,
        "title": "Beef up import test",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T16:19:04Z",
        "updated_at": "2023-06-30T16:26:07Z",
        "closed_at": "2023-06-30T16:26:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6979",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6979",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6979.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6979.patch",
            "merged_at": "2023-06-30T16:26:06Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6979/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6979/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6978",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6978/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6978/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6978/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6978",
        "id": 1782799836,
        "node_id": "PR_kwDOIPDwls5UWKBP",
        "number": 6978,
        "title": "Rm pytz dep",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T16:15:51Z",
        "updated_at": "2023-06-30T16:24:02Z",
        "closed_at": "2023-06-30T16:24:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6978",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6978",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6978.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6978.patch",
            "merged_at": "2023-06-30T16:24:01Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6978/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6978/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6977",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6977/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6977/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6977/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6977",
        "id": 1782757633,
        "node_id": "PR_kwDOIPDwls5UWApr",
        "number": 6977,
        "title": "feat: enable `UnstructuredEmailLoader` to process attachments",
        "user": {
            "login": "MthwRobinson",
            "id": 1635179,
            "node_id": "MDQ6VXNlcjE2MzUxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1635179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MthwRobinson",
            "html_url": "https://github.com/MthwRobinson",
            "followers_url": "https://api.github.com/users/MthwRobinson/followers",
            "following_url": "https://api.github.com/users/MthwRobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/MthwRobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MthwRobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MthwRobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/MthwRobinson/orgs",
            "repos_url": "https://api.github.com/users/MthwRobinson/repos",
            "events_url": "https://api.github.com/users/MthwRobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MthwRobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T15:47:47Z",
        "updated_at": "2023-07-01T13:09:27Z",
        "closed_at": "2023-07-01T13:09:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6977",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6977",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6977.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6977.patch",
            "merged_at": "2023-07-01T13:09:26Z"
        },
        "body": "### Summary\r\n\r\nUpdates `UnstructuredEmailLoader` so that it can process attachments in addition to the e-mail content. The loader will process attachments if the `process_attachments` kwarg is passed when the loader is instantiated.\r\n\r\n### Testing\r\n\r\n```python\r\n\r\nfile_path = \"fake-email-attachment.eml\"\r\nloader = UnstructuredEmailLoader(\r\n    file_path, mode=\"elements\", process_attachments=True\r\n)\r\ndocs = loader.load()\r\ndocs[-1]\r\n```\r\n\r\n### Reviewers\r\n\r\n-  @rlancemartin \r\n-  @eyurtsev\r\n- @hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6977/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6977/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6976",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6976/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6976/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6976/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6976",
        "id": 1782737214,
        "node_id": "PR_kwDOIPDwls5UV8NA",
        "number": 6976,
        "title": "Enable InMemoryDocstore to be constructed without providing a dict",
        "user": {
            "login": "mssalvatore",
            "id": 19957806,
            "node_id": "MDQ6VXNlcjE5OTU3ODA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/19957806?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mssalvatore",
            "html_url": "https://github.com/mssalvatore",
            "followers_url": "https://api.github.com/users/mssalvatore/followers",
            "following_url": "https://api.github.com/users/mssalvatore/following{/other_user}",
            "gists_url": "https://api.github.com/users/mssalvatore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mssalvatore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mssalvatore/subscriptions",
            "organizations_url": "https://api.github.com/users/mssalvatore/orgs",
            "repos_url": "https://api.github.com/users/mssalvatore/repos",
            "events_url": "https://api.github.com/users/mssalvatore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mssalvatore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T15:32:51Z",
        "updated_at": "2023-08-23T16:00:38Z",
        "closed_at": "2023-07-05T20:56:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6976",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6976",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6976.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6976.patch",
            "merged_at": "2023-07-05T20:56:31Z"
        },
        "body": "- Description: Allow `InMemoryDocstore` to be created without passing a dict to the constructor; the constructor can create a dict at runtime if one isn't provided.\r\n- Tag maintainer: @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6976/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6976/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6975",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6975/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6975/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6975/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6975",
        "id": 1782712758,
        "node_id": "PR_kwDOIPDwls5UV2vO",
        "number": 6975,
        "title": "Promptlayer Callback",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T15:19:04Z",
        "updated_at": "2023-06-30T15:32:44Z",
        "closed_at": "2023-06-30T15:32:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6975",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6975",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6975.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6975.patch",
            "merged_at": "2023-06-30T15:32:43Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6975/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6975/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6974",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6974/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6974/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6974/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6974",
        "id": 1782703377,
        "node_id": "I_kwDOIPDwls5qQeUR",
        "number": 6974,
        "title": "Error 422 when using BraveSearch",
        "user": {
            "login": "JoseHervas",
            "id": 20096417,
            "node_id": "MDQ6VXNlcjIwMDk2NDE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/20096417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JoseHervas",
            "html_url": "https://github.com/JoseHervas",
            "followers_url": "https://api.github.com/users/JoseHervas/followers",
            "following_url": "https://api.github.com/users/JoseHervas/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoseHervas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JoseHervas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoseHervas/subscriptions",
            "organizations_url": "https://api.github.com/users/JoseHervas/orgs",
            "repos_url": "https://api.github.com/users/JoseHervas/repos",
            "events_url": "https://api.github.com/users/JoseHervas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JoseHervas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T15:12:25Z",
        "updated_at": "2023-10-06T16:06:03Z",
        "closed_at": "2023-10-06T16:06:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain v0.0.220\r\nPython 3.11.3\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nUsing `BraveSearch` with an agent always returns an error 422\r\n\r\n[I've created a collab notebook with an example displaying this error.](https://colab.research.google.com/drive/1mUr6KWND4ZYmvFnPywbJevZLzssJMvBR?usp=sharing)\r\n\r\nI've tried many times with both `ZERO_SHOT_REACT_DESCRIPTION` and `OPENAI_FUNCTIONS` agents\n\n### Expected behavior\n\nAgents should be able to use this tool",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6974/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6974/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6973",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6973/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6973/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6973/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6973",
        "id": 1782539266,
        "node_id": "I_kwDOIPDwls5qP2QC",
        "number": 6973,
        "title": "Using JSONLinesLoader in Python",
        "user": {
            "login": "arozbiz",
            "id": 4499657,
            "node_id": "MDQ6VXNlcjQ0OTk2NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4499657?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arozbiz",
            "html_url": "https://github.com/arozbiz",
            "followers_url": "https://api.github.com/users/arozbiz/followers",
            "following_url": "https://api.github.com/users/arozbiz/following{/other_user}",
            "gists_url": "https://api.github.com/users/arozbiz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arozbiz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arozbiz/subscriptions",
            "organizations_url": "https://api.github.com/users/arozbiz/orgs",
            "repos_url": "https://api.github.com/users/arozbiz/repos",
            "events_url": "https://api.github.com/users/arozbiz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arozbiz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-30T13:31:03Z",
        "updated_at": "2023-07-05T13:33:14Z",
        "closed_at": "2023-07-05T13:33:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIt would be great if the [JSONLinesLoader](https://js.langchain.com/docs/modules/indexes/document_loaders/examples/file_loaders/jsonlines) that's available in the JS version of Langchain could be ported to the Python version.\n\n### Motivation\n\nI find working with jsonl files to be frequently easier than json files.\n\n### Your contribution\n\nNot sure---I'm quite new to Python and so don't how to implement this.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6973/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6973/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6972",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6972/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6972/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6972/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6972",
        "id": 1782530196,
        "node_id": "PR_kwDOIPDwls5UVPK4",
        "number": 6972,
        "title": "Arthur Callback",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T13:24:43Z",
        "updated_at": "2023-06-30T14:48:03Z",
        "closed_at": "2023-06-30T14:48:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6972",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6972",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6972.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6972.patch",
            "merged_at": "2023-06-30T14:48:02Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6972/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6972/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6971",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6971/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6971/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6971/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6971",
        "id": 1782453316,
        "node_id": "I_kwDOIPDwls5qPhRE",
        "number": 6971,
        "title": "Cannot pass search_distance key to ConversationalRetrievalChain",
        "user": {
            "login": "czmmiao",
            "id": 5085248,
            "node_id": "MDQ6VXNlcjUwODUyNDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5085248?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/czmmiao",
            "html_url": "https://github.com/czmmiao",
            "followers_url": "https://api.github.com/users/czmmiao/followers",
            "following_url": "https://api.github.com/users/czmmiao/following{/other_user}",
            "gists_url": "https://api.github.com/users/czmmiao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/czmmiao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/czmmiao/subscriptions",
            "organizations_url": "https://api.github.com/users/czmmiao/orgs",
            "repos_url": "https://api.github.com/users/czmmiao/repos",
            "events_url": "https://api.github.com/users/czmmiao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/czmmiao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-30T12:34:14Z",
        "updated_at": "2023-07-03T04:37:06Z",
        "closed_at": "2023-07-03T04:37:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nTraceback (most recent call last):\r\n  File \"/tmp/pycharm_project_93/test_qa_generation.py\", line 50, in <module>\r\n    result = qa.run({\"question\": query, \"vectordbkwargs\": vectordbkwargs })\r\n  File \"/root/.cache/pypoetry/virtualenvs/irc-llm-0Bb4gJSe-py3.10/lib/python3.10/site-packages/langchain/chains/base.py\", line 273, in run\r\n    return self(args[0], callbacks=callbacks, tags=tags)[_output_key]\r\n  File \"/root/.cache/pypoetry/virtualenvs/irc-llm-0Bb4gJSe-py3.10/lib/python3.10/site-packages/langchain/chains/base.py\", line 151, in __call__\r\n    final_outputs: Dict[str, Any] = self.prep_outputs(\r\n  File \"/root/.cache/pypoetry/virtualenvs/irc-llm-0Bb4gJSe-py3.10/lib/python3.10/site-packages/langchain/chains/base.py\", line 216, in prep_outputs\r\n    self.memory.save_context(inputs, outputs)\r\n  File \"/root/.cache/pypoetry/virtualenvs/irc-llm-0Bb4gJSe-py3.10/lib/python3.10/site-packages/langchain/memory/chat_memory.py\", line 34, in save_context\r\n    input_str, output_str = self._get_input_output(inputs, outputs)\r\n  File \"/root/.cache/pypoetry/virtualenvs/irc-llm-0Bb4gJSe-py3.10/lib/python3.10/site-packages/langchain/memory/chat_memory.py\", line 21, in _get_input_output\r\n    prompt_input_key = get_prompt_input_key(inputs, self.memory_variables)\r\n  File \"/root/.cache/pypoetry/virtualenvs/irc-llm-0Bb4gJSe-py3.10/lib/python3.10/site-packages/langchain/memory/utils.py\", line 11, in get_prompt_input_key\r\n    raise ValueError(f\"One input key expected got {prompt_input_keys}\")\r\nValueError: One input key expected got ['question', 'vectordbkwargs']\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Milvus\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.chains.conversational_retrieval.prompts import CONDENSE_QUESTION_PROMPT\r\n\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.memory import ConversationBufferWindowMemory\r\n\r\n\r\nfrom pymilvus import connections, FieldSchema, CollectionSchema, DataType, Collection, utility\r\nMILVUS_HOST = \"_milvus.XXXX.com\"\r\nMILVUS_PORT = 19530\r\nconnections.connect(\r\n        alias=\"default\",\r\n        host=MILVUS_HOST,\r\n        port=MILVUS_PORT\r\n    )\r\n\r\nutility.drop_collection('LangChainCollection')\r\nimport os\r\n\r\nos.environ['OPENAI_API_KEY'] = \"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\"\r\n\r\nloader = TextLoader(\"/tmp/qa_chain1.txt\")\r\ndocuments = loader.load()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ndocuments = text_splitter.split_documents(documents)\r\n\r\nembeddings = OpenAIEmbeddings()\r\n\r\nvectorstore = Milvus.from_documents(documents, embeddings,\r\n    connection_args={\"host\": \"_milvus.XXXX.com\", \"port\": \"19530\"}, search_params={\"metric_type\": \"IP\", \"params\": {\"nprobe\": 200}, \"offset\": 0})\r\n\r\nmemory = ConversationBufferWindowMemory(k=2 , memory_key=\"chat_history\", return_messages=True)\r\n\r\nvectordbkwargs = {\"search_distance\": 0.9}\r\nretriver = vectorstore.as_retriever()\r\nretriver.search_kwargs = search_kwargs={\"k\":5 }\r\n\r\nqa = ConversationalRetrievalChain.from_llm(ChatOpenAI(temperature=0, model='gpt-3.5-turbo-16k'), retriver , memory = memory, condense_question_prompt = CONDENSE_QUESTION_PROMPT, verbose=True)\r\n\r\nquery = \"Introduce Microsoft\"\r\n\r\nresult = qa.run({\"question\": query, \"vectordbkwargs\": vectordbkwargs })\r\n\r\nprint(result)\n\n### Expected behavior\n\nreturn the relevant document with a score bigger than 0.9 when matching vectors by IP metric.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6971/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6971/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6970",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6970/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6970/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6970/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6970",
        "id": 1782380145,
        "node_id": "I_kwDOIPDwls5qPPZx",
        "number": 6970,
        "title": "HuggingFacePipeline not working",
        "user": {
            "login": "GuillemGSubies",
            "id": 37592763,
            "node_id": "MDQ6VXNlcjM3NTkyNzYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/37592763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GuillemGSubies",
            "html_url": "https://github.com/GuillemGSubies",
            "followers_url": "https://api.github.com/users/GuillemGSubies/followers",
            "following_url": "https://api.github.com/users/GuillemGSubies/following{/other_user}",
            "gists_url": "https://api.github.com/users/GuillemGSubies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GuillemGSubies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GuillemGSubies/subscriptions",
            "organizations_url": "https://api.github.com/users/GuillemGSubies/orgs",
            "repos_url": "https://api.github.com/users/GuillemGSubies/repos",
            "events_url": "https://api.github.com/users/GuillemGSubies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GuillemGSubies/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-30T11:37:16Z",
        "updated_at": "2023-06-30T11:59:52Z",
        "closed_at": "2023-06-30T11:59:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.219\r\n\n\n### Who can help?\n\n\r\n    @hwchase17\r\n    @agola11\r\n\r\n\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n>>> from langchain import HuggingFacePipeline\r\n>>> mod = HuggingFacePipeline(model_id=\"tiiuae/falcon-7b-instruct\", task=\"text-generation\")\r\n\r\n\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/guillem.garcia/miniconda3/envs/rene/lib/python3.10/site-packages/langchain/load/serializable.py\", line 74, in __init__\r\n    super().__init__(**kwargs)\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for HuggingFacePipeline\r\ntask\r\n  extra fields not permitted (type=value_error.extra)\r\n\n\n### Expected behavior\n\nI expect it to work. When I instance a Pipeline with falcon using hugginface it works.\r\n\r\n\r\nAlso, Is there a way to deactivate pydantic? It makes it impossible to modify anything or make langchain compatible with our code",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6970/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6970/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6968",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6968/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6968/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6968/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6968",
        "id": 1782326661,
        "node_id": "I_kwDOIPDwls5qPCWF",
        "number": 6968,
        "title": "langchain.chat_models.ChatOpenAI does not returns a response while langchain.OpeAI does rteturn results",
        "user": {
            "login": "plaban1981",
            "id": 23618329,
            "node_id": "MDQ6VXNlcjIzNjE4MzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/23618329?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plaban1981",
            "html_url": "https://github.com/plaban1981",
            "followers_url": "https://api.github.com/users/plaban1981/followers",
            "following_url": "https://api.github.com/users/plaban1981/following{/other_user}",
            "gists_url": "https://api.github.com/users/plaban1981/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/plaban1981/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/plaban1981/subscriptions",
            "organizations_url": "https://api.github.com/users/plaban1981/orgs",
            "repos_url": "https://api.github.com/users/plaban1981/repos",
            "events_url": "https://api.github.com/users/plaban1981/events{/privacy}",
            "received_events_url": "https://api.github.com/users/plaban1981/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-30T10:55:01Z",
        "updated_at": "2023-10-23T16:07:22Z",
        "closed_at": "2023-10-23T16:07:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.208\r\npenai==0.27.8\r\npython==3.10.6\n\n### Who can help?\n\n@hwchase17  Could you please help me in resolving the error whenver I run an gaent with the LLM as ChatOpenAI() i get the response as **\"\"Do I need to use a tool? No.\"\"**\r\n\r\nWhile the agent returns the response perfectly fine with llm= OpenAI().\r\n\r\nThe irony is two days prior the ChatOpenAI() function was working fine and returned the results perfectly fine.\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n`import langchain\r\nfrom langchain.prompts.base import StringPromptTemplate\r\nfrom langchain.prompts import PromptTemplate,StringPromptTemplate\r\nfrom langchain.agents import Tool, AgentExecutor, AgentOutputParser,LLMSingleActionAgent,initialize_agent\r\nfrom langchain import OpenAI,LLMChain\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.tools import DuckDuckGoSearchRun\r\nfrom langchain.schema import AgentAction,AgentFinish\r\nimport re\r\nfrom typing import List,Union\r\nimport os\r\nfrom getpass import getpass\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = getpass()\r\n#\r\nsearch = DuckDuckGoSearchRun()\r\n#3640 def duck_wrapper(input_text):\r\n    search_results = search.run(f\"site:webmd.com {input_text}\")\r\n    return search_results\r\n\r\ntools = [\r\n    Tool(\r\n        name = \"Search WebMD\",\r\n        func=duck_wrapper,\r\n        description=\"useful for when you need to answer medical and pharmalogical questions\"\r\n    )\r\n]\r\n# Set up the base template\r\ntemplate = \"\"\"Answer the following questions as best you can, but speaking as compasionate medical professional. You have access to the following tools:\r\n\r\n{tools}\r\n\r\nUse the following format:\r\n\r\nQuestion: the input question you must answer\r\nThought: you should always think about what to do\r\nAction: the action to take, should be one of [{tool_names}]\r\nAction Input: the input to the action\r\nObservation: the result of the action\r\n... (this Thought/Action/Action Input/Observation can repeat N times)\r\nThought: I now know the final answer\r\nFinal Answer: the final answer to the original input question\r\n\r\nBegin! Remember to answer as a compansionate medical professional when giving your final answer.\r\n\r\nPrevious conversation history:\r\n{history}\r\n\r\nQuestion: {input}\r\n\"\"\"\r\ntool_names = [tool.name for tool in tools]\r\nhistory = None\r\nprompt = PromptTemplate(template=template,input_variables=[\"tools\",\"tool_names\",\"history\",\"input\"])\r\n\r\nfrom langchain.agents.agent_types import AgentType\r\nagent = initialize_agent(tools=tools,\r\n                         llm=ChatOpenAI(),\r\n                         agent = AgentType.CONVERSATIONAL_REACT_DESCRIPTION,\r\n                         verbose=False,\r\n                         return_intermediate_steps=True\r\n                         )\r\n\r\ntry:\r\n    response = agent({\"input\":\"how to treat acid reflux?\",\r\n                      \"tools\":tools,\r\n                      \"tool_names\":tool_names,\r\n                      \"history\":None,\r\n                      \"chat_history\":None},\r\n                     return_only_outputs=True)\r\nexcept ValueError as e:\r\n    response = str(e)\r\n    if not response.startswith(\"Could not parse LLM output: `\"):\r\n        raise e\r\n    response = response.removeprefix(\"Could not parse LLM output: `\").removesuffix(\"`\")\r\n\r\nprint(response)\r\n\r\n`\n\n### Expected behavior\n\n{'output': 'There are a few lifestyle changes and home remedies that can help treat acid reflux, such as avoiding food triggers, eating smaller and more frequent meals, elevating the head of the bed while sleeping, and avoiding lying down after eating. Over-the-counter medications such as antacids and proton pump inhibitors can also be effective in treating acid reflux. However, it is always best to consult with a doctor if symptoms persist or worsen.', 'intermediate_steps': [(AgentAction(tool='Search WebMD', tool_input='how to treat acid reflux', log='Thought: Do I need to use a tool? Yes\\nAction: Search WebMD\\nAction Input: how to treat acid reflux'), 'Eat Earlier. Going to bed on a full stomach makes nighttime heartburn more likely. A full stomach puts pressure on the valve at the top of the stomach, which is supposed to keep stomach acid out ... Trim the fat off of meat and poultry, and cut the skin off chicken. Tweaks like these might be enough to tame your heartburn. Tomatoes (including foods like salsa and marinara sauce) and citrus ... Abdominal bloating. Abdominal pain. Vomiting. Indigestion. Burning or gnawing feeling in the stomach between meals or at night. Hiccups. Loss of appetite. Vomiting blood or coffee ground-like ... Esophagitis Symptoms. Symptoms of esophagitis include: Difficult or painful swallowing. Acid reflux. Heartburn. A feeling of something of being stuck in the throat. Chest pain. Nausea. Vomiting. This backflow (acid reflux) can irritate the lining of the esophagus. People with GERD may have heartburn, a burning sensation in the back of the throat, chronic cough, laryngitis, and nausea.')]}",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6968/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6967",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6967/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6967/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6967/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6967",
        "id": 1782210449,
        "node_id": "PR_kwDOIPDwls5UUJCs",
        "number": 6967,
        "title": "Add SpacyEmbeddings class",
        "user": {
            "login": "rjarun8",
            "id": 50106442,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjUwMTA2NDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/50106442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjarun8",
            "html_url": "https://github.com/rjarun8",
            "followers_url": "https://api.github.com/users/rjarun8/followers",
            "following_url": "https://api.github.com/users/rjarun8/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjarun8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjarun8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjarun8/subscriptions",
            "organizations_url": "https://api.github.com/users/rjarun8/orgs",
            "repos_url": "https://api.github.com/users/rjarun8/repos",
            "events_url": "https://api.github.com/users/rjarun8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjarun8/received_events",
            "type": "Organization",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-30T09:30:48Z",
        "updated_at": "2023-07-03T15:38:32Z",
        "closed_at": "2023-07-03T15:38:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6967",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6967",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6967.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6967.patch",
            "merged_at": "2023-07-03T15:38:31Z"
        },
        "body": "- Description: Added a new SpacyEmbeddings class for generating embeddings using the Spacy library.\r\n- Issue: Sentencebert/Bert/Spacy/Doc2vec embedding support #6952\r\n- Dependencies: This change requires the Spacy library and the 'en_core_web_sm' Spacy model.\r\n- Tag maintainer: @dev2049\r\n- Twitter handle: N/A\r\n\r\nThis change includes a new SpacyEmbeddings class, but does not include a test or an example notebook.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6967/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6967/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6966",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6966/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6966/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6966/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6966",
        "id": 1782206965,
        "node_id": "PR_kwDOIPDwls5UUISM",
        "number": 6966,
        "title": "Fixed a similarity score calculation bug in Chroma module",
        "user": {
            "login": "boxcounter",
            "id": 4317474,
            "node_id": "MDQ6VXNlcjQzMTc0NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4317474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boxcounter",
            "html_url": "https://github.com/boxcounter",
            "followers_url": "https://api.github.com/users/boxcounter/followers",
            "following_url": "https://api.github.com/users/boxcounter/following{/other_user}",
            "gists_url": "https://api.github.com/users/boxcounter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/boxcounter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/boxcounter/subscriptions",
            "organizations_url": "https://api.github.com/users/boxcounter/orgs",
            "repos_url": "https://api.github.com/users/boxcounter/repos",
            "events_url": "https://api.github.com/users/boxcounter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/boxcounter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-30T09:28:27Z",
        "updated_at": "2023-07-14T01:12:53Z",
        "closed_at": "2023-07-14T01:11:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6966",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6966",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6966.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6966.patch",
            "merged_at": null
        },
        "body": "The `_results_to_docs_and_scores()` function should have returned the similarity score (higher values indicating more similarity), but erroneously returned the distance (higher values indicating less similarity).\r\n\r\n@rlancemartin, @eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6966/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6966/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6965",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6965/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6965/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6965/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6965",
        "id": 1782126816,
        "node_id": "I_kwDOIPDwls5qORjg",
        "number": 6965,
        "title": "langchain agent took a lot of time",
        "user": {
            "login": "houjibofa2050",
            "id": 19608744,
            "node_id": "MDQ6VXNlcjE5NjA4NzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/19608744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houjibofa2050",
            "html_url": "https://github.com/houjibofa2050",
            "followers_url": "https://api.github.com/users/houjibofa2050/followers",
            "following_url": "https://api.github.com/users/houjibofa2050/following{/other_user}",
            "gists_url": "https://api.github.com/users/houjibofa2050/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houjibofa2050/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houjibofa2050/subscriptions",
            "organizations_url": "https://api.github.com/users/houjibofa2050/orgs",
            "repos_url": "https://api.github.com/users/houjibofa2050/repos",
            "events_url": "https://api.github.com/users/houjibofa2050/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houjibofa2050/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-30T08:34:20Z",
        "updated_at": "2023-10-06T16:06:08Z",
        "closed_at": "2023-10-06T16:06:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nrun langchain agent takes a lot of time,about 20s\u3002the question is simple. Is there any good way reduce time?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6965/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6965/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6964",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6964/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6964/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6964/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6964",
        "id": 1782096897,
        "node_id": "PR_kwDOIPDwls5UTwgR",
        "number": 6964,
        "title": "Improve the alibaba cloud opensearch vector store documentation",
        "user": {
            "login": "zhaoshengbo",
            "id": 4787922,
            "node_id": "MDQ6VXNlcjQ3ODc5MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4787922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhaoshengbo",
            "html_url": "https://github.com/zhaoshengbo",
            "followers_url": "https://api.github.com/users/zhaoshengbo/followers",
            "following_url": "https://api.github.com/users/zhaoshengbo/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhaoshengbo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhaoshengbo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhaoshengbo/subscriptions",
            "organizations_url": "https://api.github.com/users/zhaoshengbo/orgs",
            "repos_url": "https://api.github.com/users/zhaoshengbo/repos",
            "events_url": "https://api.github.com/users/zhaoshengbo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhaoshengbo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T08:12:18Z",
        "updated_at": "2023-07-06T13:47:49Z",
        "closed_at": "2023-07-06T13:47:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6964",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6964",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6964.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6964.patch",
            "merged_at": "2023-07-06T13:47:49Z"
        },
        "body": "Based on user feedback, we have improved the Alibaba Cloud OpenSearch vector store documentation.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6964/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6963",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6963/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6963/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6963/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6963",
        "id": 1782079348,
        "node_id": "I_kwDOIPDwls5qOF90",
        "number": 6963,
        "title": "Adding support for URL Parameters in RequestsWrapper",
        "user": {
            "login": "s04",
            "id": 70141652,
            "node_id": "MDQ6VXNlcjcwMTQxNjUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/70141652?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/s04",
            "html_url": "https://github.com/s04",
            "followers_url": "https://api.github.com/users/s04/followers",
            "following_url": "https://api.github.com/users/s04/following{/other_user}",
            "gists_url": "https://api.github.com/users/s04/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/s04/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/s04/subscriptions",
            "organizations_url": "https://api.github.com/users/s04/orgs",
            "repos_url": "https://api.github.com/users/s04/repos",
            "events_url": "https://api.github.com/users/s04/events{/privacy}",
            "received_events_url": "https://api.github.com/users/s04/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-30T07:58:56Z",
        "updated_at": "2023-10-15T16:05:43Z",
        "closed_at": "2023-10-15T16:05:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI'd love to be able to extend the request URL with parameters.\r\n\r\nCurrently I can only provide request headers. This does not cover my use case.\n\n### Motivation\n\nSome APIs don't authenticate via headers and instead use URL parameters to provide API keys and Tokens.\r\n\r\nExample: [Trello API](https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-group-actions)\r\n\r\nView first code snippet there for the action and you'll see.\r\n\r\ncurl --request GET \\\r\n  --url 'https://api.trello.com/1/actions/{id}?key=APIKey&token=APIToken'\r\n\r\n\n\n### Your contribution\n\nI would need some handholding to create my first contribution here due to the testing suite but I've got some code I've tested locally.\r\n\r\n```python\r\nclass Requests(BaseModel):\r\n    \"\"\"Wrapper around requests to handle auth and async.\r\n\r\n    The main purpose of this wrapper is to handle authentication (by saving\r\n    headers) and enable easy async methods on the same base object.\r\n    \"\"\"\r\n\r\n    headers: Optional[Dict[str, str]] = None\r\n    aiosession: Optional[aiohttp.ClientSession] = None\r\n    url_params: Optional[Dict[str, str]] = None\r\n\r\n    class Config:\r\n        \"\"\"Configuration for this pydantic object.\"\"\"\r\n\r\n        extra = Extra.forbid\r\n        arbitrary_types_allowed = True\r\n\r\n    def get(self, url: str, **kwargs: Any) -> requests.Response:\r\n        \"\"\"GET the URL and return the text.\"\"\"\r\n        if self.url_params:\r\n            url = url + '&'.join([f'{k}={v}' for k, v in self.url_params.items()])\r\n        return requests.get(url, headers=self.headers, **kwargs)\r\n\r\n    def post(self, url: str, data: Dict[str, Any], **kwargs: Any) -> requests.Response:\r\n        \"\"\"POST to the URL and return the text.\"\"\"\r\n        if self.url_params:\r\n            url = url + '&'.join([f'{k}={v}' for k, v in self.url_params.items()])\r\n        return requests.post(url, json=data, headers=self.headers, **kwargs)\r\n\r\n    def patch(self, url: str, data: Dict[str, Any], **kwargs: Any) -> requests.Response:\r\n        \"\"\"PATCH the URL and return the text.\"\"\"\r\n        if self.url_params:\r\n            url = url + '&'.join([f'{k}={v}' for k, v in self.url_params.items()])\r\n        return requests.patch(url, json=data, headers=self.headers, **kwargs)\r\n\r\n    def put(self, url: str, data: Dict[str, Any], **kwargs: Any) -> requests.Response:\r\n        \"\"\"PUT the URL and return the text.\"\"\"\r\n        if self.url_params:\r\n            url = url + '&'.join([f'{k}={v}' for k, v in self.url_params.items()])\r\n        return requests.put(url, json=data, headers=self.headers, **kwargs)\r\n\r\n    def delete(self, url: str, **kwargs: Any) -> requests.Response:\r\n        \"\"\"DELETE the URL and return the text.\"\"\"\r\n        if self.url_params:\r\n            url = url + '&'.join([f'{k}={v}' for k, v in self.url_params.items()])\r\n        return requests.delete(url, headers=self.headers, **kwargs)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6963/reactions",
            "total_count": 3,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6963/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6962",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6962/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6962/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6962/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6962",
        "id": 1782073084,
        "node_id": "PR_kwDOIPDwls5UTrUP",
        "number": 6962,
        "title": "release v220",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T07:55:27Z",
        "updated_at": "2023-06-30T13:52:10Z",
        "closed_at": "2023-06-30T13:52:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6962",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6962",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6962.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6962.patch",
            "merged_at": "2023-06-30T13:52:09Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6962/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6962/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6961",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6961/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6961/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6961/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6961",
        "id": 1782060256,
        "node_id": "I_kwDOIPDwls5qOBTg",
        "number": 6961,
        "title": "Enable CSVLoader to take list of columns as source_column (or metadata)",
        "user": {
            "login": "amani-acog",
            "id": 117151783,
            "node_id": "U_kgDOBvuYJw",
            "avatar_url": "https://avatars.githubusercontent.com/u/117151783?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amani-acog",
            "html_url": "https://github.com/amani-acog",
            "followers_url": "https://api.github.com/users/amani-acog/followers",
            "following_url": "https://api.github.com/users/amani-acog/following{/other_user}",
            "gists_url": "https://api.github.com/users/amani-acog/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amani-acog/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amani-acog/subscriptions",
            "organizations_url": "https://api.github.com/users/amani-acog/orgs",
            "repos_url": "https://api.github.com/users/amani-acog/repos",
            "events_url": "https://api.github.com/users/amani-acog/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amani-acog/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-30T07:44:50Z",
        "updated_at": "2023-12-12T16:02:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nPlease update the CSVLoader to take list of columns as source_column.\n\n### Motivation\n\nThis update will be be helpful, if the documents are embedded and used with vectordbs like Qdrant. As vectordbs like Qdrant offers filtering option, if the metadata is of Document object is used as payload then it will provide a great enhancement.\n\n### Your contribution\n\nNo",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6961/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6961/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6960",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6960/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6960/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6960/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6960",
        "id": 1782038070,
        "node_id": "PR_kwDOIPDwls5UTj1b",
        "number": 6960,
        "title": "Bagatur/openllm ensure available",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T07:26:37Z",
        "updated_at": "2023-06-30T07:54:24Z",
        "closed_at": "2023-06-30T07:54:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6960",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6960",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6960.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6960.patch",
            "merged_at": "2023-06-30T07:54:23Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6960/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6960/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6959",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6959/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6959/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6959/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6959",
        "id": 1782008769,
        "node_id": "I_kwDOIPDwls5qN0vB",
        "number": 6959,
        "title": "i try to connect mysql database,but it give me a error about llm value is not a valid dict(type=type_error.dict),how to  solve the problem?",
        "user": {
            "login": "xiaohaihui-smart",
            "id": 57887444,
            "node_id": "MDQ6VXNlcjU3ODg3NDQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/57887444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaohaihui-smart",
            "html_url": "https://github.com/xiaohaihui-smart",
            "followers_url": "https://api.github.com/users/xiaohaihui-smart/followers",
            "following_url": "https://api.github.com/users/xiaohaihui-smart/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaohaihui-smart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaohaihui-smart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaohaihui-smart/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaohaihui-smart/orgs",
            "repos_url": "https://api.github.com/users/xiaohaihui-smart/repos",
            "events_url": "https://api.github.com/users/xiaohaihui-smart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaohaihui-smart/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-30T07:02:07Z",
        "updated_at": "2023-10-09T16:06:21Z",
        "closed_at": "2023-10-09T16:06:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nfrom langchain.agents.agent_toolkits import SQLDatabaseToolkit\r\nfrom langchain.sql_database import SQLDatabase\r\nfrom transformers import AutoModel, AutoTokenizer\r\nmodel_name = \".\\\\langchain-models\\\\THUDM\\\\chatglm2-6b\"\r\nlocal_model = AutoModel.from_pretrained(model_name, trust_remote_code=True)\r\nlocal_tokenizer = AutoTokenizer.from_pretrained(model_name, trust_remote_code=True)\r\ndb = SQLDatabase.from_uri(\"mysql+pymysql://root:root@localhost/magic\")\r\ntoolkit = SQLDatabaseToolkit(db=db, llm=local_model, tokenizer=local_tokenizer)\r\ntables = toolkit.list_tables_sql_db()\r\nprint(tables)\r\n\r\nTraceback (most recent call last):\r\n  File \"D:\\chat\\langchain-ChatGLM\\test_sql.py\", line 8, in <module>\r\n    toolkit = SQLDatabaseToolkit(db=db, llm=local_model)\r\n  File \"pydantic\\main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for SQLDatabaseToolkit\r\nllm\r\n  value is not a valid dict (type=type_error.dict)\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6959/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6959/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6958",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6958/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6958/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6958/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6958",
        "id": 1781991448,
        "node_id": "I_kwDOIPDwls5qNwgY",
        "number": 6958,
        "title": "CharacterTextSplitter constanly generate chunks longer than given chunk_size ",
        "user": {
            "login": "h-clickshift",
            "id": 117718271,
            "node_id": "U_kgDOBwQ8_w",
            "avatar_url": "https://avatars.githubusercontent.com/u/117718271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/h-clickshift",
            "html_url": "https://github.com/h-clickshift",
            "followers_url": "https://api.github.com/users/h-clickshift/followers",
            "following_url": "https://api.github.com/users/h-clickshift/following{/other_user}",
            "gists_url": "https://api.github.com/users/h-clickshift/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/h-clickshift/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/h-clickshift/subscriptions",
            "organizations_url": "https://api.github.com/users/h-clickshift/orgs",
            "repos_url": "https://api.github.com/users/h-clickshift/repos",
            "events_url": "https://api.github.com/users/h-clickshift/events{/privacy}",
            "received_events_url": "https://api.github.com/users/h-clickshift/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-30T06:46:26Z",
        "updated_at": "2023-12-13T16:08:43Z",
        "closed_at": "2023-12-13T16:08:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nCharacterTextSplitter split a size of 1GB code base with warnings exceed the log buffer, like\r\n```\r\nCreated a chunk of size 2140, which is longer than the specified 900\r\nCreated a chunk of size 1269, which is longer than the specified 900\r\nCreated a chunk of size 1955, which is longer than the specified 900\r\nCreated a chunk of size 3410, which is longer than the specified 900\r\nCreated a chunk of size 1192, which is longer than the specified 900\r\nCreated a chunk of size 1392, which is longer than the specified 900\r\nCreated a chunk of size 1540, which is longer than the specified 900\r\n- very very long...\r\n```\r\nWalking through the relvent code\r\n```\r\ndef _merge_splits(self, splits: Iterable[str], separator: str) -> List[str]:\r\n        # We now want to combine these smaller pieces into medium size\r\n        # chunks to send to the LLM.\r\n        separator_len = self._length_function(separator)\r\n\r\n        docs = []\r\n        current_doc: List[str] = []\r\n        total = 0\r\n        for d in splits:\r\n            _len = self._length_function(d)\r\n            if (\r\n                total + _len + (separator_len if len(current_doc) > 0 else 0)\r\n                > self._chunk_size\r\n            ):\r\n                if total > self._chunk_size:\r\n                    logger.warning(\r\n                        f\"Created a chunk of size {total}, \"\r\n                        f\"which is longer than the specified {self._chunk_size}\"\r\n                    )\r\n                if len(current_doc) > 0:\r\n                    doc = self._join_docs(current_doc, separator)\r\n                    if doc is not None:\r\n                        docs.append(doc)\r\n                    # Keep on popping if:\r\n                    # - we have a larger chunk than in the chunk overlap\r\n                    # - or if we still have any chunks and the length is long\r\n                    while total > self._chunk_overlap or (\r\n                        total + _len + (separator_len if len(current_doc) > 0 else 0)\r\n                        > self._chunk_size\r\n                        and total > 0\r\n                    ):\r\n                        total -= self._length_function(current_doc[0]) + (\r\n                            separator_len if len(current_doc) > 1 else 0\r\n                        )\r\n                        current_doc = current_doc[1:]\r\n            current_doc.append(d)\r\n            total += _len + (separator_len if len(current_doc) > 1 else 0)\r\n        doc = self._join_docs(current_doc, separator)\r\n        if doc is not None:\r\n            docs.append(doc)\r\n        return docs\r\n```\r\nI know langchain try to keep semantic integrity of code language with language specific separtor.\r\n\r\n### Motivation\r\n\r\nCan we just pop the last split once the `total > self._chunk_size` in `def _merge_splits(self, splits: Iterable[str], separator: str) -> List[str]:`\r\n\r\n### Your contribution\r\n\r\nMaybe later I'll propose a PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6958/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6958/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6957",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6957/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6957/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6957/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6957",
        "id": 1781972766,
        "node_id": "PR_kwDOIPDwls5UTWIv",
        "number": 6957,
        "title": "Support for the spatial geometry datatype for databases",
        "user": {
            "login": "aksharahegde",
            "id": 22255990,
            "node_id": "MDQ6VXNlcjIyMjU1OTkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/22255990?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aksharahegde",
            "html_url": "https://github.com/aksharahegde",
            "followers_url": "https://api.github.com/users/aksharahegde/followers",
            "following_url": "https://api.github.com/users/aksharahegde/following{/other_user}",
            "gists_url": "https://api.github.com/users/aksharahegde/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aksharahegde/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aksharahegde/subscriptions",
            "organizations_url": "https://api.github.com/users/aksharahegde/orgs",
            "repos_url": "https://api.github.com/users/aksharahegde/repos",
            "events_url": "https://api.github.com/users/aksharahegde/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aksharahegde/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-30T06:29:15Z",
        "updated_at": "2023-11-15T19:06:25Z",
        "closed_at": "2023-11-07T03:49:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6957",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6957",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6957.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6957.patch",
            "merged_at": null
        },
        "body": "**Description**\r\nSupport for the spatial geometry datatype for databases while creating embedding in SQLDatabaseChain.\r\n\r\n**Issue:** #5799\r\n\r\n**Dependencies**\r\nAdded **GeoAlchemy2** library\r\n\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6957/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6957/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6956",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6956/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6956/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6956/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6956",
        "id": 1781940281,
        "node_id": "I_kwDOIPDwls5qNkA5",
        "number": 6956,
        "title": "ValueError: `run` not supported when there is not exactly one output key. Got ['output', 'intermediate_steps']",
        "user": {
            "login": "zhugexinxin",
            "id": 42615243,
            "node_id": "MDQ6VXNlcjQyNjE1MjQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/42615243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhugexinxin",
            "html_url": "https://github.com/zhugexinxin",
            "followers_url": "https://api.github.com/users/zhugexinxin/followers",
            "following_url": "https://api.github.com/users/zhugexinxin/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhugexinxin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhugexinxin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhugexinxin/subscriptions",
            "organizations_url": "https://api.github.com/users/zhugexinxin/orgs",
            "repos_url": "https://api.github.com/users/zhugexinxin/repos",
            "events_url": "https://api.github.com/users/zhugexinxin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhugexinxin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-30T05:52:27Z",
        "updated_at": "2023-12-05T13:43:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n```\r\nagent = initialize_agent(tools, llm, agent=\"zero-shot-react-description\", return_intermediate_steps=True, verbose=True)\r\nagent = initialize_agent(tools, llm, agent=\"zero-shot-react-description\", return_intermediate_steps=True, memory=ConversationBufferMemory(memory_key=\"chat_history\", input_key='input', output_key=\"output\"), verbose=True)\r\n\r\n```\r\n\r\nhttps://python.langchain.com/docs/modules/agents/how_to/intermediate_steps\r\n\r\n<img width=\"857\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/42615243/9ea12e4b-1775-4114-a750-0625e1cf8302\">\r\n\r\n\r\n\n\n### Suggestion:\n\nI don't know how to solve it!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6956/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6956/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6954",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6954/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6954/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6954/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6954",
        "id": 1781805088,
        "node_id": "I_kwDOIPDwls5qNDAg",
        "number": 6954,
        "title": "Conversational Retrieval QA with sources cannot return source",
        "user": {
            "login": "zhangjunqiang",
            "id": 5388898,
            "node_id": "MDQ6VXNlcjUzODg4OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5388898?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhangjunqiang",
            "html_url": "https://github.com/zhangjunqiang",
            "followers_url": "https://api.github.com/users/zhangjunqiang/followers",
            "following_url": "https://api.github.com/users/zhangjunqiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhangjunqiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhangjunqiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhangjunqiang/subscriptions",
            "organizations_url": "https://api.github.com/users/zhangjunqiang/orgs",
            "repos_url": "https://api.github.com/users/zhangjunqiang/repos",
            "events_url": "https://api.github.com/users/zhangjunqiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhangjunqiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-30T03:17:04Z",
        "updated_at": "2023-07-03T07:34:15Z",
        "closed_at": "2023-07-03T07:34:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nConversationalRetrievalChain with Question Answering with sources\r\n```python\r\nllm = OpenAI(temperature=0)\r\nquestion_generator = LLMChain(llm=llm, prompt=CONDENSE_QUESTION_PROMPT)\r\ndoc_chain = load_qa_with_sources_chain(llm, chain_type=\"map_reduce\")\r\n\r\nchain = ConversationalRetrievalChain(\r\n    retriever=vectorstore.as_retriever(),\r\n    question_generator=question_generator,\r\n    combine_docs_chain=doc_chain,\r\n)\r\n```\r\nif i set the chain_type to \"refine\". it will not return sources.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\njust like the turtial code.\n\n### Expected behavior\n\ni want the 'refine' chain return sources.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6954/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6954/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6953",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6953/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6953/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6953/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6953",
        "id": 1781803499,
        "node_id": "PR_kwDOIPDwls5USyHx",
        "number": 6953,
        "title": "Update redis.py",
        "user": {
            "login": "akshayghatiki311",
            "id": 22797515,
            "node_id": "MDQ6VXNlcjIyNzk3NTE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22797515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akshayghatiki311",
            "html_url": "https://github.com/akshayghatiki311",
            "followers_url": "https://api.github.com/users/akshayghatiki311/followers",
            "following_url": "https://api.github.com/users/akshayghatiki311/following{/other_user}",
            "gists_url": "https://api.github.com/users/akshayghatiki311/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akshayghatiki311/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akshayghatiki311/subscriptions",
            "organizations_url": "https://api.github.com/users/akshayghatiki311/orgs",
            "repos_url": "https://api.github.com/users/akshayghatiki311/repos",
            "events_url": "https://api.github.com/users/akshayghatiki311/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akshayghatiki311/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-30T03:14:31Z",
        "updated_at": "2023-11-07T03:50:25Z",
        "closed_at": "2023-11-07T03:50:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6953",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6953",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6953.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6953.patch",
            "merged_at": null
        },
        "body": "Provided an option to connect to redis cloud using password,port and db along with existing parameters\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: Provided an option to connect to redis cloud using password,port and db along with existing parameters \r\n  - Issue: N/A\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: @hwchase17\r\n  - Twitter handle: @ghatiki\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6953/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6952",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6952/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6952/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6952/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6952",
        "id": 1781803067,
        "node_id": "I_kwDOIPDwls5qNCg7",
        "number": 6952,
        "title": "Sentencebert/Bert/Spacy/Doc2vec embedding support",
        "user": {
            "login": "pradeepdev-1995",
            "id": 41164884,
            "node_id": "MDQ6VXNlcjQxMTY0ODg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/41164884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pradeepdev-1995",
            "html_url": "https://github.com/pradeepdev-1995",
            "followers_url": "https://api.github.com/users/pradeepdev-1995/followers",
            "following_url": "https://api.github.com/users/pradeepdev-1995/following{/other_user}",
            "gists_url": "https://api.github.com/users/pradeepdev-1995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pradeepdev-1995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pradeepdev-1995/subscriptions",
            "organizations_url": "https://api.github.com/users/pradeepdev-1995/orgs",
            "repos_url": "https://api.github.com/users/pradeepdev-1995/repos",
            "events_url": "https://api.github.com/users/pradeepdev-1995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pradeepdev-1995/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-30T03:13:49Z",
        "updated_at": "2023-10-06T16:06:18Z",
        "closed_at": "2023-10-06T16:06:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIs there any way to store the Sentencebert/Bert/Spacy/Doc2vec based embeddings in the vector database using langchain\r\n```\r\npages= \"page content\"\r\nembeddings = OpenAIEmbeddings()\r\npersist_directory = 'db'\r\nvectordb = Chroma.from_documents(documents=pages, embedding=embeddings, persist_directory=persist_directory)\r\n```\r\nshall use **Sentencebert/Bert/Spacy/Doc2vec embeddings** instead of OpenAIEmbeddings() in the above code?\r\nif possible then what is the syntax for that?\n\n### Motivation\n\nFor using native embedding formats likeSentencebert/Bert/Spacy/Doc2vec in langchain\n\n### Your contribution\n\nFor using native embedding formats likeSentencebert/Bert/Spacy/Doc2vec in langchain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6952/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6952/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6951",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6951/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6951/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6951/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6951",
        "id": 1781775217,
        "node_id": "I_kwDOIPDwls5qM7tx",
        "number": 6951,
        "title": "Issue: Get Confused with ConversationalRetrievalChain + HuggingFacePipeline always gen wizard \"Helpful answer: \"",
        "user": {
            "login": "h-clickshift",
            "id": 117718271,
            "node_id": "U_kgDOBwQ8_w",
            "avatar_url": "https://avatars.githubusercontent.com/u/117718271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/h-clickshift",
            "html_url": "https://github.com/h-clickshift",
            "followers_url": "https://api.github.com/users/h-clickshift/followers",
            "following_url": "https://api.github.com/users/h-clickshift/following{/other_user}",
            "gists_url": "https://api.github.com/users/h-clickshift/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/h-clickshift/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/h-clickshift/subscriptions",
            "organizations_url": "https://api.github.com/users/h-clickshift/orgs",
            "repos_url": "https://api.github.com/users/h-clickshift/repos",
            "events_url": "https://api.github.com/users/h-clickshift/events{/privacy}",
            "received_events_url": "https://api.github.com/users/h-clickshift/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-30T02:41:25Z",
        "updated_at": "2023-10-06T16:06:23Z",
        "closed_at": "2023-10-06T16:06:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "my code:\r\n```\r\nfrom langchain.llms import HuggingFacePipeline\r\n  from langchain.chains import ConversationalRetrievalChain\r\n  pipe = pipeline(\r\n      \"text-generation\", # task type\r\n      model=model,\r\n      tokenizer=tokenizer,\r\n      max_new_tokens=1024,\r\n      device=0, # very trick, gpu rank\r\n  )\r\n  local_llm = HuggingFacePipeline(pipeline=pipe)\r\n  qa = ConversationalRetrievalChain.from_llm(local_llm, retriever=retriever)\r\n  questions = [\r\n      \"void Plan::ScheduleWork(map<Edge*, Want>::iterator want_e) {\",\r\n  ]\r\n  chat_history = []\r\n  for question in questions:\r\n      result = qa({\"question\": question, \"chat_history\": chat_history})\r\n  #     chat_history.append((question, result[\"answer\"]))\r\n      print(\"**chat_history**\", chat_history)\r\n      print(f\"=>**Question**: {question} \\n\")\r\n      print(f\"=>**Answer**: {result['answer']} \\n\\n\")\r\n```\r\n\r\n  which generate like this:\r\n```\r\n  **chat_history** []\r\n  =>**Question**: void Plan::ScheduleWork(map<Edge*, Want>::iterator want_e) { \r\n  \r\n  =>**Answer**:  void Plan::ScheduleWork(map<Edge*, Want>::iterator want_e) {\r\n    if (want_e->second == kWantToFinish) {\r\n      // This edge has already been scheduled.  We can get here again if an edge\r\n      // and one of its dependencies share an order-only input, or if a node\r\n      // duplicates an out edge (see https://github.question/: void Plan::ScheduleWork(map<Edge*, Want>::iterator want_e) {\r\n  Helpful Answer: void Plan::ScheduleWork(map<Edge*, Want>::iterator want_e) {\r\n    if (want_e->second == kWantToFinish) {\r\n      // This edge has already been scheduled.  We can get here again if an edge\r\n      // and one of its dependencies share an order-only input, or if a node\r\n      // duplicates an out edge (see https://github.com/ninja-build/ninja/pull/519).\r\n      // Avoid scheduling the work again.\r\n      return;\r\n    }\r\n    assert(want_e->second == kWantToStart);\r\n    want_e->second = kWantToFinish;\r\n```\r\n\r\n\r\nmy `model` is locally fine-tuned starcode with perf merged, `retriever` is DeepLake vectorstore with some args like cos etc.\r\nI do not get the \"Helpful Answer\" block, WHERE ON EARTH THIS COME FROM???\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6951/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6951/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6950",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6950/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6950/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6950/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6950",
        "id": 1781757970,
        "node_id": "I_kwDOIPDwls5qM3gS",
        "number": 6950,
        "title": "LLMSummarizationCheckerFromSource",
        "user": {
            "login": "kaushalshetty",
            "id": 6664607,
            "node_id": "MDQ6VXNlcjY2NjQ2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6664607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kaushalshetty",
            "html_url": "https://github.com/kaushalshetty",
            "followers_url": "https://api.github.com/users/kaushalshetty/followers",
            "following_url": "https://api.github.com/users/kaushalshetty/following{/other_user}",
            "gists_url": "https://api.github.com/users/kaushalshetty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kaushalshetty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kaushalshetty/subscriptions",
            "organizations_url": "https://api.github.com/users/kaushalshetty/orgs",
            "repos_url": "https://api.github.com/users/kaushalshetty/repos",
            "events_url": "https://api.github.com/users/kaushalshetty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kaushalshetty/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T02:19:22Z",
        "updated_at": "2023-10-06T16:06:29Z",
        "closed_at": "2023-10-06T16:06:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nJust curious if there is a feature to check whether the summarized output from a source document hallucinates or not by extending the checker chain.\n\n### Motivation\n\nLLMSummarizationCheckerChain checks facts of summaries using LLM knowledge. The motivation is to develop a feature that checks for facts from an augmented source document. \n\n### Your contribution\n\nWill submit a PR if this does not exist yet and if it is a nice to have feature",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6950/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6949",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6949/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6949/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6949/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6949",
        "id": 1781715320,
        "node_id": "PR_kwDOIPDwls5USfHn",
        "number": 6949,
        "title": "Add back in ",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T01:35:22Z",
        "updated_at": "2023-06-30T02:21:48Z",
        "closed_at": "2023-06-30T02:21:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6949",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6949",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6949.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6949.patch",
            "merged_at": "2023-06-30T02:21:47Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6949/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6949/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6948",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6948/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6948/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6948/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6948",
        "id": 1781687870,
        "node_id": "PR_kwDOIPDwls5USZKj",
        "number": 6948,
        "title": "redirect vecstores",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T01:00:20Z",
        "updated_at": "2023-06-30T02:22:22Z",
        "closed_at": "2023-06-30T02:22:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6948",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6948",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6948.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6948.patch",
            "merged_at": "2023-06-30T02:22:21Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6948/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6947",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6947/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6947/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6947/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6947",
        "id": 1781674685,
        "node_id": "I_kwDOIPDwls5qMjK9",
        "number": 6947,
        "title": "Inconsistent naming of document loaders",
        "user": {
            "login": "Madhav-MKNC",
            "id": 78339236,
            "node_id": "MDQ6VXNlcjc4MzM5MjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/78339236?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Madhav-MKNC",
            "html_url": "https://github.com/Madhav-MKNC",
            "followers_url": "https://api.github.com/users/Madhav-MKNC/followers",
            "following_url": "https://api.github.com/users/Madhav-MKNC/following{/other_user}",
            "gists_url": "https://api.github.com/users/Madhav-MKNC/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Madhav-MKNC/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Madhav-MKNC/subscriptions",
            "organizations_url": "https://api.github.com/users/Madhav-MKNC/orgs",
            "repos_url": "https://api.github.com/users/Madhav-MKNC/repos",
            "events_url": "https://api.github.com/users/Madhav-MKNC/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Madhav-MKNC/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T00:41:17Z",
        "updated_at": "2023-06-30T15:56:45Z",
        "closed_at": "2023-06-30T15:56:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nGenuinely wanted to know the reasonings behind the inclusion of \"Mu\" in the \"PyMuPDFLoader\". Coming from an Indian background my friend and I held 1-2 hours of discussion over what this represents and the conclusions were not so appropriate. \r\n\r\nWe landed on this discussion after we noticed the inconsistency in the naming of the single pdf loader (i.e. \"PyMuPDFLoader\") and the multiple pdf loader (i.e. \"PyPDFDirectoryLoader\").\r\n\r\n(Being a pioneer in LLM Orchestration we admire the open-course revolution. LangChain has opened a wider scope for opensource collaborations and we thank @hwchase17 for it.)\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6947/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 1,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6947/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6946",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6946/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6946/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6946/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6946",
        "id": 1781669365,
        "node_id": "I_kwDOIPDwls5qMh31",
        "number": 6946,
        "title": "FewShotPromptTemplate with Chat models",
        "user": {
            "login": "alexclaydon",
            "id": 4748463,
            "node_id": "MDQ6VXNlcjQ3NDg0NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4748463?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexclaydon",
            "html_url": "https://github.com/alexclaydon",
            "followers_url": "https://api.github.com/users/alexclaydon/followers",
            "following_url": "https://api.github.com/users/alexclaydon/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexclaydon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexclaydon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexclaydon/subscriptions",
            "organizations_url": "https://api.github.com/users/alexclaydon/orgs",
            "repos_url": "https://api.github.com/users/alexclaydon/repos",
            "events_url": "https://api.github.com/users/alexclaydon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexclaydon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T00:35:45Z",
        "updated_at": "2023-10-06T16:06:34Z",
        "closed_at": "2023-10-06T16:06:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nFrom the [documentation](https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/few_shot_examples), it is not clear whether \u2018FewShotPromptTemplate\u2019 can be used with Chat models: in particular, it does not appear to be compatible with OpenAI\u2019s suggested best practices (mentioned on the same page) of having alternating \u201cname: example_user\u201d and \u201cname: example_$role\u201d JSON passed to the OpenAI API for each few-shot example message passed in the call. \r\n\r\n### Idea or request for content:\r\n\r\nIs it planned to have a separate \u201cChatFewShotPromptTemplate\u201d class? If so, perhaps a placeholder could be added to the documentation to make this clear. If not, perhaps the documentation could be updated to make the mismatch explicit so that the reader understands the limitations of the current FewShotPromptTemplate in the context of Chat models. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6946/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6946/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6945",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6945/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6945/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6945/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6945",
        "id": 1781653601,
        "node_id": "PR_kwDOIPDwls5USSAT",
        "number": 6945,
        "title": "Change code block color scheme",
        "user": {
            "login": "jacoblee93",
            "id": 6952323,
            "node_id": "MDQ6VXNlcjY5NTIzMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6952323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacoblee93",
            "html_url": "https://github.com/jacoblee93",
            "followers_url": "https://api.github.com/users/jacoblee93/followers",
            "following_url": "https://api.github.com/users/jacoblee93/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacoblee93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacoblee93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacoblee93/subscriptions",
            "organizations_url": "https://api.github.com/users/jacoblee93/orgs",
            "repos_url": "https://api.github.com/users/jacoblee93/repos",
            "events_url": "https://api.github.com/users/jacoblee93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacoblee93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-30T00:07:52Z",
        "updated_at": "2023-06-30T02:21:12Z",
        "closed_at": "2023-06-30T02:21:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6945",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6945",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6945.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6945.patch",
            "merged_at": "2023-06-30T02:21:11Z"
        },
        "body": "Adds contrast, makes code blocks more readable.\r\n\r\n@dev2049",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6945/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6945/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6944",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6944/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6944/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6944/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6944",
        "id": 1781634208,
        "node_id": "PR_kwDOIPDwls5USN4o",
        "number": 6944,
        "title": "Simplify eval arg names",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-29T23:33:05Z",
        "updated_at": "2023-06-30T14:47:54Z",
        "closed_at": "2023-06-30T14:47:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6944",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6944",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6944.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6944.patch",
            "merged_at": "2023-06-30T14:47:53Z"
        },
        "body": "It'll be easier to switch between these if the names of predictions are consistent",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6944/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6943",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6943/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6943/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6943/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6943",
        "id": 1781628784,
        "node_id": "PR_kwDOIPDwls5USMv7",
        "number": 6943,
        "title": "Use an Enum for search type",
        "user": {
            "login": "mssalvatore",
            "id": 19957806,
            "node_id": "MDQ6VXNlcjE5OTU3ODA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/19957806?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mssalvatore",
            "html_url": "https://github.com/mssalvatore",
            "followers_url": "https://api.github.com/users/mssalvatore/followers",
            "following_url": "https://api.github.com/users/mssalvatore/following{/other_user}",
            "gists_url": "https://api.github.com/users/mssalvatore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mssalvatore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mssalvatore/subscriptions",
            "organizations_url": "https://api.github.com/users/mssalvatore/orgs",
            "repos_url": "https://api.github.com/users/mssalvatore/repos",
            "events_url": "https://api.github.com/users/mssalvatore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mssalvatore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-29T23:23:57Z",
        "updated_at": "2023-11-07T03:50:38Z",
        "closed_at": "2023-11-07T03:50:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6943",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6943",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6943.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6943.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n\r\n## Description\r\nDescription: Presently, vectorstores and `VectorStoreRetrievers` use strings to identify the search type that should be used. This approach has a few shortcomings:\r\n\r\n1. Strings can be easily mistyped, and IDEs are unlikely to let you know.\r\n2. Code completion may be unreliable.\r\n3. IDEs likely won't allow you to easily refactor usage of string literals throughout the code.\r\n4. Users and maintainers must read through various classes to understand what types of searches are supported by the system as a whole\r\n5. If maintainers would like enable new search types within the framework, it may not be obvious how such system-wide changes can be made.\r\n6. Without a clear list of supported search types, \"synonyms\" may be introduced, making the system inconsistent and increasing the cognitive load on the maintainers and users. For an example, see `RedisVectorStoreRetriever`, which defines a search type of \"similarity_limit\", which I believe is synonymous with \"similarity_score_threshold\".\r\n\r\nReplacing the use of string literals with an `Enum` solves these problems. It provides stronger typing and (hopefully) a reduced risk of introducing defects into new or existing code. Users and maintainers alike can easily see what the system supports in a single location, and the system is more likely to be self-consistent.\r\n\r\n## Tag Maintainer\r\n @rlancemartin @eyurtsev @hwchase17\r\n\r\n## Note\r\nThese changes should be fully backwards compatible since the `Enum` also inherits `str`.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6943/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6942",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6942/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6942/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6942/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6942",
        "id": 1781601017,
        "node_id": "PR_kwDOIPDwls5USGyK",
        "number": 6942,
        "title": "Load Evaluator",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-29T22:40:20Z",
        "updated_at": "2023-07-06T20:59:00Z",
        "closed_at": "2023-07-06T20:58:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6942",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6942",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6942.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6942.patch",
            "merged_at": "2023-07-06T20:58:59Z"
        },
        "body": "Create a `load_evaluators()` function so you don't have to import all the individual evaluator classes",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6942/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6942/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6940",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6940/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6940/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6940/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6940",
        "id": 1781559211,
        "node_id": "PR_kwDOIPDwls5UR9pd",
        "number": 6940,
        "title": "Added support for Amazon SageMaker Asynchronous Endpoints",
        "user": {
            "login": "dgallitelli",
            "id": 9881522,
            "node_id": "MDQ6VXNlcjk4ODE1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9881522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dgallitelli",
            "html_url": "https://github.com/dgallitelli",
            "followers_url": "https://api.github.com/users/dgallitelli/followers",
            "following_url": "https://api.github.com/users/dgallitelli/following{/other_user}",
            "gists_url": "https://api.github.com/users/dgallitelli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dgallitelli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dgallitelli/subscriptions",
            "organizations_url": "https://api.github.com/users/dgallitelli/orgs",
            "repos_url": "https://api.github.com/users/dgallitelli/repos",
            "events_url": "https://api.github.com/users/dgallitelli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dgallitelli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-06-29T21:49:57Z",
        "updated_at": "2023-11-07T03:53:23Z",
        "closed_at": "2023-11-07T03:53:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6940",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6940",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6940.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6940.patch",
            "merged_at": null
        },
        "body": "## Description\r\nAdded support for Amazon SageMaker Asynchronous Endpoints.\r\n\r\n## Issue\r\n#6928 \r\n\r\n## Dependencies\r\nboto3, uuid\r\n\r\n## Maintainer\r\n@hwchase17 \r\n\r\n## Twitter handle\r\nDGallitelli95\r\n\r\n## Code to test this\r\n\r\n```python\r\nfrom typing import Dict\r\nfrom langchain import PromptTemplate\r\nfrom langchain.llms.sagemaker_endpoint import LLMContentHandler, SagemakerAsyncEndpoint\r\nfrom langchain.chains import LLMChain\r\n\r\n# This ContentHandler has been tested with Falcon40B Instruct from SageMaker JumpStart\r\nclass ContentHandler(LLMContentHandler):\r\n    content_type:str = \"application/json\"\r\n    accepts:str = \"application/json\"\r\n    len_prompt:int = 0\r\n\r\n    def transform_input(self, prompt: str, model_kwargs: Dict) -> bytes:\r\n        self.len_prompt = len(prompt)\r\n        input_str = json.dumps({\"inputs\": prompt, \"parameters\": {\"max_new_tokens\": 100, \"do_sample\": False, \"repetition_penalty\": 1.1}})\r\n        return input_str.encode('utf-8')\r\n\r\n    def transform_output(self, output: bytes) -> str:\r\n        response_json = output.read()\r\n        res = json.loads(response_json)\r\n        ans = res[0]['generated_text']\r\n        return ans\r\n\r\nchain = LLMChain(\r\n    llm=SagemakerAsyncEndpoint(\r\n        input_bucket=bucket,\r\n        input_prefix=prefix,\r\n        endpoint_name=my_model.endpoint_name,\r\n        region_name=sagemaker.Session().boto_region_name,\r\n        content_handler=ContentHandler(),\r\n    ),\r\n    prompt=PromptTemplate(\r\n        input_variables=[\"query\"],\r\n        template=\"{query}\",\r\n    ),\r\n)\r\n\r\nprint(chain.run(\"What is the purpose of life?\"))\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6940/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6940/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6939",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6939/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6939/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6939/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6939",
        "id": 1781557474,
        "node_id": "I_kwDOIPDwls5qMGji",
        "number": 6939,
        "title": "add `Brave` Search",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-29T21:47:51Z",
        "updated_at": "2023-06-30T15:24:25Z",
        "closed_at": "2023-06-30T15:24:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\n[Brave Search](https://api.search.brave.com/app/dashboard) is a new interesting search engine\r\nIt can be used in place of the `Google Search`.\n\n### Motivation\n\nUsers who are subscribers of Brave Search can use this.\n\n### Your contribution\n\nI can try to implement it if somebody is interested in this integration.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6939/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6938",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6938/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6938/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6938/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6938",
        "id": 1781527088,
        "node_id": "I_kwDOIPDwls5qL_Iw",
        "number": 6938,
        "title": "Chroma (duckdb+parquet) DB isn't saving the parquet files for persisted DB until application is killed",
        "user": {
            "login": "JackLeick",
            "id": 129417742,
            "node_id": "U_kgDOB7bCDg",
            "avatar_url": "https://avatars.githubusercontent.com/u/129417742?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JackLeick",
            "html_url": "https://github.com/JackLeick",
            "followers_url": "https://api.github.com/users/JackLeick/followers",
            "following_url": "https://api.github.com/users/JackLeick/following{/other_user}",
            "gists_url": "https://api.github.com/users/JackLeick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JackLeick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JackLeick/subscriptions",
            "organizations_url": "https://api.github.com/users/JackLeick/orgs",
            "repos_url": "https://api.github.com/users/JackLeick/repos",
            "events_url": "https://api.github.com/users/JackLeick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JackLeick/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-06-29T21:15:14Z",
        "updated_at": "2023-10-06T16:39:27Z",
        "closed_at": "2023-10-06T16:39:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nChroma v0.2.36, python 3.9\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n`\r\n            settings = Settings(\r\n                chroma_db_impl='duckdb+parquet',\r\n                persist_directory=\"db\",\r\n                anonymized_telemetry=False\r\n            )\r\n\r\n            pages = self._load_single_document(file_path=file_path)\r\n            docs = text_splitter.split_documents(pages)\r\n            db = Chroma.from_documents(docs, embedding_function, client_settings=settings)\r\n`\n\n### Expected behavior\n\nAll files for the database should be created in the db directory. However, the parquet files are not being created when db.from_documents() is called.\r\nHowever, this is not happening. All the files in the index directory are created at this time.\r\n\r\nLater, when the application is killed (flask application, so in between requests the DB is torn down and thus should be persisited), then the parquet files show up.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6938/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6938/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6937",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6937/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6937/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6937/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6937",
        "id": 1781513642,
        "node_id": "PR_kwDOIPDwls5URz0t",
        "number": 6937,
        "title": "docstrings `document_loaders` 3",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "baskaryan",
                "id": 22008038,
                "node_id": "MDQ6VXNlcjIyMDA4MDM4",
                "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/baskaryan",
                "html_url": "https://github.com/baskaryan",
                "followers_url": "https://api.github.com/users/baskaryan/followers",
                "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
                "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
                "organizations_url": "https://api.github.com/users/baskaryan/orgs",
                "repos_url": "https://api.github.com/users/baskaryan/repos",
                "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/baskaryan/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-29T21:04:29Z",
        "updated_at": "2023-07-10T16:34:43Z",
        "closed_at": "2023-07-10T15:56:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6937",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6937",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6937.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6937.patch",
            "merged_at": "2023-07-10T15:56:54Z"
        },
        "body": "- Updated docstrings for `document_loaders`\r\n- Mass update `\"\"\"Loader that loads` to `\"\"\"Loads`\r\n\r\n@baskaryan  - please, review\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6937/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6937/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6936",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6936/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6936/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6936/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6936",
        "id": 1781364740,
        "node_id": "I_kwDOIPDwls5qLXgE",
        "number": 6936,
        "title": "Missing reference to o365_toolkit module in __init__.py of agent_toolkits",
        "user": {
            "login": "oberthou",
            "id": 24804373,
            "node_id": "MDQ6VXNlcjI0ODA0Mzcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24804373?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oberthou",
            "html_url": "https://github.com/oberthou",
            "followers_url": "https://api.github.com/users/oberthou/followers",
            "following_url": "https://api.github.com/users/oberthou/following{/other_user}",
            "gists_url": "https://api.github.com/users/oberthou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oberthou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oberthou/subscriptions",
            "organizations_url": "https://api.github.com/users/oberthou/orgs",
            "repos_url": "https://api.github.com/users/oberthou/repos",
            "events_url": "https://api.github.com/users/oberthou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oberthou/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-29T19:23:25Z",
        "updated_at": "2023-09-28T16:20:50Z",
        "closed_at": "2023-09-28T16:20:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.218 \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n![E4D3964C-8891-46EE-879F-D4F862351BC1](https://github.com/hwchase17/langchain/assets/24804373/399a5a2f-0328-4bf9-bc4a-e4f7a856611a)\r\n\n\n### Expected behavior\n\nThe module should be found automatically. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6936/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6936/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6934",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6934/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6934/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6934/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6934",
        "id": 1781255515,
        "node_id": "I_kwDOIPDwls5qK81b",
        "number": 6934,
        "title": "SageMaker Endpoint - Validations",
        "user": {
            "login": "aws-khatria",
            "id": 107514829,
            "node_id": "U_kgDOBmiLzQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/107514829?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aws-khatria",
            "html_url": "https://github.com/aws-khatria",
            "followers_url": "https://api.github.com/users/aws-khatria/followers",
            "following_url": "https://api.github.com/users/aws-khatria/following{/other_user}",
            "gists_url": "https://api.github.com/users/aws-khatria/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aws-khatria/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aws-khatria/subscriptions",
            "organizations_url": "https://api.github.com/users/aws-khatria/orgs",
            "repos_url": "https://api.github.com/users/aws-khatria/repos",
            "events_url": "https://api.github.com/users/aws-khatria/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aws-khatria/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-29T17:43:12Z",
        "updated_at": "2023-11-30T16:08:26Z",
        "closed_at": "2023-11-30T16:08:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nThe SageMaker Endpoint validation function currently throws a missing credential error if the region name is not provided in the input. However, it is crucial to perform input validation for the region name to provide the user with clear error information.\r\n\r\nGitHub Issue Reference:\r\nFor the code reference related to this issue, please visit: [GitHub Link](https://github.com/hwchase17/langchain/blob/7dcc698ebf4ebf4eb7331d25cec279f402918629472b/langchain/llms/sagemaker_endpoint.py#L177)\n\n### Who can help?\n\n@3coins \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThis can be reproduced by creating a SageMaker Endpoing LangChain without specifying region name. Please ensure that you have valid AWS credentials configured.\n\n### Expected behavior\n\nThe error message must state\r\n\r\n```Region name is missing. Please enter valid region name. E.g: us-west-2.```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6934/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6934/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6933",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6933/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6933/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6933/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6933",
        "id": 1781214707,
        "node_id": "I_kwDOIPDwls5qKy3z",
        "number": 6933,
        "title": "General OpenAI Function Mapping from Pydantic, Dicts directly to function, parameters, and properties",
        "user": {
            "login": "enjuichang",
            "id": 55577469,
            "node_id": "MDQ6VXNlcjU1NTc3NDY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/55577469?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/enjuichang",
            "html_url": "https://github.com/enjuichang",
            "followers_url": "https://api.github.com/users/enjuichang/followers",
            "following_url": "https://api.github.com/users/enjuichang/following{/other_user}",
            "gists_url": "https://api.github.com/users/enjuichang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/enjuichang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/enjuichang/subscriptions",
            "organizations_url": "https://api.github.com/users/enjuichang/orgs",
            "repos_url": "https://api.github.com/users/enjuichang/repos",
            "events_url": "https://api.github.com/users/enjuichang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/enjuichang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-06-29T17:07:09Z",
        "updated_at": "2023-07-08T01:50:27Z",
        "closed_at": "2023-07-08T01:50:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nA universal approach to add openai functions specifically for output format control to `LLMchain`. Create a class that takes in dict, json, pydantic, or even rail specs (from guardrails) to preprocess classes or dictionaries into openai functions (function, parameters, and properties) for the `llm_kwargs` in `LLMChain` class in conjunction with the openai function parsers.\n\n### Motivation\n\nIt is hard to use the function calling feature right now if you are not working with agents (can access using `format_tool_to_openai_function`) or a specific use case, such as the Extractor or QA chains. The idea is to create a general class that takes in dict, json, pydantic, or even rail specs (from guardrails) to preprocess classes or dictionaries into openai functions for better control of the output format.\n\n### Your contribution\n\nI can help with this, should I put this in the `docs/modules` folder?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6933/reactions",
            "total_count": 4,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6933/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6932",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6932/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6932/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6932/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6932",
        "id": 1781213657,
        "node_id": "I_kwDOIPDwls5qKynZ",
        "number": 6932,
        "title": "Issue: How to create async calls to custom LLMs",
        "user": {
            "login": "ruggero-balteri",
            "id": 17119373,
            "node_id": "MDQ6VXNlcjE3MTE5Mzcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/17119373?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ruggero-balteri",
            "html_url": "https://github.com/ruggero-balteri",
            "followers_url": "https://api.github.com/users/ruggero-balteri/followers",
            "following_url": "https://api.github.com/users/ruggero-balteri/following{/other_user}",
            "gists_url": "https://api.github.com/users/ruggero-balteri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ruggero-balteri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ruggero-balteri/subscriptions",
            "organizations_url": "https://api.github.com/users/ruggero-balteri/orgs",
            "repos_url": "https://api.github.com/users/ruggero-balteri/repos",
            "events_url": "https://api.github.com/users/ruggero-balteri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ruggero-balteri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-29T17:06:20Z",
        "updated_at": "2023-06-29T22:20:21Z",
        "closed_at": "2023-06-29T22:20:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHello!\r\n\r\nI am currently using Langchain to interface with a [customLLM](https://python.langchain.com/docs/modules/model_io/models/llms/how_to/custom_llm) async.\r\nTo do so, I am overriding the original `LLM` class as explained in the tutorial as such:\r\n\r\n```\r\n\r\nclass LLMInterface(LLM):\r\n    @property\r\n    def _llm_type(self) -> str:\r\n        return \"Ruggero's LLM\"\r\n\r\n    async def send_request(self, payload):\r\n        return await some_function_that_queries_custom_llm(payload)\r\n\r\n    def _call(\r\n        self,\r\n        prompt: str,\r\n        stop: Optional[List[str]] = None,\r\n        run_manager: Optional[CallbackManagerForLLMRun] = None,\r\n    ) -> str:\r\n        if stop is not None:\r\n            raise ValueError(\"stop kwargs are not permitted.\")\r\n        payload = json.dumps({\"messages\": [{\"role\": \"user\", \"content\": prompt}]})\r\n        future = self.run_in_executor(self.send_request, payload)\r\n        raw_response = future.result()  # get the actual result\r\n        print(raw_response)\r\n        # Parse JSON response\r\n        response_json = json.loads(raw_response)\r\n        # Extract content\r\n        for message in response_json[\"messages\"]:\r\n            if message[\"role\"] == \"bot\":\r\n                content = message[\"content\"]\r\n                return content\r\n\r\n        # Return empty string if no bot message found\r\n        return \"\"\r\n```\r\nUnfortunately I get:\r\n```\r\n    159                     reductor = getattr(x, \"__reduce_ex__\", None)\r\n    160                     if reductor is not None:\r\n--> 161                         rv = reductor(4)\r\n    162                     else:\r\n    163                         reductor = getattr(x, \"__reduce__\", None)\r\nTypeError: cannot pickle '_queue.SimpleQueue' object\r\n```\r\n\r\nEven if a use an executor I get the similar problem\r\n```\r\n    def run_in_executor(self, coro_func: Any, *args: Any) -> Any:\r\n        future_result = Future()\r\n\r\n        def wrapper():\r\n            loop = asyncio.new_event_loop()\r\n            asyncio.set_event_loop(loop)\r\n            try:\r\n                result = loop.run_until_complete(coro_func(*args))\r\n\r\n                future_result.set_result(result)\r\n            except Exception as e:\r\n                future_result.set_exception(e)\r\n            finally:\r\n                loop.run_until_complete(loop.shutdown_asyncgens())\r\n                loop.close()\r\n\r\n        Thread(target=wrapper).start()\r\n        return future_result\r\n```\r\nIn my code I use Langchain as such:\r\n```\r\n        llm_chain = ConversationChain(llm=llm, memory=memory)\r\n        output = llm_chain.run(self.llm_input)\r\n```\r\n\r\nWhat is the appropriate way to interface a custom LLM that it is queried async?\r\ni know that Langchain supports [async calls ](https://blog.langchain.dev/async-api/) but I was not able to make it work\r\n\r\nThank you!\n\n### Suggestion:\n\nproviding a \r\n\r\n```\r\n    async def _async_call(\r\n        self,\r\n        prompt: str,\r\n        stop: Optional[List[str]] = None,\r\n        run_manager: Optional[CallbackManagerForLLMRun] = None,\r\n    ) -> str:\r\n```\r\n\r\nmethod would be ideal\r\nAny alternative work-around would be fine too \r\nThank you!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6932/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6932/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6931",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6931/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6931/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6931/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6931",
        "id": 1781186169,
        "node_id": "I_kwDOIPDwls5qKr55",
        "number": 6931,
        "title": "Issue: How to handle RouterChain when 1 or more destination chain(s) which is expecting a different input variable?",
        "user": {
            "login": "deckikwok",
            "id": 1747820,
            "node_id": "MDQ6VXNlcjE3NDc4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1747820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deckikwok",
            "html_url": "https://github.com/deckikwok",
            "followers_url": "https://api.github.com/users/deckikwok/followers",
            "following_url": "https://api.github.com/users/deckikwok/following{/other_user}",
            "gists_url": "https://api.github.com/users/deckikwok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deckikwok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deckikwok/subscriptions",
            "organizations_url": "https://api.github.com/users/deckikwok/orgs",
            "repos_url": "https://api.github.com/users/deckikwok/repos",
            "events_url": "https://api.github.com/users/deckikwok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deckikwok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-29T16:45:54Z",
        "updated_at": "2023-08-03T08:30:01Z",
        "closed_at": "2023-07-06T06:04:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWould like to ask how we should deal with multiple destination chains where the chains are expecting different input variables? \r\n\r\nFor e.g. in the tutorial for MultiPromptChain, i would like math questions to be directed to the PalChain instead of the standard LLMChain.  With the initial LLMRouterChain, the router prompt uses `input` as the input_variables. however, when it has decided that the input `what is 2+2` is a math question and should be routed to PalChain, i am presented the error\r\n\r\n```\r\n[/usr/local/lib/python3.10/dist-packages/langchain/chains/base.py](https://localhost:8080/#) in _validate_inputs(self, inputs)\r\n    101         missing_keys = set(self.input_keys).difference(inputs)\r\n    102         if missing_keys:\r\n--> 103             raise ValueError(f\"Missing some input keys: {missing_keys}\")\r\n    104 \r\n    105     def _validate_outputs(self, outputs: Dict[str, Any]) -> None:\r\n\r\nValueError: Missing some input keys: {'question'}\r\n```\r\n\r\nmanually replacing the MATH_PROMPT that PalChain uses from {question} to {input} works but I would like to know how I can specify the input variable that the destination chain is expecting when setting up the destination_chains array here:\r\n\r\n```\r\nchain = MultiPromptChain(router_chain=router_chain, \r\n                         destination_chains=destination_chains, \r\n                         default_chain=default_chain, \r\n                         verbose=True\r\n                        )\r\n```\r\n\r\nbeen at it for 2 nights so am seeking help. thanks!\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6931/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6931/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6930",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6930/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6930/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6930/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6930",
        "id": 1781148858,
        "node_id": "I_kwDOIPDwls5qKiy6",
        "number": 6930,
        "title": "PR-s wait the review forever",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-29T16:19:06Z",
        "updated_at": "2023-11-19T22:54:48Z",
        "closed_at": "2023-11-19T22:52:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nThe PRs wait for review  (for any feedback) very long time.\r\n\r\n- Some sort of triage would be helpful.\r\n- Some sort of PR closure can be helpful. If something is wrong with PR this should be explained/discussed/addressed. Not providing **any feedback** is demoralizing for contributors.\r\n\r\nThanks!\r\nPS Take a look at the PR list and check PRs that passed all checks and has no answer/feedback. Hundreds of such PRs?\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6930/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6930/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6929",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6929/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6929/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6929/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6929",
        "id": 1781083889,
        "node_id": "PR_kwDOIPDwls5UQWVC",
        "number": 6929,
        "title": "Implement AgentExecutorIterator",
        "user": {
            "login": "SlapDrone",
            "id": 32279503,
            "node_id": "MDQ6VXNlcjMyMjc5NTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/32279503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SlapDrone",
            "html_url": "https://github.com/SlapDrone",
            "followers_url": "https://api.github.com/users/SlapDrone/followers",
            "following_url": "https://api.github.com/users/SlapDrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/SlapDrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SlapDrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SlapDrone/subscriptions",
            "organizations_url": "https://api.github.com/users/SlapDrone/orgs",
            "repos_url": "https://api.github.com/users/SlapDrone/repos",
            "events_url": "https://api.github.com/users/SlapDrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SlapDrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "baskaryan",
                "id": 22008038,
                "node_id": "MDQ6VXNlcjIyMDA4MDM4",
                "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/baskaryan",
                "html_url": "https://github.com/baskaryan",
                "followers_url": "https://api.github.com/users/baskaryan/followers",
                "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
                "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
                "organizations_url": "https://api.github.com/users/baskaryan/orgs",
                "repos_url": "https://api.github.com/users/baskaryan/repos",
                "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/baskaryan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-06-29T15:34:51Z",
        "updated_at": "2023-07-24T01:00:23Z",
        "closed_at": "2023-07-24T01:00:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6929",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6929",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6929.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6929.patch",
            "merged_at": "2023-07-24T01:00:22Z"
        },
        "body": "  - Description: Implements a `.iter()` method for the `AgentExecutor` class. This allows hooking into and intercepting intermediate agent steps.\r\n  - Issue: #6925 \r\n  - Dependencies: None\r\n  - Tag maintainer: @vowelparrot @agola11 \r\n  - Twitter handle: @SlapDron3 @lacicocodes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6929/reactions",
            "total_count": 6,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 5,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6929/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6928",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6928/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6928/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6928/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6928",
        "id": 1781073650,
        "node_id": "I_kwDOIPDwls5qKQby",
        "number": 6928,
        "title": "Support for Amazon SageMaker Asynchronous Endpoints",
        "user": {
            "login": "dgallitelli",
            "id": 9881522,
            "node_id": "MDQ6VXNlcjk4ODE1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9881522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dgallitelli",
            "html_url": "https://github.com/dgallitelli",
            "followers_url": "https://api.github.com/users/dgallitelli/followers",
            "following_url": "https://api.github.com/users/dgallitelli/following{/other_user}",
            "gists_url": "https://api.github.com/users/dgallitelli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dgallitelli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dgallitelli/subscriptions",
            "organizations_url": "https://api.github.com/users/dgallitelli/orgs",
            "repos_url": "https://api.github.com/users/dgallitelli/repos",
            "events_url": "https://api.github.com/users/dgallitelli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dgallitelli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-29T15:31:14Z",
        "updated_at": "2023-09-25T09:39:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nPlease add support to invoke [Amazon SageMaker Asynchronous Endpoints](https://docs.aws.amazon.com/sagemaker/latest/dg/async-inference.html). \r\n\r\nThis would require some code changes to the _call method of the SageMaker Endpoint class. Therefore, there is a need to create a new class, called SagemakerAsyncEndpoint, or introduce a logic in the SagemakerEndpoint class to check whether the endpoint is async or not.\n\n### Motivation\n\nThey are a great way to have models running on expensive GPU instances, while keeping cost control especially during POC phase.\n\n### Your contribution\n\nSubmitting a PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6928/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6928/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6927",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6927/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6927/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6927/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6927",
        "id": 1781057005,
        "node_id": "PR_kwDOIPDwls5UQRpk",
        "number": 6927,
        "title": "integrate JinaChat",
        "user": {
            "login": "delgermurun",
            "id": 492616,
            "node_id": "MDQ6VXNlcjQ5MjYxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/492616?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/delgermurun",
            "html_url": "https://github.com/delgermurun",
            "followers_url": "https://api.github.com/users/delgermurun/followers",
            "following_url": "https://api.github.com/users/delgermurun/following{/other_user}",
            "gists_url": "https://api.github.com/users/delgermurun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/delgermurun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/delgermurun/subscriptions",
            "organizations_url": "https://api.github.com/users/delgermurun/orgs",
            "repos_url": "https://api.github.com/users/delgermurun/repos",
            "events_url": "https://api.github.com/users/delgermurun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/delgermurun/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899415699,
                "node_id": "LA_kwDOIPDwls8AAAABJAcmkw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/llms",
                "name": "llms",
                "color": "7CDBB2",
                "default": false,
                "description": ""
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-29T15:23:54Z",
        "updated_at": "2023-07-08T09:47:40Z",
        "closed_at": "2023-07-08T06:17:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6927",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6927",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6927.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6927.patch",
            "merged_at": "2023-07-08T06:17:05Z"
        },
        "body": "Integration with https://chat.jina.ai/api. It is OpenAI compatible API.\r\n\r\n- Twitter handle: [https://twitter.com/JinaAI_](https://twitter.com/JinaAI_)\r\n\r\ncc @hwchase17, @baskaryan\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6927/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 3,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6927/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6926",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6926/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6926/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6926/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6926",
        "id": 1781037761,
        "node_id": "I_kwDOIPDwls5qKHrB",
        "number": 6926,
        "title": "ValidationError: 1 validation error for MapRerankDocumentsChain",
        "user": {
            "login": "Lin-jun-xiang",
            "id": 63782903,
            "node_id": "MDQ6VXNlcjYzNzgyOTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/63782903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lin-jun-xiang",
            "html_url": "https://github.com/Lin-jun-xiang",
            "followers_url": "https://api.github.com/users/Lin-jun-xiang/followers",
            "following_url": "https://api.github.com/users/Lin-jun-xiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lin-jun-xiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lin-jun-xiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lin-jun-xiang/subscriptions",
            "organizations_url": "https://api.github.com/users/Lin-jun-xiang/orgs",
            "repos_url": "https://api.github.com/users/Lin-jun-xiang/repos",
            "events_url": "https://api.github.com/users/Lin-jun-xiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lin-jun-xiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-29T15:15:32Z",
        "updated_at": "2023-09-25T14:27:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n* Langchain-0.0.215\r\n* Python3.8.6\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\n\r\nThe chain type in `RetrievalQA.from_chain_type()`:\r\n* `stuff`: work successfully\r\n* `refine`: not work unless uses correctly naming or parameter. #6912\r\n* `map_rerank`: not work\r\n* `map_reduce`: not work\r\n\r\nAll the error of each type like: \r\n\r\ncode:\r\n\r\n```python\r\nprompt_template = \"\"\"\r\nUse the following pieces of context to answer the question, if you don't know the answer, leave it blank don't try to make up an answer.\r\n\r\n{context}\r\n\r\nQuestion: {question}\r\n\r\nAnswer in JSON representations\r\n\"\"\"\r\n\r\nQA_PROMPT = PromptTemplate(\r\n    template=prompt_template,\r\n    input_variables=['context', 'question']\r\n)\r\nchain_type_kwargs = {\r\n    'prompt': QA_PROMPT,\r\n    'verbose': True\r\n}\r\n\r\ndocs = PyMuPDFLoader('file.pdf').load()\r\nsplitter = RecursiveCharacterTextSplitter(\r\n    chunk_size=chunk_size,\r\n    chunk_overlap=chunk_overlap\r\n)\r\ndocs = splitter.split_documents(document)\r\n\r\nembeddings = OpenAIEmbeddings()\r\ndb = Chroma.from_documents(\r\n    documents=docs,\r\n    embedding= embeddings\r\n)\r\n\r\nqa_cahin = RetrievalQA.from_chain_type(\r\n    llm=OpenAI(temperature=0.2),\r\n    chain_type='map_rerank',\r\n    retriever=db.as_retriever(),\r\n    chain_type_kwargs=chain_type_kwargs\r\n)\r\n```\r\n\r\nresult:\r\n\r\n```\r\nValidationError                           Traceback (most recent call last)\r\n[c:\\Users\\JunXiang\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\langchain\\chains\\retrieval_qa\\base.py](file:///C:/Users/JunXiang/AppData/Local/Programs/Python/Python38/lib/site-packages/langchain/chains/retrieval_qa/base.py) in from_chain_type(cls, llm, chain_type, chain_type_kwargs, **kwargs)\r\n     89         \"\"\"Load chain from chain type.\"\"\"\r\n     90         _chain_type_kwargs = chain_type_kwargs or {}\r\n---> 91         combine_documents_chain = load_qa_chain(\r\n     92             llm, chain_type=chain_type, **_chain_type_kwargs\r\n     93         )\r\n\r\n[c:\\Users\\JunXiang\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\langchain\\chains\\question_answering\\__init__.py](file:///C:/Users/JunXiang/AppData/Local/Programs/Python/Python38/lib/site-packages/langchain/chains/question_answering/__init__.py) in load_qa_chain(llm, chain_type, verbose, callback_manager, **kwargs)\r\n    236             f\"Should be one of {loader_mapping.keys()}\"\r\n...\r\n[c:\\Users\\JunXiang\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pydantic\\main.cp38-win_amd64.pyd](file:///C:/Users/JunXiang/AppData/Local/Programs/Python/Python38/lib/site-packages/pydantic/main.cp38-win_amd64.pyd) in pydantic.main.BaseModel.__init__()\r\n\r\nValidationError: 1 validation error for MapRerankDocumentsChain\r\n__root__\r\n  Output parser of llm_chain should be a RegexParser, got None (type=value_error)\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nDoes not crash, when i try to run it.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6926/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6926/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6925",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6925/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6925/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6925/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6925",
        "id": 1781033687,
        "node_id": "I_kwDOIPDwls5qKGrX",
        "number": 6925,
        "title": "Iterator version of AgentExecutor",
        "user": {
            "login": "SlapDrone",
            "id": 32279503,
            "node_id": "MDQ6VXNlcjMyMjc5NTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/32279503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SlapDrone",
            "html_url": "https://github.com/SlapDrone",
            "followers_url": "https://api.github.com/users/SlapDrone/followers",
            "following_url": "https://api.github.com/users/SlapDrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/SlapDrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SlapDrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SlapDrone/subscriptions",
            "organizations_url": "https://api.github.com/users/SlapDrone/orgs",
            "repos_url": "https://api.github.com/users/SlapDrone/repos",
            "events_url": "https://api.github.com/users/SlapDrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SlapDrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-29T15:13:26Z",
        "updated_at": "2023-07-25T16:33:49Z",
        "closed_at": "2023-07-25T16:33:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nA colleague and I would like to implement an iterator version of the AgentExecutor. That is, we'd like to expose each intermediate step of the plan/action/observation loop. This should look something like:\r\n\r\n```python3\r\ninputs = ... # complex question that requires tool usage, multi-step\r\n\r\nfor step in agent_executor.iter(inputs=inputs):\r\n    do_stuff_with(step)\r\n```\n\n### Motivation\n\nThis would be useful for a few applications. By hooking into agent steps we could:\r\n\r\n- Route different thoughts/actions/observations conditionally to:\r\n    - different frontend components \r\n    - different postprocessing/analysis logic\r\n    - other agents\r\n\r\nWe could also \"pause\" agent execution and intervene.\n\n### Your contribution\n\nYes, we have a PR ~ready.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6925/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 3,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6925/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6924",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6924/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6924/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6924/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6924",
        "id": 1780951536,
        "node_id": "I_kwDOIPDwls5qJynw",
        "number": 6924,
        "title": "Support BingNewsApiWrapper on utilities",
        "user": {
            "login": "skspark",
            "id": 118829871,
            "node_id": "U_kgDOBxUzLw",
            "avatar_url": "https://avatars.githubusercontent.com/u/118829871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skspark",
            "html_url": "https://github.com/skspark",
            "followers_url": "https://api.github.com/users/skspark/followers",
            "following_url": "https://api.github.com/users/skspark/following{/other_user}",
            "gists_url": "https://api.github.com/users/skspark/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skspark/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skspark/subscriptions",
            "organizations_url": "https://api.github.com/users/skspark/orgs",
            "repos_url": "https://api.github.com/users/skspark/repos",
            "events_url": "https://api.github.com/users/skspark/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skspark/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-29T14:28:14Z",
        "updated_at": "2023-08-31T07:22:13Z",
        "closed_at": "2023-08-31T07:22:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nHello, I'd like to ask about supporting [BingNewsAPI](https://www.microsoft.com/en-us/bing/apis/bing-news-search-api), which the apis and response format is different from bing web search api, that I cannot utilize existing [BingSearchAPIWrapper](https://python.langchain.com/docs/modules/agents/tools/integrations/bing_search) result or run method.\r\nI know that you provide separating host url in existing BingSearchWrapper, but as the response format is different, there is an parsing error on calling result method.\r\n\r\n### Motivation\r\n\r\nI cannot utilize existing [BingSearchAPIWrapper](https://python.langchain.com/docs/modules/agents/tools/integrations/bing_search) s result or run method on [BingNewsAPI](https://www.microsoft.com/en-us/bing/apis/bing-news-search-api)\r\n\r\n### Your contribution\r\n\r\nIf you allow me, I'd like to create pr for BingNewsSearchAPIWrapper utilities.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6924/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6924/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6923",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6923/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6923/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6923/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6923",
        "id": 1780945041,
        "node_id": "I_kwDOIPDwls5qJxCR",
        "number": 6923,
        "title": "Structured Agent Search Not Working",
        "user": {
            "login": "frederikskovw",
            "id": 97087128,
            "node_id": "U_kgDOBclumA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97087128?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frederikskovw",
            "html_url": "https://github.com/frederikskovw",
            "followers_url": "https://api.github.com/users/frederikskovw/followers",
            "following_url": "https://api.github.com/users/frederikskovw/following{/other_user}",
            "gists_url": "https://api.github.com/users/frederikskovw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frederikskovw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frederikskovw/subscriptions",
            "organizations_url": "https://api.github.com/users/frederikskovw/orgs",
            "repos_url": "https://api.github.com/users/frederikskovw/repos",
            "events_url": "https://api.github.com/users/frederikskovw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frederikskovw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-29T14:25:29Z",
        "updated_at": "2023-11-27T08:25:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nTrying to get an agent to describe the contents of a particular URL for me, however, **my agent does not execute past first step**. Attached image to show what my code looks like and where it freezes as it runs.\r\n\r\n<img width=\"683\" alt=\"freezing_agent\" src=\"https://github.com/hwchase17/langchain/assets/97087128/b3888b6e-f016-479e-ac1a-3036b7f16d97\">\r\n\r\nThanks <3 !\r\n\r\n(also posted as discussion, was not sure where to add)\r\n\r\n### Who can help?\r\n\r\n@agola11 \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nfrom config import SERPAPI_API_KEY, OPENAI_API_KEY\r\nfrom langchain.agents import AgentType\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.agents import initialize_agent\r\nfrom langchain.agents.agent_toolkits import PlayWrightBrowserToolkit\r\nfrom langchain.tools.playwright.utils import create_async_playwright_browser\r\nimport asyncio\r\n\r\nasync_browser = create_async_playwright_browser()\r\nbrowser_toolkit = PlayWrightBrowserToolkit.from_browser(async_browser=async_browser)\r\ntools = browser_toolkit.get_tools()\r\n\r\ngpt_model = \"gpt-4\"\r\n\r\nllm = ChatOpenAI(\r\n    temperature=0,\r\n    model_name=gpt_model,\r\n    openai_api_key=OPENAI_API_KEY\r\n)\r\n\r\nagent_chain = initialize_agent(tools, llm, agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\r\n\r\nasync def main():\r\n    response = await agent_chain.arun(input=\"Browse to https://www.theverge.com/2023/3/14/23638033/openai-gpt-4-chatgpt-multimodal-deep-learning and describe it to me.\")\r\n    return response\r\n\r\nresult = asyncio.run(main())\r\nprint(result)\r\n\r\n\r\n### Expected behavior\r\n\r\nEnter chain, navigate to browser, read content in browser, return description.\r\n\r\nBased on: https://python.langchain.com/docs/modules/agents/agent_types/structured_chat.html",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6923/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6923/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6921",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6921/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6921/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6921/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6921",
        "id": 1780846938,
        "node_id": "I_kwDOIPDwls5qJZFa",
        "number": 6921,
        "title": "DOC: ",
        "user": {
            "login": "jroberge16",
            "id": 105321496,
            "node_id": "U_kgDOBkcUGA",
            "avatar_url": "https://avatars.githubusercontent.com/u/105321496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jroberge16",
            "html_url": "https://github.com/jroberge16",
            "followers_url": "https://api.github.com/users/jroberge16/followers",
            "following_url": "https://api.github.com/users/jroberge16/following{/other_user}",
            "gists_url": "https://api.github.com/users/jroberge16/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jroberge16/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jroberge16/subscriptions",
            "organizations_url": "https://api.github.com/users/jroberge16/orgs",
            "repos_url": "https://api.github.com/users/jroberge16/repos",
            "events_url": "https://api.github.com/users/jroberge16/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jroberge16/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-29T13:42:48Z",
        "updated_at": "2023-09-28T18:26:50Z",
        "closed_at": "2023-09-28T18:26:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nHey,\r\nLove your product, and just wanted to give some constructive feedback. Your new layout and organization strategy on \"https://python.langchain.com/docs/get_started/introduction.html\" is significantly harder to navigate\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6921/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6921/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6920",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6920/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6920/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6920/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6920",
        "id": 1780800182,
        "node_id": "I_kwDOIPDwls5qJNq2",
        "number": 6920,
        "title": "FileCallbackHandler doesn't log entering new chain",
        "user": {
            "login": "robatwilliams",
            "id": 3041926,
            "node_id": "MDQ6VXNlcjMwNDE5MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3041926?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robatwilliams",
            "html_url": "https://github.com/robatwilliams",
            "followers_url": "https://api.github.com/users/robatwilliams/followers",
            "following_url": "https://api.github.com/users/robatwilliams/following{/other_user}",
            "gists_url": "https://api.github.com/users/robatwilliams/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robatwilliams/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robatwilliams/subscriptions",
            "organizations_url": "https://api.github.com/users/robatwilliams/orgs",
            "repos_url": "https://api.github.com/users/robatwilliams/repos",
            "events_url": "https://api.github.com/users/robatwilliams/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robatwilliams/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-29T13:15:39Z",
        "updated_at": "2023-09-28T17:27:55Z",
        "closed_at": "2023-09-28T17:27:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.200\r\nPython 3.11.4\r\nWindows 10\n\n### Who can help?\n\n@agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Use with `load_qa_chain`\r\n\r\nError in console:\r\n```\r\nError in on_chain_start callback: 'name'\r\n```\r\n\r\nLog file content is missing \"Entering new chain\"\n\n### Expected behavior\n\n1. No error in console\r\n2. \"Entering new chain\" is present in log file\r\n\r\nFix: access dict with fallback like StdOutCallbackHandler does:\r\n```python\r\nclass_name = serialized.get(\"name\", \"\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6920/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6919",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6919/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6919/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6919/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6919",
        "id": 1780791122,
        "node_id": "I_kwDOIPDwls5qJLdS",
        "number": 6919,
        "title": "FileCallbackHandler should open file in UTF-8 encoding",
        "user": {
            "login": "robatwilliams",
            "id": 3041926,
            "node_id": "MDQ6VXNlcjMwNDE5MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3041926?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robatwilliams",
            "html_url": "https://github.com/robatwilliams",
            "followers_url": "https://api.github.com/users/robatwilliams/followers",
            "following_url": "https://api.github.com/users/robatwilliams/following{/other_user}",
            "gists_url": "https://api.github.com/users/robatwilliams/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robatwilliams/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robatwilliams/subscriptions",
            "organizations_url": "https://api.github.com/users/robatwilliams/orgs",
            "repos_url": "https://api.github.com/users/robatwilliams/repos",
            "events_url": "https://api.github.com/users/robatwilliams/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robatwilliams/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-29T13:10:04Z",
        "updated_at": "2023-09-28T17:29:58Z",
        "closed_at": "2023-09-28T17:29:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.200\r\nPython 3.11.4\r\nWindows 10\n\n### Who can help?\n\n@agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nUse the handler with a prompt containing characters that aren't represented on the platform charset (e.g. cp1252)\r\n\r\nError appears in console:\r\n```\r\n[manager.py:207] Error in on_text callback: 'charmap' codec can't encode character '\\u2010' in position 776: character maps to <undefined>\r\n```\r\n\r\nTarget logfile only has \"entering new chain\" and \"finished chain\" lines.\n\n### Expected behavior\n\n1. No error\r\n2. Log file has usual output\r\n\r\nFix: in constructor: ```self.file = cast(TextIO, open(file_path, \"a\", encoding=\"utf-8\"))```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6919/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6919/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6918",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6918/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6918/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6918/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6918",
        "id": 1780780200,
        "node_id": "I_kwDOIPDwls5qJIyo",
        "number": 6918,
        "title": "How to add memory to SQLDatabaseChain?",
        "user": {
            "login": "bleschunov",
            "id": 62828574,
            "node_id": "MDQ6VXNlcjYyODI4NTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/62828574?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bleschunov",
            "html_url": "https://github.com/bleschunov",
            "followers_url": "https://api.github.com/users/bleschunov/followers",
            "following_url": "https://api.github.com/users/bleschunov/following{/other_user}",
            "gists_url": "https://api.github.com/users/bleschunov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bleschunov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bleschunov/subscriptions",
            "organizations_url": "https://api.github.com/users/bleschunov/orgs",
            "repos_url": "https://api.github.com/users/bleschunov/repos",
            "events_url": "https://api.github.com/users/bleschunov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bleschunov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            },
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 28,
        "created_at": "2023-06-29T13:02:50Z",
        "updated_at": "2023-12-07T15:05:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI want to create a chain to make query against my database. Also I want to add memory to this chain.\r\n\r\nExample of dialogue I want to see:\r\n\r\nQuery: Who is an owner of website with domain domain.com? \r\nAnswer: Boba Bobovich \r\nQuery: Tell me his email Answer: \r\nBoba Bobovich's email is boba@boba.com\r\n\r\nI have this code:\r\n\r\n```\r\nimport os\r\nfrom langchain import OpenAI, SQLDatabase, SQLDatabaseChain, PromptTemplate\r\nfrom langchain.memory import ConversationBufferMemory\r\n\r\nmemory = ConversationBufferMemory()\r\ndb = SQLDatabase.from_uri(os.getenv(\"DB_URI\"))\r\nllm = OpenAI(temperature=0, verbose=True)\r\ndb_chain = SQLDatabaseChain.from_llm(llm, db, verbose=True, memory=memory)\r\n\r\ndb_chain.run(\"Who is owner of the website with domain https://damon.name\")\r\ndb_chain.run(\"Tell me his email\")\r\nprint(memory.load_memory_variables({}))\r\n```\r\n\r\nIt gives:\r\n\r\n\r\n```\r\n> Entering new  chain...\r\nWho is owner of the website with domain https://damon.name\r\nSQLQuery:SELECT first_name, last_name FROM owners JOIN websites ON owners.id = websites.owner_id WHERE domain = 'https://damon.name' LIMIT 5;\r\nSQLResult: [('Geo', 'Mertz')]\r\nAnswer:Geo Mertz is the owner of the website with domain https://damon.name.\r\n> Finished chain.\r\n\r\n> Entering new  chain...\r\nTell me his email\r\nSQLQuery:SELECT email FROM owners WHERE first_name = 'Westley' AND last_name = 'Waters'\r\nSQLResult: [('Ken70@hotmail.com',)]\r\nAnswer:Westley Waters' email is Ken70@hotmail.com.\r\n> Finished chain.\r\n{'history': \"Human: Who is owner of the website with domain https://damon.name\\nAI: Geo Mertz is the owner of the website with domain https://damon.name.\\nHuman: Tell me his email\\nAI: Westley Waters' email is Ken70@hotmail.com.\"}\r\n```\r\n\r\nWell, it saves context to memory but chain doesn't use it to give a proper answer (wrong email). How to fix it?\r\n\r\nAlso I don't want to use an agent because I want to manage to do this with a simple chain first. Tell me if it's impossible with simple chain.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6918/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6918/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6917",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6917/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6917/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6917/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6917",
        "id": 1780741688,
        "node_id": "I_kwDOIPDwls5qI_Y4",
        "number": 6917,
        "title": "Issue: User based chat history",
        "user": {
            "login": "ankitathakur12",
            "id": 135828817,
            "node_id": "U_kgDOCBiVUQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/135828817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ankitathakur12",
            "html_url": "https://github.com/ankitathakur12",
            "followers_url": "https://api.github.com/users/ankitathakur12/followers",
            "following_url": "https://api.github.com/users/ankitathakur12/following{/other_user}",
            "gists_url": "https://api.github.com/users/ankitathakur12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ankitathakur12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ankitathakur12/subscriptions",
            "organizations_url": "https://api.github.com/users/ankitathakur12/orgs",
            "repos_url": "https://api.github.com/users/ankitathakur12/repos",
            "events_url": "https://api.github.com/users/ankitathakur12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ankitathakur12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-29T12:37:35Z",
        "updated_at": "2023-11-13T16:08:20Z",
        "closed_at": "2023-11-13T16:08:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### User based chat history\r\n\r\nHow I do implementation of User based chat history management and thread management. Plaese give any suggestion regarding this.\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6917/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6917/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]