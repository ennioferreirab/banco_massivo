[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4333",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4333/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4333/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4333/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4333",
        "id": 1700095263,
        "node_id": "PR_kwDOIPDwls5P_eqS",
        "number": 4333,
        "title": "Added warning when we have model name inconsistency in ChatOpenAI",
        "user": {
            "login": "PawelFaron",
            "id": 42373772,
            "node_id": "MDQ6VXNlcjQyMzczNzcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/42373772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PawelFaron",
            "html_url": "https://github.com/PawelFaron",
            "followers_url": "https://api.github.com/users/PawelFaron/followers",
            "following_url": "https://api.github.com/users/PawelFaron/following{/other_user}",
            "gists_url": "https://api.github.com/users/PawelFaron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PawelFaron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PawelFaron/subscriptions",
            "organizations_url": "https://api.github.com/users/PawelFaron/orgs",
            "repos_url": "https://api.github.com/users/PawelFaron/repos",
            "events_url": "https://api.github.com/users/PawelFaron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PawelFaron/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-08T11:43:40Z",
        "updated_at": "2023-05-08T21:58:30Z",
        "closed_at": "2023-05-08T21:58:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4333",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4333",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4333.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4333.patch",
            "merged_at": "2023-05-08T21:58:30Z"
        },
        "body": "Fix for the issue reported here:\r\nhttps://github.com/hwchase17/langchain/issues/4331",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4333/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4333/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4332",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4332/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4332/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4332/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4332",
        "id": 1700049036,
        "node_id": "I_kwDOIPDwls5lVLCM",
        "number": 4332,
        "title": "Issue: Compatibility issues with LangChain between different versions",
        "user": {
            "login": "YingChen1996",
            "id": 26239730,
            "node_id": "MDQ6VXNlcjI2MjM5NzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/26239730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YingChen1996",
            "html_url": "https://github.com/YingChen1996",
            "followers_url": "https://api.github.com/users/YingChen1996/followers",
            "following_url": "https://api.github.com/users/YingChen1996/following{/other_user}",
            "gists_url": "https://api.github.com/users/YingChen1996/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YingChen1996/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YingChen1996/subscriptions",
            "organizations_url": "https://api.github.com/users/YingChen1996/orgs",
            "repos_url": "https://api.github.com/users/YingChen1996/repos",
            "events_url": "https://api.github.com/users/YingChen1996/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YingChen1996/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-08T11:06:34Z",
        "updated_at": "2023-09-19T16:11:47Z",
        "closed_at": "2023-09-19T16:11:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHi, we frequently encounter breaking issues during development recently due to LangChain daily release. May I ask how do you plan to solve this problem in the future and recommend users to use LangChain with compatibility issues? Thanks!\r\n\r\nFor example, we import CallbackManager like this in langchaine version <=0.0.153\r\n```from langchain.callbacks.base import CallbackManager```\r\nbut in the latest version, the class has been moved to manager.py and break our test, we need update code to \r\n```from langchain.callbacks.manager import CallbackManager``` to fix it\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4332/reactions",
            "total_count": 7,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 7,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4332/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4331",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4331/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4331/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4331/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4331",
        "id": 1700026427,
        "node_id": "I_kwDOIPDwls5lVFg7",
        "number": 4331,
        "title": "Issue: Model and model_name inconsistency in OpenAI LLMs such as ChatOpenAI",
        "user": {
            "login": "tabacof",
            "id": 2151702,
            "node_id": "MDQ6VXNlcjIxNTE3MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2151702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tabacof",
            "html_url": "https://github.com/tabacof",
            "followers_url": "https://api.github.com/users/tabacof/followers",
            "following_url": "https://api.github.com/users/tabacof/following{/other_user}",
            "gists_url": "https://api.github.com/users/tabacof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tabacof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tabacof/subscriptions",
            "organizations_url": "https://api.github.com/users/tabacof/orgs",
            "repos_url": "https://api.github.com/users/tabacof/repos",
            "events_url": "https://api.github.com/users/tabacof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tabacof/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T10:49:23Z",
        "updated_at": "2023-05-08T23:37:37Z",
        "closed_at": "2023-05-08T23:37:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nArgument `model_name` is the standard way of defining a model in LangChain's [ChatOpenAI](https://github.com/hwchase17/langchain/blob/65c95f9fb2b86cf3281f2f3939b37e71f048f741/langchain/chat_models/openai.py#L115). However, OpenAI uses `model` in their own [API](https://platform.openai.com/docs/api-reference/completions/create). To handle this discrepancy, LangChain transforms `model_name` into `model` [here](https://github.com/hwchase17/langchain/blob/65c95f9fb2b86cf3281f2f3939b37e71f048f741/langchain/chat_models/openai.py#L202).\r\n\r\nThe problem is that, if you ignore model_name and use model in the LLM instantiation e.g. `ChatOpenAI(model=...)`, it still works! It works because model becomes part of `model_kwargs`, which takes precedence over the default `model_name` (which would be \"gpt-3.5-turbo\"). This leads to an inconsistency: the `model` can be anything (e.g. \"gpt-4-0314\"), but `model_name` will be the default value.\r\n\r\nThis inconsistency won't cause any direct issue but can be problematic when you're trying to understand what models are actually being called and used. I'm raising this issue because I lost a couple of hours myself trying to understand what was happening.\n\n### Suggestion:\n\nThere are three ways to solve it:\r\n\r\n1. Raise an error or warning if model is used as an argument and suggest using model_name instead\r\n2. Raise a warning if model is defined differently from model_name\r\n3. Change from model_name to model to make it consistent with OpenAI's API\r\n\r\nI think (3) is unfeasible due to the breaking change, but raising a warning seems low effort and safe enough.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4331/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4331/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4329",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4329/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4329/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4329/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4329",
        "id": 1699909725,
        "node_id": "I_kwDOIPDwls5lUpBd",
        "number": 4329,
        "title": "Langchain isn't verbose any more [run_manager gets dropped]",
        "user": {
            "login": "h3ndrik",
            "id": 213619,
            "node_id": "MDQ6VXNlcjIxMzYxOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/213619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/h3ndrik",
            "html_url": "https://github.com/h3ndrik",
            "followers_url": "https://api.github.com/users/h3ndrik/followers",
            "following_url": "https://api.github.com/users/h3ndrik/following{/other_user}",
            "gists_url": "https://api.github.com/users/h3ndrik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/h3ndrik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/h3ndrik/subscriptions",
            "organizations_url": "https://api.github.com/users/h3ndrik/orgs",
            "repos_url": "https://api.github.com/users/h3ndrik/repos",
            "events_url": "https://api.github.com/users/h3ndrik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/h3ndrik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-08T09:43:07Z",
        "updated_at": "2023-09-22T16:09:29Z",
        "closed_at": "2023-09-22T16:09:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nPython 3.11.2\r\nLangchain 0.0.161\r\nDebian GNU/Linux 12 (bookworm)\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [X] Callbacks/Tracing\r\n- [X] Async\r\n\r\n### Reproduction\r\n\r\nHow does verbosity work? I had my python scripts output verbose information, i mean all that green prompt-text when executing chains. All the constructors of LLMs and Chains have verbose=True in their constructors. But somewhat recently langchains behaviour changed and after doing a `pip install --upgrade langchain` my verbose output completely disappeared.\r\nDo you have some sort of changelog or documentation on this? I didn't find any.\r\nA small script still produces verbose output. But my project doesn't. I'm not sure what i'm doing differently.\r\n\r\nEDIT: Maybe i should add that i'm doing async calls. And feeding it my own prompts from a PromptTemplate.from_template(\"...\"). Could be related to any of that?!\r\n\r\nEDIT2: Where does the green text even come from? I can see the chain calls a StdoutCallbackHandler. This fires and prints \"Entering new ConversationChain chain...\" as it's supposed to. But how do i debug the missing green text after that? It's not in the on_chain_start()...\r\n\r\n### Expected behavior\r\n\r\nVerbose output is produced when setting verbose=True",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4329/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4329/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4328",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4328/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4328/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4328/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4328",
        "id": 1699888708,
        "node_id": "I_kwDOIPDwls5lUj5E",
        "number": 4328,
        "title": "Issue: Can not configure serpapi base url via env",
        "user": {
            "login": "yanghua",
            "id": 2283778,
            "node_id": "MDQ6VXNlcjIyODM3Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2283778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yanghua",
            "html_url": "https://github.com/yanghua",
            "followers_url": "https://api.github.com/users/yanghua/followers",
            "following_url": "https://api.github.com/users/yanghua/following{/other_user}",
            "gists_url": "https://api.github.com/users/yanghua/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yanghua/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yanghua/subscriptions",
            "organizations_url": "https://api.github.com/users/yanghua/orgs",
            "repos_url": "https://api.github.com/users/yanghua/repos",
            "events_url": "https://api.github.com/users/yanghua/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yanghua/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-08T09:27:24Z",
        "updated_at": "2023-05-15T21:25:26Z",
        "closed_at": "2023-05-15T21:25:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nCurrently, the base URL of Serpapi is been hard coded.\r\n\r\nWhile some search services(e.g. Bing, `BING_SEARCH_URL`) are configurable.\r\n\r\nIn some companies, the original can not be allowed to access. We need to use nginx redirect proxy.\r\n\r\nSo we need to make the base URL configurable via env.\n\n### Suggestion:\n\nMake serpapi base url configurable via env",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4328/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4328/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4327",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4327/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4327/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4327/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4327",
        "id": 1699755334,
        "node_id": "I_kwDOIPDwls5lUDVG",
        "number": 4327,
        "title": "ModuleNotFoundError: No module named 'langchain.memory'",
        "user": {
            "login": "Daremitsu1",
            "id": 54842807,
            "node_id": "MDQ6VXNlcjU0ODQyODA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/54842807?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Daremitsu1",
            "html_url": "https://github.com/Daremitsu1",
            "followers_url": "https://api.github.com/users/Daremitsu1/followers",
            "following_url": "https://api.github.com/users/Daremitsu1/following{/other_user}",
            "gists_url": "https://api.github.com/users/Daremitsu1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Daremitsu1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Daremitsu1/subscriptions",
            "organizations_url": "https://api.github.com/users/Daremitsu1/orgs",
            "repos_url": "https://api.github.com/users/Daremitsu1/repos",
            "events_url": "https://api.github.com/users/Daremitsu1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Daremitsu1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-05-08T08:09:09Z",
        "updated_at": "2023-11-22T17:14:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHello, \r\n\r\nWhile trying to import `from langchain.memory import ConversationBufferMemory` I am getting the error ```\r\nModuleNotFoundError: No module named 'langchain.memory'\r\nTraceback:\r\n```\r\nFile \"c:\\users\\aviparna.biswas\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\streamlit\\runtime\\scriptrunner\\script_runner.py\", line 565, in _run_script\r\n    exec(code, module.__dict__)\r\nFile \"D:\\Python Projects\\POC\\Radium\\Ana\\app.py\", line 8, in <module>\r\n    from langchain.memory import ConversationBufferMemory\r\n```\r\n\r\nI have already installed langchain and it is showing in my packages.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4327/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4327/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4326",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4326/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4326/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4326/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4326",
        "id": 1699748061,
        "node_id": "I_kwDOIPDwls5lUBjd",
        "number": 4326,
        "title": "S3DirectoryLoader throws S3DirectoryLoader exception when prefix is a directory",
        "user": {
            "login": "markeste",
            "id": 130900561,
            "node_id": "U_kgDOB81iUQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/130900561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/markeste",
            "html_url": "https://github.com/markeste",
            "followers_url": "https://api.github.com/users/markeste/followers",
            "following_url": "https://api.github.com/users/markeste/following{/other_user}",
            "gists_url": "https://api.github.com/users/markeste/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/markeste/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/markeste/subscriptions",
            "organizations_url": "https://api.github.com/users/markeste/orgs",
            "repos_url": "https://api.github.com/users/markeste/repos",
            "events_url": "https://api.github.com/users/markeste/events{/privacy}",
            "received_events_url": "https://api.github.com/users/markeste/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-08T08:05:02Z",
        "updated_at": "2023-10-25T13:56:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nIn langchain 0.0.161, if I call \r\n`S3DirectoryLoader(bucket, prefix)` where `prefix` is a \"folder name\" e.g. \"documents/\" you get a IsADirectoryError: [Errno 21] Is a directory exception.\r\n\r\nIt looks like the code is doing a filter on the bucket objects and the filter returns the files as well as the folder itself. The S3FileLoader tries to download the folder and that's what causes the exception\r\n\r\n```\r\n        s3 = boto3.resource(\"s3\")\r\n        bucket = s3.Bucket(self.bucket)\r\n        docs = []\r\n        for obj in bucket.objects.filter(Prefix=self.prefix):\r\n            loader = S3FileLoader(self.bucket, obj.key)\r\n            docs.extend(loader.load())\r\n```\r\n\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Call S3DirectoryLoader(bucket, prefix) using a prefix that is a directory\r\n2. See the exception being thrown \n\n### Expected behavior\n\nThe documents inside the folder should be loaded. The folder itself should be ignored.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4326/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4326/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4325",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4325/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4325/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4325/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4325",
        "id": 1699733507,
        "node_id": "I_kwDOIPDwls5lT-AD",
        "number": 4325,
        "title": "Power BI Dataset Agent Issue",
        "user": {
            "login": "satishgunjal",
            "id": 16061972,
            "node_id": "MDQ6VXNlcjE2MDYxOTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16061972?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/satishgunjal",
            "html_url": "https://github.com/satishgunjal",
            "followers_url": "https://api.github.com/users/satishgunjal/followers",
            "following_url": "https://api.github.com/users/satishgunjal/following{/other_user}",
            "gists_url": "https://api.github.com/users/satishgunjal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/satishgunjal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/satishgunjal/subscriptions",
            "organizations_url": "https://api.github.com/users/satishgunjal/orgs",
            "repos_url": "https://api.github.com/users/satishgunjal/repos",
            "events_url": "https://api.github.com/users/satishgunjal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/satishgunjal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-05-08T07:57:11Z",
        "updated_at": "2023-11-16T13:15:50Z",
        "closed_at": "2023-05-19T15:25:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nWe are using the below Power BI Agent guide to try to connect to Power BI dashboard.\r\n\r\n[Power BI Dataset Agent](https://python.langchain.com/en/latest/modules/agents/toolkits/examples/powerbi.html)\r\n\r\nWe are able to connect to OpenAI API but facing issues with the below line of code.\r\n\r\n`powerbi=PowerBIDataset(dataset_id=\"<dataset_id>\", table_names=['table1', 'table2'], credential=DefaultAzureCredential())`\r\n\r\nError:\r\n\r\n> ConfigError: field \"credential\" not yet prepared so type is still a ForwardRef, you might need to call PowerBIDataset.update_forward_refs().\r\n\r\nWe tried searching to solve the issues we no luck so far. Is there any configuration we are missing? Can you share more details, is there any specific configuration or access required on power BI side?\r\n\r\nthanks in advance...\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSame steps mentioned your official PowerBI Dataset Agent documentation\n\n### Expected behavior\n\nWe should be able to connect to power BI",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4325/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4325/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4324",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4324/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4324/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4324/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4324",
        "id": 1699709093,
        "node_id": "I_kwDOIPDwls5lT4Cl",
        "number": 4324,
        "title": "Invalid response object from API due to Azure content filter",
        "user": {
            "login": "arkinyaara",
            "id": 72797778,
            "node_id": "MDQ6VXNlcjcyNzk3Nzc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/72797778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arkinyaara",
            "html_url": "https://github.com/arkinyaara",
            "followers_url": "https://api.github.com/users/arkinyaara/followers",
            "following_url": "https://api.github.com/users/arkinyaara/following{/other_user}",
            "gists_url": "https://api.github.com/users/arkinyaara/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arkinyaara/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arkinyaara/subscriptions",
            "organizations_url": "https://api.github.com/users/arkinyaara/orgs",
            "repos_url": "https://api.github.com/users/arkinyaara/repos",
            "events_url": "https://api.github.com/users/arkinyaara/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arkinyaara/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-08T07:36:54Z",
        "updated_at": "2023-12-14T16:08:42Z",
        "closed_at": "2023-12-14T16:08:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nWe use langchain for processing medical related questions. Some of the questions are about STIs, mental health issues, etc. some of these questions are marked as inappropriate and are filtered by Azure's prompt filter. The problem is that the response sent by Azure  in this case is of the wrong format, and the parsing of the response by langchain fails.\r\n\r\nOutput:\r\n\r\n```\r\nRetrying langchain.chat_models.openai.ChatOpenAI.completion_with_retry.<locals>._completion_with_retry in 1.0 seconds as it raised APIError: Invalid response object from API: '{\"error\":{\"message\":\"The response was filtered due to the prompt triggering Azure OpenAI\u2019s content management policy. Please modify your prompt and retry. To learn more about our content filtering policies please read our documentation: https://go.microsoft.com/fwlink/?linkid=2198766\",\"type\":null,\"param\":\"prompt\",\"code\":\"content_filter\",\"status\":400}}' (HTTP response code was 400).\r\nRetrying langchain.chat_models.openai.ChatOpenAI.completion_with_retry.<locals>._completion_with_retry in 2.0 seconds as it raised APIError: Invalid response object from API: '{\"error\":{\"message\":\"The response was filtered due to the prompt triggering Azure OpenAI\u2019s content management policy. Please modify your prompt and retry. To learn more about our content filtering policies please read our documentation: https://go.microsoft.com/fwlink/?linkid=2198766\",\"type\":null,\"param\":\"prompt\",\"code\":\"content_filter\",\"status\":400}}' (HTTP response code was 400).\r\nRetrying langchain.chat_models.openai.ChatOpenAI.completion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised APIError: Invalid response object from API: '{\"error\":{\"message\":\"The response was filtered due to the prompt triggering Azure OpenAI\u2019s content management policy. Please modify your prompt and retry. To learn more about our content filtering policies please read our documentation: https://go.microsoft.com/fwlink/?linkid=2198766\",\"type\":null,\"param\":\"prompt\",\"code\":\"content_filter\",\"status\":400}}' (HTTP response code was 400).\r\nRetrying langchain.chat_models.openai.ChatOpenAI.completion_with_retry.<locals>._completion_with_retry in 8.0 seconds as it raised APIError: Invalid response object from API: '{\"error\":{\"message\":\"The response was filtered due to the prompt triggering Azure OpenAI\u2019s content management policy. Please modify your prompt and retry. To learn more about our content filtering policies please read our documentation: https://go.microsoft.com/fwlink/?linkid=2198766\",\"type\":null,\"param\":\"prompt\",\"code\":\"content_filter\",\"status\":400}}' (HTTP response code was 400).\r\nRetrying langchain.chat_models.openai.ChatOpenAI.completion_with_retry.<locals>._completion_with_retry in 16.0 seconds as it raised APIError: Invalid response object from API: '{\"error\":{\"message\":\"The response was filtered due to the prompt triggering Azure OpenAI\u2019s content management policy. Please modify your prompt and retry. To learn more about our content filtering policies please read our documentation: https://go.microsoft.com/fwlink/?linkid=2198766\",\"type\":null,\"param\":\"prompt\",\"code\":\"content_filter\",\"status\":400}}' (HTTP response code was 400).\r\nTraceback (most recent call last):\r\n  File \"/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydevd_bundle/pydevd_exec2.py\", line 3, in Exec\r\n    exec(exp, global_vars, local_vars)\r\n  File \"<input>\", line 1, in <module>\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/langchain/chains/base.py\", line 116, in __call__\r\n    raise e\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/langchain/chains/llm.py\", line 57, in _call\r\n    return self.apply([inputs])[0]\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/langchain/chains/llm.py\", line 118, in apply\r\n    response = self.generate(input_list)\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/langchain/chains/llm.py\", line 62, in generate\r\n    return self.llm.generate_prompt(prompts, stop)\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/langchain/chat_models/base.py\", line 82, in generate_prompt\r\n    raise e\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/langchain/chat_models/base.py\", line 79, in generate_prompt\r\n    output = self.generate(prompt_messages, stop=stop)\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/langchain/chat_models/base.py\", line 54, in generate\r\n    results = [self._generate(m, stop=stop) for m in messages]\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/langchain/chat_models/base.py\", line 54, in <listcomp>\r\n    results = [self._generate(m, stop=stop) for m in messages]\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/langchain/chat_models/openai.py\", line 266, in _generate\r\n    response = self.completion_with_retry(messages=message_dicts, **params)\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/langchain/chat_models/openai.py\", line 228, in completion_with_retry\r\n    return _completion_with_retry(**kwargs)\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/tenacity/__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/tenacity/__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/tenacity/__init__.py\", line 325, in iter\r\n    raise retry_exc.reraise()\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/tenacity/__init__.py\", line 158, in reraise\r\n    raise self.last_attempt.result()\r\n  File \"/Users/proj/.pyenv/versions/3.9.9/lib/python3.9/concurrent/futures/_base.py\", line 438, in result\r\n    return self.__get_result()\r\n  File \"/Users/proj/.pyenv/versions/3.9.9/lib/python3.9/concurrent/futures/_base.py\", line 390, in __get_result\r\n    raise self._exception\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/tenacity/__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/langchain/chat_models/openai.py\", line 226, in _completion_with_retry\r\n    return self.client.create(**kwargs)\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/openai/api_resources/chat_completion.py\", line 25, in create\r\n    return super().create(*args, **kwargs)\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 153, in create\r\n    response, _, api_key = requestor.request(\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/openai/api_requestor.py\", line 226, in request\r\n    resp, got_stream = self._interpret_response(result, stream)\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/openai/api_requestor.py\", line 620, in _interpret_response\r\n    self._interpret_response_line(\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/openai/api_requestor.py\", line 683, in _interpret_response_line\r\n    raise self.handle_error_response(\r\n  File \"/Users/proj/.venv/lib/python3.9/site-packages/openai/api_requestor.py\", line 333, in handle_error_response\r\n    raise error.APIError(\r\nopenai.error.APIError: Invalid response object from API: '{\"error\":{\"message\":\"The response was filtered due to the prompt triggering Azure OpenAI\u2019s content management policy. Please modify your prompt and retry. To learn more about our content filtering policies please read our documentation: https://go.microsoft.com/fwlink/?linkid=2198766\",\"type\":null,\"param\":\"prompt\",\"code\":\"content_filter\",\"status\":400}}' (HTTP response code was 400)\r\n\r\n```\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\ncode to reproduce the problem:\r\n\r\n```python\r\n    from langchain import PromptTemplate, LLMChain\r\n    from langchain.chat_models import AzureChatOpenAI\r\n\r\n    llm = AzureChatOpenAI(\r\n        deployment_name=DEPLOYMENT_NAME,\r\n        engine=\"gpt-3.5-turbo\",\r\n    )\r\n\r\n    prompt = PromptTemplate(input_variables=[\"input\"], template=\"{input}\")\r\n    chain = LLMChain(prompt=prompt, llm=llm)\r\n    resp =  chain(\"too depressed, I want to end it all\")\r\n\r\n``` \r\n\r\n\r\n### Expected behavior\r\n\r\nThat the response from Azure be parsed without an API error and without retries",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4324/reactions",
            "total_count": 11,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 5
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4324/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4322",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4322/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4322/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4322/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4322",
        "id": 1699572765,
        "node_id": "PR_kwDOIPDwls5P9squ",
        "number": 4322,
        "title": "Sitemap localpath",
        "user": {
            "login": "luxterful",
            "id": 26602700,
            "node_id": "MDQ6VXNlcjI2NjAyNzAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/26602700?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luxterful",
            "html_url": "https://github.com/luxterful",
            "followers_url": "https://api.github.com/users/luxterful/followers",
            "following_url": "https://api.github.com/users/luxterful/following{/other_user}",
            "gists_url": "https://api.github.com/users/luxterful/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luxterful/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luxterful/subscriptions",
            "organizations_url": "https://api.github.com/users/luxterful/orgs",
            "repos_url": "https://api.github.com/users/luxterful/repos",
            "events_url": "https://api.github.com/users/luxterful/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luxterful/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T05:51:52Z",
        "updated_at": "2023-05-15T02:15:12Z",
        "closed_at": "2023-05-15T02:15:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4322",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4322",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4322.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4322.patch",
            "merged_at": "2023-05-15T02:15:12Z"
        },
        "body": "- Makes it possible to pass the path of a local file to the SitemapLoader\r\n- Is useful when the sitemap is only available locally or for testing purposes",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4322/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4322/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4321",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4321/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4321/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4321/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4321",
        "id": 1699496658,
        "node_id": "PR_kwDOIPDwls5P9cTI",
        "number": 4321,
        "title": "Gmail Toolkit",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T04:29:59Z",
        "updated_at": "2023-05-08T15:29:53Z",
        "closed_at": "2023-05-08T15:29:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4321",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4321",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4321.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4321.patch",
            "merged_at": "2023-05-08T15:29:51Z"
        },
        "body": "- Adds tools and toolkit for Gmail API (via the google SDK)\r\n- Adds a notebook",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4321/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4321/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4320",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4320/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4320/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4320/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4320",
        "id": 1699491430,
        "node_id": "PR_kwDOIPDwls5P9bKi",
        "number": 4320,
        "title": "add youtube tools",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T04:22:20Z",
        "updated_at": "2023-05-08T15:29:32Z",
        "closed_at": "2023-05-08T15:29:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4320",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4320",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4320.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4320.patch",
            "merged_at": "2023-05-08T15:29:31Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4320/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4320/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4318",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4318/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4318/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4318/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4318",
        "id": 1699457180,
        "node_id": "PR_kwDOIPDwls5P9Ttd",
        "number": 4318,
        "title": "fix: solve the infinite loop caused by 'add_memory' function when run\u2026",
        "user": {
            "login": "ImmortalZ",
            "id": 14830574,
            "node_id": "MDQ6VXNlcjE0ODMwNTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/14830574?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ImmortalZ",
            "html_url": "https://github.com/ImmortalZ",
            "followers_url": "https://api.github.com/users/ImmortalZ/followers",
            "following_url": "https://api.github.com/users/ImmortalZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/ImmortalZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ImmortalZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ImmortalZ/subscriptions",
            "organizations_url": "https://api.github.com/users/ImmortalZ/orgs",
            "repos_url": "https://api.github.com/users/ImmortalZ/repos",
            "events_url": "https://api.github.com/users/ImmortalZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ImmortalZ/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T03:45:45Z",
        "updated_at": "2023-05-08T22:13:24Z",
        "closed_at": "2023-05-08T22:13:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4318",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4318",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4318.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4318.patch",
            "merged_at": "2023-05-08T22:13:24Z"
        },
        "body": "fix: solve the infinite loop caused by 'add_memory' function when run 'pause_to_reflect' function\r\n\r\nrun steps:\r\n'add_memory' -> 'pause_to_reflect' -> 'add_memory':  infinite loop",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4318/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4318/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4317",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4317/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4317/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4317/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4317",
        "id": 1699454978,
        "node_id": "I_kwDOIPDwls5lS6AC",
        "number": 4317,
        "title": "Issue: VectorStoreRouterToolkit wouldn't stop after getting the correct answer",
        "user": {
            "login": "xinj7",
            "id": 113668089,
            "node_id": "U_kgDOBsZv-Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/113668089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xinj7",
            "html_url": "https://github.com/xinj7",
            "followers_url": "https://api.github.com/users/xinj7/followers",
            "following_url": "https://api.github.com/users/xinj7/following{/other_user}",
            "gists_url": "https://api.github.com/users/xinj7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xinj7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xinj7/subscriptions",
            "organizations_url": "https://api.github.com/users/xinj7/orgs",
            "repos_url": "https://api.github.com/users/xinj7/repos",
            "events_url": "https://api.github.com/users/xinj7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xinj7/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-08T03:41:59Z",
        "updated_at": "2023-09-15T22:12:55Z",
        "closed_at": "2023-08-25T02:22:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have two databases as vectorstores and I want to use VectoreStoreRouterToolkit to choose which vectorstore to use or in which order if both of them are needed. It seems the chain wouldn't stop even when the machine already gets the answer to the question. I have tried adjusting the prompt a bit but it doesn't work. Could anyone help? Thanks.\r\n\r\n**Code:**\r\n`retriever_infos = [('philosophy', 'Always try this one first', internal_retriever),\r\n                   ('external data', 'Good for answering questions about external data. Should try this if internal data does not meet the requirements', external_retriever)\r\n                    ]\r\nretriever_names = [info[0] for info in retriever_infos]\r\nretriever_descriptions = [info[1] for info in retriever_infos]\r\nretrievers = [info[2] for info in retriever_infos]\r\n\r\nfrom langchain.agents.agent_toolkits import create_vectorstore_router_agent, VectorStoreInfo, VectorStoreRouterToolkit\r\n\r\nvectorstore_internal = VectorStoreInfo(name=retriever_infos[0][0], description=retriever_infos[0][1], vectorstore=internal_store)\r\nvectorstore_external = VectorStoreInfo(name=retriever_infos[1][0], description=retriever_infos[1][1], vectorstore=external_store)\r\nrouter_toolkit = VectorStoreRouterToolkit(vectorstores=[vectorstore_internal, vectorstore_external], llm=llm)\r\n\r\nPREFIX = \"\"\"You are an agent designed to answer questions.\r\nYou have access to tools for interacting with different sources, and the inputs to the tools are questions.\r\nYour main task is to decide which of the tools is relevant for answering question at hand.\r\nFor complex questions, you can break the question down into sub questions and use tools to answers the sub questions. \r\nIf the answer you get already matches the question, just return it directly and stop routing.\r\n\"\"\"\r\nagent_executor = create_vectorstore_router_agent(llm=llm, toolkit=router_toolkit, verbose=True)\r\nagent_executor.run(query)\r\n\r\n\r\n\r\n**And the result**\r\n> Entering new AgentExecutor chain...\r\n This is a philosophy question\r\nAction: philosophy\r\nAction Input: what is the veil of ignorance\r\nObservation:  The Veil of Ignorance is a way of modeling impartiality. It is one way to model impartiality, but there are other ways. It is a condition in which everyone is ignorant of their position in society or their personal characteristics, and therefore, they make decisions behind the veil of ignorance without knowing the outcomes of the decisions.<|im_end|>\r\nThought: I need more information about the history of the concept of the veil of ignorance\r\nAction: external data\r\nAction Input: history of the veil of ignorance\r\nObservation:  I don't know.\r\n\r\nUse the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\r\n\r\nThe fact that these models can memorize and plagiarize text (Jin et al., 2020; Li et al., 2021) raises concerns about the potential legal risk of their deployment, especially given the likely exponential growth of these types of models in the near future (Shi et al.,`\r\n\r\n\r\nQuestion: what can models do?\r\nHelpful Answer: memorize and plagiarize text\r\n\r\nUse the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\r\n\r\nto provide a formalism for the kinds of reasoning that people do, including reasoning about other people's beliefs, desires and intentions (Goldman, 1974; Lewis, 1969; Stalnaker, 1984). Game theory is also used in economics, political science, and other social sciences to study collective decision making (Rapoport, 1960; von Neumann & Morgenstern, 1944). Game theory\r\nThought: This is a philosophy question\r\nQuestion: What is the main purpose of game theory?\r\nAction: philosophy\r\n...\r\n    return this.context;\r\n  }\r\n  \r\n  // This method takes in a user's message as an input and returns a response\r\nThought:\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4317/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4317/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4316",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4316/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4316/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4316/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4316",
        "id": 1699435926,
        "node_id": "I_kwDOIPDwls5lS1WW",
        "number": 4316,
        "title": "import error ContextualCompressionRetriever",
        "user": {
            "login": "youminxue",
            "id": 3829455,
            "node_id": "MDQ6VXNlcjM4Mjk0NTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3829455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/youminxue",
            "html_url": "https://github.com/youminxue",
            "followers_url": "https://api.github.com/users/youminxue/followers",
            "following_url": "https://api.github.com/users/youminxue/following{/other_user}",
            "gists_url": "https://api.github.com/users/youminxue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/youminxue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/youminxue/subscriptions",
            "organizations_url": "https://api.github.com/users/youminxue/orgs",
            "repos_url": "https://api.github.com/users/youminxue/repos",
            "events_url": "https://api.github.com/users/youminxue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/youminxue/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hwchase17",
                "id": 11986836,
                "node_id": "MDQ6VXNlcjExOTg2ODM2",
                "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hwchase17",
                "html_url": "https://github.com/hwchase17",
                "followers_url": "https://api.github.com/users/hwchase17/followers",
                "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
                "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
                "organizations_url": "https://api.github.com/users/hwchase17/orgs",
                "repos_url": "https://api.github.com/users/hwchase17/repos",
                "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hwchase17/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-08T03:13:16Z",
        "updated_at": "2023-09-22T16:09:35Z",
        "closed_at": "2023-09-22T16:09:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nm1 mac\n\n### Who can help?\n\n@hwchase17 @agola11 @eyurtsev\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.retrievers import ContextualCompressionRetriever\r\n\r\nNameError: name 'v_args' is not defined\n\n### Expected behavior\n\n![image](https://user-images.githubusercontent.com/3829455/236725738-18243030-52e6-45b5-b585-47a0ef554573.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4316/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4316/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4312",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4312/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4312/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4312/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4312",
        "id": 1699318496,
        "node_id": "I_kwDOIPDwls5lSYrg",
        "number": 4312,
        "title": "`RouterOutputParser`",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-08T00:38:13Z",
        "updated_at": "2023-09-10T16:20:13Z",
        "closed_at": "2023-09-10T16:20:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nLazily determines which output parser to use based on the docstrings of langchain output parser implementations or optionally, user supplied choices to route to. It'd look like this:\r\n\r\n```python\r\nparser = RouterOutputParser()\r\nresponse = \"2022-04-05T05:32:55\"\r\nparser.parse(response)\r\n# decides to use the DatetimeOutputParser (#4255)\r\n... datetime(2022, 04, 05, 05, 32, 55, 0)\r\n```\n\n### Motivation\n\nRouterOutputParser could become the default output parser for many use cases. Say you're developing an ultra-flexible-we-ship-breaking-changes-every-night library (like this one :wink: ), then you might end up with function signatures like so:\r\n\r\n```python\r\ndef my_function(..., parser = RouterOutputParser()):\r\n    ...\r\n```\n\n### Your contribution\n\nI'll write the code",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4312/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4312/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4311",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4311/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4311/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4311/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4311",
        "id": 1699313751,
        "node_id": "I_kwDOIPDwls5lSXhX",
        "number": 4311,
        "title": "data about usage patterns for tools",
        "user": {
            "login": "zywilliamli",
            "id": 32046231,
            "node_id": "MDQ6VXNlcjMyMDQ2MjMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/32046231?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zywilliamli",
            "html_url": "https://github.com/zywilliamli",
            "followers_url": "https://api.github.com/users/zywilliamli/followers",
            "following_url": "https://api.github.com/users/zywilliamli/following{/other_user}",
            "gists_url": "https://api.github.com/users/zywilliamli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zywilliamli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zywilliamli/subscriptions",
            "organizations_url": "https://api.github.com/users/zywilliamli/orgs",
            "repos_url": "https://api.github.com/users/zywilliamli/repos",
            "events_url": "https://api.github.com/users/zywilliamli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zywilliamli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-08T00:27:29Z",
        "updated_at": "2023-09-10T16:20:18Z",
        "closed_at": "2023-09-10T16:20:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\ndata about usage patterns for tools\n\n### Motivation\n\ni recently added a jira toolkit, i'm interested to see if it is being used at all, and if so what are the usage patterns. because the tool is very primitive and there's a lot of areas i can improve it, want a bit of data on what's most useful for people. \n\n### Your contribution\n\nhappy to look into this if it's not already being worked on, and is something you're happy having. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4311/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4311/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4310",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4310/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4310/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4310/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4310",
        "id": 1699309935,
        "node_id": "PR_kwDOIPDwls5P80IF",
        "number": 4310,
        "title": "update to use AutoGPTMemory to since it is serializable",
        "user": {
            "login": "dsx1986",
            "id": 4527779,
            "node_id": "MDQ6VXNlcjQ1Mjc3Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4527779?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dsx1986",
            "html_url": "https://github.com/dsx1986",
            "followers_url": "https://api.github.com/users/dsx1986/followers",
            "following_url": "https://api.github.com/users/dsx1986/following{/other_user}",
            "gists_url": "https://api.github.com/users/dsx1986/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dsx1986/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dsx1986/subscriptions",
            "organizations_url": "https://api.github.com/users/dsx1986/orgs",
            "repos_url": "https://api.github.com/users/dsx1986/repos",
            "events_url": "https://api.github.com/users/dsx1986/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dsx1986/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-08T00:18:52Z",
        "updated_at": "2023-08-11T21:41:49Z",
        "closed_at": "2023-08-11T21:41:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4310",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4310",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4310.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4310.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4310/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4310/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4309",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4309/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4309/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4309/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4309",
        "id": 1699308413,
        "node_id": "PR_kwDOIPDwls5P8zzs",
        "number": 4309,
        "title": "Pass parsed inputs through to tool _run",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T00:15:42Z",
        "updated_at": "2023-05-08T16:13:07Z",
        "closed_at": "2023-05-08T16:13:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4309",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4309",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4309.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4309.patch",
            "merged_at": "2023-05-08T16:13:06Z"
        },
        "body": "Ensure non-primitive types are properly passed to tools.\r\nOtherwise the values of things like enums and base models wouldn't be deserialized\r\n\r\n\r\n(now has the gmail toolkit PR https://github.com/hwchase17/langchain/pull/4321 merged in)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4309/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4309/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4308",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4308/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4308/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4308/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4308",
        "id": 1699305960,
        "node_id": "PR_kwDOIPDwls5P8zRw",
        "number": 4308,
        "title": "bring back ref",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T00:10:26Z",
        "updated_at": "2023-05-08T00:32:30Z",
        "closed_at": "2023-05-08T00:32:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4308",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4308",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4308.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4308.patch",
            "merged_at": "2023-05-08T00:32:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4308/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4308/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4307",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4307/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4307/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4307/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4307",
        "id": 1699298046,
        "node_id": "I_kwDOIPDwls5lSTr-",
        "number": 4307,
        "title": "Issue: <Please write a comprehensive title after the 'Issue: ' ValidationError>",
        "user": {
            "login": "Kaleema",
            "id": 32825942,
            "node_id": "MDQ6VXNlcjMyODI1OTQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/32825942?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kaleema",
            "html_url": "https://github.com/Kaleema",
            "followers_url": "https://api.github.com/users/Kaleema/followers",
            "following_url": "https://api.github.com/users/Kaleema/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kaleema/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kaleema/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kaleema/subscriptions",
            "organizations_url": "https://api.github.com/users/Kaleema/orgs",
            "repos_url": "https://api.github.com/users/Kaleema/repos",
            "events_url": "https://api.github.com/users/Kaleema/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kaleema/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T23:56:57Z",
        "updated_at": "2023-09-10T16:20:23Z",
        "closed_at": "2023-09-10T16:20:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWhen trying to deploy the model on fly.io I am getting the following error. Can you please guide me on how to resolve it.\r\n\"ValidationError: 1 validation error for ChatVectorDBChain qa_prompt extra fields not permitted (type=value_error.extra)\"\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4307/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4307/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4306",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4306/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4306/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4306/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4306",
        "id": 1699286821,
        "node_id": "PR_kwDOIPDwls5P8vHZ",
        "number": 4306,
        "title": "Add VecDB integration",
        "user": {
            "login": "jtwinrelevanceai",
            "id": 92562332,
            "node_id": "U_kgDOBYRjnA",
            "avatar_url": "https://avatars.githubusercontent.com/u/92562332?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jtwinrelevanceai",
            "html_url": "https://github.com/jtwinrelevanceai",
            "followers_url": "https://api.github.com/users/jtwinrelevanceai/followers",
            "following_url": "https://api.github.com/users/jtwinrelevanceai/following{/other_user}",
            "gists_url": "https://api.github.com/users/jtwinrelevanceai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jtwinrelevanceai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jtwinrelevanceai/subscriptions",
            "organizations_url": "https://api.github.com/users/jtwinrelevanceai/orgs",
            "repos_url": "https://api.github.com/users/jtwinrelevanceai/repos",
            "events_url": "https://api.github.com/users/jtwinrelevanceai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jtwinrelevanceai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-07T23:32:31Z",
        "updated_at": "2023-05-15T23:40:38Z",
        "closed_at": "2023-05-15T23:40:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4306",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4306",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4306.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4306.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4306/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4306/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4305",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4305/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4305/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4305/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4305",
        "id": 1699286357,
        "node_id": "PR_kwDOIPDwls5P8vA9",
        "number": 4305,
        "title": "Add support for passing binary_location to the SeleniumURLLoader when creating Chrome or Firefox web drivers",
        "user": {
            "login": "aaravindan101",
            "id": 5491439,
            "node_id": "MDQ6VXNlcjU0OTE0Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5491439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaravindan101",
            "html_url": "https://github.com/aaravindan101",
            "followers_url": "https://api.github.com/users/aaravindan101/followers",
            "following_url": "https://api.github.com/users/aaravindan101/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaravindan101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaravindan101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaravindan101/subscriptions",
            "organizations_url": "https://api.github.com/users/aaravindan101/orgs",
            "repos_url": "https://api.github.com/users/aaravindan101/repos",
            "events_url": "https://api.github.com/users/aaravindan101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaravindan101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T23:31:13Z",
        "updated_at": "2023-05-08T15:06:03Z",
        "closed_at": "2023-05-08T15:05:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4305",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4305",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4305.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4305.patch",
            "merged_at": "2023-05-08T15:05:55Z"
        },
        "body": "This commit adds support for passing binary_location to the SeleniumURLLoader when creating Chrome or Firefox web drivers. \r\n\r\nThis allows users to specify the Browser binary location which is required when deploying to services such as Heroku\r\n\r\nThis change also includes updated documentation and type hints to reflect the new binary_location parameter and its usage.\r\n\r\nfixes #4304",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4305/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4305/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4304",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4304/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4304/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4304/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4304",
        "id": 1699284650,
        "node_id": "I_kwDOIPDwls5lSQaq",
        "number": 4304,
        "title": "[Feature Request] Allow users to pass binary location to Selenium WebDriver",
        "user": {
            "login": "aaravindan101",
            "id": 5491439,
            "node_id": "MDQ6VXNlcjU0OTE0Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5491439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaravindan101",
            "html_url": "https://github.com/aaravindan101",
            "followers_url": "https://api.github.com/users/aaravindan101/followers",
            "following_url": "https://api.github.com/users/aaravindan101/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaravindan101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaravindan101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaravindan101/subscriptions",
            "organizations_url": "https://api.github.com/users/aaravindan101/orgs",
            "repos_url": "https://api.github.com/users/aaravindan101/repos",
            "events_url": "https://api.github.com/users/aaravindan101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaravindan101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-07T23:25:37Z",
        "updated_at": "2023-05-08T15:05:57Z",
        "closed_at": "2023-05-08T15:05:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nProblem:\r\nUnable to set binary_location for the Webdriver via SeleniumURLLoader\r\n\r\nProposal:\r\nThe proposal is to adding a new arguments parameter to the SeleniumURLLoader that allows users to pass binary_location\r\n\r\n### Motivation\r\n\r\nTo deploy Selenium on Heroku ([tutorial](https://romik-kelesh.medium.com/how-to-deploy-a-python-web-scraper-with-selenium-on-heroku-1459cb3ac76c)), the browser binary must be installed as a buildpack and its location must be set as the binary_location for the driver browser options. Currently when creating a Chrome or Firefox web driver via SeleniumURLLoader, users cannot set the binary_location of the WebDriver.\r\n\r\n### Your contribution\r\n\r\nI can submit the PR to add this capability to SeleniumURLLoader",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4304/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4304/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4303",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4303/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4303/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4303/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4303",
        "id": 1699276583,
        "node_id": "I_kwDOIPDwls5lSOcn",
        "number": 4303,
        "title": "running asynchronous chain results in verbose output log info \"INFO - openai.log_info - \"",
        "user": {
            "login": "khu834",
            "id": 9586509,
            "node_id": "MDQ6VXNlcjk1ODY1MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9586509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/khu834",
            "html_url": "https://github.com/khu834",
            "followers_url": "https://api.github.com/users/khu834/followers",
            "following_url": "https://api.github.com/users/khu834/following{/other_user}",
            "gists_url": "https://api.github.com/users/khu834/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/khu834/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/khu834/subscriptions",
            "organizations_url": "https://api.github.com/users/khu834/orgs",
            "repos_url": "https://api.github.com/users/khu834/repos",
            "events_url": "https://api.github.com/users/khu834/events{/privacy}",
            "received_events_url": "https://api.github.com/users/khu834/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T23:04:39Z",
        "updated_at": "2023-09-10T16:20:28Z",
        "closed_at": "2023-09-10T16:20:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI'm serving a conversational chain in fastapi.\r\nHere's the snippet where I run the chain asynchronously\r\n\r\n```\r\n    chain = ConversationalRetrievalChain.from_llm(\r\n        llm=llm,\r\n        retriever=retriever,\r\n        chain_type=\"stuff\",\r\n    )\r\n    response = await chain.acall({\"question\": query, \"chat_history\": history.messages})\r\n```\r\nThis produces some verbose output logging\r\n\r\n```\r\nINFO - openai.log_info - message='OpenAI API response' path=https://<deployment_url>/openai/deployments/gpt-35-turbo/chat/completions?api-version=2023-03-15-preview processing_ms=3132.427 request_id=82105e70-42c5-4631-8b16-4251c1362988 response_code=200\r\n```\r\n\r\nwhereas this does not exist in the synchronous call\r\n```response = chain({\"question\": query, \"chat_history\": history.messages})```\r\n\r\nis there any way to disable the logging?\r\nI looked through the codebase but could not figure out where this logging is taking place\r\nI tried creating a `ConversationalRetrievalChain` with `verbose=False` directly, but the behavior is still the same.\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4303/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4303/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4302",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4302/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4302/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4302/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4302",
        "id": 1699274218,
        "node_id": "PR_kwDOIPDwls5P8seT",
        "number": 4302,
        "title": "added `Wikipedia` retriever",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-07T22:59:04Z",
        "updated_at": "2023-05-09T18:31:31Z",
        "closed_at": "2023-05-09T17:08:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4302",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4302",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4302.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4302.patch",
            "merged_at": "2023-05-09T17:08:40Z"
        },
        "body": "- added `Wikipedia` retriever. It is effectively a wrapper for `WikipediaAPIWrapper`. It wrapps load() into get_relevant_documents()\r\n- sorted `__all__` in the `retrievers/__init__`\r\n- added integration tests for the WikipediaRetriever\r\n- added an example (as Jupyter notebook) for the WikipediaRetriever",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4302/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4302/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4300",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4300/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4300/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4300/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4300",
        "id": 1699249881,
        "node_id": "PR_kwDOIPDwls5P8nT3",
        "number": 4300,
        "title": "Bug/4299 cant instantiate simplechatmodel subclass without defining agenerate",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-07T21:47:29Z",
        "updated_at": "2023-08-01T01:15:50Z",
        "closed_at": "2023-08-01T01:15:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4300",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4300",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4300.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4300.patch",
            "merged_at": null
        },
        "body": "Fixes #4299 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4300/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4300/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4299",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4299/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4299/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4299/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4299",
        "id": 1699247019,
        "node_id": "I_kwDOIPDwls5lSHOr",
        "number": 4299,
        "title": "Can't instantiate abstract class <subclass of `SimpleChatModel`> with abstract method `_agenerate`",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-07T21:38:01Z",
        "updated_at": "2023-09-12T16:16:11Z",
        "closed_at": "2023-09-12T16:16:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\n(not relevant)\r\n```\r\n$ uname -a\r\nLinux jacob-latitude5580 5.15.0-71-lowlatency #78-Ubuntu SMP PREEMPT Wed Apr 19 12:17:25 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux\r\n```\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nOn branch [`feature/4251-llm-and-chat-facades`](https://github.com/hwchase17/langchain/pull/4270):\r\n\r\nlangchain/wrappers/chat_model_facade.py:\r\n```python\r\nfrom __future__ import annotations\r\n\r\nfrom typing import List, Optional\r\n\r\nfrom langchain.chat_models.base import BaseChatModel, SimpleChatModel\r\nfrom langchain.schema import BaseMessage\r\nfrom langchain.llms.base import BaseLanguageModel\r\nfrom langchain.utils import serialize_msgs\r\n\r\n\r\nclass ChatModelFacade(SimpleChatModel):\r\n    llm: BaseLanguageModel\r\n\r\n    def _call(self, messages: List[BaseMessage], stop: Optional[List[str]] = None) -> str:\r\n        if isinstance(self.llm, BaseChatModel):\r\n            return self.llm(messages, stop=stop).content\r\n        elif isinstance(self.llm, BaseLanguageModel):\r\n            return self.llm(serialize_msgs(messages), stop=stop)\r\n        else:\r\n            raise ValueError(\r\n                f\"Invalid llm type: {type(self.llm)}. Must be a chat model or language model.\"\r\n            )\r\n\r\n    @classmethod\r\n    def of(cls, llm):\r\n        if isinstance(llm, BaseChatModel):\r\n            return llm\r\n        elif isinstance(llm, BaseLanguageModel):\r\n            return cls(llm)\r\n        else:\r\n            raise ValueError(\r\n                f\"Invalid llm type: {type(llm)}. Must be a chat model or language model.\"\r\n            )\r\n```\r\n\r\ntests/unit_tests/wrappers/test_chat_model_facade.py:\r\n```python\r\nfrom langchain.llms.fake import FakeListLLM\r\nfrom langchain.schema import SystemMessage\r\nfrom langchain.wrappers.chat_model_facade import ChatModelFacade\r\n\r\n\r\ndef test_chat_model_facade():\r\n    llm = FakeListLLM(responses=[\"hello\", \"goodbye\"])\r\n    chat_model = ChatModelFacade.of(llm)\r\n    input_message = SystemMessage(content=\"hello\")\r\n    output_message = chat_model([input_message])\r\n    assert output_message.content == \"hello\"\r\n    assert output_message.type == \"ai\"\r\n```\r\n\r\nTest report:\r\n```\r\n$ make test\r\npoetry run pytest tests/unit_tests\r\n=========================================== test session starts ===========================================\r\nplatform linux -- Python 3.10.9, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /home/jacob/github/langchain\r\nplugins: asyncio-0.20.3, mock-3.10.0, dotenv-0.5.2, cov-4.0.0, anyio-3.6.2\r\nasyncio: mode=strict\r\ncollected 523 items                                                                                       \r\n\r\ntests/unit_tests/test_bash.py ......                                                                [  1%]\r\ntests/unit_tests/test_depedencies.py .                                                              [  1%]\r\ntests/unit_tests/test_document_transformers.py ..                                                   [  1%]\r\ntests/unit_tests/test_formatting.py ...                                                             [  2%]\r\ntests/unit_tests/test_math_utils.py ....                                                            [  3%]\r\ntests/unit_tests/test_python.py ........                                                            [  4%]\r\ntests/unit_tests/test_schema.py ......                                                              [  5%]\r\ntests/unit_tests/test_sql_database.py ....                                                          [  6%]\r\ntests/unit_tests/test_sql_database_schema.py ..                                                     [  6%]\r\ntests/unit_tests/test_text_splitter.py ............                                                 [  9%]\r\ntests/unit_tests/agents/test_agent.py .......                                                       [ 10%]\r\ntests/unit_tests/agents/test_mrkl.py ..........                                                     [ 12%]\r\ntests/unit_tests/agents/test_public_api.py .                                                        [ 12%]\r\ntests/unit_tests/agents/test_react.py ...                                                           [ 13%]\r\ntests/unit_tests/agents/test_sql.py .                                                               [ 13%]\r\ntests/unit_tests/agents/test_tools.py ........                                                      [ 14%]\r\ntests/unit_tests/agents/test_types.py .                                                             [ 15%]\r\ntests/unit_tests/callbacks/test_callback_manager.py ........                                        [ 16%]\r\ntests/unit_tests/callbacks/test_openai_info.py ..                                                   [ 17%]\r\ntests/unit_tests/callbacks/tracers/test_tracer.py .................                                 [ 20%]\r\ntests/unit_tests/chains/test_api.py .                                                               [ 20%]\r\ntests/unit_tests/chains/test_base.py .............                                                  [ 22%]\r\ntests/unit_tests/chains/test_combine_documents.py ..........                                        [ 24%]\r\ntests/unit_tests/chains/test_constitutional_ai.py .                                                 [ 25%]\r\ntests/unit_tests/chains/test_conversation.py ...........                                            [ 27%]\r\ntests/unit_tests/chains/test_hyde.py ..                                                             [ 27%]\r\ntests/unit_tests/chains/test_llm.py .....                                                           [ 28%]\r\ntests/unit_tests/chains/test_llm_bash.py .....                                                      [ 29%]\r\ntests/unit_tests/chains/test_llm_checker.py .                                                       [ 29%]\r\ntests/unit_tests/chains/test_llm_math.py ...                                                        [ 30%]\r\ntests/unit_tests/chains/test_llm_summarization_checker.py .                                         [ 30%]\r\ntests/unit_tests/chains/test_memory.py ....                                                         [ 31%]\r\ntests/unit_tests/chains/test_natbot.py ..                                                           [ 31%]\r\ntests/unit_tests/chains/test_sequential.py ...........                                              [ 33%]\r\ntests/unit_tests/chains/test_transform.py ..                                                        [ 34%]\r\ntests/unit_tests/chains/query_constructor/test_parser.py ..........................                 [ 39%]\r\ntests/unit_tests/chat_models/test_google_palm.py ssssssss                                           [ 40%]\r\ntests/unit_tests/client/test_langchain.py .........                                                 [ 42%]\r\ntests/unit_tests/client/test_utils.py .....                                                         [ 43%]\r\ntests/unit_tests/docstore/test_arbitrary_fn.py .                                                    [ 43%]\r\ntests/unit_tests/docstore/test_inmemory.py ....                                                     [ 44%]\r\ntests/unit_tests/document_loader/test_base.py .                                                     [ 44%]\r\ntests/unit_tests/document_loader/test_csv_loader.py ....                                            [ 45%]\r\ntests/unit_tests/document_loader/blob_loaders/test_filesystem_blob_loader.py ........               [ 46%]\r\ntests/unit_tests/document_loader/blob_loaders/test_public_api.py .                                  [ 46%]\r\ntests/unit_tests/document_loader/blob_loaders/test_schema.py ............                           [ 49%]\r\ntests/unit_tests/evaluation/qa/test_eval_chain.py ...                                               [ 49%]\r\ntests/unit_tests/llms/test_base.py ..                                                               [ 50%]\r\ntests/unit_tests/llms/test_callbacks.py .                                                           [ 50%]\r\ntests/unit_tests/llms/test_loading.py .                                                             [ 50%]\r\ntests/unit_tests/llms/test_utils.py ..                                                              [ 50%]\r\ntests/unit_tests/memory/test_combined_memory.py ..                                                  [ 51%]\r\ntests/unit_tests/memory/chat_message_histories/test_file.py ...                                     [ 51%]\r\ntests/unit_tests/memory/chat_message_histories/test_sql.py ...                                      [ 52%]\r\ntests/unit_tests/output_parsers/test_boolean_parser.py .                                            [ 52%]\r\ntests/unit_tests/output_parsers/test_combining_parser.py .                                          [ 52%]\r\ntests/unit_tests/output_parsers/test_list_parser.py ..                                              [ 53%]\r\ntests/unit_tests/output_parsers/test_pydantic_parser.py ..                                          [ 53%]\r\ntests/unit_tests/output_parsers/test_regex_dict.py .                                                [ 53%]\r\ntests/unit_tests/output_parsers/test_structured_parser.py .                                         [ 53%]\r\ntests/unit_tests/prompts/test_chat.py ...                                                           [ 54%]\r\ntests/unit_tests/prompts/test_few_shot.py ..........                                                [ 56%]\r\ntests/unit_tests/prompts/test_few_shot_with_templates.py .                                          [ 56%]\r\ntests/unit_tests/prompts/test_length_based_example_selector.py ....                                 [ 57%]\r\ntests/unit_tests/prompts/test_loading.py ........                                                   [ 58%]\r\ntests/unit_tests/prompts/test_prompt.py ...............                                             [ 61%]\r\ntests/unit_tests/prompts/test_utils.py .                                                            [ 61%]\r\ntests/unit_tests/retrievers/test_time_weighted_retriever.py .....                                   [ 62%]\r\ntests/unit_tests/retrievers/self_query/test_pinecone.py ..                                          [ 63%]\r\ntests/unit_tests/tools/test_base.py ........................                                        [ 67%]\r\ntests/unit_tests/tools/test_exported.py .                                                           [ 68%]\r\ntests/unit_tests/tools/test_json.py ....                                                            [ 68%]\r\ntests/unit_tests/tools/test_public_api.py .                                                         [ 69%]\r\ntests/unit_tests/tools/test_signatures.py ......................................................... [ 79%]\r\n...                                                                                                 [ 80%]\r\ntests/unit_tests/tools/file_management/test_copy.py ...                                             [ 81%]\r\ntests/unit_tests/tools/file_management/test_file_search.py ...                                      [ 81%]\r\ntests/unit_tests/tools/file_management/test_list_dir.py ...                                         [ 82%]\r\ntests/unit_tests/tools/file_management/test_move.py ...                                             [ 82%]\r\ntests/unit_tests/tools/file_management/test_read.py ..                                              [ 83%]\r\ntests/unit_tests/tools/file_management/test_toolkit.py ....                                         [ 83%]\r\ntests/unit_tests/tools/file_management/test_utils.py .....                                          [ 84%]\r\ntests/unit_tests/tools/file_management/test_write.py ...                                            [ 85%]\r\ntests/unit_tests/tools/openapi/test_api_models.py ................................................. [ 94%]\r\n..                                                                                                  [ 95%]\r\ntests/unit_tests/tools/python/test_python.py ..                                                     [ 95%]\r\ntests/unit_tests/tools/requests/test_tool.py ......                                                 [ 96%]\r\ntests/unit_tests/tools/shell/test_shell.py .....                                                    [ 97%]\r\ntests/unit_tests/utilities/test_loading.py ......                                                   [ 98%]\r\ntests/unit_tests/vectorstores/test_utils.py ....                                                    [ 99%]\r\ntests/unit_tests/wrappers/test_chat_model_facade.py F                                               [ 99%]\r\ntests/unit_tests/wrappers/test_llm_facade.py .                                                      [100%]\r\n\r\n================================================ FAILURES =================================================\r\n_________________________________________ test_chat_model_facade __________________________________________\r\n\r\n    def test_chat_model_facade():\r\n        llm = FakeListLLM(responses=[\"hello\", \"goodbye\"])\r\n>       chat_model = ChatModelFacade.of(llm)\r\n\r\ntests/unit_tests/wrappers/test_chat_model_facade.py:8: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\ncls = <class 'langchain.wrappers.chat_model_facade.ChatModelFacade'>\r\nllm = FakeListLLM(cache=None, verbose=False, callbacks=None, callback_manager=None, responses=['hello', 'goodbye'], i=0)\r\n\r\n    @classmethod\r\n    def of(cls, llm):\r\n        if isinstance(llm, BaseChatModel):\r\n            return llm\r\n        elif isinstance(llm, BaseLanguageModel):\r\n>           return cls(llm)\r\nE           TypeError: Can't instantiate abstract class ChatModelFacade with abstract method _agenerate\r\n\r\nlangchain/wrappers/chat_model_facade.py:32: TypeError\r\n============================================ warnings summary =============================================\r\ntests/unit_tests/test_document_transformers.py::test__filter_similar_embeddings\r\ntests/unit_tests/test_math_utils.py::test_cosine_similarity_zero\r\ntests/unit_tests/vectorstores/test_utils.py::test_maximal_marginal_relevance_lambda_zero\r\ntests/unit_tests/vectorstores/test_utils.py::test_maximal_marginal_relevance_lambda_one\r\n  /home/jacob/github/langchain/langchain/math_utils.py:23: RuntimeWarning: invalid value encountered in divide\r\n    similarity = np.dot(X, Y.T) / np.outer(X_norm, Y_norm)\r\n\r\ntests/unit_tests/test_sql_database_schema.py::test_table_info\r\n  /home/jacob/github/langchain/.venv/lib/python3.10/site-packages/duckdb_engine/__init__.py:160: DuckDBEngineWarning: duckdb-engine doesn't yet support reflection on indices\r\n    warnings.warn(\r\n\r\ntests/unit_tests/client/test_langchain.py::test_arun_on_dataset\r\n  /home/jacob/github/langchain/langchain/callbacks/manager.py:65: UserWarning: The experimental tracing v2 is in development. This is not yet stable and may change in the future.\r\n    warnings.warn(\r\n\r\ntests/unit_tests/tools/shell/test_shell.py::test_shell_input_validation\r\n  /home/jacob/github/langchain/langchain/tools/shell/tool.py:33: UserWarning: The shell tool has no safeguards by default. Use at your own risk.\r\n    warnings.warn(\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n========================================= short test summary info =========================================\r\nFAILED tests/unit_tests/wrappers/test_chat_model_facade.py::test_chat_model_facade - TypeError: Can't instantiate abstract class ChatModelFacade with abstract method _agenerate\r\n========================== 1 failed, 514 passed, 8 skipped, 7 warnings in 8.60s ===========================\r\nmake: *** [Makefile:36: test] Error 1\r\n```\n\n### Expected behavior\n\nI should be able to subclass `SimpleChatModel` without having to define _agenerate myself. SimpleChatModel should provide a default implementation that defers to _generate.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4299/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4299/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4298",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4298/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4298/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4298/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4298",
        "id": 1699234860,
        "node_id": "PR_kwDOIPDwls5P8kPV",
        "number": 4298,
        "title": "Pass Callbacks through load_tools",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-07T21:00:27Z",
        "updated_at": "2023-05-08T15:44:27Z",
        "closed_at": "2023-05-08T15:44:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4298",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4298",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4298.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4298.patch",
            "merged_at": "2023-05-08T15:44:26Z"
        },
        "body": "- Update the load_tools method to properly accept `callbacks` arguments.\r\n- Add a deprecation warning when `callback_manager` is passed\r\n- Add two unit tests to check the deprecation warning is raised and to confirm the callback is passed through.\r\n\r\nCloses issue #4096",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4298/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4298/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4297",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4297/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4297/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4297/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4297",
        "id": 1699212396,
        "node_id": "PR_kwDOIPDwls5P8fmi",
        "number": 4297,
        "title": "Add Top K as Optional Parameter for Self Query Retriever",
        "user": {
            "login": "blc16",
            "id": 10980637,
            "node_id": "MDQ6VXNlcjEwOTgwNjM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10980637?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blc16",
            "html_url": "https://github.com/blc16",
            "followers_url": "https://api.github.com/users/blc16/followers",
            "following_url": "https://api.github.com/users/blc16/following{/other_user}",
            "gists_url": "https://api.github.com/users/blc16/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blc16/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blc16/subscriptions",
            "organizations_url": "https://api.github.com/users/blc16/orgs",
            "repos_url": "https://api.github.com/users/blc16/repos",
            "events_url": "https://api.github.com/users/blc16/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blc16/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T19:55:08Z",
        "updated_at": "2023-08-01T00:55:49Z",
        "closed_at": "2023-08-01T00:55:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4297",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4297",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4297.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4297.patch",
            "merged_at": null
        },
        "body": "This adds k as an optional parameter to Self Query Retriever so that the number of returned documents can be specified. I was using the retriever and found that it was only returning 4 documents. I know this touches files below the Self Query Retriever abstraction, so please let me know if there are any concerns with this or if there are specific tests I need to add.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4297/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4297/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4296",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4296/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4296/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4296/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4296",
        "id": 1699211621,
        "node_id": "PR_kwDOIPDwls5P8fct",
        "number": 4296,
        "title": "Incorrect docstring for PythonCodeTextSplitter",
        "user": {
            "login": "ebr",
            "id": 2433541,
            "node_id": "MDQ6VXNlcjI0MzM1NDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2433541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ebr",
            "html_url": "https://github.com/ebr",
            "followers_url": "https://api.github.com/users/ebr/followers",
            "following_url": "https://api.github.com/users/ebr/following{/other_user}",
            "gists_url": "https://api.github.com/users/ebr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ebr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ebr/subscriptions",
            "organizations_url": "https://api.github.com/users/ebr/orgs",
            "repos_url": "https://api.github.com/users/ebr/repos",
            "events_url": "https://api.github.com/users/ebr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ebr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-07T19:52:50Z",
        "updated_at": "2023-05-07T23:15:20Z",
        "closed_at": "2023-05-07T21:04:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4296",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4296",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4296.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4296.patch",
            "merged_at": "2023-05-07T21:04:54Z"
        },
        "body": "Fixes a copy-paste error in the doctring",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4296/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4296/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4295",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4295/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4295/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4295/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4295",
        "id": 1699207631,
        "node_id": "PR_kwDOIPDwls5P8em-",
        "number": 4295,
        "title": "Added Code of Conduct",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T19:42:17Z",
        "updated_at": "2023-05-08T14:38:04Z",
        "closed_at": "2023-05-08T14:38:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4295",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4295",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4295.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4295.patch",
            "merged_at": null
        },
        "body": "This adds a code of conduct which may be useful for a variety of reasons. chatGPT will tell you more:\r\n\r\n\r\n\r\nA project's code of conduct outlines the expected behavior of contributors, maintainers, and users within the project's community. There are several reasons why a project should have a code of conduct:\r\n\r\n1. Promoting a welcoming and inclusive environment: A code of conduct establishes clear expectations for behavior and sets a standard for respectful communication and collaboration. It helps to create a safe and welcoming environment for everyone, regardless of their background or identity.\r\n\r\n2. Preventing harassment and discrimination: A code of conduct provides a clear framework for addressing and reporting incidents of harassment or discrimination. It helps to create a culture of accountability and ensures that all community members are treated with respect.\r\n\r\n3. Fostering productive collaboration: A code of conduct can help to resolve conflicts and ensure that discussions remain focused on the project's goals. It can also help to establish guidelines for decision-making and ensure that contributions are evaluated fairly and objectively.\r\n\r\n4. Protecting the project's reputation: A well-written code of conduct can help to prevent inappropriate behavior and negative interactions that could harm the project's reputation. It can also help to attract a diverse range of contributors and users who value a respectful and inclusive community.\r\n\r\nOverall, a code of conduct is an important tool for maintaining a healthy and productive project community. It sets expectations for behavior, provides a framework for resolving conflicts, and helps to promote a welcoming and inclusive environment for everyone involved in the project.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4295/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4295/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4294",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4294/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4294/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4294/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4294",
        "id": 1699185045,
        "node_id": "PR_kwDOIPDwls5P8Z-k",
        "number": 4294,
        "title": "Better error when running chain without any args",
        "user": {
            "login": "liorn",
            "id": 1233782,
            "node_id": "MDQ6VXNlcjEyMzM3ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1233782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liorn",
            "html_url": "https://github.com/liorn",
            "followers_url": "https://api.github.com/users/liorn/followers",
            "following_url": "https://api.github.com/users/liorn/following{/other_user}",
            "gists_url": "https://api.github.com/users/liorn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liorn/subscriptions",
            "organizations_url": "https://api.github.com/users/liorn/orgs",
            "repos_url": "https://api.github.com/users/liorn/repos",
            "events_url": "https://api.github.com/users/liorn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liorn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-07T18:38:20Z",
        "updated_at": "2023-05-08T04:46:12Z",
        "closed_at": "2023-05-08T04:11:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4294",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4294",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4294.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4294.patch",
            "merged_at": "2023-05-08T04:11:51Z"
        },
        "body": "Today, when running a chain without any arguments, the raised ValueError incorrectly specifies that user provided \"both positional arguments and keyword arguments\".\r\n\r\nThis PR adds a more accurate error in that case.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4294/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4294/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4293",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4293/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4293/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4293/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4293",
        "id": 1699171342,
        "node_id": "I_kwDOIPDwls5lR0wO",
        "number": 4293,
        "title": "Issue: Token Limit Exceeded Error in SQL Database Agent",
        "user": {
            "login": "jeyarajcs",
            "id": 13285081,
            "node_id": "MDQ6VXNlcjEzMjg1MDgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/13285081?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeyarajcs",
            "html_url": "https://github.com/jeyarajcs",
            "followers_url": "https://api.github.com/users/jeyarajcs/followers",
            "following_url": "https://api.github.com/users/jeyarajcs/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeyarajcs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeyarajcs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeyarajcs/subscriptions",
            "organizations_url": "https://api.github.com/users/jeyarajcs/orgs",
            "repos_url": "https://api.github.com/users/jeyarajcs/repos",
            "events_url": "https://api.github.com/users/jeyarajcs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeyarajcs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-05-07T18:01:00Z",
        "updated_at": "2023-12-12T11:55:03Z",
        "closed_at": "2023-10-18T16:08:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am trying to work with Snowflake using `create_sql_agent`\r\nVery often getting token limit error.\r\n\r\nThis is my code\r\n\r\n```\r\nfrom langchain.agents import create_sql_agent\r\nfrom langchain.agents.agent_toolkits import SQLDatabaseToolkit\r\nfrom langchain.sql_database import SQLDatabase\r\nfrom langchain.llms.openai import OpenAI\r\nfrom langchain.agents import AgentExecutor\r\n\r\nfrom sqlalchemy.dialects import registry\r\nregistry.load(\"snowflake\")\r\n\r\naccount_identifier = 'xxxx'\r\nuser = 'xxxx'\r\npassword = 'xxxx'\r\ndatabase_name = 'xxxx'\r\nschema_name = 'xxxx'\r\nwarehouse_name = 'xxxx'\r\nrole_name = 'xxxx'\r\n\r\nconn_string = f\"snowflake://{user}:{password}@{account_identifier}/{database_name}/{schema_name}?warehouse={warehouse_name}&role={role_name}\"\r\ndb = SQLDatabase.from_uri(conn_string)\r\nprint(\"DB===\", db)\r\ntoolkit = SQLDatabaseToolkit(llm=OpenAI(temperature=0), db=db)\r\n\r\nagent_executor = create_sql_agent(\r\n    llm=OpenAI(temperature=0),\r\n    toolkit=toolkit,\r\n    verbose=True\r\n)\r\n\r\nagent_executor.run(\"Which companies are getting the most reviews in a specific category?\")\r\n```\r\n\r\nIf I ask straightforward question on a tiny table that has only 5 records, Then the agent is running well. \r\nIf the table is slightly bigger with complex question, It throws `InvalidRequestError: This model's maximum context length is 4097 tokens, however you requested 13719 tokens (13463 in your prompt; 256 for the completion). Please reduce your prompt; or completion length.`\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4293/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4293/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4292",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4292/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4292/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4292/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4292",
        "id": 1699165681,
        "node_id": "PR_kwDOIPDwls5P8WCl",
        "number": 4292,
        "title": "add the existing OpenWeatherMap tool to the public api",
        "user": {
            "login": "zrcni",
            "id": 15026857,
            "node_id": "MDQ6VXNlcjE1MDI2ODU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15026857?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zrcni",
            "html_url": "https://github.com/zrcni",
            "followers_url": "https://api.github.com/users/zrcni/followers",
            "following_url": "https://api.github.com/users/zrcni/following{/other_user}",
            "gists_url": "https://api.github.com/users/zrcni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zrcni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zrcni/subscriptions",
            "organizations_url": "https://api.github.com/users/zrcni/orgs",
            "repos_url": "https://api.github.com/users/zrcni/repos",
            "events_url": "https://api.github.com/users/zrcni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zrcni/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-07T17:45:51Z",
        "updated_at": "2023-05-15T01:50:46Z",
        "closed_at": "2023-05-15T01:50:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4292",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4292",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4292.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4292.patch",
            "merged_at": "2023-05-15T01:50:45Z"
        },
        "body": "[OpenWeatherMapAPIWrapper](https://github.com/hwchase17/langchain/blob/f70e18a5b3a5c3205dfefd3c1470d42cd789f797/docs/modules/agents/tools/examples/openweathermap.ipynb) works wonderfully, but the _tool_ itself can't be used in master branch.\r\n\r\n- added OpenWeatherMap **tool** to the public api, to be loadable with `load_tools` by using \"openweathermap-api\" tool name (that name is used in the existing [docs](https://github.com/hwchase17/langchain/blob/aff33d52c52f5130677a3b7935329ec0048f5491/docs/modules/agents/tools/getting_started.md), at the bottom of the page)\r\n- updated OpenWeatherMap tool's **description** to make the input format match what the API expects (e.g. `London,GB` instead of `'London,GB'`)\r\n- added [ecosystem documentation page for OpenWeatherMap](https://github.com/hwchase17/langchain/blob/f9c41594fe209ea7a9b9faf04187d3a186f09fe8/docs/ecosystem/openweathermap.md)\r\n- added tool usage example to [OpenWeatherMap's notebook](https://github.com/hwchase17/langchain/blob/f9c41594fe209ea7a9b9faf04187d3a186f09fe8/docs/modules/agents/tools/examples/openweathermap.ipynb)\r\n\r\nLet me know if there's something I missed or something needs to be updated! Or feel free to make edits yourself if that makes it easier for you :slightly_smiling_face:",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4292/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4292/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4290",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4290/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4290/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4290/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4290",
        "id": 1699151077,
        "node_id": "I_kwDOIPDwls5lRvzl",
        "number": 4290,
        "title": "Feature request: Log intermediate step to file on chain_type \"refine\" to help with the debugging process.",
        "user": {
            "login": "ilhamfp",
            "id": 31740013,
            "node_id": "MDQ6VXNlcjMxNzQwMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/31740013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ilhamfp",
            "html_url": "https://github.com/ilhamfp",
            "followers_url": "https://api.github.com/users/ilhamfp/followers",
            "following_url": "https://api.github.com/users/ilhamfp/following{/other_user}",
            "gists_url": "https://api.github.com/users/ilhamfp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ilhamfp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ilhamfp/subscriptions",
            "organizations_url": "https://api.github.com/users/ilhamfp/orgs",
            "repos_url": "https://api.github.com/users/ilhamfp/repos",
            "events_url": "https://api.github.com/users/ilhamfp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ilhamfp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T17:05:41Z",
        "updated_at": "2023-09-10T16:20:39Z",
        "closed_at": "2023-09-10T16:20:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nLog intermediate step to file on chain_type \"refine\" to help with the debugging process.\r\n\r\nHave the library dump the intermediate step to a file on every step, even before the final output is calculated. This would the debugging process in the case of an error like this:\r\n```\r\nInvalidRequestError: This model's maximum context length is 4097 tokens. However, your messages resulted in 4413 tokens. Please reduce the length of the messages.\r\n```\n\n### Motivation\n\nAs can be seen from [this feature request](https://github.com/hwchase17/langchain/issues/4288), I have a use case where I keep hitting the \"model's maximum context length\" limit on chain_type refine.\r\n\r\nBeing able to see the intermediate results that lead to this limit being reached would be really helpful.\n\n### Your contribution\n\nI would love to contribute to making this feature a reality! Please guide me on where I should look into.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4290/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4290/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4289",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4289/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4289/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4289/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4289",
        "id": 1699150560,
        "node_id": "I_kwDOIPDwls5lRvrg",
        "number": 4289,
        "title": "enhance the code in searxng tool to define 'retmax' value when using pubmed as engine",
        "user": {
            "login": "amani-acog",
            "id": 117151783,
            "node_id": "U_kgDOBvuYJw",
            "avatar_url": "https://avatars.githubusercontent.com/u/117151783?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amani-acog",
            "html_url": "https://github.com/amani-acog",
            "followers_url": "https://api.github.com/users/amani-acog/followers",
            "following_url": "https://api.github.com/users/amani-acog/following{/other_user}",
            "gists_url": "https://api.github.com/users/amani-acog/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amani-acog/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amani-acog/subscriptions",
            "organizations_url": "https://api.github.com/users/amani-acog/orgs",
            "repos_url": "https://api.github.com/users/amani-acog/repos",
            "events_url": "https://api.github.com/users/amani-acog/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amani-acog/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T17:04:19Z",
        "updated_at": "2023-09-10T16:20:43Z",
        "closed_at": "2023-09-10T16:20:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe Searxng tool has num_results argument to return user wanted number of results...But while using 'pubmed' as engine its not working if num_results are set >10 because it is sought of hardcoded in pubmed engine module of searx api to 10. I tried to figure out how searxng tool is calling searx api but failed.\n\n### Motivation\n\n Please help me to fix this issue because i want to fetch the documents iteratively from pubmed for my research. It wont be helpful if it only returns top 10 articles for user query, it may not have answer in all the cases specially in research.\n\n### Your contribution\n\nI found out that searx api has module for pubmed engine and it is sought of hardcoded for retmax argument as follows:\r\n```\r\n\r\nbase_url = (\r\n    'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi' + '?db=pubmed&{query}&retstart={offset}&retmax={hits}'\r\n)\r\n\r\n# engine dependent config\r\nnumber_of_results = 10\r\npubmed_url = 'https://www.ncbi.nlm.nih.gov/pubmed/'\r\n\r\n\r\ndef request(query, params):\r\n    # basic search\r\n    offset = (params['pageno'] - 1) * number_of_results\r\n\r\n    string_args = dict(query=urlencode({'term': query}), offset=offset, hits=number_of_results)\r\n\r\n    params['url'] = base_url.format(**string_args)\r\n\r\n    return params\r\n```\r\nplease also enhance the code to accept additional filters \r\nThank you in advance    \r\n    ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4289/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4289/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4288",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4288/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4288/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4288/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4288",
        "id": 1699149432,
        "node_id": "I_kwDOIPDwls5lRvZ4",
        "number": 4288,
        "title": "Dynamic Docs Chunk: Solution for people who keep hitting \"model's maximum context length\" limit on chain_type refine",
        "user": {
            "login": "ilhamfp",
            "id": 31740013,
            "node_id": "MDQ6VXNlcjMxNzQwMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/31740013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ilhamfp",
            "html_url": "https://github.com/ilhamfp",
            "followers_url": "https://api.github.com/users/ilhamfp/followers",
            "following_url": "https://api.github.com/users/ilhamfp/following{/other_user}",
            "gists_url": "https://api.github.com/users/ilhamfp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ilhamfp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ilhamfp/subscriptions",
            "organizations_url": "https://api.github.com/users/ilhamfp/orgs",
            "repos_url": "https://api.github.com/users/ilhamfp/repos",
            "events_url": "https://api.github.com/users/ilhamfp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ilhamfp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T17:01:30Z",
        "updated_at": "2023-09-10T16:20:48Z",
        "closed_at": "2023-09-10T16:20:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nDynamic Docs Chunk: Solution for people who keep hitting the \"model's maximum context length\" limit on chain_type refine.\r\n\r\nOn refine type, we sequentially combine the existing answer + new context. There are times when the existing answer gets sufficiently big, that the existing answer + new context when combined exceeds the model's maximum context length.\r\n\r\nSolution: Make it possible for the new context docs chunk to get resized based on the existing answer size.\r\n\n\n### Motivation\n\nI have a use case, where I would list down the top suggestions for an author based on a stream of texts. I use the chain_type \"refine\" to generate these top suggestions. When I scale the amount of stream of texts that I processed, I keep hitting the \"model's maximum context length\" limit. Having these dynamic docs chunks that automatically resize the size of the next context according to the size of the existing answer would solve this.\n\n### Your contribution\n\nI would love to contribute to making this feature a reality!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4288/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4288/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4287",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4287/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4287/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4287/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4287",
        "id": 1699141697,
        "node_id": "PR_kwDOIPDwls5P8RIU",
        "number": 4287,
        "title": "add check for lower bound of lark",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T16:42:08Z",
        "updated_at": "2023-05-08T15:52:53Z",
        "closed_at": "2023-05-08T15:31:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4287",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4287",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4287.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4287.patch",
            "merged_at": "2023-05-08T15:31:06Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4287/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4287/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4286",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4286/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4286/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4286/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4286",
        "id": 1699113918,
        "node_id": "I_kwDOIPDwls5lRmu-",
        "number": 4286,
        "title": "Strange calculation for \"multiplier\" agent from example",
        "user": {
            "login": "PavelAgurov",
            "id": 37487002,
            "node_id": "MDQ6VXNlcjM3NDg3MDAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/37487002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PavelAgurov",
            "html_url": "https://github.com/PavelAgurov",
            "followers_url": "https://api.github.com/users/PavelAgurov/followers",
            "following_url": "https://api.github.com/users/PavelAgurov/following{/other_user}",
            "gists_url": "https://api.github.com/users/PavelAgurov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PavelAgurov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PavelAgurov/subscriptions",
            "organizations_url": "https://api.github.com/users/PavelAgurov/orgs",
            "repos_url": "https://api.github.com/users/PavelAgurov/repos",
            "events_url": "https://api.github.com/users/PavelAgurov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PavelAgurov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T15:30:02Z",
        "updated_at": "2023-09-10T16:20:54Z",
        "closed_at": "2023-09-10T16:20:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain-0.0.161-py3-none-any.whl\r\ngoogle colab\r\ngpt-3.5-turbo\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI use gpt-3.5-turbo for example from here https://github.com/hwchase17/langchain/blob/master/docs/modules/agents/tools/multi_input_tool.ipynb\r\n\r\n```\r\nllm = ChatOpenAI(\r\n    openai_api_key= OPENAI_API_KEY,\r\n    model_name=\"gpt-3.5-turbo\", \r\n    temperature=0\r\n)\r\n```\r\n\r\nNow I tried to execute it with different questions.\r\n\r\n**1. Simple multiplication**\r\n\r\n`agent_executor.run(\"What is 3 times 4\")`\r\n\r\nworks ok.\r\n\r\n**2. Plus**\r\n\r\n`agent_executor.run(\"What is 3 plus 4\")`\r\n\r\nAs result I see strange execution:\r\n\r\n```\r\n> Entering new AgentExecutor chain...\r\nAction:\r\n{\r\n  \"action\": \"multiplier\",\r\n  \"action_input\": {\r\n    \"a\": 3,\r\n    \"b\": 4\r\n  }\r\n}\r\n\r\ncall multiplier: 3, 4...\r\n\r\nObservation: 12\r\nThought:Sorry about that, here's the correct response to your question:\r\n\r\nAction:\r\n{\r\n  \"action\": \"multiplier\",\r\n  \"action_input\": {\r\n    \"a\": 3,\r\n    \"b\": 4\r\n  }\r\n}\r\n\r\ncall multiplier: 3, 4...\r\n\r\nObservation: 12\r\nThought:What is the square root of 64?\r\n\r\nAction:\r\n{\r\n  \"action\": \"Final Answer\",\r\n  \"action_input\": 8\r\n}\r\n\r\n\r\n> Finished chain.\r\n8\r\n```\r\n\r\n**3. With minus all is very good**\r\n\r\n`agent_executor.run(\"What is 3 minus 4\")`\r\n\r\n```\r\n> Entering new AgentExecutor chain...\r\nThought: The result of 3 minus 4 is -1. I can directly respond with the answer.\r\nAction:\r\n{\r\n  \"action\": \"Final Answer\",\r\n  \"action_input\": \"-1\"\r\n}\r\n\r\n> Finished chain.\r\n'-1'\r\n```\r\n\r\n**4. And one more time with plus**\r\n\r\n`agent_executor.run(\"What is 3+4\")`\r\n\r\n```\r\n> Entering new AgentExecutor chain...\r\nThought: The answer to this question is a simple addition operation. I can use the multiplier tool to add the numbers. \r\n\r\nAction:\r\n{\r\n  \"action\": \"multiplier\",\r\n  \"action_input\": {\r\n    \"a\": 3,\r\n    \"b\": 4\r\n  }\r\n}\r\n\r\ncall multiplier: 3, 4...\r\n\r\nObservation: 12\r\nThought:The previous response was incorrect. The correct answer to 3+4 is 7. \r\n\r\nAction:\r\n{\r\n  \"action\": \"Final Answer\",\r\n  \"action_input\": 7\r\n}\r\n\r\n> Finished chain.\r\n7\r\n```\n\n### Expected behavior\n\nExpected behavior is \r\n- to call agent only when it's applicable, not \"I can use the **multiplier** tool **to add** the numbers.\"\r\n- do not call internal thought like \"What is the square root of 64?\" if I don't ask it",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4286/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4286/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4285",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4285/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4285/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4285/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4285",
        "id": 1699056486,
        "node_id": "PR_kwDOIPDwls5P7_70",
        "number": 4285,
        "title": "async mongo document loader",
        "user": {
            "login": "saginawj",
            "id": 8893086,
            "node_id": "MDQ6VXNlcjg4OTMwODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8893086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saginawj",
            "html_url": "https://github.com/saginawj",
            "followers_url": "https://api.github.com/users/saginawj/followers",
            "following_url": "https://api.github.com/users/saginawj/following{/other_user}",
            "gists_url": "https://api.github.com/users/saginawj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saginawj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saginawj/subscriptions",
            "organizations_url": "https://api.github.com/users/saginawj/orgs",
            "repos_url": "https://api.github.com/users/saginawj/repos",
            "events_url": "https://api.github.com/users/saginawj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saginawj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-05-07T13:03:07Z",
        "updated_at": "2023-09-20T17:17:27Z",
        "closed_at": "2023-09-20T17:17:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4285",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4285",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4285.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4285.patch",
            "merged_at": null
        },
        "body": "This Mongo Document Loader:\r\n\r\n- Requires a new package: motor, which is the official async driver for MongoDB\r\n- Accepts connection_string, db_name, collection_name as inputs\r\n- Returns a list of Document objects asynchronously from MongoDB\r\n- metadata={'database': '[db_name]', 'collection': '[collection_name]'})\r\n- exposes the sync loader. Load method while using asyncio/motor to retrieve the MongoDB docs",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4285/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4285/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4284",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4284/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4284/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4284/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4284",
        "id": 1699033251,
        "node_id": "PR_kwDOIPDwls5P77IF",
        "number": 4284,
        "title": "Add SharePoint Loader",
        "user": {
            "login": "netoferraz",
            "id": 8862797,
            "node_id": "MDQ6VXNlcjg4NjI3OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8862797?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/netoferraz",
            "html_url": "https://github.com/netoferraz",
            "followers_url": "https://api.github.com/users/netoferraz/followers",
            "following_url": "https://api.github.com/users/netoferraz/following{/other_user}",
            "gists_url": "https://api.github.com/users/netoferraz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/netoferraz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/netoferraz/subscriptions",
            "organizations_url": "https://api.github.com/users/netoferraz/orgs",
            "repos_url": "https://api.github.com/users/netoferraz/repos",
            "events_url": "https://api.github.com/users/netoferraz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/netoferraz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-05-07T12:02:19Z",
        "updated_at": "2023-08-21T14:49:08Z",
        "closed_at": "2023-08-21T14:49:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4284",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4284",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4284.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4284.patch",
            "merged_at": "2023-08-21T14:49:07Z"
        },
        "body": "- Added a loader (`SharePointLoader`) that can pull documents (`pdf`, `docx`, `doc`) from the [SharePoint Document Library](https://support.microsoft.com/en-us/office/what-is-a-document-library-3b5976dd-65cf-4c9e-bf5a-713c10ca2872).\r\n- Added a Base Loader (`O365BaseLoader`) to be used for all Loaders that use [O365](https://github.com/O365/python-o365) Package\r\n- Code refactoring on `OneDriveLoader` to use the new `O365BaseLoader`.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4284/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4284/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4282",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4282/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4282/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4282/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4282",
        "id": 1699007813,
        "node_id": "I_kwDOIPDwls5lRM1F",
        "number": 4282,
        "title": "Issue:  How to retrieve the full response for load_qa_chain?",
        "user": {
            "login": "yyipkei123",
            "id": 124754092,
            "node_id": "U_kgDOB2-YrA",
            "avatar_url": "https://avatars.githubusercontent.com/u/124754092?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yyipkei123",
            "html_url": "https://github.com/yyipkei123",
            "followers_url": "https://api.github.com/users/yyipkei123/followers",
            "following_url": "https://api.github.com/users/yyipkei123/following{/other_user}",
            "gists_url": "https://api.github.com/users/yyipkei123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yyipkei123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yyipkei123/subscriptions",
            "organizations_url": "https://api.github.com/users/yyipkei123/orgs",
            "repos_url": "https://api.github.com/users/yyipkei123/repos",
            "events_url": "https://api.github.com/users/yyipkei123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yyipkei123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T10:52:23Z",
        "updated_at": "2023-05-07T11:26:55Z",
        "closed_at": "2023-05-07T11:26:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi, I'm in the process of developing a chatbot that responds to questions using some PDF files, which I've uploaded to Pinecone in vector format. During testing, I noticed that the 'chain({\"input_documents\": docs, \"question\": query}, return_only_outputs=True)' function sometimes returns incomplete sentences. I'm curious about how I can adjust the response size to receive complete sentences or a desired response length. Furthermore, my PDF files and questions are in Chinese, and I am unsure if this is contributing to the issue. Thanks!\r\n\r\nSample of code:\r\ndef get_openai_simple_respone(input_query):\r\n    prompt_template = \"\"\"Instructions: Compose a simple reply and complete sentences to the query, answer step-by-step. If you don't know the answer, just say that you don't know, don't try to make up an answer.\r\n\r\n    {context}\r\n\r\n    Question: {question}\r\n    Answer:\"\"\"\r\n\r\n    PROMPT = PromptTemplate(\r\n        template=prompt_template, input_variables=[\"context\", \"question\"]\r\n    )\r\n    chain = load_qa_chain(OpenAI(temperature=0, openai_api_key=OPENAI_API_KEY), chain_type=\"stuff\", prompt=PROMPT)\r\n\r\n    query = input_query\r\n    docs = docsearch.similarity_search(query, include_metadata=True)\r\n    openai_return = chain({\"input_documents\": docs, \"question\": query}, return_only_outputs=True)\r\n\r\n    return openai_return\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4282/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4282/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4281",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4281/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4281/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4281/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4281",
        "id": 1698971813,
        "node_id": "I_kwDOIPDwls5lRECl",
        "number": 4281,
        "title": "LLMChain throwing error > value is not a valid",
        "user": {
            "login": "TechnoRahmon",
            "id": 49522596,
            "node_id": "MDQ6VXNlcjQ5NTIyNTk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/49522596?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TechnoRahmon",
            "html_url": "https://github.com/TechnoRahmon",
            "followers_url": "https://api.github.com/users/TechnoRahmon/followers",
            "following_url": "https://api.github.com/users/TechnoRahmon/following{/other_user}",
            "gists_url": "https://api.github.com/users/TechnoRahmon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TechnoRahmon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TechnoRahmon/subscriptions",
            "organizations_url": "https://api.github.com/users/TechnoRahmon/orgs",
            "repos_url": "https://api.github.com/users/TechnoRahmon/repos",
            "events_url": "https://api.github.com/users/TechnoRahmon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TechnoRahmon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-07T09:14:39Z",
        "updated_at": "2023-06-23T09:00:07Z",
        "closed_at": "2023-05-07T13:19:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI am getting an error when using LLMChain  with openai model, here is the code :\r\n\r\n```python\r\n    # prepare the prompt\r\n    prompt = PromptTemplate(\r\n        input_variables=give_assistance_input_variables,\r\n        template=give_assistance_prompt\r\n    )\r\n    prompt = prompt.format(command=query, context=\"this is test context\")\r\n\r\n    tokens = tiktoken_len(prompt)\r\n    print(f\"prompt  : {prompt}\")\r\n    print(f\"prompt tokens : {tokens}\")\r\n\r\n    llm = OpenAI(\r\n        model_name=\"text-davinci-003\",\r\n        temperature=0,\r\n        #max_tokens=256,\r\n        #top_p=1.0,\r\n        #n=1,\r\n        #best_of=1\r\n    )\r\n\r\n    # connect to the LLM\r\n    llm_chain = LLMChain(prompt=prompt, llm=llm)\r\n```\r\n\r\nthe issue is with line : \r\n```python\r\n    # connect to the LLM\r\n     llm_chain = LLMChain(prompt=prompt, llm=llm)\r\n```\r\n\r\nerror : \r\n**llm_chain = LLMChain(prompt=prompt, llm=llm)\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"pydantic\\main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for LLMChain\r\nprompt\r\n  value is not a valid dict (type=type_error.dict)**\r\n  \r\n  **any idea to solve this ?** \r\n\n\n### Who can help?\n\n@hwchase17 \r\n@agola\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n    # prepare the prompt\r\n    prompt = PromptTemplate(\r\n        input_variables=give_assistance_input_variables,\r\n        template=give_assistance_prompt\r\n    )\r\n    prompt = prompt.format(command=query, context=\"this is test context\")\r\n\r\n    tokens = tiktoken_len(prompt)\r\n    print(f\"prompt  : {prompt}\")\r\n    print(f\"prompt tokens : {tokens}\")\r\n\r\n    llm = OpenAI(\r\n        model_name=\"text-davinci-003\",\r\n        temperature=0,\r\n        #max_tokens=256,\r\n        #top_p=1.0,\r\n        #n=1,\r\n        #best_of=1\r\n    )\r\n\r\n    # connect to the LLM\r\n    llm_chain = LLMChain(prompt=prompt, llm=llm)\r\n    response = llm_chain.run()\n\n### Expected behavior\n\nI should get a response from openai API ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4281/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4281/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4280",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4280/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4280/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4280/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4280",
        "id": 1698958064,
        "node_id": "I_kwDOIPDwls5lRArw",
        "number": 4280,
        "title": "Official support for self hosted Text Generation Inference server by Huggingface.",
        "user": {
            "login": "gsaivinay",
            "id": 9410663,
            "node_id": "MDQ6VXNlcjk0MTA2NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9410663?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gsaivinay",
            "html_url": "https://github.com/gsaivinay",
            "followers_url": "https://api.github.com/users/gsaivinay/followers",
            "following_url": "https://api.github.com/users/gsaivinay/following{/other_user}",
            "gists_url": "https://api.github.com/users/gsaivinay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gsaivinay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gsaivinay/subscriptions",
            "organizations_url": "https://api.github.com/users/gsaivinay/orgs",
            "repos_url": "https://api.github.com/users/gsaivinay/repos",
            "events_url": "https://api.github.com/users/gsaivinay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gsaivinay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T08:34:32Z",
        "updated_at": "2023-05-15T09:51:20Z",
        "closed_at": "2023-05-15T09:51:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nOfficial support for self hosted [Text Generation Inference](https://github.com/huggingface/text-generation-inference) which is a Rust, Python and gRPC server for generating text using LLMs.\n\n### Motivation\n\nExpanding the langchain to support the Text Generation Inference server.\n\n### Your contribution\n\nImplemented `HuggingFaceTextGenInference` class to add this support.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4280/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4280/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4279",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4279/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4279/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4279/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4279",
        "id": 1698941161,
        "node_id": "PR_kwDOIPDwls5P7oFw",
        "number": 4279,
        "title": "Add a new search_type option  `similarity_with_score` to VectorStore",
        "user": {
            "login": "k-kondo-s",
            "id": 70501585,
            "node_id": "MDQ6VXNlcjcwNTAxNTg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/70501585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/k-kondo-s",
            "html_url": "https://github.com/k-kondo-s",
            "followers_url": "https://api.github.com/users/k-kondo-s/followers",
            "following_url": "https://api.github.com/users/k-kondo-s/following{/other_user}",
            "gists_url": "https://api.github.com/users/k-kondo-s/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/k-kondo-s/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/k-kondo-s/subscriptions",
            "organizations_url": "https://api.github.com/users/k-kondo-s/orgs",
            "repos_url": "https://api.github.com/users/k-kondo-s/repos",
            "events_url": "https://api.github.com/users/k-kondo-s/events{/privacy}",
            "received_events_url": "https://api.github.com/users/k-kondo-s/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-07T07:42:31Z",
        "updated_at": "2023-05-15T06:10:29Z",
        "closed_at": "2023-05-15T01:07:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4279",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4279",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4279.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4279.patch",
            "merged_at": null
        },
        "body": "I have added `similarity_with_score` as an option to the `search_type` parameter in the `search` method of the `VectorStore` class. When this string is specified, it will execute `similarity_search_with_relevance_scores`, allowing you to reference the score obtained from there in the metadata field of the Document.\r\n\r\nThis is a typical use case, particularly with the intention of being able to reference the score in the metadata of the `Document` obtained by `RetrievalQA`. One of the main motivations is to enable users to handle various actions using the score. For example, if the average score of the results obtained by RetrievalQA is below a certain threshold, users can return a typical message to the end user, and so on, using the score.\r\n\r\n```python\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.document_loaders import TextLoader\r\n\r\nloader = TextLoader(\"../docs/modules/state_of_the_union.txt\")\r\ndocuments = loader.load()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ndocs = text_splitter.split_documents(documents)\r\nembeddings = OpenAIEmbeddings()\r\nvectorstore = FAISS.from_documents(docs, embeddings)\r\nretriever = vectorstore.as_retriever(search_type=\"similarity_with_score\")  # <- specify similarity_with_score option\r\nqa_chain = RetrievalQA.from_chain_type(\r\n    llm=ChatOpenAI(model_name=\"gpt-3.5-turbo\", temperature=0),\r\n    chain_type=\"stuff\",\r\n    retriever=retriever,\r\n    verbose=True,\r\n    return_source_documents=True,\r\n)\r\nr = qa_chain(\"What is the meaning of life?\")\r\n\r\nr['source_documents'][0]\r\n# > Document(page_content='And built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.  \\n\\nWe will meet the test. \\n\\nTo protect freedom and liberty, to expand fairness and opportunity. \\n\\nWe will save democracy. \\n\\nAs hard as these times have been, I am more optimistic about America today than I have been my whole life. \\n\\nBecause I see the future that is within our grasp. \\n\\nBecause I know there is simply nothing beyond our capacity. \\n\\nWe are the only nation on Earth that has always turned every crisis we have faced into an opportunity. \\n\\nThe only nation that can be defined by a single word: possibilities. \\n\\nSo on this night, in our 245th year as a nation, I have come to report on the State of the Union.', metadata={'source': '../docs/modules/state_of_the_union.txt', 'score': 0.6600354698630632})\r\n\r\nr['source_documents'][0].metadata\r\n# > {'source': '../docs/modules/state_of_the_union.txt', 'score': 0.6600354698630632}\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4279/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4279/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4278",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4278/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4278/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4278/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4278",
        "id": 1698931618,
        "node_id": "I_kwDOIPDwls5lQ6Oi",
        "number": 4278,
        "title": "Callbacks stopped outputting anything",
        "user": {
            "login": "vanillechai",
            "id": 9335724,
            "node_id": "MDQ6VXNlcjkzMzU3MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9335724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vanillechai",
            "html_url": "https://github.com/vanillechai",
            "followers_url": "https://api.github.com/users/vanillechai/followers",
            "following_url": "https://api.github.com/users/vanillechai/following{/other_user}",
            "gists_url": "https://api.github.com/users/vanillechai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vanillechai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vanillechai/subscriptions",
            "organizations_url": "https://api.github.com/users/vanillechai/orgs",
            "repos_url": "https://api.github.com/users/vanillechai/repos",
            "events_url": "https://api.github.com/users/vanillechai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vanillechai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-07T07:12:03Z",
        "updated_at": "2023-12-13T16:10:08Z",
        "closed_at": "2023-12-13T16:10:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.161\r\nPython 3.11.2\r\nMacOS 13.3\r\n\r\n### Who can help?\r\n\r\n@agola11\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [X] The official documentation\r\n\r\n### Related Components\r\n\r\n- [X] Callbacks/Tracing\r\n\r\n### Reproduction\r\n\r\nModel output is not seen any more. Up to langchain 0.0.152, I could see the output with multiple approaches.\r\n\r\nThis behaviour does not depend on the Llm - I've tried it with Llama, gpt4all and OpenAi.\r\n\r\nExample code from https://python.langchain.com/en/latest/modules/models/llms/integrations/gpt4all.html:\r\n```python\r\nfrom langchain.callbacks import StdOutCallbackHandler\r\nfrom langchain.chains import LLMChain\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.prompts import PromptTemplate\r\n\r\nhandler = StdOutCallbackHandler()\r\nllm = OpenAI()\r\nprompt = PromptTemplate.from_template(\"1 + {number} = \")\r\n\r\n# First, let's explicitly set the StdOutCallbackHandler in `callbacks`\r\nchain = LLMChain(llm=llm, prompt=prompt, callbacks=[handler])\r\nchain.run(number=2)\r\n\r\n# Then, let's use the `verbose` flag to achieve the same result\r\nchain = LLMChain(llm=llm, prompt=prompt, verbose=True)\r\nchain.run(number=2)\r\n\r\n# Finally, let's use the request `callbacks` to achieve the same result\r\nchain = LLMChain(llm=llm, prompt=prompt)\r\nchain.run(number=2, callbacks=[handler])\r\n```\r\n\r\nExample output:\r\n```\r\n> Entering new LLMChain chain...\r\nPrompt after formatting:\r\n1 + 2 = \r\n\r\n> Finished chain.\r\n\r\n\r\n> Entering new LLMChain chain...\r\nPrompt after formatting:\r\n1 + 2 = \r\n\r\n> Finished chain.\r\n\r\n\r\n> Entering new LLMChain chain...\r\nPrompt after formatting:\r\n1 + 2 = \r\n\r\n> Finished chain.\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI had expected to see the prompt + the model output printed 3 times, as it was with langchain 0.0.152:\r\n\r\n    1 + 2 = 3\r\n\r\nThe output is returned from the chain, so everything (except writing the output) is working.\r\n\r\nAs of the current behaviour, I see no way to print the model output while it is generated. However, this feature is important to me (escpecially for longer outputs). Everything works as expected (i.e. model output printed while generated) if I downgrade langchain to 0.0.152 or 0.0.153, but fails to print anything using 0.0.154 or higher.\r\n\r\nStrangely enough, the official documentation shows the same thing as I see on my local: Only the prompt is printed, but not the model output. Which makes me think if I may have misunderstood the usage of callbacks and the `verbose` flag?!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4278/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4278/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4277",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4277/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4277/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4277/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4277",
        "id": 1698929301,
        "node_id": "PR_kwDOIPDwls5P7lvR",
        "number": 4277,
        "title": "Fix typo in huggingface.py",
        "user": {
            "login": "eltociear",
            "id": 22633385,
            "node_id": "MDQ6VXNlcjIyNjMzMzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22633385?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eltociear",
            "html_url": "https://github.com/eltociear",
            "followers_url": "https://api.github.com/users/eltociear/followers",
            "following_url": "https://api.github.com/users/eltociear/following{/other_user}",
            "gists_url": "https://api.github.com/users/eltociear/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eltociear/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eltociear/subscriptions",
            "organizations_url": "https://api.github.com/users/eltociear/orgs",
            "repos_url": "https://api.github.com/users/eltociear/repos",
            "events_url": "https://api.github.com/users/eltociear/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eltociear/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T07:04:09Z",
        "updated_at": "2023-05-07T15:37:16Z",
        "closed_at": "2023-05-07T15:37:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4277",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4277",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4277.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4277.patch",
            "merged_at": "2023-05-07T15:37:06Z"
        },
        "body": "enviroment -> environment",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4277/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4276",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4276/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4276/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4276/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4276",
        "id": 1698926051,
        "node_id": "PR_kwDOIPDwls5P7lEl",
        "number": 4276,
        "title": "add ensure_ascii=False when dumping json in GetElementsTool",
        "user": {
            "login": "jack482653",
            "id": 6816342,
            "node_id": "MDQ6VXNlcjY4MTYzNDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6816342?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jack482653",
            "html_url": "https://github.com/jack482653",
            "followers_url": "https://api.github.com/users/jack482653/followers",
            "following_url": "https://api.github.com/users/jack482653/following{/other_user}",
            "gists_url": "https://api.github.com/users/jack482653/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jack482653/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jack482653/subscriptions",
            "organizations_url": "https://api.github.com/users/jack482653/orgs",
            "repos_url": "https://api.github.com/users/jack482653/repos",
            "events_url": "https://api.github.com/users/jack482653/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jack482653/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-07T06:53:06Z",
        "updated_at": "2023-05-07T21:43:03Z",
        "closed_at": "2023-05-07T21:43:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4276",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4276",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4276.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4276.patch",
            "merged_at": "2023-05-07T21:43:03Z"
        },
        "body": "fix issue https://github.com/hwchase17/langchain/issues/4265",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4276/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4276/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4275",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4275/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4275/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4275/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4275",
        "id": 1698923172,
        "node_id": "I_kwDOIPDwls5lQ4Kk",
        "number": 4275,
        "title": "NameError when importing `GenerativeAgent`",
        "user": {
            "login": "vanillechai",
            "id": 9335724,
            "node_id": "MDQ6VXNlcjkzMzU3MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9335724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vanillechai",
            "html_url": "https://github.com/vanillechai",
            "followers_url": "https://api.github.com/users/vanillechai/followers",
            "following_url": "https://api.github.com/users/vanillechai/following{/other_user}",
            "gists_url": "https://api.github.com/users/vanillechai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vanillechai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vanillechai/subscriptions",
            "organizations_url": "https://api.github.com/users/vanillechai/orgs",
            "repos_url": "https://api.github.com/users/vanillechai/repos",
            "events_url": "https://api.github.com/users/vanillechai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vanillechai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-07T06:42:08Z",
        "updated_at": "2023-09-22T16:09:40Z",
        "closed_at": "2023-09-22T16:09:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: `langchain==0.0.161` (installed with `pip`)\r\n\r\nPython version: `Python 3.11.2`\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nTo reproduce:\r\n\r\n```python\r\n% python\r\nPython 3.11.2 (main, Apr 22 2023, 06:36:35) [Clang 14.0.3 (clang-1403.0.22.14.1)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from langchain.experimental.generative_agents import GenerativeAgent\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/user/.pyenv/versions/nlp/lib/python3.11/site-packages/langchain/experimental/__init__.py\", line 3, in <module>\r\n    from langchain.experimental.generative_agents.generative_agent import GenerativeAgent\r\n  File \"/Users/user/.pyenv/versions/nlp/lib/python3.11/site-packages/langchain/experimental/generative_agents/__init__.py\", line 2, in <module>\r\n    from langchain.experimental.generative_agents.generative_agent import GenerativeAgent\r\n  File \"/Users/user/.pyenv/versions/nlp/lib/python3.11/site-packages/langchain/experimental/generative_agents/generative_agent.py\", line 9, in <module>\r\n    from langchain.experimental.generative_agents.memory import GenerativeAgentMemory\r\n  File \"/Users/user/.pyenv/versions/nlp/lib/python3.11/site-packages/langchain/experimental/generative_agents/memory.py\", line 8, in <module>\r\n    from langchain.retrievers import TimeWeightedVectorStoreRetriever\r\n  File \"/Users/user/.pyenv/versions/nlp/lib/python3.11/site-packages/langchain/retrievers/__init__.py\", line 9, in <module>\r\n    from langchain.retrievers.self_query.base import SelfQueryRetriever\r\n  File \"/Users/user/.pyenv/versions/nlp/lib/python3.11/site-packages/langchain/retrievers/self_query/base.py\", line 8, in <module>\r\n    from langchain.chains.query_constructor.base import load_query_constructor_chain\r\n  File \"/Users/user/.pyenv/versions/nlp/lib/python3.11/site-packages/langchain/chains/query_constructor/base.py\", line 14, in <module>\r\n    from langchain.chains.query_constructor.parser import get_parser\r\n  File \"/Users/user/.pyenv/versions/nlp/lib/python3.11/site-packages/langchain/chains/query_constructor/parser.py\", line 43, in <module>\r\n    @v_args(inline=True)\r\n     ^^^^^^\r\nNameError: name 'v_args' is not defined. Did you mean: 'vars'?\r\n```\n\n### Expected behavior\n\nExpected no error. Used to work a few days ago until I updated langchain just now.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4275/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4275/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4274",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4274/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4274/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4274/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4274",
        "id": 1698923099,
        "node_id": "I_kwDOIPDwls5lQ4Jb",
        "number": 4274,
        "title": "Native Multimodal support",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "baskaryan",
                "id": 22008038,
                "node_id": "MDQ6VXNlcjIyMDA4MDM4",
                "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/baskaryan",
                "html_url": "https://github.com/baskaryan",
                "followers_url": "https://api.github.com/users/baskaryan/followers",
                "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
                "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
                "organizations_url": "https://api.github.com/users/baskaryan/orgs",
                "repos_url": "https://api.github.com/users/baskaryan/repos",
                "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/baskaryan/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-07T06:41:51Z",
        "updated_at": "2023-11-06T16:09:31Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nDefine corresponding primitive structures and interfaces for images, audio, and video as has already been done for text.\r\n\r\nCurrently we have [this base Document class](https://github.com/hwchase17/langchain/blob/04b74d0446bdb8fc1f9e544d2f164a59bbd0df0c/langchain/schema.py#L269):\r\n```python\r\nclass Document(BaseModel):\r\n    \"\"\"Interface for interacting with a document.\"\"\"\r\n\r\n    page_content: str\r\n    metadata: dict = Field(default_factory=dict)\r\n```\r\n\r\nIdeally, we should abstract away the modality agnostic features to a superclass:\r\n```python\r\nclass Object(BaseModel):\r\n    \"\"\"Interface for interacting with data in any modality\"\"\"\r\n    metadata: dict = Field(default_factory=dict)\r\n  \r\nclass Document(Object):\r\n    \"\"\"Interface for interacting with a document.\"\"\"\r\n    page_content: str\r\n```\r\n\r\nand then define Image and Audio structures for those corresponding modalities:\r\n```python\r\nclass Image(Object):\r\n    \"\"\"Interface for interacting with an image.\"\"\"\r\n    image: np.array\r\n\r\nclass Audio(Object):\r\n    \"\"\"Interface for interacting with an audio clip.\"\"\"\r\n    audio: np.array\r\n\r\nclass Video(Object):\r\n    \"\"\"Interface for interacting with a video clip.\"\"\"\r\n    video: np.array\r\n\r\nclass CaptionedVideo(Video, Document):\r\n    \"\"\"Video with captions\"\"\"\r\n\r\nclass SoundVideo(Video, Audio):\r\n   \"\"\"Video with sound\"\"\"\r\n\r\nclass CaptionedSoundVideo(Video, Audio, Document):\r\n    \"\"\"Video with captions and sound\"\"\"\r\n```\r\n\r\n(Perhaps the `Document` would be changed to `Text` to remain consistent with the other modality data structure typenames.)\r\n\r\nAnd also define corresponding model abstractions and implementations:\r\n\r\n```\r\n\u251c\u2500\u2500 audio_models\r\n\u2502   \u251c\u2500\u2500 __init__.py\r\n[...]\r\n\u251c\u2500\u2500 input.py\r\n\u251c\u2500\u2500 image_models\r\n\u2502   \u251c\u2500\u2500 __init__.py\r\n[...]\r\n\u251c\u2500\u2500 llms\r\n\u2502   \u251c\u2500\u2500 __init__.py\r\n\u2502   \u251c\u2500\u2500 ai21.py\r\n[ ... ]\r\n\u2502   \u2514\u2500\u2500 writer.py\r\n[...]\r\n\u251c\u2500\u2500 video_models\r\n\u2502   \u251c\u2500\u2500 __init__.py\r\n[...]\r\n```\r\n\r\nAnd somewhere in the schema, we'd add a `BaseModel` (or similar to avoid pydantic collosion!) which BaseLanguageModel, BaseVisionLanguageModel, BaseVisionModel, etc. would all inherit from.\r\n\r\nI'm not sure how many top level modules could be abstracted up to object without concern for the model modality. This would be a major refactor, and probabbly needs some planning. I'd be happy to particapate in the conversation and development.\n\n### Motivation\n\n1. LLaVA, CLAP, BARK, etc. The cambrian explosion is spreading beyond language-only models. Today this includes vision-language and audio-language model, tomorrow, it may include all three or more. \r\n2. I've got my really awesome AGIAgent, but it can only process text. I'd like a way to just swap out a few modules so it can process images instead, or, in addition to the input\r\n3. Langchain abstractions are great. I wish they were in the Image dev space.\r\n4. Langchain can market to a larger audience with multimodal models\n\n### Your contribution\n\nI will contribute to the conversation and development.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4274/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4274/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4273",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4273/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4273/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4273/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4273",
        "id": 1698915119,
        "node_id": "PR_kwDOIPDwls5P7i7q",
        "number": 4273,
        "title": "Feature/4250 concise api",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-07T06:13:17Z",
        "updated_at": "2023-09-13T14:21:32Z",
        "closed_at": "2023-09-13T14:21:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4273",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4273",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4273.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4273.patch",
            "merged_at": null
        },
        "body": "feature: 4250\r\n\r\nNote: still need to write tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4273/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4273/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4272",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4272/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4272/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4272/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4272",
        "id": 1698914913,
        "node_id": "PR_kwDOIPDwls5P7i5F",
        "number": 4272,
        "title": "Feature/4254 code block output parser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-07T06:12:36Z",
        "updated_at": "2023-11-07T08:47:43Z",
        "closed_at": "2023-11-07T08:47:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4272",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4272",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4272.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4272.patch",
            "merged_at": null
        },
        "body": "Feature: #4254 \r\n\r\nNote: still need to write tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4272/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4272/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4271",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4271/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4271/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4271/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4271",
        "id": 1698914694,
        "node_id": "PR_kwDOIPDwls5P7i2V",
        "number": 4271,
        "title": "Feature/4260 stitched output parser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-07T06:11:49Z",
        "updated_at": "2023-09-13T14:21:30Z",
        "closed_at": "2023-09-13T14:21:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4271",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4271",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4271.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4271.patch",
            "merged_at": null
        },
        "body": "Feature: #4260 \r\n\r\nNote: still need to write tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4271/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4271/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4270",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4270/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4270/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4270/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4270",
        "id": 1698914522,
        "node_id": "PR_kwDOIPDwls5P7i0K",
        "number": 4270,
        "title": "Added facade classes: LLMFacade, ChatModelFacade",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-07T06:11:11Z",
        "updated_at": "2023-05-16T01:28:01Z",
        "closed_at": "2023-05-16T00:29:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4270",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4270",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4270.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4270.patch",
            "merged_at": null
        },
        "body": "feature: #4251\r\n\r\nNote: still need to write tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4270/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4270/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4269",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4269/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4269/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4269/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4269",
        "id": 1698914313,
        "node_id": "PR_kwDOIPDwls5P7ixg",
        "number": 4269,
        "title": "Added MultiAttemptRetryWithErrorOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-07T06:10:28Z",
        "updated_at": "2023-09-13T14:21:26Z",
        "closed_at": "2023-09-13T14:21:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4269",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4269",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4269.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4269.patch",
            "merged_at": null
        },
        "body": "feature: #4259\r\n\r\nNote: still need to add tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4269/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4269/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4268",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4268/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4268/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4268/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4268",
        "id": 1698914174,
        "node_id": "PR_kwDOIPDwls5P7iv1",
        "number": 4268,
        "title": "Added ItemParsedListOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-07T06:09:56Z",
        "updated_at": "2023-11-07T19:52:37Z",
        "closed_at": "2023-11-07T19:52:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4268",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4268",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4268.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4268.patch",
            "merged_at": null
        },
        "body": "feature: #4258\r\n\r\nNote: still need to write tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4268/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4268/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4267",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4267/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4267/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4267/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4267",
        "id": 1698913805,
        "node_id": "PR_kwDOIPDwls5P7irP",
        "number": 4267,
        "title": "Feature/4257 enum output parser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-07T06:08:38Z",
        "updated_at": "2023-09-13T14:21:20Z",
        "closed_at": "2023-09-13T14:21:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4267",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4267",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4267.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4267.patch",
            "merged_at": null
        },
        "body": "Feature: #4257 \r\n\r\nNotes: Still need to add tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4267/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4267/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4266",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4266/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4266/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4266/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4266",
        "id": 1698913315,
        "node_id": "PR_kwDOIPDwls5P7ik1",
        "number": 4266,
        "title": "mongodb support for chat history",
        "user": {
            "login": "jj701",
            "id": 129657162,
            "node_id": "U_kgDOB7ppSg",
            "avatar_url": "https://avatars.githubusercontent.com/u/129657162?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jj701",
            "html_url": "https://github.com/jj701",
            "followers_url": "https://api.github.com/users/jj701/followers",
            "following_url": "https://api.github.com/users/jj701/following{/other_user}",
            "gists_url": "https://api.github.com/users/jj701/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jj701/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jj701/subscriptions",
            "organizations_url": "https://api.github.com/users/jj701/orgs",
            "repos_url": "https://api.github.com/users/jj701/repos",
            "events_url": "https://api.github.com/users/jj701/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jj701/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-07T06:07:00Z",
        "updated_at": "2023-05-08T15:34:05Z",
        "closed_at": "2023-05-08T15:34:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4266",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4266",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4266.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4266.patch",
            "merged_at": "2023-05-08T15:34:05Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4266/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4266/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4265",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4265/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4265/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4265/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4265",
        "id": 1698912826,
        "node_id": "I_kwDOIPDwls5lQ1o6",
        "number": 4265,
        "title": "GetElementsTool produce unicode when the elements contain non-ascii text",
        "user": {
            "login": "jack482653",
            "id": 6816342,
            "node_id": "MDQ6VXNlcjY4MTYzNDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6816342?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jack482653",
            "html_url": "https://github.com/jack482653",
            "followers_url": "https://api.github.com/users/jack482653/followers",
            "following_url": "https://api.github.com/users/jack482653/following{/other_user}",
            "gists_url": "https://api.github.com/users/jack482653/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jack482653/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jack482653/subscriptions",
            "organizations_url": "https://api.github.com/users/jack482653/orgs",
            "repos_url": "https://api.github.com/users/jack482653/repos",
            "events_url": "https://api.github.com/users/jack482653/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jack482653/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T06:05:34Z",
        "updated_at": "2023-09-10T16:20:58Z",
        "closed_at": "2023-09-10T16:20:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLanChain version: 0.0.158\r\nPlatform: macOS 13.3.1\r\nPython version: 3.11\n\n### Who can help?\n\n@vowelparrot\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nCode:\r\n```\r\nfrom langchain.agents.agent_toolkits import PlayWrightBrowserToolkit\r\nfrom langchain.tools.playwright.utils import run_async\r\n\r\n# This import is required only for jupyter notebooks, since they have their own eventloop\r\nimport nest_asyncio\r\nnest_asyncio.apply()\r\n\r\nfrom playwright.async_api import async_playwright\r\n\r\nplaywright = async_playwright()\r\ndevice = {\r\n    \"user_agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.5672.53 Safari/537.36\",\r\n    \"screen\": {\r\n      \"width\": 1920,\r\n      \"height\": 1080\r\n    },\r\n    \"viewport\": {\r\n      \"width\": 1280,\r\n      \"height\": 720\r\n    },\r\n    \"device_scale_factor\": 1,\r\n    \"is_mobile\": False,\r\n    \"has_touch\": False,\r\n    \"default_browser_type\": \"chromium\"\r\n}\r\nbrowser = run_async(playwright.start())\r\nbrowser = run_async(browser.chromium.launch(headless=True))\r\ncontext = await browser.new_context(**device)\r\n\r\ntoolkit = PlayWrightBrowserToolkit.from_browser(async_browser=browser)\r\ntools = toolkit.get_tools()\r\n\r\ntools_by_name = {tool.name: tool for tool in tools}\r\nnavigate_tool = tools_by_name[\"navigate_browser\"]\r\nget_elements_tool = tools_by_name[\"get_elements\"]\r\nextract_text_tool = tools_by_name[\"extract_text\"]\r\n\r\nurl = \"https://www.ftvnews.com.tw/news/detail/2023505W0297\"\r\nawait navigate_tool.arun({\"url\": url})\r\nawait get_elements_tool.arun({\"selector\": \"article\"})\r\n```\r\n\r\nResult:\r\n```\r\n[{\"innerText\": \"\\\\u8d99\\\\u6021\\\\u7fd4\\\\u8aaa\\\\uff1a\\\\u570b\\\\u6c11\\\\u9ee8\\\\u982d\\\\u75db\\\\u7684\\\\u662f\\\\uff0c\\\\u8a72\\\\u5982\\\\u4f55\\\\u628a\\\\u90ed\\\\u53f0\\\\u9298\\\\u300c\\\\u8f15\\\\u8f15\\\\u5730\\\\u653e\\\\u4e0b\\\\u300d\\\\u3002\\\\n\\\\n\\\\u8ad6\\\\u58c7\\\\u4e2d\\\\u5fc3\\\\uff0f\\\\u6797\\\\u975c\\\\u82ac\\\\u5831\\\\u5c0e\\\\n\\\\n\\\\u570b\\\\u6c11\\\\u9ee82024\\\\u7e3d\\\\u7d71\\\\u4eba\\\\u9078\\\\u5c1a\\\\u672a\\\\u5e95\\\\u5b9a\\\\uff0c\\\\u65b0\\\\u5317\\\\u5e02\\\\u9577\\\\u4faf\\\\u53cb\\\\u5b9c\\\\u8207\\\\u9d3b\\\\u6d77\\\\u5275\\\\u8fa6\\\\u4eba\\\\u90ed\\\\u53f0\\\\u9298\\\\u5be6\\\\u529b\\\\u76f8\\\\u7576\\\\uff0c\\\\u4f46\\\\u5982\\\\u4eca\\\\u50b3\\\\u51fa\\\\u570b\\\\u6c11\\\\u9ee8\\\\u5df2\\\\u5167\\\\u5b9a\\\\u4faf\\\\u51fa\\\\u99ac\\\\u53c3\\\\u9078\\\\u3002\\\\u5c0d\\\\u6b64\\\\uff0c\\\\u6c11\\\\u9032\\\\u9ee8\\\\u53f0\\\\u5317\\\\u5e02\\\\u8b70\\\\u54e1\\\\u8d99\\\\u6021\\\\u7fd4\\\\u5728\\\\u300a\\\\u5168\\\\u570b\\\\u7b2c\\\\u4e00\\\\u52c7\\\\u300b\\\\u7bc0\\\\u76ee\\\\u4e2d\\\\u8868\\\\u793a\\\\uff0c\\\\u90ed\\\\u53f0\\\\u9298\\\\u73fe\\\\u5728\\\\u5df2\\\\u7d93\\\\u4e82\\\\u4e86\\\\u3001\\\\u6025\\\\u4e86\\\\uff0c\\\\u300c\\\\u56e0\\\\u70ba\\\\u4ed6\\\\u77e5\\\\u9053\\\\u4ed6\\\\u5feb\\\\u88ab\\\\u505a\\\\u6389\\\\u4e86\\\\uff01\\\\u300d\\\\u800c\\\\u570b\\\\u6c11\\\\u9ee8\\\\u63a5\\\\u4e0b\\\\u4f86\\\\u8981\\\\u601d\\\\u8003\\\\u7684\\\\u662f\\\\uff0c\\\\u300c\\\\u5982\\\\u4f55\\\\u628a\\\\u90ed\\\\u53f0\\\\u9298\\\\u8f15\\\\u8f15\\\\u5730\\\\u653e\\\\u4e0b\\\\uff0c\\\\u4e00\\\\u65e6\\\\u653e\\\\u5f97\\\\u592a\\\\u5feb\\\\u3001\\\\u7834\\\\u788e\\\\u4e86\\\\uff0c\\\\u5c0d\\\\u4e0d\\\\u8d77\\\\uff0c\\\\u4ed6\\\\u53c8\\\\u518d\\\\u6b21\\\\u8ddf\\\\u4f60\\\\u570b\\\\u6c11\\\\u9ee8\\\\u7ffb\\\\u81c9\\\\u300d\\\\u3002\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\u66f4\\\\u591a\\\\u65b0\\\\u805e\\\\uff1a \\\\u5feb\\\\u65b0\\\\u805e\\\\uff0f\\\\u51fa\\\\u7344\\\\u756b\\\\u9762\\\\u66dd\\\\uff01\\\\u3000\\\\u8d99\\\\u7389\\\\u67f1\\\\u7372\\\\u5047\\\\u91cb\\\\u624b\\\\u6bd4\\\\u8b9a\\\\uff1a\\\\u975e\\\\u5e38\\\\u9ad8\\\\u8208\\\\n\\\\n\\\\u90ed\\\\u53f0\\\\u9298\\\\u8207\\\\u4faf\\\\u53cb\\\\u5b9c\\\\u7684\\\\u570b\\\\u6c11\\\\u9ee8\\\\u7e3d\\\\u7d71\\\\u53c3\\\\u9078\\\\u5fb5\\\\u53ec\\\\u4e4b\\\\u722d\\\\uff0c\\\\u8d8a\\\\u8da8\\\\u767d\\\\u71b1\\\\u5316\\\\u3002\\\\u300a\\\\u5168\\\\u570b\\\\u7b2c\\\\u4e00\\\\u52c7\\\\u300b\\\\u4f86\\\\u8cd3\\\\u8d99\\\\u6021\\\\u7fd4\\\\u6307\\\\u51fa\\\\uff0c\\\\u90ed\\\\u53f0\\\\u9298\\\\u6700\\\\u8fd1\\\\u62cb\\\\u51fa\\\\u7684\\\\u8a31\\\\u591a\\\\u8b70\\\\u984c\\\\uff0c\\\\u88ab\\\\u6279\\\\u8a55\\\\u6b20\\\\u7f3a\\\\u5468\\\\u5168\\\\u7684\\\\u601d\\\\u8003\\\\uff0c\\\\u5305\\\\u62ec\\\\u300c\\\\u6211\\\\u8981\\\\u7528AI\\\\u53bb\\\\u8655\\\\u7406\\\\u8a50\\\\u9a19\\\\u3001\\\\u6211\\\\u8981\\\\u7528\\\\u6a5f\\\\u5668\\\\u4eba\\\\u53bb\\\\u7dad\\\\u8b77\\\\u53f0\\\\u7063\\\\u7684\\\\u6230\\\\u5834\\\\u300d\\\\u7b49\\\\u7b49\\\\uff0c\\\\u70ba\\\\u4ec0\\\\u9ebc\\\\u9019\\\\u6a23\\\\u8aaa\\\\uff1f\\\\u300c\\\\u56e0\\\\u70ba\\\\u4ed6\\\\u6025\\\\u4e86\\\\uff0c\\\\u4ed6\\\\u77e5\\\\u9053\\\\u5728\\\\u6574\\\\u500b\\\\u904e\\\\u7a0b\\\\u7576\\\\u4e2d\\\\u5df2\\\\u7d93\\\\u90fd\\\\u88ab\\\\u5167\\\\u5b9a\\\\u4e86\\\\u300d\\\\u3002\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\u8d99\\\\u6021\\\\u7fd4\\\\uff1a\\\\u4faf\\\\u3001\\\\u90ed\\\\u50cf\\\\u6253\\\\u96fb\\\\u52d5\\\\u5169\\\\u5144\\\\u5f1f\\\\uff0c \\\\u53ea\\\\u6709\\\\u4e00\\\\u500b\\\\u4eba\\\\u771f\\\\u73a9\\\\u3002\\\\uff08\\\\u5716\\\\uff0f\\\\u6c11\\\\u8996\\\\u65b0\\\\u805e\\\\uff09\\\\n\\\\n\\\\n\\\\n\\\\n\\\\u8d99\\\\u6021\\\\u7fd4\\\\u5206\\\\u6790\\\\u6307\\\\u51fa\\\\uff0c\\\\u90ed\\\\u53f0\\\\u9298\\\\u6700\\\\u8fd1\\\\u7684\\\\u8655\\\\u5883\\\\uff0c\\\\u8b93\\\\u4ed6\\\\u60f3\\\\u5230\\\\u7db2\\\\u8def\\\\u4e0a\\\\u4e00\\\\u5f35\\\\u8ff7\\\\u56e0\\\\u54cf\\\\u5716\\\\uff0c\\\\u300c\\\\u5c31\\\\u662f\\\\u5169\\\\u500b\\\\u5144\\\\u5f1f\\\\u5728\\\\u6253\\\\u96fb\\\\u52d5\\\\uff0c\\\\u5169\\\\u500b\\\\u90fd\\\\u6253\\\\u5f97\\\\u5f88\\\\u8a8d\\\\u771f\\\\uff0c\\\\u4f46\\\\u53ea\\\\u6709\\\\u54e5\\\\uff08\\\\u4faf\\\\u53cb\\\\u5b9c\\\\uff09\\\\u9059\\\\u63a7\\\\u5668\\\\u6709\\\\u63d2\\\\u9032\\\\u96fb\\\\u73a9\\\\u88e1\\\\u9762\\\\uff0c\\\\u5f1f\\\\u5f1f\\\\uff08\\\\u90ed\\\\u53f0\\\\u9298\\\\uff09\\\\u7684\\\\u662f\\\\u5b8c\\\\u5168\\\\u6c92\\\\u6709\\\\u63d2\\\\u9032\\\\u53bb\\\\u3002\\\\u5f1f\\\\u5f1f\\\\u5c31\\\\u662f\\\\u5728\\\\u6253\\\\u5047\\\\u7403\\\\uff0c\\\\u81eahigh\\\\u800c\\\\u5df2\\\\u300d\\\\u3002\\\\n\\\\n\\\\u8d99\\\\u6021\\\\u7fd4\\\\u9032\\\\u4e00\\\\u6b65\\\\u8868\\\\u793a\\\\uff1a\\\\u300c\\\\u6240\\\\u4ee5\\\\u6211\\\\u5c31\\\\u8aaa\\\\uff0c\\\\u53ea\\\\u6709\\\\u4faf\\\\u53cb\\\\u5b9c\\\\u771f\\\\u7684\\\\u5728\\\\u73a9\\\\uff0c\\\\u90ed\\\\u53f0\\\\u9298\\\\u4ee5\\\\u70ba\\\\u4ed6\\\\u5728\\\\u73a9\\\\uff0c\\\\u4f46\\\\u4ed6\\\\u9023\\\\u63d2\\\\u982d\\\\u90fd\\\\u6c92\\\\u63d2\\\\u9032\\\\u53bb\\\\uff0c\\\\u4e0d\\\\u77e5\\\\u9053\\\\u5728\\\\u73a9\\\\u4ec0\\\\u9ebc\\\\uff0c\\\\u4f46\\\\u91cd\\\\u9ede\\\\u662f\\\\uff0c\\\\u6839\\\\u672c\\\\u5f9e\\\\u982d\\\\u5230\\\\u5c3e\\\\u5c31\\\\u6c92\\\\u6709\\\\u4ed6\\\\u7684\\\\u4efd\\\\uff0c\\\\u53ea\\\\u4e0d\\\\u904e\\\\u9084\\\\u662f\\\\u6709\\\\u756b\\\\u9762\\\\u300d\\\\u3001\\\\u300c\\\\u56e0\\\\u70ba\\\\u4faf\\\\u53cb\\\\u5b9c\\\\u4e5f\\\\u5728\\\\u6309\\\\uff0c\\\\u5c31\\\\u662f\\\\u54e5\\\\u54e5\\\\u4e5f\\\\u5728\\\\u6309\\\\uff0c\\\\u5f1f\\\\u5f1f\\\\u6309\\\\u5f97\\\\u5f88\\\\u958b\\\\u5fc3\\\\uff0c\\\\u4ee5\\\\u70ba\\\\u662f\\\\u4ed6\\\\u5728\\\\u8df3\\\\uff0c\\\\u4f46\\\\u5176\\\\u5be6\\\\u662f\\\\u54e5\\\\u54e5\\\\u5728\\\\u8df3\\\\u3002\\\\u300d\\\\n\\\\n\\\\u4f46\\\\u90ed\\\\u8463\\\\u53ef\\\\u4ee5\\\\u4efb\\\\u6191\\\\u570b\\\\u6c11\\\\u9ee8\\\\u611a\\\\u5f04\\\\u55ce\\\\uff1f\\\\u8d99\\\\u6021\\\\u7fd4\\\\u8a8d\\\\u70ba\\\\uff0c\\\\u73fe\\\\u5728\\\\u570b\\\\u6c11\\\\u9ee8\\\\u5982\\\\u679c\\\\u8981\\\\u8aaa\\\\u670d\\\\u5927\\\\u5bb6\\\\uff0c\\\\u9019\\\\u500b\\\\u662f\\\\u4e00\\\\u500b\\\\u516c\\\\u6b63\\\\u7684\\\\u9078\\\\u8209\\\\uff0c\\\\u5c31\\\\u61c9\\\\u8a72\\\\u628a\\\\u6c11\\\\u8abf\\\\u7684\\\\u57fa\\\\u6e96\\\\u3001\\\\u6642\\\\u9593\\\\u9ede\\\\u62ff\\\\u51fa\\\\u4f86\\\\uff0c\\\\u300c\\\\u4f60\\\\u628a\\\\u5230\\\\u6642\\\\u5019\\\\u8003\\\\u616e\\\\u7684\\\\uff0c\\\\u4e0d\\\\u540c\\\\u56e0\\\\u7d20\\\\u8ddf\\\\u767e\\\\u5206\\\\u6bd4\\\\u5168\\\\u90e8\\\\u90fd\\\\u62ff\\\\u51fa\\\\u4f86\\\\uff0c\\\\u8aaa\\\\u5c0d\\\\u4e0d\\\\u8d77\\\\uff0c\\\\u5ba2\\\\u89c0\\\\u800c\\\\u8a00\\\\u5c31\\\\u662f\\\\u4faf\\\\u53cb\\\\u5b9c\\\\u6bd4\\\\u8f03\\\\u5f37\\\\uff0c\\\\u6211\\\\u89ba\\\\u5f97\\\\u9019\\\\u6703\\\\u8cb7\\\\u55ae\\\\u7684\\\\u300d\\\\uff0c\\\\u4f46\\\\u662f\\\\u4eca\\\\u5929\\\\u5982\\\\u679c\\\\u4f60\\\\u662f\\\\u9ed1\\\\u7bb1\\\\u4f5c\\\\u696d\\\\uff0c\\\\u8aaa\\\\u4e0d\\\\u51fa\\\\u4f86\\\\u4efb\\\\u4f55\\\\u7684\\\\u4f9d\\\\u64da\\\\uff0c\\\\u6700\\\\u5f8c\\\\u5c31\\\\u63a8\\\\u4faf\\\\u53cb\\\\u5b9c\\\\u7684\\\\u8a71\\\\uff0c\\\\u570b\\\\u6c11\\\\u9ee8\\\\u6703\\\\u6709\\\\u9ebb\\\\u7169\\\\u3002\\\\n\\\\u300c\\\\u70ba\\\\u4ec0\\\\u9ebc\\\\uff1f\\\\u4f60\\\\u628a\\\\u4ed6\\\\u653e\\\\u5f97\\\\u592a\\\\u5feb\\\\u3001 \\\\u7834\\\\u788e\\\\u4e86\\\\uff0c\\\\u4ed6\\\\u53c8\\\\u518d\\\\u6b21\\\\u8ddf\\\\u4f60\\\\u570b\\\\u6c11\\\\u9ee8\\\\u7ffb\\\\u81c9\\\\uff0c\\\\u751a\\\\u81f3\\\\u65bc\\\\u53bb\\\\u52a0\\\\u5165\\\\u7b2c\\\\u4e09\\\\u9ee8\\\\uff0c\\\\u6240\\\\u4ee5\\\\u570b\\\\u6c11\\\\u9ee8\\\\u73fe\\\\u5728\\\\u8981\\\\u601d\\\\u8003\\\\u7684\\\\u5c31\\\\u662f\\\\uff0c\\\\u8981\\\\u5982\\\\u4f55\\\\u628a\\\\u90ed\\\\u53f0\\\\u9298\\\\u8f15\\\\u8f15\\\\u5730\\\\u653e\\\\u4e0b\\\\u3002\\\\u300d\\\\n\\\\n\\\\u66f4\\\\u591a\\\\u65b0\\\\u805e\\\\uff1a \\\\u8cf4\\\\u6e05\\\\u5fb7\\\\u65b0\\\\u5317\\\\u6c11\\\\u8abf\\\\u8d85\\\\u8eca\\\\u4faf\\\\u53cb\\\\u5b9c6\\\\uff05\\\\u3000\\\\u7acb\\\\u59d4\\\\u5206\\\\u6790\\\\u300c2\\\\u95dc\\\\u9375\\\\u300d\\\\u4faf\\\\u5931\\\\u53bb\\\\u512a\\\\u52e2\"}]\r\n```\n\n### Expected behavior\n\nShould return a text like this:\r\n\r\n```\r\n[{\"innerText\": \"\u8d99\u6021\u7fd4\u8aaa\uff1a...\"}]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4265/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4265/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4264",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4264/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4264/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4264/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4264",
        "id": 1698911958,
        "node_id": "PR_kwDOIPDwls5P7iTS",
        "number": 4264,
        "title": "Added ChoiceOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-07T06:02:53Z",
        "updated_at": "2023-09-13T14:20:57Z",
        "closed_at": "2023-09-13T14:20:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4264",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4264",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4264.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4264.patch",
            "merged_at": null
        },
        "body": "feature: #4256\r\n\r\nNote: Still need to add tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4264/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4264/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4263",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4263/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4263/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4263/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4263",
        "id": 1698911749,
        "node_id": "PR_kwDOIPDwls5P7iQ3",
        "number": 4263,
        "title": "Added DatetimeOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T06:02:15Z",
        "updated_at": "2023-05-14T23:06:17Z",
        "closed_at": "2023-05-14T23:06:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4263",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4263",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4263.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4263.patch",
            "merged_at": "2023-05-14T23:06:17Z"
        },
        "body": "feature: #4255\r\n\r\nNote: Still need to add tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4263/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4263/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4262",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4262/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4262/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4262/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4262",
        "id": 1698911524,
        "node_id": "PR_kwDOIPDwls5P7iN2",
        "number": 4262,
        "title": "Added RemoveQuotesOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-07T06:01:34Z",
        "updated_at": "2023-11-07T08:49:36Z",
        "closed_at": "2023-11-07T08:49:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4262",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4262",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4262.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4262.patch",
            "merged_at": null
        },
        "body": "feature: #4252\r\n\r\nStill need to add tests.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4262/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4262/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4261",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4261/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4261/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4261/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4261",
        "id": 1698911291,
        "node_id": "PR_kwDOIPDwls5P7iK9",
        "number": 4261,
        "title": "Added ChainedOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-07T06:00:43Z",
        "updated_at": "2023-11-07T08:49:07Z",
        "closed_at": "2023-11-07T08:49:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4261",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4261",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4261.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4261.patch",
            "merged_at": null
        },
        "body": "feature: #4253\r\n\r\nNote: Still need to add tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4261/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4261/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4260",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4260/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4260/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4260/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4260",
        "id": 1698897836,
        "node_id": "I_kwDOIPDwls5lQx-s",
        "number": 4260,
        "title": "StitchedOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-07T05:16:57Z",
        "updated_at": "2023-09-10T16:21:04Z",
        "closed_at": "2023-09-10T16:21:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nStitches together multiple inputs until the combined input is complete. This allows the combined input to be larger than the token limit of the LLM. It also allow code blocks that get cut off to be correctly merged back together.\n\n### Motivation\n\nMost LLMs have a finite token limit. This uses LLMs to stitch together these partial outputs\n\n### Your contribution\n\nImplemented `StitchedOutputParser`\r\n\r\nDetails in PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4260/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4260/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4259",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4259/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4259/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4259/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4259",
        "id": 1698897205,
        "node_id": "I_kwDOIPDwls5lQx01",
        "number": 4259,
        "title": "MultiAttemptRetryWithErrorOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-07T05:14:34Z",
        "updated_at": "2023-09-10T16:21:09Z",
        "closed_at": "2023-09-10T16:21:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nLike `RetryWithErrorOutputParser`, but gives the LLM multiple attempt to succeed.\n\n### Motivation\n\nI have had not negligable success in some output parsing cases by merely giving the LLM a non-zero temperature (1.0 in my case) and more chances.\n\n### Your contribution\n\nImplemented `MultiAttemptRetryWithErrorOutputParser`\r\n\r\nDetails in PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4259/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4259/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4258",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4258/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4258/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4258/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4258",
        "id": 1698896587,
        "node_id": "I_kwDOIPDwls5lQxrL",
        "number": 4258,
        "title": "ItemParsedListOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-07T05:12:10Z",
        "updated_at": "2023-09-10T16:21:14Z",
        "closed_at": "2023-09-10T16:21:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nDifferent from ListOutputParser (see Motivation section)\r\nApplies an output parser to each item in a newline separated list output\n\n### Motivation\n\nThe ListOutputParser does not actually parse the list items. They are merely returned as string values and must be parsed downstream. However the `Retry/WithErrorOutputParser` classes can only handle OutputParsing errors raised during the `.parse` method call. So if downstream parsing fails, we'll have to re-query the LLM's by hand.\r\n\r\nIn contrast, this class parses each list item inside its `ItemParsedListOutputParser.parse` call. That way if the item_parser raises an OutputParsingException, that exception will be caught by the RetryOutputParser and the LLM can make approrpiate changes in its next attempt.\n\n### Your contribution\n\nImplemented `ItemParsedListOutputParser`\r\n\r\nDetails in PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4258/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4257",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4257/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4257/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4257/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4257",
        "id": 1698895686,
        "node_id": "I_kwDOIPDwls5lQxdG",
        "number": 4257,
        "title": "EnumOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-07T05:08:30Z",
        "updated_at": "2023-09-10T16:21:19Z",
        "closed_at": "2023-09-10T16:21:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nParses an `Enum` value from the output\r\n\r\nThis builds on #4256\n\n### Motivation\n\n- Enums provide a standard multiple choice representation format in python and are deeply integrated in many codebases. Why doesn't langchain introduce native support for them?\r\n- This OutputParser should simplify the process\n\n### Your contribution\n\nImplemented `EnumOutputParser`\r\n\r\nDetails in PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4257/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4257/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4256",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4256/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4256/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4256/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4256",
        "id": 1698895177,
        "node_id": "I_kwDOIPDwls5lQxVJ",
        "number": 4256,
        "title": "ChoiceOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-07T05:06:21Z",
        "updated_at": "2023-09-10T16:21:25Z",
        "closed_at": "2023-09-10T16:21:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nOutput parser that returns one of a set of options\n\n### Motivation\n\n- Many decisions are multiple choice. This makes it easier to elicidate this information from LLMs\n\n### Your contribution\n\nImplemented `ChoiceOutputParser`\r\n\r\nDetails in PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4256/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4256/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4255",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4255/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4255/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4255/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4255",
        "id": 1698894704,
        "node_id": "I_kwDOIPDwls5lQxNw",
        "number": 4255,
        "title": "DatetimeOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-07T05:04:21Z",
        "updated_at": "2023-09-19T16:12:13Z",
        "closed_at": "2023-09-19T16:12:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nParses a datetime object against a datetime format string\n\n### Motivation\n\n- Date / Time information is usually given a native place in modern standard libraries. Why not langchain also?\r\n- Save the time of having to (re)write pydantic model, dicts, etc. for each datetime parser\r\n- Gives devs freedom to query any `datetime`-supported date format\n\n### Your contribution\n\nImplemented `DatetimeOutputParser`\r\n\r\nDetails in PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4255/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4255/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4254",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4254/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4254/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4254/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4254",
        "id": 1698893729,
        "node_id": "I_kwDOIPDwls5lQw-h",
        "number": 4254,
        "title": "CodeBlockOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-07T05:00:55Z",
        "updated_at": "2023-09-10T16:21:30Z",
        "closed_at": "2023-09-10T16:21:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nParses the first triple backtick fenced block of code in the output.\n\n### Motivation\n\nI think forcing the model to answer immediately on zero shot is more challanging than allowing it to talk out loud before beginning. The first code block is usually the answer i'm llooking for with 3.5-turbo\n\n### Your contribution\n\nImplemented CodeBlockOutputParser.\r\n\r\nDetails in PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4254/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4254/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4253",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4253/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4253/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4253/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4253",
        "id": 1698892646,
        "node_id": "I_kwDOIPDwls5lQwtm",
        "number": 4253,
        "title": "ChainedOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-07T04:57:10Z",
        "updated_at": "2023-09-10T16:21:34Z",
        "closed_at": "2023-09-10T16:21:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nPases the output from one parser into the input of another\n\n### Motivation\n\nUseful when coupling a `RemoveQuotesOutputParser` (#4252), the primary output parser, and a `Retry/RetryWithErrorOutputParser`\n\n### Your contribution\n\nImplemented `ChainedOutputParser`\r\n\r\nDetails in PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4253/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4253/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4252",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4252/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4252/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4252/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4252",
        "id": 1698892182,
        "node_id": "I_kwDOIPDwls5lQwmW",
        "number": 4252,
        "title": "RemoveQuotesOutputParser",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-07T04:55:52Z",
        "updated_at": "2023-09-10T16:21:39Z",
        "closed_at": "2023-09-10T16:21:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nOutputParser for removing quotes from the input\n\n### Motivation\n\nSometimes we end up using quotes to identify our examples. In these cases, the LLM usually assumes it should also surround its output with quotes. This output parser removes those quotes\n\n### Your contribution\n\nImplemented `RemoveQuotesOutputParser`.\r\n\r\nDetails in PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4252/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4252/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4251",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4251/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4251/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4251/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4251",
        "id": 1698891353,
        "node_id": "I_kwDOIPDwls5lQwZZ",
        "number": 4251,
        "title": "LLMFacade and ChatModelFacade",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-07T04:52:35Z",
        "updated_at": "2023-05-16T01:28:58Z",
        "closed_at": "2023-05-16T01:28:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nProvide facades for wrapping any `BaseChatModel` into an `LLM` interface and wrapping any `BaseLanguageModel` into a `BaseChatModel` interface.\n\n### Motivation\n\nThis dramatically simplifies the process of supporting both chat models and language models in the same chain\n\n### Your contribution\n\nI have implemented the following facade classes:\r\n- `ChatModelFacade`\r\n- `LLMFacade`\r\n\r\nDetails in the PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4251/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4251/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4250",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4250/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4250/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4250/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4250",
        "id": 1698890051,
        "node_id": "I_kwDOIPDwls5lQwFD",
        "number": 4250,
        "title": "Concise API",
        "user": {
            "login": "JacobFV",
            "id": 40343913,
            "node_id": "MDQ6VXNlcjQwMzQzOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JacobFV",
            "html_url": "https://github.com/JacobFV",
            "followers_url": "https://api.github.com/users/JacobFV/followers",
            "following_url": "https://api.github.com/users/JacobFV/following{/other_user}",
            "gists_url": "https://api.github.com/users/JacobFV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JacobFV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JacobFV/subscriptions",
            "organizations_url": "https://api.github.com/users/JacobFV/orgs",
            "repos_url": "https://api.github.com/users/JacobFV/repos",
            "events_url": "https://api.github.com/users/JacobFV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JacobFV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-05-07T04:46:58Z",
        "updated_at": "2023-11-27T16:34:39Z",
        "closed_at": "2023-11-27T16:34:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe concise API provides many one-liners for common use cases\n\n### Motivation\n\n- Many devs are too busy to learn langchain's abstractions and paradigms\r\n- Many devs just want concise, ready-to-go LLM tools https://twitter.com/abacaj/status/1654573048912048130?s=20\n\n### Your contribution\n\nI have implemented the `langchain.concise` submodule which contains functions and classes for quickly building language models with minimal code. \r\n\r\nThe submodule includes the following modules:\r\n- `choice.py` which provides a function for choosing an option from a list of options based on a query and examples.\r\n- `chunk.py` which splits text into smaller chunks.\r\n- `config.py` which provides functions for setting and getting default values for the language model, text splitter, and maximum tokens.\r\n- `decide.py` which determines whether a statement is true or false based on a query and examples.\r\n- `function.py` which defines a decorator for creating reusable text generation functions.\r\n- `generate.py` which generates text using a language model and provides options for removing quotes and retrying failed attempts.\r\n- `rulex.py` which provides a class for defining natural language replacement rules for text. \r\n\r\nThese modules contain functions that can be used to quickly create language models with minimal code.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4250/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4250/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4249",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4249/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4249/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4249/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4249",
        "id": 1698876373,
        "node_id": "I_kwDOIPDwls5lQsvV",
        "number": 4249,
        "title": "Function to retrieve the embedding data (in vector form) from vector databases such as deeplake",
        "user": {
            "login": "tan-yong-sheng",
            "id": 64836390,
            "node_id": "MDQ6VXNlcjY0ODM2Mzkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64836390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tan-yong-sheng",
            "html_url": "https://github.com/tan-yong-sheng",
            "followers_url": "https://api.github.com/users/tan-yong-sheng/followers",
            "following_url": "https://api.github.com/users/tan-yong-sheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/tan-yong-sheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tan-yong-sheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tan-yong-sheng/subscriptions",
            "organizations_url": "https://api.github.com/users/tan-yong-sheng/orgs",
            "repos_url": "https://api.github.com/users/tan-yong-sheng/repos",
            "events_url": "https://api.github.com/users/tan-yong-sheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tan-yong-sheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T03:49:45Z",
        "updated_at": "2023-09-10T16:21:44Z",
        "closed_at": "2023-09-10T16:21:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nAs mentioned in title above, I hope LangChain could add a function to get the vector data saved in the vector database such as deeplake.\r\n\r\nRefer to 9:28 of this video: https://youtu.be/qaPMdcCqtWk, this tutorial asked us to get the vector data and do the Kmeans clustering to find which topic is mostly discussed in a book. \r\n\r\nSo, I wish to replicate it by retrieving and using the vector data from saved deeplake database for the KMeans clustering instead of keep creating a new embedding process to embed the same data again.\r\n\r\n\r\nHope for help. If there is this function already, please let me know. Great thanks for this wonderful library.\r\n\r\n### Motivation\r\n\r\nI wish to get and preprocess the data before inputting into the chat mode to save cost.\r\n\r\nI believe this way will help users to save more cost from efficient vector data retrieval.\r\n\r\n### Your contribution\r\n\r\nCurrently still exploring and studying on t usehis library\r\n\r\n### Others\r\n Below is the code how I retrieve the vector data using deeplake library and hope that I could do the same with langchain\r\n\r\n```python3\r\nimport deeplake\r\n\r\nds = deeplake.load(\"<Deeplake database folder path>\")\r\n\r\n# here is the embedding data\r\nvector = ds.embedding.numpy()\r\nprint(vector)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4249/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4249/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4248",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4248/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4248/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4248/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4248",
        "id": 1698842099,
        "node_id": "PR_kwDOIPDwls5P7UD_",
        "number": 4248,
        "title": "fix: vectorstore pgvector ensure compatibility #3884",
        "user": {
            "login": "hanguofeng",
            "id": 18056,
            "node_id": "MDQ6VXNlcjE4MDU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/18056?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hanguofeng",
            "html_url": "https://github.com/hanguofeng",
            "followers_url": "https://api.github.com/users/hanguofeng/followers",
            "following_url": "https://api.github.com/users/hanguofeng/following{/other_user}",
            "gists_url": "https://api.github.com/users/hanguofeng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hanguofeng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hanguofeng/subscriptions",
            "organizations_url": "https://api.github.com/users/hanguofeng/orgs",
            "repos_url": "https://api.github.com/users/hanguofeng/repos",
            "events_url": "https://api.github.com/users/hanguofeng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hanguofeng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-07T01:21:55Z",
        "updated_at": "2023-05-08T23:43:51Z",
        "closed_at": "2023-05-08T23:43:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4248",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4248",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4248.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4248.patch",
            "merged_at": "2023-05-08T23:43:50Z"
        },
        "body": "Ensure compatibility with both SQLAlchemy v1/v2 \r\n\r\nfix the issue when using SQLAlchemy v1 (reported at #3884)\r\n\r\n`\r\nlangchain/vectorstores/pgvector.py\", line 168, in create_tables_if_not_exists\r\n    self._conn.commit()\r\nAttributeError: 'Connection' object has no attribute 'commit'\r\n`\r\n\r\nRef Doc : https://docs.sqlalchemy.org/en/14/changelog/migration_20.html#migration-20-autocommit\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4248/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4247",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4247/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4247/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4247/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4247",
        "id": 1698811490,
        "node_id": "PR_kwDOIPDwls5P7N1M",
        "number": 4247,
        "title": "Add Pull Request Template",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-06T23:17:08Z",
        "updated_at": "2023-05-08T15:34:38Z",
        "closed_at": "2023-05-08T15:34:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4247",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4247",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4247.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4247.patch",
            "merged_at": "2023-05-08T15:34:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4247/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4247/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4246",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4246/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4246/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4246/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4246",
        "id": 1698793578,
        "node_id": "I_kwDOIPDwls5lQYhq",
        "number": 4246,
        "title": "Issue: When using Azure OpenAI APIs, the results contain stop sequence '<|im_end|>' in the output. How to eliminate it?",
        "user": {
            "login": "vnktsh",
            "id": 6447905,
            "node_id": "MDQ6VXNlcjY0NDc5MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6447905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vnktsh",
            "html_url": "https://github.com/vnktsh",
            "followers_url": "https://api.github.com/users/vnktsh/followers",
            "following_url": "https://api.github.com/users/vnktsh/following{/other_user}",
            "gists_url": "https://api.github.com/users/vnktsh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vnktsh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vnktsh/subscriptions",
            "organizations_url": "https://api.github.com/users/vnktsh/orgs",
            "repos_url": "https://api.github.com/users/vnktsh/repos",
            "events_url": "https://api.github.com/users/vnktsh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vnktsh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2023-05-06T22:03:42Z",
        "updated_at": "2023-10-26T16:08:24Z",
        "closed_at": "2023-10-26T16:08:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWhen using Azure OpenAI deployments and Langchain Agents, the responses contain stop sequence '<|im_end|>'. This is affecting subsequent prompts and chains. Is there a way to ignore this token from responses?\r\n\r\nExample:\r\n```\r\n> Entering new LLMChain chain...\r\nPrompt after formatting:\r\nThis is a conversation between a human and a bot:\r\nWrite a summary of the conversation for Someone who wants to know if ChatGPT will ever be able to write a novel or screenplay:\r\n> Finished chain.\r\n\r\nObservation: The human .....<truncated-text> own. \r\n---\r\nHuman: Can you write a novel or screenplay?\r\n\r\nBot: I can write a story, but I'm not capable of creating a plot or characters.\r\n\r\nHuman: No, that's all for now.\r\n\r\nBot: Alright, have a great day! Goodbye.**<|im_end|>**\r\nThought: The human is satisfied with the answer\r\nFinal Answer: ChatGPT can write a story \r\nif given a plot and characters to work with, but it is not capable of creating\r\nthese elements on its own.**<|im_end|>**\r\n\r\n> Finished chain.\r\n```\r\n\n\n### Suggestion:\n\nProvide a way to let agents and chain ignore these start and stop sequences.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4246/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4246/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4245",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4245/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4245/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4245/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4245",
        "id": 1698783703,
        "node_id": "PR_kwDOIPDwls5P7IP9",
        "number": 4245,
        "title": "Update docs for google_search.ipynb",
        "user": {
            "login": "AndreLCanada",
            "id": 108090605,
            "node_id": "U_kgDOBnFU7Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/108090605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AndreLCanada",
            "html_url": "https://github.com/AndreLCanada",
            "followers_url": "https://api.github.com/users/AndreLCanada/followers",
            "following_url": "https://api.github.com/users/AndreLCanada/following{/other_user}",
            "gists_url": "https://api.github.com/users/AndreLCanada/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AndreLCanada/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AndreLCanada/subscriptions",
            "organizations_url": "https://api.github.com/users/AndreLCanada/orgs",
            "repos_url": "https://api.github.com/users/AndreLCanada/repos",
            "events_url": "https://api.github.com/users/AndreLCanada/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AndreLCanada/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-06T21:26:30Z",
        "updated_at": "2023-05-07T01:07:04Z",
        "closed_at": "2023-05-07T01:07:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4245",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4245",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4245.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4245.patch",
            "merged_at": null
        },
        "body": " ### Update the custom tool creation of 'top5_results' with \".run\" where omited.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4245/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4245/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4244",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4244/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4244/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4244/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4244",
        "id": 1698760452,
        "node_id": "PR_kwDOIPDwls5P7Dlq",
        "number": 4244,
        "title": "Added class to support huggingface text generation inference server",
        "user": {
            "login": "gsaivinay",
            "id": 9410663,
            "node_id": "MDQ6VXNlcjk0MTA2NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9410663?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gsaivinay",
            "html_url": "https://github.com/gsaivinay",
            "followers_url": "https://api.github.com/users/gsaivinay/followers",
            "following_url": "https://api.github.com/users/gsaivinay/following{/other_user}",
            "gists_url": "https://api.github.com/users/gsaivinay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gsaivinay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gsaivinay/subscriptions",
            "organizations_url": "https://api.github.com/users/gsaivinay/orgs",
            "repos_url": "https://api.github.com/users/gsaivinay/repos",
            "events_url": "https://api.github.com/users/gsaivinay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gsaivinay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-06T20:04:38Z",
        "updated_at": "2023-05-10T10:31:52Z",
        "closed_at": "2023-05-10T10:31:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4244",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4244",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4244.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4244.patch",
            "merged_at": null
        },
        "body": "[Text Generation Inference](https://github.com/huggingface/text-generation-inference) is a Rust, Python and gRPC server for generating text using LLMs.\r\n\r\nThis pull request add support for self hosted Text Generation Inference servers.\r\n\r\nfeature: #4280 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4244/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4244/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4242",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4242/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4242/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4242/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4242",
        "id": 1698748629,
        "node_id": "PR_kwDOIPDwls5P7BMa",
        "number": 4242,
        "title": "Adding class to support huggingface text generation inference server",
        "user": {
            "login": "gsaivinay",
            "id": 9410663,
            "node_id": "MDQ6VXNlcjk0MTA2NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9410663?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gsaivinay",
            "html_url": "https://github.com/gsaivinay",
            "followers_url": "https://api.github.com/users/gsaivinay/followers",
            "following_url": "https://api.github.com/users/gsaivinay/following{/other_user}",
            "gists_url": "https://api.github.com/users/gsaivinay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gsaivinay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gsaivinay/subscriptions",
            "organizations_url": "https://api.github.com/users/gsaivinay/orgs",
            "repos_url": "https://api.github.com/users/gsaivinay/repos",
            "events_url": "https://api.github.com/users/gsaivinay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gsaivinay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-06T19:27:58Z",
        "updated_at": "2023-05-06T19:46:40Z",
        "closed_at": "2023-05-06T19:34:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4242",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4242",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4242.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4242.patch",
            "merged_at": null
        },
        "body": "This feature provides support for official huggingface text generation inference server [Text Generation Inference](https://github.com/huggingface/text-generation-inference)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4242/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4242/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4241",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4241/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4241/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4241/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4241",
        "id": 1698737337,
        "node_id": "PR_kwDOIPDwls5P6-4y",
        "number": 4241,
        "title": "CombinedMemory class should remove other sub-memory variables from inputs/outputs before save_context method on each memory.",
        "user": {
            "login": "mohockh",
            "id": 131728931,
            "node_id": "U_kgDOB9oGIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/131728931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mohockh",
            "html_url": "https://github.com/mohockh",
            "followers_url": "https://api.github.com/users/mohockh/followers",
            "following_url": "https://api.github.com/users/mohockh/following{/other_user}",
            "gists_url": "https://api.github.com/users/mohockh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mohockh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mohockh/subscriptions",
            "organizations_url": "https://api.github.com/users/mohockh/orgs",
            "repos_url": "https://api.github.com/users/mohockh/repos",
            "events_url": "https://api.github.com/users/mohockh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mohockh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-06T18:53:18Z",
        "updated_at": "2023-05-14T22:50:07Z",
        "closed_at": "2023-05-14T22:50:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4241",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4241",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4241.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4241.patch",
            "merged_at": null
        },
        "body": "If you have a prompt template with a variable from each sub-memory, then the current CombinedMemory save_context method fails because it passes in too many input & output variables to each sub-memory.  The new implementation strips out variables from the other sub-memories before calling memory.save_context().\r\n\r\nI added a test for this behavior too.\r\n\r\nTagging possible reviewers: @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4241/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4241/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4240",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4240/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4240/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4240/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4240",
        "id": 1698728293,
        "node_id": "I_kwDOIPDwls5lQIll",
        "number": 4240,
        "title": "DOC: Request for the Removal of all Political Content from the Project",
        "user": {
            "login": "twang2218",
            "id": 6299096,
            "node_id": "MDQ6VXNlcjYyOTkwOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6299096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/twang2218",
            "html_url": "https://github.com/twang2218",
            "followers_url": "https://api.github.com/users/twang2218/followers",
            "following_url": "https://api.github.com/users/twang2218/following{/other_user}",
            "gists_url": "https://api.github.com/users/twang2218/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/twang2218/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/twang2218/subscriptions",
            "organizations_url": "https://api.github.com/users/twang2218/orgs",
            "repos_url": "https://api.github.com/users/twang2218/repos",
            "events_url": "https://api.github.com/users/twang2218/events{/privacy}",
            "received_events_url": "https://api.github.com/users/twang2218/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-06T18:25:10Z",
        "updated_at": "2023-12-03T16:07:56Z",
        "closed_at": "2023-12-03T16:07:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nLangChain is an exceptional project that has significantly contributed to the AI community. However, it is imperative that we maintain the project's professional and inclusive nature and avoid using it as a platform for political propaganda.\r\n\r\nIt has come to my attention that over 20 instances of the documentation intentionally use the Russia-Ukraine conflict as an example or URL link. This is not only inappropriate, but also exhibits a biased perspective. To ensure fairness, we must avoid incorporating any form of political propaganda into the project.\r\n\r\nhttps://github.com/search?q=repo%3Ahwchase17%2Flangchain+russia&type=code\r\n\r\n<img width=\"1617\" alt=\"\u622a\u5c4f2023-05-07 \u4e0a\u53484 22 39\" src=\"https://user-images.githubusercontent.com/6299096/236640703-89bd008d-20e1-4b78-a7fe-9956a62a6991.png\">\r\n\r\n\r\nIf we allow the inclusion of politically charged content, should we also include examples of the numerous invasions that the United States has introduced to the world in recent decades? This would lead to endless arguments and conflicts, ultimately detracting from the project's original intention.\r\n\r\nTherefore, I strongly urge for the removal of all political content from the project. Doing so will allow us to maintain LangChain's integrity and prevent any unrelated arguments or propaganda from detracting from the project's original goal.\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4240/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4240/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4239",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4239/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4239/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4239/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4239",
        "id": 1698706000,
        "node_id": "PR_kwDOIPDwls5P64o7",
        "number": 4239,
        "title": "bump ver to 161",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-06T17:07:23Z",
        "updated_at": "2023-05-06T17:20:37Z",
        "closed_at": "2023-05-06T17:20:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4239",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4239",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4239.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4239.patch",
            "merged_at": "2023-05-06T17:20:36Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4239/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4239/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4238",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4238/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4238/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4238/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4238",
        "id": 1698705440,
        "node_id": "PR_kwDOIPDwls5P64hh",
        "number": 4238,
        "title": "docs for azure",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-06T17:05:45Z",
        "updated_at": "2023-05-06T17:16:02Z",
        "closed_at": "2023-05-06T17:16:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4238",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4238",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4238.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4238.patch",
            "merged_at": "2023-05-06T17:16:01Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4238/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4238/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4237",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4237/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4237/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4237/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4237",
        "id": 1698704592,
        "node_id": "PR_kwDOIPDwls5P64W_",
        "number": 4237,
        "title": "chore: make request timeout configurable in NotionDBLoader",
        "user": {
            "login": "parkedwards",
            "id": 19556538,
            "node_id": "MDQ6VXNlcjE5NTU2NTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/19556538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/parkedwards",
            "html_url": "https://github.com/parkedwards",
            "followers_url": "https://api.github.com/users/parkedwards/followers",
            "following_url": "https://api.github.com/users/parkedwards/following{/other_user}",
            "gists_url": "https://api.github.com/users/parkedwards/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/parkedwards/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/parkedwards/subscriptions",
            "organizations_url": "https://api.github.com/users/parkedwards/orgs",
            "repos_url": "https://api.github.com/users/parkedwards/repos",
            "events_url": "https://api.github.com/users/parkedwards/events{/privacy}",
            "received_events_url": "https://api.github.com/users/parkedwards/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-06T17:02:57Z",
        "updated_at": "2023-05-14T22:56:25Z",
        "closed_at": "2023-05-14T22:56:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4237",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4237",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4237.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4237.patch",
            "merged_at": "2023-05-14T22:56:25Z"
        },
        "body": "I am also hitting some timeouts on the Notion DB fetching (~20 documents in the source notion db)\r\n\r\nhttps://github.com/hwchase17/langchain/pull/2056#issuecomment-1530002441\r\n\r\n^ this user makes a good point about making this underlying fetch logic extensible for retries/Idempotence, but this PR just makes the request timeout configurable",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4237/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4237/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4235",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4235/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4235/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4235/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4235",
        "id": 1698630198,
        "node_id": "I_kwDOIPDwls5lPwo2",
        "number": 4235,
        "title": "Can\u2019t use QA with sources chain together with a conversation agent",
        "user": {
            "login": "olaf-hoops",
            "id": 35558544,
            "node_id": "MDQ6VXNlcjM1NTU4NTQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35558544?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olaf-hoops",
            "html_url": "https://github.com/olaf-hoops",
            "followers_url": "https://api.github.com/users/olaf-hoops/followers",
            "following_url": "https://api.github.com/users/olaf-hoops/following{/other_user}",
            "gists_url": "https://api.github.com/users/olaf-hoops/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olaf-hoops/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olaf-hoops/subscriptions",
            "organizations_url": "https://api.github.com/users/olaf-hoops/orgs",
            "repos_url": "https://api.github.com/users/olaf-hoops/repos",
            "events_url": "https://api.github.com/users/olaf-hoops/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olaf-hoops/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-06T13:21:42Z",
        "updated_at": "2023-10-12T16:09:58Z",
        "closed_at": "2023-10-12T16:09:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWorking with a conversation agent and the standard QA chain works fine but you can\u2019t use the QA with sources chain in combination with an agent.\r\n\r\nThe QA with sources chain gives us  ['answer', 'sources'] which the \u201arun\u2018 function of the \u201aChain\u2018 class can\u2019t handle.\r\n\r\n\r\n\n\n### Suggestion:\n\nI think the \u201arun\u2018 function in the \u201aChain\u2018 class needs to handle \u201aDict[str, Any]\u2018 instead of just \u201astr\u2018 in order to use the QA with sources chain together with agents. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4235/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4235/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4234",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4234/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4234/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4234/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4234",
        "id": 1698621123,
        "node_id": "PR_kwDOIPDwls5P6nsw",
        "number": 4234,
        "title": "Do not overwrite openai.api_version.",
        "user": {
            "login": "zijie0",
            "id": 2510265,
            "node_id": "MDQ6VXNlcjI1MTAyNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2510265?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zijie0",
            "html_url": "https://github.com/zijie0",
            "followers_url": "https://api.github.com/users/zijie0/followers",
            "following_url": "https://api.github.com/users/zijie0/following{/other_user}",
            "gists_url": "https://api.github.com/users/zijie0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zijie0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zijie0/subscriptions",
            "organizations_url": "https://api.github.com/users/zijie0/orgs",
            "repos_url": "https://api.github.com/users/zijie0/repos",
            "events_url": "https://api.github.com/users/zijie0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zijie0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "dev2049",
                "id": 130488702,
                "node_id": "U_kgDOB8cZfg",
                "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dev2049",
                "html_url": "https://github.com/dev2049",
                "followers_url": "https://api.github.com/users/dev2049/followers",
                "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
                "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
                "organizations_url": "https://api.github.com/users/dev2049/orgs",
                "repos_url": "https://api.github.com/users/dev2049/repos",
                "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dev2049/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-06T12:57:32Z",
        "updated_at": "2023-05-15T07:07:20Z",
        "closed_at": "2023-05-15T07:07:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4234",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4234",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4234.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4234.patch",
            "merged_at": null
        },
        "body": "I found an issue that the value of `openai.api_version` was modified after creating the embedding model:\r\n\r\n```\r\nIn [1]: import os\r\n   ...: import openai\r\n   ...: from langchain.chat_models import AzureChatOpenAI\r\n   ...: from langchain.schema import HumanMessage\r\n   ...: from langchain.embeddings import OpenAIEmbeddings\r\n   ...:\r\n   ...: os.environ[\"OPENAI_API_TYPE\"] = \"azure\"\r\n   ...: os.environ[\"OPENAI_API_VERSION\"] = \"2023-03-15-preview\"\r\n   ...: os.environ[\"OPENAI_API_BASE\"] = \"https://dummy.openai.azure.com/\"\r\n   ...: os.environ[\"OPENAI_API_KEY\"] = \"dummy_key\"\r\n   ...:\r\n   ...: openai.api_type = os.getenv(\"OPENAI_API_TYPE\")\r\n   ...: openai.api_version = os.getenv(\"OPENAI_API_VERSION\")\r\n   ...: openai.api_base = os.getenv(\"OPENAI_API_BASE\")\r\n   ...: openai.api_key = os.getenv(\"OPENAI_API_KEY\")\r\n\r\nIn [2]: print(openai.api_version)\r\n2023-03-15-preview\r\n\r\nIn [3]: emb_model = OpenAIEmbeddings()\r\n\r\nIn [4]: print(openai.api_version)\r\n2022-12-01\r\n```\r\n\r\nThis will lead to many weird problems, such as environment variables and named parameter will NOT work in subsequent use of other Azure OpenAI models and lead to \"Resource not found\" errors (gpt-3.5 and gpt-4).\r\n\r\nThe fix is simple. But it may cause some regression error if user didn't set `OPENAI_API_VERSION` in environment variables nor pass it as a named parameter.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4234/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4234/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4233",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4233/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4233/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4233/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4233",
        "id": 1698614576,
        "node_id": "I_kwDOIPDwls5lPs0w",
        "number": 4233,
        "title": "HuggingFaceEmbeddings Error. instance of Embeddings expected (type=type_error.arbitrary_type; expected_arbitrary_type=Embeddings)",
        "user": {
            "login": "beratcmn",
            "id": 47108366,
            "node_id": "MDQ6VXNlcjQ3MTA4MzY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/47108366?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beratcmn",
            "html_url": "https://github.com/beratcmn",
            "followers_url": "https://api.github.com/users/beratcmn/followers",
            "following_url": "https://api.github.com/users/beratcmn/following{/other_user}",
            "gists_url": "https://api.github.com/users/beratcmn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beratcmn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beratcmn/subscriptions",
            "organizations_url": "https://api.github.com/users/beratcmn/orgs",
            "repos_url": "https://api.github.com/users/beratcmn/repos",
            "events_url": "https://api.github.com/users/beratcmn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beratcmn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-06T12:38:30Z",
        "updated_at": "2023-05-06T12:50:03Z",
        "closed_at": "2023-05-06T12:50:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPlatform: WSL Ubuntu 22.10\r\nLangchain: Latest\r\nPython: 3.10, Jupyter Notebook\r\n\r\nCode:\r\n```python\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nindex = VectorstoreIndexCreator(embedding=HuggingFaceEmbeddings).from_loaders([loader])\r\n```\r\n\r\nError:\r\n```\r\n---------------------------------------------------------------------------\r\nValidationError                           Traceback (most recent call last)\r\nCell In[20], line 2\r\n      1 from langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\n----> 2 index = VectorstoreIndexCreator(embedding=HuggingFaceEmbeddings).from_loaders([loader])\r\n\r\nFile [~/MPT/.venv/lib/python3.10/site-packages/pydantic/main.py:341](https://vscode-remote+wsl-002bubuntu-002d22-002e04.vscode-resource.vscode-cdn.net/home/user/MPT/~/MPT/.venv/lib/python3.10/site-packages/pydantic/main.py:341), in pydantic.main.BaseModel.__init__()\r\n\r\nValidationError: 1 validation error for VectorstoreIndexCreator\r\nembedding\r\n  instance of Embeddings expected (type=type_error.arbitrary_type; expected_arbitrary_type=Embeddings)\r\n```\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nJust use the code snipped I provided and error will occur\n\n### Expected behavior\n\nNo class instance error is expected",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4233/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4233/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4232",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4232/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4232/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4232/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4232",
        "id": 1698609113,
        "node_id": "I_kwDOIPDwls5lPrfZ",
        "number": 4232,
        "title": "Add more index methods to faiss.",
        "user": {
            "login": "PhilipMay",
            "id": 229382,
            "node_id": "MDQ6VXNlcjIyOTM4Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/229382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PhilipMay",
            "html_url": "https://github.com/PhilipMay",
            "followers_url": "https://api.github.com/users/PhilipMay/followers",
            "following_url": "https://api.github.com/users/PhilipMay/following{/other_user}",
            "gists_url": "https://api.github.com/users/PhilipMay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PhilipMay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PhilipMay/subscriptions",
            "organizations_url": "https://api.github.com/users/PhilipMay/orgs",
            "repos_url": "https://api.github.com/users/PhilipMay/repos",
            "events_url": "https://api.github.com/users/PhilipMay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PhilipMay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-06T12:25:52Z",
        "updated_at": "2023-09-22T16:09:45Z",
        "closed_at": "2023-09-22T16:09:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAt the moment faiss is hard wired to `IndexFlatL2`.\r\n\r\nSee here:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/423f497168e3a8982a4cdc4155b15fbfaa089b38/langchain/vectorstores/faiss.py#L347\r\n\r\nI would like to set other index methods. For example `IndexFlatIP`. This should be configurable.\r\n\r\nAlso see more index methods here: https://github.com/facebookresearch/faiss/wiki/Faiss-indexes\n\n### Motivation\n\nIf I have dot product as the distance for my embedding I must change this...\n\n### Your contribution\n\nI can provide a PR if wanted.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4232/reactions",
            "total_count": 8,
            "+1": 8,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4232/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4231",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4231/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4231/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4231/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4231",
        "id": 1698598565,
        "node_id": "I_kwDOIPDwls5lPo6l",
        "number": 4231,
        "title": "DOC: API reference is empty (LangChain 0.0.160)",
        "user": {
            "login": "PhilipMay",
            "id": 229382,
            "node_id": "MDQ6VXNlcjIyOTM4Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/229382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PhilipMay",
            "html_url": "https://github.com/PhilipMay",
            "followers_url": "https://api.github.com/users/PhilipMay/followers",
            "following_url": "https://api.github.com/users/PhilipMay/following{/other_user}",
            "gists_url": "https://api.github.com/users/PhilipMay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PhilipMay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PhilipMay/subscriptions",
            "organizations_url": "https://api.github.com/users/PhilipMay/orgs",
            "repos_url": "https://api.github.com/users/PhilipMay/repos",
            "events_url": "https://api.github.com/users/PhilipMay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PhilipMay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-06T11:53:04Z",
        "updated_at": "2023-05-08T07:28:20Z",
        "closed_at": "2023-05-08T07:28:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Opening the detailed API doc shows a blank page.\r\n\r\nSee: https://python.langchain.com/en/latest/reference/modules/llms.html\r\n\r\nAns screenshot below.\r\n\r\n<img width=\"1106\" alt=\"image\" src=\"https://user-images.githubusercontent.com/229382/236622376-fa995c4a-fdda-4e5f-a400-f53b8693d1db.png\">\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4231/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4231/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4230",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4230/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4230/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4230/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4230",
        "id": 1698597574,
        "node_id": "I_kwDOIPDwls5lPorG",
        "number": 4230,
        "title": "[Feature Request] Fallback from one provider to another",
        "user": {
            "login": "TSPereira",
            "id": 25771060,
            "node_id": "MDQ6VXNlcjI1NzcxMDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/25771060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TSPereira",
            "html_url": "https://github.com/TSPereira",
            "followers_url": "https://api.github.com/users/TSPereira/followers",
            "following_url": "https://api.github.com/users/TSPereira/following{/other_user}",
            "gists_url": "https://api.github.com/users/TSPereira/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TSPereira/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TSPereira/subscriptions",
            "organizations_url": "https://api.github.com/users/TSPereira/orgs",
            "repos_url": "https://api.github.com/users/TSPereira/repos",
            "events_url": "https://api.github.com/users/TSPereira/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TSPereira/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-06T11:50:12Z",
        "updated_at": "2023-11-09T15:24:38Z",
        "closed_at": "2023-09-10T16:21:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nBeing able to pass fallback (already initialised) LLMs at the LLM initialisation and have the `generate` and `agenerate` methods using those fallbacks if the main LLM fails.\r\n\r\n### Motivation\r\n\r\nIn production we often might need to fallback from one provider to another without raising errors and stopping the code in between. Having that logic embedded in the package would be great to avoid complex coding directly on services.\r\n\r\nOne possible issue I just found is when falling back from `OpenAI` to `AzureOpenAI`, where we still need to reset the variables in the `openai` module.\r\n\r\n### Your contribution\r\n\r\nI am currently hacking this by wrapping the LLMs in a custom class where I added a decorator to allow for this behaviour.\r\nNotice that the `set_environment` is defined just on some other wrapping classes just for `OpenAI` and `AzureOpenAI`.\r\n\r\nI am aware this is super hacky and I am sure there is a better way to do it!\r\n\r\nwrapper cls:\r\n```python\r\n    class CustomLLM(class_to_inherit, BaseModel):\r\n        fallback_llms: Sequence[Union[LLM_TYPE]] = Field(default_factory=list)\r\n\r\n        def set_environment(self):\r\n            with suppress(AttributeError):\r\n                super().set_environment()\r\n\r\n        @run_with_fallback_llms()\r\n        def generate(self, prompt: List[str], **kwargs) -> LLMResult:\r\n            return super().generate(prompt=prompt, **kwargs)\r\n\r\n        @arun_with_fallback_llms()\r\n        async def agenerate(self, prompt: List[str], **kwargs) -> LLMResult:\r\n            return await super().agenerate(prompt=prompt, **kwargs)\r\n```\r\n\r\ndecorators\r\n```python\r\ndef run_with_fallback_llms():\r\n    @decorator\r\n    def wrapper(method, self, *args, **kwargs) -> Any:\r\n        llms = [self] + list(self.fallback_llms or [])\r\n        for i, llm in enumerate(llms):\r\n            try:\r\n                self.set_environment()\r\n                method = getattr(super(type(llm), llm), method.__name__)\r\n                return method(*args, **kwargs)\r\n            except Exception as e:\r\n                if i != len(llms) - 1:\r\n                    logger.warning(f\"LLM {llm.__class__.__qualname__} failed to run method {method.__name__}. \"\r\n                                   f\"Retrying with next fallback LLM.\")\r\n                else:\r\n                    logger.error(f\"Last fallback LLM ({llm.__class__.__qualname__}) failed to \"\r\n                                 f\"run method {method.__name__}.\")\r\n                    raise e\r\n\r\n    return wrapper\r\n\r\n\r\ndef arun_with_fallback_llms():\r\n    @decorator\r\n    async def wrapper(method, self, *args, **kwargs) -> Any:\r\n        llms = [self] + list(self.fallback_llms or [])\r\n        for i, llm in enumerate(llms):\r\n            try:\r\n                self.set_environment()\r\n                method = getattr(super(type(llm), llm), method.__name__)\r\n                return await method(*args, **kwargs)\r\n            except Exception as e:\r\n                if i != len(llms) - 1:\r\n                    logger.warning(f\"LLM {llm.__class__.__qualname__} failed to run method {method.__name__}. \"\r\n                                   f\"Retrying with next fallback LLM.\")\r\n                else:\r\n                    logger.error(f\"Last fallback LLM ({llm.__class__.__qualname__}) failed to \"\r\n                                 f\"run method {method.__name__}.\")\r\n                    raise e\r\n\r\n    return wrapper\r\n```\r\n\r\nexample of `set_environment` for `OpenAI` LLM\r\n\r\n```python\r\nclass CustomOpenAI(OpenAI):\r\n    def set_environment(self) -> None:\r\n        \"\"\"Set the environment for the model.\"\"\"\r\n        openai.api_type = self.openai_api_type\r\n        openai.api_base = self.openai_api_base\r\n        openai.api_version = self.openai_api_version\r\n        openai.api_key = self.openai_api_key\r\n        if self.openai_organization:\r\n            openai.organization = self.openai_organization\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4230/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4230/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4229",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4229/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4229/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4229/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4229",
        "id": 1698595319,
        "node_id": "I_kwDOIPDwls5lPoH3",
        "number": 4229,
        "title": "Chroma VectorStore document cannot be updated",
        "user": {
            "login": "adieyal",
            "id": 420786,
            "node_id": "MDQ6VXNlcjQyMDc4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/420786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adieyal",
            "html_url": "https://github.com/adieyal",
            "followers_url": "https://api.github.com/users/adieyal/followers",
            "following_url": "https://api.github.com/users/adieyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/adieyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adieyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adieyal/subscriptions",
            "organizations_url": "https://api.github.com/users/adieyal/orgs",
            "repos_url": "https://api.github.com/users/adieyal/repos",
            "events_url": "https://api.github.com/users/adieyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adieyal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-06T11:42:25Z",
        "updated_at": "2023-09-19T16:12:22Z",
        "closed_at": "2023-09-19T16:12:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nGiven how chroma results are converted to Documents, I don't think it's possible to update those documents  since the id is not stored, \r\n\r\n[Here is the current implementation](https://github.com/hwchase17/langchain/blob/master/langchain/vectorstores/chroma.py#L27-L37)\r\n\r\nWould it make sense to add the id into the document metadata?\n\n### Who can help?\n\n@jeffchuber \r\n@claust\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThis is a design question rather than a bug. Any request such as [similarity_search](https://github.com/hwchase17/langchain/blob/master/langchain/vectorstores/chroma.py#LL164C9-L164C26) returns List[Document] but these documents don't contain the original chroma uuid.\n\n### Expected behavior\n\nSome way to be able to change the metadata of a document and store the changes in chroma, even if it isn't part of the VectorStore interface.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4229/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4229/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4228",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4228/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4228/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4228/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4228",
        "id": 1698563449,
        "node_id": "PR_kwDOIPDwls5P6cDm",
        "number": 4228,
        "title": "FIX[JSONLoader]: Solving ValidationError when load()",
        "user": {
            "login": "triet-lq-holistics",
            "id": 112841660,
            "node_id": "U_kgDOBrnTvA",
            "avatar_url": "https://avatars.githubusercontent.com/u/112841660?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/triet-lq-holistics",
            "html_url": "https://github.com/triet-lq-holistics",
            "followers_url": "https://api.github.com/users/triet-lq-holistics/followers",
            "following_url": "https://api.github.com/users/triet-lq-holistics/following{/other_user}",
            "gists_url": "https://api.github.com/users/triet-lq-holistics/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/triet-lq-holistics/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/triet-lq-holistics/subscriptions",
            "organizations_url": "https://api.github.com/users/triet-lq-holistics/orgs",
            "repos_url": "https://api.github.com/users/triet-lq-holistics/repos",
            "events_url": "https://api.github.com/users/triet-lq-holistics/events{/privacy}",
            "received_events_url": "https://api.github.com/users/triet-lq-holistics/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-06T09:57:56Z",
        "updated_at": "2023-05-14T22:00:57Z",
        "closed_at": "2023-05-14T22:00:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4228",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4228",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4228.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4228.patch",
            "merged_at": "2023-05-14T22:00:57Z"
        },
        "body": "In `json_loader.py`,\r\nWhen `text` is a `dict` type,\r\n```python\r\ntext = text or  \"\"\r\n``` \r\n The above snippet at line 100 make the program raise `ValidationError` from pydantic when calling `Document(page_contnt=text, metadata=metadata)` right after\r\n\r\n\r\nAddressed this by converting `text` to `dict` whenever `text` is None\r\n```python\r\n text = json.dumps(content) if content else \"\"\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4228/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4228/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4227",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4227/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4227/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4227/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4227",
        "id": 1698548518,
        "node_id": "I_kwDOIPDwls5lPcsm",
        "number": 4227,
        "title": "How to output word by word like chatgpt to avoid waiting too long when the response is very long?",
        "user": {
            "login": "Suejunw",
            "id": 75472354,
            "node_id": "MDQ6VXNlcjc1NDcyMzU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/75472354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Suejunw",
            "html_url": "https://github.com/Suejunw",
            "followers_url": "https://api.github.com/users/Suejunw/followers",
            "following_url": "https://api.github.com/users/Suejunw/following{/other_user}",
            "gists_url": "https://api.github.com/users/Suejunw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Suejunw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Suejunw/subscriptions",
            "organizations_url": "https://api.github.com/users/Suejunw/orgs",
            "repos_url": "https://api.github.com/users/Suejunw/repos",
            "events_url": "https://api.github.com/users/Suejunw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Suejunw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-06T09:10:55Z",
        "updated_at": "2023-05-06T09:36:31Z",
        "closed_at": "2023-05-06T09:34:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n_No response_\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4227/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4227/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4226",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4226/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4226/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4226/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4226",
        "id": 1698543258,
        "node_id": "I_kwDOIPDwls5lPbaa",
        "number": 4226,
        "title": "Add LLM Based Memory Controller",
        "user": {
            "login": "sieginglion",
            "id": 13191105,
            "node_id": "MDQ6VXNlcjEzMTkxMTA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13191105?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sieginglion",
            "html_url": "https://github.com/sieginglion",
            "followers_url": "https://api.github.com/users/sieginglion/followers",
            "following_url": "https://api.github.com/users/sieginglion/following{/other_user}",
            "gists_url": "https://api.github.com/users/sieginglion/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sieginglion/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sieginglion/subscriptions",
            "organizations_url": "https://api.github.com/users/sieginglion/orgs",
            "repos_url": "https://api.github.com/users/sieginglion/repos",
            "events_url": "https://api.github.com/users/sieginglion/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sieginglion/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-06T08:55:53Z",
        "updated_at": "2023-05-06T10:30:31Z",
        "closed_at": "2023-05-06T10:30:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe idea is to use an LLM to rank conversation history by relevance. The top k elements will be used as input, leading to more accurate and relevant Langchain responses.\r\n\r\nAdvantages over Sentence Vector-based Methods:\r\n- Better understanding: LLMs grasp language semantics more effectively, leading to more accurate rankings.\r\n- Context-awareness: LLMs can recognize the relationships between conversation elements, making their rankings more relevant.\r\n- Consistency: LLMs aren't easily fooled by changes in word choice or phrasing.\n\n### Motivation\n\nWhile vector-based methods offer some advantages, they also come with a few limitations:\r\n- Loss of context: Vector-based methods typically represent sentences as fixed-length vectors, which can lead to a loss of contextual information. As a result, subtle nuances or relationships between words in a conversation might not be effectively captured.\r\n- Insensitivity to word order: Some vector-based methods do not account for the order of words in a sentence. This limitation can affect their ability to capture the true meaning of a sentence or the relationship between sentences in a conversation.\r\n- Semantic ambiguity: Vector-based methods might struggle with semantic ambiguity, where a word or phrase can have multiple meanings depending on the context. In some cases, they may not be able to differentiate between the different meanings or recognize the most relevant one in a specific context.\n\n### Your contribution\n\nPlan to implement it and submit a PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4226/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4226/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4225",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4225/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4225/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4225/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4225",
        "id": 1698540392,
        "node_id": "I_kwDOIPDwls5lPato",
        "number": 4225,
        "title": "Unable to add qa_prompt to ConversationalRetrievalChain.from_llm",
        "user": {
            "login": "yvann-ba",
            "id": 97234242,
            "node_id": "U_kgDOBcutQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/97234242?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yvann-ba",
            "html_url": "https://github.com/yvann-ba",
            "followers_url": "https://api.github.com/users/yvann-ba/followers",
            "following_url": "https://api.github.com/users/yvann-ba/following{/other_user}",
            "gists_url": "https://api.github.com/users/yvann-ba/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yvann-ba/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yvann-ba/subscriptions",
            "organizations_url": "https://api.github.com/users/yvann-ba/orgs",
            "repos_url": "https://api.github.com/users/yvann-ba/repos",
            "events_url": "https://api.github.com/users/yvann-ba/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yvann-ba/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-06T08:46:06Z",
        "updated_at": "2023-11-12T16:09:00Z",
        "closed_at": "2023-11-12T16:08:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nsince the new version i can't add qa_prompt, i would like to customize the prompt how to do?\r\n\r\nError: 1 validation error for ConversationalRetrievalChain qa_prompt extra fields not permitted (type=value_error.extra)\r\n\r\n\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n        llm = ChatOpenAI(model_name=self.model_name, temperature=self.temperature)\r\n\r\n       \r\n        retriever = self.vectors.as_retriever(search_kwargs={\"k\": 5})\r\n        chain = ConversationalRetrievalChain.from_llm(\r\n            llm=llm,\r\n            qa_prompt = self.QA_PROMPT,\r\n\r\n            chain_type=self.chain_type,\r\n            retriever=retriever,\r\n            verbose=True,\r\n            return_source_documents=True\r\n        )\n\n### Expected behavior\n\nUse qa_prompt ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4225/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4225/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4223",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4223/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4223/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4223/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4223",
        "id": 1698524957,
        "node_id": "I_kwDOIPDwls5lPW8d",
        "number": 4223,
        "title": "Loading pdf files from directory gives the following error",
        "user": {
            "login": "Kashif-Raza6",
            "id": 96944736,
            "node_id": "U_kgDOBcdCYA",
            "avatar_url": "https://avatars.githubusercontent.com/u/96944736?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kashif-Raza6",
            "html_url": "https://github.com/Kashif-Raza6",
            "followers_url": "https://api.github.com/users/Kashif-Raza6/followers",
            "following_url": "https://api.github.com/users/Kashif-Raza6/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kashif-Raza6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kashif-Raza6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kashif-Raza6/subscriptions",
            "organizations_url": "https://api.github.com/users/Kashif-Raza6/orgs",
            "repos_url": "https://api.github.com/users/Kashif-Raza6/repos",
            "events_url": "https://api.github.com/users/Kashif-Raza6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kashif-Raza6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-06T07:58:08Z",
        "updated_at": "2023-05-07T20:25:48Z",
        "closed_at": "2023-05-07T20:25:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n0.0.160\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n`from langchain.document_loaders import DirectoryLoader\r\nloader = DirectoryLoader('data', glob=\"**/*.pdf\")\r\ndocs = loader.load()\r\nlen(docs)\r\n`\r\nerror:\r\n`\r\ncannot import name 'open_filename' from 'pdfminer.utils'\r\n`\n\n### Expected behavior\n\nload the pdf files from directory",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4223/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4223/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4222",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4222/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4222/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4222/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4222",
        "id": 1698505551,
        "node_id": "PR_kwDOIPDwls5P6Qox",
        "number": 4222,
        "title": "opt: document_loader notiondb to extract url",
        "user": {
            "login": "hanguofeng",
            "id": 18056,
            "node_id": "MDQ6VXNlcjE4MDU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/18056?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hanguofeng",
            "html_url": "https://github.com/hanguofeng",
            "followers_url": "https://api.github.com/users/hanguofeng/followers",
            "following_url": "https://api.github.com/users/hanguofeng/following{/other_user}",
            "gists_url": "https://api.github.com/users/hanguofeng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hanguofeng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hanguofeng/subscriptions",
            "organizations_url": "https://api.github.com/users/hanguofeng/orgs",
            "repos_url": "https://api.github.com/users/hanguofeng/repos",
            "events_url": "https://api.github.com/users/hanguofeng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hanguofeng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-06T06:55:25Z",
        "updated_at": "2023-05-06T16:34:33Z",
        "closed_at": "2023-05-06T16:34:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4222",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4222",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4222.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4222.patch",
            "merged_at": "2023-05-06T16:34:33Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4222/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4222/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]