[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7459",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7459/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7459/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7459/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7459",
        "id": 1795972865,
        "node_id": "I_kwDOIPDwls5rDF8B",
        "number": 7459,
        "title": "Help using GraphQL tool ",
        "user": {
            "login": "orlandombaa",
            "id": 48104481,
            "node_id": "MDQ6VXNlcjQ4MTA0NDgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48104481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orlandombaa",
            "html_url": "https://github.com/orlandombaa",
            "followers_url": "https://api.github.com/users/orlandombaa/followers",
            "following_url": "https://api.github.com/users/orlandombaa/following{/other_user}",
            "gists_url": "https://api.github.com/users/orlandombaa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orlandombaa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orlandombaa/subscriptions",
            "organizations_url": "https://api.github.com/users/orlandombaa/orgs",
            "repos_url": "https://api.github.com/users/orlandombaa/repos",
            "events_url": "https://api.github.com/users/orlandombaa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orlandombaa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-10T05:22:54Z",
        "updated_at": "2023-10-16T16:05:45Z",
        "closed_at": "2023-10-16T16:05:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHello every one! \r\n\r\nIm triying to  use an LLM models to consult data from OpenTargetPlatform (theyive information about disaeses and its bond with some molecules etc). They have and endpoint which can be access using Graph QL.  OpenTargetPlatform have several query structures for different kind of data requests. In the following example I give to the model 3 different query structures: \r\n\r\n\r\n\r\n```python\r\nfrom langchain import OpenAI\r\nfrom langchain.agents import load_tools, initialize_agent, AgentType, Tool\r\nfrom langchain.utilities import GraphQLAPIWrapper\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.chains import LLMChain\r\n\r\n# 1.1) Promt Template (in case we need to make a prompt engineering)\r\nprompt = PromptTemplate(\r\ninput_variables=[\"query\"],\r\ntemplate=\"{query}\"\r\n)\r\n\r\n# 1.2) LLM Model , in this case a LLM modelo from OpenAI\r\nllm = OpenAI(openai_api_key=\"YOURKEY\",\r\n                    model_name=\"gpt-3.5-turbo\", temperature=0.85)\r\n\r\n# 1.3) Creation of the chain object (integrates the llm and the prompt template)\r\nllm_chain = LLMChain(llm=llm, prompt=prompt)\r\n\r\n\r\n# 2.1) We set up the LLM as a tool in order to answer general questions\r\nllm_tool = Tool(name='Language Model',\r\n                func=llm_chain.run,\r\n                description='use this tool for general purpose queries and logic')\r\n\r\n# 2.2) We set up the graphql tool\r\ngraph_tool = load_tools( # IMPORTANT: usamos load_tools porque ya es una herramienta interna de Langchaing\r\n    tool_names = [\"graphql\"],\r\n    graphql_endpoint=\"https://api.platform.opentargets.org/api/v4/graphql\",\r\n    llm=llm)\r\n\r\n# 2.3)  List of tools that the agent will take\r\ntools = [llm_tool, graph_tool[0]]\r\n\r\n\r\nagent = initialize_agent(\r\n    agent=\"zero-shot-react-description\", # Type of agent\r\n    tools=tools, # herramienta que le doy\r\n    llm=llm,\r\n    verbose=True,\r\n    max_iterations=3)\r\n\r\n# IMPORANT: The zero shot react agent has no memory, all the answers that it will give  are just for one question. It case you want to use a agent with memoory you have to use other type of agent such as Conversational React\r\n\r\ntype(agent)\r\n\r\n\r\nprefix = \"This questions are related to get medical information, specifically data from OpenTargetPlatform, \" \\\r\n         \"If the question is about the relation among a target and a diseases use the query TargetDiseases, \" \\\r\n         \"If the question is about the relation among diseases and targets then use the query DiseasesTargets, \" \\\r\n         \"If the question request evidence between a disease and targets then use the query targetDiseaseEvidence\"\r\n\r\n\r\ngraphql_fields = \"\"\"\r\n\r\nquery TargetDiseases {\r\n  target(ensemblId: \"target\") {\r\n    id\r\n    approvedSymbol\r\n    associatedDiseases  {\r\n      count\r\n      rows {\r\n        disease {\r\n          id\r\n          name\r\n        }\r\n        datasourceScores {\r\n          id\r\n          score\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nquery DiseasesTargets {\r\n  disease(efoId: \"disease\") {\r\n    id\r\n    name\r\n    associatedTargets {\r\n      count\r\n      rows {\r\n        target {\r\n          id\r\n          approvedSymbol\r\n        }\r\n        score\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nquery targetDiseaseEvidence {\r\n  disease(efoId: \"disease\") {\r\n    id\r\n    name\r\n    evidences(datasourceIds: [\"intogen\"], ensemblIds: [\"target\"]) {\r\n      count\r\n      rows {\r\n        disease {\r\n          id\r\n          name\r\n        }\r\n        diseaseFromSource\r\n        target {\r\n          id\r\n          approvedSymbol\r\n        }\r\n        mutatedSamples {\r\n          functionalConsequence {\r\n            id\r\n            label\r\n          }\r\n          numberSamplesTested\r\n          numberMutatedSamples\r\n        }\r\n        resourceScore\r\n        significantDriverMethods\r\n        cohortId\r\n        cohortShortName\r\n        cohortDescription\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\"\"\"\r\n\r\n\r\nsuffix = \"What are the targets of vorinostat?\"\r\n\r\n#answer= agent.run(prefix+ suffix + graphql_fields)\r\nanswer= agent.run(suffix + prefix+ graphql_fields)\r\n\r\nanswer\r\n\r\n\r\n```\r\n\r\n\r\nWhen I have 2  structures of  queries it works well. However, when I add the thid like in this examples different kinf of errors start to show. \r\n\r\nAny recomentation about this? shoul I separete the query structure? or the order of elements is wrong in my agent ? \r\n\r\nI would apreciate so much your help ! \r\n\r\nOrlando \r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7459/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7459/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7458",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7458/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7458/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7458/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7458",
        "id": 1795933159,
        "node_id": "I_kwDOIPDwls5rC8Pn",
        "number": 7458,
        "title": "Error occurs when `import langchain.agents`",
        "user": {
            "login": "liliYY",
            "id": 31960534,
            "node_id": "MDQ6VXNlcjMxOTYwNTM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/31960534?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liliYY",
            "html_url": "https://github.com/liliYY",
            "followers_url": "https://api.github.com/users/liliYY/followers",
            "following_url": "https://api.github.com/users/liliYY/following{/other_user}",
            "gists_url": "https://api.github.com/users/liliYY/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liliYY/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liliYY/subscriptions",
            "organizations_url": "https://api.github.com/users/liliYY/orgs",
            "repos_url": "https://api.github.com/users/liliYY/repos",
            "events_url": "https://api.github.com/users/liliYY/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liliYY/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-10T04:43:44Z",
        "updated_at": "2023-10-21T16:07:20Z",
        "closed_at": "2023-10-21T16:07:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi there,\r\nI am new to langchain and I encountered some problems when import `langchain.agents`.\r\n\r\nI run `main.py` as follows:\r\n\r\n```python\r\n# main.py\r\n# python main.py\r\nimport os\r\nos.environ[\"OPENAI_API_KEY\"]=\"my key\"\r\nimport langchain.agents\r\n```\r\n\r\nSome errors occur:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"F:\\LLM_publichousing\\me\\main.py\", line 6, in <module>\r\n    import langchain.agents\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\ly\\lib\\site-packages\\langchain\\__init__.py\", line 6, in <module>\r\n    from langchain.agents import MRKLChain, ReActChain, SelfAskWithSearchChain\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\ly\\lib\\site-packages\\langchain\\agents\\__init__.py\", line 2, in <module>\r\n    from langchain.agents.agent import (\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\ly\\lib\\site-packages\\langchain\\agents\\agent.py\", line 16, in <module>\r\n    from langchain.agents.tools import InvalidTool\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\ly\\lib\\site-packages\\langchain\\agents\\tools.py\", line 8, in <module>\r\n    from langchain.tools.base import BaseTool, Tool, tool\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\ly\\lib\\site-packages\\langchain\\tools\\__init__.py\", line 3, in <module>\r\n    from langchain.tools.arxiv.tool import ArxivQueryRun\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\ly\\lib\\site-packages\\langchain\\tools\\arxiv\\tool.py\", line 12, in <module>\r\n    from langchain.utilities.arxiv import ArxivAPIWrapper\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\ly\\lib\\site-packages\\langchain\\utilities\\__init__.py\", line 3, in <module>\r\n    from langchain.utilities.apify import ApifyWrapper\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\ly\\lib\\site-packages\\langchain\\utilities\\apify.py\", line 5, in <module>\r\n    from langchain.document_loaders import ApifyDatasetLoader\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\ly\\lib\\site-packages\\langchain\\document_loaders\\__init__.py\", line 54, in <module>\r\n    from langchain.document_loaders.github import GitHubIssuesLoader\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\ly\\lib\\site-packages\\langchain\\document_loaders\\github.py\", line 37, in <module>\r\n    class GitHubIssuesLoader(BaseGitHubLoader):\r\n  File \"pydantic\\main.py\", line 197, in pydantic.main.ModelMetaclass.__new__\r\n  File \"pydantic\\fields.py\", line 506, in pydantic.fields.ModelField.infer\r\n  File \"pydantic\\fields.py\", line 436, in pydantic.fields.ModelField.__init__\r\n  File \"pydantic\\fields.py\", line 552, in pydantic.fields.ModelField.prepare\r\n  File \"pydantic\\fields.py\", line 663, in pydantic.fields.ModelField._type_analysis\r\n  File \"pydantic\\fields.py\", line 808, in pydantic.fields.ModelField._create_sub_type\r\n  File \"pydantic\\fields.py\", line 436, in pydantic.fields.ModelField.__init__\r\n  File \"pydantic\\fields.py\", line 552, in pydantic.fields.ModelField.prepare\r\n  File \"pydantic\\fields.py\", line 668, in pydantic.fields.ModelField._type_analysis\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\ly\\lib\\typing.py\", line 852, in __subclasscheck__\r\n    return issubclass(cls, self.__origin__)\r\nTypeError: issubclass() arg 1 must be a class\r\n```\r\n\r\nThe langchain version is `0.0.228`\r\n\r\nMy system is Windows 10.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7458/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7458/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7457",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7457/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7457/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7457/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7457",
        "id": 1795907276,
        "node_id": "I_kwDOIPDwls5rC17M",
        "number": 7457,
        "title": "The single quote in Example Input of SQLDatabaseToolkit will mislead LLM",
        "user": {
            "login": "edwardzjl",
            "id": 7287580,
            "node_id": "MDQ6VXNlcjcyODc1ODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7287580?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edwardzjl",
            "html_url": "https://github.com/edwardzjl",
            "followers_url": "https://api.github.com/users/edwardzjl/followers",
            "following_url": "https://api.github.com/users/edwardzjl/following{/other_user}",
            "gists_url": "https://api.github.com/users/edwardzjl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edwardzjl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edwardzjl/subscriptions",
            "organizations_url": "https://api.github.com/users/edwardzjl/orgs",
            "repos_url": "https://api.github.com/users/edwardzjl/repos",
            "events_url": "https://api.github.com/users/edwardzjl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edwardzjl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2023-07-10T04:17:49Z",
        "updated_at": "2023-11-05T06:18:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain 0.0.228\r\npython 3.11.1\r\nLLM: self hosting llm using [text-generation-inference](https://github.com/huggingface/text-generation-inference)\r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nThere is a Sample Input in the description for `InfoSQLDatabaseTool` ([this line](https://github.com/hwchase17/langchain/blob/560c4dfc98287da1bc0cfc1caebbe86d1e66a94d/langchain/agents/agent_toolkits/sql/toolkit.py#L48C18-L48C18)), and the Sample Input quotes all table names in a pair of single quotes, which will mislead the llm to also quote Action Input in single quotes.\r\n\r\nAn example of the LLM behaviour:\r\n\r\n```console\r\n$ agent_executor.run(\"According to the titanic table, how many people survived?\")\r\n> Entering new  chain...\r\nAction: sql_db_list_tables\r\nAction Input:\r\nObservation: aix_role, aix_user, chat, client_info, dataset, dataset_version, oauth2_authorization, oauth2_authorization_consent, oauth2_registered_client, titanic, user_role\r\nThought:The titanic table seems relevant, I should query the schema for it.\r\nAction: sql_db_schema\r\nAction Input: 'titanic'\r\nObservation: Error: table_names {\"'titanic'\"} not found in database\r\nThought:I should list all the tables in the database first.\r\nAction: sql_db_list_tables\r\nAction Input:\r\nObservation: aix_role, aix_user, chat, client_info, dataset, dataset_version, oauth2_authorization, oauth2_authorization_consent, oauth2_registered_client, titanic, user_role\r\nThought:The titanic table is in the database, I should query the schema for it.\r\nAction: sql_db_schema\r\nAction Input: 'titanic'\r\nObservation: Error: table_names {\"'titanic'\"} not found in database\r\n```\r\n\r\nAnd this example is more clear (note the Action Input):\r\n\r\n```console\r\n$ agent_executor.run(\"When is the last dataset created?\")\r\n> Entering new  chain...\r\nAction: sql_db_list_tables\r\nAction Input:\r\nObservation: aix_role, aix_user, chat, client_info, dataset, dataset_version, oauth2_authorization, oauth2_authorization_consent, oauth2_registered_client, titanic, user_role\r\nThought:The 'dataset' and 'dataset_version' tables seem relevant. I should query the schema for these tables.\r\nAction: sql_db_schema\r\nAction Input: 'dataset, dataset_version'\r\nObservation: Error: table_names {\"dataset_version'\", \"'dataset\"} not found in database\r\n```\r\n\r\nAfter removing the quotes around the Example Input the SQL Agent works fine now.\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nThe Action Input of `InfoSQLDatabaseTool` should be a list of table names, not a quoted str.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7457/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7457/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7456",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7456/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7456/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7456/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7456",
        "id": 1795840468,
        "node_id": "PR_kwDOIPDwls5VCX7r",
        "number": 7456,
        "title": "change id column type to uuid to match function",
        "user": {
            "login": "j1philli",
            "id": 3744255,
            "node_id": "MDQ6VXNlcjM3NDQyNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3744255?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j1philli",
            "html_url": "https://github.com/j1philli",
            "followers_url": "https://api.github.com/users/j1philli/followers",
            "following_url": "https://api.github.com/users/j1philli/following{/other_user}",
            "gists_url": "https://api.github.com/users/j1philli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j1philli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j1philli/subscriptions",
            "organizations_url": "https://api.github.com/users/j1philli/orgs",
            "repos_url": "https://api.github.com/users/j1philli/repos",
            "events_url": "https://api.github.com/users/j1philli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j1philli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-10T03:07:44Z",
        "updated_at": "2023-08-11T00:19:30Z",
        "closed_at": "2023-08-10T23:57:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7456",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7456",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7456.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7456.patch",
            "merged_at": "2023-08-10T23:57:19Z"
        },
        "body": "The table creation process in these examples commands do not match what the recently updated functions in these example commands is looking for. This change updates the type in the table creation command.\r\nIssue Number for my report of the doc problem #7446\r\n@rlancemartin and @eyurtsev I believe this is your area\r\nTwitter: @j1philli\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7456/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7456/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7455",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7455/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7455/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7455/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7455",
        "id": 1795819951,
        "node_id": "I_kwDOIPDwls5rCgmv",
        "number": 7455,
        "title": "Getting ` NotImplementedError: PythonReplTool does not support async` when trying to use `arun` on CSV agent",
        "user": {
            "login": "eRuaro",
            "id": 69240261,
            "node_id": "MDQ6VXNlcjY5MjQwMjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/69240261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eRuaro",
            "html_url": "https://github.com/eRuaro",
            "followers_url": "https://api.github.com/users/eRuaro/followers",
            "following_url": "https://api.github.com/users/eRuaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/eRuaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eRuaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eRuaro/subscriptions",
            "organizations_url": "https://api.github.com/users/eRuaro/orgs",
            "repos_url": "https://api.github.com/users/eRuaro/repos",
            "events_url": "https://api.github.com/users/eRuaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eRuaro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-10T02:48:11Z",
        "updated_at": "2023-11-08T02:02:19Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.195\r\npython==3.9.17\r\nsystem-info==ubuntu \n\n### Who can help?\n\n@agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [X] Async\n\n### Reproduction\n\nCopy paste this code:\r\n```\r\nasync def csv_qa(question):\r\n  agent = create_csv_agent(OpenAI(temperature=0),\r\n                           'path_to_csv',\r\n                           verbose=True)\r\n\r\n  answer = await agent.arun(question)\r\n\r\n  return answer\r\n\r\nresponse = await csv_qa(\"question_about_csv\")\r\n```\n\n### Expected behavior\n\nWill return the same response as using `run`:\r\n```\r\ndef csv_qa(question):\r\n  agent = create_csv_agent(OpenAI(temperature=0),\r\n                           'path_to_csv',\r\n                           verbose=True)\r\n\r\n  answer = agent.run(question)\r\n\r\n  return answer\r\n\r\nresponse = csv_qa(\"question_about_csv\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7455/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7455/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7454",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7454/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7454/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7454/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7454",
        "id": 1795799133,
        "node_id": "PR_kwDOIPDwls5VCOwV",
        "number": 7454,
        "title": "Resolve: VectorSearch enabled SQLChain?",
        "user": {
            "login": "mpskex",
            "id": 8456706,
            "node_id": "MDQ6VXNlcjg0NTY3MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8456706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mpskex",
            "html_url": "https://github.com/mpskex",
            "followers_url": "https://api.github.com/users/mpskex/followers",
            "following_url": "https://api.github.com/users/mpskex/following{/other_user}",
            "gists_url": "https://api.github.com/users/mpskex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mpskex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mpskex/subscriptions",
            "organizations_url": "https://api.github.com/users/mpskex/orgs",
            "repos_url": "https://api.github.com/users/mpskex/repos",
            "events_url": "https://api.github.com/users/mpskex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mpskex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-07-10T02:30:46Z",
        "updated_at": "2023-09-04T10:54:02Z",
        "closed_at": "2023-09-04T10:49:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7454",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7454",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7454.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7454.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n\r\nHello from [MyScale](https://myscale.com/) AI team! \ud83d\ude0a\ud83d\udc4b\r\n\r\nWe have been working on features to fill up the gap among SQL, vector search and LLM applications. Some inspiring works like self-query retrievers for VectorStores (for example [Weaviate](https://python.langchain.com/en/latest/modules/indexes/retrievers/examples/weaviate_self_query.html) and [others](https://python.langchain.com/en/latest/modules/indexes/retrievers/examples/self_query.html)) really turn those vector search databases into a powerful knowledge base! \ud83d\ude80\ud83d\ude80\r\n\r\nWe are thinking if we can merge all in one, like SQL and vector search and LLMChains, making this SQL vector database memory as the only source of your data. Here are some benefits we can think of for now, maybe you have more \ud83d\udc40:\r\n\r\nWith ALL data you have: since you store all your pasta in the database, you don't need to worry about the foreign keys or links between names from other data source.\r\nFlexible data structure: Even if you have changed your schema, for example added a table, the LLM will know how to JOIN those tables and use those as filters.\r\nSQL compatibility: We found that vector databases that supports SQL in the marketplace have similar interfaces, which means you can change your backend with no pain, just change the name of the distance function in your DB solution and you are ready to go!\r\n\r\n### Issue resolved:\r\n- [Feature Proposal: VectorSearch enabled SQLChain?](https://github.com/hwchase17/langchain/issues/5122)\r\n\r\n### Change made in this PR:\r\n- An improved schema handling that ignore `types.NullType` columns \r\n- A SQL output Parser interface in `SQLDatabaseChain` to enable Vector SQL capability and further more\r\n- A Retriever based on `SQLDatabaseChain` to retrieve data from the database for RetrievalQAChains and many others\r\n- Allow `SQLDatabaseChain` to retrieve data in python native format\r\n- Includes PR #6737 \r\n- Vector SQL Output Parser for `SQLDatabaseChain` and `SQLDatabaseChainRetriever`\r\n- Prompts that can implement text to VectorSQL\r\n- Corresponding unit-tests and notebook\r\n\r\n### Twitter handle: \r\n- @MyScaleDB\r\n\r\n### Tag Maintainer:\r\nPrompts / General: @hwchase17, @baskaryan\r\nDataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n\r\n### Dependencies:\r\nNo dependency added",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7454/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7454/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7453",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7453/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7453/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7453/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7453",
        "id": 1795738835,
        "node_id": "PR_kwDOIPDwls5VCBKn",
        "number": 7453,
        "title": "Minor update to clarify map-reduce custom prompt usage",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-10T01:42:32Z",
        "updated_at": "2023-07-10T23:43:45Z",
        "closed_at": "2023-07-10T23:43:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7453",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7453",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7453.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7453.patch",
            "merged_at": "2023-07-10T23:43:44Z"
        },
        "body": "Update docs for map-reduce custom prompt usage",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7453/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7453/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7452",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7452/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7452/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7452/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7452",
        "id": 1795665180,
        "node_id": "I_kwDOIPDwls5rB60c",
        "number": 7452,
        "title": "'chunk_size' doesnt work on 'split_documents' function",
        "user": {
            "login": "david-dong828",
            "id": 106771290,
            "node_id": "U_kgDOBl0zWg",
            "avatar_url": "https://avatars.githubusercontent.com/u/106771290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david-dong828",
            "html_url": "https://github.com/david-dong828",
            "followers_url": "https://api.github.com/users/david-dong828/followers",
            "following_url": "https://api.github.com/users/david-dong828/following{/other_user}",
            "gists_url": "https://api.github.com/users/david-dong828/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david-dong828/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david-dong828/subscriptions",
            "organizations_url": "https://api.github.com/users/david-dong828/orgs",
            "repos_url": "https://api.github.com/users/david-dong828/repos",
            "events_url": "https://api.github.com/users/david-dong828/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david-dong828/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-10T00:33:09Z",
        "updated_at": "2023-07-13T00:41:21Z",
        "closed_at": "2023-07-13T00:41:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain: 0.0.208\r\nplatform: win 10\r\npython: 3.9.\r\n\r\nThe warning message is : \r\n'Created a chunk of size 374, which is longer than the specified 100'.\r\n\n\n### Who can help?\n\n@hwchase17  @eyurtsev\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n**Step1: run the code snippets below:**\r\n\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\n\r\ntext = '''\r\nGoogle opens up its AI language model PaLM to challenge OpenAI and GPT-3\r\nGoogle is offering developers access to one of its most advanced AI language models: PaLM.\r\nThe search giant is launching an API for PaLM alongside a number of AI enterprise tools\r\nit says will help businesses \u201cgenerate text, images, code, videos, audio, and more from\r\nsimple natural language prompts.\u201d\r\n\r\nPaLM is a large language model, or LLM, similar to the GPT series created by OpenAI or\r\nMeta\u2019s LLaMA family of models. Google first announced PaLM in April 2022. Like other LLMs,\r\nPaLM is a flexible system that can potentially carry out all sorts of text generation and\r\nediting tasks. You could train PaLM to be a conversational chatbot like ChatGPT, for\r\nexample, or you could use it for tasks like summarizing text or even writing code.\r\n(It\u2019s similar to features Google also announced today for its Workspace apps like Google\r\nDocs and Gmail.)'''\r\n\r\nwith open('test.txt','w') as f:\r\n    f.write(text)\r\n\r\n#\r\nloader = TextLoader('test.txt')\r\ndocs_from_file = loader.load()\r\nprint(docs_from_file)\r\n\r\ntext_splitter1 = CharacterTextSplitter(chunk_size=100,chunk_overlap=20)\r\ndocs = text_splitter1.split_documents(docs_from_file)\r\nprint(docs)\r\nprint(len(docs))\r\n\r\n\r\nStep 2: then it cannot split the text as expected \n\n### Expected behavior\n\nIt should split the doc as expected size as chunk_size.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7452/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7452/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7451",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7451/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7451/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7451/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7451",
        "id": 1795646919,
        "node_id": "I_kwDOIPDwls5rB2XH",
        "number": 7451,
        "title": "Issue: Unable to add a unit test for experimental modules",
        "user": {
            "login": "borisdev",
            "id": 367522,
            "node_id": "MDQ6VXNlcjM2NzUyMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/367522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/borisdev",
            "html_url": "https://github.com/borisdev",
            "followers_url": "https://api.github.com/users/borisdev/followers",
            "following_url": "https://api.github.com/users/borisdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/borisdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/borisdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/borisdev/subscriptions",
            "organizations_url": "https://api.github.com/users/borisdev/orgs",
            "repos_url": "https://api.github.com/users/borisdev/repos",
            "events_url": "https://api.github.com/users/borisdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/borisdev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-10T00:09:26Z",
        "updated_at": "2023-10-10T17:06:29Z",
        "closed_at": "2023-10-10T17:06:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Adding a unit test for any experimental module in the standard location, such as `tests/unit_tests/experimental/test_baby_agi.py`, leads to this failing unit test:\r\n\r\n```python\r\n../tests/unit_tests/output_parsers/test_base_output_parser.py ...................................F\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> traceback >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n    def test_all_subclasses_implement_unique_type() -> None:\r\n        types = defaultdict(list)\r\n        for cls in _NON_ABSTRACT_PARSERS:\r\n            try:\r\n                types[cls._type].append(cls.__name__)\r\n            except NotImplementedError:\r\n                # This is handled in the previous test\r\n                pass\r\n        dups = {t: names for t, names in types.items() if len(names) > 1}\r\n>       assert not dups, f\"Duplicate types: {dups}\"\r\nE       AssertionError: Duplicate types: {<property object at 0xffff9126e7f0>: ['EnumOutputParser', 'AutoGPTOutputParser', 'NoOutputParser', 'StructuredQueryOutputParser', 'PlanningOutputParser'], <property object at 0xffff7f331710>: ['PydanticOutputParser', 'LineListOutputParser']}\r\nE       assert not {<property object at 0xffff9126e7f0>: ['EnumOutputParser', 'AutoGPTOutputParser', 'NoOutputParser', 'StructuredQueryOu...arser', 'PlanningOutputParser'], <property object at 0xffff7f331710>: ['PydanticOutputParser', 'LineListOutputParser']}\r\n\r\n../tests/unit_tests/output_parsers/test_base_output_parser.py:55: AssertionError\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> entering PDB >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> PDB post_mortem >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n> /workspaces/tests/unit_tests/output_parsers/test_base_output_parser.py(55)test_all_subclasses_implement_unique_type()\r\n-> assert not dups, f\"Duplicate types: {dups}\"\r\n```\r\n\r\n[Repro is here](https://github.com/borisdev/langchain/pull/12) and [artifact here](https://github.com/borisdev/langchain/actions/runs/5502599425/jobs/10026958854?pr=12).\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7451/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7451/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7450",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7450/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7450/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7450/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7450",
        "id": 1795626027,
        "node_id": "I_kwDOIPDwls5rBxQr",
        "number": 7450,
        "title": "write_tool logic is off",
        "user": {
            "login": "wmbutler",
            "id": 1254810,
            "node_id": "MDQ6VXNlcjEyNTQ4MTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1254810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wmbutler",
            "html_url": "https://github.com/wmbutler",
            "followers_url": "https://api.github.com/users/wmbutler/followers",
            "following_url": "https://api.github.com/users/wmbutler/following{/other_user}",
            "gists_url": "https://api.github.com/users/wmbutler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wmbutler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wmbutler/subscriptions",
            "organizations_url": "https://api.github.com/users/wmbutler/orgs",
            "repos_url": "https://api.github.com/users/wmbutler/repos",
            "events_url": "https://api.github.com/users/wmbutler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wmbutler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T23:18:56Z",
        "updated_at": "2023-10-16T16:05:54Z",
        "closed_at": "2023-10-16T16:05:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlanchain: latest, python 3.10.10\r\n\r\nThis script writes the content to the file initially, but there is a flawed step when closing the file. I've extracted this log to show the issue.  For some reason, the agent thinks that if it submits an empty text input with append set to false, the previous contents will remain, but this is a false assumption. The agent should set `append:true` to ensure the file contents are preserved. The result is that the file is written with the contents and then the contents are deleted during this step.\r\n\r\nObservation: File written successfully to hello.txt.\r\nThought:Since the previous steps indicate that the haiku has already been written to the file \"hello.txt\", the next step is to close the file. To do that, I can use the `write_file` tool with an empty text input and the `append` parameter set to `false`. This will ensure that the file is closed without making any changes to its contents.\r\n\r\nAction:\r\n```\r\n{\r\n  \"action\": \"write_file\",\r\n  \"action_input\": {\r\n    \"file_path\": \"hello.txt\",\r\n    \"text\": \"\",\r\n    \"append\": false\r\n  }\r\n}\r\n```\r\nObservation: File written successfully to hello.txt.\r\nThought:The file \"hello.txt\" has been successfully closed.\r\n\r\n> Finished chain.\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\n\r\nCode:\r\n```\r\nfrom dotenv import find_dotenv, load_dotenv\r\nimport os\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.experimental.plan_and_execute import PlanAndExecute, load_agent_executor, load_chat_planner\r\nfrom langchain.agents.tools import Tool\r\nfrom helpers import project_root\r\nfrom langchain.agents.agent_toolkits import FileManagementToolkit\r\nfrom tempfile import TemporaryDirectory\r\n\r\nload_dotenv(find_dotenv())\r\n\r\nOPENAI_API_KEY = os.environ[\"OPENAI_API_KEY\"]\r\n\r\nmodel=ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo\")\r\n\r\ntools = FileManagementToolkit(\r\n    root_dir=str(project_root('scratch')), \r\n    selected_tools=[\"read_file\", \"write_file\", \"list_directory\"]).get_tools()\r\n\r\nread_tool, write_tool, list_tool = tools\r\n\r\nplanner = load_chat_planner(model)\r\n\r\nexecutor = load_agent_executor(model, tools, verbose=True)\r\n\r\nagent = PlanAndExecute(planner=planner, executor=executor, verbose=True)\r\n\r\nagent.run(\"Write a short haiku about the ocean and save it to file 'hello.txt'\")\r\n```\r\n\r\n\r\n\r\nOutput:\r\n\r\n> Entering new  chain...\r\nsteps=[Step(value='Create a string variable to store the haiku about the ocean.'), Step(value=\"Open a file named 'hello.txt' in write mode.\"), Step(value='Write the haiku to the file.'), Step(value='Close the file.'), Step(value=\"Given the above steps taken, respond to the user's original question.\\n\\n\")]\r\n\r\n> Entering new  chain...\r\nAction:\r\n```\r\n{\r\n  \"action\": \"Final Answer\",\r\n  \"action_input\": \"ocean_haiku = 'Waves crash on the shore\\nSeagulls soar in the blue sky\\nOcean's beauty shines'\"\r\n}\r\n```\r\n\r\n> Finished chain.\r\n*****\r\n\r\nStep: Create a string variable to store the haiku about the ocean.\r\n\r\nResponse: ocean_haiku = 'Waves crash on the shore\r\nSeagulls soar in the blue sky\r\nOcean's beauty shines'\r\n\r\n> Entering new  chain...\r\nAction:\r\n```\r\n{\r\n  \"action\": \"write_file\",\r\n  \"action_input\": {\r\n    \"file_path\": \"hello.txt\",\r\n    \"text\": \"\"\r\n  }\r\n}\r\n```\r\nObservation: File written successfully to hello.txt.\r\nThought:Since the file was successfully opened in write mode, I can now proceed to write the haiku about the ocean to the file.\r\nAction:\r\n```\r\n{\r\n  \"action\": \"write_file\",\r\n  \"action_input\": {\r\n    \"file_path\": \"hello.txt\",\r\n    \"text\": \"Waves crash on the shore\\nSeagulls soar in the blue sky\\nOcean's beauty shines\"\r\n  }\r\n}\r\n```\r\nObservation: File written successfully to hello.txt.\r\nThought:The haiku about the ocean has been successfully written to the file \"hello.txt\". I can now proceed to the next step.\r\n\r\n> Finished chain.\r\n*****\r\n\r\nStep: Open a file named 'hello.txt' in write mode.\r\n\r\nResponse: The haiku about the ocean has been successfully written to the file \"hello.txt\". I can now proceed to the next step.\r\n\r\n> Entering new  chain...\r\nAction:\r\n```\r\n{\r\n  \"action\": \"write_file\",\r\n  \"action_input\": {\r\n    \"file_path\": \"hello.txt\",\r\n    \"text\": \"Waves crash on the shore\\nSeagulls soar in the blue sky\\nOcean's beauty shines\",\r\n    \"append\": true\r\n  }\r\n}\r\n```\r\nObservation: File written successfully to hello.txt.\r\nThought:Since the haiku has already been written to the file \"hello.txt\", I can proceed to the next step.\r\n\r\n> Finished chain.\r\n*****\r\n\r\nStep: Write the haiku to the file.\r\n\r\nResponse: Since the haiku has already been written to the file \"hello.txt\", I can proceed to the next step.\r\n\r\n> Entering new  chain...\r\nAction:\r\n```\r\n{\r\n  \"action\": \"write_file\",\r\n  \"action_input\": {\r\n    \"file_path\": \"hello.txt\",\r\n    \"text\": \"\",\r\n    \"append\": false\r\n  }\r\n}\r\n```\r\nObservation: File written successfully to hello.txt.\r\nThought:Since the previous steps indicate that the haiku has already been written to the file \"hello.txt\", the next step is to close the file. To do that, I can use the `write_file` tool with an empty text input and the `append` parameter set to `false`. This will ensure that the file is closed without making any changes to its contents.\r\n\r\nAction:\r\n```\r\n{\r\n  \"action\": \"write_file\",\r\n  \"action_input\": {\r\n    \"file_path\": \"hello.txt\",\r\n    \"text\": \"\",\r\n    \"append\": false\r\n  }\r\n}\r\n```\r\nObservation: File written successfully to hello.txt.\r\nThought:The file \"hello.txt\" has been successfully closed.\r\n\r\n> Finished chain.\r\n*****\r\n\r\nStep: Close the file.\r\n\r\nResponse: The file \"hello.txt\" has been successfully closed.\r\n\r\n> Entering new  chain...\r\nAction:\r\n```\r\n{\r\n  \"action\": \"Final Answer\",\r\n  \"action_input\": \"The haiku about the ocean has been successfully written to the file 'hello.txt'.\"\r\n}\r\n```\r\n\r\n> Finished chain.\r\n\r\n### Expected behavior\r\n\r\nI would expect the file to be populated with the haiku instead of being empty.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7450/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7450/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7449",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7449/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7449/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7449/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7449",
        "id": 1795582643,
        "node_id": "PR_kwDOIPDwls5VBfcd",
        "number": 7449,
        "title": "fix chroma relevance method",
        "user": {
            "login": "Bearnardd",
            "id": 43574448,
            "node_id": "MDQ6VXNlcjQzNTc0NDQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/43574448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Bearnardd",
            "html_url": "https://github.com/Bearnardd",
            "followers_url": "https://api.github.com/users/Bearnardd/followers",
            "following_url": "https://api.github.com/users/Bearnardd/following{/other_user}",
            "gists_url": "https://api.github.com/users/Bearnardd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Bearnardd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Bearnardd/subscriptions",
            "organizations_url": "https://api.github.com/users/Bearnardd/orgs",
            "repos_url": "https://api.github.com/users/Bearnardd/repos",
            "events_url": "https://api.github.com/users/Bearnardd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Bearnardd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T22:00:14Z",
        "updated_at": "2023-08-10T23:48:18Z",
        "closed_at": "2023-08-10T23:48:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7449",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7449",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7449.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7449.patch",
            "merged_at": null
        },
        "body": "Fixes https://github.com/hwchase17/langchain/issues/7384\r\n\r\n* add default relevance function to calculate `_similarity_search_with_relevance_scores`\r\n\r\n@rlancemartin, @eyurtsev\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7449/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7448",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7448/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7448/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7448/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7448",
        "id": 1795579900,
        "node_id": "I_kwDOIPDwls5rBl_8",
        "number": 7448,
        "title": "DOC: Please replace SERP_API examples with an alternative",
        "user": {
            "login": "ochsec",
            "id": 3394103,
            "node_id": "MDQ6VXNlcjMzOTQxMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3394103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ochsec",
            "html_url": "https://github.com/ochsec",
            "followers_url": "https://api.github.com/users/ochsec/followers",
            "following_url": "https://api.github.com/users/ochsec/following{/other_user}",
            "gists_url": "https://api.github.com/users/ochsec/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ochsec/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ochsec/subscriptions",
            "organizations_url": "https://api.github.com/users/ochsec/orgs",
            "repos_url": "https://api.github.com/users/ochsec/repos",
            "events_url": "https://api.github.com/users/ochsec/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ochsec/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-09T21:52:15Z",
        "updated_at": "2023-10-08T23:09:17Z",
        "closed_at": "2023-10-08T23:09:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nWe shouldn't have to sign up for another API just to follow the quickstart tutorial. Please replace this with something that doesn't require sign-up.\r\n\r\n### Idea or request for content:\r\n\r\nProposal: Use `http://api.duckduckgo.com/?q=x&format=json`\r\n\r\nExample:\r\n`http://api.duckduckgo.com/?q=langchain&format=json`\r\n\r\n`{\"Abstract\":\"LangChain is a framework designed to simplify the creation of applications using large language models. As a language model integration framework, LangChain's use-cases largely overlap with those of language models in general, including document analysis and summarization, chatbots, and code analysis.\",\"AbstractSource\":\"Wikipedia\",\"AbstractText\":\"LangChain is a framework designed to simplify the creation of applications using large language models. As a language model integration framework, LangChain's use-cases largely overlap with those of language models in general, including document analysis and summarization, chatbots, and code analysis.\",\"AbstractURL\":\"https://en.wikipedia.org/wiki/LangChain\",\"Answer\":\"\",\"AnswerType\":\"\",\"Definition\":\"\",\"DefinitionSource\":\"\",\"DefinitionURL\":\"\",\"Entity\":\"software\",\"Heading\":\"LangChain\",\"Image\":\"/i/d6fad29d.png\",\"ImageHeight\":270,\"ImageIsLogo\":1,\"ImageWidth\":529,\"Infobox\":{\"content\":[{\"data_type\":\"string\",\"label\":\"Developer(s)\",\"value\":\"Harrison Chase\",\"wiki_order\":0},{\"data_type\":\"string\",\"label\":\"Initial release\",\"value\":\"October 2022\",\"wiki_order\":1},{\"data_type\":\"string\",\"label\":\"Repository\",\"value\":\"github.com/hwchase17/langchain\",\"wiki_order\":2},{\"data_type\":\"string\",\"label\":\"Written in\",\"value\":\"Python and JavaScript\",\"wiki_order\":3},{\"data_type\":\"string\",\"label\":\"Type\",\"value\":\"Software framework for large language model application development\",\"wiki_order\":4},{\"data_type\":\"string\",\"label\":\"License\",\"value\":\"MIT License\",\"wiki_order\":5},{\"data_type\":\"string\",\"label\":\"Website\",\"value\":\"LangChain.com\",\"wiki_order\":6},{\"data_type\":\"twitter_profile\",\"label\":\"Twitter profile\",\"value\":\"langchainai\",\"wiki_order\":\"102\"},{\"data_type\":\"instance\",\"label\":\"Instance of\",\"value\":{\"entity-type\":\"item\",\"id\":\"Q7397\",\"numeric-id\":7397},\"wiki_order\":\"207\"},{\"data_type\":\"official_website\",\"label\":\"Official Website\",\"value\":\"https://langchain.com/\",\"wiki_order\":\"208\"}],\"meta\":[{\"data_type\":\"string\",\"label\":\"article_title\",\"value\":\"LangChain\"},{\"data_type\":\"string\",\"label\":\"template_name\",\"value\":\"infobox software\"}]},\"Redirect\":\"\",\"RelatedTopics\":[{\"FirstURL\":\"https://duckduckgo.com/c/Software_frameworks\",\"Icon\":{\"Height\":\"\",\"URL\":\"\",\"Width\":\"\"},\"Result\":\"<a href=\\\"https://duckduckgo.com/c/Software_frameworks\\\">Software frameworks</a>\",\"Text\":\"Software frameworks\"},{\"FirstURL\":\"https://duckduckgo.com/c/Artificial_intelligence\",\"Icon\":{\"Height\":\"\",\"URL\":\"\",\"Width\":\"\"},\"Result\":\"<a href=\\\"https://duckduckgo.com/c/Artificial_intelligence\\\">Artificial intelligence</a>\",\"Text\":\"Artificial intelligence\"}],\"Results\":[{\"FirstURL\":\"https://langchain.com/\",\"Icon\":{\"Height\":16,\"URL\":\"/i/langchain.com.ico\",\"Width\":16},\"Result\":\"<a href=\\\"https://langchain.com/\\\"><b>Official site</b></a><a href=\\\"https://langchain.com/\\\"></a>\",\"Text\":\"Official site\"}],\"Type\":\"A\",\"meta\":{\"attribution\":null,\"blockgroup\":null,\"created_date\":null,\"description\":\"Wikipedia\",\"designer\":null,\"dev_date\":null,\"dev_milestone\":\"live\",\"developer\":[{\"name\":\"DDG Team\",\"type\":\"ddg\",\"url\":\"http://www.duckduckhack.com\"}],\"example_query\":\"nikola tesla\",\"id\":\"wikipedia_fathead\",\"is_stackexchange\":null,\"js_callback_name\":\"wikipedia\",\"live_date\":null,\"maintainer\":{\"github\":\"duckduckgo\"},\"name\":\"Wikipedia\",\"perl_module\":\"DDG::Fathead::Wikipedia\",\"producer\":null,\"production_state\":\"online\",\"repo\":\"fathead\",\"signal_from\":\"wikipedia_fathead\",\"src_domain\":\"en.wikipedia.org\",\"src_id\":1,\"src_name\":\"Wikipedia\",\"src_options\":{\"directory\":\"\",\"is_fanon\":0,\"is_mediawiki\":1,\"is_wikipedia\":1,\"language\":\"en\",\"min_abstract_length\":\"20\",\"skip_abstract\":0,\"skip_abstract_paren\":0,\"skip_end\":\"0\",\"skip_icon\":0,\"skip_image_name\":0,\"skip_qr\":\"\",\"source_skip\":\"\",\"src_info\":\"\"},\"src_url\":null,\"status\":\"live\",\"tab\":\"About\",\"topic\":[\"productivity\"],\"unsafe\":0}}`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7448/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7448/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7447",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7447/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7447/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7447/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7447",
        "id": 1795574144,
        "node_id": "PR_kwDOIPDwls5VBdqn",
        "number": 7447,
        "title": "Fix info about YouTube",
        "user": {
            "login": "schedutron",
            "id": 22810216,
            "node_id": "MDQ6VXNlcjIyODEwMjE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/22810216?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schedutron",
            "html_url": "https://github.com/schedutron",
            "followers_url": "https://api.github.com/users/schedutron/followers",
            "following_url": "https://api.github.com/users/schedutron/following{/other_user}",
            "gists_url": "https://api.github.com/users/schedutron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schedutron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schedutron/subscriptions",
            "organizations_url": "https://api.github.com/users/schedutron/orgs",
            "repos_url": "https://api.github.com/users/schedutron/repos",
            "events_url": "https://api.github.com/users/schedutron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schedutron/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T21:36:16Z",
        "updated_at": "2023-07-10T05:52:56Z",
        "closed_at": "2023-07-10T05:52:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7447",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7447",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7447.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7447.patch",
            "merged_at": "2023-07-10T05:52:55Z"
        },
        "body": "(Unintentionally mean \ud83d\ude05) nit: YouTube wasn't created by Google, this PR fixes the mention in docs.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7447/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7447/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7446",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7446/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7446/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7446/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7446",
        "id": 1795552337,
        "node_id": "I_kwDOIPDwls5rBfRR",
        "number": 7446,
        "title": "DOC: Table creation for Supabase (Postgres) has incorrect type",
        "user": {
            "login": "j1philli",
            "id": 3744255,
            "node_id": "MDQ6VXNlcjM3NDQyNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3744255?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j1philli",
            "html_url": "https://github.com/j1philli",
            "followers_url": "https://api.github.com/users/j1philli/followers",
            "following_url": "https://api.github.com/users/j1philli/following{/other_user}",
            "gists_url": "https://api.github.com/users/j1philli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j1philli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j1philli/subscriptions",
            "organizations_url": "https://api.github.com/users/j1philli/orgs",
            "repos_url": "https://api.github.com/users/j1philli/repos",
            "events_url": "https://api.github.com/users/j1philli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j1philli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-09T20:33:00Z",
        "updated_at": "2023-08-11T00:15:17Z",
        "closed_at": "2023-08-11T00:15:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nhttps://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/supabase\r\nUnder  '-- Create a table to store your documents' the id column is set to big serial but it is referenced later as uuid 10 lines down when creating the function\n\n### Idea or request for content:\n\nIt is currently\r\n`id bigserial primary key,`\r\nChanging it to this fixed the error I was getting\r\n'id uuid primary key,'",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7446/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7446/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7445",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7445/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7445/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7445/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7445",
        "id": 1795551743,
        "node_id": "I_kwDOIPDwls5rBfH_",
        "number": 7445,
        "title": "BabyAGI: Error storing results in vdb",
        "user": {
            "login": "ellenealds",
            "id": 107104287,
            "node_id": "U_kgDOBmJIHw",
            "avatar_url": "https://avatars.githubusercontent.com/u/107104287?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ellenealds",
            "html_url": "https://github.com/ellenealds",
            "followers_url": "https://api.github.com/users/ellenealds/followers",
            "following_url": "https://api.github.com/users/ellenealds/following{/other_user}",
            "gists_url": "https://api.github.com/users/ellenealds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ellenealds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ellenealds/subscriptions",
            "organizations_url": "https://api.github.com/users/ellenealds/orgs",
            "repos_url": "https://api.github.com/users/ellenealds/repos",
            "events_url": "https://api.github.com/users/ellenealds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ellenealds/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-09T20:31:00Z",
        "updated_at": "2023-10-19T16:06:19Z",
        "closed_at": "2023-10-19T16:06:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain ==0.0.228, watchdog==3.0.0, streamlit==1.24.0, databutton==0.34.0, ipykernel==6.23.3\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce the error:\r\n\r\n1. Tried to use from langchain.experimental import BabyAGI with a FAISS db, got the error: ValueError: Tried to add ids that already exist: {'result_1'}\r\n2. Tried the code directly from the Langchain Docs: https://python.langchain.com/docs/use_cases/agents/baby_agi, I got the same error.\r\n\r\nCode:\r\nimport os\r\nfrom langchain.chat_models import AzureChatOpenAI\r\nfrom langchain.embeddings.cohere import CohereEmbeddings\r\nimport faiss\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.docstore import InMemoryDocstore\r\nfrom langchain import OpenAI\r\nfrom langchain.experimental import BabyAGI\r\n\r\nBASE_URL = \"https://openaielle.openai.azure.com/\"\r\nAPI_KEY = db.secrets.get(\"AZURE_OPENAI_KEY\")\r\nDEPLOYMENT_NAME = \"GPT35turbo\"\r\nllm = AzureChatOpenAI(\r\n    openai_api_base=BASE_URL,\r\n    openai_api_version=\"2023-03-15-preview\",\r\n    deployment_name=DEPLOYMENT_NAME,\r\n    openai_api_key=API_KEY,\r\n    openai_api_type=\"azure\",\r\n    streaming=True,\r\n    verbose=True,\r\n    temperature=0,\r\n    max_tokens=1500,\r\n    top_p=0.95)\r\n\r\n\r\nembeddings_model = CohereEmbeddings(model = \"embed-english-v2.0\")\r\nindex = faiss.IndexFlatL2(4096)\r\n\r\nvectorstore = FAISS(embeddings_model.embed_query, index, InMemoryDocstore({}), {})\r\n\r\n# set the goal\r\ngoal = \"Plan a trip to the Grand Canyon\"\r\n\r\n# create thebabyagi agent\r\n# If max_iterations is None, the agent may go on forever if stuck in loops\r\nbaby_agi = BabyAGI.from_llm(\r\n    llm=llm,\r\n    vectorstore=vectorstore,\r\n    verbose=False,\r\n    max_iterations=3\r\n)\r\nresponse = baby_agi({\"objective\": goal})\r\nprint(response)\r\n\r\n\r\nError:\r\nValueError: Tried to add ids that already exist: {'result_1'}\r\n\r\nTraceback:\r\nFile \"/user-venvs-build/14abfc95cf32/.venv/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 552, in _run_script\r\n    exec(code, module.__dict__)\r\nFile \"/app/run/multipage/pages/8_Exp_Baby_AGI.py\", line 61, in <module>\r\n    response = baby_agi({\"objective\": goal})\r\nFile \"/user-venvs-build/14abfc95cf32/.venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 243, in __call__\r\n    raise e\r\nFile \"/user-venvs-build/14abfc95cf32/.venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 237, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\nFile \"/user-venvs-build/14abfc95cf32/.venv/lib/python3.10/site-packages/langchain/experimental/autonomous_agents/baby_agi/baby_agi.py\", line 142, in _call\r\n    self.vectorstore.add_texts(\r\nFile \"/user-venvs-build/14abfc95cf32/.venv/lib/python3.10/site-packages/langchain/vectorstores/faiss.py\", line 150, in add_texts\r\n    return self.__add(texts, embeddings, metadatas=metadatas, ids=ids, **kwargs)\r\nFile \"/user-venvs-build/14abfc95cf32/.venv/lib/python3.10/site-packages/langchain/vectorstores/faiss.py\", line 121, in __add\r\n    self.docstore.add({_id: doc for _, _id, doc in full_info})\r\nFile \"/user-venvs-build/14abfc95cf32/.venv/lib/python3.10/site-packages/langchain/docstore/in_memory.py\", line 19, in add\r\n    raise ValueError(f\"Tried to add ids that already exist: {overlapping}\")\r\n\r\n      \n\n### Expected behavior\n\nI would expect the agent to run and generate the desired output instead of the error: ValueError: Tried to add ids that already exist: {'result_1'}\r\n\r\nI seems that the error is happening in this class: BabyAGI > _call > # Step 3: Store the result in Pinecone\r\n\r\nI was able to fix this by assigning a random number to each iteration of result_id, here is the fix, however this is not working in the experimental BabyAGI instance.\r\n\r\nFix:\r\nimport random\r\n                # Step 3: Store the result in Pinecone\r\n                result_id = f\"result_{task['task_id']}_{random.randint(0, 1000)}\"\r\n                self.vectorstore.add_texts(\r\n                    texts=[result],\r\n                    metadatas=[{\"task\": task[\"task_name\"]}],\r\n                    ids=[result_id],\r\n                )\r\n\r\nThank you :)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7445/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7445/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7444",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7444/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7444/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7444/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7444",
        "id": 1795534838,
        "node_id": "PR_kwDOIPDwls5VBV7G",
        "number": 7444,
        "title": "Add ZepMemory; improve ZepChatMessageHistory handling of metadata; Fix bugs",
        "user": {
            "login": "danielchalef",
            "id": 131175,
            "node_id": "MDQ6VXNlcjEzMTE3NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/131175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielchalef",
            "html_url": "https://github.com/danielchalef",
            "followers_url": "https://api.github.com/users/danielchalef/followers",
            "following_url": "https://api.github.com/users/danielchalef/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielchalef/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielchalef/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielchalef/subscriptions",
            "organizations_url": "https://api.github.com/users/danielchalef/orgs",
            "repos_url": "https://api.github.com/users/danielchalef/repos",
            "events_url": "https://api.github.com/users/danielchalef/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielchalef/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-09T19:39:10Z",
        "updated_at": "2023-07-10T05:53:49Z",
        "closed_at": "2023-07-10T05:53:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7444",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7444",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7444.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7444.patch",
            "merged_at": "2023-07-10T05:53:49Z"
        },
        "body": "Hey @hwchase17 - \r\n\r\nThis PR adds a `ZepMemory` class, improves handling of Zep's message metadata, and makes it easier for folks building custom chains to persist metadata alongside their chat history.\r\n\r\nWe've had plenty confused users unfamiliar with ChatMessageHistory classes and how to wrap the `ZepChatMessageHistory` in a `ConversationBufferMemory`. So we've created the `ZepMemory` class as a light wrapper for `ZepChatMessageHistory`.\r\n\r\nDetails:\r\n- add ZepMemory, modify notebook to demo use of ZepMemory\r\n- Modify summary to be SystemMessage\r\n- add metadata argument to add_message; add Zep metadata to Message.additional_kwargs\r\n- support passing in metadata",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7444/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7444/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7443",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7443/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7443/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7443/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7443",
        "id": 1795527141,
        "node_id": "I_kwDOIPDwls5rBZHl",
        "number": 7443,
        "title": "SSL certificate problem (even when verify = False)",
        "user": {
            "login": "wilmerhenao",
            "id": 3237424,
            "node_id": "MDQ6VXNlcjMyMzc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3237424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wilmerhenao",
            "html_url": "https://github.com/wilmerhenao",
            "followers_url": "https://api.github.com/users/wilmerhenao/followers",
            "following_url": "https://api.github.com/users/wilmerhenao/following{/other_user}",
            "gists_url": "https://api.github.com/users/wilmerhenao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wilmerhenao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wilmerhenao/subscriptions",
            "organizations_url": "https://api.github.com/users/wilmerhenao/orgs",
            "repos_url": "https://api.github.com/users/wilmerhenao/repos",
            "events_url": "https://api.github.com/users/wilmerhenao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wilmerhenao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-09T19:15:44Z",
        "updated_at": "2023-10-15T16:04:38Z",
        "closed_at": "2023-10-15T16:04:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi. I'm trying to test the duckduckgoSearchRun tool and I'm running the basic example from the documentation https://python.langchain.com/docs/modules/agents/tools/integrations/ddg . I already have installed the certificates without any errors: \r\n\r\n`./Install\\ Certificates.command \r\n -- pip install --upgrade certifi\r\nRequirement already satisfied: certifi in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (2023.5.7)\r\n -- removing any existing file or link\r\n -- creating symlink to certifi certificate bundle\r\n -- setting permissions\r\n -- update complete`\r\n\r\nBut even when I do that and even when I set verify false. I still get SSL certificate error\r\n\r\n`import ssl\r\nimport duckduckgo_search\r\nfrom lxml import html\r\nfrom langchain.tools import DuckDuckGoSearchRun\r\nDuckDuckGoSearchRun.requests_kwargs = {'verify': False}\r\nsearch = DuckDuckGoSearchRun()\r\n\r\nsearch.run(\"Obama's first name?\")`\r\n\r\nHere is the error:\r\n\r\n`---------------------------------------------------------------------------\r\nSSLCertVerificationError                  Traceback (most recent call last)\r\nFile [/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/httpcore/_exceptions.py:10](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/httpcore/_exceptions.py:10), in map_exceptions(map)\r\n      9 try:\r\n---> 10     yield\r\n     11 except Exception as exc:  # noqa: PIE786\r\n\r\nFile [/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/httpcore/backends/sync.py:62](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/httpcore/backends/sync.py:62), in SyncStream.start_tls(self, ssl_context, server_hostname, timeout)\r\n     61         self.close()\r\n---> 62         raise exc\r\n     63 return SyncStream(sock)\r\n\r\nFile [/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/httpcore/backends/sync.py:57](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/httpcore/backends/sync.py:57), in SyncStream.start_tls(self, ssl_context, server_hostname, timeout)\r\n     56     self._sock.settimeout(timeout)\r\n---> 57     sock = ssl_context.wrap_socket(\r\n     58         self._sock, server_hostname=server_hostname\r\n     59     )\r\n     60 except Exception as exc:  # pragma: nocover\r\n\r\nFile [/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py:517](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py:517), in SSLContext.wrap_socket(self, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, session)\r\n    511 def wrap_socket(self, sock, server_side=False,\r\n    512                 do_handshake_on_connect=True,\r\n    513                 suppress_ragged_eofs=True,\r\n    514                 server_hostname=None, session=None):\r\n    515     # SSLSocket class handles server_hostname encoding before it calls\r\n    516     # ctx._wrap_socket()\r\n--> 517     return self.sslsocket_class._create(\r\n    518         sock=sock,\r\n    519         server_side=server_side,\r\n    520         do_handshake_on_connect=do_handshake_on_connect,\r\n    521         suppress_ragged_eofs=suppress_ragged_eofs,\r\n    522         server_hostname=server_hostname,\r\n    523         context=self,\r\n    524         session=session\r\n    525     )\r\n\r\nFile [/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py:1075](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py:1075), in SSLSocket._create(cls, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, context, session)\r\n   1074             raise ValueError(\"do_handshake_on_connect should not be specified for non-blocking sockets\")\r\n-> 1075         self.do_handshake()\r\n   1076 except (OSError, ValueError):\r\n\r\nFile [/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py:1346](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py:1346), in SSLSocket.do_handshake(self, block)\r\n   1345         self.settimeout(None)\r\n-> 1346     self._sslobj.do_handshake()\r\n   1347 finally:\r\n\r\nSSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:992)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nConnectError                              Traceback (most recent call last)`\r\n\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7443/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7443/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7442",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7442/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7442/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7442/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7442",
        "id": 1795522573,
        "node_id": "PR_kwDOIPDwls5VBTiy",
        "number": 7442,
        "title": "Add spacy sentencizer",
        "user": {
            "login": "jona-sassenhagen",
            "id": 4321826,
            "node_id": "MDQ6VXNlcjQzMjE4MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4321826?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jona-sassenhagen",
            "html_url": "https://github.com/jona-sassenhagen",
            "followers_url": "https://api.github.com/users/jona-sassenhagen/followers",
            "following_url": "https://api.github.com/users/jona-sassenhagen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jona-sassenhagen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jona-sassenhagen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jona-sassenhagen/subscriptions",
            "organizations_url": "https://api.github.com/users/jona-sassenhagen/orgs",
            "repos_url": "https://api.github.com/users/jona-sassenhagen/repos",
            "events_url": "https://api.github.com/users/jona-sassenhagen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jona-sassenhagen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-09T19:02:20Z",
        "updated_at": "2023-07-11T12:08:19Z",
        "closed_at": "2023-07-10T06:52:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7442",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7442",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7442.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7442.patch",
            "merged_at": "2023-07-10T06:52:06Z"
        },
        "body": "`SpacyTextSplitter` currently uses spacy's statistics-based `en_core_web_sm` model for sentence splitting. This is a good splitter, but it's also pretty slow, and in this case it's doing a lot of work that's not needed given that the spacy parse is then just thrown away.\r\nHowever, there is also a simple rules-based spacy sentencizer. Using this is at least an order of magnitude faster than using `en_core_web_sm` according to my local tests.\r\nAlso, spacy sentence tokenization based on `en_core_web_sm` can be sped up in this case by not doing the NER stage. This shaves some cycles too, both when loading the model and when parsing the text.\r\n\r\nConsequently, this PR adds the option to use the basic spacy sentencizer, and it disables the NER stage for the current approach, *which is kept as the default*.\r\n\r\nLastly, when extracting the tokenized sentences, the `text` attribute is called directly instead of doing the string conversion, which is IMO a bit more idiomatic.\r\n\r\n@baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7442/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7442/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7441",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7441/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7441/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7441/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7441",
        "id": 1795506002,
        "node_id": "PR_kwDOIPDwls5VBQTz",
        "number": 7441,
        "title": "fix SQL toolkit table listing tool name",
        "user": {
            "login": "saswat0",
            "id": 32325136,
            "node_id": "MDQ6VXNlcjMyMzI1MTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/32325136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saswat0",
            "html_url": "https://github.com/saswat0",
            "followers_url": "https://api.github.com/users/saswat0/followers",
            "following_url": "https://api.github.com/users/saswat0/following{/other_user}",
            "gists_url": "https://api.github.com/users/saswat0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saswat0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saswat0/subscriptions",
            "organizations_url": "https://api.github.com/users/saswat0/orgs",
            "repos_url": "https://api.github.com/users/saswat0/repos",
            "events_url": "https://api.github.com/users/saswat0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saswat0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-09T18:10:57Z",
        "updated_at": "2023-11-07T03:45:38Z",
        "closed_at": "2023-11-07T03:45:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7441",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7441",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7441.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7441.patch",
            "merged_at": null
        },
        "body": "- Description: This PR fixes the erroneous naming convention of the `list_tables_sql_db` tool used for querying the list of tables present in a database. This is a minor fix which renames all the occurrences of the above tool with the one described in the tool's description.\r\n- Issue: Fixes #7440 \r\n- Dependencies: None\r\n- Maintainer: @hinthornw \r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7441/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7441/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7440",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7440/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7440/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7440/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7440",
        "id": 1795505933,
        "node_id": "I_kwDOIPDwls5rBT8N",
        "number": 7440,
        "title": "list_tables_sql_db is not a valid tool, try another one.",
        "user": {
            "login": "saswat0",
            "id": 32325136,
            "node_id": "MDQ6VXNlcjMyMzI1MTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/32325136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saswat0",
            "html_url": "https://github.com/saswat0",
            "followers_url": "https://api.github.com/users/saswat0/followers",
            "following_url": "https://api.github.com/users/saswat0/following{/other_user}",
            "gists_url": "https://api.github.com/users/saswat0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saswat0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saswat0/subscriptions",
            "organizations_url": "https://api.github.com/users/saswat0/orgs",
            "repos_url": "https://api.github.com/users/saswat0/repos",
            "events_url": "https://api.github.com/users/saswat0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saswat0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-09T18:10:42Z",
        "updated_at": "2023-10-15T16:04:43Z",
        "closed_at": "2023-10-15T16:04:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain: 0.0.215\r\npython: 3.10.11\r\nOS: Ubuntu 18.04\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nWhile querying a SQL database, the agent gets stuck in an infinite loop due to `list_tables_sql_db` not being a valid tool.\r\n\r\n```\r\n> Entering new  chain...\r\nAction: list_tables_sql_db\r\nAction Input: \r\nObservation: list_tables_sql_db is not a valid tool, try another one.\r\nThought:I should look at the tables in the database to see what I can query.  Then I should query the schema of the most relevant tables.\r\nAction: list_tables_sql_db\r\nAction Input: \r\nObservation: list_tables_sql_db is not a valid tool, try another one.\r\nThought:I should look at the tables in the database to see what I can query.  Then I should query the schema of the most relevant tables.\r\nAction: list_tables_sql_db\r\nAction Input: \r\nObservation: list_tables_sql_db is not a valid tool, try another one.\r\nThought:I don't know how to answer this question.\r\nThought: I now know the final answer\r\nFinal Answer: I don't know\r\n\r\n> Finished chain.\r\n```\n\n### Expected behavior\n\nThe agent should get the list of tables by using the `list_tables_sql_db` tool and then query the most relevant one.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7440/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7440/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7437",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7437/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7437/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7437/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7437",
        "id": 1795486105,
        "node_id": "PR_kwDOIPDwls5VBMVw",
        "number": 7437,
        "title": "docs(vectorstores/integrations/chroma): Fix loading and saving",
        "user": {
            "login": "ftnext",
            "id": 21273221,
            "node_id": "MDQ6VXNlcjIxMjczMjIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/21273221?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ftnext",
            "html_url": "https://github.com/ftnext",
            "followers_url": "https://api.github.com/users/ftnext/followers",
            "following_url": "https://api.github.com/users/ftnext/following{/other_user}",
            "gists_url": "https://api.github.com/users/ftnext/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ftnext/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ftnext/subscriptions",
            "organizations_url": "https://api.github.com/users/ftnext/orgs",
            "repos_url": "https://api.github.com/users/ftnext/repos",
            "events_url": "https://api.github.com/users/ftnext/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ftnext/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T17:12:18Z",
        "updated_at": "2023-07-10T11:16:16Z",
        "closed_at": "2023-07-10T06:05:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7437",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7437",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7437.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7437.patch",
            "merged_at": "2023-07-10T06:05:16Z"
        },
        "body": "\r\n- Description: Fix loading and saving code about Chroma\r\n- Issue: the issue #7436 \r\n- Dependencies: -\r\n- Tag maintainer: @rlancemartin, @eyurtsev\r\n- Twitter handle: https://twitter.com/ftnext",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7437/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7437/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7436",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7436/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7436/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7436/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7436",
        "id": 1795484020,
        "node_id": "I_kwDOIPDwls5rBOl0",
        "number": 7436,
        "title": "DOC: Bug in loading Chroma from disk (vectorstores/integrations/chroma)",
        "user": {
            "login": "ftnext",
            "id": 21273221,
            "node_id": "MDQ6VXNlcjIxMjczMjIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/21273221?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ftnext",
            "html_url": "https://github.com/ftnext",
            "followers_url": "https://api.github.com/users/ftnext/followers",
            "following_url": "https://api.github.com/users/ftnext/following{/other_user}",
            "gists_url": "https://api.github.com/users/ftnext/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ftnext/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ftnext/subscriptions",
            "organizations_url": "https://api.github.com/users/ftnext/orgs",
            "repos_url": "https://api.github.com/users/ftnext/repos",
            "events_url": "https://api.github.com/users/ftnext/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ftnext/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T17:05:24Z",
        "updated_at": "2023-07-10T11:17:19Z",
        "closed_at": "2023-07-10T11:17:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nhttps://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/chroma.html#basic-example-including-saving-to-disk\r\n\r\n## Environment\r\n\r\n- macOS\r\n- Python 3.10.9\r\n- langchain 0.0.228\r\n- chromadb 0.3.26\r\n\r\nUse https://github.com/hwchase17/langchain/blob/v0.0.228/docs/extras/modules/state_of_the_union.txt\r\n\r\n## Procedure\r\n\r\n1. Run the following Python script\r\nref: https://github.com/hwchase17/langchain/blob/v0.0.228/docs/extras/modules/data_connection/vectorstores/integrations/chroma.ipynb\r\n\r\n```diff\r\n# import\r\nfrom langchain.embeddings.sentence_transformer import SentenceTransformerEmbeddings\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.document_loaders import TextLoader\r\n\r\n# load the document and split it into chunks\r\nloader = TextLoader(\"../../../state_of_the_union.txt\")\r\ndocuments = loader.load()\r\n\r\n# split it into chunks\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ndocs = text_splitter.split_documents(documents)\r\n\r\n# create the open-source embedding function\r\nembedding_function = SentenceTransformerEmbeddings(model_name=\"all-MiniLM-L6-v2\")\r\n\r\n# load it into Chroma\r\ndb = Chroma.from_documents(docs, embedding_function)\r\n\r\n# query it\r\nquery = \"What did the president say about Ketanji Brown Jackson\"\r\ndocs = db.similarity_search(query)\r\n\r\n# print results\r\nprint(docs[0].page_content)\r\n\r\n# save to disk\r\ndb2 = Chroma.from_documents(docs, embedding_function, persist_directory=\"./chroma_db\")\r\ndb2.persist()\r\n-docs = db.similarity_search(query)\r\n+docs = db2.similarity_search(query)\r\n\r\n# load from disk\r\ndb3 = Chroma(persist_directory=\"./chroma_db\")\r\n-docs = db.similarity_search(query)\r\n+docs = db3.similarity_search(query)  # ValueError raised\r\nprint(docs[0].page_content)\r\n```\r\n\r\n## Expected behavior\r\n\r\n`print(docs[0].page_content)` with db3\r\n\r\n## Actual behavior\r\n\r\n>ValueError: You must provide embeddings or a function to compute them\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/.../issue_report.py\", line 35, in <module>\r\n    docs = db3.similarity_search(query)\r\n  File \"/.../venv/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 174, in similarity_search\r\n    docs_and_scores = self.similarity_search_with_score(query, k, filter=filter)\r\n  File \"/.../venv/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 242, in similarity_search_with_score\r\n    results = self.__query_collection(\r\n  File \"/.../venv/lib/python3.10/site-packages/langchain/utils.py\", line 55, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/.../venv/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 121, in __query_collection\r\n    return self._collection.query(\r\n  File \"/.../venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 209, in query\r\n    raise ValueError(\r\nValueError: You must provide embeddings or a function to compute them\r\n```\r\n\r\n\r\n### Idea or request for content:\r\n\r\nFixed by specifying the `embedding_function` parameter.\r\n\r\n```diff\r\n-db3 = Chroma(persist_directory=\"./chroma_db\")\r\n+db3 = Chroma(persist_directory=\"./chroma_db\", embedding_function=embedding_function)\r\ndocs = db3.similarity_search(query)\r\nprint(docs[0].page_content)\r\n```\r\n\r\n(Added) ref: https://github.com/hwchase17/langchain/blob/v0.0.228/langchain/vectorstores/chroma.py#L62",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7436/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7436/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7435",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7435/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7435/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7435/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7435",
        "id": 1795458482,
        "node_id": "I_kwDOIPDwls5rBIWy",
        "number": 7435,
        "title": "DOC: Code/twitter-the-algorithm-analysis-deeplake not working as written",
        "user": {
            "login": "casWVU",
            "id": 116467278,
            "node_id": "U_kgDOBvEmTg",
            "avatar_url": "https://avatars.githubusercontent.com/u/116467278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casWVU",
            "html_url": "https://github.com/casWVU",
            "followers_url": "https://api.github.com/users/casWVU/followers",
            "following_url": "https://api.github.com/users/casWVU/following{/other_user}",
            "gists_url": "https://api.github.com/users/casWVU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casWVU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casWVU/subscriptions",
            "organizations_url": "https://api.github.com/users/casWVU/orgs",
            "repos_url": "https://api.github.com/users/casWVU/repos",
            "events_url": "https://api.github.com/users/casWVU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casWVU/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-07-09T15:55:06Z",
        "updated_at": "2023-10-19T16:06:23Z",
        "closed_at": "2023-10-19T16:06:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nI followed the documentation @ https://python.langchain.com/docs/use_cases/code/twitter-the-algorithm-analysis-deeplake.\r\n\r\nI replaced 'twitter-the-algorithm' with another code base I'm analyzing and used my own credentials from OpenAI and Deep Lake.\r\n\r\nWhen I run the code (on VS Code for Mac with M1 chip), I get the following error:\r\n\r\n_ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (1435,) + inhomogeneous part.  \r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/catherineswope/Desktop/LangChain/fromLangChain.py\", line 37, in <module>\r\n    db.add_documents(texts)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/vectorstores/base.py\", line 91, in add_documents\r\n    return self.add_texts(texts, metadatas, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/vectorstores/deeplake.py\", line 184, in add_texts\r\n    return self.vectorstore.add(\r\n           ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/deeplake/core/vectorstore/deeplake_vectorstore.py\", line 271, in add\r\n    dataset_utils.extend_or_ingest_dataset(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/deeplake/core/vectorstore/vector_search/dataset/dataset.py\", line 409, in extend_or_ingest_dataset\r\n    raise IncorrectEmbeddingShapeError()\r\ndeeplake.util.exceptions.IncorrectEmbeddingShapeError: The embedding function returned embeddings of different shapes. Please either use different embedding function or exclude invalid files that are not supported by the embedding function._\r\n\r\nThis is the code snippet from my actual code:\r\n\r\nimport os\r\nimport getpass\r\n\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import DeepLake\r\nfrom langchain.document_loaders import TextLoader\r\n\r\n#get OPENAI API KEY and ACTIVELOOP_TOKEN\r\nos.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"OpenAI API Key:\")\r\nos.environ[\"ACTIVELOOP_TOKEN\"] = getpass.getpass(\"Activeloop Token:\")\r\n\r\nembeddings = OpenAIEmbeddings(disallowed_special=())\r\n\r\n#clone from chattydocs git hub repo removedcomments branch and copy/paste path\r\nroot_dir = \"/Users/catherineswope/chattydocs/incubator-baremaps-0.7.1-removedcomments\"\r\ndocs = []\r\nfor dirpath, dirnames, filenames in os.walk(root_dir):\r\n    for file in filenames:\r\n        try:\r\n            loader = TextLoader(os.path.join(dirpath, file), encoding=\"utf-8\")\r\n            docs.extend(loader.load_and_split())\r\n        except Exception as e:\r\n            pass\r\n\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\n\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ntexts = text_splitter.split_documents(docs)\r\n\r\nusername = \"caswvu\"  # replace with your username from app.activeloop.ai\r\ndb = DeepLake(\r\n    dataset_path=f\"hub://caswvu/baremaps\",\r\n    embedding_function=embeddings,\r\n)\r\ndb.add_documents(texts)\r\n\r\ndb = DeepLake(\r\n    dataset_path=\"hub://caswvu/baremaps\",\r\n    read_only=True,\r\n    embedding_function=embeddings,\r\n)\r\n\r\nretriever = db.as_retriever()\r\nretriever.search_kwargs[\"distance_metric\"] = \"cos\"\r\nretriever.search_kwargs[\"fetch_k\"] = 100\r\nretriever.search_kwargs[\"maximal_marginal_relevance\"] = True\r\nretriever.search_kwargs[\"k\"] = 10\r\n\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.chains import ConversationalRetrievalChain\r\n\r\nmodel = ChatOpenAI(model_name=\"gpt-3.5-turbo\")  # switch to 'gpt-4'\r\nqa = ConversationalRetrievalChain.from_llm(model, retriever=retriever)\r\n\r\nquestions = [\r\n    \"What does this code do?\",\r\n]\r\nchat_history = []\r\n\r\nfor question in questions:\r\n    result = qa({\"question\": question, \"chat_history\": chat_history})\r\n    chat_history.append((question, result[\"answer\"]))\r\n    print(f\"-> **Question**: {question} \\n\")\r\n    print(f\"**Answer**: {result['answer']} \\n\")\r\n\n\n### Idea or request for content:\n\nCan you please help me understand how to fix the code to address the error message?  Also, if applicable, address in the documentation so that others can avoid as well.  Thank you!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7435/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7435/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7434",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7434/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7434/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7434/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7434",
        "id": 1795447757,
        "node_id": "PR_kwDOIPDwls5VBEtd",
        "number": 7434,
        "title": "Harrison/move callbacks to schema",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-09T15:25:43Z",
        "updated_at": "2023-08-11T00:21:14Z",
        "closed_at": "2023-08-11T00:21:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7434",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7434",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7434.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7434.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7434/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7434/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7433",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7433/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7433/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7433/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7433",
        "id": 1795441163,
        "node_id": "PR_kwDOIPDwls5VBDZy",
        "number": 7433,
        "title": "Added function search_documents_by_metadata for Pinecone vectorstore",
        "user": {
            "login": "Telsho",
            "id": 39586871,
            "node_id": "MDQ6VXNlcjM5NTg2ODcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/39586871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Telsho",
            "html_url": "https://github.com/Telsho",
            "followers_url": "https://api.github.com/users/Telsho/followers",
            "following_url": "https://api.github.com/users/Telsho/following{/other_user}",
            "gists_url": "https://api.github.com/users/Telsho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Telsho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Telsho/subscriptions",
            "organizations_url": "https://api.github.com/users/Telsho/orgs",
            "repos_url": "https://api.github.com/users/Telsho/repos",
            "events_url": "https://api.github.com/users/Telsho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Telsho/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T15:08:17Z",
        "updated_at": "2023-07-20T14:54:28Z",
        "closed_at": "2023-07-20T14:54:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7433",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7433",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7433.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7433.patch",
            "merged_at": null
        },
        "body": "Hi guys,\r\n\r\nI've been working on a new feature that I believe could be a great addition to the Langchain project. It's a function designed to simplify document searches based on metadata within Pinecone. The idea is to simply pass in the metadata, and the function will take care of creating the necessary filters for us. You can also give in your own filters.\r\n\r\nI realize this might seem a bit abstract without a practical demonstration, so if you think it would be helpful, I'd be more than happy to whip up a Jupyter notebook. \r\n\r\nPlease feel free to let me know your thoughts on this, and if there's anything specific you'd like me to cover in the notebook if we decide to go that route.\r\n\r\nThank you for the great work. \r\n\r\n  - Tag maintainer: @rlancemartin @eyurtsev\r\n  - Twitter handle: @ET_TheDev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7433/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7433/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7431",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7431/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7431/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7431/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7431",
        "id": 1795434040,
        "node_id": "I_kwDOIPDwls5rBCY4",
        "number": 7431,
        "title": "Have set my langchain+ tracing key, it is not being recognized",
        "user": {
            "login": "solarslurpi",
            "id": 5243679,
            "node_id": "MDQ6VXNlcjUyNDM2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5243679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/solarslurpi",
            "html_url": "https://github.com/solarslurpi",
            "followers_url": "https://api.github.com/users/solarslurpi/followers",
            "following_url": "https://api.github.com/users/solarslurpi/following{/other_user}",
            "gists_url": "https://api.github.com/users/solarslurpi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/solarslurpi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/solarslurpi/subscriptions",
            "organizations_url": "https://api.github.com/users/solarslurpi/orgs",
            "repos_url": "https://api.github.com/users/solarslurpi/repos",
            "events_url": "https://api.github.com/users/solarslurpi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/solarslurpi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-09T14:50:31Z",
        "updated_at": "2023-08-27T07:29:53Z",
        "closed_at": "2023-07-09T16:43:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n```\r\n$ uname -a\r\nMINGW64_NT-10.0-19045 LAPTOP-4HTFESLT 3.3.6-341.x86_64 2022-09-05 20:28 UTC x86_64 Msys\r\n\r\n$ python --version\r\nPython 3.10.11\r\n\r\n$ pip show langchain\r\nName: langchain\r\nVersion: 0.0.228\r\nSummary: Building applications with LLMs through composability\r\nHome-page: https://www.github.com/hwchase17/langchain\r\nAuthor:\r\nAuthor-email:\r\nLicense: MIT\r\nLocation: c:\\users\\happy\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages\r\nRequires: aiohttp, async-timeout, dataclasses-json, langchainplus-sdk, numexpr, numpy, openapi-schema-pydantic, pydantic, PyYAML, requests, SQLAlchemy, tenacity\r\nRequired-by:\r\n\r\n\r\n\r\n```\n\n### Who can help?\n\nI cannot get a trace on langchain. Error:\r\n```\r\nFile \"c:\\Users\\happy\\Documents\\Projects\\askjane\\.venv\\lib\\site-packages\\langchain\\callbacks\\manager.py\", line 1702, in _configure\r\n    logger.warning(\r\nMessage: 'Unable to load requested LangChainTracer. To disable this warning, unset the  LANGCHAIN_TRACING_V2 environment variables.'\r\nArguments: (LangChainPlusUserError('API key must be provided when using hosted LangChain+ API'),)\r\n```\r\nI do this check:\r\n```\r\nprint(os.environ[\"LANGCHAIN-API-KEY\"])\r\n```\r\nthe correct LangchainPlus/langsmith/langchain api key is shown.  I thought this was how it was done.  I do set the other os envionment variables.\r\n\r\nIt doesn't pick up my api key.\r\n\r\ni apologize if i am doing something stupid. but it's not working to the best of my knowledge.\r\n\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nimport os\r\nos.environ[\"OPENAI_API_KEY\"] = \"...\"\r\nos.environ[\"LANGCHAIN-API-KEY\"] = \"...\"\r\nos.environ[\"LANGCHAIN_TRACING_V2\"] = \"true\"\r\nos.environ[\"LANGCHAIN_ENDPOINT\"] = \"https://api.langchain.plus\"\r\nos.environ[\"LANGCHAIN_PROJECT\"] = \"Explore Evaluating index using LLM\" \r\n\r\nprint(os.environ[\"LANGCHAIN-API-KEY\"])\r\n\r\nfrom langchain import OpenAI\r\nOpenAI().predict(\"Hello, world!\")\r\n\r\n\n\n### Expected behavior\n\ngo to langsmith and see the trace.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7431/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7431/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7430",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7430/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7430/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7430/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7430",
        "id": 1795409409,
        "node_id": "I_kwDOIPDwls5rA8YB",
        "number": 7430,
        "title": "SQLDatabase and SQLDatabaseChain with AWS Athena",
        "user": {
            "login": "clebermarq",
            "id": 59582958,
            "node_id": "MDQ6VXNlcjU5NTgyOTU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/59582958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clebermarq",
            "html_url": "https://github.com/clebermarq",
            "followers_url": "https://api.github.com/users/clebermarq/followers",
            "following_url": "https://api.github.com/users/clebermarq/following{/other_user}",
            "gists_url": "https://api.github.com/users/clebermarq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clebermarq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clebermarq/subscriptions",
            "organizations_url": "https://api.github.com/users/clebermarq/orgs",
            "repos_url": "https://api.github.com/users/clebermarq/repos",
            "events_url": "https://api.github.com/users/clebermarq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clebermarq/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-07-09T13:46:19Z",
        "updated_at": "2023-11-21T18:07:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.216\r\nlangchainplus-sdk==0.0.17\r\npython==3.10\r\n\r\nI'm trying to connect SQLDatabaseChain  to AWS Athena and getting the following error:\r\n\r\n```\r\nconString = f\"awsathena+rest://{AWS_ACCESS_KEY_ID}:{AWS_SECRET_ACCESS_KEY}@athena.{AWS_REGION_ID}.amazonaws.com/{DATABASE}\"\r\n\r\nengine_args={\r\n                's3_staging_dir': \"s3://mybuckets3/\",\r\n                'work_group':'primary'\r\n            }\r\n\r\ndb = SQLDatabase.from_uri(database_uri=conString, engine_args=engine_args)\r\n\r\nTypeError                                 Traceback (most recent call last)\r\nCell In[14], line 2\r\n      1 #db = SQLDatabase.from_uri(conString)\r\n----> 2 db = SQLDatabase.from_uri(database_uri=conString, engine_args=engine_args)\r\n\r\nFile ~\\.conda\\envs\\generativeai\\lib\\site-packages\\langchain\\sql_database.py:124, in SQLDatabase.from_uri(cls, database_uri, engine_args, **kwargs)\r\n    122 \"\"\"Construct a SQLAlchemy engine from URI.\"\"\"\r\n    123 _engine_args = engine_args or {}\r\n--> 124 return cls(create_engine(database_uri, **_engine_args), **kwargs)\r\n\r\nFile <string>:2, in create_engine(url, **kwargs)\r\n\r\nFile ~\\.conda\\envs\\generativeai\\lib\\site-packages\\sqlalchemy\\util\\deprecations.py:281, in deprecated_params.<locals>.decorate.<locals>.warned(fn, *args, **kwargs)\r\n    274     if m in kwargs:\r\n    275         _warn_with_version(\r\n    276             messages[m],\r\n    277             versions[m],\r\n    278             version_warnings[m],\r\n    279             stacklevel=3,\r\n    280         )\r\n--> 281 return fn(*args, **kwargs)\r\n\r\nFile ~\\.conda\\envs\\generativeai\\lib\\site-packages\\sqlalchemy\\engine\\create.py:680, in create_engine(url, **kwargs)\r\n    678 # all kwargs should be consumed\r\n    679 if kwargs:\r\n--> 680     raise TypeError(\r\n    681         \"Invalid argument(s) %s sent to create_engine(), \"\r\n    682         \"using configuration %s/%s/%s.  Please check that the \"\r\n    683         \"keyword arguments are appropriate for this combination \"\r\n    684         \"of components.\"\r\n    685         % (\r\n    686             \",\".join(\"'%s'\" % k for k in kwargs),\r\n    687             dialect.__class__.__name__,\r\n    688             pool.__class__.__name__,\r\n    689             engineclass.__name__,\r\n    690         )\r\n    691     )\r\n    693 engine = engineclass(pool, dialect, u, **engine_args)\r\n    695 if _initialize:\r\n\r\nTypeError: Invalid argument(s) 's3_staging_dir','work_group' sent to create_engine(), using configuration AthenaRestDialect/QueuePool/Engine.  Please check that the keyword arguments are appropriate for this combination of components.\r\n```\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nAbove\r\n\r\n### Expected behavior\r\n\r\nLangchain connected to aws athena",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7430/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7430/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7429",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7429/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7429/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7429/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7429",
        "id": 1795401313,
        "node_id": "PR_kwDOIPDwls5VA7oT",
        "number": 7429,
        "title": "Load function for agent trajectory loader",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T13:24:34Z",
        "updated_at": "2023-07-24T23:03:05Z",
        "closed_at": "2023-07-24T23:03:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7429",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7429",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7429.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7429.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7429/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7429/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7427",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7427/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7427/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7427/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7427",
        "id": 1795381432,
        "node_id": "I_kwDOIPDwls5rA1i4",
        "number": 7427,
        "title": "Similarity search returns random docs, not the ones that contain the specified keywords",
        "user": {
            "login": "paplorinc",
            "id": 1841944,
            "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paplorinc",
            "html_url": "https://github.com/paplorinc",
            "followers_url": "https://api.github.com/users/paplorinc/followers",
            "following_url": "https://api.github.com/users/paplorinc/following{/other_user}",
            "gists_url": "https://api.github.com/users/paplorinc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paplorinc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
            "organizations_url": "https://api.github.com/users/paplorinc/orgs",
            "repos_url": "https://api.github.com/users/paplorinc/repos",
            "events_url": "https://api.github.com/users/paplorinc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paplorinc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-07-09T12:31:36Z",
        "updated_at": "2023-10-14T20:41:00Z",
        "closed_at": "2023-10-14T20:40:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info (M1 mac)\r\n\r\nPython implementation: CPython\r\nPython version       : 3.11.4\r\nIPython version      : 8.14.0\r\n\r\nCompiler    : GCC 12.2.0\r\nOS          : Linux\r\nRelease     : 5.15.49-linuxkit-pr\r\nMachine     : aarch64\r\nProcessor   : CPU cores   : 5\r\nArchitecture: 64bit\r\n\r\n\r\n[('aiohttp', '3.8.4'), ('aiosignal', '1.3.1'), ('asttokens', '2.2.1'), ('async-timeout', '4.0.2'), ('attrs', '23.1.0'), ('backcall', '0.2.0'), ('blinker', '1.6.2'), ('certifi', '2023.5.7'), ('charset-normalizer', '3.2.0'), ('click', '8.1.4'), ('dataclasses-json', '0.5.9'), ('decorator', '5.1.1'), ('docarray', '0.35.0'), ('executing', '1.2.0'), ('faiss-cpu', '1.7.4'), ('flask', '2.3.2'), ('frozenlist', '1.3.3'), ('greenlet', '2.0.2'), ('idna', '3.4'), ('importlib-metadata', '6.8.0'), ('ipython', '8.14.0'), ('itsdangerous', '2.1.2'), ('jedi', '0.18.2'), ('jinja2', '3.1.2'), ('json5', '0.9.14'), **('langchain', '0.0.228'), ('langchainplus-sdk', '0.0.20')**, ('markdown-it-py', '3.0.0'), ('markupsafe', '2.1.3'), ('marshmallow', '3.19.0'), ('marshmallow-enum', '1.5.1'), ('matplotlib-inline', '0.1.6'), ('mdurl', '0.1.2'), ('multidict', '6.0.4'), ('mypy-extensions', '1.0.0'), ('numexpr', '2.8.4'), ('numpy', '1.25.1'), ('openai', '0.27.8'), ('openapi-schema-pydantic', '1.2.4'), ('orjson', '3.9.2'), ('packaging', '23.1'), ('parso', '0.8.3'), ('pexpect', '4.8.0'), ('pickleshare', '0.7.5'), ('pip', '23.1.2'), ('prompt-toolkit', '3.0.39'), ('psycopg2-binary', '2.9.6'), ('ptyprocess', '0.7.0'), ('pure-eval', '0.2.2'), ('pydantic', '1.10.11'), ('pygments', '2.15.1'), ('python-dotenv', '1.0.0'), ('python-json-logger', '2.0.7'), ('pyyaml', '6.0'), ('regex', '2023.6.3'), ('requests', '2.31.0'), ('rich', '13.4.2'), ('setuptools', '65.5.1'), ('six', '1.16.0'), ('slack-bolt', '1.18.0'), ('slack-sdk', '3.21.3'), ('sqlalchemy', '2.0.18'), ('stack-data', '0.6.2'), ('tenacity', '8.2.2'), ('tiktoken', '0.4.0'), ('tqdm', '4.65.0'), ('traitlets', '5.9.0'), ('types-requests', '2.31.0.1'), ('types-urllib3', '1.26.25.13'), ('typing-inspect', '0.9.0'), ('typing_extensions', '4.7.1'), ('urllib3', '2.0.3'), ('watermark', '2.4.3'), ('wcwidth', '0.2.6'), ('werkzeug', '2.3.6'), ('wheel', '0.40.0'), ('yarl', '1.9.2'), ('zipp', '3.16.0')]\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```python\r\ntarget_query = 'What are the hyve rules?'\r\nfacts_docs = [\r\n    Document(page_content=f)\r\n    for f in [x.strip() for x in \"\"\"\r\n        Under the banner of privacy, hyve empowers you to determine the visibility of your goals, providing you with options like Public (all hyve members can see your goal), Friends (only your trusted hyve connections can), and Private (for secret missions where you can personally invite the desired ones)\r\n        At hyve, we're all about protecting your details and your privacy, making sure everything stays safe and secure\r\n        The main goal of hyve is to provide you with the tools to reach your financial goals as quickly as possible, our motto is: \"Get there faster!\"\r\n        Resting as the sole financial community composed entirely of 100% verified real users, hyve assures that each user is genuine and verified, enhancing the safety of you and our community\r\n        Designed with privacy as a top priority, hyve puts the power in your hands to control exactly who you share your goals with\r\n        hyve prioritizes your personal data protection and privacy rights, using your data exclusively to expedite the achievement of your goals without sharing your information with any other parties, for more info please visit https://app.letshyve.com/privacy-policy\r\n        Being the master of your privacy and investment strategies, you have full control over your goal visibility, making hyve a perfect partner for your financial journey\r\n        The Round-Up Rule in hyve integrates savings into your daily habits by rounding up your everyday expenses, depositing the surplus into your savings goal, e.g. if you purchase a cup of coffee for $2.25, hyve rounds it up to $3, directing the $0.75 difference to your savings\r\n        The Automatic Rule in hyve enables our AI engine to analyze your income and spending habits, thereby determining how much you can safely save, so you don't have to worry about it\r\n        The Recurring Rule in hyve streamlines your savings by automatically transferring a specified amount to your savings on a set schedule, making saving as effortless as possible\r\n        The Matching Rule in hyve allows you to double your savings by having another user match every dollar you save towards a goal, creating a savings buddy experience\r\n    \"\"\".strip().split('\\n')]\r\n]\r\nretriever = FAISS.from_documents(facts_docs, OpenAIEmbeddings())\r\ndocs = '\\n'.join(d.page_content for d in retriever.similarity_search(target_query, k=10))\r\nprint(docs)\r\nfor a in ['Round-Up', 'Automatic', 'Recurring', 'Matching']:\r\n    assert a in docs, f'{a} not in docs'\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe words that contain most information above are `hyve` and `rule`, it should return the lines which define the `Round-Up Rule in hyve`, `Automatic Rule in hyve`, `Recurring Rule in hyve`, `Matching Rule in hyve`.\r\n\r\ninstead, the best 2 result it finds are:\r\n> At hyve, we're all about protecting your details and your privacy, making sure everything stays safe and secure\r\n\r\nand\r\n\r\n> Under the banner of privacy, hyve empowers you to determine the visibility of your goals, providing you with options like Public (all hyve members can see your goal), Friends (only your trusted hyve connections can), and Private (for secret missions where you can personally invite the desired ones)\r\n\r\nwhich don't even have the word `rule` in them or have anything to do with rules.\r\n\r\n\r\nThe full list of results are:\r\n```\r\nAt hyve, we're all about protecting your details and your privacy, making sure everything stays safe and secure\r\nUnder the banner of privacy, hyve empowers you to determine the visibility of your goals, providing you with options like Public (all hyve members can see your goal), Friends (only your trusted hyve connections can), and Private (for secret missions where you can personally invite the desired ones)\r\nThe Automatic Rule in hyve enables our AI engine to analyze your income and spending habits, thereby determining how much you can safely save, so you don't have to worry about it\r\nDesigned with privacy as a top priority, hyve puts the power in your hands to control exactly who you share your goals with\r\nThe main goal of hyve is to provide you with the tools to reach your financial goals as quickly as possible, our motto is: \"Get there faster!\"\r\nResting as the sole financial community composed entirely of 100% verified real users, hyve assures that each user is genuine and verified, enhancing the safety of you and our community\r\nhyve prioritizes your personal data protection and privacy rights, using your data exclusively to expedite the achievement of your goals without sharing your information with any other parties, for more info please visit https://app.letshyve.com/privacy-policy\r\nThe Recurring Rule in hyve streamlines your savings by automatically transferring a specified amount to your savings on a set schedule, making saving as effortless as possible\r\nThe Matching Rule in hyve allows you to double your savings by having another user match every dollar you save towards a goal, creating a savings buddy experience\r\nBeing the master of your privacy and investment strategies, you have full control over your goal visibility, making hyve a perfect partner for your financial journey\r\n```\r\n\r\nwhich don't even include the `Round-Up Rule in hyve` line in the top 10.\r\n\r\nI've tried every open source VectorStore I could find (FAISS, Chrome, Annoy, DocArray, Qdrant, scikit-learn, etc), they all returned the exact same list.\r\nI also tried making everything lowercase (it did help with other queries, here it didn't).\r\nI also tried with relevancy score (getting 10x as many and sorting myself), which did help in other cases, but not here.\r\n\r\nAny suggestion is welcome, especially if the error is on my side.\r\n\r\nThanks!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7427/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7427/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7426",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7426/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7426/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7426/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7426",
        "id": 1795324312,
        "node_id": "I_kwDOIPDwls5rAnmY",
        "number": 7426,
        "title": "TypeError: Object of type PromptTemplate is not JSON serializable",
        "user": {
            "login": "Chen-X666",
            "id": 55039294,
            "node_id": "MDQ6VXNlcjU1MDM5Mjk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/55039294?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Chen-X666",
            "html_url": "https://github.com/Chen-X666",
            "followers_url": "https://api.github.com/users/Chen-X666/followers",
            "following_url": "https://api.github.com/users/Chen-X666/following{/other_user}",
            "gists_url": "https://api.github.com/users/Chen-X666/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Chen-X666/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Chen-X666/subscriptions",
            "organizations_url": "https://api.github.com/users/Chen-X666/orgs",
            "repos_url": "https://api.github.com/users/Chen-X666/repos",
            "events_url": "https://api.github.com/users/Chen-X666/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Chen-X666/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T10:02:36Z",
        "updated_at": "2023-10-15T16:04:53Z",
        "closed_at": "2023-10-15T16:04:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In[15], line 15\r\n     12 qa = RetrievalQA(combine_documents_chain=qa_chain, retriever=retriever.as_retriever())\r\n     14 query = \"halo\"\r\n---> 15 qa.run(query)\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/base.py:440, in Chain.run(self, callbacks, tags, metadata, *args, **kwargs)\r\n    438     if len(args) != 1:\r\n    439         raise ValueError(\"`run` supports only one positional argument.\")\r\n--> 440     return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[\r\n    441         _output_key\r\n    442     ]\r\n    444 if kwargs and not args:\r\n    445     return self(kwargs, callbacks=callbacks, tags=tags, metadata=metadata)[\r\n    446         _output_key\r\n    447     ]\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/base.py:243, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, metadata, include_run_info)\r\n    241 except (KeyboardInterrupt, Exception) as e:\r\n    242     run_manager.on_chain_error(e)\r\n--> 243     raise e\r\n    244 run_manager.on_chain_end(outputs)\r\n    245 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    246     inputs, outputs, return_only_outputs\r\n    247 )\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/base.py:237, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, metadata, include_run_info)\r\n    231 run_manager = callback_manager.on_chain_start(\r\n    232     dumpd(self),\r\n    233     inputs,\r\n    234 )\r\n    235 try:\r\n    236     outputs = (\r\n--> 237         self._call(inputs, run_manager=run_manager)\r\n    238         if new_arg_supported\r\n    239         else self._call(inputs)\r\n    240     )\r\n    241 except (KeyboardInterrupt, Exception) as e:\r\n    242     run_manager.on_chain_error(e)\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/retrieval_qa/base.py:131, in BaseRetrievalQA._call(self, inputs, run_manager)\r\n    129 else:\r\n    130     docs = self._get_docs(question)  # type: ignore[call-arg]\r\n--> 131 answer = self.combine_documents_chain.run(\r\n    132     input_documents=docs, question=question, callbacks=_run_manager.get_child()\r\n    133 )\r\n    135 if self.return_source_documents:\r\n    136     return {self.output_key: answer, \"source_documents\": docs}\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/base.py:445, in Chain.run(self, callbacks, tags, metadata, *args, **kwargs)\r\n    440     return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[\r\n    441         _output_key\r\n    442     ]\r\n    444 if kwargs and not args:\r\n--> 445     return self(kwargs, callbacks=callbacks, tags=tags, metadata=metadata)[\r\n    446         _output_key\r\n    447     ]\r\n    449 if not kwargs and not args:\r\n    450     raise ValueError(\r\n    451         \"`run` supported with either positional arguments or keyword arguments,\"\r\n    452         \" but none were provided.\"\r\n    453     )\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/base.py:243, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, metadata, include_run_info)\r\n    241 except (KeyboardInterrupt, Exception) as e:\r\n    242     run_manager.on_chain_error(e)\r\n--> 243     raise e\r\n    244 run_manager.on_chain_end(outputs)\r\n    245 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    246     inputs, outputs, return_only_outputs\r\n    247 )\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/base.py:237, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, metadata, include_run_info)\r\n    231 run_manager = callback_manager.on_chain_start(\r\n    232     dumpd(self),\r\n    233     inputs,\r\n    234 )\r\n    235 try:\r\n    236     outputs = (\r\n--> 237         self._call(inputs, run_manager=run_manager)\r\n    238         if new_arg_supported\r\n    239         else self._call(inputs)\r\n    240     )\r\n    241 except (KeyboardInterrupt, Exception) as e:\r\n    242     run_manager.on_chain_error(e)\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/combine_documents/base.py:106, in BaseCombineDocumentsChain._call(self, inputs, run_manager)\r\n    104 # Other keys are assumed to be needed for LLM prediction\r\n    105 other_keys = {k: v for k, v in inputs.items() if k != self.input_key}\r\n--> 106 output, extra_return_dict = self.combine_docs(\r\n    107     docs, callbacks=_run_manager.get_child(), **other_keys\r\n    108 )\r\n    109 extra_return_dict[self.output_key] = output\r\n    110 return extra_return_dict\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/combine_documents/stuff.py:165, in StuffDocumentsChain.combine_docs(self, docs, callbacks, **kwargs)\r\n    163 inputs = self._get_inputs(docs, **kwargs)\r\n    164 # Call predict on the LLM.\r\n--> 165 return self.llm_chain.predict(callbacks=callbacks, **inputs), {}\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/llm.py:252, in LLMChain.predict(self, callbacks, **kwargs)\r\n    237 def predict(self, callbacks: Callbacks = None, **kwargs: Any) -> str:\r\n    238     \"\"\"Format prompt with kwargs and pass to LLM.\r\n    239 \r\n    240     Args:\r\n   (...)\r\n    250             completion = llm.predict(adjective=\"funny\")\r\n    251     \"\"\"\r\n--> 252     return self(kwargs, callbacks=callbacks)[self.output_key]\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/base.py:243, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, metadata, include_run_info)\r\n    241 except (KeyboardInterrupt, Exception) as e:\r\n    242     run_manager.on_chain_error(e)\r\n--> 243     raise e\r\n    244 run_manager.on_chain_end(outputs)\r\n    245 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    246     inputs, outputs, return_only_outputs\r\n    247 )\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/base.py:237, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, metadata, include_run_info)\r\n    231 run_manager = callback_manager.on_chain_start(\r\n    232     dumpd(self),\r\n    233     inputs,\r\n    234 )\r\n    235 try:\r\n    236     outputs = (\r\n--> 237         self._call(inputs, run_manager=run_manager)\r\n    238         if new_arg_supported\r\n    239         else self._call(inputs)\r\n    240     )\r\n    241 except (KeyboardInterrupt, Exception) as e:\r\n    242     run_manager.on_chain_error(e)\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/llm.py:92, in LLMChain._call(self, inputs, run_manager)\r\n     87 def _call(\r\n     88     self,\r\n     89     inputs: Dict[str, Any],\r\n     90     run_manager: Optional[CallbackManagerForChainRun] = None,\r\n     91 ) -> Dict[str, str]:\r\n---> 92     response = self.generate([inputs], run_manager=run_manager)\r\n     93     return self.create_outputs(response)[0]\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chains/llm.py:102, in LLMChain.generate(self, input_list, run_manager)\r\n    100 \"\"\"Generate LLM result from inputs.\"\"\"\r\n    101 prompts, stop = self.prep_prompts(input_list, run_manager=run_manager)\r\n--> 102 return self.llm.generate_prompt(\r\n    103     prompts,\r\n    104     stop,\r\n    105     callbacks=run_manager.get_child() if run_manager else None,\r\n    106     **self.llm_kwargs,\r\n    107 )\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chat_models/base.py:230, in BaseChatModel.generate_prompt(self, prompts, stop, callbacks, **kwargs)\r\n    222 def generate_prompt(\r\n    223     self,\r\n    224     prompts: List[PromptValue],\r\n   (...)\r\n    227     **kwargs: Any,\r\n    228 ) -> LLMResult:\r\n    229     prompt_messages = [p.to_messages() for p in prompts]\r\n--> 230     return self.generate(prompt_messages, stop=stop, callbacks=callbacks, **kwargs)\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chat_models/base.py:125, in BaseChatModel.generate(self, messages, stop, callbacks, tags, metadata, **kwargs)\r\n    123         if run_managers:\r\n    124             run_managers[i].on_llm_error(e)\r\n--> 125         raise e\r\n    126 flattened_outputs = [\r\n    127     LLMResult(generations=[res.generations], llm_output=res.llm_output)\r\n    128     for res in results\r\n    129 ]\r\n    130 llm_output = self._combine_llm_outputs([res.llm_output for res in results])\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chat_models/base.py:115, in BaseChatModel.generate(self, messages, stop, callbacks, tags, metadata, **kwargs)\r\n    112 for i, m in enumerate(messages):\r\n    113     try:\r\n    114         results.append(\r\n--> 115             self._generate_with_cache(\r\n    116                 m,\r\n    117                 stop=stop,\r\n    118                 run_manager=run_managers[i] if run_managers else None,\r\n    119                 **kwargs,\r\n    120             )\r\n    121         )\r\n    122     except (KeyboardInterrupt, Exception) as e:\r\n    123         if run_managers:\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chat_models/base.py:262, in BaseChatModel._generate_with_cache(self, messages, stop, run_manager, **kwargs)\r\n    258     raise ValueError(\r\n    259         \"Asked to cache, but no cache found at `langchain.cache`.\"\r\n    260     )\r\n    261 if new_arg_supported:\r\n--> 262     return self._generate(\r\n    263         messages, stop=stop, run_manager=run_manager, **kwargs\r\n    264     )\r\n    265 else:\r\n    266     return self._generate(messages, stop=stop, **kwargs)\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chat_models/openai.py:371, in ChatOpenAI._generate(self, messages, stop, run_manager, **kwargs)\r\n    363     message = _convert_dict_to_message(\r\n    364         {\r\n    365             \"content\": inner_completion,\r\n   (...)\r\n    368         }\r\n    369     )\r\n    370     return ChatResult(generations=[ChatGeneration(message=message)])\r\n--> 371 response = self.completion_with_retry(messages=message_dicts, **params)\r\n    372 return self._create_chat_result(response)\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chat_models/openai.py:319, in ChatOpenAI.completion_with_retry(self, **kwargs)\r\n    315 @retry_decorator\r\n    316 def _completion_with_retry(**kwargs: Any) -> Any:\r\n    317     return self.client.create(**kwargs)\r\n--> 319 return _completion_with_retry(**kwargs)\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/tenacity/__init__.py:289, in BaseRetrying.wraps.<locals>.wrapped_f(*args, **kw)\r\n    287 @functools.wraps(f)\r\n    288 def wrapped_f(*args: t.Any, **kw: t.Any) -> t.Any:\r\n--> 289     return self(f, *args, **kw)\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/tenacity/__init__.py:379, in Retrying.__call__(self, fn, *args, **kwargs)\r\n    377 retry_state = RetryCallState(retry_object=self, fn=fn, args=args, kwargs=kwargs)\r\n    378 while True:\r\n--> 379     do = self.iter(retry_state=retry_state)\r\n    380     if isinstance(do, DoAttempt):\r\n    381         try:\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/tenacity/__init__.py:314, in BaseRetrying.iter(self, retry_state)\r\n    312 is_explicit_retry = fut.failed and isinstance(fut.exception(), TryAgain)\r\n    313 if not (is_explicit_retry or self.retry(retry_state)):\r\n--> 314     return fut.result()\r\n    316 if self.after is not None:\r\n    317     self.after(retry_state)\r\n\r\nFile /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/concurrent/futures/_base.py:438, in Future.result(self, timeout)\r\n    436     raise CancelledError()\r\n    437 elif self._state == FINISHED:\r\n--> 438     return self.__get_result()\r\n    440 self._condition.wait(timeout)\r\n    442 if self._state in [CANCELLED, CANCELLED_AND_NOTIFIED]:\r\n\r\nFile /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/concurrent/futures/_base.py:390, in Future.__get_result(self)\r\n    388 if self._exception:\r\n    389     try:\r\n--> 390         raise self._exception\r\n    391     finally:\r\n    392         # Break a reference cycle with the exception in self._exception\r\n    393         self = None\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/tenacity/__init__.py:382, in Retrying.__call__(self, fn, *args, **kwargs)\r\n    380 if isinstance(do, DoAttempt):\r\n    381     try:\r\n--> 382         result = fn(*args, **kwargs)\r\n    383     except BaseException:  # noqa: B902\r\n    384         retry_state.set_exception(sys.exc_info())  # type: ignore[arg-type]\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/langchain/chat_models/openai.py:317, in ChatOpenAI.completion_with_retry.<locals>._completion_with_retry(**kwargs)\r\n    315 @retry_decorator\r\n    316 def _completion_with_retry(**kwargs: Any) -> Any:\r\n--> 317     return self.client.create(**kwargs)\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/openai/api_resources/chat_completion.py:25, in ChatCompletion.create(cls, *args, **kwargs)\r\n     23 while True:\r\n     24     try:\r\n---> 25         return super().create(*args, **kwargs)\r\n     26     except TryAgain as e:\r\n     27         if timeout is not None and time.time() > start + timeout:\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/openai/api_resources/abstract/engine_api_resource.py:153, in EngineAPIResource.create(cls, api_key, api_base, api_type, request_id, api_version, organization, **params)\r\n    127 @classmethod\r\n    128 def create(\r\n    129     cls,\r\n   (...)\r\n    136     **params,\r\n    137 ):\r\n    138     (\r\n    139         deployment_id,\r\n    140         engine,\r\n   (...)\r\n    150         api_key, api_base, api_type, api_version, organization, **params\r\n    151     )\r\n--> 153     response, _, api_key = requestor.request(\r\n    154         \"post\",\r\n    155         url,\r\n    156         params=params,\r\n    157         headers=headers,\r\n    158         stream=stream,\r\n    159         request_id=request_id,\r\n    160         request_timeout=request_timeout,\r\n    161     )\r\n    163     if stream:\r\n    164         # must be an iterator\r\n    165         assert not isinstance(response, OpenAIResponse)\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/openai/api_requestor.py:288, in APIRequestor.request(self, method, url, params, headers, files, stream, request_id, request_timeout)\r\n    277 def request(\r\n    278     self,\r\n    279     method,\r\n   (...)\r\n    286     request_timeout: Optional[Union[float, Tuple[float, float]]] = None,\r\n    287 ) -> Tuple[Union[OpenAIResponse, Iterator[OpenAIResponse]], bool, str]:\r\n--> 288     result = self.request_raw(\r\n    289         method.lower(),\r\n    290         url,\r\n    291         params=params,\r\n    292         supplied_headers=headers,\r\n    293         files=files,\r\n    294         stream=stream,\r\n    295         request_id=request_id,\r\n    296         request_timeout=request_timeout,\r\n    297     )\r\n    298     resp, got_stream = self._interpret_response(result, stream)\r\n    299     return resp, got_stream, self.api_key\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/openai/api_requestor.py:581, in APIRequestor.request_raw(self, method, url, params, supplied_headers, files, stream, request_id, request_timeout)\r\n    569 def request_raw(\r\n    570     self,\r\n    571     method,\r\n   (...)\r\n    579     request_timeout: Optional[Union[float, Tuple[float, float]]] = None,\r\n    580 ) -> requests.Response:\r\n--> 581     abs_url, headers, data = self._prepare_request_raw(\r\n    582         url, supplied_headers, method, params, files, request_id\r\n    583     )\r\n    585     if not hasattr(_thread_context, \"session\"):\r\n    586         _thread_context.session = _make_session()\r\n\r\nFile /Volumes/Samsung_T7/Augmented-FinQA/venv/lib/python3.10/site-packages/openai/api_requestor.py:553, in APIRequestor._prepare_request_raw(self, url, supplied_headers, method, params, files, request_id)\r\n    551         data = params\r\n    552     if params and not files:\r\n--> 553         data = json.dumps(params).encode()\r\n    554         headers[\"Content-Type\"] = \"application/json\"\r\n    555 else:\r\n\r\nFile /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py:231, in dumps(obj, skipkeys, ensure_ascii, check_circular, allow_nan, cls, indent, separators, default, sort_keys, **kw)\r\n    226 # cached encoder\r\n    227 if (not skipkeys and ensure_ascii and\r\n    228     check_circular and allow_nan and\r\n    229     cls is None and indent is None and separators is None and\r\n    230     default is None and not sort_keys and not kw):\r\n--> 231     return _default_encoder.encode(obj)\r\n    232 if cls is None:\r\n    233     cls = JSONEncoder\r\n\r\nFile /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/encoder.py:199, in JSONEncoder.encode(self, o)\r\n    195         return encode_basestring(o)\r\n    196 # This doesn't pass the iterator directly to ''.join() because the\r\n    197 # exceptions aren't as detailed.  The list call should be roughly\r\n    198 # equivalent to the PySequence_Fast that ''.join() would do.\r\n--> 199 chunks = self.iterencode(o, _one_shot=True)\r\n    200 if not isinstance(chunks, (list, tuple)):\r\n    201     chunks = list(chunks)\r\n\r\nFile /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/encoder.py:257, in JSONEncoder.iterencode(self, o, _one_shot)\r\n    252 else:\r\n    253     _iterencode = _make_iterencode(\r\n    254         markers, self.default, _encoder, self.indent, floatstr,\r\n    255         self.key_separator, self.item_separator, self.sort_keys,\r\n    256         self.skipkeys, _one_shot)\r\n--> 257 return _iterencode(o, 0)\r\n\r\nFile /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/encoder.py:179, in JSONEncoder.default(self, o)\r\n    160 def default(self, o):\r\n    161     \"\"\"Implement this method in a subclass such that it returns\r\n    162     a serializable object for ``o``, or calls the base implementation\r\n    163     (to raise a ``TypeError``).\r\n   (...)\r\n    177 \r\n    178     \"\"\"\r\n--> 179     raise TypeError(f'Object of type {o.__class__.__name__} '\r\n    180                     f'is not JSON serializable')\r\n\r\nTypeError: Object of type PromptTemplate is not JSON serializable\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.prompts import PromptTemplate\r\nprompt_template = \"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\r\n\r\nQuestion: {question}\r\nAnswer in Italian:\"\"\"\r\nPROMPT = PromptTemplate(\r\n    template=prompt_template, input_variables=[\"question\"]\r\n)\r\nchain_type_kwargs = {\"prompt\": PROMPT}\r\nllm = ChatOpenAI(model_name = \"gpt-3.5-turbo\",temperature=0,model_kwargs=chain_type_kwargs)\r\nqa_chain = load_qa_chain(llm=llm, chain_type=\"stuff\",verbose=True)\r\nqa = RetrievalQA(combine_documents_chain=qa_chain, retriever=retriever.as_retriever())\r\nquery = \"halo\"\r\nqa.run(query)\n\n### Expected behavior\n\nHope to use the PromptTemplate in QA",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7426/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7426/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7425",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7425/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7425/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7425/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7425",
        "id": 1795311424,
        "node_id": "PR_kwDOIPDwls5VApkm",
        "number": 7425,
        "title": "feat(module): add param ids to ElasticVectorSearch.from_texts method",
        "user": {
            "login": "charosen",
            "id": 12933334,
            "node_id": "MDQ6VXNlcjEyOTMzMzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12933334?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charosen",
            "html_url": "https://github.com/charosen",
            "followers_url": "https://api.github.com/users/charosen/followers",
            "following_url": "https://api.github.com/users/charosen/following{/other_user}",
            "gists_url": "https://api.github.com/users/charosen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charosen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charosen/subscriptions",
            "organizations_url": "https://api.github.com/users/charosen/orgs",
            "repos_url": "https://api.github.com/users/charosen/repos",
            "events_url": "https://api.github.com/users/charosen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charosen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T09:19:39Z",
        "updated_at": "2023-07-10T06:25:35Z",
        "closed_at": "2023-07-10T06:25:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7425",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7425",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7425.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7425.patch",
            "merged_at": "2023-07-10T06:25:35Z"
        },
        "body": "# add param ids to ElasticVectorSearch.from_texts method.\r\n\r\n- Description: add param ids to ElasticVectorSearch.from_texts method.\r\n- Issue: NA. It seems `add_texts` already supports passing in document ids, but param `ids` is omitted in `from_texts` classmethod, \r\n- Dependencies: None,\r\n- Tag maintainer: @rlancemartin, @eyurtsev please have a look, thanks\r\n\r\n```\r\n    # ElasticVectorSearch add_texts\r\n    def add_texts(\r\n        self,\r\n        texts: Iterable[str],\r\n        metadatas: Optional[List[dict]] = None,\r\n        refresh_indices: bool = True,\r\n        ids: Optional[List[str]] = None,\r\n        **kwargs: Any,\r\n    ) -> List[str]:\r\n        ...\r\n\r\n```\r\n\r\n```\r\n    # ElasticVectorSearch from_texts\r\n    @classmethod\r\n    def from_texts(\r\n        cls,\r\n        texts: List[str],\r\n        embedding: Embeddings,\r\n        metadatas: Optional[List[dict]] = None,\r\n        elasticsearch_url: Optional[str] = None,\r\n        index_name: Optional[str] = None,\r\n        refresh_indices: bool = True,\r\n        **kwargs: Any,\r\n    ) -> ElasticVectorSearch:\r\n\r\n```\r\n\r\n```\r\n    # FAISS from_texts\r\n    @classmethod\r\n    def from_texts(\r\n        cls,\r\n        texts: List[str],\r\n        embedding: Embeddings,\r\n        metadatas: Optional[List[dict]] = None,\r\n        ids: Optional[List[str]] = None,    # ids support    <--\r\n        **kwargs: Any,\r\n    ) -> FAISS:\r\n```\r\n\r\n\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7425/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7425/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7424",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7424/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7424/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7424/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7424",
        "id": 1795274487,
        "node_id": "PR_kwDOIPDwls5VAi0U",
        "number": 7424,
        "title": "SelfQueryRetriever fails if lark is not installed, but the failure message is not meaningful",
        "user": {
            "login": "rajib76",
            "id": 16340036,
            "node_id": "MDQ6VXNlcjE2MzQwMDM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16340036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rajib76",
            "html_url": "https://github.com/rajib76",
            "followers_url": "https://api.github.com/users/rajib76/followers",
            "following_url": "https://api.github.com/users/rajib76/following{/other_user}",
            "gists_url": "https://api.github.com/users/rajib76/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rajib76/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rajib76/subscriptions",
            "organizations_url": "https://api.github.com/users/rajib76/orgs",
            "repos_url": "https://api.github.com/users/rajib76/repos",
            "events_url": "https://api.github.com/users/rajib76/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rajib76/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-09T07:13:15Z",
        "updated_at": "2023-07-10T07:02:02Z",
        "closed_at": "2023-07-10T07:02:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7424",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7424",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7424.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7424.patch",
            "merged_at": null
        },
        "body": "  - Description: When we execute SelfQueryRetriever, it will fail if lark is not imported. But the failure message is not meaningful. It just says \"TypeError: 'NoneType' object is not callable\". This change will provide a meaningful message to import lark\r\n  - Issue: N/A\r\n  - Dependencies: None\r\n  - Tag maintainer: @rlancemartin, @eyurtsev\r\n  - Twitter handle: N/A",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7424/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7424/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7421",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7421/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7421/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7421/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7421",
        "id": 1795189886,
        "node_id": "PR_kwDOIPDwls5VAS2O",
        "number": 7421,
        "title": "docs(agents/agent_types): Fix code example in chat_conversation_agent.mdx",
        "user": {
            "login": "finnless",
            "id": 6785029,
            "node_id": "MDQ6VXNlcjY3ODUwMjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6785029?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/finnless",
            "html_url": "https://github.com/finnless",
            "followers_url": "https://api.github.com/users/finnless/followers",
            "following_url": "https://api.github.com/users/finnless/following{/other_user}",
            "gists_url": "https://api.github.com/users/finnless/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/finnless/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/finnless/subscriptions",
            "organizations_url": "https://api.github.com/users/finnless/orgs",
            "repos_url": "https://api.github.com/users/finnless/repos",
            "events_url": "https://api.github.com/users/finnless/events{/privacy}",
            "received_events_url": "https://api.github.com/users/finnless/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-09T01:17:55Z",
        "updated_at": "2023-07-12T06:21:16Z",
        "closed_at": "2023-07-12T06:21:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7421",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7421",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7421.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7421.patch",
            "merged_at": null
        },
        "body": "  - Description: Adds missing code to the example so it can be run. Copied from [conversational agent example](https://python.langchain.com/docs/modules/agents/agent_types/chat_conversation_agent.html).\r\n  - Issue: -\r\n  - Dependencies: -\r\n  - Tag maintainer: @baskaryan\r\n  - Twitter handle: @finnless\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7421/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7421/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7420",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7420/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7420/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7420/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7420",
        "id": 1795181618,
        "node_id": "PR_kwDOIPDwls5VARTO",
        "number": 7420,
        "title": "docs(agents/agent_types) Fix ReAct link index.mdx",
        "user": {
            "login": "finnless",
            "id": 6785029,
            "node_id": "MDQ6VXNlcjY3ODUwMjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6785029?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/finnless",
            "html_url": "https://github.com/finnless",
            "followers_url": "https://api.github.com/users/finnless/followers",
            "following_url": "https://api.github.com/users/finnless/following{/other_user}",
            "gists_url": "https://api.github.com/users/finnless/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/finnless/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/finnless/subscriptions",
            "organizations_url": "https://api.github.com/users/finnless/orgs",
            "repos_url": "https://api.github.com/users/finnless/repos",
            "events_url": "https://api.github.com/users/finnless/events{/privacy}",
            "received_events_url": "https://api.github.com/users/finnless/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-09T00:40:35Z",
        "updated_at": "2023-08-10T23:58:41Z",
        "closed_at": "2023-08-10T23:58:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7420",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7420",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7420.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7420.patch",
            "merged_at": null
        },
        "body": "  - Description: Fix ReAct paper link which currently goes to [MRKL](https://arxiv.org/pdf/2205.00445.pdf) paper instead of the [ReAct paper](https://react-lm.github.io/). The [ReAct agent type page](https://python.langchain.com/docs/modules/agents/agent_types/react.html) links to the paper correctly.\r\n  - Issue: -\r\n  - Dependencies: -\r\n  - Tag maintainer: @baskaryan\r\n  - Twitter handle: @finnless",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7420/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7420/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7417",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7417/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7417/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7417/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7417",
        "id": 1795167080,
        "node_id": "PR_kwDOIPDwls5VAOom",
        "number": 7417,
        "title": "docs(agents/toolkits): Fix error in document_comparison_toolkit.ipynb",
        "user": {
            "login": "finnless",
            "id": 6785029,
            "node_id": "MDQ6VXNlcjY3ODUwMjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6785029?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/finnless",
            "html_url": "https://github.com/finnless",
            "followers_url": "https://api.github.com/users/finnless/followers",
            "following_url": "https://api.github.com/users/finnless/following{/other_user}",
            "gists_url": "https://api.github.com/users/finnless/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/finnless/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/finnless/subscriptions",
            "organizations_url": "https://api.github.com/users/finnless/orgs",
            "repos_url": "https://api.github.com/users/finnless/repos",
            "events_url": "https://api.github.com/users/finnless/events{/privacy}",
            "received_events_url": "https://api.github.com/users/finnless/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-08T23:43:25Z",
        "updated_at": "2023-07-08T23:51:08Z",
        "closed_at": "2023-07-08T23:51:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7417",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7417",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7417.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7417.patch",
            "merged_at": "2023-07-08T23:51:08Z"
        },
        "body": "Replace this comment with:\r\n  - Description: Removes unneeded output warning in documentation at https://python.langchain.com/docs/modules/agents/toolkits/document_comparison_toolkit\r\n  - Issue: -\r\n  - Dependencies: -\r\n  - Tag maintainer: @baskaryan\r\n  - Twitter handle: @finnless\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7417/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7417/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7416",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7416/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7416/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7416/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7416",
        "id": 1795151702,
        "node_id": "PR_kwDOIPDwls5VAL67",
        "number": 7416,
        "title": "Fix typo",
        "user": {
            "login": "BioGeek",
            "id": 59344,
            "node_id": "MDQ6VXNlcjU5MzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/59344?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BioGeek",
            "html_url": "https://github.com/BioGeek",
            "followers_url": "https://api.github.com/users/BioGeek/followers",
            "following_url": "https://api.github.com/users/BioGeek/following{/other_user}",
            "gists_url": "https://api.github.com/users/BioGeek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BioGeek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BioGeek/subscriptions",
            "organizations_url": "https://api.github.com/users/BioGeek/orgs",
            "repos_url": "https://api.github.com/users/BioGeek/repos",
            "events_url": "https://api.github.com/users/BioGeek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BioGeek/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-08T22:33:47Z",
        "updated_at": "2023-07-09T04:54:49Z",
        "closed_at": "2023-07-09T04:54:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7416",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7416",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7416.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7416.patch",
            "merged_at": "2023-07-09T04:54:49Z"
        },
        "body": "`quesitons` -> `questions`.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7416/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7416/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7415",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7415/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7415/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7415/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7415",
        "id": 1795149831,
        "node_id": "I_kwDOIPDwls5q_9AH",
        "number": 7415,
        "title": "Can you make system_prefix customizable?",
        "user": {
            "login": "kuangdai",
            "id": 9271974,
            "node_id": "MDQ6VXNlcjkyNzE5NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9271974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kuangdai",
            "html_url": "https://github.com/kuangdai",
            "followers_url": "https://api.github.com/users/kuangdai/followers",
            "following_url": "https://api.github.com/users/kuangdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/kuangdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kuangdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kuangdai/subscriptions",
            "organizations_url": "https://api.github.com/users/kuangdai/orgs",
            "repos_url": "https://api.github.com/users/kuangdai/repos",
            "events_url": "https://api.github.com/users/kuangdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kuangdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-08T22:26:17Z",
        "updated_at": "2023-10-14T20:09:47Z",
        "closed_at": "2023-10-14T20:09:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWe are using langchain for non-English applications. The prefix for system is hardcoded as \"System\":\r\n\r\n```python\r\nfor m in messages:\r\n        if isinstance(m, HumanMessage):\r\n            role = human_prefix\r\n        elif isinstance(m, AIMessage):\r\n            role = ai_prefix\r\n        elif isinstance(m, SystemMessage):\r\n            role = \"System\"\r\n        elif isinstance(m, FunctionMessage):\r\n            role = \"Function\"\r\n        elif isinstance(m, ChatMessage):\r\n            role = m.role\r\n        else:\r\n            raise ValueError(f\"Got unsupported message type: {m}\")\r\n```\r\n\r\nThe word \"System\" will appear in the prompt, e.g., when using summary-based memories. A sudden English word is not friendly to non-English LLMs.\r\n\n\n### Motivation\n\nImproving multi-language support.\n\n### Your contribution\n\nSorry. I am probably not capable enough of developing langchain.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7415/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7415/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7414",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7414/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7414/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7414/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7414",
        "id": 1795127219,
        "node_id": "PR_kwDOIPDwls5VAG11",
        "number": 7414,
        "title": "use LlamCpp as LlamaCppEmbeddings base, without model reloading",
        "user": {
            "login": "Romiroz",
            "id": 66079444,
            "node_id": "MDQ6VXNlcjY2MDc5NDQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/66079444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Romiroz",
            "html_url": "https://github.com/Romiroz",
            "followers_url": "https://api.github.com/users/Romiroz/followers",
            "following_url": "https://api.github.com/users/Romiroz/following{/other_user}",
            "gists_url": "https://api.github.com/users/Romiroz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Romiroz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Romiroz/subscriptions",
            "organizations_url": "https://api.github.com/users/Romiroz/orgs",
            "repos_url": "https://api.github.com/users/Romiroz/repos",
            "events_url": "https://api.github.com/users/Romiroz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Romiroz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-08T21:33:06Z",
        "updated_at": "2023-07-10T17:48:59Z",
        "closed_at": "2023-07-10T17:48:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7414",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7414",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7414.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7414.patch",
            "merged_at": null
        },
        "body": "When we use LlamaCpp and we need embeddings, earlier we load model in LlamaCpp in memory, then we create LlamaCppEmbeddings and load the same model again. After this modification we can create LlamaCppEmbeddings with existing LlamaCpp model and use as always. Reduce needed memory, reduce time for loading.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7414/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7414/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7413",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7413/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7413/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7413/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7413",
        "id": 1795075775,
        "node_id": "PR_kwDOIPDwls5U_78l",
        "number": 7413,
        "title": "Adds async support to agent return_stopped_response",
        "user": {
            "login": "soysal",
            "id": 2403965,
            "node_id": "MDQ6VXNlcjI0MDM5NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2403965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/soysal",
            "html_url": "https://github.com/soysal",
            "followers_url": "https://api.github.com/users/soysal/followers",
            "following_url": "https://api.github.com/users/soysal/following{/other_user}",
            "gists_url": "https://api.github.com/users/soysal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/soysal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/soysal/subscriptions",
            "organizations_url": "https://api.github.com/users/soysal/orgs",
            "repos_url": "https://api.github.com/users/soysal/repos",
            "events_url": "https://api.github.com/users/soysal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/soysal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "agola11",
                "id": 9536492,
                "node_id": "MDQ6VXNlcjk1MzY0OTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/agola11",
                "html_url": "https://github.com/agola11",
                "followers_url": "https://api.github.com/users/agola11/followers",
                "following_url": "https://api.github.com/users/agola11/following{/other_user}",
                "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
                "organizations_url": "https://api.github.com/users/agola11/orgs",
                "repos_url": "https://api.github.com/users/agola11/repos",
                "events_url": "https://api.github.com/users/agola11/events{/privacy}",
                "received_events_url": "https://api.github.com/users/agola11/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-08T19:30:50Z",
        "updated_at": "2023-08-26T16:14:52Z",
        "closed_at": "2023-08-26T16:14:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7413",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7413",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7413.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7413.patch",
            "merged_at": null
        },
        "body": "  - Description: Commit adds an async function `areturn_stopped_response` to use with AgentExecute._acall. Common code parts shared between `areturn_stopped_response` and `return_stopped_response` are extracted to 2 new member utility functions  named `_collect_inputs` and `_parse_outputs`. \r\n  - Issue: NA: When Agent.llm_chain has an Async Callback, `return_stopped_response` causes error in AgentExecutor.__acall()\r\n  - Dependencies: None\r\n  - Tag maintainer: @agola11,\r\n  - Twitter handle: @soysal_net",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7413/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7413/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7412",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7412/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7412/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7412/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7412",
        "id": 1795070373,
        "node_id": "I_kwDOIPDwls5q_pml",
        "number": 7412,
        "title": "Pipe `intermediate_steps` out of map_reduce.run()",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-08T19:14:30Z",
        "updated_at": "2023-11-03T11:54:54Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nPipe `intermediate_steps` out of MR chain:\r\n```\r\n# Combining documents by mapping a chain over them, then combining results\r\n    combine_documents = MapReduceDocumentsChain(\r\n        # Map chain\r\n        llm_chain=map_llm_chain,\r\n        # Reduce chain\r\n        reduce_documents_chain=reduce_documents_chain,\r\n        # The variable name in the llm_chain to put the documents in\r\n        document_variable_name=\"questions\",\r\n        # Return the results of the map steps in the output\r\n        return_intermediate_steps=True)\r\n        \r\n    # Define Map=Reduce\r\n    map_reduce = MapReduceChain(\r\n        # Chain to combine documents\r\n        combine_documents_chain=combine_documents,\r\n        # Splitter to use for initial split\r\n        text_splitter=text_splitter)\r\n    \r\n    return map_reduce.run(input_text=input_doc)\r\n```\r\n\r\nError:\r\n```\r\nValueError: `run` not supported when there is not exactly one output key. Got ['output_text', 'intermediate_steps'].\r\n```\n\n### Motivation\n\nWe want to return the intermediate docs\n\n### Your contribution\n\nWill work on this",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7412/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7412/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7411",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7411/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7411/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7411/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7411",
        "id": 1795068803,
        "node_id": "I_kwDOIPDwls5q_pOD",
        "number": 7411,
        "title": "InvalidRequestError: This model's maximum context length is 4097 tokens. However, your messages resulted in 5822 tokens. Please reduce the length of the messages.",
        "user": {
            "login": "nithinreddyyyyyy",
            "id": 129744879,
            "node_id": "U_kgDOB7u_7w",
            "avatar_url": "https://avatars.githubusercontent.com/u/129744879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nithinreddyyyyyy",
            "html_url": "https://github.com/nithinreddyyyyyy",
            "followers_url": "https://api.github.com/users/nithinreddyyyyyy/followers",
            "following_url": "https://api.github.com/users/nithinreddyyyyyy/following{/other_user}",
            "gists_url": "https://api.github.com/users/nithinreddyyyyyy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nithinreddyyyyyy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nithinreddyyyyyy/subscriptions",
            "organizations_url": "https://api.github.com/users/nithinreddyyyyyy/orgs",
            "repos_url": "https://api.github.com/users/nithinreddyyyyyy/repos",
            "events_url": "https://api.github.com/users/nithinreddyyyyyy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nithinreddyyyyyy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-08T19:08:53Z",
        "updated_at": "2023-11-15T16:07:44Z",
        "closed_at": "2023-11-15T16:07:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHey! Below is the code i'm using\r\n\r\n```\r\nllm_name = \"gpt-3.5-turbo\"\r\n# llm_name = \"gpt-4\"\r\nos.environ[\"OPENAI_API_KEY\"] = \"\"\r\n\r\nst.set_page_config(layout=\"wide\")\r\n\r\ndef load_db(file_path, chain_type, k):\r\n    loader = PyPDFLoader(file_path)\r\n    documents = loader.load()\r\n    text_splitter = RecursiveCharacterTextSplitter(chunk_size=2000, chunk_overlap=300)\r\n    docs = text_splitter.split_documents(documents)\r\n    embeddings = OpenAIEmbeddings()\r\n    db = DocArrayInMemorySearch.from_documents(docs, embeddings)\r\n    retriever = db.as_retriever(search_type=\"similarity\", search_kwargs={\"k\": k})\r\n    qa = ConversationalRetrievalChain.from_llm(\r\n        llm=ChatOpenAI(model_name=llm_name, temperature=1), \r\n        chain_type=chain_type, \r\n        retriever=retriever, \r\n        return_source_documents=False,\r\n        return_generated_question=False\r\n    )\r\n    return qa \r\n```\r\n\r\nEven though i'm using RecursiveCharacterTextSplitter function, it is returning below error. \r\n\r\n`InvalidRequestError: This model's maximum context length is 4097 tokens. However, your messages resulted in 5822 tokens. Please reduce the length of the messages.`\r\n\r\nIs there anything which will fix this issue?\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n-\n\n### Expected behavior\n\nI'm using RecursiveCharacterTextSplitter function where it'll make use of the function and will exceed the context length. It should work right?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7411/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7411/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7409",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7409/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7409/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7409/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7409",
        "id": 1795045510,
        "node_id": "PR_kwDOIPDwls5U_1mR",
        "number": 7409,
        "title": "Fix syntax erros in documentation",
        "user": {
            "login": "mogaal",
            "id": 134855,
            "node_id": "MDQ6VXNlcjEzNDg1NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/134855?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mogaal",
            "html_url": "https://github.com/mogaal",
            "followers_url": "https://api.github.com/users/mogaal/followers",
            "following_url": "https://api.github.com/users/mogaal/following{/other_user}",
            "gists_url": "https://api.github.com/users/mogaal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mogaal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mogaal/subscriptions",
            "organizations_url": "https://api.github.com/users/mogaal/orgs",
            "repos_url": "https://api.github.com/users/mogaal/repos",
            "events_url": "https://api.github.com/users/mogaal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mogaal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-08T18:25:01Z",
        "updated_at": "2023-07-08T23:52:02Z",
        "closed_at": "2023-07-08T23:52:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7409",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7409",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7409.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7409.patch",
            "merged_at": "2023-07-08T23:52:02Z"
        },
        "body": "\r\n- Description: Tiny documentation fix. In Python, when defining function parameters or providing arguments to a function or class constructor, we do not use the `:` character.\r\n- Issue: N/A\r\n- Dependencies: N/A,\r\n- Tag maintainer: @rlancemartin, @eyurtsev\r\n- Twitter handle: @mogaal\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7409/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7409/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7406",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7406/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7406/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7406/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7406",
        "id": 1795005669,
        "node_id": "I_kwDOIPDwls5q_Zzl",
        "number": 7406,
        "title": "Adding function to utilize normal models like distilbert, roberta etc",
        "user": {
            "login": "nithinreddyyyyyy",
            "id": 129744879,
            "node_id": "U_kgDOB7u_7w",
            "avatar_url": "https://avatars.githubusercontent.com/u/129744879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nithinreddyyyyyy",
            "html_url": "https://github.com/nithinreddyyyyyy",
            "followers_url": "https://api.github.com/users/nithinreddyyyyyy/followers",
            "following_url": "https://api.github.com/users/nithinreddyyyyyy/following{/other_user}",
            "gists_url": "https://api.github.com/users/nithinreddyyyyyy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nithinreddyyyyyy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nithinreddyyyyyy/subscriptions",
            "organizations_url": "https://api.github.com/users/nithinreddyyyyyy/orgs",
            "repos_url": "https://api.github.com/users/nithinreddyyyyyy/repos",
            "events_url": "https://api.github.com/users/nithinreddyyyyyy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nithinreddyyyyyy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-08T16:21:18Z",
        "updated_at": "2023-10-14T20:09:52Z",
        "closed_at": "2023-10-14T20:09:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI'm trying to create a Q&A application, where i'm using Vicuna and it's taking lot of time to return the response. Below is the code\r\n\r\n```\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.vectorstores import DocArrayInMemorySearch\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.document_loaders import PyPDFLoader\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nimport llama_cpp\r\nfrom run_localGPT import load_model\r\n\r\ndef load_db(file, chain_type, k):\r\n    # load documents\r\n    loader = PyPDFLoader(file)\r\n    documents = loader.load()\r\n\r\n    # split documents\r\n    text_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=150)\r\n    docs = text_splitter.split_documents(documents)\r\n\r\n    # define embedding\r\n    embeddings = HuggingFaceEmbeddings()\r\n\r\n    # create vector database from data\r\n    db = DocArrayInMemorySearch.from_documents(docs, embeddings)\r\n\r\n    # define retriever\r\n    retriever = db.as_retriever(search_type=\"similarity\", search_kwargs={\"k\": k})\r\n    \r\n    # create a chatbot chain. Memory is managed externally.\r\n    qa = ConversationalRetrievalChain.from_llm(\r\n        llm=load_model(model_id=\"TheBloke/Wizard-Vicuna-13B-Uncensored-GGML\", device_type=\"mps\", model_basename=\"Wizard-Vicuna-13B-Uncensored.ggmlv3.q2_K.bin\"),#ChatOpenAI(model_name=llm_name, temperature=0), \r\n        chain_type=chain_type, \r\n        retriever=retriever, \r\n        return_source_documents=True,\r\n        return_generated_question=True,\r\n    )\r\n    \r\n    return qa \r\n```\r\n\r\n\r\nI'm using Vicuna-13b model and hugging face embeddings. What i thought is that it'd be much better if i use hugging face embeddings and any benchmark q&a model, so that the return time will be less. Is there any to load normal models like distilbert, roberta or distilbert-base-uncased-distilled-squad etc?\n\n### Motivation\n\nTo utilize the benchmark models for better response time.\n\n### Your contribution\n\n-",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7406/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7406/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7404",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7404/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7404/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7404/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7404",
        "id": 1794989907,
        "node_id": "PR_kwDOIPDwls5U_rDn",
        "number": 7404,
        "title": "Template formats documentation",
        "user": {
            "login": "kdcokenny",
            "id": 99611484,
            "node_id": "U_kgDOBe_zXA",
            "avatar_url": "https://avatars.githubusercontent.com/u/99611484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kdcokenny",
            "html_url": "https://github.com/kdcokenny",
            "followers_url": "https://api.github.com/users/kdcokenny/followers",
            "following_url": "https://api.github.com/users/kdcokenny/following{/other_user}",
            "gists_url": "https://api.github.com/users/kdcokenny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kdcokenny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kdcokenny/subscriptions",
            "organizations_url": "https://api.github.com/users/kdcokenny/orgs",
            "repos_url": "https://api.github.com/users/kdcokenny/repos",
            "events_url": "https://api.github.com/users/kdcokenny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kdcokenny/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-08T15:35:44Z",
        "updated_at": "2023-07-12T01:39:25Z",
        "closed_at": "2023-07-11T22:24:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7404",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7404",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7404.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7404.patch",
            "merged_at": "2023-07-11T22:24:24Z"
        },
        "body": "Simple addition to the documentation, adding the correct import statement & showcasing using Python FStrings.\r\n\r\n@hwchase17 @baskaryan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7404/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7404/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7402",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7402/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7402/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7402/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7402",
        "id": 1794954384,
        "node_id": "I_kwDOIPDwls5q_NSQ",
        "number": 7402,
        "title": "Trying to merge a list of FAISS vectorstores without modifying the original vectorstores, but deepcopy() fails",
        "user": {
            "login": "maspotts",
            "id": 4096446,
            "node_id": "MDQ6VXNlcjQwOTY0NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4096446?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maspotts",
            "html_url": "https://github.com/maspotts",
            "followers_url": "https://api.github.com/users/maspotts/followers",
            "following_url": "https://api.github.com/users/maspotts/following{/other_user}",
            "gists_url": "https://api.github.com/users/maspotts/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maspotts/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maspotts/subscriptions",
            "organizations_url": "https://api.github.com/users/maspotts/orgs",
            "repos_url": "https://api.github.com/users/maspotts/repos",
            "events_url": "https://api.github.com/users/maspotts/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maspotts/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-08T14:05:34Z",
        "updated_at": "2023-10-21T16:07:25Z",
        "closed_at": "2023-10-21T16:07:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Hi: I'm trying to merge a list of `langchain.vectorstores.FAISS` objects to create a new (merged) vectorstore, but I still need the original (pre-merge) vectorstores intact.  I can use `x.merge_from(y)` which works great:\r\n\r\n`merged_stores = reduce(lambda x, y: (z := x).merge_from(y) or z, stores)\r\n`\r\n\r\nbut that modifies x in place, so my original list of vectorstores ends up with its first store containing a merge with all other elements of the list: which is not what I want.  So I tried using `deepcopy()` to make a temporary copy of the vectorstore I'm merging into:\r\n\r\n`merged_stores = reduce(lambda x, y: (z := deepcopy(x)).merge_from(y) or z, stores)\r\n`\r\n\r\nwhich does exactly what I want.  However, I now find that when I use a Universal Sentence Encoder embedding in the original list of vectorstores I get an exception from `deepcopy()`:\r\n\r\n`TypeError: cannot pickle '_thread.RLock' object`\r\n\r\nIs there an obvious way for me to achieve this (non-destructive) merge without adding my own `FAISS.merge_from_as_copy()` method to the `langchain.vectorstores.FAISS` class?\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7402/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7402/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7401",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7401/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7401/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7401/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7401",
        "id": 1794919448,
        "node_id": "PR_kwDOIPDwls5U_dmz",
        "number": 7401,
        "title": "Nested models & exclude fields",
        "user": {
            "login": "L4rryFisherman",
            "id": 99208478,
            "node_id": "U_kgDOBenNHg",
            "avatar_url": "https://avatars.githubusercontent.com/u/99208478?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/L4rryFisherman",
            "html_url": "https://github.com/L4rryFisherman",
            "followers_url": "https://api.github.com/users/L4rryFisherman/followers",
            "following_url": "https://api.github.com/users/L4rryFisherman/following{/other_user}",
            "gists_url": "https://api.github.com/users/L4rryFisherman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/L4rryFisherman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/L4rryFisherman/subscriptions",
            "organizations_url": "https://api.github.com/users/L4rryFisherman/orgs",
            "repos_url": "https://api.github.com/users/L4rryFisherman/repos",
            "events_url": "https://api.github.com/users/L4rryFisherman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/L4rryFisherman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-08T12:28:24Z",
        "updated_at": "2023-11-07T03:45:55Z",
        "closed_at": "2023-11-07T03:45:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7401",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7401",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7401.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7401.patch",
            "merged_at": null
        },
        "body": "\r\nDescription:\r\nAdd functionalities to the parser and output formatter:\r\n- Recursively retrieves fields from any nested models\r\n- Takes an optional list of fields of the (nested) model(s) to be excluded.\r\n- If any `required` fields are specified as excluded, the class will throw a warning and create a new Pydantic model is created for output instructions, and to parse against.\r\n\r\nDependencies: \r\n- `warnings`\r\n\r\nTag maintainer: \r\n@baskaryan \r\n\r\nPlease let me know if I should satisfy any additional requirements! :)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7401/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7401/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7400",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7400/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7400/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7400/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7400",
        "id": 1794909855,
        "node_id": "PR_kwDOIPDwls5U_bxE",
        "number": 7400,
        "title": "update cube_semantic.py",
        "user": {
            "login": "kunalvexpa",
            "id": 138849957,
            "node_id": "U_kgDOCEaupQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/138849957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kunalvexpa",
            "html_url": "https://github.com/kunalvexpa",
            "followers_url": "https://api.github.com/users/kunalvexpa/followers",
            "following_url": "https://api.github.com/users/kunalvexpa/following{/other_user}",
            "gists_url": "https://api.github.com/users/kunalvexpa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kunalvexpa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kunalvexpa/subscriptions",
            "organizations_url": "https://api.github.com/users/kunalvexpa/orgs",
            "repos_url": "https://api.github.com/users/kunalvexpa/repos",
            "events_url": "https://api.github.com/users/kunalvexpa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kunalvexpa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-08T11:58:08Z",
        "updated_at": "2023-11-07T03:46:07Z",
        "closed_at": "2023-11-07T03:46:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7400",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7400",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7400.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7400.patch",
            "merged_at": null
        },
        "body": "changed condition to  \"continue\" only if type == view or else get the cube,measure and dimension values from dict\r\n\r\n\r\n  - Description: changed condition to  \"continue\" only if type == view or else get the cube,measure and dimension values \r\n                         from dictionary, \r\n  - Issue: the issue was that the condition type!=view will meet the condition and skip all iterations because of the \"continue\" thus not extracting cube_name,dimension and measures from the cube iterator,\r\n  - Dependencies: no dependencies,\r\n  - Tag maintainer: @rlancemartin, @eyurtsev,\r\n  - Twitter handle: I am fine without any mention haha. \r\n\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7400/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7400/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7399",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7399/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7399/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7399/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7399",
        "id": 1794901701,
        "node_id": "PR_kwDOIPDwls5U_aLe",
        "number": 7399,
        "title": "docs(retrievers/get-started): Fix broken state_of_the_union.txt link",
        "user": {
            "login": "ftnext",
            "id": 21273221,
            "node_id": "MDQ6VXNlcjIxMjczMjIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/21273221?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ftnext",
            "html_url": "https://github.com/ftnext",
            "followers_url": "https://api.github.com/users/ftnext/followers",
            "following_url": "https://api.github.com/users/ftnext/following{/other_user}",
            "gists_url": "https://api.github.com/users/ftnext/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ftnext/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ftnext/subscriptions",
            "organizations_url": "https://api.github.com/users/ftnext/orgs",
            "repos_url": "https://api.github.com/users/ftnext/repos",
            "events_url": "https://api.github.com/users/ftnext/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ftnext/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-08T11:33:24Z",
        "updated_at": "2023-07-09T13:33:35Z",
        "closed_at": "2023-07-08T15:11:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7399",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7399",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7399.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7399.patch",
            "merged_at": "2023-07-08T15:11:06Z"
        },
        "body": "Thank you for this awesome library.\r\n\r\n- Description: Fix broken link in documentation \r\n- Issue:\r\n  - https://python.langchain.com/docs/modules/data_connection/retrievers/#get-started\r\n  - <img width=\"786\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/21273221/d8bd15dd-e73e-48b9-b034-2fdbcd0cbaea\">\r\n  - Click *here*, then see \"File not found\"\r\n  - the URL: https://github.com/hwchase17/langchain/blob/master/docs/modules/state_of_the_union.txt\r\n  - I think the right one is https://github.com/hwchase17/langchain/blob/master/docs/extras/modules/state_of_the_union.txt\r\n- Dependencies: -\r\n- Tag maintainer: @baskaryan\r\n- Twitter handle: -\r\n\r\n<!-- \r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7399/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7399/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7398",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7398/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7398/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7398/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7398",
        "id": 1794876476,
        "node_id": "PR_kwDOIPDwls5U_Vbh",
        "number": 7398,
        "title": "Add OpenAI organization ID to docs",
        "user": {
            "login": "schop-rob",
            "id": 49682405,
            "node_id": "MDQ6VXNlcjQ5NjgyNDA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/49682405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schop-rob",
            "html_url": "https://github.com/schop-rob",
            "followers_url": "https://api.github.com/users/schop-rob/followers",
            "following_url": "https://api.github.com/users/schop-rob/following{/other_user}",
            "gists_url": "https://api.github.com/users/schop-rob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schop-rob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schop-rob/subscriptions",
            "organizations_url": "https://api.github.com/users/schop-rob/orgs",
            "repos_url": "https://api.github.com/users/schop-rob/repos",
            "events_url": "https://api.github.com/users/schop-rob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schop-rob/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-08T10:08:30Z",
        "updated_at": "2023-07-12T00:51:58Z",
        "closed_at": "2023-07-12T00:51:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7398",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7398",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7398.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7398.patch",
            "merged_at": "2023-07-12T00:51:58Z"
        },
        "body": "Description: I added an example of how to reference the OpenAI API Organization ID, because I couldn't find it before. In the example, it is mentioned how to achieve this using environment variables as well as parameters for the OpenAI()-class\r\nIssue: -\r\nDependencies: -\r\nTag maintainer: @baskaryan\r\nTwitter @schop-rob",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7398/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7398/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7397",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7397/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7397/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7397/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7397",
        "id": 1794871750,
        "node_id": "PR_kwDOIPDwls5U_UZE",
        "number": 7397,
        "title": "improve description of JinaChat",
        "user": {
            "login": "delgermurun",
            "id": 492616,
            "node_id": "MDQ6VXNlcjQ5MjYxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/492616?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/delgermurun",
            "html_url": "https://github.com/delgermurun",
            "followers_url": "https://api.github.com/users/delgermurun/followers",
            "following_url": "https://api.github.com/users/delgermurun/following{/other_user}",
            "gists_url": "https://api.github.com/users/delgermurun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/delgermurun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/delgermurun/subscriptions",
            "organizations_url": "https://api.github.com/users/delgermurun/orgs",
            "repos_url": "https://api.github.com/users/delgermurun/repos",
            "events_url": "https://api.github.com/users/delgermurun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/delgermurun/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-08T10:01:07Z",
        "updated_at": "2023-07-09T16:02:30Z",
        "closed_at": "2023-07-08T14:57:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7397",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7397",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7397.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7397.patch",
            "merged_at": "2023-07-08T14:57:11Z"
        },
        "body": "very small doc string change in the `JinaChat` class.\r\n\r\n@hwchase17, @baskaryan\r\nThank you.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7397/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7397/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7395",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7395/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7395/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7395/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7395",
        "id": 1794842948,
        "node_id": "PR_kwDOIPDwls5U_PEb",
        "number": 7395,
        "title": "added SerpAPIKWARGWrapper class to retrieve specific serapi search result values",
        "user": {
            "login": "emarco177",
            "id": 44670213,
            "node_id": "MDQ6VXNlcjQ0NjcwMjEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/44670213?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/emarco177",
            "html_url": "https://github.com/emarco177",
            "followers_url": "https://api.github.com/users/emarco177/followers",
            "following_url": "https://api.github.com/users/emarco177/following{/other_user}",
            "gists_url": "https://api.github.com/users/emarco177/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/emarco177/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/emarco177/subscriptions",
            "organizations_url": "https://api.github.com/users/emarco177/orgs",
            "repos_url": "https://api.github.com/users/emarco177/repos",
            "events_url": "https://api.github.com/users/emarco177/events{/privacy}",
            "received_events_url": "https://api.github.com/users/emarco177/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-08T08:27:08Z",
        "updated_at": "2023-07-26T18:19:49Z",
        "closed_at": "2023-07-26T18:19:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7395",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7395",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7395.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7395.patch",
            "merged_at": null
        },
        "body": "Replace this comment with:\r\n  - Description: added SerpAPIKWARGWrapper class to retrieve specific search result values, \r\n  - Tag maintainer: @hinthornw,\r\n  - Twitter handle: EdenEmarco177\r\n  - \r\nIf you're adding a new integration, please include:\r\n  1. Done\r\n  2. Had issues editing the notebook so in PyCharm community edition , is there anyone who can assist?\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7395/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7395/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7394",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7394/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7394/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7394/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7394",
        "id": 1794816396,
        "node_id": "PR_kwDOIPDwls5U_KEV",
        "number": 7394,
        "title": "Enhance Makefile with 'format_diff' Option and Improved Readability",
        "user": {
            "login": "kzk-maeda",
            "id": 18380243,
            "node_id": "MDQ6VXNlcjE4MzgwMjQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/18380243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kzk-maeda",
            "html_url": "https://github.com/kzk-maeda",
            "followers_url": "https://api.github.com/users/kzk-maeda/followers",
            "following_url": "https://api.github.com/users/kzk-maeda/following{/other_user}",
            "gists_url": "https://api.github.com/users/kzk-maeda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kzk-maeda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kzk-maeda/subscriptions",
            "organizations_url": "https://api.github.com/users/kzk-maeda/orgs",
            "repos_url": "https://api.github.com/users/kzk-maeda/repos",
            "events_url": "https://api.github.com/users/kzk-maeda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kzk-maeda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-08T07:00:53Z",
        "updated_at": "2023-07-12T01:03:18Z",
        "closed_at": "2023-07-12T01:03:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7394",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7394",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7394.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7394.patch",
            "merged_at": "2023-07-12T01:03:18Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n\r\n\r\n### Description:\r\n\r\nThis PR introduces a new option format_diff to the existing Makefile. This option allows us to apply the formatting tools (Black and isort) only to the changed Python and ipynb files since the last commit. This will make our development process more efficient as we only format the codes that we modify. Along with this change, comments were added to make the Makefile more understandable and maintainable.\r\n\r\n### Issue:\r\n\r\nN/A\r\n\r\n### Dependencies:\r\n\r\nAdd dependency to black.\r\n\r\n### Tag maintainer:\r\n\r\n@baskaryan\r\n\r\n### Twitter handle:\r\n\r\n[kzk_maeda](https://twitter.com/kzk_maeda)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7394/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7394/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7393",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7393/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7393/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7393/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7393",
        "id": 1794812499,
        "node_id": "PR_kwDOIPDwls5U_JUK",
        "number": 7393,
        "title": "bump 228",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-08T06:46:38Z",
        "updated_at": "2023-07-08T07:05:21Z",
        "closed_at": "2023-07-08T07:05:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7393",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7393",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7393.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7393.patch",
            "merged_at": "2023-07-08T07:05:20Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7393/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7393/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7392",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7392/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7392/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7392/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7392",
        "id": 1794808887,
        "node_id": "PR_kwDOIPDwls5U_IpW",
        "number": 7392,
        "title": "fix jina",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-08T06:33:36Z",
        "updated_at": "2023-07-08T06:41:55Z",
        "closed_at": "2023-07-08T06:41:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7392",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7392",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7392.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7392.patch",
            "merged_at": "2023-07-08T06:41:54Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7392/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7392/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7391",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7391/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7391/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7391/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7391",
        "id": 1794807121,
        "node_id": "PR_kwDOIPDwls5U_IUd",
        "number": 7391,
        "title": "Update Mosaic endpoint input/output api",
        "user": {
            "login": "margaretqian",
            "id": 9680231,
            "node_id": "MDQ6VXNlcjk2ODAyMzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9680231?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/margaretqian",
            "html_url": "https://github.com/margaretqian",
            "followers_url": "https://api.github.com/users/margaretqian/followers",
            "following_url": "https://api.github.com/users/margaretqian/following{/other_user}",
            "gists_url": "https://api.github.com/users/margaretqian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/margaretqian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/margaretqian/subscriptions",
            "organizations_url": "https://api.github.com/users/margaretqian/orgs",
            "repos_url": "https://api.github.com/users/margaretqian/repos",
            "events_url": "https://api.github.com/users/margaretqian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/margaretqian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-08T06:26:37Z",
        "updated_at": "2023-08-25T05:13:24Z",
        "closed_at": "2023-08-25T05:13:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7391",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7391",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7391.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7391.patch",
            "merged_at": "2023-08-25T05:13:17Z"
        },
        "body": "As noted in prior PRs (https://github.com/hwchase17/langchain/pull/6060, https://github.com/hwchase17/langchain/pull/7348), the input/output format has changed a few times as we've stabilized our inference API. This PR updates the API to the latest stable version as indicated in our docs: https://docs.mosaicml.com/en/latest/inference.html\r\n\r\nThe input format looks like this:\r\n\r\n`{\"inputs\": [<prompt>]}\r\n`\r\n\r\nThe output format looks like this:\r\n`\r\n{\"outputs\": [<output_text>]}\r\n`\r\n\r\nLLM Test:\r\n\r\n<img width=\"772\" alt=\"Screenshot 2023-08-16 at 6 20 12 PM\" src=\"https://github.com/langchain-ai/langchain/assets/9680231/34c72823-9d04-455e-8faa-b48c72584a8c\">\r\n\r\nEmbedding Test:\r\n\r\n<img width=\"776\" alt=\"Screenshot 2023-08-16 at 6 22 22 PM\" src=\"https://github.com/langchain-ai/langchain/assets/9680231/b9d2559a-d029-435f-b354-0e3df78eeed3\">\r\n\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7391/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7391/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7390",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7390/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7390/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7390/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7390",
        "id": 1794783868,
        "node_id": "PR_kwDOIPDwls5U_DcM",
        "number": 7390,
        "title": "Add single run eval loader",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-08T05:33:03Z",
        "updated_at": "2023-07-08T06:06:51Z",
        "closed_at": "2023-07-08T06:06:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7390",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7390",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7390.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7390.patch",
            "merged_at": "2023-07-08T06:06:50Z"
        },
        "body": "Plus \r\n- add evaluation name to make string and embedding validators work with the run evaluator loader.\r\n- Rm unused root validator",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7390/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7390/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7389",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7389/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7389/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7389/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7389",
        "id": 1794779036,
        "node_id": "PR_kwDOIPDwls5U_CaH",
        "number": 7389,
        "title": "Try er/redis index retrieval rect",
        "user": {
            "login": "TRY-ER",
            "id": 75255871,
            "node_id": "MDQ6VXNlcjc1MjU1ODcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/75255871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TRY-ER",
            "html_url": "https://github.com/TRY-ER",
            "followers_url": "https://api.github.com/users/TRY-ER/followers",
            "following_url": "https://api.github.com/users/TRY-ER/following{/other_user}",
            "gists_url": "https://api.github.com/users/TRY-ER/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TRY-ER/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TRY-ER/subscriptions",
            "organizations_url": "https://api.github.com/users/TRY-ER/orgs",
            "repos_url": "https://api.github.com/users/TRY-ER/repos",
            "events_url": "https://api.github.com/users/TRY-ER/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TRY-ER/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-08T05:23:00Z",
        "updated_at": "2023-07-18T17:50:45Z",
        "closed_at": "2023-07-18T17:50:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7389",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7389",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7389.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7389.patch",
            "merged_at": null
        },
        "body": "\r\nReplace this comment with:\r\n  - Description: Changed the code to return id of relevant documents retrieved from redis vectorstore\r\n  - Issue: the issue # it returns id to the user for downstream operations\r\n  - Tag maintainer: @rlancemartin, @eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7389/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7389/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7388",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7388/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7388/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7388/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7388",
        "id": 1794683685,
        "node_id": "PR_kwDOIPDwls5U-soR",
        "number": 7388,
        "title": "[Breaking] Update Evaluation Functionality",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-08T03:40:32Z",
        "updated_at": "2023-07-13T09:13:08Z",
        "closed_at": "2023-07-13T09:13:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7388",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7388",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7388.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7388.patch",
            "merged_at": "2023-07-13T09:13:06Z"
        },
        "body": "- Migrate from deprecated langchainplus_sdk to `langsmith` package\r\n- Update the `run_on_dataset()` API to use an eval config\r\n- Update a number of evaluators, as well as the loading logic\r\n- Update docstrings / reference docs\r\n- Update tracer to share single HTTP session ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7388/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7388/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7386",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7386/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7386/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7386/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7386",
        "id": 1794543073,
        "node_id": "PR_kwDOIPDwls5U-NRI",
        "number": 7386,
        "title": "Fix HF endpoint returns blank for text-generation",
        "user": {
            "login": "HashemAlsaket",
            "id": 17466553,
            "node_id": "MDQ6VXNlcjE3NDY2NTUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/17466553?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HashemAlsaket",
            "html_url": "https://github.com/HashemAlsaket",
            "followers_url": "https://api.github.com/users/HashemAlsaket/followers",
            "following_url": "https://api.github.com/users/HashemAlsaket/following{/other_user}",
            "gists_url": "https://api.github.com/users/HashemAlsaket/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HashemAlsaket/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HashemAlsaket/subscriptions",
            "organizations_url": "https://api.github.com/users/HashemAlsaket/orgs",
            "repos_url": "https://api.github.com/users/HashemAlsaket/repos",
            "events_url": "https://api.github.com/users/HashemAlsaket/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HashemAlsaket/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-07T23:44:35Z",
        "updated_at": "2023-07-11T07:06:12Z",
        "closed_at": "2023-07-11T07:06:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7386",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7386",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7386.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7386.patch",
            "merged_at": "2023-07-11T07:06:05Z"
        },
        "body": "Description: Current `_call` function in the `langchain.llms.HuggingFaceEndpoint` class truncates response when `task=text-generation`. Same error discussed a few days ago on Hugging Face: https://huggingface.co/tiiuae/falcon-40b-instruct/discussions/51\r\nIssue: Fixes #7353 \r\nTag maintainer: @hwchase17 @baskaryan @hinthornw ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7386/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7386/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7385",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7385/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7385/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7385/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7385",
        "id": 1794522874,
        "node_id": "I_kwDOIPDwls5q9j76",
        "number": 7385,
        "title": "Add the `name` and `arguments` from `function_call` to `on_llm_new_token` when `streaming=True`",
        "user": {
            "login": "rasca",
            "id": 79235,
            "node_id": "MDQ6VXNlcjc5MjM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/79235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rasca",
            "html_url": "https://github.com/rasca",
            "followers_url": "https://api.github.com/users/rasca/followers",
            "following_url": "https://api.github.com/users/rasca/following{/other_user}",
            "gists_url": "https://api.github.com/users/rasca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rasca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rasca/subscriptions",
            "organizations_url": "https://api.github.com/users/rasca/orgs",
            "repos_url": "https://api.github.com/users/rasca/repos",
            "events_url": "https://api.github.com/users/rasca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rasca/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-07T23:14:25Z",
        "updated_at": "2023-09-25T09:45:57Z",
        "closed_at": "2023-09-25T09:45:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAdd the `name` and `arguments` from `function_call` to `on_llm_new_token` when `streaming=True`.\r\n\r\nNow it's getting called with an empty token several times and no way to retrieve the `function_call['arguments']`.\r\n\r\nWe need to add this to every llm/\r\n\n\n### Motivation\n\nI'm streaming my calls (user get's to see the output realtime) to an llm and I've decided to use function calls so I get a structured output. I want to show the user the results (one argument is `message`) but I cannot cause only the tokens from `content` are streamed. \r\n\r\nUsing the plain openai api I can do this.\n\n### Your contribution\n\nI can contribute a PR to a model and some tests, but I need guidance, as what the API should be. As I understand only `chat_models.openai` should be modified.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7385/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7385/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7384",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7384/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7384/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7384/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7384",
        "id": 1794520863,
        "node_id": "I_kwDOIPDwls5q9jcf",
        "number": 7384,
        "title": "ChromaDB score goes the wrong way",
        "user": {
            "login": "NicoWeio",
            "id": 12870528,
            "node_id": "MDQ6VXNlcjEyODcwNTI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12870528?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NicoWeio",
            "html_url": "https://github.com/NicoWeio",
            "followers_url": "https://api.github.com/users/NicoWeio/followers",
            "following_url": "https://api.github.com/users/NicoWeio/following{/other_user}",
            "gists_url": "https://api.github.com/users/NicoWeio/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NicoWeio/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NicoWeio/subscriptions",
            "organizations_url": "https://api.github.com/users/NicoWeio/orgs",
            "repos_url": "https://api.github.com/users/NicoWeio/repos",
            "events_url": "https://api.github.com/users/NicoWeio/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NicoWeio/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-07T23:11:04Z",
        "updated_at": "2023-10-17T19:22:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n> langchain==0.0.227\r\n> langchainplus-sdk==0.0.20\r\n> chromadb==0.3.26\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI'm sorry, but I don't have the time to carve out a MRE right now. My take is that it's still better to report it than not to.\n\n### Expected behavior\n\n`similarity_search_with_score` returns the distance as expected, but `similarity_search_with_relevance_scores` gives the same values, so that the closest distances return the smallest values, even though the output of the latter function is supposed to be higher for vectors that are closer:\r\n\r\n> `similarity_search_with_relevance_scores`\r\n> Return docs and relevance scores in the range [0, 1].\r\n> 0 is dissimilar, 1 is most similar.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7384/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7384/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7383",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7383/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7383/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7383/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7383",
        "id": 1794519093,
        "node_id": "PR_kwDOIPDwls5U-IBA",
        "number": 7383,
        "title": "Make Ref Example Threadsafe",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T23:08:12Z",
        "updated_at": "2023-07-08T04:50:43Z",
        "closed_at": "2023-07-08T04:50:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7383",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7383",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7383.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7383.patch",
            "merged_at": "2023-07-08T04:50:42Z"
        },
        "body": "Have noticed transient ref example misalignment. I believe this is caused by the logic of assigning an example within the thread executor rather than before.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7383/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7383/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7382",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7382/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7382/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7382/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7382",
        "id": 1794507283,
        "node_id": "PR_kwDOIPDwls5U-Fi8",
        "number": 7382,
        "title": "Update pinecone.ipynb",
        "user": {
            "login": "roger-yu-ds",
            "id": 7835508,
            "node_id": "MDQ6VXNlcjc4MzU1MDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7835508?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/roger-yu-ds",
            "html_url": "https://github.com/roger-yu-ds",
            "followers_url": "https://api.github.com/users/roger-yu-ds/followers",
            "following_url": "https://api.github.com/users/roger-yu-ds/following{/other_user}",
            "gists_url": "https://api.github.com/users/roger-yu-ds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/roger-yu-ds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/roger-yu-ds/subscriptions",
            "organizations_url": "https://api.github.com/users/roger-yu-ds/orgs",
            "repos_url": "https://api.github.com/users/roger-yu-ds/repos",
            "events_url": "https://api.github.com/users/roger-yu-ds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/roger-yu-ds/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T22:52:40Z",
        "updated_at": "2023-07-08T05:48:04Z",
        "closed_at": "2023-07-08T05:48:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7382",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7382",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7382.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7382.patch",
            "merged_at": "2023-07-08T05:48:04Z"
        },
        "body": "Fix typo\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7382/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7382/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7381",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7381/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7381/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7381/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7381",
        "id": 1794495169,
        "node_id": "PR_kwDOIPDwls5U-Cya",
        "number": 7381,
        "title": "Allow passing custom prompts to GraphIndexCreator",
        "user": {
            "login": "ozabluda",
            "id": 14060629,
            "node_id": "MDQ6VXNlcjE0MDYwNjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14060629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ozabluda",
            "html_url": "https://github.com/ozabluda",
            "followers_url": "https://api.github.com/users/ozabluda/followers",
            "following_url": "https://api.github.com/users/ozabluda/following{/other_user}",
            "gists_url": "https://api.github.com/users/ozabluda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ozabluda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ozabluda/subscriptions",
            "organizations_url": "https://api.github.com/users/ozabluda/orgs",
            "repos_url": "https://api.github.com/users/ozabluda/repos",
            "events_url": "https://api.github.com/users/ozabluda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ozabluda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T22:41:28Z",
        "updated_at": "2023-07-08T18:01:36Z",
        "closed_at": "2023-07-08T05:47:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7381",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7381",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7381.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7381.patch",
            "merged_at": "2023-07-08T05:47:54Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7381/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7381/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7380",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7380/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7380/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7380/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7380",
        "id": 1794489564,
        "node_id": "PR_kwDOIPDwls5U-Bib",
        "number": 7380,
        "title": "[feat]: Adding memory to Sql Database Chain",
        "user": {
            "login": "keenborder786",
            "id": 45242107,
            "node_id": "MDQ6VXNlcjQ1MjQyMTA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/45242107?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/keenborder786",
            "html_url": "https://github.com/keenborder786",
            "followers_url": "https://api.github.com/users/keenborder786/followers",
            "following_url": "https://api.github.com/users/keenborder786/following{/other_user}",
            "gists_url": "https://api.github.com/users/keenborder786/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/keenborder786/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/keenborder786/subscriptions",
            "organizations_url": "https://api.github.com/users/keenborder786/orgs",
            "repos_url": "https://api.github.com/users/keenborder786/repos",
            "events_url": "https://api.github.com/users/keenborder786/events{/privacy}",
            "received_events_url": "https://api.github.com/users/keenborder786/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-07-07T22:35:36Z",
        "updated_at": "2023-07-11T15:01:13Z",
        "closed_at": "2023-07-11T15:01:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7380",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7380",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7380.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7380.patch",
            "merged_at": null
        },
        "body": "Replace this comment with:\r\n  - Description: SQL Database Chain does not allow to pass in memory to its chain.\r\n  - Issue: This has been requested in issue #6918\r\n  - Tag maintainer:  @hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7380/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7380/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7379",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7379/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7379/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7379/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7379",
        "id": 1794454952,
        "node_id": "PR_kwDOIPDwls5U951O",
        "number": 7379,
        "title": "Add new types of document transformers",
        "user": {
            "login": "jasonwcfan",
            "id": 14931371,
            "node_id": "MDQ6VXNlcjE0OTMxMzcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/14931371?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasonwcfan",
            "html_url": "https://github.com/jasonwcfan",
            "followers_url": "https://api.github.com/users/jasonwcfan/followers",
            "following_url": "https://api.github.com/users/jasonwcfan/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasonwcfan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasonwcfan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasonwcfan/subscriptions",
            "organizations_url": "https://api.github.com/users/jasonwcfan/orgs",
            "repos_url": "https://api.github.com/users/jasonwcfan/repos",
            "events_url": "https://api.github.com/users/jasonwcfan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasonwcfan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 27,
        "created_at": "2023-07-07T22:00:54Z",
        "updated_at": "2023-07-13T04:26:32Z",
        "closed_at": "2023-07-13T03:53:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7379",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7379",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7379.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7379.patch",
            "merged_at": "2023-07-13T03:53:30Z"
        },
        "body": "  - Description: Add two new document transformers that translates documents into different languages and converts documents into q&a format to improve vector search results. Uses OpenAI function calling via the [doctran](https://github.com/psychic-api/doctran/tree/main) library.\r\n  - Issue: N/A\r\n  - Dependencies: `doctran = \"^0.0.5\"`\r\n  - Tag maintainer: @rlancemartin @eyurtsev @hwchase17 \r\n  - Twitter handle: @psychicapi or @jfan001\r\n\r\nNotes\r\n- Adheres to the `DocumentTransformer` abstraction set by @dev2049 in #3182 \r\n- refactored `EmbeddingsRedundantFilter` to put it in a file under a new `document_transformers` module\r\n- Added basic docs for `DocumentInterrogator`, `DocumentTransformer` as well as the existing `EmbeddingsRedundantFilter`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7379/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7379/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7378",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7378/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7378/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7378/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7378",
        "id": 1794403612,
        "node_id": "PR_kwDOIPDwls5U9t8v",
        "number": 7378,
        "title": "update databerry-chaindesk redirect",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T21:33:02Z",
        "updated_at": "2023-07-07T23:11:47Z",
        "closed_at": "2023-07-07T23:11:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7378",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7378",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7378.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7378.patch",
            "merged_at": "2023-07-07T23:11:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7378/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7378/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7377",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7377/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7377/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7377/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7377",
        "id": 1794306714,
        "node_id": "PR_kwDOIPDwls5U9XZt",
        "number": 7377,
        "title": "Update the API Reference link in Streamlit integration docs",
        "user": {
            "login": "sfc-gh-jcarroll",
            "id": 116604821,
            "node_id": "U_kgDOBvM_lQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/116604821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sfc-gh-jcarroll",
            "html_url": "https://github.com/sfc-gh-jcarroll",
            "followers_url": "https://api.github.com/users/sfc-gh-jcarroll/followers",
            "following_url": "https://api.github.com/users/sfc-gh-jcarroll/following{/other_user}",
            "gists_url": "https://api.github.com/users/sfc-gh-jcarroll/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sfc-gh-jcarroll/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sfc-gh-jcarroll/subscriptions",
            "organizations_url": "https://api.github.com/users/sfc-gh-jcarroll/orgs",
            "repos_url": "https://api.github.com/users/sfc-gh-jcarroll/repos",
            "events_url": "https://api.github.com/users/sfc-gh-jcarroll/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sfc-gh-jcarroll/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-07T20:52:57Z",
        "updated_at": "2023-07-07T21:35:58Z",
        "closed_at": "2023-07-07T21:35:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7377",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7377",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7377.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7377.patch",
            "merged_at": "2023-07-07T21:35:58Z"
        },
        "body": "This page:\r\n\r\nhttps://python.langchain.com/docs/modules/callbacks/integrations/streamlit \r\n\r\nHas a bad API Reference link currently. This PR fixes it to the correct link. \r\n\r\nAlso updates the embedded app link to https://langchain-mrkl.streamlit.app/ (better name) which is hosted in langchain-ai/streamlit-agent repo\r\n\r\ncc @baskaryan @agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7377/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7377/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7376",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7376/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7376/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7376/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7376",
        "id": 1794271625,
        "node_id": "I_kwDOIPDwls5q8mmJ",
        "number": 7376,
        "title": "Passing VectorStoreRetriever arguments to VectorStoreIndexWrapper.query()",
        "user": {
            "login": "stevmak-manifold",
            "id": 99507740,
            "node_id": "U_kgDOBe5eHA",
            "avatar_url": "https://avatars.githubusercontent.com/u/99507740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevmak-manifold",
            "html_url": "https://github.com/stevmak-manifold",
            "followers_url": "https://api.github.com/users/stevmak-manifold/followers",
            "following_url": "https://api.github.com/users/stevmak-manifold/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevmak-manifold/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevmak-manifold/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevmak-manifold/subscriptions",
            "organizations_url": "https://api.github.com/users/stevmak-manifold/orgs",
            "repos_url": "https://api.github.com/users/stevmak-manifold/repos",
            "events_url": "https://api.github.com/users/stevmak-manifold/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevmak-manifold/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T20:39:29Z",
        "updated_at": "2023-10-14T20:09:57Z",
        "closed_at": "2023-10-14T20:09:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI want to pass arguments to the retriever used in the `VectorStoreIndexWrapper` `query` and `query_with_sources` methods. Right now, those methods don't have any means of passing `VectorStoreRetriever` arguments into `vectorstore.as_retriever()`:\r\n\r\n```\r\nlangchain/indexes/vectorstore.py\r\n\r\n\r\n    def query(\r\n        self, question: str, llm: Optional[BaseLanguageModel] = None, **kwargs: Any\r\n    ) -> str:\r\n        \"\"\"Query the vectorstore.\"\"\"\r\n        llm = llm or OpenAI(temperature=0)\r\n        chain = RetrievalQA.from_chain_type(\r\n        --->llm, retriever=self.vectorstore.as_retriever(), **kwargs\r\n        )\r\n        return chain.run(question)\r\n\r\n    def query_with_sources(\r\n        self, question: str, llm: Optional[BaseLanguageModel] = None, **kwargs: Any\r\n    ) -> dict:\r\n        \"\"\"Query the vectorstore and get back sources.\"\"\"\r\n        llm = llm or OpenAI(temperature=0)\r\n        chain = RetrievalQAWithSourcesChain.from_chain_type(\r\n        --->llm, retriever=self.vectorstore.as_retriever(), **kwargs\r\n        )\r\n        return chain({chain.question_key: question})\r\n```\n\n### Motivation\n\nI can't input `VectorStoreRetriever` arguments such as `search_type` or `search_kwargs` into `VectorStoreIndexWrapper.query()`, but I would be able to do that via `VectorStore.as_retriever()`, which `query()` and `query_with_sources()` use anyway.\n\n### Your contribution\n\nIf someone isn't already working on this, I can make this change and submit a PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7376/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7376/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7374",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7374/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7374/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7374/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7374",
        "id": 1794215961,
        "node_id": "I_kwDOIPDwls5q8ZAZ",
        "number": 7374,
        "title": "How to load Vicuna-7b, Vicuna13-b and Falcon LLM's from langchain through ConversationalRetrievalChain function?",
        "user": {
            "login": "nithinreddyyyyyy",
            "id": 129744879,
            "node_id": "U_kgDOB7u_7w",
            "avatar_url": "https://avatars.githubusercontent.com/u/129744879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nithinreddyyyyyy",
            "html_url": "https://github.com/nithinreddyyyyyy",
            "followers_url": "https://api.github.com/users/nithinreddyyyyyy/followers",
            "following_url": "https://api.github.com/users/nithinreddyyyyyy/following{/other_user}",
            "gists_url": "https://api.github.com/users/nithinreddyyyyyy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nithinreddyyyyyy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nithinreddyyyyyy/subscriptions",
            "organizations_url": "https://api.github.com/users/nithinreddyyyyyy/orgs",
            "repos_url": "https://api.github.com/users/nithinreddyyyyyy/repos",
            "events_url": "https://api.github.com/users/nithinreddyyyyyy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nithinreddyyyyyy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-07T20:17:44Z",
        "updated_at": "2023-07-07T20:26:58Z",
        "closed_at": "2023-07-07T20:20:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nBelow is the code which i'm using for another model\r\n\r\n```\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.vectorstores import DocArrayInMemorySearch\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.document_loaders import PyPDFLoader\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nimport llama_cpp\r\n\r\n # create a chatbot chain. Memory is managed externally.\r\nqa = ConversationalRetrievalChain.from_llm(\r\n  llm=load_model(model_id=\"TheBloke/orca_mini_v2_7B-GGML\", device_type=\"mps\", model_basename=\"orca-mini-v2_7b.ggmlv3.q4_0.bin\"),#ChatOpenAI(model_name=llm_name, temperature=0), \r\n  chain_type=chain_type, \r\n  retriever=retriever, \r\n  return_source_documents=True,\r\n  return_generated_question=True,\r\n)\r\n```\r\n\r\nI'm loading orca mini model with model_id and model_basename. How to load Vicuna7b, Vicuna13b and Falcon LLM's? And how to change the device type from mps to Cuda?\r\n\r\n### Idea or request for content:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7374/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7374/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7373",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7373/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7373/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7373/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7373",
        "id": 1794191212,
        "node_id": "I_kwDOIPDwls5q8S9s",
        "number": 7373,
        "title": "Fortune Reporter trying to get in touch with Chase",
        "user": {
            "login": "Badrul-Goomblepop",
            "id": 132761159,
            "node_id": "U_kgDOB-nGRw",
            "avatar_url": "https://avatars.githubusercontent.com/u/132761159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Badrul-Goomblepop",
            "html_url": "https://github.com/Badrul-Goomblepop",
            "followers_url": "https://api.github.com/users/Badrul-Goomblepop/followers",
            "following_url": "https://api.github.com/users/Badrul-Goomblepop/following{/other_user}",
            "gists_url": "https://api.github.com/users/Badrul-Goomblepop/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Badrul-Goomblepop/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Badrul-Goomblepop/subscriptions",
            "organizations_url": "https://api.github.com/users/Badrul-Goomblepop/orgs",
            "repos_url": "https://api.github.com/users/Badrul-Goomblepop/repos",
            "events_url": "https://api.github.com/users/Badrul-Goomblepop/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Badrul-Goomblepop/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T20:07:36Z",
        "updated_at": "2023-07-10T16:26:16Z",
        "closed_at": "2023-07-10T16:26:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n@hwchase17 There's been a reporter from Fortune who are in their words: \"launching our A.I. 50 list later this month. LangChain is being considered for the list, and while I've tried to get in touch with Harrison and Ankush in as many ways as possible, I haven't been able to.\"\r\n\r\nThey've been trying to get in touch with @hwchase17 for weeks now.\r\n\r\nSearch for **bdanweiss** on the Discord group.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7373/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7373/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7372",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7372/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7372/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7372/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7372",
        "id": 1794125262,
        "node_id": "PR_kwDOIPDwls5U8tWe",
        "number": 7372,
        "title": "Fix buggy output from GraphQAChain",
        "user": {
            "login": "Bearnardd",
            "id": 43574448,
            "node_id": "MDQ6VXNlcjQzNTc0NDQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/43574448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Bearnardd",
            "html_url": "https://github.com/Bearnardd",
            "followers_url": "https://api.github.com/users/Bearnardd/followers",
            "following_url": "https://api.github.com/users/Bearnardd/following{/other_user}",
            "gists_url": "https://api.github.com/users/Bearnardd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Bearnardd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Bearnardd/subscriptions",
            "organizations_url": "https://api.github.com/users/Bearnardd/orgs",
            "repos_url": "https://api.github.com/users/Bearnardd/repos",
            "events_url": "https://api.github.com/users/Bearnardd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Bearnardd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-07T19:34:58Z",
        "updated_at": "2023-07-07T21:19:53Z",
        "closed_at": "2023-07-07T21:19:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7372",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7372",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7372.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7372.patch",
            "merged_at": "2023-07-07T21:19:53Z"
        },
        "body": "fixes https://github.com/hwchase17/langchain/issues/7289\r\nA simple fix of the buggy output of `graph_qa`. If we have several entities with triplets then the last entry of `triplets` for a given entity merges with the first entry of the `triplets` of the next entity.\r\n\r\n## Example\r\n```\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.indexes import GraphIndexCreator\r\nfrom langchain.chains import GraphQAChain\r\nfrom langchain.prompts import PromptTemplate\r\nimport os\r\n\r\ntext = \"Apple announced the Vision Pro in 2023.\"\r\n\r\nopenai_api_key = os.getenv(\"OPENAI_API_KEY\")\r\n\r\nindex_creator = GraphIndexCreator(llm=OpenAI(openai_api_key=openai_api_key, temperature=0))\r\ngraph = index_creator.from_text(text)\r\nchain = GraphQAChain.from_llm(\r\n    OpenAI(temperature=0, openai_api_key=openai_api_key),\r\n    graph=graph, \r\n    verbose=True\r\n)\r\n\r\nchain.run(\"When did Apple announce the Vision Pro?\")\r\n\r\n# output pre-fix\r\nEntities Extracted:\r\nApple, Vision Pro\r\nFull Context:\r\nApple announced Vision ProVision Pro was announced in 2023\r\n\r\n> Finished chain.\r\n\r\n# output post-fix\r\nEntities Extracted:\r\nApple, Vision Pro\r\nFull Context:\r\nApple announced Vision Pro\r\nVision Pro was announced in 2023\r\n\r\n\r\n> Finished chain.\r\n\r\n```\r\n\r\n\r\n@baskaryan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7372/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7372/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7371",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7371/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7371/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7371/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7371",
        "id": 1794046628,
        "node_id": "PR_kwDOIPDwls5U8brw",
        "number": 7371,
        "title": "vscode test",
        "user": {
            "login": "energetic-erick",
            "id": 76460792,
            "node_id": "MDQ6VXNlcjc2NDYwNzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/76460792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/energetic-erick",
            "html_url": "https://github.com/energetic-erick",
            "followers_url": "https://api.github.com/users/energetic-erick/followers",
            "following_url": "https://api.github.com/users/energetic-erick/following{/other_user}",
            "gists_url": "https://api.github.com/users/energetic-erick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/energetic-erick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/energetic-erick/subscriptions",
            "organizations_url": "https://api.github.com/users/energetic-erick/orgs",
            "repos_url": "https://api.github.com/users/energetic-erick/repos",
            "events_url": "https://api.github.com/users/energetic-erick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/energetic-erick/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T18:44:21Z",
        "updated_at": "2023-07-07T19:11:27Z",
        "closed_at": "2023-07-07T19:11:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7371",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7371",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7371.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7371.patch",
            "merged_at": null
        },
        "body": "pr description",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7371/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7371/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7370",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7370/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7370/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7370/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7370",
        "id": 1794026061,
        "node_id": "PR_kwDOIPDwls5U8XDC",
        "number": 7370,
        "title": "Harrison/add to imports",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T18:30:42Z",
        "updated_at": "2023-07-07T20:27:45Z",
        "closed_at": "2023-07-07T20:27:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7370",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7370",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7370.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7370.patch",
            "merged_at": "2023-07-07T20:27:45Z"
        },
        "body": "pgvector cleanup",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7370/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7370/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7369",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7369/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7369/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7369/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7369",
        "id": 1794024937,
        "node_id": "I_kwDOIPDwls5q7qXp",
        "number": 7369,
        "title": "from langchain.llms import OpenAI causing ImportError: cannot import name 'Protocol'",
        "user": {
            "login": "srikanthgirijala",
            "id": 53816558,
            "node_id": "MDQ6VXNlcjUzODE2NTU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/53816558?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srikanthgirijala",
            "html_url": "https://github.com/srikanthgirijala",
            "followers_url": "https://api.github.com/users/srikanthgirijala/followers",
            "following_url": "https://api.github.com/users/srikanthgirijala/following{/other_user}",
            "gists_url": "https://api.github.com/users/srikanthgirijala/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srikanthgirijala/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srikanthgirijala/subscriptions",
            "organizations_url": "https://api.github.com/users/srikanthgirijala/orgs",
            "repos_url": "https://api.github.com/users/srikanthgirijala/repos",
            "events_url": "https://api.github.com/users/srikanthgirijala/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srikanthgirijala/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T18:30:00Z",
        "updated_at": "2023-10-14T20:10:02Z",
        "closed_at": "2023-10-14T20:10:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nfrom typing_extensions import Protocol\r\nfrom langchain.llms import OpenAI\r\nllm = OpenAI(model_name='text-davinci-003', temperature=0.7, max_tokens=512)\r\nprint(llm)\r\n-----------------------------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-28-c0d04f63c5e1> in <module>\r\n      1 get_ipython().system('pip install typing-extensions==4.3.0')\r\n      2 from typing_extensions import Protocol\r\n----> 3 from langchain.llms import OpenAI\r\n      4 llm = OpenAI(model_name='text-davinci-003', temperature=0.7, max_tokens=512)\r\n      5 print(llm)\r\n\r\n~\\anaconda3\\envs\\GPTLLM\\lib\\site-packages\\langchain\\__init__.py in <module>\r\n      1 \"\"\"Main entrypoint into package.\"\"\"\r\n      2 \r\n----> 3 from importlib import metadata\r\n      4 from typing import Optional\r\n      5 \r\n\r\n~\\anaconda3\\envs\\GPTLLM\\lib\\importlib\\metadata\\__init__.py in <module>\r\n     15 import collections\r\n     16 \r\n---> 17 from . import _adapters, _meta\r\n     18 from ._collections import FreezableDefaultDict, Pair\r\n     19 from ._functools import method_cache, pass_none\r\n\r\n~\\anaconda3\\envs\\GPTLLM\\lib\\importlib\\metadata\\_meta.py in <module>\r\n----> 1 from typing import Any, Dict, Iterator, List, Protocol, TypeVar, Union\r\n      2 \r\n      3 \r\n      4 _T = TypeVar(\"_T\")\r\n      5 \r\n\r\nImportError: cannot import name 'Protocol'\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.llms import OpenAI\r\nllm = OpenAI(model_name='text-davinci-003', temperature=0.7, max_tokens=512)\r\nprint(llm)\n\n### Expected behavior\n\nOpenAI\r\nParams:{model_name, temperature, max_tokens}",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7369/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7369/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7368",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7368/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7368/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7368/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7368",
        "id": 1794019802,
        "node_id": "I_kwDOIPDwls5q7pHa",
        "number": 7368,
        "title": "conversationalRetrievalChain - how to improve accuracy",
        "user": {
            "login": "RanElgedawy",
            "id": 95228400,
            "node_id": "U_kgDOBa0R8A",
            "avatar_url": "https://avatars.githubusercontent.com/u/95228400?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RanElgedawy",
            "html_url": "https://github.com/RanElgedawy",
            "followers_url": "https://api.github.com/users/RanElgedawy/followers",
            "following_url": "https://api.github.com/users/RanElgedawy/following{/other_user}",
            "gists_url": "https://api.github.com/users/RanElgedawy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RanElgedawy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RanElgedawy/subscriptions",
            "organizations_url": "https://api.github.com/users/RanElgedawy/orgs",
            "repos_url": "https://api.github.com/users/RanElgedawy/repos",
            "events_url": "https://api.github.com/users/RanElgedawy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RanElgedawy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-07T18:26:31Z",
        "updated_at": "2023-10-16T16:06:15Z",
        "closed_at": "2023-10-16T16:06:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using conversational retrieval chain with memory, but I am getting incorrect answers for trivial questions. \r\nAny suggestions what can I do to improve the accuracy of the output? \r\n\r\n#memory = ConversationEntityMemory(llm=llm, return_messages=True)\r\nmemory=ConversationBufferMemory(memory_key=\"chat_history\",output_key='answer')\r\nchain = ConversationalRetrievalChain.from_llm(\r\nllm = llm,\r\nretriever=retriever,\r\nmemory=memory, \r\nget_chat_history=lambda h :h,\r\nreturn_source_documents=True)\r\n\r\n\r\n![memoryerror](https://github.com/hwchase17/langchain/assets/95228400/03142f3f-65ff-48ad-8890-e64856749a58)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7368/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7368/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7367",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7367/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7367/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7367/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7367",
        "id": 1794014938,
        "node_id": "PR_kwDOIPDwls5U8Ujj",
        "number": 7367,
        "title": "feat: Add `UnstructuredTSVLoader`",
        "user": {
            "login": "MthwRobinson",
            "id": 1635179,
            "node_id": "MDQ6VXNlcjE2MzUxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1635179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MthwRobinson",
            "html_url": "https://github.com/MthwRobinson",
            "followers_url": "https://api.github.com/users/MthwRobinson/followers",
            "following_url": "https://api.github.com/users/MthwRobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/MthwRobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MthwRobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MthwRobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/MthwRobinson/orgs",
            "repos_url": "https://api.github.com/users/MthwRobinson/repos",
            "events_url": "https://api.github.com/users/MthwRobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MthwRobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T18:23:25Z",
        "updated_at": "2023-07-10T07:07:11Z",
        "closed_at": "2023-07-10T07:07:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7367",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7367",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7367.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7367.patch",
            "merged_at": "2023-07-10T07:07:10Z"
        },
        "body": "### Summary\r\n\r\nAdds an `UnstructuredTSVLoader` for TSV files. Also updates the doc strings for `UnstructuredCSV` and `UnstructuredExcel` loaders.\r\n\r\n### Testing\r\n\r\n```python\r\nfrom langchain.document_loaders.tsv import UnstructuredTSVLoader\r\n\r\nloader = UnstructuredTSVLoader(\r\n    file_path=\"example_data/mlb_teams_2012.csv\", mode=\"elements\"\r\n)\r\ndocs = loader.load()\r\n```\r\n\r\n### Reviewers\r\n  - @rlancemartin\r\n  - @eyurtsev\r\n  - @hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7367/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7367/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7366",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7366/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7366/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7366/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7366",
        "id": 1794008740,
        "node_id": "I_kwDOIPDwls5q7mak",
        "number": 7366,
        "title": "use youtube chapter as hints and metadata in the youtube loader",
        "user": {
            "login": "thiswillbeyourgithub",
            "id": 26625900,
            "node_id": "MDQ6VXNlcjI2NjI1OTAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/26625900?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiswillbeyourgithub",
            "html_url": "https://github.com/thiswillbeyourgithub",
            "followers_url": "https://api.github.com/users/thiswillbeyourgithub/followers",
            "following_url": "https://api.github.com/users/thiswillbeyourgithub/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiswillbeyourgithub/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiswillbeyourgithub/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiswillbeyourgithub/subscriptions",
            "organizations_url": "https://api.github.com/users/thiswillbeyourgithub/orgs",
            "repos_url": "https://api.github.com/users/thiswillbeyourgithub/repos",
            "events_url": "https://api.github.com/users/thiswillbeyourgithub/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiswillbeyourgithub/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-07-07T18:19:36Z",
        "updated_at": "2023-10-09T17:05:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWhen using the youtube loader. I think it would be useful to take into account the chapters if present.\r\n\r\n1. The chapter timecode could be used to know when to chunk. Any chunk inside a chapter timeframe could also contain the same \"youtube_chapter_title\" metadata.\r\n2. The name of the chapter could added directly inside the transcript. For example as a markdown header. This could be useful for LLM to maintain context over time.\n\n### Motivation\n\nThere are useful information present in the youtube chapter title and timecodes that could be of use to LLMs.\r\n\r\nSummarizing transcripts would probably be of higher quality if headers are present rather than a huge wall of text.\r\n\r\nAdding metadata is always a win.\n\n### Your contribution\n\nUnfortunately not able to help for the time being but wanted to get the idea out there.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7366/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7366/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7365",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7365/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7365/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7365/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7365",
        "id": 1793960528,
        "node_id": "I_kwDOIPDwls5q7apQ",
        "number": 7365,
        "title": "ConversationBufferWindowMemory returns empty string on empty history instead of empty array.",
        "user": {
            "login": "Joseph-Cardwell",
            "id": 1547485,
            "node_id": "MDQ6VXNlcjE1NDc0ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1547485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Joseph-Cardwell",
            "html_url": "https://github.com/Joseph-Cardwell",
            "followers_url": "https://api.github.com/users/Joseph-Cardwell/followers",
            "following_url": "https://api.github.com/users/Joseph-Cardwell/following{/other_user}",
            "gists_url": "https://api.github.com/users/Joseph-Cardwell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Joseph-Cardwell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Joseph-Cardwell/subscriptions",
            "organizations_url": "https://api.github.com/users/Joseph-Cardwell/orgs",
            "repos_url": "https://api.github.com/users/Joseph-Cardwell/repos",
            "events_url": "https://api.github.com/users/Joseph-Cardwell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Joseph-Cardwell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-07-07T17:56:12Z",
        "updated_at": "2023-12-05T12:07:46Z",
        "closed_at": "2023-10-14T20:10:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nPython 3.10\r\nLangchain 0.0.226\r\n\r\nWindows 11 \r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n```\r\nimport os, langchain\r\n\r\nos.environ['SERPAPI_API_KEY'] = \"\"\r\nos.environ['OPENAI_API_KEY'] = \"\"\r\n\r\nfrom langchain.chains import LLMChain\r\nfrom langchain.agents import ConversationalChatAgent, SelfAskWithSearchChain, AgentExecutor\r\nfrom langchain.memory import ConversationBufferWindowMemory\r\nfrom langchain.tools import Tool\r\nfrom langchain.llms import OpenAI\r\n\r\nconversation_buffer_window_memory: ConversationBufferWindowMemory = ConversationBufferWindowMemory(\r\n    input_key=\"input\", memory_key=\"chat_history\")\r\n\r\nsearch = langchain.SerpAPIChain()\r\nself_ask_and_search = SelfAskWithSearchChain(llm=OpenAI(), search_chain=search, verbose=True)\r\n\r\ntools = [\r\n    Tool(\r\n        name=\"Search\",\r\n        func=self_ask_and_search.run,\r\n        description=\"useful for when you need to answer questions about current events\",\r\n    )\r\n]\r\n\r\nprompt = ConversationalChatAgent.create_prompt(\r\n    tools, input_variables=[\"input\", \"chat_history\", \"agent_scratchpad\"]\r\n)\r\n\r\nllm_chain = LLMChain(\r\n    llm=OpenAI(temperature=0), prompt=prompt)\r\n\r\nagent = ConversationalChatAgent(\r\n    llm_chain=llm_chain, tools=tools, verbose=True)\r\n\r\nagent_executor = AgentExecutor.from_agent_and_tools(\r\n    agent=agent, tools=tools, verbose=True, memory=conversation_buffer_window_memory)\r\n  \r\nagent_executor.run('what is the capital of texas?')\r\n```\r\n\r\nreturns the following error:\r\n(<class 'ValueError'>, ValueError('variable chat_history should be a list of base messages, got '), <traceback object at 0x0000027BA6366E40>)\r\n\r\n### Expected behavior\r\n\r\nReturn the LLM result while updating the memory mechanism.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7365/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7365/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7364",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7364/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7364/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7364/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7364",
        "id": 1793939877,
        "node_id": "PR_kwDOIPDwls5U8DX3",
        "number": 7364,
        "title": "Added support for stability API for bedrock",
        "user": {
            "login": "gauravrele87",
            "id": 13090752,
            "node_id": "MDQ6VXNlcjEzMDkwNzUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13090752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gauravrele87",
            "html_url": "https://github.com/gauravrele87",
            "followers_url": "https://api.github.com/users/gauravrele87/followers",
            "following_url": "https://api.github.com/users/gauravrele87/following{/other_user}",
            "gists_url": "https://api.github.com/users/gauravrele87/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gauravrele87/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gauravrele87/subscriptions",
            "organizations_url": "https://api.github.com/users/gauravrele87/orgs",
            "repos_url": "https://api.github.com/users/gauravrele87/repos",
            "events_url": "https://api.github.com/users/gauravrele87/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gauravrele87/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-07-07T17:49:20Z",
        "updated_at": "2023-09-18T23:16:10Z",
        "closed_at": "2023-09-18T23:16:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7364",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7364",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7364.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7364.patch",
            "merged_at": null
        },
        "body": "## Summary\r\n\r\nThis PR adds support for stability AI in bedrock. Implementation is going to return the image in base64 format as text string.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7364/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7364/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7363",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7363/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7363/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7363/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7363",
        "id": 1793880735,
        "node_id": "PR_kwDOIPDwls5U71-m",
        "number": 7363,
        "title": "Upgrade the AwaDB from 0.3.5 to 0.3.6",
        "user": {
            "login": "ljeagle",
            "id": 15918167,
            "node_id": "MDQ6VXNlcjE1OTE4MTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15918167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ljeagle",
            "html_url": "https://github.com/ljeagle",
            "followers_url": "https://api.github.com/users/ljeagle/followers",
            "following_url": "https://api.github.com/users/ljeagle/following{/other_user}",
            "gists_url": "https://api.github.com/users/ljeagle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ljeagle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ljeagle/subscriptions",
            "organizations_url": "https://api.github.com/users/ljeagle/orgs",
            "repos_url": "https://api.github.com/users/ljeagle/repos",
            "events_url": "https://api.github.com/users/ljeagle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ljeagle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-07T17:17:14Z",
        "updated_at": "2023-07-08T03:41:35Z",
        "closed_at": "2023-07-08T03:41:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7363",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7363",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7363.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7363.patch",
            "merged_at": "2023-07-08T03:41:18Z"
        },
        "body": "Upgrade the AwaDB from 0.3.5 to 0.3.6\r\n1. Support get, delete and update batch documents\r\n2. Add the implementation of the max_marginal_relevance_search\r\n3. Change the default vectors' distance computation type from L2 to InnerProduct \r\nPlease review @rlancemartin, @eyurtsev @hwchase17.  Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7363/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7363/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7362",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7362/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7362/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7362/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7362",
        "id": 1793867175,
        "node_id": "PR_kwDOIPDwls5U7zIF",
        "number": 7362,
        "title": "Unset Cache in Tests",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T17:04:35Z",
        "updated_at": "2023-07-07T18:05:10Z",
        "closed_at": "2023-07-07T18:05:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7362",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7362",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7362.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7362.patch",
            "merged_at": "2023-07-07T18:05:09Z"
        },
        "body": "This is impacting other unit tests that use callbacks since the cache is still set (just empty)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7362/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7362/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7361",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7361/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7361/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7361/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7361",
        "id": 1793847411,
        "node_id": "PR_kwDOIPDwls5U7u5_",
        "number": 7361,
        "title": "Added support for stability API for bedrock",
        "user": {
            "login": "gauravrele87",
            "id": 13090752,
            "node_id": "MDQ6VXNlcjEzMDkwNzUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13090752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gauravrele87",
            "html_url": "https://github.com/gauravrele87",
            "followers_url": "https://api.github.com/users/gauravrele87/followers",
            "following_url": "https://api.github.com/users/gauravrele87/following{/other_user}",
            "gists_url": "https://api.github.com/users/gauravrele87/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gauravrele87/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gauravrele87/subscriptions",
            "organizations_url": "https://api.github.com/users/gauravrele87/orgs",
            "repos_url": "https://api.github.com/users/gauravrele87/repos",
            "events_url": "https://api.github.com/users/gauravrele87/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gauravrele87/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T16:46:25Z",
        "updated_at": "2023-07-07T17:43:39Z",
        "closed_at": "2023-07-07T17:43:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7361",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7361",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7361.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7361.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\nThis pull request is to add support for stability AI models for bedrock. \r\n\r\nReplace this comment with:\r\n  - Description: Added support for bedrock stability AI models\r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: @3coins \r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7361/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7361/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7360",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7360/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7360/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7360/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7360",
        "id": 1793841669,
        "node_id": "PR_kwDOIPDwls5U7trY",
        "number": 7360,
        "title": "docs: `dependents` update 4",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T16:41:20Z",
        "updated_at": "2023-07-07T18:35:43Z",
        "closed_at": "2023-07-07T17:22:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7360",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7360",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7360.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7360.patch",
            "merged_at": "2023-07-07T17:22:31Z"
        },
        "body": "Updated links and counters of the `dependents` page.\r\n\r\n@baskaryan\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7360/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7360/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7359",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7359/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7359/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7359/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7359",
        "id": 1793836489,
        "node_id": "PR_kwDOIPDwls5U7sli",
        "number": 7359,
        "title": "update extension name",
        "user": {
            "login": "raoufchebri",
            "id": 13738772,
            "node_id": "MDQ6VXNlcjEzNzM4Nzcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13738772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raoufchebri",
            "html_url": "https://github.com/raoufchebri",
            "followers_url": "https://api.github.com/users/raoufchebri/followers",
            "following_url": "https://api.github.com/users/raoufchebri/following{/other_user}",
            "gists_url": "https://api.github.com/users/raoufchebri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raoufchebri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raoufchebri/subscriptions",
            "organizations_url": "https://api.github.com/users/raoufchebri/orgs",
            "repos_url": "https://api.github.com/users/raoufchebri/repos",
            "events_url": "https://api.github.com/users/raoufchebri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raoufchebri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-07T16:36:33Z",
        "updated_at": "2023-07-07T18:37:04Z",
        "closed_at": "2023-07-07T18:35:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7359",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7359",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7359.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7359.patch",
            "merged_at": "2023-07-07T18:35:51Z"
        },
        "body": "hi @rlancemartin ,\r\n\r\nWe had a new deployment and the `pg_extension` creation command was updated from `CREATE EXTENSION pg_embedding` to `CREATE EXTENSION embedding`.\r\n\r\nhttps://github.com/neondatabase/neon/pull/4646\r\n\r\nThe extension not made public yet. No users will be affected by this. Will be public next week.\r\n\r\nPlease let me know if you have any questions.\r\n\r\nThank you in advance \ud83d\ude4f ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7359/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7359/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7358",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7358/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7358/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7358/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7358",
        "id": 1793822600,
        "node_id": "PR_kwDOIPDwls5U7prv",
        "number": 7358,
        "title": "Update Pinecone Upsert method usage",
        "user": {
            "login": "Pharbi",
            "id": 22204443,
            "node_id": "MDQ6VXNlcjIyMjA0NDQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/22204443?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Pharbi",
            "html_url": "https://github.com/Pharbi",
            "followers_url": "https://api.github.com/users/Pharbi/followers",
            "following_url": "https://api.github.com/users/Pharbi/following{/other_user}",
            "gists_url": "https://api.github.com/users/Pharbi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Pharbi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Pharbi/subscriptions",
            "organizations_url": "https://api.github.com/users/Pharbi/orgs",
            "repos_url": "https://api.github.com/users/Pharbi/repos",
            "events_url": "https://api.github.com/users/Pharbi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Pharbi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T16:24:16Z",
        "updated_at": "2023-07-12T01:14:43Z",
        "closed_at": "2023-07-12T01:14:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7358",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7358",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7358.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7358.patch",
            "merged_at": "2023-07-12T01:14:42Z"
        },
        "body": "Description: Refactor the upsert method in the Pinecone class to allow for additional keyword arguments. This change adds flexibility and extensibility to the method, allowing for future modifications or enhancements. The upsert method now accepts the `**kwargs` parameter, which can be used to pass any additional arguments to the Pinecone index. This change has been made in both the `upsert` method in the `Pinecone` class and the `upsert` method in the `similarity_search_with_score` class method. Falls in line with the usage of the upsert method in [Pinecone-Python-Client](https://github.com/pinecone-io/pinecone-python-client/blob/4640c4cf27b1ab935e76929c46d230dea9fe5506/pinecone/index.py#L73)\r\nIssue: [This feature request in Pinecone Repo](https://github.com/pinecone-io/pinecone-python-client/issues/184)\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - Memory: @hwchase17\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7358/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 2,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7358/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7357",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7357/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7357/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7357/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7357",
        "id": 1793804517,
        "node_id": "PR_kwDOIPDwls5U7ls0",
        "number": 7357,
        "title": "Explicitly list requires_reference in function",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T16:11:58Z",
        "updated_at": "2023-07-07T17:04:05Z",
        "closed_at": "2023-07-07T17:04:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7357",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7357",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7357.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7357.patch",
            "merged_at": "2023-07-07T17:04:04Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7357/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7357/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7356",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7356/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7356/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7356/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7356",
        "id": 1793785095,
        "node_id": "PR_kwDOIPDwls5U7hcE",
        "number": 7356,
        "title": "Datadog logs loader",
        "user": {
            "login": "kzk-maeda",
            "id": 18380243,
            "node_id": "MDQ6VXNlcjE4MzgwMjQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/18380243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kzk-maeda",
            "html_url": "https://github.com/kzk-maeda",
            "followers_url": "https://api.github.com/users/kzk-maeda/followers",
            "following_url": "https://api.github.com/users/kzk-maeda/following{/other_user}",
            "gists_url": "https://api.github.com/users/kzk-maeda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kzk-maeda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kzk-maeda/subscriptions",
            "organizations_url": "https://api.github.com/users/kzk-maeda/orgs",
            "repos_url": "https://api.github.com/users/kzk-maeda/repos",
            "events_url": "https://api.github.com/users/kzk-maeda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kzk-maeda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T15:58:10Z",
        "updated_at": "2023-07-10T08:27:56Z",
        "closed_at": "2023-07-10T08:27:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7356",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7356",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7356.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7356.patch",
            "merged_at": "2023-07-10T08:27:56Z"
        },
        "body": "### Description\r\nCreated a Loader to get a list of specific logs from Datadog Logs.\r\n\r\n### Dependencies\r\n`datadog_api_client` is required.\r\n\r\n### Tag maintainer\r\n@rlancemartin, @eyurtsev\r\n\r\n### Twitter handle\r\n[kzk_maeda](https://twitter.com/kzk_maeda)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7356/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7356/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7355",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7355/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7355/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7355/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7355",
        "id": 1793769729,
        "node_id": "PR_kwDOIPDwls5U7eKC",
        "number": 7355,
        "title": "change embedding to None",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T15:46:26Z",
        "updated_at": "2023-07-07T16:33:04Z",
        "closed_at": "2023-07-07T16:33:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7355",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7355",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7355.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7355.patch",
            "merged_at": "2023-07-07T16:33:03Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7355/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7355/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7354",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7354/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7354/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7354/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7354",
        "id": 1793749087,
        "node_id": "PR_kwDOIPDwls5U7Z-S",
        "number": 7354,
        "title": "bump 227",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T15:34:51Z",
        "updated_at": "2023-07-07T15:52:36Z",
        "closed_at": "2023-07-07T15:52:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7354",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7354",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7354.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7354.patch",
            "merged_at": "2023-07-07T15:52:35Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7354/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7354/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7353",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7353/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7353/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7353/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7353",
        "id": 1793680431,
        "node_id": "I_kwDOIPDwls5q6WQv",
        "number": 7353,
        "title": "HuggingFaceEndpoint Class Bug",
        "user": {
            "login": "syeminpark",
            "id": 70131115,
            "node_id": "MDQ6VXNlcjcwMTMxMTE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/70131115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/syeminpark",
            "html_url": "https://github.com/syeminpark",
            "followers_url": "https://api.github.com/users/syeminpark/followers",
            "following_url": "https://api.github.com/users/syeminpark/following{/other_user}",
            "gists_url": "https://api.github.com/users/syeminpark/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/syeminpark/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/syeminpark/subscriptions",
            "organizations_url": "https://api.github.com/users/syeminpark/orgs",
            "repos_url": "https://api.github.com/users/syeminpark/repos",
            "events_url": "https://api.github.com/users/syeminpark/events{/privacy}",
            "received_events_url": "https://api.github.com/users/syeminpark/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T14:49:27Z",
        "updated_at": "2023-07-11T07:06:07Z",
        "closed_at": "2023-07-11T07:06:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nthe provided class\r\n[langchain/langchain/llms/huggingface_endpoint.py](https://github.com/hwchase17/langchain/blob/370becdfc2dea35eab6b56244872001116d24f0b/langchain/llms/huggingface_endpoint.py)\r\n class HuggingFaceEndpoint(LLM): \r\n\r\nhas a bug.\r\nit should be\r\n```python\r\nif self.task == \"text-generation\":\r\n# Text generation return includes the starter text.\r\ntext = generated_text[0][\"generated_text\"]\r\n```\r\nnot\r\n```python\r\ntext = generated_text[0][\"generated_text\"][len(prompt) :]\r\n```\r\n\r\nthe current class will likely just return a 0.\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```python\r\n    llm= HuggingFaceEndpoint(endpoint_url=os.getenv('ENDPOINT_URL'),task=\"text-generation\",\r\n                              model_kwargs={\"temperature\":0.7, \"max_length\":512})\r\n conversation_chain = ConversationalRetrievalChain.from_llm(\r\n        llm=llm,\r\n        retriever=vectorstore.as_retriever(),\r\n        memory=memory\r\n    )\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nthe output is 0",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7353/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7353/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7352",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7352/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7352/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7352/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7352",
        "id": 1793643510,
        "node_id": "PR_kwDOIPDwls5U7DO9",
        "number": 7352,
        "title": "openai fn update nb",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T14:26:07Z",
        "updated_at": "2023-07-07T15:52:23Z",
        "closed_at": "2023-07-07T15:52:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7352",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7352",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7352.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7352.patch",
            "merged_at": "2023-07-07T15:52:22Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7352/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7352/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7349",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7349/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7349/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7349/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7349",
        "id": 1793589469,
        "node_id": "PR_kwDOIPDwls5U63e6",
        "number": 7349,
        "title": "Update README.md",
        "user": {
            "login": "doncamilom",
            "id": 32375632,
            "node_id": "MDQ6VXNlcjMyMzc1NjMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/32375632?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/doncamilom",
            "html_url": "https://github.com/doncamilom",
            "followers_url": "https://api.github.com/users/doncamilom/followers",
            "following_url": "https://api.github.com/users/doncamilom/following{/other_user}",
            "gists_url": "https://api.github.com/users/doncamilom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/doncamilom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/doncamilom/subscriptions",
            "organizations_url": "https://api.github.com/users/doncamilom/orgs",
            "repos_url": "https://api.github.com/users/doncamilom/repos",
            "events_url": "https://api.github.com/users/doncamilom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/doncamilom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T13:51:48Z",
        "updated_at": "2023-07-07T13:57:36Z",
        "closed_at": "2023-07-07T13:51:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7349",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7349",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7349.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7349.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7349/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7349/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7348",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7348/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7348/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7348/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7348",
        "id": 1793567578,
        "node_id": "PR_kwDOIPDwls5U6ywI",
        "number": 7348,
        "title": "update MosaicML inputs and outputs",
        "user": {
            "login": "pmeier",
            "id": 6849766,
            "node_id": "MDQ6VXNlcjY4NDk3NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6849766?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmeier",
            "html_url": "https://github.com/pmeier",
            "followers_url": "https://api.github.com/users/pmeier/followers",
            "following_url": "https://api.github.com/users/pmeier/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmeier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmeier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmeier/subscriptions",
            "organizations_url": "https://api.github.com/users/pmeier/orgs",
            "repos_url": "https://api.github.com/users/pmeier/repos",
            "events_url": "https://api.github.com/users/pmeier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmeier/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-07T13:37:40Z",
        "updated_at": "2023-07-07T21:23:11Z",
        "closed_at": "2023-07-07T21:23:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7348",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7348",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7348.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7348.patch",
            "merged_at": "2023-07-07T21:23:11Z"
        },
        "body": "As of today (July 7, 2023), the [MosaicML API](https://docs.mosaicml.com/en/latest/inference.html#text-completion-requests) uses `\"inputs\"` for the prompt\r\n\r\n![image](https://github.com/hwchase17/langchain/assets/6849766/58b1fb1b-a11d-4f28-8b7a-03b36b9df2d8)\r\n\r\nbut we have\r\n\r\nhttps://github.com/hwchase17/langchain/blob/0ed2da70200ada39f5319f604b4c5248bc98e81b/langchain/llms/mosaicml.py#L125\r\n\r\nFurthermore, the output should be inside the `\"outputs\"` key\r\n\r\n![image](https://github.com/hwchase17/langchain/assets/6849766/d60190d4-0e01-4ea1-9ff4-a7f1bb105aa4)\r\n\r\nbut we have\r\n\r\nhttps://github.com/hwchase17/langchain/blob/0ed2da70200ada39f5319f604b4c5248bc98e81b/langchain/llms/mosaicml.py#L163-L170\r\n\r\nThis PR adds support for this new format.\r\n\r\n`<rant>`\r\nIt is beyond me, why they apparently have versioned their API (endpoints look like `https://models.hosted-on.mosaicml.hosting/mpt-7b-instruct/v1/predict`; note the `v1` in there), but just keep changing the API without upping the version number. There is a good reason for\r\nhttps://github.com/hwchase17/langchain/blob/0ed2da70200ada39f5319f604b4c5248bc98e81b/langchain/llms/mosaicml.py#L160-L161\r\n`</rant>`\r\n\r\nCC @hwchase17, @baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7348/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7348/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7347",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7347/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7347/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7347/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7347",
        "id": 1793525647,
        "node_id": "I_kwDOIPDwls5q5weP",
        "number": 7347,
        "title": "map_reduce and refine not working with RetrievalQA chain ",
        "user": {
            "login": "KillerStrike17",
            "id": 25988007,
            "node_id": "MDQ6VXNlcjI1OTg4MDA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/25988007?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KillerStrike17",
            "html_url": "https://github.com/KillerStrike17",
            "followers_url": "https://api.github.com/users/KillerStrike17/followers",
            "following_url": "https://api.github.com/users/KillerStrike17/following{/other_user}",
            "gists_url": "https://api.github.com/users/KillerStrike17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KillerStrike17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KillerStrike17/subscriptions",
            "organizations_url": "https://api.github.com/users/KillerStrike17/orgs",
            "repos_url": "https://api.github.com/users/KillerStrike17/repos",
            "events_url": "https://api.github.com/users/KillerStrike17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KillerStrike17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-07-07T13:09:59Z",
        "updated_at": "2023-11-14T16:08:01Z",
        "closed_at": "2023-11-14T16:08:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain Version  - 0.0.201\r\nPlatform - Windows 11\r\nPython - 3.10.11\r\n\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. load some text documents to a vector store, i used deeplake\r\n2. load the db\r\n3. call the function, summarizer(db,\"Summarize the mentions of google according to their AI program\")(defined in attached file)\r\n4. run for chain_type as stuff, it will work, for map_reduce it will fail in retrieval QA Bot\r\n[main.zip](https://github.com/hwchase17/langchain/files/11982265/main.zip)\r\n\n\n### Expected behavior\n\nit should work for all the chain types and give results",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7347/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7347/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7346",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7346/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7346/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7346/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7346",
        "id": 1793511650,
        "node_id": "I_kwDOIPDwls5q5tDi",
        "number": 7346,
        "title": "Issue: When implementing Cypher Search using  neo4j environment",
        "user": {
            "login": "NLPAN",
            "id": 33030136,
            "node_id": "MDQ6VXNlcjMzMDMwMTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/33030136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NLPAN",
            "html_url": "https://github.com/NLPAN",
            "followers_url": "https://api.github.com/users/NLPAN/followers",
            "following_url": "https://api.github.com/users/NLPAN/following{/other_user}",
            "gists_url": "https://api.github.com/users/NLPAN/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NLPAN/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NLPAN/subscriptions",
            "organizations_url": "https://api.github.com/users/NLPAN/orgs",
            "repos_url": "https://api.github.com/users/NLPAN/repos",
            "events_url": "https://api.github.com/users/NLPAN/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NLPAN/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-07T13:00:11Z",
        "updated_at": "2023-10-28T16:05:40Z",
        "closed_at": "2023-10-28T16:05:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\npython environment\uff1a\r\nneo4j 5.0.0\r\nneobolt 1.7.17\r\nneo4j version: neo4j-35-apoc:v20220808\r\n\r\n\u62a5\u9519\uff1a\r\nFile \"D:\\Anaconda3\\envs\\langchain\\lib\\site-packages\\neo4j_sync\\io_bolt3.py\", line 200, in run\r\nraise ConfigurationError(\r\nneo4j.exceptions.ConfigurationError: Database name parameter for selecting database is not supported in Bolt Protocol Version(3, 0). Database name 'neo4\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7346/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7346/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7345",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7345/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7345/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7345/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7345",
        "id": 1793476844,
        "node_id": "I_kwDOIPDwls5q5kjs",
        "number": 7345,
        "title": "Load OPEN API yaml file to vertex ai LLM model",
        "user": {
            "login": "sarthakpaypay",
            "id": 133971841,
            "node_id": "U_kgDOB_w_gQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/133971841?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarthakpaypay",
            "html_url": "https://github.com/sarthakpaypay",
            "followers_url": "https://api.github.com/users/sarthakpaypay/followers",
            "following_url": "https://api.github.com/users/sarthakpaypay/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarthakpaypay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarthakpaypay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarthakpaypay/subscriptions",
            "organizations_url": "https://api.github.com/users/sarthakpaypay/orgs",
            "repos_url": "https://api.github.com/users/sarthakpaypay/repos",
            "events_url": "https://api.github.com/users/sarthakpaypay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarthakpaypay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T12:36:51Z",
        "updated_at": "2023-10-14T20:10:17Z",
        "closed_at": "2023-10-14T20:10:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI am looking for loading OPEN API yaml file into vertex ai llm model. Langchain provides that for OPENAI but not for vertex ai. This is how I currently write code in Open AI. I want a similar functionality for Vertex AI\r\n\r\nspec = OpenAPISpec.from_file(\"sample.yaml\")             \r\nopenai_fns, call_api_fn = openapi_spec_to_openai_fn(spec) \n\n### Motivation\n\nI am creating on a GENAI chatbot for my company where customers can ask questions specific to our product. I need to return the answers of those queries using our internal API's. To query those API's, I need to know which API to call and the API parameters filled as per the user query.  For that, I need vertex ai function calling support to query it.\r\n\r\nIs there already a way in vertex ai which does this? Kindly help me on this.\n\n### Your contribution\n\nI can help on the issue if anything is required.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7345/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7345/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7344",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7344/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7344/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7344/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7344",
        "id": 1793440622,
        "node_id": "PR_kwDOIPDwls5U6XHQ",
        "number": 7344,
        "title": "Add context to an output parsing error on Pydantic schema to improve exception handling",
        "user": {
            "login": "msaelices",
            "id": 136875,
            "node_id": "MDQ6VXNlcjEzNjg3NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/136875?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/msaelices",
            "html_url": "https://github.com/msaelices",
            "followers_url": "https://api.github.com/users/msaelices/followers",
            "following_url": "https://api.github.com/users/msaelices/following{/other_user}",
            "gists_url": "https://api.github.com/users/msaelices/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/msaelices/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/msaelices/subscriptions",
            "organizations_url": "https://api.github.com/users/msaelices/orgs",
            "repos_url": "https://api.github.com/users/msaelices/repos",
            "events_url": "https://api.github.com/users/msaelices/events{/privacy}",
            "received_events_url": "https://api.github.com/users/msaelices/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T12:10:03Z",
        "updated_at": "2023-07-07T18:49:38Z",
        "closed_at": "2023-07-07T18:49:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7344",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7344",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7344.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7344.patch",
            "merged_at": "2023-07-07T18:49:37Z"
        },
        "body": "## Changes\r\n\r\n- [X] Fill the `llm_output` param when there is an output parsing error in a Pydantic schema so that we can get the original text that failed to parse when handling the exception\r\n\r\n## Background\r\n\r\nWith this change, we could do something like this:\r\n\r\n```\r\noutput_parser = PydanticOutputParser(pydantic_object=pydantic_obj)\r\nchain = ConversationChain(..., output_parser=output_parser)\r\ntry:\r\n    response: PydanticSchema = chain.predict(input=input)\r\nexcept OutputParserException as exc:\r\n    logger.error(\r\n        'OutputParserException while parsing chatbot response: %s', exc.llm_output,\r\n    )\r\n```\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7344/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7344/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7343",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7343/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7343/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7343/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7343",
        "id": 1793386363,
        "node_id": "I_kwDOIPDwls5q5Od7",
        "number": 7343,
        "title": "Issue: openai.error.RateLimitError: Rate limit reached for default-text-embedding-ada-002 in organization",
        "user": {
            "login": "Imperator8",
            "id": 78373618,
            "node_id": "MDQ6VXNlcjc4MzczNjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/78373618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Imperator8",
            "html_url": "https://github.com/Imperator8",
            "followers_url": "https://api.github.com/users/Imperator8/followers",
            "following_url": "https://api.github.com/users/Imperator8/following{/other_user}",
            "gists_url": "https://api.github.com/users/Imperator8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Imperator8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Imperator8/subscriptions",
            "organizations_url": "https://api.github.com/users/Imperator8/orgs",
            "repos_url": "https://api.github.com/users/Imperator8/repos",
            "events_url": "https://api.github.com/users/Imperator8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Imperator8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 18,
        "created_at": "2023-07-07T11:34:51Z",
        "updated_at": "2023-10-22T20:00:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI want to download a large file, 5,000,000 characters, and I get an error: openai.error.RateLimitError: Rate limit reached for default-text-embedding-ada-002 in organization org-DOqIVFPozlLEOcvlTbpvpcKt on tokens per min. Limit: 150000 / min. Current: 0 / min. Contact us through our help center at help.openai.com if you continue to have issues. Please add a payment method to your account to increase your rate limit. Visit https://platform.openai.com/account/billing to add a payment method.\r\n\r\nMy code:\r\n`class Agent:\r\n    def __init__(self, openai_api_key: str | None = None) -> None:\r\n\r\n        self.key = openai_api_key\r\n        self.embeddings = OpenAIEmbeddings(openai_api_key=openai_api_key, request_timeout=120, max_retries=10)\r\n        self.text_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=200)\r\n\r\n        self.llm = ChatOpenAI(temperature=0, openai_api_key=openai_api_key, max_tokens=500, model_name=\"gpt-3.5-turbo-16k\")\r\n\r\n        self.chat_history = None\r\n        self.chain = None\r\n        self.db = None\r\n\r\n    def ask(self, question: str) -> str:\r\n        response = self.chain({\"question\": question, \"chat_history\": self.chat_history})\r\n        response = response[\"answer\"].strip()\r\n        self.chat_history.append((question, response))\r\n        return response\r\n\r\n    def ingest(self, file_path) -> None:\r\n        loader = TextLoader(file_path, encoding=\"utf-8\")\r\n        documents = loader.load()\r\n        splitted_documents = self.text_splitter.split_documents(documents)\r\n\r\n        if self.db is None:\r\n            self.db = FAISS.from_documents(splitted_documents, self.embeddings)\r\n            self.chain = ConversationalRetrievalChain.from_llm(self.llm, self.db.as_retriever())\r\n            self.chat_history = []\r\n        else:\r\n            self.db.add_documents(splitted_documents)\r\n\r\n    def forget(self) -> None:\r\n        self.db = None\r\n        self.chain = None\r\n        self.chat_history = None`\r\n        \r\nIs there a solution to this problem?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7343/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7343/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7342",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7342/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7342/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7342/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7342",
        "id": 1793380496,
        "node_id": "PR_kwDOIPDwls5U6J00",
        "number": 7342,
        "title": "added index retreival from redis search",
        "user": {
            "login": "TRY-ER",
            "id": 75255871,
            "node_id": "MDQ6VXNlcjc1MjU1ODcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/75255871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TRY-ER",
            "html_url": "https://github.com/TRY-ER",
            "followers_url": "https://api.github.com/users/TRY-ER/followers",
            "following_url": "https://api.github.com/users/TRY-ER/following{/other_user}",
            "gists_url": "https://api.github.com/users/TRY-ER/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TRY-ER/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TRY-ER/subscriptions",
            "organizations_url": "https://api.github.com/users/TRY-ER/orgs",
            "repos_url": "https://api.github.com/users/TRY-ER/repos",
            "events_url": "https://api.github.com/users/TRY-ER/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TRY-ER/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T11:31:24Z",
        "updated_at": "2023-07-18T17:50:30Z",
        "closed_at": "2023-07-18T17:50:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7342",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7342",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7342.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7342.patch",
            "merged_at": null
        },
        "body": "\r\n\r\nReplace this comment with:\r\n  - Description: change consists retrieval of document id from redis search for semantic search of redis vectorstore\r\n  - Issue: It helps to gather the document id for further processing of the filtered data in redis database\r\n  - Dependencies: no dependancies\r\n  - Tag maintainer: @rlancemartin, @eyurtsev\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7342/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7342/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]