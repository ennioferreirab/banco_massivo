[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6887",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6887/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6887/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6887/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6887",
        "id": 1802727096,
        "node_id": "I_kwDOIWuq585rc264",
        "number": 6887,
        "title": "[Question]: Querying pdf data using fiass vector store",
        "user": {
            "login": "sumanthp",
            "id": 11244510,
            "node_id": "MDQ6VXNlcjExMjQ0NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/11244510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sumanthp",
            "html_url": "https://github.com/sumanthp",
            "followers_url": "https://api.github.com/users/sumanthp/followers",
            "following_url": "https://api.github.com/users/sumanthp/following{/other_user}",
            "gists_url": "https://api.github.com/users/sumanthp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sumanthp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sumanthp/subscriptions",
            "organizations_url": "https://api.github.com/users/sumanthp/orgs",
            "repos_url": "https://api.github.com/users/sumanthp/repos",
            "events_url": "https://api.github.com/users/sumanthp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sumanthp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-13T10:35:07Z",
        "updated_at": "2023-10-23T16:03:05Z",
        "closed_at": "2023-10-23T16:03:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nFacing issue while trying to create and query fiass vector store on pdf documents. It is not able to find index_id used while creating the index. Is there an option to provide index name while creating the index.\r\n\r\nCode:\r\n`index_name = st.text_input(\"Enter the Index name\",key=\"faiss_index\")\r\n        if st.button(\"Create Index\",key=\"faiss_button\"):\r\n            st.session_state.faiss_index_list.append(index_name)\r\n            documents = SimpleDirectoryReader(dir_path).load_data()\r\n\r\n            # create a Faiss vector store\r\n            vector_store = FaissVectorStore(faiss_index)\r\n            storage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n                                                        #    ,persist_dir=\"/home/azureuser/streamlit/Fiass/\"+index_name)\r\n            index = VectorStoreIndex.from_documents(documents, service_context=service_context)\r\n            index.set_index_id(index_name)\r\n            index.storage_context.persist(\"/home/azureuser/streamlit/Fiass/\"+index_name)\r\n            index = load_index_from_storage(storage_context=storage_context,index_id=index_name,service_context=service_context)\r\n            query_engine = index.as_query_engine(response_mode='refine', service_context=service_context)\r\n            query = st.text_input(\"Enter your query here:\",key=\"query_fiass\")\r\n        if st.button(\"Search\",key=\"search_faiss\"):\r\n            response = query_engine.query(query)\r\n            st.write(response.response)`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6887/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6887/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6886",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6886/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6886/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6886/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6886",
        "id": 1802722499,
        "node_id": "I_kwDOIWuq585rc1zD",
        "number": 6886,
        "title": "[Bug]: Optional table context (context_str) ignored by SQLTableRetrieverQueryEngine",
        "user": {
            "login": "richardguinness",
            "id": 47474926,
            "node_id": "MDQ6VXNlcjQ3NDc0OTI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/47474926?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/richardguinness",
            "html_url": "https://github.com/richardguinness",
            "followers_url": "https://api.github.com/users/richardguinness/followers",
            "following_url": "https://api.github.com/users/richardguinness/following{/other_user}",
            "gists_url": "https://api.github.com/users/richardguinness/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/richardguinness/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/richardguinness/subscriptions",
            "organizations_url": "https://api.github.com/users/richardguinness/orgs",
            "repos_url": "https://api.github.com/users/richardguinness/repos",
            "events_url": "https://api.github.com/users/richardguinness/events{/privacy}",
            "received_events_url": "https://api.github.com/users/richardguinness/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-13T10:32:31Z",
        "updated_at": "2023-07-13T16:28:01Z",
        "closed_at": "2023-07-13T16:28:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen building a Table Index (as per [this guide](https://gpt-index.readthedocs.io/en/latest/examples/index_structs/struct_indices/SQLIndexDemo.html#building-our-table-index)) we should be able to add additional context for each table schema defined.\r\n\r\nHowever, `SQLTableRetrieverQueryEngine`s private member method `_get_table_context` ([here](https://github.com/jerryjliu/llama_index/blob/fc3eed13b1334278e85fb4120d46759081a5ad66/llama_index/indices/struct_store/sql_query.py#L405)) does not incorporate this functionality (see the TODO). So each tables columns/field types are included as context in a prompt, but not the additional (and very useful) table-level additional context.\n\n### Version\n\n0.7.4\n\n### Steps to Reproduce\n\nFollow steps in guide:\r\nhttps://gpt-index.readthedocs.io/en/latest/examples/index_structs/struct_indices/SQLIndexDemo.html#building-our-table-index\r\n\r\nInspect LLM input using LlamaDebugHandler ([here](https://gpt-index.readthedocs.io/en/latest/examples/callbacks/LlamaDebugHandler.html#llama-debug-handler)) and note `context_str` contents are not included.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6886/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6886/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6885",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6885/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6885/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6885/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6885",
        "id": 1802693357,
        "node_id": "I_kwDOIWuq585rcurt",
        "number": 6885,
        "title": "[Design Pattern/Tracking]: Use Smaller Context Window for better latency UX",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T10:15:09Z",
        "updated_at": "2023-10-19T16:03:55Z",
        "closed_at": "2023-10-19T16:03:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nAs discussed, while billing is per token, latency is quadratic in context window size. While it is possible to cram as much as possible into context window, it can affect UX, which some users have noticed.\r\n\r\nThere is a tradeoff in accuracy v.s. latency here. Preferably, with https://github.com/jerryjliu/llama_index/issues/6842, one shrinks the context window without removing important context. \r\n\r\nHowever, doing this well is not often clear. Hence a wide range of methods should be provided and benched over.\r\n\r\nTasks:\r\n- [ ] Improve intra-node ranking and pruning https://github.com/jerryjliu/llama_index/issues/6842\r\n- [ ] Cross-node ranking and pruning https://github.com/jerryjliu/llama_index/issues/6884\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6885/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6884",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6884/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6884/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6884/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6884",
        "id": 1802688774,
        "node_id": "I_kwDOIWuq585rctkG",
        "number": 6884,
        "title": "feat(context length): Cross-Node Ranking, Pruning and Marginalization",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-13T10:12:21Z",
        "updated_at": "2023-09-27T00:25:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nSo far, we've only considered inter-node (node reranking) and intra-node (sub-node sentence pruning) methods to select for relevant info into the LLM context. We should optimize over the entire sentence set or chunk set of all of the nodes, as some nodes may be more dense in relevant information than others. For the lack of a better term, we refer to this as \"cross-node\".\r\n\r\nFurthermore, we may want to marginalize sentences that contain similar semantic content to others (using a symmetric embedding). \r\n\r\nQuestions: \r\n1. on which level should the marginalization be performed? (inter-node v.s. cross-node)\r\n2. how to combine marginalization with pruning? One option is to first perform pruning (either intra-node or cross-node), then perform inter-node marginalization. Or, perhaps any combination as per one's intuition or whim.\r\n\r\nTasks:\r\n- [ ] abstraction for cross-node post-processing (combine current ones)\r\n- [ ] share abstraction between inter-node rerank, cross-node, and intra-node\r\n- [ ] marginalization\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6884/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6884/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6883",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6883/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6883/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6883/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6883",
        "id": 1802489966,
        "node_id": "I_kwDOIWuq585rb9Bu",
        "number": 6883,
        "title": "[Discussion/Tracking]: Declarative Global Config",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T08:30:03Z",
        "updated_at": "2023-10-19T16:04:00Z",
        "closed_at": "2023-10-19T16:04:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\n### Aim:\r\n- declarative config of pipeline\r\n\r\nMy feeling is that in the long term, we need some easy global config in a declarative style that goes beyond the imperative/object oriented style of configuring the pipeline via ServiceContext. \r\n\r\nMy main inspiration for the declarative style is Ray, but also other orchestration systems such as K8s.\r\n\r\n### Config coverage:\r\n1. Hyperparameters (e.g. retrieval_top_k)\r\n   - https://github.com/jerryjliu/llama_index/issues/6531\r\n2. Prompts - Can modify prompts via `prompt_key`. When prompt with key is encountered, it will be replaced by the one present in the global config. For templating, we need to factor prompt templates to always use the keywords, and to be able to fill them out partially. Metadata extraction prompts for instance do not currently obey this rule. Examples\r\n   - https://github.com/jerryjliu/llama_index/issues/6713\r\n   - https://github.com/jerryjliu/llama_index/issues/6748\r\n3. Pipeline components - e.g. summarizers, embeddings\r\n   - https://github.com/jerryjliu/llama_index/issues/6882\r\n\r\n### Config style:\r\n1. .yml\r\n2. json\r\n3. .toml\r\n4. Python dict\r\n\r\nSome combination of the above may be used.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6883/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6882",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6882/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6882/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6882/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6882",
        "id": 1802484070,
        "node_id": "I_kwDOIWuq585rb7lm",
        "number": 6882,
        "title": "[Investigate]: Cheap Local Summarization Models",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-13T08:26:18Z",
        "updated_at": "2023-10-22T16:03:51Z",
        "closed_at": "2023-10-22T16:03:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nOnce we have [e2e RAG benchmarks](https://github.com/jerryjliu/llama_index/issues/6824) in place (beyond BEIR), we should experiment with cheap sentence summarization models. To my understanding, summarization is a much easier task than multi-task generation, though perhaps harder than reranking. \r\n\r\nWe could use a drop-in replacement for dedicated summarizer in response synthesizer (based on LLM prompting).\r\n\r\nThere are large summarization models pretrained on various domains: \r\n1. Pubmed\r\n2. [Arxiv](https://huggingface.co/google/bigbird-pegasus-large-arxiv)\r\n3. Patents\r\n4. [News](https://huggingface.co/facebook/bart-large-cnn)\r\n5. [News (T5)](https://huggingface.co/mrm8488/t5-base-finetuned-summarize-news)\r\n\r\nSo it may be worth considering providing good defaults here too, where the user can select from broad categories.\r\n\r\nUse cases:\r\n1. Metadata extraction \r\n2. hierarchical index.\r\n3. Node length optimization\r\n\r\n---\r\n\r\nEdit: after some experimentation, these models are pretty terrible out of domain. They simply haven't seen enough text.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6882/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6882/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6881",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6881/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6881/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6881/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6881",
        "id": 1802263757,
        "node_id": "PR_kwDOIWuq585VYU34",
        "number": 6881,
        "title": "Fix typo in root.md",
        "user": {
            "login": "sad-mathematician",
            "id": 134358999,
            "node_id": "U_kgDOCAIn1w",
            "avatar_url": "https://avatars.githubusercontent.com/u/134358999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sad-mathematician",
            "html_url": "https://github.com/sad-mathematician",
            "followers_url": "https://api.github.com/users/sad-mathematician/followers",
            "following_url": "https://api.github.com/users/sad-mathematician/following{/other_user}",
            "gists_url": "https://api.github.com/users/sad-mathematician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sad-mathematician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sad-mathematician/subscriptions",
            "organizations_url": "https://api.github.com/users/sad-mathematician/orgs",
            "repos_url": "https://api.github.com/users/sad-mathematician/repos",
            "events_url": "https://api.github.com/users/sad-mathematician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sad-mathematician/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-13T06:14:24Z",
        "updated_at": "2023-07-17T07:11:02Z",
        "closed_at": "2023-07-13T07:16:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6881",
            "html_url": "https://github.com/run-llama/llama_index/pull/6881",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6881.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6881.patch",
            "merged_at": "2023-07-13T07:16:30Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6881/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6881/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6880",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6880/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6880/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6880/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6880",
        "id": 1802196439,
        "node_id": "I_kwDOIWuq585ra1XX",
        "number": 6880,
        "title": "[Question]: how you are doing this",
        "user": {
            "login": "alan-m-thomas",
            "id": 67413151,
            "node_id": "MDQ6VXNlcjY3NDEzMTUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/67413151?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alan-m-thomas",
            "html_url": "https://github.com/alan-m-thomas",
            "followers_url": "https://api.github.com/users/alan-m-thomas/followers",
            "following_url": "https://api.github.com/users/alan-m-thomas/following{/other_user}",
            "gists_url": "https://api.github.com/users/alan-m-thomas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alan-m-thomas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alan-m-thomas/subscriptions",
            "organizations_url": "https://api.github.com/users/alan-m-thomas/orgs",
            "repos_url": "https://api.github.com/users/alan-m-thomas/repos",
            "events_url": "https://api.github.com/users/alan-m-thomas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alan-m-thomas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T05:23:57Z",
        "updated_at": "2023-07-13T15:56:31Z",
        "closed_at": "2023-07-13T15:56:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nhow yo are doing this",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6880/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6879",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6879/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6879/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6879/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6879",
        "id": 1802100730,
        "node_id": "PR_kwDOIWuq585VXxDJ",
        "number": 6879,
        "title": "Relax typing dependencies",
        "user": {
            "login": "ehsanmok",
            "id": 6980212,
            "node_id": "MDQ6VXNlcjY5ODAyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6980212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ehsanmok",
            "html_url": "https://github.com/ehsanmok",
            "followers_url": "https://api.github.com/users/ehsanmok/followers",
            "following_url": "https://api.github.com/users/ehsanmok/following{/other_user}",
            "gists_url": "https://api.github.com/users/ehsanmok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ehsanmok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ehsanmok/subscriptions",
            "organizations_url": "https://api.github.com/users/ehsanmok/orgs",
            "repos_url": "https://api.github.com/users/ehsanmok/repos",
            "events_url": "https://api.github.com/users/ehsanmok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ehsanmok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-13T03:46:40Z",
        "updated_at": "2023-07-13T17:54:20Z",
        "closed_at": "2023-07-13T17:54:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6879",
            "html_url": "https://github.com/run-llama/llama_index/pull/6879",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6879.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6879.patch",
            "merged_at": "2023-07-13T17:54:20Z"
        },
        "body": "# Description\r\n\r\nThe fixed `typing_extensions==4.5.0` is problematic when resolving dependencies of other libraries for example when `poetry add llama-index`. cc @Disiok \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6879/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6878",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6878/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6878/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6878/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6878",
        "id": 1802093717,
        "node_id": "I_kwDOIWuq585racSV",
        "number": 6878,
        "title": "feat(evaluation): Add more BEIR examples comparing Retrievers along different settings",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-13T03:37:51Z",
        "updated_at": "2023-10-21T16:03:56Z",
        "closed_at": "2023-10-21T16:03:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nDimensions:\r\n- [ ] Node content: chunk size, chunk overlap, presence/absence of metadata (e.g. title, url)\r\n- [ ] Approximate similarity metric: SVM, MMR, Faiss ANN (IVF, HNSW)\r\n- [ ] Compare dense retrieval v.s. retrieval + rerank v.s. lexical methods v.s. neural + lexical methods\r\n\r\nTuning:\r\n- [ ] [Instruction-tuned](https://github.com/jerryjliu/llama_index/issues/6805)\r\n- [ ] [Linear-projection tuned](https://blog.vespa.ai/tailoring-frozen-embeddings-with-vespa/)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6878/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6878/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6877",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6877/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6877/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6877/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6877",
        "id": 1802089816,
        "node_id": "I_kwDOIWuq585rabVY",
        "number": 6877,
        "title": "feat(evaluation): Add BEIR Corpus Shrinker",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T03:32:26Z",
        "updated_at": "2023-10-03T00:55:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nObjectives:\r\n1. BEIR corpus size is large, takes a long time to evaluate. We want to reduce dev cycle time \r\n\r\nStrategy:\r\n1. Using the qrels, prune the corpus set. Next, prune the corresponding questions which depend on the pruned fraction of the corpus.\r\n\r\nAPI:\r\n```python\r\n# use 20%/10% of the full corpus sizes\r\nBeirEvaluator().run(\r\n  create_retriever, \r\n  datasets=[\"nfcorpus\", \"SciFact\"], \r\n  corpus_fractions=[0.2, 0.1]\r\n)\r\n```\r\n\r\nSee original comment: https://github.com/jerryjliu/llama_index/pull/6825#issuecomment-1632323872",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6877/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6877/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6876",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6876/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6876/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6876/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6876",
        "id": 1801985695,
        "node_id": "PR_kwDOIWuq585VXYI2",
        "number": 6876,
        "title": "feat(bench): bench embeddings",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-13T01:27:30Z",
        "updated_at": "2023-07-13T18:01:03Z",
        "closed_at": "2023-07-13T18:01:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6876",
            "html_url": "https://github.com/run-llama/llama_index/pull/6876",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6876.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6876.patch",
            "merged_at": "2023-07-13T18:01:02Z"
        },
        "body": "# Description\r\n\r\nFixes: https://github.com/jerryjliu/llama_index/issues/6804\r\n\r\nResults:\r\n![image](https://github.com/jerryjliu/llama_index/assets/9093549/3964c2e9-db41-466d-85f7-415769be13f7)\r\n\r\nSeq length honestly doesn't seem to matter, but this could be because BERT will be padded with empty tokens unlike autoregressive models...?\r\n\r\nNote that we don't use token length, but string length.\r\n\r\n## Type of Change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6876/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6876/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6875",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6875/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6875/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6875/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6875",
        "id": 1801826892,
        "node_id": "PR_kwDOIWuq585VW1Sx",
        "number": 6875,
        "title": "deprecated terms",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T22:08:23Z",
        "updated_at": "2023-07-12T22:48:50Z",
        "closed_at": "2023-07-12T22:48:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6875",
            "html_url": "https://github.com/run-llama/llama_index/pull/6875",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6875.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6875.patch",
            "merged_at": "2023-07-12T22:48:49Z"
        },
        "body": "# Description\r\n\r\nQuite a few search terms show up in the analytics for deprecated terms. Might be useful to have a page to re-direct people to similar tools?\r\n\r\nhttps://llama-index.slack.com/archives/C05F2SCUHHV/p1689192235993069?thread_ts=1689192188.781519&cid=C05F2SCUHHV\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6875/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6875/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6874",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6874/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6874/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6874/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6874",
        "id": 1801474366,
        "node_id": "PR_kwDOIWuq585VVnux",
        "number": 6874,
        "title": "update link to agents on docs",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T17:48:41Z",
        "updated_at": "2023-07-12T17:48:53Z",
        "closed_at": "2023-07-12T17:48:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6874",
            "html_url": "https://github.com/run-llama/llama_index/pull/6874",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6874.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6874.patch",
            "merged_at": "2023-07-12T17:48:52Z"
        },
        "body": "# Description\r\nupdate link to agents on docs",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6874/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6874/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6873",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6873/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6873/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6873/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6873",
        "id": 1801449028,
        "node_id": "PR_kwDOIWuq585VViDc",
        "number": 6873,
        "title": "[version] bump version to 0.7.6",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T17:36:52Z",
        "updated_at": "2023-07-12T19:50:11Z",
        "closed_at": "2023-07-12T19:50:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6873",
            "html_url": "https://github.com/run-llama/llama_index/pull/6873",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6873.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6873.patch",
            "merged_at": "2023-07-12T19:50:10Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6873/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6872",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6872/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6872/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6872/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6872",
        "id": 1801391539,
        "node_id": "PR_kwDOIWuq585VVVZz",
        "number": 6872,
        "title": "fix chroma notebook in docs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T16:59:47Z",
        "updated_at": "2023-07-12T17:05:23Z",
        "closed_at": "2023-07-12T17:05:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6872",
            "html_url": "https://github.com/run-llama/llama_index/pull/6872",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6872.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6872.patch",
            "merged_at": "2023-07-12T17:05:22Z"
        },
        "body": "# Description\r\n\r\nChroma notebook was completely borked\r\n- wrong embed_model usage\r\n- wrong chroma_collection usage\r\n- chromadb installation breaks our pydantic support\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/6858\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6872/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6872/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6871",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6871/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6871/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6871/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6871",
        "id": 1801368810,
        "node_id": "PR_kwDOIWuq585VVQbY",
        "number": 6871,
        "title": "Adding load and search tool",
        "user": {
            "login": "ajhofmann",
            "id": 10040285,
            "node_id": "MDQ6VXNlcjEwMDQwMjg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10040285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajhofmann",
            "html_url": "https://github.com/ajhofmann",
            "followers_url": "https://api.github.com/users/ajhofmann/followers",
            "following_url": "https://api.github.com/users/ajhofmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajhofmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajhofmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajhofmann/subscriptions",
            "organizations_url": "https://api.github.com/users/ajhofmann/orgs",
            "repos_url": "https://api.github.com/users/ajhofmann/repos",
            "events_url": "https://api.github.com/users/ajhofmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajhofmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T16:42:57Z",
        "updated_at": "2023-07-12T17:18:31Z",
        "closed_at": "2023-07-12T17:18:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6871",
            "html_url": "https://github.com/run-llama/llama_index/pull/6871",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6871.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6871.patch",
            "merged_at": "2023-07-12T17:18:31Z"
        },
        "body": "# Description\r\n\r\nAdds the Load and Search Meta tool to LlamaIndex, for use by other Tools in LlamaHub\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6871/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6871/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6870",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6870/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6870/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6870/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6870",
        "id": 1801365491,
        "node_id": "PR_kwDOIWuq585VVPsX",
        "number": 6870,
        "title": "Replace react chat engine to use native reactive agent",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T16:40:27Z",
        "updated_at": "2023-07-12T19:53:12Z",
        "closed_at": "2023-07-12T19:53:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6870",
            "html_url": "https://github.com/run-llama/llama_index/pull/6870",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6870.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6870.patch",
            "merged_at": "2023-07-12T19:53:11Z"
        },
        "body": "# Description\r\n\r\nReplace react chat engine to use native reactive agent\r\nSet default chat mode to best: use openai when possible, otherwise react\r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6870/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6870/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6869",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6869/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6869/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6869/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6869",
        "id": 1801336147,
        "node_id": "PR_kwDOIWuq585VVJP1",
        "number": 6869,
        "title": "Add simple agent benchmark",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T16:20:50Z",
        "updated_at": "2023-07-12T16:39:07Z",
        "closed_at": "2023-07-12T16:39:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6869",
            "html_url": "https://github.com/run-llama/llama_index/pull/6869",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6869.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6869.patch",
            "merged_at": "2023-07-12T16:39:03Z"
        },
        "body": "# Description\r\n\r\nAdd simple agent benchmark\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6869/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6869/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6868",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6868/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6868/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6868/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6868",
        "id": 1801335597,
        "node_id": "PR_kwDOIWuq585VVJIZ",
        "number": 6868,
        "title": "update LC embeddings docs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T16:20:28Z",
        "updated_at": "2023-07-12T16:20:47Z",
        "closed_at": "2023-07-12T16:20:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6868",
            "html_url": "https://github.com/run-llama/llama_index/pull/6868",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6868.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6868.patch",
            "merged_at": "2023-07-12T16:20:45Z"
        },
        "body": "# Description\r\n\r\nSlightly incorrect API usage\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/6862",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6868/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6867",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6867/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6867/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6867/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6867",
        "id": 1801324226,
        "node_id": "PR_kwDOIWuq585VVGke",
        "number": 6867,
        "title": "fix variable name clash for legacy vector indexes",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T16:14:31Z",
        "updated_at": "2023-07-12T16:21:12Z",
        "closed_at": "2023-07-12T16:21:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6867",
            "html_url": "https://github.com/run-llama/llama_index/pull/6867",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6867.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6867.patch",
            "merged_at": "2023-07-12T16:21:11Z"
        },
        "body": "# Description\r\n\r\nLoading data from legacy vector stores was causing some issues due to variable names overlapping\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/6864\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n- [x] Tested in terminal\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6867/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6867/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6866",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6866/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6866/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6866/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6866",
        "id": 1801323039,
        "node_id": "PR_kwDOIWuq585VVGTz",
        "number": 6866,
        "title": "add agent docs ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T16:13:40Z",
        "updated_at": "2023-07-12T16:23:00Z",
        "closed_at": "2023-07-12T16:23:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6866",
            "html_url": "https://github.com/run-llama/llama_index/pull/6866",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6866.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6866.patch",
            "merged_at": "2023-07-12T16:23:00Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6866/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6866/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6865",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6865/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6865/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6865/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6865",
        "id": 1801289773,
        "node_id": "PR_kwDOIWuq585VU-7A",
        "number": 6865,
        "title": "Add react agent",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T15:54:40Z",
        "updated_at": "2023-07-12T16:20:03Z",
        "closed_at": "2023-07-12T16:12:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6865",
            "html_url": "https://github.com/run-llama/llama_index/pull/6865",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6865.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6865.patch",
            "merged_at": "2023-07-12T16:12:03Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6865/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6865/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6864",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6864/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6864/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6864/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6864",
        "id": 1801137053,
        "node_id": "I_kwDOIWuq585rWyud",
        "number": 6864,
        "title": "[Bug]: Metadata is missing from vector store results.",
        "user": {
            "login": "tszumowski",
            "id": 10282962,
            "node_id": "MDQ6VXNlcjEwMjgyOTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10282962?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tszumowski",
            "html_url": "https://github.com/tszumowski",
            "followers_url": "https://api.github.com/users/tszumowski/followers",
            "following_url": "https://api.github.com/users/tszumowski/following{/other_user}",
            "gists_url": "https://api.github.com/users/tszumowski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tszumowski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tszumowski/subscriptions",
            "organizations_url": "https://api.github.com/users/tszumowski/orgs",
            "repos_url": "https://api.github.com/users/tszumowski/repos",
            "events_url": "https://api.github.com/users/tszumowski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tszumowski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-12T14:44:13Z",
        "updated_at": "2023-07-12T16:22:42Z",
        "closed_at": "2023-07-12T16:21:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI am running `llama-index==0.7.5`. I noticed when I retrieve from a Pinecone Vector Store, no metadata is returned even though I have metadata in my Pinecone index. \r\n\r\nStepping through the source code, I see this:\r\nhttps://github.com/jerryjliu/llama_index/blame/main/llama_index/vector_stores/utils.py#L98\r\n\r\n```\r\nmetadata = {}\r\nfor key, val in metadata.items():\r\n...\r\n``` \r\n\r\nIt clears the metadata dictionary, and then loops over an empty dictionary.\r\n\r\nThis line was introduced in https://github.com/jerryjliu/llama_index/pull/6586.\r\nIn that PR I see:\r\n> Massive change, appologies in advance.\r\n\r\nIs it possible that is an accidental line?\r\n\r\nWhen I revert to `llama-index-0.6.33` which is before this PR, I see metadata again. \n\n### Version\n\n0.7.5\n\n### Steps to Reproduce\n\n1. Create a vector store that has metadata, in my case it is a Pinecone vector store with a Pinecone index with metadata\r\n2. Instantiate vector and index\r\n3. Query\r\n4. Attempt to print sources\r\n\r\nPseudo-code:\r\n```\r\n    # Get API Keys from env\r\n    pinecone_api_key = os.environ.get(\"PINECONE_API_KEY\")\r\n\r\n    # Initialize Pinecone\r\n    pinecone.init(environment=pinecone_env_name, api_key=pinecone_api_key)\r\n    pinecone_index = pinecone.Index(pinecone_index_name)\r\n\r\n    # Initialize vector store\r\n    vector_store = PineconeVectorStore(\r\n        pinecone_index=pinecone_index, namespace=namespace\r\n    )\r\n\r\n    # Build index from existing vector store\r\n    index = VectorStoreIndex.from_vector_store(\r\n        vector_store\r\n    )\r\n\r\n    # Create engine\r\n    query_engine = index.as_query_engine(similarity_top_k=top_k)\r\n\r\n    response = query_engine.query(query)\r\n\r\n    print(\"\\nResponse:\\n\")\r\n    print(response)\r\n\r\n    print(\"\\nSources:\\n\")\r\n    sources = response.get_formatted_sources()\r\n    print(sources)\r\n\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6864/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6864/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6863",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6863/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6863/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6863/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6863",
        "id": 1800508457,
        "node_id": "I_kwDOIWuq585rUZQp",
        "number": 6863,
        "title": "[Bug]: 'embedding' is not a valid TreeRetrieverMode",
        "user": {
            "login": "ZhuJD-China",
            "id": 50070803,
            "node_id": "MDQ6VXNlcjUwMDcwODAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/50070803?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZhuJD-China",
            "html_url": "https://github.com/ZhuJD-China",
            "followers_url": "https://api.github.com/users/ZhuJD-China/followers",
            "following_url": "https://api.github.com/users/ZhuJD-China/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZhuJD-China/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZhuJD-China/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZhuJD-China/subscriptions",
            "organizations_url": "https://api.github.com/users/ZhuJD-China/orgs",
            "repos_url": "https://api.github.com/users/ZhuJD-China/repos",
            "events_url": "https://api.github.com/users/ZhuJD-China/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZhuJD-China/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T08:57:25Z",
        "updated_at": "2023-07-12T16:39:37Z",
        "closed_at": "2023-07-12T16:39:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n# set Logging to DEBUG for more detailed outputs\r\nquery_engine = index.as_query_engine(retriever_mode=\"embedding\")\r\nresponse = query_engine.query(\r\n    \"What is the name of the professional women's basketball team in New York City?\"\r\n)\r\n\r\n[Bug]: 'embedding' is not a valid TreeRetrieverMode\n\n### Version\n\nLlamaIndex \ud83e\udd99 0.7.5\n\n### Steps to Reproduce\n\nTestNYC_Embeddings.ipynb\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6863/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6863/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6862",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6862/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6862/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6862/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6862",
        "id": 1800416741,
        "node_id": "I_kwDOIWuq585rUC3l",
        "number": 6862,
        "title": "[Documentation]: LangChainEmbedding example code",
        "user": {
            "login": "ahayat16",
            "id": 61722512,
            "node_id": "MDQ6VXNlcjYxNzIyNTEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/61722512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahayat16",
            "html_url": "https://github.com/ahayat16",
            "followers_url": "https://api.github.com/users/ahayat16/followers",
            "following_url": "https://api.github.com/users/ahayat16/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahayat16/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahayat16/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahayat16/subscriptions",
            "organizations_url": "https://api.github.com/users/ahayat16/orgs",
            "repos_url": "https://api.github.com/users/ahayat16/repos",
            "events_url": "https://api.github.com/users/ahayat16/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahayat16/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T08:04:39Z",
        "updated_at": "2023-07-12T16:20:47Z",
        "closed_at": "2023-07-12T16:20:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nFor custom embeddings there might be a slight issue in the example code given with LangChain: the given code is\r\n\r\n```\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom llama_index import LangchainEmbedding, ServiceContext\r\n\r\nembed_model = LangchainEmbedding(\r\n  HuggingFaceEmbeddings(\"sentence-transformers/all-mpnet-base-v2\")\r\n)\r\nservice_context = ServiceContext.from_defaults(embed_model=embed_model)\r\n\r\n```\r\nthis would return an error (like __init__ has one argument, 2 are specified) as it should maybe be, given the current initialization of HuggingFaceEmbeddings:\r\n\r\n```\r\nembed_model = LangchainEmbedding(\r\n  HuggingFaceEmbeddings(model_name=\"sentence-transformers/all-mpnet-base-v2\")\r\n)\r\n\r\n```\n\n### Documenation Link\n\nhttps://gpt-index.readthedocs.io/en/latest/core_modules/model_modules/embeddings/usage_pattern.html#custom-embedding-model",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6862/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6861",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6861/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6861/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6861/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6861",
        "id": 1800189725,
        "node_id": "PR_kwDOIWuq585VRNwj",
        "number": 6861,
        "title": "chore: added a help message to makefile",
        "user": {
            "login": "jjmachan",
            "id": 5261489,
            "node_id": "MDQ6VXNlcjUyNjE0ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5261489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jjmachan",
            "html_url": "https://github.com/jjmachan",
            "followers_url": "https://api.github.com/users/jjmachan/followers",
            "following_url": "https://api.github.com/users/jjmachan/following{/other_user}",
            "gists_url": "https://api.github.com/users/jjmachan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jjmachan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jjmachan/subscriptions",
            "organizations_url": "https://api.github.com/users/jjmachan/orgs",
            "repos_url": "https://api.github.com/users/jjmachan/repos",
            "events_url": "https://api.github.com/users/jjmachan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jjmachan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T05:05:15Z",
        "updated_at": "2023-07-12T20:12:26Z",
        "closed_at": "2023-07-12T20:12:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6861",
            "html_url": "https://github.com/run-llama/llama_index/pull/6861",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6861.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6861.patch",
            "merged_at": "2023-07-12T20:12:25Z"
        },
        "body": "# Description\r\n\r\n- Added a help message to make file\r\n![image](https://github.com/jerryjliu/llama_index/assets/5261489/6fa9fbf4-c7b7-4002-b2b4-845c6c7494d6)\r\n- Ran `make format` to commit a few files that were not formated\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6861/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6860",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6860/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6860/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6860/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6860",
        "id": 1800163524,
        "node_id": "I_kwDOIWuq585rTFDE",
        "number": 6860,
        "title": "[Investigate(local models)]: Local rerankers",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T04:41:10Z",
        "updated_at": "2023-07-19T03:22:52Z",
        "closed_at": "2023-07-19T03:22:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nCross-encoding models such as BERT-based or late interaction models like ColBERT (not the indexing part) can be used as local rerankers which are likely to outperform dense embeddings (prior to being fine-tuned). \r\n\r\nTo my understanding, Cohere's reranker is based on the former pattern.\r\n\r\n### Implementation\r\nHere are some good candidates:\r\n1. cross-encoder/ms-marco-TinyBERT-L-2-v2\r\n2. cross-encoder/ms-marco-MiniLM-L-2-v2\r\n\r\n\r\n\r\n### Resources\r\n1. See this pattern described in more detail in the [sbert/sentence-transformer docs](https://www.sbert.net/examples/applications/retrieve_rerank/README.html)\r\n2. [Pretrained cross encoders list/bench on sentence-transformers ](https://www.sbert.net/docs/pretrained-models/ce-msmarco.html)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6860/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6860/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6859",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6859/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6859/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6859/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6859",
        "id": 1800123128,
        "node_id": "I_kwDOIWuq585rS7L4",
        "number": 6859,
        "title": "[Feature Request]: Support HuggingFace self-hosted LLM endpoint",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T04:01:32Z",
        "updated_at": "2023-10-18T16:03:48Z",
        "closed_at": "2023-10-18T16:03:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nSome users may want to deploy their own LLM endpoint based on open source. Huggingface's infra for doing so may not be a bad choice. We can integrate with it. https://github.com/huggingface/text-generation-inference\r\n\r\nNot sure if it can handle embedding inference too. (Guess not, but see: https://github.com/huggingface/text-generation-inference/issues/199). Hopefully it can extract good util from the device. For instance the right amount of concurrent embeddings to perform given the GPU memory.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6859/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6859/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6858",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6858/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6858/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6858/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6858",
        "id": 1800035131,
        "node_id": "I_kwDOIWuq585rSls7",
        "number": 6858,
        "title": "Can not load it into Chroma, and then query it \uff01index.as_query_engine(chroma_collection=chroma_collection)",
        "user": {
            "login": "ZhuJD-China",
            "id": 50070803,
            "node_id": "MDQ6VXNlcjUwMDcwODAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/50070803?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZhuJD-China",
            "html_url": "https://github.com/ZhuJD-China",
            "followers_url": "https://api.github.com/users/ZhuJD-China/followers",
            "following_url": "https://api.github.com/users/ZhuJD-China/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZhuJD-China/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZhuJD-China/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZhuJD-China/subscriptions",
            "organizations_url": "https://api.github.com/users/ZhuJD-China/orgs",
            "repos_url": "https://api.github.com/users/ZhuJD-China/repos",
            "events_url": "https://api.github.com/users/ZhuJD-China/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZhuJD-China/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T02:08:52Z",
        "updated_at": "2023-07-12T17:05:23Z",
        "closed_at": "2023-07-12T17:05:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n# save to disk\r\nfrom dotenv import load_dotenv\r\n\r\nload_dotenv()\r\nfrom chromadb import Settings\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader\r\nfrom llama_index.vector_stores import ChromaVectorStore\r\nfrom llama_index.storage.storage_context import StorageContext\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom llama_index.embeddings import LangchainEmbedding\r\nfrom IPython.display import Markdown, display\r\nimport chromadb\r\n# set up OpenAI\r\nimport os\r\nimport getpass\r\n\r\n# create client and a new collection\r\nchroma_client = chromadb.Client()\r\nchroma_collection = chroma_client.create_collection(\"quickstart\")\r\n\r\nprint(chroma_collection.count())\r\n\r\n# define embedding function\r\nembed_model = LangchainEmbedding(\r\n    HuggingFaceEmbeddings(model_name=\"sentence-transformers/all-mpnet-base-v2\")\r\n)\r\n\r\n# load documents\r\ndocuments = SimpleDirectoryReader(\r\n    \"news\"\r\n).load_data()\r\n\r\n# print(documents)\r\n\r\n# set up ChromaVectorStore and load in data\r\nvector_store = ChromaVectorStore(chroma_collection=chroma_collection)\r\nstorage_context = StorageContext.from_defaults(vector_store=vector_store)\r\nindex = VectorStoreIndex.from_documents(\r\n    documents, storage_context=storage_context, embed_model=embed_model\r\n)\r\n\r\nprint(index)\r\nprint(chroma_collection.count())\r\n# print(chroma_collection.get()['documents'])\r\n# print(chroma_collection.get()['metadatas'])\r\n\r\n# Query Data\r\nquery_engine = index.as_query_engine(chroma_collection=chroma_collection)\r\nresponse = query_engine.query(\"\u4e2d\u56fd\u6700\u8fd1\u53d1\u751f\u4e86\u4ec0\u4e48,\u8bf4\u51fa\u53d1\u751f\u7684\u65f6\u95f4?\")\r\nprint(response)\r\ndisplay(Markdown(f\"<b>{response}</b>\"))\r\n\r\n\r\nOUTPUTS:\r\nF:\\Anaconda\\python.exe D:\\EmbeddingsSearch\\Chroma_Search\\test.py \r\n0\r\n<llama_index.indices.vector_store.base.VectorStoreIndex object at 0x00000210F8D88E50>\r\n77\r\n\r\n\u4e2d\u56fd\u6700\u8fd1\u53d1\u751f\u4e862022\u5e7411\u6708\u672b\uff0c\u4e2d\u56fd\u5317\u4eac\u3001\u4e0a\u6d77\u3001\u5357\u4eac\u3001\u5e7f\u5dde\u3001\u6210\u90fd\u3001\u91cd\u5e86\u7b49\u591a\u4e2a\u57ce\u5e02\u7206\u53d1\u4e86\u5927\u6279\u5e74\u8f7b\u4eba\u6297\u8bae\u6240\u8c13\u201c\u52a8\u6001\u6e05\u96f6\u201d\u6781\u7aef\u9632\u75ab\u653f\u7b56\u7684\u767d\u7eb8\u8fd0\u52a8\uff0c\u4ee5\u53ca\u6b66\u6c49\u3001\u5927\u8fde\u3001\u978d\u5c71\u7b49\u5730\u51fa\u73b0\u4e86\u5927\u6279\u9000\u4f11\u4eba\u5458\u4e0a\u8857\u6297\u8bae\u533b\u4fdd\u798f\u5229\u524a\u51cf\u7684\u201c\u767d\u53d1\u8fd0\u52a8\u201d\uff0c\u4ee5\u53ca\u4e2d\u5171\u9886\u5bfc\u4eba\u53cd\u590d\u5f3a\u8c03\u5b89\u5168\uff0c\u4ee5\u53ca\u8fbe\u8d56\u5587\u561b\u79f0\u5317\u4eac\u65b9\u9762\u6709\u610f\u4e0e\u4ed6\u63a5\u89e6\uff0c\u4ed6\u5bf9\u6062\u590d\u5bf9\u8bdd\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u53d1\u751f\u7684\u65f6\u95f4\u662f2022\u5e7411\u6708\u672b\u81f32023\u5e747\u670810\u65e5\u3002\r\n<IPython.core.display.Markdown object>\r\n\r\nProcess finished with exit code 0\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6858/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6857",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6857/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6857/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6857/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6857",
        "id": 1800029364,
        "node_id": "PR_kwDOIWuq585VQrCY",
        "number": 6857,
        "title": "Chat Memory Buffer",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T02:00:52Z",
        "updated_at": "2023-11-30T02:29:41Z",
        "closed_at": "2023-07-12T04:49:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6857",
            "html_url": "https://github.com/run-llama/llama_index/pull/6857",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6857.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6857.patch",
            "merged_at": "2023-07-12T04:49:52Z"
        },
        "body": "# Description\r\n\r\nInitial design for chat memory. Super simple, mainly just `get()` and `put()` methods, which should abstract well to multiple approaches.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] ran existing notebooks\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Todo\r\n\r\n- [x] Initial abstraction\r\n- [x] integrate with agents + chat engines\r\n- [x] tests\r\n- [x] docs\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6857/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6857/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6856",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6856/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6856/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6856/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6856",
        "id": 1800018131,
        "node_id": "PR_kwDOIWuq585VQoss",
        "number": 6856,
        "title": "[version] bump version to 0.7.5",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T01:44:41Z",
        "updated_at": "2023-07-12T01:49:08Z",
        "closed_at": "2023-07-12T01:49:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6856",
            "html_url": "https://github.com/run-llama/llama_index/pull/6856",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6856.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6856.patch",
            "merged_at": "2023-07-12T01:49:07Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6856/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6855",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6855/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6855/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6855/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6855",
        "id": 1799987957,
        "node_id": "PR_kwDOIWuq585VQiYl",
        "number": 6855,
        "title": "Native support for Anthropic",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T01:04:58Z",
        "updated_at": "2023-07-12T01:42:28Z",
        "closed_at": "2023-07-12T01:42:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6855",
            "html_url": "https://github.com/run-llama/llama_index/pull/6855",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6855.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6855.patch",
            "merged_at": "2023-07-12T01:42:27Z"
        },
        "body": "# Description\r\n\r\nAdd Anthropic LLM\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6855/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6855/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6854",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6854/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6854/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6854/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6854",
        "id": 1799862094,
        "node_id": "PR_kwDOIWuq585VQGob",
        "number": 6854,
        "title": "Agent tool sources",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-11T22:46:37Z",
        "updated_at": "2023-07-12T14:20:20Z",
        "closed_at": "2023-07-12T07:40:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6854",
            "html_url": "https://github.com/run-llama/llama_index/pull/6854",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6854.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6854.patch",
            "merged_at": "2023-07-12T07:40:01Z"
        },
        "body": "# Description\r\n\r\nThis exposes the names, inputs, and outputs of tools called in between each agent response.\r\n\r\nBREAKING CHANGE ALERT: Agents no longer stream intermediate steps, in order to align with chat engine behaviour.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Todo:\r\n\r\n- [x] Update docs\r\n- [x] Alert @sourabhdesai \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6854/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6854/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6853",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6853/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6853/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6853/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6853",
        "id": 1799754477,
        "node_id": "PR_kwDOIWuq585VPu-V",
        "number": 6853,
        "title": "arize callback handler",
        "user": {
            "login": "axiomofjoy",
            "id": 15664869,
            "node_id": "MDQ6VXNlcjE1NjY0ODY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15664869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axiomofjoy",
            "html_url": "https://github.com/axiomofjoy",
            "followers_url": "https://api.github.com/users/axiomofjoy/followers",
            "following_url": "https://api.github.com/users/axiomofjoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/axiomofjoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axiomofjoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axiomofjoy/subscriptions",
            "organizations_url": "https://api.github.com/users/axiomofjoy/orgs",
            "repos_url": "https://api.github.com/users/axiomofjoy/repos",
            "events_url": "https://api.github.com/users/axiomofjoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axiomofjoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-11T21:06:46Z",
        "updated_at": "2023-08-14T05:37:21Z",
        "closed_at": "2023-08-14T05:37:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6853",
            "html_url": "https://github.com/run-llama/llama_index/pull/6853",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6853.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6853.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6853/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6853/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6852",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6852/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6852/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6852/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6852",
        "id": 1799725981,
        "node_id": "I_kwDOIWuq585rRaOd",
        "number": 6852,
        "title": "I am having problems loading multiples indexes.",
        "user": {
            "login": "fpiantoni",
            "id": 47485566,
            "node_id": "MDQ6VXNlcjQ3NDg1NTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/47485566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fpiantoni",
            "html_url": "https://github.com/fpiantoni",
            "followers_url": "https://api.github.com/users/fpiantoni/followers",
            "following_url": "https://api.github.com/users/fpiantoni/following{/other_user}",
            "gists_url": "https://api.github.com/users/fpiantoni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fpiantoni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fpiantoni/subscriptions",
            "organizations_url": "https://api.github.com/users/fpiantoni/orgs",
            "repos_url": "https://api.github.com/users/fpiantoni/repos",
            "events_url": "https://api.github.com/users/fpiantoni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fpiantoni/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-11T20:44:42Z",
        "updated_at": "2023-07-12T17:07:42Z",
        "closed_at": "2023-07-12T17:07:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am using llama_index==0.6.35 \r\n\r\nI have created multiple GPTVectorStoreIndex with different data and i am trying to load all of them so i can make a query.\r\n\r\nI have the following directory structure: \r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/47485566/d1a07093-619e-46da-9ee3-c9d1b21172d5)\r\n\r\n\r\nAnd this is how i am loading it. I have never used llama_index before, i managed to load data from a single index but i am not being able to do it with multiple ones. \r\n\r\ndef chatbot(input_text):\r\n    print(input_text)\r\n    storage_context = StorageContext.from_defaults(persist_dir='index/')\r\n    print(\"I have passed the storage_context\")\r\n    print(storage_context) \r\n    promt_input = input_text\r\n    try:\r\n         # Specify the IDs of the indices you want to load\r\n        index_ids = ['index1', 'index2', 'index3', 'index4']\r\n        index = load_indices_from_storage(storage_context, index_ids=index_ids)  # Load the index\r\n        print(\"I have passed the index\")\r\n        query_engine = index.as_query_engine(streaming=False, similarity_top_k=3)\r\n        response = query_engine.query(promt_input)\r\n        print(response.response)\r\n        return response.response\r\n    except Exception as e:\r\n        print(f\"Error: {e}\")\r\n        return None\r\n\r\n\r\nThanks in advance for the help. \r\n\r\n:)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6852/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6852/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6851",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6851/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6851/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6851/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6851",
        "id": 1799723519,
        "node_id": "PR_kwDOIWuq585VPoQv",
        "number": 6851,
        "title": "fix doc for custom embedding model",
        "user": {
            "login": "zizhong",
            "id": 3625100,
            "node_id": "MDQ6VXNlcjM2MjUxMDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3625100?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zizhong",
            "html_url": "https://github.com/zizhong",
            "followers_url": "https://api.github.com/users/zizhong/followers",
            "following_url": "https://api.github.com/users/zizhong/following{/other_user}",
            "gists_url": "https://api.github.com/users/zizhong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zizhong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zizhong/subscriptions",
            "organizations_url": "https://api.github.com/users/zizhong/orgs",
            "repos_url": "https://api.github.com/users/zizhong/repos",
            "events_url": "https://api.github.com/users/zizhong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zizhong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-11T20:42:41Z",
        "updated_at": "2023-07-11T20:52:10Z",
        "closed_at": "2023-07-11T20:52:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6851",
            "html_url": "https://github.com/run-llama/llama_index/pull/6851",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6851.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6851.patch",
            "merged_at": "2023-07-11T20:52:10Z"
        },
        "body": "# Description\r\n\r\nfix doc for custom embedding model\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Document fix (non-breaking change which fixes an issue)\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6851/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6851/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6850",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6850/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6850/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6850/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6850",
        "id": 1799450855,
        "node_id": "PR_kwDOIWuq585VOuv6",
        "number": 6850,
        "title": "fix variable name clash in optimizer",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-11T17:46:31Z",
        "updated_at": "2023-07-11T17:57:58Z",
        "closed_at": "2023-07-11T17:57:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6850",
            "html_url": "https://github.com/run-llama/llama_index/pull/6850",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6850.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6850.patch",
            "merged_at": "2023-07-11T17:57:56Z"
        },
        "body": "# Description\r\n\r\nDuplicate for loops use the same iterator variable, which can cause indexing issues.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6850/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6849",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6849/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6849/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6849/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6849",
        "id": 1799422389,
        "node_id": "PR_kwDOIWuq585VOodw",
        "number": 6849,
        "title": "docs homepage edits",
        "user": {
            "login": "tyre",
            "id": 1015847,
            "node_id": "MDQ6VXNlcjEwMTU4NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1015847?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tyre",
            "html_url": "https://github.com/tyre",
            "followers_url": "https://api.github.com/users/tyre/followers",
            "following_url": "https://api.github.com/users/tyre/following{/other_user}",
            "gists_url": "https://api.github.com/users/tyre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tyre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tyre/subscriptions",
            "organizations_url": "https://api.github.com/users/tyre/orgs",
            "repos_url": "https://api.github.com/users/tyre/repos",
            "events_url": "https://api.github.com/users/tyre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tyre/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-11T17:31:25Z",
        "updated_at": "2023-07-17T17:31:48Z",
        "closed_at": "2023-07-17T16:09:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6849",
            "html_url": "https://github.com/run-llama/llama_index/pull/6849",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6849.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6849.patch",
            "merged_at": "2023-07-17T16:09:32Z"
        },
        "body": "Some changes to heading hierarchy and ordering. Some copy edits including tools section, where I included the project terminology where possible. \"Engines\" is maybe not the correct term for what's being described.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6849/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6849/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6848",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6848/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6848/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6848/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6848",
        "id": 1799160179,
        "node_id": "I_kwDOIWuq585rPQFz",
        "number": 6848,
        "title": "[Question]: Is SimpleDirectoryReader Recursive?",
        "user": {
            "login": "ProdigyView",
            "id": 310320,
            "node_id": "MDQ6VXNlcjMxMDMyMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/310320?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ProdigyView",
            "html_url": "https://github.com/ProdigyView",
            "followers_url": "https://api.github.com/users/ProdigyView/followers",
            "following_url": "https://api.github.com/users/ProdigyView/following{/other_user}",
            "gists_url": "https://api.github.com/users/ProdigyView/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ProdigyView/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ProdigyView/subscriptions",
            "organizations_url": "https://api.github.com/users/ProdigyView/orgs",
            "repos_url": "https://api.github.com/users/ProdigyView/repos",
            "events_url": "https://api.github.com/users/ProdigyView/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ProdigyView/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-11T15:08:09Z",
        "updated_at": "2023-07-11T15:10:45Z",
        "closed_at": "2023-07-11T15:10:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI found in the directory that there is a there is RecursiveRetriever ( https://gpt-index.readthedocs.io/en/latest/examples/query_engine/pdf_tables/recursive_retriever.html) but i am not sure if that is what I am looking for.\r\n\r\nBasically in `documents = SimpleDirectoryReader(folder).load_data()` I have multiple folder. Is there a way to recursively read through all the content of folders and subfolders?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6848/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6847",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6847/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6847/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6847/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6847",
        "id": 1799148297,
        "node_id": "PR_kwDOIWuq585VNsrs",
        "number": 6847,
        "title": "feat: adding `QueryEngineEvaluator` by integrating with ragas",
        "user": {
            "login": "jjmachan",
            "id": 5261489,
            "node_id": "MDQ6VXNlcjUyNjE0ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5261489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jjmachan",
            "html_url": "https://github.com/jjmachan",
            "followers_url": "https://api.github.com/users/jjmachan/followers",
            "following_url": "https://api.github.com/users/jjmachan/following{/other_user}",
            "gists_url": "https://api.github.com/users/jjmachan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jjmachan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jjmachan/subscriptions",
            "organizations_url": "https://api.github.com/users/jjmachan/orgs",
            "repos_url": "https://api.github.com/users/jjmachan/repos",
            "events_url": "https://api.github.com/users/jjmachan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jjmachan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-07-11T15:02:11Z",
        "updated_at": "2023-10-21T18:04:48Z",
        "closed_at": "2023-10-21T07:25:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6847",
            "html_url": "https://github.com/run-llama/llama_index/pull/6847",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6847.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6847.patch",
            "merged_at": null
        },
        "body": "# Description\r\nImplementing the `QueryEngineEvaluator` as part of the evaluation module with ragas\r\n\r\nOne would be able to install the dependencies via `pip install llama_index[evals]`\r\n### Working\r\n```python\r\nfrom llama_index.evaluation import QueryEngineEvaluator\r\n\r\nqe = # existing query engine\r\nquestions: list[str] # list of questions to check with\r\n\r\n# evaluate the query engine as a whole with ragas\r\nevaluator = QueryEngineEvaluator(service_context=service_context)\r\neval_results = evaluator.evaluate(\r\n\tquery_engine = qe,\r\n\tquestions = questions,\r\n)\r\n\r\neval_results \r\n```\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6847/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6847/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6846",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6846/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6846/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6846/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6846",
        "id": 1798568405,
        "node_id": "I_kwDOIWuq585rM_nV",
        "number": 6846,
        "title": "[Question]: Metafilter ",
        "user": {
            "login": "malinphy",
            "id": 55249305,
            "node_id": "MDQ6VXNlcjU1MjQ5MzA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/55249305?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malinphy",
            "html_url": "https://github.com/malinphy",
            "followers_url": "https://api.github.com/users/malinphy/followers",
            "following_url": "https://api.github.com/users/malinphy/following{/other_user}",
            "gists_url": "https://api.github.com/users/malinphy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malinphy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malinphy/subscriptions",
            "organizations_url": "https://api.github.com/users/malinphy/orgs",
            "repos_url": "https://api.github.com/users/malinphy/repos",
            "events_url": "https://api.github.com/users/malinphy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malinphy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-07-11T09:57:00Z",
        "updated_at": "2023-09-19T16:59:38Z",
        "closed_at": "2023-07-12T17:08:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIndexes can be created in various ways. Metadata, in document format, can be also stored in the index. However, I am looking for metadata filtering. I want to share the example code (I could not figure out metafiltering)\r\n```\r\nnrows = 10\r\ndf = pd.read_csv('https://raw.githubusercontent.com/malinphy/datasets/main/bbc_news_uk/bbc_news.csv', nrows = nrows)\r\ndf.head(3)\r\nlist_of_documents = []\r\nfor i in range(len(df)):\r\n    list_of_documents.append(Document(text = df['title'][i], metadata = {'region' : df['region'][i]}))\r\nindex = VectorStoreIndex.from_documents(list_of_documents)\r\n\r\nquery_engine = index.as_query_engine()\r\nresponse = query_engine.query(\"heroin, methadone\", metadata = {'region' : 'Health'}  )   \r\n```\r\nThanks in advance!\r\n![image](https://github.com/jerryjliu/llama_index/assets/55249305/b8dbbd09-6e9e-40b1-9bf9-ec0fc8a5cff2)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6846/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6846/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6845",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6845/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6845/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6845/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6845",
        "id": 1798513125,
        "node_id": "I_kwDOIWuq585rMyHl",
        "number": 6845,
        "title": "[Feature Request]: Incorporate Xorbits Inference for In-Production Distributed Deployment",
        "user": {
            "login": "Bojun-Feng",
            "id": 102875484,
            "node_id": "U_kgDOBiHBXA",
            "avatar_url": "https://avatars.githubusercontent.com/u/102875484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Bojun-Feng",
            "html_url": "https://github.com/Bojun-Feng",
            "followers_url": "https://api.github.com/users/Bojun-Feng/followers",
            "following_url": "https://api.github.com/users/Bojun-Feng/following{/other_user}",
            "gists_url": "https://api.github.com/users/Bojun-Feng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Bojun-Feng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Bojun-Feng/subscriptions",
            "organizations_url": "https://api.github.com/users/Bojun-Feng/orgs",
            "repos_url": "https://api.github.com/users/Bojun-Feng/repos",
            "events_url": "https://api.github.com/users/Bojun-Feng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Bojun-Feng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-07-11T09:27:56Z",
        "updated_at": "2023-10-31T16:02:53Z",
        "closed_at": "2023-10-31T16:02:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nWe should incorporate a distributed deployment framework like [Xorbits Inference](https://github.com/xorbitsai/inference) so we can scale the deployment with custom models. From what I've heard someone is working on incorporating it into LangChain, but I thought it would be nice to have a separate plugin directly for this repository.\r\n\r\n### Value of Feature\r\n\r\nThis would be beneficial to companies that want to improve the performance and scalability of their applications without relying solely on cloud-based solutions. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6845/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6845/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6844",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6844/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6844/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6844/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6844",
        "id": 1798511167,
        "node_id": "I_kwDOIWuq585rMxo_",
        "number": 6844,
        "title": "pydantic.error_wrappers.ValidationError: 1 validation error for PromptTemplate",
        "user": {
            "login": "vruti1121",
            "id": 84800982,
            "node_id": "MDQ6VXNlcjg0ODAwOTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/84800982?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vruti1121",
            "html_url": "https://github.com/vruti1121",
            "followers_url": "https://api.github.com/users/vruti1121/followers",
            "following_url": "https://api.github.com/users/vruti1121/following{/other_user}",
            "gists_url": "https://api.github.com/users/vruti1121/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vruti1121/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vruti1121/subscriptions",
            "organizations_url": "https://api.github.com/users/vruti1121/orgs",
            "repos_url": "https://api.github.com/users/vruti1121/repos",
            "events_url": "https://api.github.com/users/vruti1121/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vruti1121/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-11T09:26:54Z",
        "updated_at": "2023-07-12T17:07:09Z",
        "closed_at": "2023-07-12T17:07:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n```\r\ncontext str = \"abc\"\r\nquery_str = \"def\"\r\n    template = (\"We have provided context information below. \\n\"\r\n                \"---------------------\\n\"\r\n                f\"{context_str}\\n\"\r\n                \"\\n---------------------\\n\"\r\n                f\"Given this information, please answer the question: {query_str}\\n\")\r\n    text_qa_template = Prompt(template=template)\r\n    vector_store = WeaviateVectorStore(weaviate_client=client, index_name=\"LlamaIndex\")\r\n    index = VectorStoreIndex.from_vector_store(vector_store=vector_store)\r\n\r\n    query_engine = index.as_query_engine(text_qa_template=text_qa_template)\r\n    response = str(query_engine.query(query_str))\r\n```\r\n\r\nI am getting the error below in the above snippet of code:\r\npydantic.error_wrappers.ValidationError: 1 validation error for PromptTemplate\r\n__root__\r\nInvalid prompt schema; check for mismatched or missing input parameters. &#39;&#34;url&#34;&#39;\r\n(type=value_error)\r\n\r\nCan anyone please help me with the same? Thanks.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6844/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6844/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6843",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6843/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6843/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6843/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6843",
        "id": 1798333976,
        "node_id": "PR_kwDOIWuq585VK5NL",
        "number": 6843,
        "title": "fix: Connection Session Management on Postgres Vector Store",
        "user": {
            "login": "rendyfebry",
            "id": 1105460,
            "node_id": "MDQ6VXNlcjExMDU0NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1105460?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rendyfebry",
            "html_url": "https://github.com/rendyfebry",
            "followers_url": "https://api.github.com/users/rendyfebry/followers",
            "following_url": "https://api.github.com/users/rendyfebry/following{/other_user}",
            "gists_url": "https://api.github.com/users/rendyfebry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rendyfebry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rendyfebry/subscriptions",
            "organizations_url": "https://api.github.com/users/rendyfebry/orgs",
            "repos_url": "https://api.github.com/users/rendyfebry/repos",
            "events_url": "https://api.github.com/users/rendyfebry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rendyfebry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-11T07:48:49Z",
        "updated_at": "2023-07-18T04:09:19Z",
        "closed_at": "2023-07-18T04:09:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6843",
            "html_url": "https://github.com/run-llama/llama_index/pull/6843",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6843.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6843.patch",
            "merged_at": "2023-07-18T04:09:19Z"
        },
        "body": "# Description\r\n\r\nImprove connection session management on Postgres Vector Store\r\n\r\nFixes #6821\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Added new unit/integration tests\r\n- [X] Run existing unit test\r\n- [ ] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6843/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6843/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6842",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6842/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6842/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6842/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6842",
        "id": 1798295332,
        "node_id": "I_kwDOIWuq585rL88k",
        "number": 6842,
        "title": "[Feature Request]: Add more modes to `SentenceEmbeddingOptimizer`",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-07-11T07:26:18Z",
        "updated_at": "2023-09-26T17:17:35Z",
        "closed_at": "2023-09-26T17:17:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\n`PruningMode`:\r\n- [X] percentile_cutoff, threshold_cutoff: prunes away less relevant sections of the node\r\n- [ ] `TopAndContext(before=1, after=1)`: returns the most relevant sentence + `before, after` sentences from before and after. \r\n   - May be relevant to relevance highlighting too (https://github.com/jerryjliu/llama_index/issues/6836)\r\n- [ ] TBD\r\n- [ ] Summarizer methods - https://github.com/jerryjliu/llama_index/issues/6889\r\n- [ ] Summarizer for context + high-relevance snippets\r\n\r\n`RelevanceMode`:\r\n- [x] embedding - use default embedding (needs to be factored out)\r\n- [ ] BM25 - use lexical method which may be cheaper/quicker. But which may lack nuance.\r\n- [ ] ColBERT - may be slow. But we do not need the ANN part, just the bi-encoding + MaxSim (late interaction score)\r\n- [ ] Reranker - use a cross encoding model\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6842/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6842/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6841",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6841/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6841/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6841/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6841",
        "id": 1798277208,
        "node_id": "I_kwDOIWuq585rL4hY",
        "number": 6841,
        "title": "[Bug]: `SentenceEmbeddingOptimizer` may have poor behaviour on long sentence",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-11T07:16:56Z",
        "updated_at": "2023-10-18T16:03:53Z",
        "closed_at": "2023-10-18T16:03:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nIn https://github.com/jerryjliu/llama_index/blob/a8066355231d6d4fdf35d1a4440bdf590399329e/llama_index/indices/postprocessor/optimizer.py#L87C1-L88C75\r\n\r\nWe take the floor rather than the ceil. This can have awkward behaviour for case n=1. \r\n\r\nSolution:\r\n1. Take ceil\r\n2. `top_k = max(1, top_k)`\r\n\r\nOn the other hand, one may consider it a feature as the objective is to ensure that the returned node is approximately 0.5 the length of the original.\r\n\r\nPerhaps not throwing an error, but returning 1 with a warning is a better default?\r\n\r\n### Version\r\n\r\nmaster\r\n\r\n### Steps to Reproduce\r\n\r\nEmbed very long sentence, and apply sentence optimizer.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6841/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6841/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6840",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6840/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6840/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6840/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6840",
        "id": 1798256242,
        "node_id": "PR_kwDOIWuq585VKoXC",
        "number": 6840,
        "title": "docs: modification to evaluation notebook",
        "user": {
            "login": "jjmachan",
            "id": 5261489,
            "node_id": "MDQ6VXNlcjUyNjE0ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5261489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jjmachan",
            "html_url": "https://github.com/jjmachan",
            "followers_url": "https://api.github.com/users/jjmachan/followers",
            "following_url": "https://api.github.com/users/jjmachan/following{/other_user}",
            "gists_url": "https://api.github.com/users/jjmachan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jjmachan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jjmachan/subscriptions",
            "organizations_url": "https://api.github.com/users/jjmachan/orgs",
            "repos_url": "https://api.github.com/users/jjmachan/repos",
            "events_url": "https://api.github.com/users/jjmachan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jjmachan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-11T07:04:21Z",
        "updated_at": "2023-07-13T17:55:46Z",
        "closed_at": "2023-07-13T17:55:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6840",
            "html_url": "https://github.com/run-llama/llama_index/pull/6840",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6840.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6840.patch",
            "merged_at": "2023-07-13T17:55:45Z"
        },
        "body": "# Description\r\n\r\nChanged the evaluation notebook to fix some missing files and added a new benchmarking step so that it shows how to use the `DatasetGenerator` also.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6840/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6840/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6839",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6839/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6839/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6839/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6839",
        "id": 1798239879,
        "node_id": "PR_kwDOIWuq585VKkxT",
        "number": 6839,
        "title": "Use algolia search in docs ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-11T06:54:14Z",
        "updated_at": "2023-07-13T00:56:54Z",
        "closed_at": "2023-07-13T00:56:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6839",
            "html_url": "https://github.com/run-llama/llama_index/pull/6839",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6839.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6839.patch",
            "merged_at": "2023-07-13T00:56:53Z"
        },
        "body": "Motivation: Default search box kinda sucks, Mendable is slow\r\nPlayed around with Algolia search box, kinda nice? \ud83e\udd37 \r\n\r\n<img width=\"262\" alt=\"Screenshot 2023-07-10 at 11 52 42 PM\" src=\"https://github.com/jerryjliu/llama_index/assets/5567282/b52e02ad-e864-4092-bdfb-cab9312565eb\">\r\n\r\n<img width=\"603\" alt=\"Screenshot 2023-07-10 at 11 53 03 PM\" src=\"https://github.com/jerryjliu/llama_index/assets/5567282/6186ab51-9a18-4e51-ab84-65914b317163\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6839/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6839/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6838",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6838/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6838/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6838/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6838",
        "id": 1798174864,
        "node_id": "I_kwDOIWuq585rLfiQ",
        "number": 6838,
        "title": "feat(generative feature augmentation): Image document",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-11T06:06:18Z",
        "updated_at": "2023-10-17T16:03:33Z",
        "closed_at": "2023-10-17T16:03:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nAim: \r\n- Text embedding: optimize caption/metadata for embedding. Elaborate on caption, surrounding context, HyQE.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6838/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6838/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6837",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6837/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6837/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6837/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6837",
        "id": 1798117078,
        "node_id": "I_kwDOIWuq585rLRbW",
        "number": 6837,
        "title": "[Feature Request]: Prepare for Multimodal Models",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-11T05:18:54Z",
        "updated_at": "2023-10-17T16:03:39Z",
        "closed_at": "2023-10-17T16:03:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nWe should prepare for multimodal models so that when e.g. GPT-4 image [API](https://platform.openai.com/docs/models/gpt-4) is released we can quickly get an example working.\r\n\r\nNothing big, but some planning could be beneficial.\r\n\r\nSteps:\r\n- [ ] Feeding `ImageNode` as part of context in retrieval query engine. Determine how to feed caption/extracted text and raw image.\r\n   - There is no cross-positional dependence.\r\n- [ ] Draft image handling for LLMs. \r\n   - External API may not have to change, but internally, may need to multiplex on `isinstance(node, TextNode/ImageNode)`\r\n   - Unclear if one can feed in multiple images or just a single one.\r\n- [ ] Set up a basic example similar to: https://github.com/jerryjliu/llama_index/blob/main/examples/multimodal/Multimodal.ipynb, but using raw image from `ImageNode`.\r\n\r\n\r\nResources:\r\n1. [Microsoft's Visual ChatGPT](https://github.com/microsoft/TaskMatrix)\r\n\r\nQuestions:\r\n1. What is the basic structure of an image QnA? Can models ignore the image for parts of query for which the image is irrelevant? In all likelihood, there will be context window pollution.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6837/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6836",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6836/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6836/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6836/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6836",
        "id": 1798061964,
        "node_id": "I_kwDOIWuq585rLD-M",
        "number": 6836,
        "title": "[Feature Request]: Relevance Highlighting",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-11T04:18:40Z",
        "updated_at": "2023-10-17T16:03:44Z",
        "closed_at": "2023-10-17T16:03:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nWithin a number of large text sources, it would be nice to provide relevance highlighting, so that the user can inspect the sources easily and see how it contributed to the answer they received.\r\n\r\nUseful for both dev (diagnosing issues with retrieval) and prod.\r\n\r\nFirst integration: `CitationQueryEngine`.\r\n\r\nSimilar to [`SentenceEmbeddingOptimizer`](https://github.com/jerryjliu/llama_index/blob/a8066355231d6d4fdf35d1a4440bdf590399329e/llama_index/indices/postprocessor/optimizer.py#L15)\r\n\r\n---\r\n\r\nOne should design an abstraction over various indexes. For instance, for vector index, one may want to chunk up the `TextNode` further (perhaps splitting on sentence), dynamically compute (or precompute) embeddings for each, and compare with the query. \r\n\r\nFor sparse embeddings like ColBERT, one could try to preserve the sparse embedding vectors and determine which section of the text has the highest relevance. In this case, it may be worth computing the dual MaxSim operator, computing the max query token relevance for token in the sparse document embedding.\r\n\r\nCC @logan-markewich ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6836/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6836/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6835",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6835/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6835/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6835/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6835",
        "id": 1797922318,
        "node_id": "I_kwDOIWuq585rKh4O",
        "number": 6835,
        "title": "[Bug]: async not work with stream and OpenAIAgent",
        "user": {
            "login": "dinhan92",
            "id": 86275789,
            "node_id": "MDQ6VXNlcjg2Mjc1Nzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/86275789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dinhan92",
            "html_url": "https://github.com/dinhan92",
            "followers_url": "https://api.github.com/users/dinhan92/followers",
            "following_url": "https://api.github.com/users/dinhan92/following{/other_user}",
            "gists_url": "https://api.github.com/users/dinhan92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dinhan92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dinhan92/subscriptions",
            "organizations_url": "https://api.github.com/users/dinhan92/orgs",
            "repos_url": "https://api.github.com/users/dinhan92/repos",
            "events_url": "https://api.github.com/users/dinhan92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dinhan92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-11T01:46:18Z",
        "updated_at": "2023-07-12T09:44:02Z",
        "closed_at": "2023-07-12T09:44:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nSo I have follow this docs with astream_chat and OpenAI Agent: https://gpt-index.readthedocs.io/en/latest/examples/agent/openai_agent.html\r\nAnd get this error: 'async for' requires an object with __aiter__ method, got coroutine\n\n### Version\n\n0.7.4\n\n### Steps to Reproduce\n\n``` python \r\nagent_stream = agent.astream_chat(input_text)\r\n\r\n@stream_with_context\r\n        async def generate():\r\n            # for text in response:\r\n            async for response in agent_stream:\r\n                response_gen = response.response_gen\r\n\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6835/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6834",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6834/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6834/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6834/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6834",
        "id": 1797880025,
        "node_id": "I_kwDOIWuq585rKXjZ",
        "number": 6834,
        "title": "[Bug]:  SentenceSplitter split Text Bug",
        "user": {
            "login": "yinyitianyanice",
            "id": 24435057,
            "node_id": "MDQ6VXNlcjI0NDM1MDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24435057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yinyitianyanice",
            "html_url": "https://github.com/yinyitianyanice",
            "followers_url": "https://api.github.com/users/yinyitianyanice/followers",
            "following_url": "https://api.github.com/users/yinyitianyanice/following{/other_user}",
            "gists_url": "https://api.github.com/users/yinyitianyanice/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yinyitianyanice/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yinyitianyanice/subscriptions",
            "organizations_url": "https://api.github.com/users/yinyitianyanice/orgs",
            "repos_url": "https://api.github.com/users/yinyitianyanice/repos",
            "events_url": "https://api.github.com/users/yinyitianyanice/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yinyitianyanice/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-11T00:53:47Z",
        "updated_at": "2023-10-19T16:04:16Z",
        "closed_at": "2023-10-19T16:04:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n\u4f7f\u7528SentenceSplitter\u8fdb\u884c\u6587\u4ef6\u5207\u5206\u540e\u53d1\u73b0\u8fdb\u5165\u6b7b\u5faa\u73af\u3002\r\n\u5e94\u8be5\u662f\u5728\u6b64\u5904\u53d1\u751f\u6b7b\u5faa\u73af\u3002\r\n        while len(new_splits) > 0:\r\n            cur_token = new_splits[0]\r\n            cur_len = len(self.tokenizer(cur_token.text))\r\n            if cur_len > effective_chunk_size:\r\n                raise ValueError(\"Single token exceed chunk size\")\r\n            if cur_tokens + cur_len > effective_chunk_size:\r\n                docs.append(TextSplit(\"\".join(cur_doc_list).strip()))\r\n                cur_doc_list = []\r\n                cur_tokens = 0\r\n            else:\r\n                if (\r\n                    cur_token.is_sentence\r\n                    or cur_tokens + cur_len < effective_chunk_size - self._chunk_overlap\r\n                ):\r\n                    cur_tokens += cur_len\r\n                    cur_doc_list.append(cur_token.text)\r\n                    new_splits.pop(0)\r\n                else:\r\n                    docs.append(TextSplit(\"\".join(cur_doc_list).strip()))\r\n                    cur_doc_list = []\r\n                    cur_tokens = 0\n\n### Version\n\n0.7.2\n\n### Steps to Reproduce\n\n\u8bbe\u7f6echunk_size\u4e3a2560\u3002\u5bf9\u67d0\u4e9b\u6587\u672c\u8fdb\u884csplitter\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6834/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6834/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6833",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6833/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6833/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6833/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6833",
        "id": 1797838242,
        "node_id": "PR_kwDOIWuq585VJNno",
        "number": 6833,
        "title": "Fix link in docs",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-11T00:12:05Z",
        "updated_at": "2023-07-11T00:12:18Z",
        "closed_at": "2023-07-11T00:12:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6833",
            "html_url": "https://github.com/run-llama/llama_index/pull/6833",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6833.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6833.patch",
            "merged_at": "2023-07-11T00:12:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6833/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6832",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6832/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6832/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6832/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6832",
        "id": 1797592714,
        "node_id": "PR_kwDOIWuq585VIV_-",
        "number": 6832,
        "title": "show content in API references page",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-10T21:10:35Z",
        "updated_at": "2023-07-10T21:11:42Z",
        "closed_at": "2023-07-10T21:11:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6832",
            "html_url": "https://github.com/run-llama/llama_index/pull/6832",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6832.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6832.patch",
            "merged_at": "2023-07-10T21:11:41Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6832/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6831",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6831/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6831/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6831/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6831",
        "id": 1797407188,
        "node_id": "PR_kwDOIWuq585VHsDM",
        "number": 6831,
        "title": "add query transformations to query engine ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-10T19:25:51Z",
        "updated_at": "2023-07-10T19:59:28Z",
        "closed_at": "2023-07-10T19:59:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6831",
            "html_url": "https://github.com/run-llama/llama_index/pull/6831",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6831.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6831.patch",
            "merged_at": "2023-07-10T19:59:27Z"
        },
        "body": "also deleted other \"advanced\" docs in query engine",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6831/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6830",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6830/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6830/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6830/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6830",
        "id": 1797330089,
        "node_id": "PR_kwDOIWuq585VHbX-",
        "number": 6830,
        "title": "add index guide to index docs",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-10T18:49:04Z",
        "updated_at": "2023-07-10T18:49:47Z",
        "closed_at": "2023-07-10T18:49:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6830",
            "html_url": "https://github.com/run-llama/llama_index/pull/6830",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6830.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6830.patch",
            "merged_at": "2023-07-10T18:49:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6830/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6829",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6829/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6829/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6829/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6829",
        "id": 1797287505,
        "node_id": "PR_kwDOIWuq585VHTsj",
        "number": 6829,
        "title": "fix: Fixed typo in text_qa_template",
        "user": {
            "login": "cesarwbr",
            "id": 248140,
            "node_id": "MDQ6VXNlcjI0ODE0MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/248140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cesarwbr",
            "html_url": "https://github.com/cesarwbr",
            "followers_url": "https://api.github.com/users/cesarwbr/followers",
            "following_url": "https://api.github.com/users/cesarwbr/following{/other_user}",
            "gists_url": "https://api.github.com/users/cesarwbr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cesarwbr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cesarwbr/subscriptions",
            "organizations_url": "https://api.github.com/users/cesarwbr/orgs",
            "repos_url": "https://api.github.com/users/cesarwbr/repos",
            "events_url": "https://api.github.com/users/cesarwbr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cesarwbr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-10T18:24:01Z",
        "updated_at": "2023-07-10T18:59:43Z",
        "closed_at": "2023-07-10T18:59:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6829",
            "html_url": "https://github.com/run-llama/llama_index/pull/6829",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6829.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6829.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nFixed typo in 'text_qa_template' in the Output Parsing documentation.\r\n\r\n## Type of Change\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6829/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6828",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6828/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6828/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6828/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6828",
        "id": 1797232574,
        "node_id": "PR_kwDOIWuq585VHIJn",
        "number": 6828,
        "title": "Fixes Azure gpt-35-turbo model not recognized ",
        "user": {
            "login": "kevinddnj",
            "id": 126586163,
            "node_id": "U_kgDOB4uNMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/126586163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinddnj",
            "html_url": "https://github.com/kevinddnj",
            "followers_url": "https://api.github.com/users/kevinddnj/followers",
            "following_url": "https://api.github.com/users/kevinddnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinddnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinddnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinddnj/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinddnj/orgs",
            "repos_url": "https://api.github.com/users/kevinddnj/repos",
            "events_url": "https://api.github.com/users/kevinddnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinddnj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-10T17:44:07Z",
        "updated_at": "2023-07-10T22:05:53Z",
        "closed_at": "2023-07-10T22:05:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6828",
            "html_url": "https://github.com/run-llama/llama_index/pull/6828",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6828.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6828.patch",
            "merged_at": "2023-07-10T22:05:53Z"
        },
        "body": "# Description\r\n\r\nFixes problem where the Azure OpenAI models are not recognized when building VectorStoreIndex.  Added AZURE_TURBO_MODELS definition to ALL_AVAILABLE_MODELS\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nRan example from https://gpt-index.readthedocs.io/en/latest/examples/customization/llms/AzureOpenAI.html\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] My changes generate no new warnings\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6828/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6827",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6827/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6827/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6827/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6827",
        "id": 1797180084,
        "node_id": "PR_kwDOIWuq585VG82K",
        "number": 6827,
        "title": "Add Token Counting Docs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-10T17:07:38Z",
        "updated_at": "2023-07-10T17:57:32Z",
        "closed_at": "2023-07-10T17:57:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6827",
            "html_url": "https://github.com/run-llama/llama_index/pull/6827",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6827.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6827.patch",
            "merged_at": "2023-07-10T17:57:31Z"
        },
        "body": "# Description\r\n\r\nAdded token counting docs + small change to `MockLLM`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6827/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6826",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6826/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6826/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6826/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6826",
        "id": 1796938964,
        "node_id": "PR_kwDOIWuq585VGIpU",
        "number": 6826,
        "title": "Add support for Pinecone Starter Tier",
        "user": {
            "login": "ivanazeljkovic",
            "id": 26381796,
            "node_id": "MDQ6VXNlcjI2MzgxNzk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/26381796?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ivanazeljkovic",
            "html_url": "https://github.com/ivanazeljkovic",
            "followers_url": "https://api.github.com/users/ivanazeljkovic/followers",
            "following_url": "https://api.github.com/users/ivanazeljkovic/following{/other_user}",
            "gists_url": "https://api.github.com/users/ivanazeljkovic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ivanazeljkovic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ivanazeljkovic/subscriptions",
            "organizations_url": "https://api.github.com/users/ivanazeljkovic/orgs",
            "repos_url": "https://api.github.com/users/ivanazeljkovic/repos",
            "events_url": "https://api.github.com/users/ivanazeljkovic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ivanazeljkovic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-10T14:45:22Z",
        "updated_at": "2023-08-14T21:17:25Z",
        "closed_at": "2023-08-14T21:17:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6826",
            "html_url": "https://github.com/run-llama/llama_index/pull/6826",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6826.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6826.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPinecone Starter Tier changes: \r\n- remove namespaces\r\n- remove delete by metadata feature\r\n\r\nResolves: [Pinecone - support Starter Tier #6822](https://github.com/jerryjliu/llama_index/issues/6822)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6826/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6826/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6825",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6825/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6825/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6825/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6825",
        "id": 1796928629,
        "node_id": "PR_kwDOIWuq585VGGVk",
        "number": 6825,
        "title": "feat(evaluation): Integrate BEIR evaluation",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-10T14:41:00Z",
        "updated_at": "2023-07-14T02:49:51Z",
        "closed_at": "2023-07-14T02:49:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6825",
            "html_url": "https://github.com/run-llama/llama_index/pull/6825",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6825.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6825.patch",
            "merged_at": "2023-07-14T02:49:51Z"
        },
        "body": "# Description\r\nRefer to rendered notebook: https://github.com/jon-chuang/llama_index/blob/jon-chuang/beir/docs/examples/evaluation/BeirEvaluation.ipynb\r\n\r\nFixes: https://github.com/jerryjliu/llama_index/issues/6554\r\nAlso partially implements: https://github.com/jerryjliu/llama_index/issues/6797\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n  - maybe? Or is the notebook in docs/examples good enough?\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6825/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6825/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6824",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6824/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6824/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6824/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6824",
        "id": 1796927239,
        "node_id": "I_kwDOIWuq585rGu8H",
        "number": 6824,
        "title": "[Tracking]: Evaluation Integrations ",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-10T14:40:13Z",
        "updated_at": "2023-10-23T16:03:10Z",
        "closed_at": "2023-10-23T16:03:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\n- [ ] Retrieval: https://github.com/jerryjliu/llama_index/issues/6554\r\n- [ ] RAG / Knowledge-Intensive QA: https://github.com/jerryjliu/llama_index/issues/6919\r\n- [ ] MMLU?\r\n- [ ] https://github.com/openai/evals?\r\n\r\nTODO: investigate more RAG-specific benchmarks rather than retrieval-only or generation-only.\r\n\r\n### References / Areas of Exploration\r\n1. [Academic work on FLARE](https://arxiv.org/abs/2305.06983) - RAG + reranking. Can get some inspiration from their evaluation methodology\r\n2. [Wizard of Wikipedia - Knowledge Augmented Dialogue](https://parl.ai/projects/wizard_of_wikipedia/). Not sure if there is any evaluation.\r\n3. [Evaluation of Dataset Selection for Pre-Training and Fine-Tuning Transformer Language Models for Clinical Question Answering](https://aclanthology.org/2020.lrec-1.679.pdf)\r\n   - [CLiCR](https://paperswithcode.com/dataset/clicr)\r\n4. [Streaming QA](https://github.com/deepmind/streamingqa).\r\n   - The nice thing about this dataset is that one can potentially segment out the dataset. But I'm not sure if this is possible to do (i.e. from `t=t_1 to t=t_2`) v.s. an aggregate over time from `t=0`. Otherwise the dataset is too massive (110GB compressed).  Even the index is massive (400MB+). See issue: https://github.com/deepmind/streamingqa/issues/2\r\n   - Segment: https://data.statmt.org/news-crawl/en/news.2007.en.shuffled.deduped.gz ~ 170M. Still pretty large but probably some kind of segmenting can be done in realtime using a BTree / something like Polars DB.\r\n\r\n\r\n### Target Domains\r\n1. Finance: [FinQA](https://github.com/czyssrs/FinQA) - [FinTabNet Corpus](https://developer.ibm.com/exchanges/data/all/fintabnet/). \r\n2. Codebase?? e.g. [codequeries](https://github.com/thepurpleowl/codequeries-benchmark), [CodeQA](https://paperswithcode.com/dataset/codeqa)\r\n\r\nTODO:\r\n1. Compile all of the dataset sizes (we should prefer fine-tuning datasets with out-of-domain corpora rather than large and generic corpora which are likely representative of the LLM training datasets)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6824/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6824/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6823",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6823/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6823/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6823/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6823",
        "id": 1796907428,
        "node_id": "PR_kwDOIWuq585VGBuI",
        "number": 6823,
        "title": "make docs great again",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-10T14:29:57Z",
        "updated_at": "2023-07-11T00:00:09Z",
        "closed_at": "2023-07-11T00:00:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6823",
            "html_url": "https://github.com/run-llama/llama_index/pull/6823",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6823.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6823.patch",
            "merged_at": "2023-07-11T00:00:08Z"
        },
        "body": "WIP until it's ready to merge ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6823/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6822",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6822/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6822/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6822/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6822",
        "id": 1796899277,
        "node_id": "I_kwDOIWuq585rGoHN",
        "number": 6822,
        "title": "[Feature Request]: Pinecone - support Starter Tier",
        "user": {
            "login": "ivanazeljkovic",
            "id": 26381796,
            "node_id": "MDQ6VXNlcjI2MzgxNzk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/26381796?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ivanazeljkovic",
            "html_url": "https://github.com/ivanazeljkovic",
            "followers_url": "https://api.github.com/users/ivanazeljkovic/followers",
            "following_url": "https://api.github.com/users/ivanazeljkovic/following{/other_user}",
            "gists_url": "https://api.github.com/users/ivanazeljkovic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ivanazeljkovic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ivanazeljkovic/subscriptions",
            "organizations_url": "https://api.github.com/users/ivanazeljkovic/orgs",
            "repos_url": "https://api.github.com/users/ivanazeljkovic/repos",
            "events_url": "https://api.github.com/users/ivanazeljkovic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ivanazeljkovic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-10T14:25:40Z",
        "updated_at": "2023-07-13T15:49:24Z",
        "closed_at": "2023-07-13T15:49:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nSupport Starter Tier of Pinecone vector store. The changes are related to removing:\r\n\r\n- namespaces\r\n- delete by metadata feature\r\n\r\n### Reason\r\n\r\n_No response_\r\n\r\n### Value of Feature\r\n\r\nIndices in Starter Tier won't support :\r\n\r\n- namespaces\r\n- `configure_index()`\r\n- delete by metadata\r\n- `describe_index()` with metadata filtering\r\n- `metadata_config` parameter to `create_index()`\r\n- `delete()` with the `deleteAll` parameter",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6822/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6821",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6821/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6821/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6821/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6821",
        "id": 1796896656,
        "node_id": "I_kwDOIWuq585rGneQ",
        "number": 6821,
        "title": "[Bug]: PGVectorStore stop inserting data after queried/retrieved",
        "user": {
            "login": "rendyfebry",
            "id": 1105460,
            "node_id": "MDQ6VXNlcjExMDU0NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1105460?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rendyfebry",
            "html_url": "https://github.com/rendyfebry",
            "followers_url": "https://api.github.com/users/rendyfebry/followers",
            "following_url": "https://api.github.com/users/rendyfebry/following{/other_user}",
            "gists_url": "https://api.github.com/users/rendyfebry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rendyfebry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rendyfebry/subscriptions",
            "organizations_url": "https://api.github.com/users/rendyfebry/orgs",
            "repos_url": "https://api.github.com/users/rendyfebry/repos",
            "events_url": "https://api.github.com/users/rendyfebry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rendyfebry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-10T14:24:16Z",
        "updated_at": "2023-07-18T04:09:20Z",
        "closed_at": "2023-07-18T04:09:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nPGVectorStore stops inserting data after being queried/retrieved, and start to work again after restarted.\r\n\r\nSorry I'm bad at describing, but you can see what I mean from the \"Step to Reproduce\" below.\r\n\r\n### Version\r\n\r\n0.7.4\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a PGVectorStore Index with empty documents\r\n```\r\nvector_store = PGVectorStore.from_params()\r\nstorage_ctx = StorageContext.from_defaults(vector_store=vector_store)\r\nindex = VectorStoreIndex([], storage_context=storage_ctx)\r\n```\r\n2. Go to your database and check the number of rows on the index table, should be zero\r\n3. Insert some documents ad observe the number of rows. At this point, the rows still added\r\n```\r\nfor doc in documents:\r\n    index.insert(doc)\r\n```\r\n4. Create a retriever and retrieve some data.\r\n```\r\nretriever = index.as_retriever()\r\nresult = retriever.retrieve(\"keyword\")\r\n```\r\n5. Insert additional documents ad observe the number of rows. At this point, the number of rows won't change\r\n6. Restart the service, and it will work again, but the data you insert after the `.retrieve()` won't be there.\r\n\r\nAnother way to test is, you can insert a long list of documents, and then call query/retrieve in the middle of the insertion process. You'll notice the rows stop being added to the table once you call query/retrieve.\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6821/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6821/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6820",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6820/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6820/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6820/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6820",
        "id": 1796579884,
        "node_id": "I_kwDOIWuq585rFaIs",
        "number": 6820,
        "title": "fix(embedding, silent-error): warn or error if context length is exceeded. ",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-10T11:39:53Z",
        "updated_at": "2023-11-20T16:02:04Z",
        "closed_at": "2023-11-20T16:02:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nIt is likely that users may exceed embedding defaults (512 tokens) on BERT-based embedding models or Cohere embeddings.\r\n\r\nHence, we should definitely warn/error if the user exceeds the recommended context length as it may lead to poor accuracy.\r\n\r\nSee: https://github.com/jerryjliu/llama_index/pull/6806#issuecomment-1627743865\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6820/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6819",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6819/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6819/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6819/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6819",
        "id": 1796565939,
        "node_id": "PR_kwDOIWuq585VE2hx",
        "number": 6819,
        "title": "fix(silent error): Add validation to `SimpleDirectoryReader`",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-10T11:32:20Z",
        "updated_at": "2023-07-11T03:00:11Z",
        "closed_at": "2023-07-11T03:00:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6819",
            "html_url": "https://github.com/run-llama/llama_index/pull/6819",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6819.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6819.patch",
            "merged_at": "2023-07-11T03:00:11Z"
        },
        "body": "# Description\r\nfix silent errors\r\nfixes: https://github.com/jerryjliu/llama_index/issues/6770\r\n\r\n## Type of Change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n\r\n- [X] Added new unit/integration tests\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6819/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6819/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6818",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6818/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6818/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6818/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6818",
        "id": 1796113807,
        "node_id": "PR_kwDOIWuq585VDUOm",
        "number": 6818,
        "title": "Add basic `ColbertIndex` and `ColbertRetriever` to `experimental` folder",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-10T07:01:05Z",
        "updated_at": "2023-07-28T18:16:05Z",
        "closed_at": "2023-07-28T18:16:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6818",
            "html_url": "https://github.com/run-llama/llama_index/pull/6818",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6818.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6818.patch",
            "merged_at": "2023-07-28T18:16:05Z"
        },
        "body": "# Description\r\n\r\n\r\nPartially fixes: https://github.com/jerryjliu/llama_index/issues/6577\r\n\r\nNotebook rendered link: https://github.com/jon-chuang/llama_index/blob/jon-chuang/colbert/examples/paul_graham_essay/ColbertIndex.ipynb\r\n\r\nThis PR does not implement the following, which will be follow up work:\r\n- [ ] Loading from storage\r\n- [ ] Updating index (adding/deleting documents)\r\n- [ ] additional config including turning off verbose logs\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6818/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6818/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6817",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6817/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6817/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6817/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6817",
        "id": 1796081929,
        "node_id": "I_kwDOIWuq585rDgkJ",
        "number": 6817,
        "title": "[Question]:How can I speed up the pipeline?",
        "user": {
            "login": "wyzhhhh",
            "id": 105030082,
            "node_id": "U_kgDOBkKhwg",
            "avatar_url": "https://avatars.githubusercontent.com/u/105030082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wyzhhhh",
            "html_url": "https://github.com/wyzhhhh",
            "followers_url": "https://api.github.com/users/wyzhhhh/followers",
            "following_url": "https://api.github.com/users/wyzhhhh/following{/other_user}",
            "gists_url": "https://api.github.com/users/wyzhhhh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wyzhhhh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wyzhhhh/subscriptions",
            "organizations_url": "https://api.github.com/users/wyzhhhh/orgs",
            "repos_url": "https://api.github.com/users/wyzhhhh/repos",
            "events_url": "https://api.github.com/users/wyzhhhh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wyzhhhh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-07-10T06:41:15Z",
        "updated_at": "2023-10-16T16:03:46Z",
        "closed_at": "2023-10-16T16:03:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nEvery time I  use the pipline to load the local model ,it will take about 20 mins.How can i accelerate it .\r\nIs it possible to speed up this process by calling multiple GPUs? How do I do that?\r\nAt the same time, it also takes a lot of time when generating answers to questions.\r\nThere are my codes below.\r\n\r\n`model_name = \"vicuna-chinese\"\r\npipeline = pipeline(\"text-generation\", model=model_name, device=\"cuda:1\", model_kwargs={\"torch_dtype\": torch.bfloat16})\r\n\r\nclass CustomLLM(LLM):\r\n    def _call(self, prompt: str, stop: Optional[List[str]] = None) -> str:\r\n        prompt_length = len(prompt)\r\n        response = pipeline(prompt, max_new_tokens=num_output,temperature=0)[0][\"generated_text\"]\r\n        # only return newly generated tokens\r\n        return response[prompt_length:]\r\n    @property\r\n    def _identifying_params(self) -> Mapping[str, Any]:\r\n        return {\"name_of_model\": model_name}\r\n    @property\r\n    def _llm_type(self) -> str:\r\n        return \"custom\"\r\n\r\nllm_predictor = LLMPredictor(llm=CustomLLM())\r\nfrom sentence_transformers import SentenceTransformer\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\n#embed_model= SentenceModel('./text2vec-base-chinese')\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings(model_name='./text2vec-base-chinese'))\r\n#embed_model = SentenceTransformer(\"./text2vec-base-chinese\")\r\nprompt_helper = PromptHelper(\r\n    context_window=4000,\r\n    num_output=512,\r\n    chunk_size_limit=512,\r\n    chunk_overlap_ratio=0.1,\r\n)\r\nservice_context = ServiceContext.from_defaults(\r\n    llm_predictor=llm_predictor,\r\n    embed_model=embed_model,\r\n    prompt_helper=prompt_helper,\r\n    chunk_size_limit=512\r\n)\r\n\r\n#new_index = VectorStoreIndex.from_documents(documents, service_context=service_context,)\r\n\r\n\r\nfrom llama_index import SimpleDirectoryReader\r\ndocuments = SimpleDirectoryReader('./data').load_data()\r\n\r\nfrom llama_index.node_parser import SimpleNodeParser\r\nparser = SimpleNodeParser()\r\nnodes = parser.get_nodes_from_documents(documents)\r\n\r\nfrom llama_index import GPTVectorStoreIndex,VectorStoreIndex\r\nindex = GPTVectorStoreIndex(nodes, service_context=service_context)\r\nquery_engine = index.as_query_engine()`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6817/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6817/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6816",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6816/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6816/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6816/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6816",
        "id": 1795858550,
        "node_id": "I_kwDOIWuq585rCqB2",
        "number": 6816,
        "title": "[chore(metadata_extractor)]: Utilize existing prompt synthesizers ",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-10T03:26:35Z",
        "updated_at": "2023-10-16T16:03:51Z",
        "closed_at": "2023-10-16T16:03:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nFor expediency, we defined our own prompts and synthesizers. But we should try to make use of the off-the-shelf `ResponseSynthesizer`s for consistency and more manageable code. See: https://github.com/jerryjliu/llama_index/pull/6764#discussion_r1255241606",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6816/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6816/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6815",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6815/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6815/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6815/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6815",
        "id": 1795858383,
        "node_id": "I_kwDOIWuq585rCp_P",
        "number": 6815,
        "title": "[Question]: Is it possible to extract similarity values before sending prompt to gpt?",
        "user": {
            "login": "rmj1405",
            "id": 35266074,
            "node_id": "MDQ6VXNlcjM1MjY2MDc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35266074?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rmj1405",
            "html_url": "https://github.com/rmj1405",
            "followers_url": "https://api.github.com/users/rmj1405/followers",
            "following_url": "https://api.github.com/users/rmj1405/following{/other_user}",
            "gists_url": "https://api.github.com/users/rmj1405/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rmj1405/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rmj1405/subscriptions",
            "organizations_url": "https://api.github.com/users/rmj1405/orgs",
            "repos_url": "https://api.github.com/users/rmj1405/repos",
            "events_url": "https://api.github.com/users/rmj1405/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rmj1405/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-10T03:26:24Z",
        "updated_at": "2023-07-10T10:10:04Z",
        "closed_at": "2023-07-10T10:10:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [x] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nHi! I'm fairly new to llamaindex, this is my first time working with it. I am trying to create a chatbot which uses base gpt-3.5-turbo's knowledge if it is unable to answer the question using the context I have provided. I have managed to achieve this using a custom prompt template and few shot learning. \r\n\r\nHowever, I find that I am using extra tokens in context which ends up getting wasted when gpt is not using it to construct the answer. The idea I have in mind is to create a custom parser that takes in my query text and can extract the embeddings similarity prior to sending the context to gpt-3.5-turbo(after receiving query embeddings from ada). If the similarity is below a threshold, say 0.85, I will reset the context to be 'Context is vague' or something similar. This will help me save a lot of tokens as I do not have to send the entire custom prompt each time. \r\n\r\nI am leaning towards extracting the similarity from the node post-processors but I am unsure where should this function be called i.e. as a argument to query_engine.query() or somewhere else. Hope my question is clear, I would be happy to provide more info/code if needed. Thank you!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6815/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6814",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6814/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6814/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6814/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6814",
        "id": 1795837213,
        "node_id": "I_kwDOIWuq585rCk0d",
        "number": 6814,
        "title": "[Question]: Which examples are still working with the breaking changes of v0.74",
        "user": {
            "login": "ianscrivener",
            "id": 163229,
            "node_id": "MDQ6VXNlcjE2MzIyOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/163229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ianscrivener",
            "html_url": "https://github.com/ianscrivener",
            "followers_url": "https://api.github.com/users/ianscrivener/followers",
            "following_url": "https://api.github.com/users/ianscrivener/following{/other_user}",
            "gists_url": "https://api.github.com/users/ianscrivener/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ianscrivener/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ianscrivener/subscriptions",
            "organizations_url": "https://api.github.com/users/ianscrivener/orgs",
            "repos_url": "https://api.github.com/users/ianscrivener/repos",
            "events_url": "https://api.github.com/users/ianscrivener/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ianscrivener/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-07-10T03:03:42Z",
        "updated_at": "2023-07-10T23:59:31Z",
        "closed_at": "2023-07-10T14:25:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nNew to llama_index, though mostly familiar with ML & Python etc\r\n\r\nI can get the v0.74 demo code (below) working... but all the Jupyter examples I've tried are failing.\r\nIs this due to the breaking changes of v0.74?\r\n\r\n```\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\nindex = VectorStoreIndex.from_documents(documents)\r\nquery_engine = index.as_query_engine()\r\nresponse = query_engine.query(\"What did the author do growing up?\")\r\nprint(response)\r\n`11",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6814/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6814/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6813",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6813/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6813/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6813/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6813",
        "id": 1795821590,
        "node_id": "I_kwDOIWuq585rChAW",
        "number": 6813,
        "title": "[Bug]: PineCone Filters features don't work right outside the bog",
        "user": {
            "login": "arafatkatze",
            "id": 11155207,
            "node_id": "MDQ6VXNlcjExMTU1MjA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/11155207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arafatkatze",
            "html_url": "https://github.com/arafatkatze",
            "followers_url": "https://api.github.com/users/arafatkatze/followers",
            "following_url": "https://api.github.com/users/arafatkatze/following{/other_user}",
            "gists_url": "https://api.github.com/users/arafatkatze/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arafatkatze/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arafatkatze/subscriptions",
            "organizations_url": "https://api.github.com/users/arafatkatze/orgs",
            "repos_url": "https://api.github.com/users/arafatkatze/repos",
            "events_url": "https://api.github.com/users/arafatkatze/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arafatkatze/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-10T02:49:29Z",
        "updated_at": "2023-07-15T07:54:29Z",
        "closed_at": "2023-07-13T21:59:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nPinecone has an upsert feature that let's you add metadata tags to your embeddings while upserting so that you can filter based on those things \r\n\r\n```\r\nimport pinecone\r\n\r\npinecone.init(api_key=\"your-api-key\", environment=\"us-west1-gcp\")\r\nindex = pinecone.Index(\"example-index\")\r\n\r\nindex.upsert([\r\n    (\"A\", [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1], {\"genre\": \"comedy\", \"year\": 2020}),\r\n    (\"B\", [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2], {\"genre\": \"documentary\", \"year\": 2019}),\r\n    (\"C\", [0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3], {\"genre\": \"comedy\", \"year\": 2019}),\r\n    (\"D\", [0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4], {\"genre\": \"drama\"}),\r\n    (\"E\", [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], {\"genre\": \"drama\"})\r\n])\r\n\r\n```\r\n\r\nIn the code above the filters look like this ` {\"genre\": \"comedy\", \"year\": 2020}` and they help you selectively use those exclusively to get results just on the filters. \r\n\r\nRight now the add function has a metadata field which is ideally supposed to get the \"filters\" \r\nhttps://github.com/jerryjliu/llama_index/blob/5b8148f71daee3a1d9f6f88b78b568c92f11c1b0/llama_index/vector_stores/pinecone.py#L174-L192\r\n\r\nAnd the contents of metadata can be used as a filter so you can filter on \"file_name\" for example coz it's in metadata but the custom filters provided by the user don't get passed around so you can't make custom filters and pass them around \r\nhttps://github.com/jerryjliu/llama_index/blob/5b8148f71daee3a1d9f6f88b78b568c92f11c1b0/llama_index/vector_stores/pinecone.py#L208-L214\r\n\r\nOne way that I thought that could be done was to set `_insert_kwargs` at the time of initialization but even that wouldn't do it. Right now I can still filter somewhat using namespace, file_name but it would be very nice to filter using custom filters.\r\n\r\nI couldn't find an example in docs It would love to see this improvement. \r\n\n\n### Version\n\nLatest\n\n### Steps to Reproduce\n\n```\r\n\r\nfilters = MetadataFilters(filters=[ExactMatchFilter(key=\"custom\", value=\"custom_value\")])\r\n\r\ndef add_folder_to_pinecone(folder = DOWNLOADS_DIR, index_name = DEFAULT_PINECONE_INDEX, environment = DEFAULT_PINECONE_ENV):\r\n    vector_store = PineconeVectorStore(index_name=index_name,environment=environment, filters=filters)\r\n    storage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n    documents = SimpleDirectoryReader(DOWNLOADS_DIR).load_data()\r\n    VectorStoreIndex.from_documents(documents, storage_context=storage_context)\r\n\r\ndef remove_file_from_pinecone(file_name, index_name = DEFAULT_PINECONE_INDEX, environment = DEFAULT_PINECONE_ENV):\r\n    file_name\r\n\r\ndef retreive_from_pinecone(folder = DOWNLOADS_DIR, index_name = DEFAULT_PINECONE_INDEX, environment = DEFAULT_PINECONE_ENV, top_k = SIMILARITY_TOP_K):\r\n    vector_store = PineconeVectorStore(index_name=index_name,environment=environment)\r\n    storage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n    index = VectorStoreIndex.from_vector_store(vector_store=vector_store, storage_context=storage_context)\r\n    retriever = VectorIndexRetriever(index=index, similarity_top_k=top_k, filters=filters)\r\n    input_text = \"education\"\r\n    all_chunks = retriever.retrieve(input_text)\r\n    pdb.set_trace()\r\n\r\n```\r\nIn this code `all_chunks` shouldn't be nil but it is.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6813/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6813/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6812",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6812/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6812/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6812/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6812",
        "id": 1795788305,
        "node_id": "I_kwDOIWuq585rCY4R",
        "number": 6812,
        "title": "[Question]: Dataset for test accuracy  ",
        "user": {
            "login": "284nnuS",
            "id": 91007431,
            "node_id": "MDQ6VXNlcjkxMDA3NDMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/91007431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/284nnuS",
            "html_url": "https://github.com/284nnuS",
            "followers_url": "https://api.github.com/users/284nnuS/followers",
            "following_url": "https://api.github.com/users/284nnuS/following{/other_user}",
            "gists_url": "https://api.github.com/users/284nnuS/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/284nnuS/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/284nnuS/subscriptions",
            "organizations_url": "https://api.github.com/users/284nnuS/orgs",
            "repos_url": "https://api.github.com/users/284nnuS/repos",
            "events_url": "https://api.github.com/users/284nnuS/events{/privacy}",
            "received_events_url": "https://api.github.com/users/284nnuS/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-10T02:22:29Z",
        "updated_at": "2023-10-16T16:03:56Z",
        "closed_at": "2023-10-16T16:03:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIn my opinion, the solution of llama index is quite good. I want to try applying other models at the \"VectorStoreIndex\" step to check which one has the highest accuracy. May I ask if you have any keywords about datasets that can check the accuracy of this problem?\r\n\r\nThanks.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6812/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6811",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6811/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6811/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6811/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6811",
        "id": 1795583605,
        "node_id": "PR_kwDOIWuq585VBfpl",
        "number": 6811,
        "title": "Moving API reference links into a sub header",
        "user": {
            "login": "sourabhdesai",
            "id": 3005241,
            "node_id": "MDQ6VXNlcjMwMDUyNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3005241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sourabhdesai",
            "html_url": "https://github.com/sourabhdesai",
            "followers_url": "https://api.github.com/users/sourabhdesai/followers",
            "following_url": "https://api.github.com/users/sourabhdesai/following{/other_user}",
            "gists_url": "https://api.github.com/users/sourabhdesai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sourabhdesai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sourabhdesai/subscriptions",
            "organizations_url": "https://api.github.com/users/sourabhdesai/orgs",
            "repos_url": "https://api.github.com/users/sourabhdesai/repos",
            "events_url": "https://api.github.com/users/sourabhdesai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sourabhdesai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-09T22:02:57Z",
        "updated_at": "2023-07-10T01:21:09Z",
        "closed_at": "2023-07-10T01:21:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6811",
            "html_url": "https://github.com/run-llama/llama_index/pull/6811",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6811.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6811.patch",
            "merged_at": "2023-07-10T01:21:09Z"
        },
        "body": "# Description\r\n\r\nI'll admit it took way too long to get this to look right \ud83d\ude05\r\n\r\nMoving API References into it's own sub-header. \r\n\r\nScreenshots:\r\n\r\n![Screen Shot 2023-07-09 at 2 54 18 PM](https://github.com/jerryjliu/llama_index/assets/3005241/c2441e6c-7b35-4663-b6e3-d1e2765e4e31)\r\n![Screen Shot 2023-07-09 at 2 54 28 PM](https://github.com/jerryjliu/llama_index/assets/3005241/50b477f0-c2fe-4320-96f8-7ffd324db4d4)\r\n![Screen Shot 2023-07-09 at 2 54 51 PM](https://github.com/jerryjliu/llama_index/assets/3005241/a1c2a58a-81ac-4922-b8db-a4823c37d0c6)\r\n![Screen Shot 2023-07-09 at 2 53 43 PM](https://github.com/jerryjliu/llama_index/assets/3005241/e3a24b0d-e975-4a55-9b8d-fb0b44fd7ec1)\r\n\r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nJust documentation layout updates\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have made corresponding changes to the documentation\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6811/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6810",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6810/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6810/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6810/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6810",
        "id": 1795552300,
        "node_id": "I_kwDOIWuq585rBfQs",
        "number": 6810,
        "title": "[Question]: ",
        "user": {
            "login": "nbiv92",
            "id": 138823568,
            "node_id": "U_kgDOCEZHkA",
            "avatar_url": "https://avatars.githubusercontent.com/u/138823568?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nbiv92",
            "html_url": "https://github.com/nbiv92",
            "followers_url": "https://api.github.com/users/nbiv92/followers",
            "following_url": "https://api.github.com/users/nbiv92/following{/other_user}",
            "gists_url": "https://api.github.com/users/nbiv92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nbiv92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nbiv92/subscriptions",
            "organizations_url": "https://api.github.com/users/nbiv92/orgs",
            "repos_url": "https://api.github.com/users/nbiv92/repos",
            "events_url": "https://api.github.com/users/nbiv92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nbiv92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-09T20:32:54Z",
        "updated_at": "2023-07-09T21:35:30Z",
        "closed_at": "2023-07-09T21:34:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI have used this to use a custom embedding search on my data. This is a direct copy from  https://gpt-index.readthedocs.io/en/latest/how_to/customization/embeddings.html.  When I test this on the paul graham essay I get a response that is almost identical to the example from OpenAI. I am curious how I am getting a response at all. I am only clarifying an Embed model and have not entered a OpenAI key. So how is LLamaIndex generating a response here and what is the expected response?\r\n\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom llama_index import LangchainEmbedding, ServiceContext\r\n\r\n// load in HF embedding model from langchain\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings())\r\nservice_context = ServiceContext.from_defaults(embed_model=embed_model)\r\n\r\n// load index\r\ndocuments = SimpleDirectoryReader('../paul_graham_essay/data').load_data()\r\nnew_index = VectorStoreIndex.from_documents(\r\ndocuments,\r\nservice_context=service_context,\r\n)\r\n\r\n// query will use the same embed_model\r\nquery_engine = new_index.as_query_engine(\r\nverbose=True,\r\n)\r\nresponse = query_engine.query(\"<query_text>\")\r\nprint(response)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6810/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6809",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6809/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6809/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6809/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6809",
        "id": 1795455451,
        "node_id": "PR_kwDOIWuq585VBGNF",
        "number": 6809,
        "title": "added pydantic to guardrails",
        "user": {
            "login": "smyja",
            "id": 20070770,
            "node_id": "MDQ6VXNlcjIwMDcwNzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20070770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smyja",
            "html_url": "https://github.com/smyja",
            "followers_url": "https://api.github.com/users/smyja/followers",
            "following_url": "https://api.github.com/users/smyja/following{/other_user}",
            "gists_url": "https://api.github.com/users/smyja/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smyja/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smyja/subscriptions",
            "organizations_url": "https://api.github.com/users/smyja/orgs",
            "repos_url": "https://api.github.com/users/smyja/repos",
            "events_url": "https://api.github.com/users/smyja/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smyja/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-09T15:46:56Z",
        "updated_at": "2023-08-08T21:32:22Z",
        "closed_at": "2023-08-08T21:32:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6809",
            "html_url": "https://github.com/run-llama/llama_index/pull/6809",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6809.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6809.patch",
            "merged_at": null
        },
        "body": "Adds a way to create the guardrails output parser from a pydantic model.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6809/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6809/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6808",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6808/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6808/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6808/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6808",
        "id": 1795434387,
        "node_id": "PR_kwDOIWuq585VBCHb",
        "number": 6808,
        "title": "Update Chatbot_SEC.ipynb",
        "user": {
            "login": "mickeybeurskens",
            "id": 25587997,
            "node_id": "MDQ6VXNlcjI1NTg3OTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/25587997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mickeybeurskens",
            "html_url": "https://github.com/mickeybeurskens",
            "followers_url": "https://api.github.com/users/mickeybeurskens/followers",
            "following_url": "https://api.github.com/users/mickeybeurskens/following{/other_user}",
            "gists_url": "https://api.github.com/users/mickeybeurskens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mickeybeurskens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mickeybeurskens/subscriptions",
            "organizations_url": "https://api.github.com/users/mickeybeurskens/orgs",
            "repos_url": "https://api.github.com/users/mickeybeurskens/repos",
            "events_url": "https://api.github.com/users/mickeybeurskens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mickeybeurskens/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-09T14:51:21Z",
        "updated_at": "2023-07-09T19:19:05Z",
        "closed_at": "2023-07-09T19:19:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6808",
            "html_url": "https://github.com/run-llama/llama_index/pull/6808",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6808.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6808.patch",
            "merged_at": "2023-07-09T19:19:05Z"
        },
        "body": "Update example notebook to reflect change in the TransformQueryEngine interface.\r\n\r\n# Description\r\nChanged the parameter `transform_extra_info` to `transform_metadata` in `TransformQueryEngine` for the ChatBot notebook example.\r\n\r\nFixes # (issue)\r\n#6807 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] I stared at the code and made sure it makes sense (and tested it locally)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6808/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6807",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6807/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6807/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6807/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6807",
        "id": 1795431422,
        "node_id": "I_kwDOIWuq585rBBv-",
        "number": 6807,
        "title": "[Documentation]: Example Notebook Contains Old TransformQueryEngine Interface Call",
        "user": {
            "login": "mickeybeurskens",
            "id": 25587997,
            "node_id": "MDQ6VXNlcjI1NTg3OTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/25587997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mickeybeurskens",
            "html_url": "https://github.com/mickeybeurskens",
            "followers_url": "https://api.github.com/users/mickeybeurskens/followers",
            "following_url": "https://api.github.com/users/mickeybeurskens/following{/other_user}",
            "gists_url": "https://api.github.com/users/mickeybeurskens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mickeybeurskens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mickeybeurskens/subscriptions",
            "organizations_url": "https://api.github.com/users/mickeybeurskens/orgs",
            "repos_url": "https://api.github.com/users/mickeybeurskens/repos",
            "events_url": "https://api.github.com/users/mickeybeurskens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mickeybeurskens/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T14:44:12Z",
        "updated_at": "2023-08-29T19:00:12Z",
        "closed_at": "2023-07-12T17:11:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nIn the Uber SEC-10K notebook which showcases searching with VectorIndexes, TransformQueryEngine is used to construct a tool chain for langchain. It is called as such:\r\n\r\n```python\r\nquery_engine = TransformQueryEngine(\r\n        query_engine,\r\n        query_transform=decompose_transform,\r\n        transform_extra_info={\"index_summary\": index.index_struct.summary},\r\n    )\r\n```\r\n\r\nHowever, `transform_extra_info` seems to be deprecated in favor of `transform_metadata`. \r\nAs far as I understand, the call should become:\r\n\r\n```python\r\nquery_engine = TransformQueryEngine(\r\n        query_engine,\r\n        query_transform=decompose_transform,\r\n        transform_metadata={\"index_summary\": index.index_struct.summary},\r\n    )\r\n```\r\n\r\nLink to notebook: https://github.com/jerryjliu/llama_index/blob/main/examples/chatbot/Chatbot_SEC.ipynb\r\n\r\n\n\n### Documenation Link\n\nhttps://github.com/jerryjliu/llama_index/blob/main/examples/chatbot/Chatbot_SEC.ipynb",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6807/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6806",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6806/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6806/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6806/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6806",
        "id": 1795400333,
        "node_id": "PR_kwDOIWuq585VA7bv",
        "number": 6806,
        "title": "feat(UX): provide `all-MiniLM-L6-v2` as local `embed_model`",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-09T13:22:01Z",
        "updated_at": "2023-07-14T04:16:18Z",
        "closed_at": "2023-07-14T04:16:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6806",
            "html_url": "https://github.com/run-llama/llama_index/pull/6806",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6806.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6806.patch",
            "merged_at": "2023-07-14T04:16:18Z"
        },
        "body": "# Description\r\n\r\nUsage:\r\n```python\r\nservice_context = ServiceContext(embed_model=\"local\")\r\n```\r\n<details>\r\n\r\nFor the choice of `all-MiniLM-L6-v2`, see the cost performance analysis [here](https://medium.com/@nils_reimers/openai-gpt-3-text-embeddings-really-a-new-state-of-the-art-in-dense-text-embeddings-6571fe3ec9d9). Just eyeballing suggested that this embed model running locally on CPU is faster than calling the `text-embedding-ada-002` model (although, perhaps this was due to calling this API sequentially? Still, it was really fast for ~40 nodes). Further benchmarks will be performed in https://github.com/jerryjliu/llama_index/issues/6804\r\n\r\n</details>\r\n\r\nPartially fixes: https://github.com/jerryjliu/llama_index/issues/6720\r\n\r\n<details> \r\n\r\nThere are two questions here:\r\n1. Is the API ok?\r\n2. Is this way of instantiating the local model (using langchain) ok, or should we define our own `HuggingFaceEmbedding` class?\r\n\r\n</details>\r\n---\r\n\r\nAdvanced usage:\r\n\r\n```python\r\nservice_context = ServiceContext(embed_model=\"local:sentence-transformers/all-mpnet-base-v2\")\r\n```\r\n\r\nNo longer planned:\r\n<details>\r\n\r\nFuture: (multiprocessing)\r\n```python\r\nservice_context = ServiceContext(embed_model=\"local-fast\")\r\nservice_context = ServiceContext(embed_model=\"local-fast:sentence-transformers/all-mpnet-base-v2\")\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n---\r\n\r\nIn fact, I am inclined to think this is the better default than `OpenAIEmbedding`. So one should have to explicitly pass in an `OpenAIEmbedding`\r\n\r\nIf we are OK with moving forward with this, we can get rid of the `embed_model=\"local\"` API. Perhaps we can hold for the benchmark results before making a final decision.\r\n\r\n---\r\n\r\n\r\n</details>\r\n\r\n### Type of Change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n### How Has This Been Tested?\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n###  Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [x] I have made corresponding changes to the documentation\r\n- [X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6806/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6806/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6805",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6805/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6805/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6805/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6805",
        "id": 1795393170,
        "node_id": "I_kwDOIWuq585rA4aS",
        "number": 6805,
        "title": "[Feature Request]: Investigate Instruction Tuned Embeddings",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-09T13:03:26Z",
        "updated_at": "2023-10-21T16:04:07Z",
        "closed_at": "2023-10-21T16:04:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nThere is such a thing is instruction-tuned embeddings. e.g. https://huggingface.co/hkunlp/instructor-large\r\n\r\nI'm not too sure on the methodology. But intuitively it provides more context for the embedding, that is perhaps missing from the document.\r\n\r\nIf I'm being honest, I don't see why this would work better than simply appending that information in front of a normal embedding, but I can see why that may cause issues depending on the data distribution of the embedding model (it may not been trained on such prefixed \"metadata\" before).\r\n\r\nWe should test more rigorously once we have a rigorous eval methodology in place.\r\n\r\nThe first step would be to integrate the BEIR benchmark (see: https://github.com/jerryjliu/llama_index/issues/6554)\r\n\r\n### Resources\r\n1. https://instructor-embedding.github.io/\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6805/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6805/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6804",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6804/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6804/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6804/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6804",
        "id": 1795386104,
        "node_id": "I_kwDOIWuq585rA2r4",
        "number": 6804,
        "title": "[Feature Request]: Simple benchmarks for embedding speeds",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-09T12:44:12Z",
        "updated_at": "2023-07-13T18:01:04Z",
        "closed_at": "2023-07-13T18:01:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nMethdology:\r\n1. Generate random strings of certain length (perhaps from a dictionary of natural language strings - can have a fast but good methodology here)\r\n2. Embed those strings\r\n\r\nOf course, the benchmark result is only valid for a given machine. However, our objective is \r\n1. to get a sense of throughput achievable on a standard developer laptop using local embedding models.\r\n2. to get a sense of the throughput for various APIs at the default batch size\r\n\r\nSimilar to https://github.com/jerryjliu/llama_index/pull/6670\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6804/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6804/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6803",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6803/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6803/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6803/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6803",
        "id": 1795336559,
        "node_id": "I_kwDOIWuq585rAqlv",
        "number": 6803,
        "title": "[Feature Request]: Parallelize `MetadataExtractor`",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-09T10:31:55Z",
        "updated_at": "2023-11-22T08:32:03Z",
        "closed_at": "2023-10-15T16:03:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nMetadata extractor is single concurrency and very slow. \r\n\r\nShould we parallelize with new async APIs for node parser, or use sync parallelization approach (see: https://github.com/jerryjliu/llama_index/issues/6708)?\r\n\r\nPlease advise on which is the preferred route @jerryjliu @logan-markewich \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6803/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6802",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6802/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6802/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6802/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6802",
        "id": 1795326246,
        "node_id": "I_kwDOIWuq585rAoEm",
        "number": 6802,
        "title": "[Feature Request]: Implement Hugging Face Embedding (local) model",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T10:08:54Z",
        "updated_at": "2023-11-02T17:44:49Z",
        "closed_at": "2023-11-02T17:44:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nThere are many low-cost embeddings available on Hugging Face that are supposedly better than OpenAI's. \r\n\r\nIn fact, it is a mystery to me why anyone would use OpenAI's embeddings.\r\n\r\nFor dense models, these are good defaults:\r\n- [ ] https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2/tree/main\r\n- [ ] https://huggingface.co/sentence-transformers/all-mpnet-base-v2/tree/main\r\n\r\nI will use the latter as the local default \r\n\r\nIf and when the [MTEB benchmark page](https://huggingface.co/spaces/mteb/leaderboard) loads, we can also try to see if there are any good models run locally that can handle long context lengths.\r\n\r\n\r\n### References\r\n- [langchain impl of hugging face embeddings](https://github.com/hwchase17/langchain/blob/560c4dfc98287da1bc0cfc1caebbe86d1e66a94d/langchain/embeddings/huggingface.py). Note that we should not use langchain impls for any defaults since we do not want it to be a default dependency. But we still need `sentence_transformers` installed.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6802/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6802/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6801",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6801/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6801/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6801/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6801",
        "id": 1795298194,
        "node_id": "I_kwDOIWuq585rAhOS",
        "number": 6801,
        "title": "[Feature Request]: Investigate Splade variants as cheap local indexing/search",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-09T08:36:08Z",
        "updated_at": "2023-10-15T16:03:43Z",
        "closed_at": "2023-10-15T16:03:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nSimilar to https://github.com/jerryjliu/llama_index/issues/6577, SpladeV2 is an alternate indexing/retrieval model.\r\n\r\nIt is much cheaper to run locally, being based on distillBERT. It may serve as a good candidate for local embedding models.\r\n\r\nResources:\r\n1. Splade repo: https://github.com/naver/splade\r\n2. Huggingface weights for spladev2(distilBERT): https://huggingface.co/naver/splade_v2_distil",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6801/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6800",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6800/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6800/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6800/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6800",
        "id": 1795294958,
        "node_id": "I_kwDOIWuq585rAgbu",
        "number": 6800,
        "title": "[Tracking]: Provide Cheaper / Better `embed_model`s",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T08:25:01Z",
        "updated_at": "2023-10-15T16:03:43Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nRefer to this article by Nils Reimers (Cohere director of ML): https://medium.com/@nils_reimers/openai-gpt-3-text-embeddings-really-a-new-state-of-the-art-in-dense-text-embeddings-6571fe3ec9d9 (Jan 2023). \r\n\r\nCheck if the results still hold in July 2023.\r\n\r\nDirections to investigate:\r\n- [x] https://github.com/jerryjliu/llama_index/issues/6801\r\n- [x] https://github.com/jerryjliu/llama_index/issues/6577\r\n- [ ] https://github.com/jerryjliu/llama_index/issues/6802\r\n\r\nResources:\r\n1. [Academic Work Showing PLAID/ColBERTv2 and Splade on the cost-accuracy frontier](https://arxiv.org/pdf/2212.01340.pdf)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6800/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6800/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6799",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6799/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6799/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6799/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6799",
        "id": 1795293071,
        "node_id": "PR_kwDOIWuq585VAmKu",
        "number": 6799,
        "title": "Fix typo in output_parser.md",
        "user": {
            "login": "RensDimmendaal",
            "id": 9828683,
            "node_id": "MDQ6VXNlcjk4Mjg2ODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9828683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RensDimmendaal",
            "html_url": "https://github.com/RensDimmendaal",
            "followers_url": "https://api.github.com/users/RensDimmendaal/followers",
            "following_url": "https://api.github.com/users/RensDimmendaal/following{/other_user}",
            "gists_url": "https://api.github.com/users/RensDimmendaal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RensDimmendaal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RensDimmendaal/subscriptions",
            "organizations_url": "https://api.github.com/users/RensDimmendaal/orgs",
            "repos_url": "https://api.github.com/users/RensDimmendaal/repos",
            "events_url": "https://api.github.com/users/RensDimmendaal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RensDimmendaal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-09T08:18:14Z",
        "updated_at": "2023-07-10T19:00:13Z",
        "closed_at": "2023-07-10T19:00:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6799",
            "html_url": "https://github.com/run-llama/llama_index/pull/6799",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6799.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6799.patch",
            "merged_at": null
        },
        "body": "fix typo temjlate -> template\r\n\r\n# Description\r\n\r\nStumbled upon a typo that made it harder to copy-paste and use the code directly. \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6799/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6799/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6798",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6798/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6798/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6798/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6798",
        "id": 1795281607,
        "node_id": "PR_kwDOIWuq585VAkEz",
        "number": 6798,
        "title": "add storage abstractions to docs",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-09T07:38:48Z",
        "updated_at": "2023-07-09T17:45:02Z",
        "closed_at": "2023-07-09T17:45:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6798",
            "html_url": "https://github.com/run-llama/llama_index/pull/6798",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6798.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6798.patch",
            "merged_at": "2023-07-09T17:45:01Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6798/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6798/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6797",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6797/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6797/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6797/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6797",
        "id": 1795276081,
        "node_id": "I_kwDOIWuq585rAb0x",
        "number": 6797,
        "title": "[Feature Request]: `.cache/llama_index` for non-hugging face local model cache",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-09T07:19:29Z",
        "updated_at": "2023-10-15T16:03:49Z",
        "closed_at": "2023-10-15T16:03:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nFor now the use case is restricted to GGML/llama.cpp models. ~~I believe these models are ideal in terms of size, mem requirement, speed tradeoffs on a laptop, while being free.~~\r\n\r\n### Reason\r\n\r\n_No response_\r\n\r\n### Value of Feature\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6797/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6797/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6796",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6796/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6796/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6796/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6796",
        "id": 1795237165,
        "node_id": "PR_kwDOIWuq585VAbv4",
        "number": 6796,
        "title": "add Document/Node docs",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-09T05:01:04Z",
        "updated_at": "2023-07-09T05:14:50Z",
        "closed_at": "2023-07-09T05:14:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6796",
            "html_url": "https://github.com/run-llama/llama_index/pull/6796",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6796.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6796.patch",
            "merged_at": "2023-07-09T05:14:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6796/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6796/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6795",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6795/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6795/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6795/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6795",
        "id": 1795216001,
        "node_id": "I_kwDOIWuq585rANKB",
        "number": 6795,
        "title": "[Tracking]: Better support for Local Models ",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-09T03:25:23Z",
        "updated_at": "2023-10-15T16:03:49Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nIt is expensive to experiment on paid APIs like OpenAI.\r\n\r\nFor cheaper development costs, let's make it easy to switch between local and API models, and generally improve local model support.\r\n\r\n- [x] https://github.com/jerryjliu/llama_index/issues/6720\r\n- [x] https://github.com/jerryjliu/llama_index/issues/6793\r\n- [ ] https://github.com/jerryjliu/llama_index/issues/6692\r\n- [x] https://github.com/jerryjliu/llama_index/issues/6797\r\n- [ ] https://github.com/jerryjliu/llama_index/issues/6800\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6795/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6795/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6794",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6794/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6794/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6794/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6794",
        "id": 1795213366,
        "node_id": "PR_kwDOIWuq585VAXMG",
        "number": 6794,
        "title": "add LLM module guide ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T03:13:35Z",
        "updated_at": "2023-07-09T03:23:06Z",
        "closed_at": "2023-07-09T03:21:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6794",
            "html_url": "https://github.com/run-llama/llama_index/pull/6794",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6794.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6794.patch",
            "merged_at": "2023-07-09T03:21:17Z"
        },
        "body": "divided into sections:\r\n- concept\r\n- usage pattern (standalone, customizing within other abstractions)\r\n- modules",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6794/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6794/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6793",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6793/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6793/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6793/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6793",
        "id": 1795213028,
        "node_id": "I_kwDOIWuq585rAMbk",
        "number": 6793,
        "title": "[Feature Request]: Streaming completion for HuggingFace local models",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-09T03:11:50Z",
        "updated_at": "2023-07-09T18:54:17Z",
        "closed_at": "2023-07-09T18:54:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nHuggingFace should support streaming completion. Let's add it to improve local model support\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6793/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6793/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6792",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6792/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6792/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6792/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6792",
        "id": 1795155661,
        "node_id": "PR_kwDOIWuq585VAMmu",
        "number": 6792,
        "title": "Rename leftover original name to LlamaIndex",
        "user": {
            "login": "pycui",
            "id": 6148473,
            "node_id": "MDQ6VXNlcjYxNDg0NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6148473?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pycui",
            "html_url": "https://github.com/pycui",
            "followers_url": "https://api.github.com/users/pycui/followers",
            "following_url": "https://api.github.com/users/pycui/following{/other_user}",
            "gists_url": "https://api.github.com/users/pycui/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pycui/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pycui/subscriptions",
            "organizations_url": "https://api.github.com/users/pycui/orgs",
            "repos_url": "https://api.github.com/users/pycui/repos",
            "events_url": "https://api.github.com/users/pycui/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pycui/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-08T22:51:27Z",
        "updated_at": "2023-07-09T05:15:04Z",
        "closed_at": "2023-07-09T05:15:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6792",
            "html_url": "https://github.com/run-llama/llama_index/pull/6792",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6792.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6792.patch",
            "merged_at": "2023-07-09T05:15:03Z"
        },
        "body": "# Description\r\nRename leftover references to the original project name to LlamaIndex.\r\n\r\n\r\n## Type of Change\r\n- [ X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n- [X ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ X] I have performed a self-review of my own code\r\n- [ X] I have commented my code, particularly in hard-to-understand areas\r\n- [ X] I have made corresponding changes to the documentation\r\n- [ X] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6792/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6791",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6791/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6791/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6791/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6791",
        "id": 1795001160,
        "node_id": "PR_kwDOIWuq585U_tNE",
        "number": 6791,
        "title": "patch nested traces of the same type",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-08T16:06:39Z",
        "updated_at": "2023-07-08T22:02:18Z",
        "closed_at": "2023-07-08T22:02:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6791",
            "html_url": "https://github.com/run-llama/llama_index/pull/6791",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6791.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6791.patch",
            "merged_at": "2023-07-08T22:02:17Z"
        },
        "body": "# Description\r\n\r\nWhen the callback manager traces nested entry points of the same trace id (i.e. query that has nested queries), the callback manager is unstable and may crash.\r\n\r\nNow, nested trace ids are possible.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Future Plans\r\n\r\nAsync is still wonky, and this is a known issue, should be fixed. One possible path to a solution is creating a dispatcher to properly aggregate trace maps from async functions.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6791/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6791/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6790",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6790/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6790/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6790/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6790",
        "id": 1794990586,
        "node_id": "PR_kwDOIWuq585U_rL_",
        "number": 6790,
        "title": "[version] bump version to 0.7.4",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-08T15:38:00Z",
        "updated_at": "2023-07-08T17:26:17Z",
        "closed_at": "2023-07-08T17:26:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6790",
            "html_url": "https://github.com/run-llama/llama_index/pull/6790",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6790.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6790.patch",
            "merged_at": "2023-07-08T17:26:16Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6790/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6790/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6789",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6789/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6789/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6789/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6789",
        "id": 1794734472,
        "node_id": "PR_kwDOIWuq585U-4V6",
        "number": 6789,
        "title": "Fixed ValueError in sql_query_tool.query_engine",
        "user": {
            "login": "viai957",
            "id": 29157342,
            "node_id": "MDQ6VXNlcjI5MTU3MzQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/29157342?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viai957",
            "html_url": "https://github.com/viai957",
            "followers_url": "https://api.github.com/users/viai957/followers",
            "following_url": "https://api.github.com/users/viai957/following{/other_user}",
            "gists_url": "https://api.github.com/users/viai957/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viai957/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viai957/subscriptions",
            "organizations_url": "https://api.github.com/users/viai957/orgs",
            "repos_url": "https://api.github.com/users/viai957/repos",
            "events_url": "https://api.github.com/users/viai957/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viai957/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-08T04:29:25Z",
        "updated_at": "2023-07-24T20:51:00Z",
        "closed_at": "2023-07-24T20:50:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6789",
            "html_url": "https://github.com/run-llama/llama_index/pull/6789",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6789.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6789.patch",
            "merged_at": null
        },
        "body": "# Description\r\nSummary of Change:\r\nFixed a value error in the SQLJoinQueryIndex.ipy file by defining the sql_query_engine variable. The sql_query_engine was not defined before, causing the error. To address this issue, I referred to the BaseQueryEngine class implemented by jerryjliu, where the sql_query variable was defined. I modified the code accordingly and conducted an end-to-end test to ensure the fix's effectiveness.\r\n\r\nIssue Fixed:\r\nThe value error in the SQLJoinQueryIndex.ipy file is due to the undefined sql_query_engine variable.\r\n\r\nMotivation and Context:\r\nThe motivation behind this change is to resolve the value error encountered while executing the examples in the document. By defining the sql_query_engine variable, we ensure that the code runs without any errors and produces the expected output. This fix enhances the usability and reliability of the codebase.\r\n\r\nDependencies:\r\nThe sql_query_engine is dependent on BaseQueryEngine class.\r\n\r\nFixes #6787\r\n\r\n## Minor Documentation Change\r\n\r\n- [ x] Bug fix (non-breaking change which fixes an issue)\r\n- [x ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nI have tested end to end and also updated the doc examples notebook\r\nI have used the latest version of llama_index == 0.7.1 \r\n\r\n- [x] Added new unit/integration tests\r\n- [ x] Added notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ x] I have performed a self-review of my own code\r\n- [ ] I have commented on my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ x] My changes generate no new warnings\r\n- [x ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6789/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6789/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6788",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6788/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6788/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6788/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6788",
        "id": 1794648704,
        "node_id": "I_kwDOIWuq585q-CqA",
        "number": 6788,
        "title": "[Bug]: Knowledge Graph not linking subject to object but linking subject to predicate",
        "user": {
            "login": "mikelupu",
            "id": 435547,
            "node_id": "MDQ6VXNlcjQzNTU0Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/435547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelupu",
            "html_url": "https://github.com/mikelupu",
            "followers_url": "https://api.github.com/users/mikelupu/followers",
            "following_url": "https://api.github.com/users/mikelupu/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelupu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelupu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelupu/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelupu/orgs",
            "repos_url": "https://api.github.com/users/mikelupu/repos",
            "events_url": "https://api.github.com/users/mikelupu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelupu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-08T03:03:13Z",
        "updated_at": "2023-12-06T17:39:18Z",
        "closed_at": "2023-12-06T17:39:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI've generated a knowledge graph from text and it seems like the LLM is extracting the object, subject correctly from the prompt however the edges that are being added are not linking the subject to the object. The visualization that is currently generated from the index graph is showing the issue. I've tried to debug the index and it seems like the structures are right - perhaps may the add_edge line that's causing the problem. \r\n\r\nThis is an example from an interview transcript text which has the line \"Manisha Jain is from Thoughtworks\". The nodes Manisha Jain and Thoughtworks are nodes in the graph, but the visualization is showing \"manisha jain\" linked to \"is from\"\r\n\r\n<img width=\"727\" alt=\"image\" src=\"https://github.com/jerryjliu/llama_index/assets/435547/7d68d446-2e68-4c54-a6a1-88e0e1639589\">\r\n\r\n\n\n### Version\n\n0.6.28\n\n### Steps to Reproduce\n\n- Generate a knowledge graph and visualized as per example above. \r\n- Note that the nodes are not linked together correctly\r\n- You can also look at the g.nodes() and g.edges() and see that the edges link subject to the predicates \n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6788/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6788/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]