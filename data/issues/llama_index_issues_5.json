[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9117",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9117/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9117/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9117/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9117",
        "id": 2008741149,
        "node_id": "PR_kwDOIWuq585gQc0S",
        "number": 9117,
        "title": "Multi Modal Summary Tables",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710946,
                "node_id": "LA_kwDOIWuq588AAAABc3-fIg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:L",
                "name": "size:L",
                "color": "eb9500",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-23T20:02:09Z",
        "updated_at": "2023-11-24T20:01:10Z",
        "closed_at": "2023-11-24T20:01:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9117",
            "html_url": "https://github.com/run-llama/llama_index/pull/9117",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9117.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9117.patch",
            "merged_at": "2023-11-24T20:01:09Z"
        },
        "body": "# Description\r\n\r\nAdd into MM guide page for \r\n1. MM overall flow\r\n2. Current MM models\r\n3. Current MM vector stores\r\n\r\nNeed to add links if current tables make sense\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9117/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9117/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9116",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9116/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9116/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9116/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9116",
        "id": 2008694639,
        "node_id": "PR_kwDOIWuq585gQSwG",
        "number": 9116,
        "title": "Make retriever callback manager less painful",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710946,
                "node_id": "LA_kwDOIWuq588AAAABc3-fIg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:L",
                "name": "size:L",
                "color": "eb9500",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-23T19:01:19Z",
        "updated_at": "2023-11-23T19:08:55Z",
        "closed_at": "2023-11-23T19:08:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9116",
            "html_url": "https://github.com/run-llama/llama_index/pull/9116",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9116.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9116.patch",
            "merged_at": "2023-11-23T19:08:54Z"
        },
        "body": "# Description\r\n\r\nWe added the callback manager to the BaseRetriever class, but this makes custom retrievers a little annoying. We can improve this\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/9114\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9116/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9116/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9115",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9115/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9115/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9115/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9115",
        "id": 2008620170,
        "node_id": "PR_kwDOIWuq585gQCzH",
        "number": 9115,
        "title": "Vectara summarization",
        "user": {
            "login": "ofermend",
            "id": 1823547,
            "node_id": "MDQ6VXNlcjE4MjM1NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofermend",
            "html_url": "https://github.com/ofermend",
            "followers_url": "https://api.github.com/users/ofermend/followers",
            "following_url": "https://api.github.com/users/ofermend/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofermend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofermend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofermend/subscriptions",
            "organizations_url": "https://api.github.com/users/ofermend/orgs",
            "repos_url": "https://api.github.com/users/ofermend/repos",
            "events_url": "https://api.github.com/users/ofermend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofermend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710949,
                "node_id": "LA_kwDOIWuq588AAAABc3-fJQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XL",
                "name": "size:XL",
                "color": "ff823f",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-23T17:37:20Z",
        "updated_at": "2023-11-23T18:47:37Z",
        "closed_at": "2023-11-23T18:47:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9115",
            "html_url": "https://github.com/run-llama/llama_index/pull/9115",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9115.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9115.patch",
            "merged_at": "2023-11-23T18:47:31Z"
        },
        "body": "This PR focused on extending VectaraIndex capabilities to enable Vectara's internal summarization capability, allowing users to avoid the requirement of additional LLM within their LlamaIndex RAG implementation.\r\n\r\nIn addition, a few other changes:\r\n\r\n* Using hash of text as doc_id (instead of node.id_ which resulted in documents being ingested multiple times)\r\n* Cleaned up VectaraDemo and added example of using the Vectara summarization\r\n* Added new test cases\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9115/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9115/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9114",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9114/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9114/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9114/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9114",
        "id": 2008589887,
        "node_id": "I_kwDOIWuq5853uKY_",
        "number": 9114,
        "title": "[Bug]: CustomRetriever object has no attribute 'callback_manager'",
        "user": {
            "login": "R-I-R",
            "id": 14945548,
            "node_id": "MDQ6VXNlcjE0OTQ1NTQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/14945548?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/R-I-R",
            "html_url": "https://github.com/R-I-R",
            "followers_url": "https://api.github.com/users/R-I-R/followers",
            "following_url": "https://api.github.com/users/R-I-R/following{/other_user}",
            "gists_url": "https://api.github.com/users/R-I-R/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/R-I-R/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/R-I-R/subscriptions",
            "organizations_url": "https://api.github.com/users/R-I-R/orgs",
            "repos_url": "https://api.github.com/users/R-I-R/repos",
            "events_url": "https://api.github.com/users/R-I-R/events{/privacy}",
            "received_events_url": "https://api.github.com/users/R-I-R/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-23T17:08:31Z",
        "updated_at": "2023-11-23T19:08:55Z",
        "closed_at": "2023-11-23T19:08:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI create a custom retriever following step by step the documentation [tutorial](https://docs.llamaindex.ai/en/stable/examples/query_engine/CustomRetrievers.html) but it throws the error \r\n\r\n> AttributeError: 'MergeRetriever' object has no attribute 'callback_manager'\n\n### Version\n\n0.9.6.post2\n\n### Steps to Reproduce\n\ncreating a custom retriever that inherith from BaseRetriever like the one on  [this tutorial](https://docs.llamaindex.ai/en/stable/examples/query_engine/CustomRetrievers.html)\n\n### Relevant Logs/Tracbacks\n\n```shell\nFile \"/www/server/server.py\", line 12, in chat_post\r\n    response = query_engine.query(msg)\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/core/base_query_engine.py\", line 30, in query\r\n    return self._query(str_or_query_bundle)\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 170, in _query\r\n    nodes = self.retrieve(query_bundle)\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 126, in retrieve\r\n    nodes = self._retriever.retrieve(query_bundle)\r\n  File \"/usr/local/lib/python3.10/site-packages/llama_index/core/base_retriever.py\", line 42, in retrieve\r\n    with self.callback_manager.as_trace(\"query\"):\r\nAttributeError: 'CustomRetriever' object has no attribute 'callback_manager'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9114/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9114/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9113",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9113/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9113/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9113/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9113",
        "id": 2008581646,
        "node_id": "PR_kwDOIWuq585gP6ej",
        "number": 9113,
        "title": "add resume to docs",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-23T17:01:23Z",
        "updated_at": "2023-11-23T19:09:14Z",
        "closed_at": "2023-11-23T19:09:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9113",
            "html_url": "https://github.com/run-llama/llama_index/pull/9113",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9113.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9113.patch",
            "merged_at": "2023-11-23T19:09:13Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9113/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9113/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9112",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9112/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9112/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9112/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9112",
        "id": 2008553071,
        "node_id": "PR_kwDOIWuq585gP0K0",
        "number": 9112,
        "title": "Fix exception callback handling",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710919,
                "node_id": "LA_kwDOIWuq588AAAABc3-fBw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:S",
                "name": "size:S",
                "color": "77b800",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-23T16:40:06Z",
        "updated_at": "2023-11-24T19:10:52Z",
        "closed_at": "2023-11-24T19:10:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9112",
            "html_url": "https://github.com/run-llama/llama_index/pull/9112",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9112.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9112.patch",
            "merged_at": "2023-11-24T19:10:51Z"
        },
        "body": "# Description\r\n\r\nExceptions were not consistently placed in the trace map (sibling vs. child, due to how leaf events work). Furthermore, they were often duplicated.\r\n\r\nThis PR attempts to fix both issues.\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/9070\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/7799\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested notebooks + provided repro scripts\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9112/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9112/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9111",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9111/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9111/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9111/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9111",
        "id": 2008354954,
        "node_id": "I_kwDOIWuq5853tRCK",
        "number": 9111,
        "title": "[Bug]: VectorStoreIndex.from_document KeyError",
        "user": {
            "login": "Data-drone",
            "id": 4410493,
            "node_id": "MDQ6VXNlcjQ0MTA0OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4410493?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Data-drone",
            "html_url": "https://github.com/Data-drone",
            "followers_url": "https://api.github.com/users/Data-drone/followers",
            "following_url": "https://api.github.com/users/Data-drone/following{/other_user}",
            "gists_url": "https://api.github.com/users/Data-drone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Data-drone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Data-drone/subscriptions",
            "organizations_url": "https://api.github.com/users/Data-drone/orgs",
            "repos_url": "https://api.github.com/users/Data-drone/repos",
            "events_url": "https://api.github.com/users/Data-drone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Data-drone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2023-11-23T14:37:15Z",
        "updated_at": "2023-11-24T17:20:25Z",
        "closed_at": "2023-11-24T17:20:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nGetting key error with: `VectorStoreIndex.from_documents` using a MLFloatGateway Langchain embedding model.\r\n\r\nThe trace shows: \r\n\r\n```\r\n    |_embedding ->  0.970113 seconds\r\n    |_embedding ->  0.973638 seconds\r\n    |_embedding ->  0.97082 seconds\r\n    |_embedding ->  0.969955 seconds\r\n    |_embedding ->  0.494139 seconds\r\n    |_exception ->  0.0 seconds\r\n      |_exception ->  0.0 seconds\r\n```\n\n### Version\n\n0.9.1\n\n### Steps to Reproduce\n\nI loaded a folder of .pdf files and then used `VectorStoreIndex` \r\n\r\nWould it be due to some issue to do with the embedding model? If so, How can I debug and check? I tried using logging:  \r\nhttps://docs.llamaindex.ai/en/stable/getting_started/starter_example.html#viewing-queries-and-events-using-logging\r\n\r\nbut that was too verbose and didn't show any 404 or other errors\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9111/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9110",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9110/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9110/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9110/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9110",
        "id": 2007551031,
        "node_id": "I_kwDOIWuq5853qMw3",
        "number": 9110,
        "title": "[Bug]: FAISS failed to read from the path where the data is persisted",
        "user": {
            "login": "VictorWangwz",
            "id": 22296733,
            "node_id": "MDQ6VXNlcjIyMjk2NzMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/22296733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VictorWangwz",
            "html_url": "https://github.com/VictorWangwz",
            "followers_url": "https://api.github.com/users/VictorWangwz/followers",
            "following_url": "https://api.github.com/users/VictorWangwz/following{/other_user}",
            "gists_url": "https://api.github.com/users/VictorWangwz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VictorWangwz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VictorWangwz/subscriptions",
            "organizations_url": "https://api.github.com/users/VictorWangwz/orgs",
            "repos_url": "https://api.github.com/users/VictorWangwz/repos",
            "events_url": "https://api.github.com/users/VictorWangwz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VictorWangwz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-23T06:18:41Z",
        "updated_at": "2023-12-05T20:08:30Z",
        "closed_at": "2023-12-05T20:08:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n### how to reproduce\r\nfollow the official tutorial:\r\nif do `index.storage_context.persist()`\r\nand then do `vector_store = FaissVectorStore.from_persist_dir(\"./storage\")`\r\n\r\nIt will throw error of not find the vector_store.json file.\r\n\r\n### reason\r\n.persist save to {vector_store_name}{NAMESPACE_SEP}{vector_store_fname} for example default__vector_store.json while when load from_persist_dir, it checks vector_store.json and could not find the file\n\n### Version\n\n0.0.338\n\n### Steps to Reproduce\n\nfollow the official tutorial:\r\nif do `index.storage_context.persist()`\r\nand then do `vector_store = FaissVectorStore.from_persist_dir(\"./storage\")`\r\n\r\nIt will throw error of not find the vector_store.json file.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9110/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9110/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9109",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9109/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9109/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9109/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9109",
        "id": 2007533500,
        "node_id": "PR_kwDOIWuq585gMaV_",
        "number": 9109,
        "title": "add llamapacks to docs ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710946,
                "node_id": "LA_kwDOIWuq588AAAABc3-fIg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:L",
                "name": "size:L",
                "color": "eb9500",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-23T05:58:37Z",
        "updated_at": "2023-11-23T16:41:40Z",
        "closed_at": "2023-11-23T16:41:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9109",
            "html_url": "https://github.com/run-llama/llama_index/pull/9109",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9109.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9109.patch",
            "merged_at": "2023-11-23T16:41:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9109/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9109/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9108",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9108/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9108/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9108/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9108",
        "id": 2007435605,
        "node_id": "PR_kwDOIWuq585gMFOF",
        "number": 9108,
        "title": "Restoring `requests` dependency and loosening `urllib` dependency",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710935,
                "node_id": "LA_kwDOIWuq588AAAABc3-fFw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:M",
                "name": "size:M",
                "color": "ebb800",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-23T03:39:31Z",
        "updated_at": "2023-11-23T17:09:16Z",
        "closed_at": "2023-11-23T16:43:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9108",
            "html_url": "https://github.com/run-llama/llama_index/pull/9108",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9108.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9108.patch",
            "merged_at": "2023-11-23T16:43:40Z"
        },
        "body": "# Description\r\n\r\nThe origin of this PR is:\r\n- `requests` is a primary dependency of LlamaIndex as it's directly used in `llms.llama_cpp`, but it's not in `pyproject.toml`\r\n- I need the ability to have `urllib3>=2`, but LlamaIndex is pinning `urllib3<2`.\r\n\r\nI did some archaeology just now as to why:\r\n\r\n1. `requests==2.30` moved to `urllib3` major version 2\r\n2. `urllib3>=2` apparently broke things in https://github.com/run-llama/llama-hub at the time with some `download_loader`, so https://github.com/run-llama/llama_index/pull/2099 pinned `requests<2.30` to indirectly force `urllib3` to be version 1\r\n3. Then, it turns out `requests` versions 2.3 to 2.30 had a [security vulnerability](https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q), so https://github.com/run-llama/llama_index/pull/3833 pinned `urllib3<2` so `requests==2.31` could be adopted with `urllib3<2`\r\n\r\nNowadays, the `download_loader` that https://github.com/run-llama/llama_index/pull/2099 speaks of now lives in LlamaIndex within `readers.download`. So, we can:\r\n- Safely pin `requests>=2.31` as a primary dependency\r\n- Leave `urllib3` unpinned, as it's not a dependency of LlamaIndex\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9108/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9108/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9107",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9107/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9107/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9107/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9107",
        "id": 2007429209,
        "node_id": "PR_kwDOIWuq585gMD4I",
        "number": 9107,
        "title": "[new feature] Add jsonl for JsonReader Class",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710935,
                "node_id": "LA_kwDOIWuq588AAAABc3-fFw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:M",
                "name": "size:M",
                "color": "ebb800",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-23T03:30:17Z",
        "updated_at": "2023-11-23T16:46:10Z",
        "closed_at": "2023-11-23T16:46:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9107",
            "html_url": "https://github.com/run-llama/llama_index/pull/9107",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9107.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9107.patch",
            "merged_at": "2023-11-23T16:46:09Z"
        },
        "body": "# Description\r\n\r\nSupport JsonReader with jsonl so that it can handle multiple lines of json input file\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9107/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9107/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9106",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9106/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9106/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9106/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9106",
        "id": 2007352311,
        "node_id": "PR_kwDOIWuq585gLzZu",
        "number": 9106,
        "title": "fix download loaders [v0.9.6.post2]",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710919,
                "node_id": "LA_kwDOIWuq588AAAABc3-fBw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:S",
                "name": "size:S",
                "color": "77b800",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-23T01:42:22Z",
        "updated_at": "2023-11-23T01:54:54Z",
        "closed_at": "2023-11-23T01:54:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9106",
            "html_url": "https://github.com/run-llama/llama_index/pull/9106",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9106.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9106.patch",
            "merged_at": "2023-11-23T01:54:53Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9106/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9106/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9105",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9105/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9105/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9105/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9105",
        "id": 2007243663,
        "node_id": "PR_kwDOIWuq585gLfoS",
        "number": 9105,
        "title": "Adding comprehensive docs for SimpleDirectoryReader",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710946,
                "node_id": "LA_kwDOIWuq588AAAABc3-fIg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:L",
                "name": "size:L",
                "color": "eb9500",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-22T23:23:55Z",
        "updated_at": "2023-11-22T23:40:08Z",
        "closed_at": "2023-11-22T23:40:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9105",
            "html_url": "https://github.com/run-llama/llama_index/pull/9105",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9105.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9105.patch",
            "merged_at": "2023-11-22T23:40:07Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9105/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9105/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9104",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9104/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9104/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9104/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9104",
        "id": 2007223222,
        "node_id": "I_kwDOIWuq5853o8u2",
        "number": 9104,
        "title": "[Question]: Merge nodes using start and end indexes",
        "user": {
            "login": "philipk19238",
            "id": 47836685,
            "node_id": "MDQ6VXNlcjQ3ODM2Njg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47836685?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/philipk19238",
            "html_url": "https://github.com/philipk19238",
            "followers_url": "https://api.github.com/users/philipk19238/followers",
            "following_url": "https://api.github.com/users/philipk19238/following{/other_user}",
            "gists_url": "https://api.github.com/users/philipk19238/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/philipk19238/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/philipk19238/subscriptions",
            "organizations_url": "https://api.github.com/users/philipk19238/orgs",
            "repos_url": "https://api.github.com/users/philipk19238/repos",
            "events_url": "https://api.github.com/users/philipk19238/events{/privacy}",
            "received_events_url": "https://api.github.com/users/philipk19238/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-22T23:02:52Z",
        "updated_at": "2023-11-23T15:10:44Z",
        "closed_at": "2023-11-23T15:10:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHow do I merge nodes that are close to each other without doing a graph search, given start + end char indexes are deprecated?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9104/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9104/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9103",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9103/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9103/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9103/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9103",
        "id": 2007221600,
        "node_id": "PR_kwDOIWuq585gLavi",
        "number": 9103,
        "title": "Adjust ReAct system prompt examples to match default `FnSchema`",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-22T23:00:33Z",
        "updated_at": "2023-11-23T16:46:45Z",
        "closed_at": "2023-11-23T16:46:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9103",
            "html_url": "https://github.com/run-llama/llama_index/pull/9103",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9103.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9103.patch",
            "merged_at": "2023-11-23T16:46:44Z"
        },
        "body": "# Description\r\n\r\n- REACT_CHAT_SYSTEM_HEADER is the default system prompt for `ReActAgent` and it contains some in-context examples for how LLM should respond to specify a desire to take an action\r\n- The keyword used in those examples is \"text\", which doesn't match the default `FnSchema` keyword, namely: \"input\"\r\n\r\nInterestingly:\r\n- GPT Models follow the `FnSchema` of the tool that is also included in the prompt, whereas\r\n- Open source models (Llama2 and Zephyr) follow the in-context examples (i.e., use \"text\")\r\n\r\nThis is a quick fix to align the default prompt with the default function schema. Though, we should look to add in abilities to customize the system prompt as well as handle prompt selection according to LLM choice in a future PR.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Tested various notebooks\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9103/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9103/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9102",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9102/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9102/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9102/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9102",
        "id": 2007214557,
        "node_id": "PR_kwDOIWuq585gLZPq",
        "number": 9102,
        "title": "[Draft] Google Review MM Relevance Ranking Example",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710935,
                "node_id": "LA_kwDOIWuq588AAAABc3-fFw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:M",
                "name": "size:M",
                "color": "ebb800",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-22T22:50:38Z",
        "updated_at": "2023-12-04T19:38:28Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9102",
            "html_url": "https://github.com/run-llama/llama_index/pull/9102",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9102.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9102.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nUsing Google Store review dataset build a MM RAG.\r\n1. Download google review data and sample some rows\r\n2. Build MM index\r\n3. Retrieve images and texts for a text query\r\n4. simple score fusion\r\n5. Generate relevance label from GPT4v \r\n6. Train simple ltr model \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9102/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9102/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9101",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9101/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9101/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9101/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9101",
        "id": 2007205572,
        "node_id": "I_kwDOIWuq5853o4bE",
        "number": 9101,
        "title": "[Bug]: start_char_idx and end_char_idx for TextNode is empty",
        "user": {
            "login": "philipk19238",
            "id": 47836685,
            "node_id": "MDQ6VXNlcjQ3ODM2Njg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47836685?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/philipk19238",
            "html_url": "https://github.com/philipk19238",
            "followers_url": "https://api.github.com/users/philipk19238/followers",
            "following_url": "https://api.github.com/users/philipk19238/following{/other_user}",
            "gists_url": "https://api.github.com/users/philipk19238/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/philipk19238/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/philipk19238/subscriptions",
            "organizations_url": "https://api.github.com/users/philipk19238/orgs",
            "repos_url": "https://api.github.com/users/philipk19238/repos",
            "events_url": "https://api.github.com/users/philipk19238/events{/privacy}",
            "received_events_url": "https://api.github.com/users/philipk19238/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-22T22:38:33Z",
        "updated_at": "2023-11-22T22:43:19Z",
        "closed_at": "2023-11-22T22:41:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI'm extracting chunks from my directory like this:\r\n\r\n```python\r\nloader = UnstructuredReader()\r\ndocuments = loader.load_data(file=Path('./data/36C25723Q1179_1.docx'))\r\n\r\npipeline = IngestionPipeline(\r\n    transformations=[\r\n        SentenceSplitter(chunk_size=1024, chunk_overlap=40),\r\n        QuestionsAnsweredExtractor(),\r\n    ]\r\n)\r\n\r\n# run the pipeline\r\nnodes = pipeline.run(documents=documents, llm=None)\r\n```\r\n\r\nHowever, I noticed that the start and end index attributes are None. I inspected the code base and didn't see anywhere where the attributes are being set. Is this intended behavior (where we're expected to implement this code) or is this a bug? \n\n### Version\n\n0.9.6\n\n### Steps to Reproduce\n\n```python\r\nloader = UnstructuredReader()\r\ndocuments = loader.load_data(file=Path('./data/36C25723Q1179_1.docx'))\r\n\r\npipeline = IngestionPipeline(\r\n    transformations=[\r\n        SentenceSplitter(chunk_size=1024, chunk_overlap=40),\r\n        QuestionsAnsweredExtractor(),\r\n    ]\r\n)\r\n\r\n# run the pipeline\r\nnodes = pipeline.run(documents=documents, llm=None)\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9101/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9101/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9100",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9100/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9100/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9100/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9100",
        "id": 2007057169,
        "node_id": "PR_kwDOIWuq585gK2qn",
        "number": 9100,
        "title": "fix: remove print call from _llm_extract_triplets",
        "user": {
            "login": "entropi",
            "id": 97201,
            "node_id": "MDQ6VXNlcjk3MjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/97201?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/entropi",
            "html_url": "https://github.com/entropi",
            "followers_url": "https://api.github.com/users/entropi/followers",
            "following_url": "https://api.github.com/users/entropi/following{/other_user}",
            "gists_url": "https://api.github.com/users/entropi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/entropi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/entropi/subscriptions",
            "organizations_url": "https://api.github.com/users/entropi/orgs",
            "repos_url": "https://api.github.com/users/entropi/repos",
            "events_url": "https://api.github.com/users/entropi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/entropi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-22T20:17:25Z",
        "updated_at": "2023-11-23T03:46:16Z",
        "closed_at": "2023-11-23T03:46:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9100",
            "html_url": "https://github.com/run-llama/llama_index/pull/9100",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9100.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9100.patch",
            "merged_at": "2023-11-23T03:46:16Z"
        },
        "body": "# Description\r\n\r\nThis removes an extraneous `print` statement  that was introduced in https://github.com/run-llama/llama_index/pull/7493\r\n\r\nFixes #9099 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] My changes generate no new warnings\r\n- [X] New and existing unit tests pass locally with my changes\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9100/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9100/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9099",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9099/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9099/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9099/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9099",
        "id": 2007053843,
        "node_id": "I_kwDOIWuq5853oTYT",
        "number": 9099,
        "title": "[Bug]: _llm_extract_triplets prints data to stdout",
        "user": {
            "login": "entropi",
            "id": 97201,
            "node_id": "MDQ6VXNlcjk3MjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/97201?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/entropi",
            "html_url": "https://github.com/entropi",
            "followers_url": "https://api.github.com/users/entropi/followers",
            "following_url": "https://api.github.com/users/entropi/following{/other_user}",
            "gists_url": "https://api.github.com/users/entropi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/entropi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/entropi/subscriptions",
            "organizations_url": "https://api.github.com/users/entropi/orgs",
            "repos_url": "https://api.github.com/users/entropi/repos",
            "events_url": "https://api.github.com/users/entropi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/entropi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-22T20:14:51Z",
        "updated_at": "2023-11-23T03:46:17Z",
        "closed_at": "2023-11-23T03:46:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nIt looks like a debugging `print` statement made it into the codebase in `knowledge_graph.base.KnowledgeGraphIndex._llm_extract_triplets`, which generates quite a bit of noise when using this functionality.\n\n### Version\n\n0.8.42\n\n### Steps to Reproduce\n\ngenerate a knowledge graph and watch the noise in stdout.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9099/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9099/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9098",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9098/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9098/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9098/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9098",
        "id": 2007032794,
        "node_id": "PR_kwDOIWuq585gKxSr",
        "number": 9098,
        "title": "A modest 15% speedup on docs build times",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-22T19:58:02Z",
        "updated_at": "2023-11-23T18:20:48Z",
        "closed_at": "2023-11-23T16:49:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9098",
            "html_url": "https://github.com/run-llama/llama_index/pull/9098",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9098.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9098.patch",
            "merged_at": "2023-11-23T16:49:24Z"
        },
        "body": "ReadTheDocs supports custom build commands, which allows us to pass `-j 8` which made a modest improvement to the docs by building them in parallel.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9098/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9098/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9097",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9097/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9097/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9097/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9097",
        "id": 2006955629,
        "node_id": "PR_kwDOIWuq585gKgNM",
        "number": 9097,
        "title": "JSON path prompt debug facilitation ",
        "user": {
            "login": "dylan1218",
            "id": 28288488,
            "node_id": "MDQ6VXNlcjI4Mjg4NDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/28288488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dylan1218",
            "html_url": "https://github.com/dylan1218",
            "followers_url": "https://api.github.com/users/dylan1218/followers",
            "following_url": "https://api.github.com/users/dylan1218/following{/other_user}",
            "gists_url": "https://api.github.com/users/dylan1218/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dylan1218/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dylan1218/subscriptions",
            "organizations_url": "https://api.github.com/users/dylan1218/orgs",
            "repos_url": "https://api.github.com/users/dylan1218/repos",
            "events_url": "https://api.github.com/users/dylan1218/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dylan1218/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710919,
                "node_id": "LA_kwDOIWuq588AAAABc3-fBw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:S",
                "name": "size:S",
                "color": "77b800",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-22T19:02:23Z",
        "updated_at": "2023-12-08T15:12:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9097",
            "html_url": "https://github.com/run-llama/llama_index/pull/9097",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9097.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9097.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nUpdate the JSON path base prompt to include an identifier that can be parsed from json_query.py. A parsing function was added to json_query.py to more accurately return the JSON path query string, and if not found an error clearly explaining the issues is returned to the user. \r\n\r\nFixes # https://github.com/run-llama/llama_index/issues/7587\r\n\r\n## Type of Change\r\n\r\n[x] New feature (non-breaking change which adds functionality)\r\n(1) Updates the default JSON path prompt to include an identifier that can be parsed with regex\r\n(2) Adds a regex parsing function that finds the JSONPath prompt. If not found provides clearer error handling for trouble shooting\r\n\r\n# How Has This Been Tested?\r\n\r\n[x] I stared at the code and made sure it makes sense\r\n[x] Tested by initializing a JSONQueryEngine initialized with an Azure openAI LLM service context and making various queries to ensure that JSON path was being parsed correctlly from the LLM response.\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9097/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9097/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9096",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9096/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9096/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9096/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9096",
        "id": 2006943682,
        "node_id": "PR_kwDOIWuq585gKdjB",
        "number": 9096,
        "title": "JSON path prompt debug facilitation",
        "user": {
            "login": "dylan1218",
            "id": 28288488,
            "node_id": "MDQ6VXNlcjI4Mjg4NDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/28288488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dylan1218",
            "html_url": "https://github.com/dylan1218",
            "followers_url": "https://api.github.com/users/dylan1218/followers",
            "following_url": "https://api.github.com/users/dylan1218/following{/other_user}",
            "gists_url": "https://api.github.com/users/dylan1218/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dylan1218/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dylan1218/subscriptions",
            "organizations_url": "https://api.github.com/users/dylan1218/orgs",
            "repos_url": "https://api.github.com/users/dylan1218/repos",
            "events_url": "https://api.github.com/users/dylan1218/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dylan1218/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710919,
                "node_id": "LA_kwDOIWuq588AAAABc3-fBw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:S",
                "name": "size:S",
                "color": "77b800",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-22T18:54:37Z",
        "updated_at": "2023-11-22T18:59:21Z",
        "closed_at": "2023-11-22T18:59:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9096",
            "html_url": "https://github.com/run-llama/llama_index/pull/9096",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9096.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9096.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # https://github.com/run-llama/llama_index/issues/7587\r\n\r\n## Type of Change\r\n\r\n\r\n- [ x] New feature (non-breaking change which adds functionality)\r\n\r\n(1) Updates the default JSON path prompt to include an identifier that can be parsed with regex\r\n(2) Adds a regex parsing function that finds the JSONPath prompt. If not found provides clearer error handling for trouble shooting\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ x] I stared at the code and made sure it makes sense\r\n- [x] Tested by initializing a JSONQueryEngine initialized with an Azure openAI LLM service context and making various queries to ensure that JSON path was being parsed correctlly from the LLM response.\r\n\r\n# Suggested Checklist:\r\n\r\n- [ x] I have performed a self-review of my own code\r\n- [ x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9096/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9096/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9095",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9095/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9095/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9095/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9095",
        "id": 2006926892,
        "node_id": "I_kwDOIWuq5853n0Ys",
        "number": 9095,
        "title": "[Question]: How can I specify my own custom PDF reader when reading in data from Azure Blob Storage?",
        "user": {
            "login": "AlexMSlalom",
            "id": 87664976,
            "node_id": "MDQ6VXNlcjg3NjY0OTc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/87664976?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlexMSlalom",
            "html_url": "https://github.com/AlexMSlalom",
            "followers_url": "https://api.github.com/users/AlexMSlalom/followers",
            "following_url": "https://api.github.com/users/AlexMSlalom/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlexMSlalom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlexMSlalom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlexMSlalom/subscriptions",
            "organizations_url": "https://api.github.com/users/AlexMSlalom/orgs",
            "repos_url": "https://api.github.com/users/AlexMSlalom/repos",
            "events_url": "https://api.github.com/users/AlexMSlalom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlexMSlalom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-22T18:46:07Z",
        "updated_at": "2023-11-22T18:51:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am trying to read in data from an Azure container, but have tweaked some of the classes so that the data reads in using a connection string instead of credentials, and for each PDF to be one llama-index Document, instead of chunking by page and every page being a Document. \r\n\r\nStarting out, I have pulled the AzStorageBlobReader class, and added a new method that uses connection string instead of credentials.\r\n\r\n```\r\nclass AzStorageBlobReader(BaseReader):\r\n    \"\"\"General reader for any Azure Storage Blob file or directory.\r\n\r\n    Args:\r\n        container_name (str): name of the container for the blob.\r\n        blob (Optional[str]): name of the file to download. If none specified\r\n            this loader will iterate through list of blobs in the container.\r\n        name_starts_with (Optional[str]): filter the list of blobs to download\r\n            to only those whose names begin with the specified string.\r\n        include: (Union[str, List[str], None]): Specifies one or more additional\r\n            datasets to include in the response. Options include: 'snapshots',\r\n            'metadata', 'uncommittedblobs', 'copy', 'deleted',\r\n            'deletedwithversions', 'tags', 'versions', 'immutabilitypolicy',\r\n            'legalhold'.\r\n        file_extractor (Optional[Dict[str, Union[str, BaseReader]]]): A mapping of file\r\n            extension to a BaseReader class that specifies how to convert that file\r\n            to text. See `SimpleDirectoryReader` for more details.\r\n        account_url (str): URI to the storage account, may include SAS token.\r\n        credential (Union[str, Dict[str, str], AzureNamedKeyCredential, AzureSasCredential, TokenCredential, None] = None):\r\n            The credentials with which to authenticate. This is optional if the account URL already has a SAS token.\r\n    \"\"\"\r\n\r\n    def __init__(\r\n        self,\r\n        *args: Any,\r\n        container_name: str,\r\n        conn_str: str,\r\n        prefix: str = \"\",\r\n        blob: Optional[str] = None,\r\n        name_starts_with: Optional[str] = None,\r\n        include: Optional[Any] = None,\r\n        file_extractor: Optional[Dict[str, Union[str, BaseReader]]] = None,\r\n        account_url: Optional[str] = None,\r\n        credential: Optional[Any] = None,\r\n        **kwargs: Any,\r\n    ) -> None:\r\n        \"\"\"Initializes Azure Storage Account\"\"\"\r\n        super().__init__(*args, **kwargs)\r\n\r\n        self.container_name = container_name\r\n        self.conn_str = conn_str\r\n        self.prefix = prefix\r\n        self.blob = blob\r\n        self.name_starts_with = name_starts_with\r\n        self.include = include\r\n\r\n        self.file_extractor = file_extractor\r\n\r\n        self.account_url = account_url\r\n        self.credential = credential\r\n\r\n    def load_with_conn_str(self) -> List[Document]:\r\n        \"\"\"Load documents.\"\"\"\r\n        try:\r\n            from azure.storage.blob import ContainerClient\r\n        except ImportError as exc:\r\n            raise ImportError(\r\n                \"Could not import azure storage blob python package. \"\r\n                \"Please install it with `pip install azure-storage-blob`.\"\r\n            ) from exc\r\n\r\n        container_client = ContainerClient.from_connection_string(\r\n            conn_str=self.conn_str, container_name=self.container_name\r\n        )\r\n        total_download_start_time = time.time()\r\n\r\n        with tempfile.TemporaryDirectory() as temp_dir:\r\n            if self.blob:\r\n                extension = Path(self.blob).suffix\r\n                download_file_path = (\r\n                    f\"{temp_dir}/{next(tempfile._get_candidate_names())}{extension}\"\r\n                )\r\n                logger.info(f\"Start download of {self.blob}\")\r\n                print(f\"Start download of {self.blob}\")\r\n                start_time = time.time()\r\n                stream = container_client.download_blob(self.blob)\r\n                with open(file=download_file_path, mode=\"wb\") as download_file:\r\n                    stream.readinto(download_file)\r\n                end_time = time.time()\r\n                logger.info(\r\n                    f\"{self.blob} downloaded in {end_time - start_time} seconds.\"\r\n                )\r\n                print(f\"{self.blob} downloaded in {end_time - start_time} seconds.\")\r\n            else:\r\n                logger.info(\"Listing blobs\")\r\n                print(\"Listing blobs\")\r\n                blobs_list = container_client.list_blobs(\r\n                    self.name_starts_with, self.include\r\n                )\r\n                for obj in blobs_list:\r\n                    extension = Path(obj.name).suffix\r\n                    download_file_path = (\r\n                        f\"{temp_dir}/{next(tempfile._get_candidate_names())}{extension}\"\r\n                    )\r\n                    logger.info(f\"Start download of {obj.name}\")\r\n                    print(f\"Start download of {obj.name}\")\r\n                    start_time = time.time()\r\n                    stream = container_client.download_blob(obj)\r\n                    with open(file=download_file_path, mode=\"wb\") as download_file:\r\n                        stream.readinto(download_file)\r\n                    end_time = time.time()\r\n                    logger.info(\r\n                        f\"{obj.name} downloaded in {end_time - start_time} seconds.\"\r\n                    )\r\n                    print(f\"{obj.name} downloaded in {end_time - start_time} seconds.\")\r\n\r\n            total_download_end_time = time.time()\r\n            total_elapsed_time = math.ceil(\r\n                total_download_end_time - total_download_start_time\r\n            )\r\n            logger.info(\r\n                f\"Downloading completed in approximately {total_elapsed_time // 60}min\"\r\n                f\" {total_elapsed_time % 60}s.\"\r\n            )\r\n            print(f\"Downloading completed in approximately {total_elapsed_time // 60}min\"\r\n                f\" {total_elapsed_time % 60}s.\")\r\n            logger.info(\"Document creation starting\")\r\n            print(\"Document creation starting\")\r\n\r\n            try:\r\n                from llama_hub.utils import import_loader\r\n\r\n                SimpleDirectoryReader = import_loader(\"SimpleDirectoryReader\")\r\n                print(f\"len of temporary directory: {len(temp_dir)}\")\r\n            except ImportError:\r\n\r\n                # This right here is where the file loading and splitting happens\r\n                SimpleDirectoryReader = download_loader(\"SimpleDirectoryReader\")\r\n                print(f\"len of temporary directory: {len(temp_dir)}\")\r\n\r\n            # Specifying this file extractor should hopefully fix the file splitting\r\n            loader = SimpleDirectoryReader(temp_dir, file_extractor=self.file_extractor)\r\n            \r\n            # Receiving an error here. Something about needing to use 'self' in the instantiation/call of this method.\r\n            return loader.load_data()\r\n```\r\n\r\nWhen I run the following code (I left the credential in because it is still a required argument, which I have not taken out yet), the run completes just fine.\r\n\r\n```\r\nblob_loading_test = AzStorageBlobReader(conn_str=econ_blob_storage_connection_string, \r\n                                        container_name='subset-data', \r\n                                        credential=credential,\r\n                                        # file_extractor=file_extractor\r\n                                        )\r\n\r\ndocuments = blob_loading_test.load_with_conn_str()\r\n```\r\n\r\nThe PDF data loads though and automatically chunks by PDF page. I don't want it to chunk by page, but want each full PDF to be a single Document. When delving into the code, I see that the SimpleDirectoryLoader towards the end of the AzStorageBlobReader class takes a dictionary where you can specify the file loader for specific document types. The default PDF loader is the PDFReader class, which chunks the PDFs by page into separate Documents, but I created a similar class called SimplePDFReader to concatenate all of the text into one string, and then return that as a Document. \r\n\r\n```\r\nfrom pathlib import Path\r\nfrom typing import Dict, List, Optional\r\n\r\nfrom llama_index.readers.base import BaseReader\r\nfrom llama_index.schema import Document\r\n\r\nclass SimplePDFReader(BaseReader):\r\n    \"\"\"Custom PDF Parser, that keeps full PDFs as a single Document\"\"\"\r\n\r\n    def load_data(\r\n        self, \r\n        file: Path, \r\n        extra_info: Optional[Dict] = None\r\n    ) -> List[Document]:\r\n        \"\"\"Parse file.\"\"\"\r\n\r\n        try:\r\n            import pypdf\r\n        except ImportError:\r\n            raise ImportError(\r\n                \"pypdf is required to read PDF files: `pip install pypdf`\"\r\n            )\r\n        with open(file, \"rb\") as fp:\r\n            # Create a PDF object\r\n            pdf = pypdf.PdfReader(fp)\r\n\r\n            # Get the number of pages in the PDF document\r\n            num_pages = len(pdf.pages)\r\n\r\n            text = \"\"\r\n            single_value_text_list = []\r\n            metadata = {\"file_name\": file}\r\n\r\n            for page in range(num_pages):\r\n                # Extract the text from the page\r\n                page_text = pdf.pages[page].extract_text()\r\n                text += page_text\r\n            \r\n            single_value_text_list.append(Document(text=text, metadata=metadata))\r\n\r\n            return single_value_text_list\r\n```\r\n\r\nAfter creating this class, I tested that it works, and this code does work\r\n\r\n```\r\nreader = SimplePDFReader()\r\nmetadata = {\"file_name\": 'data/file.pdf'}\r\nd = reader.load_data('data/file.pdf', extra_info=metadata)\r\n\r\nprint(type(d[0]))\r\n```\r\n\r\nWith the class created, I update the file extractor dictionary using the following code.\r\n\r\n```\r\nimport llama_index\r\n\r\nfile_extractor = llama_index.readers.file.base.DEFAULT_FILE_READER_CLS\r\nfile_extractor.update({\r\n    \".pdf\": SimplePDFReader\r\n    })\r\nprint(file_extractor)\r\n```\r\n\r\nI now attempt to instantiate the AzStorageBlobReader class with the following parameters and load data, but receive this TypeError.\r\n\r\n```\r\nblob_loading_test = AzStorageBlobReader(conn_str=econ_blob_storage_connection_string, \r\n                                        container_name='subset-data', \r\n                                        credential=credential,\r\n                                        file_extractor=file_extractor\r\n                                        )\r\n\r\ndocuments = blob_loading_test.load_with_conn_str()\r\n```\r\n\r\nThis is the error and traceback.\r\n\r\n\r\n>TypeError                                 Traceback (most recent call last)\r\n>Cell In[36], line 7\r\n>      1 blob_loading_test = AzStorageBlobReader(conn_str=econ_blob_storage_connection_string, \r\n>      2                                         container_name='subset-data', \r\n>      3                                         credential=credential,\r\n>      4                                         file_extractor=file_extractor\r\n>      5                                         )\r\n>----> 7 documents = blob_loading_test.load_with_conn_str()\r\n>\r\n>Cell In[33], line 225, in AzStorageBlobReader.load_with_conn_str(self)\r\n>    222 loader = SimpleDirectoryReader(temp_dir, file_extractor=self.file_extractor)\r\n>    224 # Receiving an error here. Something about needing to use 'self' in the instantiation/call of this method.\r\n>--> 225 return loader.load_data()\r\n>\r\n>File /anaconda/envs/azureml_py310_sdkv2/lib/python3.10/site->packages/llama_index/download/llamahub_modules/file/base.py:144, in SimpleDirectoryReader.load_data(self)\r\n>    141         except ImportError:\r\n>    142             reader = download_loader(reader)()\r\n>--> 144     extracted_documents = reader.load_data(\r\n>    145         file=input_file, extra_info=metadata\r\n>    146     )\r\n>    147     documents.extend(extracted_documents)\r\n>    148 else:\r\n>\r\n>TypeError: SimplePDFReader.load_data() missing 1 required positional argument: 'self'\r\n\r\n\r\nI don't understand this missing positional argument of \"self\". In the code the class is instantiated before calling the method, so I don't understand why it is giving this error. So, **how can I use my own PDF reader with the AzStorageBlobReader class?**. \r\n\r\nAnd in case you want to check out the SimpleDirectoryReader code, here is a [link.](https://github.com/run-llama/llama-hub/blob/main/llama_hub/file/base.py). ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9095/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9095/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9094",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9094/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9094/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9094/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9094",
        "id": 2006815781,
        "node_id": "PR_kwDOIWuq585gKBO4",
        "number": 9094,
        "title": "[version] small bump for docs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-22T17:35:58Z",
        "updated_at": "2023-11-22T17:40:46Z",
        "closed_at": "2023-11-22T17:40:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9094",
            "html_url": "https://github.com/run-llama/llama_index/pull/9094",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9094.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9094.patch",
            "merged_at": "2023-11-22T17:40:45Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9094/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9094/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9093",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9093/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9093/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9093/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9093",
        "id": 2006801988,
        "node_id": "PR_kwDOIWuq585gJ-OA",
        "number": 9093,
        "title": "Bug fix: QueryEngineTool's chat/achat method returns python built-in input func instead of query_str",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-22T17:26:20Z",
        "updated_at": "2023-11-22T17:34:14Z",
        "closed_at": "2023-11-22T17:34:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9093",
            "html_url": "https://github.com/run-llama/llama_index/pull/9093",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9093.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9093.patch",
            "merged_at": "2023-11-22T17:34:13Z"
        },
        "body": "# Description\r\n\r\n`QueryEngineTool`'s `chat`/`achat` method returns python built-in input func instead of `query_str`\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9093/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9093/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9092",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9092/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9092/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9092/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9092",
        "id": 2006783039,
        "node_id": "I_kwDOIWuq5853nRQ_",
        "number": 9092,
        "title": "[Question]: Test",
        "user": {
            "login": "shrix",
            "id": 22341,
            "node_id": "MDQ6VXNlcjIyMzQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22341?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shrix",
            "html_url": "https://github.com/shrix",
            "followers_url": "https://api.github.com/users/shrix/followers",
            "following_url": "https://api.github.com/users/shrix/following{/other_user}",
            "gists_url": "https://api.github.com/users/shrix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shrix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shrix/subscriptions",
            "organizations_url": "https://api.github.com/users/shrix/orgs",
            "repos_url": "https://api.github.com/users/shrix/repos",
            "events_url": "https://api.github.com/users/shrix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shrix/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-22T17:13:35Z",
        "updated_at": "2023-11-22T18:26:45Z",
        "closed_at": "2023-11-22T18:26:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [ ] I have searched both the documentation and discord for an answer.\n\n### Question\n\nin prev ver I had defined my node_parser as ...\r\n```    node_parser = SimpleNodeParser.from_defaults(\r\n        text_splitter=text_splitter,\r\n        metadata_extractor=metadata_extractor\r\n    )```\r\n... what do I change it to w/ the recent updates on this class?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9092/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9092/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9091",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9091/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9091/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9091/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9091",
        "id": 2006701565,
        "node_id": "PR_kwDOIWuq585gJoH0",
        "number": 9091,
        "title": "[version] bump to v0.9.6",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-22T16:24:21Z",
        "updated_at": "2023-11-22T16:29:17Z",
        "closed_at": "2023-11-22T16:29:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9091",
            "html_url": "https://github.com/run-llama/llama_index/pull/9091",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9091.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9091.patch",
            "merged_at": "2023-11-22T16:29:16Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9091/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9091/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9090",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9090/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9090/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9090/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9090",
        "id": 2006662291,
        "node_id": "PR_kwDOIWuq585gJfdt",
        "number": 9090,
        "title": "add headers to openai clients",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710919,
                "node_id": "LA_kwDOIWuq588AAAABc3-fBw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:S",
                "name": "size:S",
                "color": "77b800",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-22T16:03:18Z",
        "updated_at": "2023-11-22T16:12:11Z",
        "closed_at": "2023-11-22T16:12:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9090",
            "html_url": "https://github.com/run-llama/llama_index/pull/9090",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9090.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9090.patch",
            "merged_at": "2023-11-22T16:12:10Z"
        },
        "body": "# Description\r\n\r\nAdd headers argument to openai clients\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/9055\r\nFixes https://github.com/run-llama/llama_index/issues/9082\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9090/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9090/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9089",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9089/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9089/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9089/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9089",
        "id": 2006625864,
        "node_id": "PR_kwDOIWuq585gJXWJ",
        "number": 9089,
        "title": "store normalize as bool for huggingface embeddings",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-22T15:46:28Z",
        "updated_at": "2023-11-22T15:52:08Z",
        "closed_at": "2023-11-22T15:52:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9089",
            "html_url": "https://github.com/run-llama/llama_index/pull/9089",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9089.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9089.patch",
            "merged_at": "2023-11-22T15:52:07Z"
        },
        "body": "Quick fix -- huggingface embeddings were casting a boolean as a string\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/9080",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9089/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9089/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9088",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9088/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9088/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9088/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9088",
        "id": 2006596563,
        "node_id": "PR_kwDOIWuq585gJQx7",
        "number": 9088,
        "title": "Vectara summarization",
        "user": {
            "login": "ofermend",
            "id": 1823547,
            "node_id": "MDQ6VXNlcjE4MjM1NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofermend",
            "html_url": "https://github.com/ofermend",
            "followers_url": "https://api.github.com/users/ofermend/followers",
            "following_url": "https://api.github.com/users/ofermend/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofermend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofermend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofermend/subscriptions",
            "organizations_url": "https://api.github.com/users/ofermend/orgs",
            "repos_url": "https://api.github.com/users/ofermend/repos",
            "events_url": "https://api.github.com/users/ofermend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofermend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710946,
                "node_id": "LA_kwDOIWuq588AAAABc3-fIg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:L",
                "name": "size:L",
                "color": "eb9500",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-22T15:33:25Z",
        "updated_at": "2023-11-23T17:34:43Z",
        "closed_at": "2023-11-23T17:34:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9088",
            "html_url": "https://github.com/run-llama/llama_index/pull/9088",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9088.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9088.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nThis PR focused on extending VectaraIndex capabilities to enable Vectara's internal summarization capability, allowing users to avoid the requirement of additional LLM within their LlamaIndex RAG implementation.\r\n\r\nIn addition, a few other changes:\r\n* Using hash of text as doc_id (instead of node.id_ which resulted in documents being ingested multiple times)\r\n* Cleaned up VectaraDemo and added example of using the Vectara summarization\r\n* Added new test cases\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Added new unit/integration tests\r\n- [X] Updated VectaraDemo notebook\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9088/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9088/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9087",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9087/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9087/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9087/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9087",
        "id": 2006504850,
        "node_id": "PR_kwDOIWuq585gI8o9",
        "number": 9087,
        "title": "feat: support pgvecto.rs as a VectorStore",
        "user": {
            "login": "BeautyyuYanli",
            "id": 32453863,
            "node_id": "MDQ6VXNlcjMyNDUzODYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/32453863?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BeautyyuYanli",
            "html_url": "https://github.com/BeautyyuYanli",
            "followers_url": "https://api.github.com/users/BeautyyuYanli/followers",
            "following_url": "https://api.github.com/users/BeautyyuYanli/following{/other_user}",
            "gists_url": "https://api.github.com/users/BeautyyuYanli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BeautyyuYanli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BeautyyuYanli/subscriptions",
            "organizations_url": "https://api.github.com/users/BeautyyuYanli/orgs",
            "repos_url": "https://api.github.com/users/BeautyyuYanli/repos",
            "events_url": "https://api.github.com/users/BeautyyuYanli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BeautyyuYanli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            },
            {
                "id": 6232710946,
                "node_id": "LA_kwDOIWuq588AAAABc3-fIg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:L",
                "name": "size:L",
                "color": "eb9500",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-22T14:47:09Z",
        "updated_at": "2023-11-24T10:49:57Z",
        "closed_at": "2023-11-23T18:43:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9087",
            "html_url": "https://github.com/run-llama/llama_index/pull/9087",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9087.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9087.patch",
            "merged_at": "2023-11-23T18:43:18Z"
        },
        "body": "# Description\r\n\r\nSupport [pgvecto.rs]() as a VectorStore\r\n\r\nRelate to https://github.com/tensorchord/pgvecto.rs/issues/98\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAs described in the new notebook.\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9087/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9087/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9086",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9086/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9086/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9086/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9086",
        "id": 2006479037,
        "node_id": "I_kwDOIWuq5853mHC9",
        "number": 9086,
        "title": "[Bug]: Change in name of files saved when persist index locally",
        "user": {
            "login": "dioschuarz",
            "id": 30763346,
            "node_id": "MDQ6VXNlcjMwNzYzMzQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/30763346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dioschuarz",
            "html_url": "https://github.com/dioschuarz",
            "followers_url": "https://api.github.com/users/dioschuarz/followers",
            "following_url": "https://api.github.com/users/dioschuarz/following{/other_user}",
            "gists_url": "https://api.github.com/users/dioschuarz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dioschuarz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dioschuarz/subscriptions",
            "organizations_url": "https://api.github.com/users/dioschuarz/orgs",
            "repos_url": "https://api.github.com/users/dioschuarz/repos",
            "events_url": "https://api.github.com/users/dioschuarz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dioschuarz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-22T14:33:23Z",
        "updated_at": "2023-11-22T15:28:18Z",
        "closed_at": "2023-11-22T15:28:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nSince last version, the file name vector_store.json changed to default__vector_store.json, this kind of changes make old folders when overwrited get now vector_store.json and default__vector_store.json what makes compability problems with another microservices which uses that files.\r\n\r\nI suppose that is bug, if is not why need to create a new file name to vector_store? Is there possible keep with previous name vector_store.json only?\n\n### Version\n\n0.9.2\n\n### Steps to Reproduce\n\nBuild a vector store and persist it in any folder locally, the name of the file vector_store.json changed.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9086/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9086/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9085",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9085/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9085/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9085/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9085",
        "id": 2006464556,
        "node_id": "I_kwDOIWuq5853mDgs",
        "number": 9085,
        "title": "[Question]:  How do I pass a system prompt to a CondensePlusContextChatEngine?",
        "user": {
            "login": "gich2009",
            "id": 83756959,
            "node_id": "MDQ6VXNlcjgzNzU2OTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/83756959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gich2009",
            "html_url": "https://github.com/gich2009",
            "followers_url": "https://api.github.com/users/gich2009/followers",
            "following_url": "https://api.github.com/users/gich2009/following{/other_user}",
            "gists_url": "https://api.github.com/users/gich2009/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gich2009/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gich2009/subscriptions",
            "organizations_url": "https://api.github.com/users/gich2009/orgs",
            "repos_url": "https://api.github.com/users/gich2009/repos",
            "events_url": "https://api.github.com/users/gich2009/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gich2009/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-22T14:25:33Z",
        "updated_at": "2023-11-23T19:41:53Z",
        "closed_at": "2023-11-23T19:41:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHow do I pass a system prompt to a CondensePlusContextChatEngine?\r\nI have tried passing system_message as a keyword argument to a chat_engine with the condense_plus_context chat mode but it is not taking effect. How do I ensure it follows the system prompt?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9085/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9085/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9084",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9084/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9084/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9084/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9084",
        "id": 2006337189,
        "node_id": "I_kwDOIWuq5853lkal",
        "number": 9084,
        "title": "[Bug]: OpenAIAgent does not work anymore with Azure",
        "user": {
            "login": "ret2libc",
            "id": 562321,
            "node_id": "MDQ6VXNlcjU2MjMyMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/562321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ret2libc",
            "html_url": "https://github.com/ret2libc",
            "followers_url": "https://api.github.com/users/ret2libc/followers",
            "following_url": "https://api.github.com/users/ret2libc/following{/other_user}",
            "gists_url": "https://api.github.com/users/ret2libc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ret2libc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ret2libc/subscriptions",
            "organizations_url": "https://api.github.com/users/ret2libc/orgs",
            "repos_url": "https://api.github.com/users/ret2libc/repos",
            "events_url": "https://api.github.com/users/ret2libc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ret2libc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-22T13:24:25Z",
        "updated_at": "2023-11-22T16:33:57Z",
        "closed_at": "2023-11-22T15:07:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nRecently OpenAI has changed the schema for calling functions, replacing `functions` with `tools`. llama-index seems to have adapted the OpenAIAgent to follow the new schema, but Azure OpenAI still follow the old schema and it should probably support it until there will be Azure OpenAI versions that have that.\n\n### Version\n\n0.9.5\n\n### Steps to Reproduce\n\n```python\r\nfrom llama_index.llms import AzureOpenAI, OpenAI\r\nfrom llama_index.agent import OpenAIAgent\r\nfrom llama_index.tools import BaseTool, FunctionTool\r\nimport sys\r\nimport os\r\n\r\ndef multiply(a: int, b: int) -> int:\r\n    \"\"\"Multiple two integers and returns the result integer\"\"\"\r\n    return a * b\r\n\r\ndef add(a: int, b: int) -> int:\r\n    \"\"\"Add two integers and returns the result integer\"\"\"\r\n    return a + b\r\n\r\nmultiply_tool = FunctionTool.from_defaults(fn=multiply)\r\nadd_tool = FunctionTool.from_defaults(fn=add)\r\n\r\nif os.getenv(\"OPENAI_API_TYPE\") == \"azure\":\r\n    llm = AzureOpenAI(deployment=\"gpt-4\", api_version=\"2023-07-01-preview\")\r\nelse:\r\n    llm = OpenAI()\r\n\r\nagent = OpenAIAgent.from_tools([multiply_tool, add_tool], llm=llm, verbose=True)\r\nprint(agent.chat(sys.argv[1]))\r\n```\r\n\r\nThis works:\r\n```\r\nOPENAI_API_KEY=<openai-api-key> OPENAI_LOG=debug python test.py '2+3'\r\n```\r\n\r\nThis does not work:\r\n```\r\nOPENAI_API_KEY=<azure-api-key> OPENAI_API_TYPE=azure OPENAI_LOG=debug AZURE_OPENAI_DEPLOYMENT=gpt-4 AZURE_OPENAI_ENDPOINT=<azure-openai-endpoint> python test.py '2+3'\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\n[2023-11-22 14:14:59 - httpx:78 - DEBUG] load_ssl_context verify=True cert=None trust_env=True http2=False\r\n[2023-11-22 14:14:59 - httpx:144 - DEBUG] load_verify_locations cafile='/venv/lib/python3.11/site-packages/certifi/cacert.pem'\r\n[2023-11-22 14:14:59 - httpx:78 - DEBUG] load_ssl_context verify=True cert=None trust_env=True http2=False\r\n[2023-11-22 14:14:59 - httpx:144 - DEBUG] load_verify_locations cafile='/venv/lib/python3.11/site-packages/certifi/cacert.pem'\r\nSTARTING TURN 1\r\n---------------\r\n\r\n[2023-11-22 14:14:59 - openai._base_client:427 - DEBUG] Request options: {'method': 'post', 'url': '/deployments/gpt-4/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': '2+3'}], 'model': 'gpt-4', 'stream': False, 'temperature': 0.1, 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'multiply', 'description': 'multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer', 'parameters': {'title': 'multiply', 'type': 'object', 'properties': {'a': {'title': 'A', 'type': 'integer'}, 'b': {'title': 'B', 'type': 'integer'}}, 'required': ['a', 'b']}}}, {'type': 'function', 'function': {'name': 'add', 'description': 'add(a: int, b: int) -> int\\nAdd two integers and returns the result integer', 'parameters': {'title': 'add', 'type': 'object', 'properties': {'a': {'title': 'A', 'type': 'integer'}, 'b': {'title': 'B', 'type': 'integer'}}, 'required': ['a', 'b']}}}]}, 'headers': {'api-key': '<api-key>'}}\r\n[2023-11-22 14:14:59 - httpx:1013 - INFO] HTTP Request: POST https://<endpoint>.azure.com//openai/deployments/gpt-4/chat/completions?api-version=2023-07-01-preview \"HTTP/1.1 400 model_error\"\r\n[2023-11-22 14:14:59 - openai._base_client:867 - DEBUG] HTTP Request: POST https://<endpoint>.azure.com//openai/deployments/gpt-4/chat/completions?api-version=2023-07-01-preview \"400 model_error\"\r\nTraceback (most recent call last):\r\n  File \"/test.py\", line 24, in <module>\r\n    print(agent.chat(sys.argv[1]))\r\n          ^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/llama_index/callbacks/utils.py\", line 39, in wrapper\r\n    return func(self, *args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/llama_index/agent/openai_agent.py\", line 438, in chat\r\n    chat_response = self._chat(\r\n                    ^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/llama_index/agent/openai_agent.py\", line 360, in _chat\r\n    agent_chat_response = self._get_agent_response(mode=mode, **llm_chat_kwargs)\r\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/llama_index/agent/openai_agent.py\", line 322, in _get_agent_response\r\n    chat_response: ChatResponse = self._llm.chat(**llm_chat_kwargs)\r\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/llama_index/llms/base.py\", line 187, in wrapped_llm_chat\r\n    f_return_val = f(_self, messages, **kwargs)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/llama_index/llms/openai.py\", line 191, in chat\r\n    return chat_fn(messages, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/llama_index/llms/openai.py\", line 244, in _chat\r\n    response = self._client.chat.completions.create(\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/openai/_utils/_utils.py\", line 299, in wrapper\r\n    return func(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 598, in create\r\n    return self._post(\r\n           ^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/openai/_base_client.py\", line 1063, in post\r\n    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\r\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/openai/_base_client.py\", line 842, in request\r\n    return self._request(\r\n           ^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/openai/_base_client.py\", line 885, in _request\r\n    raise self._make_status_error_from_response(err.response) from None\r\nopenai.BadRequestError: Error code: 400 - {'error': {'message': 'Unrecognized request arguments supplied: tool_choice, tools', 'type': 'invalid_request_error', 'param': None, 'code': None}}\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9084/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9084/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9083",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9083/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9083/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9083/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9083",
        "id": 2006167091,
        "node_id": "I_kwDOIWuq5853k64z",
        "number": 9083,
        "title": "[Bug]: .chat() for ContextChatEngine, CondenseQuestionChatEngine and CondensePlusContextChatEngine not working as expected when ServiceContext is an OpenAI model.",
        "user": {
            "login": "gich2009",
            "id": 83756959,
            "node_id": "MDQ6VXNlcjgzNzU2OTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/83756959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gich2009",
            "html_url": "https://github.com/gich2009",
            "followers_url": "https://api.github.com/users/gich2009/followers",
            "following_url": "https://api.github.com/users/gich2009/following{/other_user}",
            "gists_url": "https://api.github.com/users/gich2009/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gich2009/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gich2009/subscriptions",
            "organizations_url": "https://api.github.com/users/gich2009/orgs",
            "repos_url": "https://api.github.com/users/gich2009/repos",
            "events_url": "https://api.github.com/users/gich2009/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gich2009/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-22T11:46:03Z",
        "updated_at": "2023-11-22T12:54:19Z",
        "closed_at": "2023-11-22T12:48:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI have just realised that the for an ChatEngine with a ServiceContext that has an OpenAI inference model, the Retriever works well and the ResponseSynthesizer is grounded using the retrieved nodes when the stream_chat(). \r\n\r\nBut given the same conditions, when using the .chat() method, the ChatEngine often times out.\r\n\r\nThis is only true for a ServiceContext with OpenAI as the model. With any other llm such as llamaAPI or PaLM or a HuggingFaceModel, the .chat() method works as expected. \r\n\r\nCould someone kindly check this out? The specific gpt model I used was 'gpt-3.5-turbo-1106'.\r\nIs this just an OpenAI api issue?\r\n\r\n### Version\r\n\r\n0.9.5\r\n\r\n### Steps to Reproduce\r\n\r\nConstruct a ChatEngine from an Index, then use an OpenAI LLM in your ServiceContext, with any model, in particular, 'gpt-3.5-turbo' and use the .chat() method\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9083/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9083/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9082",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9082/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9082/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9082/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9082",
        "id": 2006142588,
        "node_id": "I_kwDOIWuq5853k058",
        "number": 9082,
        "title": "[Bug]: can't set extra request headers with the OpenAI client wrapper",
        "user": {
            "login": "gkossakowski",
            "id": 4217,
            "node_id": "MDQ6VXNlcjQyMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gkossakowski",
            "html_url": "https://github.com/gkossakowski",
            "followers_url": "https://api.github.com/users/gkossakowski/followers",
            "following_url": "https://api.github.com/users/gkossakowski/following{/other_user}",
            "gists_url": "https://api.github.com/users/gkossakowski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gkossakowski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gkossakowski/subscriptions",
            "organizations_url": "https://api.github.com/users/gkossakowski/orgs",
            "repos_url": "https://api.github.com/users/gkossakowski/repos",
            "events_url": "https://api.github.com/users/gkossakowski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gkossakowski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-22T11:30:28Z",
        "updated_at": "2023-11-29T16:03:47Z",
        "closed_at": "2023-11-22T16:12:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI'm trying to use Helicone with LlamaIndex:\r\n\r\n```python\r\nfrom llama_index.llms import OpenAI\r\nchatgpt = OpenAI(\r\n    model=\"gpt-3.5-turbo-1106\",\r\n    api_base=\"http://oai.hconeai.com/v1\",\r\n    default_headers = {\r\n            # Optionally set default headers or set per request (see below)\r\n            \"Helicone-Auth\": \"Bearer ....\"\r\n        },\r\n)\r\n```\r\n\r\nThis doesn't work cause default_headers is ignored. I believe the culprit is:\r\n\r\n\r\n```python\r\n        self._client, self._aclient = self._get_clients(**kwargs)\r\n\r\n    def _get_clients(self, **kwargs: Any) -> Tuple[SyncOpenAI, AsyncOpenAI]:\r\n        client = SyncOpenAI(**self._get_credential_kwargs())\r\n        aclient = AsyncOpenAI(**self._get_credential_kwargs())\r\n        return client, aclient\r\n```\r\n(from `openai.py`)\r\n\r\nNotice you drop kwargs passed to `_get_clients`\r\n\r\n### Version\r\n\r\n0.9.4\r\n\r\n### Steps to Reproduce\r\n\r\nSet up `chatgpt` as shown above and print:\r\n\r\n```\r\nprint(chatgpt._client.base_url)\r\nprint(chatgpt._client.default_headers)\r\n```\r\n\r\nBase url is set to helicone, however default headers do not include Helicone auth.\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9082/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9082/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9081",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9081/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9081/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9081/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9081",
        "id": 2006128748,
        "node_id": "PR_kwDOIWuq585gHpWj",
        "number": 9081,
        "title": "Add aws_region_name parameter to Bedrock LLM",
        "user": {
            "login": "neil-botelho",
            "id": 116251564,
            "node_id": "U_kgDOBu3brA",
            "avatar_url": "https://avatars.githubusercontent.com/u/116251564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neil-botelho",
            "html_url": "https://github.com/neil-botelho",
            "followers_url": "https://api.github.com/users/neil-botelho/followers",
            "following_url": "https://api.github.com/users/neil-botelho/following{/other_user}",
            "gists_url": "https://api.github.com/users/neil-botelho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neil-botelho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neil-botelho/subscriptions",
            "organizations_url": "https://api.github.com/users/neil-botelho/orgs",
            "repos_url": "https://api.github.com/users/neil-botelho/repos",
            "events_url": "https://api.github.com/users/neil-botelho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neil-botelho/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710935,
                "node_id": "LA_kwDOIWuq588AAAABc3-fFw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:M",
                "name": "size:M",
                "color": "ebb800",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-22T11:24:52Z",
        "updated_at": "2023-11-22T17:56:06Z",
        "closed_at": "2023-11-22T17:56:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9081",
            "html_url": "https://github.com/run-llama/llama_index/pull/9081",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9081.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9081.patch",
            "merged_at": "2023-11-22T17:56:06Z"
        },
        "body": "# Description\r\n\r\nIf aws cli is not configured, and you don't specify a region when you try to create a Bedrock client with boto3, it will throw a NoRegionError. This PR adds an optional parameter to the Bedrock LLM that allows the user to specify the region and throws an informative ValueError in case boto3 throws the NoRegionError\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] My changes generate no new warnings\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9081/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9081/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9080",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9080/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9080/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9080/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9080",
        "id": 2006039626,
        "node_id": "I_kwDOIWuq5853kbxK",
        "number": 9080,
        "title": "[Bug]: HuggingFaceEmbedding constructor does not set normalize argument",
        "user": {
            "login": "mihal09",
            "id": 40737933,
            "node_id": "MDQ6VXNlcjQwNzM3OTMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40737933?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mihal09",
            "html_url": "https://github.com/mihal09",
            "followers_url": "https://api.github.com/users/mihal09/followers",
            "following_url": "https://api.github.com/users/mihal09/following{/other_user}",
            "gists_url": "https://api.github.com/users/mihal09/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mihal09/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mihal09/subscriptions",
            "organizations_url": "https://api.github.com/users/mihal09/orgs",
            "repos_url": "https://api.github.com/users/mihal09/repos",
            "events_url": "https://api.github.com/users/mihal09/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mihal09/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-22T10:34:59Z",
        "updated_at": "2023-11-22T15:52:09Z",
        "closed_at": "2023-11-22T15:52:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nThe embeddings.HuggingFaceEmbedding class takes a normalize argument in its constructor. However, this argument is not being assigned to self.normalize, which is subsequently used elsewhere in the code. This oversight leads to unexpected behavior when the normalize parameter is specified, as it does not influence the embedding normalization as intended.\n\n### Version\n\n0.9.5\n\n### Steps to Reproduce\n\n1. Import the HuggingFaceEmbedding.\r\n2. Instantiate an object of HuggingFaceEmbedding with the normalize parameter set to True or False.\r\n3. Observe that the normalize setting does not affect the behavior of the object as expected.\r\n4. To actually turn off normalization, one has to manually set model.normalize to False\r\n\r\n```python\r\nimport numpy as np\r\nfrom llama_index.embeddings import HuggingFaceEmbedding\r\n\r\n\r\ntext = \"Hello world!\"\r\nmodel_name = \"intfloat/e5-small\"\r\n\r\nmodel = HuggingFaceEmbedding(model_name=model_name, normalize=True)\r\nemb = model.get_text_embedding(text)\r\nprint(np.linalg.norm(emb))  # prints 1.0000000243400735\r\n\r\nmodel = HuggingFaceEmbedding(model_name=model_name, normalize=False)\r\nemb = model.get_text_embedding(text)\r\nprint(np.linalg.norm(emb))  # prints 1.0000000243400735, embeddings are normalized even with normalize=False\r\n\r\nmodel.normalize = False  # manually set normalize=False\r\nemb = model.get_text_embedding(text)\r\nprint(np.linalg.norm(emb))  # prints 4.065653431959362\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9080/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9080/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9079",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9079/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9079/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9079/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9079",
        "id": 2006019207,
        "node_id": "I_kwDOIWuq5853kWyH",
        "number": 9079,
        "title": "[Bug]: HuggingFaceEmbedding constructor does not set normalize argument",
        "user": {
            "login": "mihal09",
            "id": 40737933,
            "node_id": "MDQ6VXNlcjQwNzM3OTMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/40737933?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mihal09",
            "html_url": "https://github.com/mihal09",
            "followers_url": "https://api.github.com/users/mihal09/followers",
            "following_url": "https://api.github.com/users/mihal09/following{/other_user}",
            "gists_url": "https://api.github.com/users/mihal09/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mihal09/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mihal09/subscriptions",
            "organizations_url": "https://api.github.com/users/mihal09/orgs",
            "repos_url": "https://api.github.com/users/mihal09/repos",
            "events_url": "https://api.github.com/users/mihal09/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mihal09/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-22T10:23:24Z",
        "updated_at": "2023-11-22T10:34:42Z",
        "closed_at": "2023-11-22T10:34:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nThe embeddings.HuggingFaceEmbedding class takes a normalize argument in its constructor. However, this argument is not being assigned to self.normalize, which is subsequently used elsewhere in the code. This oversight leads to unexpected behavior when the normalize parameter is specified, as it does not influence the embedding normalization as intended. \n\n### Version\n\n0.9.3\n\n### Steps to Reproduce\n\n1. Import the HuggingFaceEmbedding.\r\n2. Instantiate an object of HuggingFaceEmbedding with the normalize parameter set to True or False.\r\n3. Observe that the normalize setting does not affect the behavior of the object as expected.\r\n4. To actually turn off normalization, one has to manually set model.normalize to False\r\n\r\n```python\r\nimport numpy as np\r\nfrom llama_index.embeddings import HuggingFaceEmbedding\r\n\r\n\r\ntext = \"Hello world!\"\r\nmodel_name = \"intfloat/e5-small\"\r\n\r\nmodel = HuggingFaceEmbedding(model_name=model_name, normalize=True)\r\nemb = model.get_text_embedding(text)\r\nprint(np.linalg.norm(emb))  # prints 1.0000000243400735\r\n\r\nmodel = HuggingFaceEmbedding(model_name=model_name, normalize=False)\r\nemb = model.get_text_embedding(text)\r\nprint(np.linalg.norm(emb))  # prints 1.0000000243400735, embeddings are normalized even with normalize=False\r\n\r\nmodel.normalize = False  # manually set normalize=False\r\nemb = model.get_text_embedding(text)\r\nprint(np.linalg.norm(emb))  # prints 4.065653431959362\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9079/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9079/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9078",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9078/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9078/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9078/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9078",
        "id": 2005942485,
        "node_id": "I_kwDOIWuq5853kEDV",
        "number": 9078,
        "title": "[Bug]: Number of retrieved responses is 2 always even after setting similarity_top_k is set > 2 (example: 5)",
        "user": {
            "login": "Anindyadeep",
            "id": 58508471,
            "node_id": "MDQ6VXNlcjU4NTA4NDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/58508471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Anindyadeep",
            "html_url": "https://github.com/Anindyadeep",
            "followers_url": "https://api.github.com/users/Anindyadeep/followers",
            "following_url": "https://api.github.com/users/Anindyadeep/following{/other_user}",
            "gists_url": "https://api.github.com/users/Anindyadeep/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Anindyadeep/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Anindyadeep/subscriptions",
            "organizations_url": "https://api.github.com/users/Anindyadeep/orgs",
            "repos_url": "https://api.github.com/users/Anindyadeep/repos",
            "events_url": "https://api.github.com/users/Anindyadeep/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Anindyadeep/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-22T09:42:42Z",
        "updated_at": "2023-11-22T16:42:53Z",
        "closed_at": "2023-11-22T15:49:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI was trying to do retrieval using `HuggingFaceEmbedding` using llama-index. While setting up the `vector_index`, I set up the `similarity_top_k` to 5. But somehow, I am always getting only 2 retrieved responses. \n\n### Version\n\n0.9.4\n\n### Steps to Reproduce\n\n```python\r\n\r\nfrom llama_index.embeddings import HuggingFaceEmbedding\r\n\r\nall_documents = [Document(), ...]\r\n\r\nembed_model = HuggingFaceEmbedding(\r\n    model_name=\"sentence-transformers/all-MiniLM-L12-v2\"\r\n)\r\nservice_context = ServiceContext.from_defaults(\r\n    embed_model=embed_model,\r\n    llm=None,\r\n)\r\n\r\nvector_store = VectorStoreIndex.from_documents(\r\n    documents=all_documents,\r\n    service_context=service_context,\r\n    similarity_top_k=5\r\n)\r\n\r\nquery_engine = vector_store.as_query_engine(\r\n    service_context=service_context,\r\n    documents=all_documents\r\n)\r\n\r\n# Getting a sample complaint text and it's classified issue type from a data frame.\r\n\r\nsample_narrative = data.loc[300]['Consumer complaint narrative']\r\nsample_issue = data.loc[300]['Issue_type']\r\n\r\n# Fetching the retrieved response\r\n\r\nresponse = query_engine.query(\r\n    sample_narrative,\r\n)\r\n\r\nprint(len(response.source_nodes))\r\n```\r\n\r\n\r\nEven for double checking, I ran the same thing for 100 different text documents, but I got the same result of length of retrieved chunks are always 2. \n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9078/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9078/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9077",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9077/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9077/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9077/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9077",
        "id": 2005931963,
        "node_id": "PR_kwDOIWuq585gG-PU",
        "number": 9077,
        "title": "fix: Check is usage is None",
        "user": {
            "login": "mhoegger",
            "id": 32105585,
            "node_id": "MDQ6VXNlcjMyMTA1NTg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/32105585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mhoegger",
            "html_url": "https://github.com/mhoegger",
            "followers_url": "https://api.github.com/users/mhoegger/followers",
            "following_url": "https://api.github.com/users/mhoegger/following{/other_user}",
            "gists_url": "https://api.github.com/users/mhoegger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mhoegger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mhoegger/subscriptions",
            "organizations_url": "https://api.github.com/users/mhoegger/orgs",
            "repos_url": "https://api.github.com/users/mhoegger/repos",
            "events_url": "https://api.github.com/users/mhoegger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mhoegger/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-22T09:36:40Z",
        "updated_at": "2023-11-23T17:23:41Z",
        "closed_at": "2023-11-23T17:23:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9077",
            "html_url": "https://github.com/run-llama/llama_index/pull/9077",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9077.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9077.patch",
            "merged_at": "2023-11-23T17:23:41Z"
        },
        "body": "For streamed Azure responses from gpt-3.5-turbo when trying to count the tokens it did not work but also did not fall into the fallback where the token are estimated ourself. This happens when the \"usage\" field in the raw response is present but None. In comparison with gpt-4 the field is not present.\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9077/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9077/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9076",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9076/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9076/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9076/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9076",
        "id": 2005912859,
        "node_id": "I_kwDOIWuq5853j80b",
        "number": 9076,
        "title": "[Question]: Is there a way of loading a knowledge graph from SimpleGraphStore ?",
        "user": {
            "login": "vrda23",
            "id": 93191867,
            "node_id": "U_kgDOBY3-uw",
            "avatar_url": "https://avatars.githubusercontent.com/u/93191867?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vrda23",
            "html_url": "https://github.com/vrda23",
            "followers_url": "https://api.github.com/users/vrda23/followers",
            "following_url": "https://api.github.com/users/vrda23/following{/other_user}",
            "gists_url": "https://api.github.com/users/vrda23/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vrda23/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vrda23/subscriptions",
            "organizations_url": "https://api.github.com/users/vrda23/orgs",
            "repos_url": "https://api.github.com/users/vrda23/repos",
            "events_url": "https://api.github.com/users/vrda23/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vrda23/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-22T09:25:24Z",
        "updated_at": "2023-11-23T19:08:06Z",
        "closed_at": "2023-11-23T19:08:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIs there a way of loading a knowledge graph from SimpleGraphStore ? Cant find any examples in the documentation",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9076/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9076/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9075",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9075/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9075/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9075/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9075",
        "id": 2005845936,
        "node_id": "I_kwDOIWuq5853jsew",
        "number": 9075,
        "title": "[Bug]: When using 3rd party vector db and store_nodes_override=True, each node is inserted twice to index in index store",
        "user": {
            "login": "c64er4ever",
            "id": 125486774,
            "node_id": "U_kgDOB3rGtg",
            "avatar_url": "https://avatars.githubusercontent.com/u/125486774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/c64er4ever",
            "html_url": "https://github.com/c64er4ever",
            "followers_url": "https://api.github.com/users/c64er4ever/followers",
            "following_url": "https://api.github.com/users/c64er4ever/following{/other_user}",
            "gists_url": "https://api.github.com/users/c64er4ever/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/c64er4ever/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/c64er4ever/subscriptions",
            "organizations_url": "https://api.github.com/users/c64er4ever/orgs",
            "repos_url": "https://api.github.com/users/c64er4ever/repos",
            "events_url": "https://api.github.com/users/c64er4ever/events{/privacy}",
            "received_events_url": "https://api.github.com/users/c64er4ever/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-22T08:45:30Z",
        "updated_at": "2023-11-22T08:52:38Z",
        "closed_at": "2023-11-22T08:50:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nHi\r\nI am using Qdrant as vector db. Since I need to manage multiple indexes for the same collection, I am using store_nodes_override=True to store my indexes in the index store (it looks like when working with 3rd party vector db, there is no support for managing multiple indexes on a single collection).  I noticed that my indexed nodes are written twice to the index store. Here is a snippet of my code:\r\nclient = QdrantClient(\"localhost\", port=6333)\r\nvector_store = QdrantVectorStore(client=client, collection_name=my_name)\r\nstorage_context = StorageContext.from_defaults(vector_store=vector_store)\r\nindex = VectorStoreIndex([],storage_context=storage_context, store_nodes_override=True)\r\nindex.set_index_id(\"someindex\")\r\nindex.insert_nodes(some_nodes)\r\nindex.storage_context.persist(storage_context_path)\r\n\r\nI added 4 nodes. Here is how the index store looks:\r\n{\r\n    \"index_store/data\": {\r\n        \"fullindex\": {\r\n            \"__type__\": \"vector_store\",\r\n            \"__data__\": \"{\\\"index_id\\\": \\\"fullindex\\\", \\\"summary\\\": null, \\\"nodes_dict\\\": {\\\"ead9cf32-3358-4d11-8651-f31cecf70fac\\\": \\\"ead9cf32-3358-4d11-8651-f31cecf70fac\\\", \\\"ae4878a5-c0d8-4040-8bda-2415213f75aa\\\": \\\"ae4878a5-c0d8-4040-8bda-2415213f75aa\\\", \\\"345c61db-6886-4a0d-9a85-5f2c563a8ce1\\\": \\\"345c61db-6886-4a0d-9a85-5f2c563a8ce1\\\", \\\"9e7ef79b-1993-4e6f-b239-358e8dd8abe1\\\": \\\"9e7ef79b-1993-4e6f-b239-358e8dd8abe1\\\"}, \\\"doc_id_dict\\\": {}, \\\"embeddings_dict\\\": {}}\"\r\n        }\r\n    }\r\n}\r\n\r\nAs you can see, each node is stored twice.\r\nThanks!\r\nGuy\n\n### Version\n\n0.9.4\n\n### Steps to Reproduce\n\n1. Use Qdrant as vector db\r\n2. Use flag store_nodes_override\r\n3. Index some nodes\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9075/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9075/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9074",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9074/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9074/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9074/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9074",
        "id": 2005822258,
        "node_id": "I_kwDOIWuq5853jmsy",
        "number": 9074,
        "title": "[Question]: HuggingFaceEmbedding and SentenceTransformer different results with the same model",
        "user": {
            "login": "mim201820",
            "id": 65327419,
            "node_id": "MDQ6VXNlcjY1MzI3NDE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/65327419?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mim201820",
            "html_url": "https://github.com/mim201820",
            "followers_url": "https://api.github.com/users/mim201820/followers",
            "following_url": "https://api.github.com/users/mim201820/following{/other_user}",
            "gists_url": "https://api.github.com/users/mim201820/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mim201820/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mim201820/subscriptions",
            "organizations_url": "https://api.github.com/users/mim201820/orgs",
            "repos_url": "https://api.github.com/users/mim201820/repos",
            "events_url": "https://api.github.com/users/mim201820/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mim201820/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-22T08:30:46Z",
        "updated_at": "2023-11-22T15:50:27Z",
        "closed_at": "2023-11-22T15:50:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nCode that I'm using:\r\n```\r\nfrom sentence_transformers import SentenceTransformer\r\nfrom llama_index.embeddings import HuggingFaceEmbedding\r\n\r\nembed_model = HuggingFaceEmbedding(\r\n    model_name=\"sentence-transformers/distiluse-base-multilingual-cased-v1\",\r\n)\r\nmodel = SentenceTransformer('sentence-transformers/distiluse-base-multilingual-cased-v1')\r\n\r\nembedding_1 = embed_model.get_text_embedding(\"Test\")\r\nembedding_2 = model.encode(\"Test\")\r\n```\r\n\r\nwhen I check the length of each output. the HuggingFaceEmbedding returns 768 and SentenceTransfirmer returns 512\r\n\r\nwhy do we have this difference, for the same model and the same query?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9074/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9074/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9073",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9073/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9073/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9073/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9073",
        "id": 2005651991,
        "node_id": "PR_kwDOIWuq585gGBTf",
        "number": 9073,
        "title": "Removing context from metadata when None",
        "user": {
            "login": "amartinson193",
            "id": 32916663,
            "node_id": "MDQ6VXNlcjMyOTE2NjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/32916663?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amartinson193",
            "html_url": "https://github.com/amartinson193",
            "followers_url": "https://api.github.com/users/amartinson193/followers",
            "following_url": "https://api.github.com/users/amartinson193/following{/other_user}",
            "gists_url": "https://api.github.com/users/amartinson193/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amartinson193/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amartinson193/subscriptions",
            "organizations_url": "https://api.github.com/users/amartinson193/orgs",
            "repos_url": "https://api.github.com/users/amartinson193/repos",
            "events_url": "https://api.github.com/users/amartinson193/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amartinson193/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710935,
                "node_id": "LA_kwDOIWuq588AAAABc3-fFw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:M",
                "name": "size:M",
                "color": "ebb800",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-22T06:19:54Z",
        "updated_at": "2023-11-23T17:18:30Z",
        "closed_at": "2023-11-23T17:18:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9073",
            "html_url": "https://github.com/run-llama/llama_index/pull/9073",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9073.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9073.patch",
            "merged_at": "2023-11-23T17:18:26Z"
        },
        "body": "# Description\r\n\r\nPineconeVectorStore doesn't like None values in metadata and so by removing the context that should resolve errors when upserting.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9073/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9073/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9072",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9072/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9072/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9072/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9072",
        "id": 2005606580,
        "node_id": "PR_kwDOIWuq585gF3le",
        "number": 9072,
        "title": "add llama packs example notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710946,
                "node_id": "LA_kwDOIWuq588AAAABc3-fIg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:L",
                "name": "size:L",
                "color": "eb9500",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-22T05:33:00Z",
        "updated_at": "2023-11-22T16:21:54Z",
        "closed_at": "2023-11-22T16:21:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9072",
            "html_url": "https://github.com/run-llama/llama_index/pull/9072",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9072.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9072.patch",
            "merged_at": "2023-11-22T16:21:53Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9072/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9072/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9071",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9071/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9071/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9071/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9071",
        "id": 2005562006,
        "node_id": "PR_kwDOIWuq585gFt-g",
        "number": 9071,
        "title": "Fix : Spelling mistake fixed | Anand Vishwakarma",
        "user": {
            "login": "AnandJVishwakarma",
            "id": 55125207,
            "node_id": "MDQ6VXNlcjU1MTI1MjA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/55125207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AnandJVishwakarma",
            "html_url": "https://github.com/AnandJVishwakarma",
            "followers_url": "https://api.github.com/users/AnandJVishwakarma/followers",
            "following_url": "https://api.github.com/users/AnandJVishwakarma/following{/other_user}",
            "gists_url": "https://api.github.com/users/AnandJVishwakarma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AnandJVishwakarma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AnandJVishwakarma/subscriptions",
            "organizations_url": "https://api.github.com/users/AnandJVishwakarma/orgs",
            "repos_url": "https://api.github.com/users/AnandJVishwakarma/repos",
            "events_url": "https://api.github.com/users/AnandJVishwakarma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AnandJVishwakarma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-22T04:39:53Z",
        "updated_at": "2023-11-22T07:51:43Z",
        "closed_at": "2023-11-22T07:51:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9071",
            "html_url": "https://github.com/run-llama/llama_index/pull/9071",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9071.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9071.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nThere was a spelling mistake in the documentation part\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have made corresponding changes to the documentation\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9071/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9071/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9070",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9070/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9070/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9070/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9070",
        "id": 2005552186,
        "node_id": "I_kwDOIWuq5853ikw6",
        "number": 9070,
        "title": "[Bug]: exception events are inconsistently placed in the callback trace map",
        "user": {
            "login": "axiomofjoy",
            "id": 15664869,
            "node_id": "MDQ6VXNlcjE1NjY0ODY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15664869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axiomofjoy",
            "html_url": "https://github.com/axiomofjoy",
            "followers_url": "https://api.github.com/users/axiomofjoy/followers",
            "following_url": "https://api.github.com/users/axiomofjoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/axiomofjoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axiomofjoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axiomofjoy/subscriptions",
            "organizations_url": "https://api.github.com/users/axiomofjoy/orgs",
            "repos_url": "https://api.github.com/users/axiomofjoy/repos",
            "events_url": "https://api.github.com/users/axiomofjoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axiomofjoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-11-22T04:27:52Z",
        "updated_at": "2023-11-28T20:02:14Z",
        "closed_at": "2023-11-24T19:10:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nLlamaIndex's callback system passes exception events that are distinct from the events from which the error arose. Callback implementers must infer from which callback event the exception arose from the `trace_map` passed to `end_trace`. However, the position of the exception event in the trace map relative to the event from which the exception arose is not consistent. Most of the time, the exception event is a sibling of the event from which it arose, but when the exception arises from a node post-processor like the Cohere re-ranker, it is a child. This makes it difficult for callback implementations to consistently attribute the exception to the correct event.\r\n\r\nIdeally, exception information would always be attributable to an easily identifiable event in the trace map. There are several options:\r\n\r\n- Exception events are siblings of the event causing the error (how it currently works most of the time)\r\n- Exception events are children of the event causing the error (how it works for node post-processors)\r\n- Exceptions are not distinct callback events. Instead, exception information is passed to the `on_event_end` hook of the event in which the exception occurred (this might be the easiest to handle from the perspective of the callback implementation)\r\n\r\n### Version\r\n\r\nlatest `main` (a31d3c89)\r\n\r\n### Steps to Reproduce\r\n\r\n[This script](https://github.com/Arize-ai/phoenix/compare/main...llama-index-exception-event-repro#diff-b0d832da586f945968cc95d49ac013714c461c96abff7e547f4d29d3bab6e0ec) shows how exception events can be siblings of the events causing the exception. It mocks a error from the OpenAI chat completions API and produces this output:\r\n\r\n```\r\n\u2514\u2500\u2500 query\r\n    \u251c\u2500\u2500 retrieve\r\n    \u2502   \u2514\u2500\u2500 embedding\r\n    \u2514\u2500\u2500 synthesize\r\n        \u251c\u2500\u2500 templating\r\n        \u251c\u2500\u2500 llm\r\n        \u251c\u2500\u2500 exception\r\n        \u251c\u2500\u2500 exception\r\n        \u2514\u2500\u2500 exception\r\n```\r\n\r\n[This script](https://github.com/Arize-ai/phoenix/compare/main...llama-index-exception-event-repro#diff-efc27da6c2218b1476d363b1355077a3a52d121e87a7d3f38c3883486cffeaea) shows how exception events can be children of the event causing the exception. It mocks a `CohereAPIError` on the reranker client and produces the following output:\r\n\r\n```\r\n\u2514\u2500\u2500 query\r\n    \u251c\u2500\u2500 retrieve\r\n    \u2502   \u2514\u2500\u2500 embedding\r\n    \u2514\u2500\u2500 reranking\r\n        \u251c\u2500\u2500 exception\r\n        \u251c\u2500\u2500 exception\r\n        \u2514\u2500\u2500 exception\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9070/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9070/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9069",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9069/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9069/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9069/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9069",
        "id": 2005551974,
        "node_id": "I_kwDOIWuq5853iktm",
        "number": 9069,
        "title": "[Question]: KnowledgeGraphIndex repeat same triplet infinitely",
        "user": {
            "login": "JinSeoung-Oh",
            "id": 78573459,
            "node_id": "MDQ6VXNlcjc4NTczNDU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/78573459?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JinSeoung-Oh",
            "html_url": "https://github.com/JinSeoung-Oh",
            "followers_url": "https://api.github.com/users/JinSeoung-Oh/followers",
            "following_url": "https://api.github.com/users/JinSeoung-Oh/following{/other_user}",
            "gists_url": "https://api.github.com/users/JinSeoung-Oh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JinSeoung-Oh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JinSeoung-Oh/subscriptions",
            "organizations_url": "https://api.github.com/users/JinSeoung-Oh/orgs",
            "repos_url": "https://api.github.com/users/JinSeoung-Oh/repos",
            "events_url": "https://api.github.com/users/JinSeoung-Oh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JinSeoung-Oh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-11-22T04:27:40Z",
        "updated_at": "2023-11-22T08:17:44Z",
        "closed_at": "2023-11-22T08:15:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi, I'm building GraphRAG with korean.\r\nBut today, I faced with some problem..\r\n\r\nI loaded korean LLM from hugging face using HuggingFaceLM class in Llama-index\r\nEverything is okay, but suddenly, korean LLM make same triplt again and again..\r\n\r\nAnd.. It make some triplet \bwhich cannot drive from given dataset, again and again.\r\n\r\nMy korean LLM show not good performance, so maybe it can be reason of first problem.\r\nBut I cannot know real reason.\r\n\r\nBut seconde problem, I cannot understand. How it make triplet which cannot drive from given dataset?\r\nIn my dataset, \"In the history of artificial intelligence, AlexNet replaced existing methodologies.\" \r\nThat's it\r\nBut it make (AlexNet, based on, deep learning) / (AlexNet, based on deep neural networks)...\r\nOf course, it is common knowledge, but how can generated it?\r\nI cannot find out any problem from Llama-index codebase...\r\n\r\nOf course, retriver also show pool result.\r\nI built retriver using gpt-3.5, but result is not good..\r\nThere is a tendency to omit important searched bridges.\r\n\r\nI analyze Llama-index code and my code to solve these problems, but couldn't find the problem.\r\nI need some clues to solve this problem.. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9069/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9069/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9068",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9068/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9068/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9068/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9068",
        "id": 2005405513,
        "node_id": "PR_kwDOIWuq585gFMdk",
        "number": 9068,
        "title": "pack docs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710919,
                "node_id": "LA_kwDOIWuq588AAAABc3-fBw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:S",
                "name": "size:S",
                "color": "77b800",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-22T01:33:04Z",
        "updated_at": "2023-11-22T16:13:24Z",
        "closed_at": "2023-11-22T16:13:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9068",
            "html_url": "https://github.com/run-llama/llama_index/pull/9068",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9068.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9068.patch",
            "merged_at": "2023-11-22T16:13:22Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9068/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9068/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9067",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9067/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9067/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9067/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9067",
        "id": 2005375924,
        "node_id": "PR_kwDOIWuq585gFGOA",
        "number": 9067,
        "title": "Update VoyageEmbedding",
        "user": {
            "login": "thomas0809",
            "id": 11373553,
            "node_id": "MDQ6VXNlcjExMzczNTUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11373553?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thomas0809",
            "html_url": "https://github.com/thomas0809",
            "followers_url": "https://api.github.com/users/thomas0809/followers",
            "following_url": "https://api.github.com/users/thomas0809/following{/other_user}",
            "gists_url": "https://api.github.com/users/thomas0809/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thomas0809/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thomas0809/subscriptions",
            "organizations_url": "https://api.github.com/users/thomas0809/orgs",
            "repos_url": "https://api.github.com/users/thomas0809/repos",
            "events_url": "https://api.github.com/users/thomas0809/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thomas0809/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710919,
                "node_id": "LA_kwDOIWuq588AAAABc3-fBw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:S",
                "name": "size:S",
                "color": "77b800",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-22T00:52:32Z",
        "updated_at": "2023-11-23T18:18:25Z",
        "closed_at": "2023-11-23T18:18:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9067",
            "html_url": "https://github.com/run-llama/llama_index/pull/9067",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9067.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9067.patch",
            "merged_at": "2023-11-23T18:18:25Z"
        },
        "body": "# Description\r\n\r\n- Update the implementation of voyage_api_key\r\n- Add get_general_text_embedding to support input_type\r\n\r\n## Type of Change\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9067/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9067/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9066",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9066/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9066/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9066/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9066",
        "id": 2005368008,
        "node_id": "I_kwDOIWuq5853h3zI",
        "number": 9066,
        "title": "[Question]: Will using Nebula Graph Index be slow when loading from persistent storage?",
        "user": {
            "login": "keenhon",
            "id": 13294169,
            "node_id": "MDQ6VXNlcjEzMjk0MTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13294169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/keenhon",
            "html_url": "https://github.com/keenhon",
            "followers_url": "https://api.github.com/users/keenhon/followers",
            "following_url": "https://api.github.com/users/keenhon/following{/other_user}",
            "gists_url": "https://api.github.com/users/keenhon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/keenhon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/keenhon/subscriptions",
            "organizations_url": "https://api.github.com/users/keenhon/orgs",
            "repos_url": "https://api.github.com/users/keenhon/repos",
            "events_url": "https://api.github.com/users/keenhon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/keenhon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-22T00:43:09Z",
        "updated_at": "2023-11-22T08:06:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI have created my knowledge graph using the guide here https://gpt-index.readthedocs.io/en/stable/examples/index_structs/knowledge_graph/KnowledgeGraphDemo.html\r\n\r\nWhen I persisted it to storage, it saved as 4 files\r\ndefault__vector_store.json ~1KB\r\ndocstore.json ~4.4MB\r\ngraph_store.json ~1MB\r\nindex_store.json ~570MB\r\n\r\nMy issue is when I load the index from persistent storage. It takes a long time and this will not work for my use case.\r\n\r\nI was wondering if I try the Knowledge Graph Query Engine, would it be the same issue?\r\n\r\nThanks in advance.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9066/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9066/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9065",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9065/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9065/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9065/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9065",
        "id": 2005342465,
        "node_id": "PR_kwDOIWuq585gE_G9",
        "number": 9065,
        "title": "Multiple fixes to make various API reference docs visible to Algolia",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710935,
                "node_id": "LA_kwDOIWuq588AAAABc3-fFw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:M",
                "name": "size:M",
                "color": "ebb800",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-22T00:09:32Z",
        "updated_at": "2023-11-22T17:30:25Z",
        "closed_at": "2023-11-22T17:30:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9065",
            "html_url": "https://github.com/run-llama/llama_index/pull/9065",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9065.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9065.patch",
            "merged_at": "2023-11-22T17:30:24Z"
        },
        "body": "Algolia has been skipping these 4 pages because they were too big to parse:\r\n\r\n![screenshot_2023-11-21_at_2 59 09_pm](https://github.com/run-llama/llama_index/assets/185893/7da775f9-d680-48a8-a304-854a9d229312)\r\n\r\nThis PR adds a new sphinx extension that can render a single very large class as multiple pages.\r\n\r\nAs a side-quest it also adds an option to sphinx build that makes it execute in parallel, leading to much faster builds.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9065/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9065/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9064",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9064/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9064/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9064/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9064",
        "id": 2005166259,
        "node_id": "PR_kwDOIWuq585gEYy1",
        "number": 9064,
        "title": "Nerdai/feature 8728 objectindex persist",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710949,
                "node_id": "LA_kwDOIWuq588AAAABc3-fJQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XL",
                "name": "size:XL",
                "color": "ff823f",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-21T21:28:01Z",
        "updated_at": "2023-11-24T21:40:31Z",
        "closed_at": "2023-11-24T21:37:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9064",
            "html_url": "https://github.com/run-llama/llama_index/pull/9064",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9064.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9064.patch",
            "merged_at": "2023-11-24T21:37:26Z"
        },
        "body": "# Description\r\n\r\nSerializing `ObjectIndex` requires handling both the saving and loading of the `index` as well as the `object_node_mapping`. The former is easy and can be done via `storage_context` persist calls. The latter is a bit tricky because, not all objects are serializable.\r\n\r\nThis PR is the start of this effort, where only `SimpleObjectNodeMapping` has implementations for `persist` and `from_persist_dir`. It attempts to pickle and will raise error if the object type can't be pickled. When being called from `ObjectIndex` however, the error is handled by throwing a \"Warning\" to the user to let them know that they will have to rebuild the same `object_node_mapping` and supply it to `ObjectIndex.from_persist_dir()` call.\r\n\r\n\r\nCloses #8728  (though should probably pick up this work in a future PR)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9064/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9064/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9063",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9063/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9063/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9063/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9063",
        "id": 2005115416,
        "node_id": "PR_kwDOIWuq585gENlK",
        "number": 9063,
        "title": "Adding all orphaned content to sitemap for Algolia",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710935,
                "node_id": "LA_kwDOIWuq588AAAABc3-fFw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:M",
                "name": "size:M",
                "color": "ebb800",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-21T20:54:43Z",
        "updated_at": "2023-11-21T21:02:34Z",
        "closed_at": "2023-11-21T21:02:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9063",
            "html_url": "https://github.com/run-llama/llama_index/pull/9063",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9063.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9063.patch",
            "merged_at": "2023-11-21T21:02:33Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9063/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9063/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9062",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9062/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9062/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9062/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9062",
        "id": 2005104454,
        "node_id": "I_kwDOIWuq5853g3dG",
        "number": 9062,
        "title": "[Bug]: Using AzureOpenAI with OpenAIAgent",
        "user": {
            "login": "fchenGT",
            "id": 106608909,
            "node_id": "U_kgDOBlq5DQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/106608909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fchenGT",
            "html_url": "https://github.com/fchenGT",
            "followers_url": "https://api.github.com/users/fchenGT/followers",
            "following_url": "https://api.github.com/users/fchenGT/following{/other_user}",
            "gists_url": "https://api.github.com/users/fchenGT/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fchenGT/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fchenGT/subscriptions",
            "organizations_url": "https://api.github.com/users/fchenGT/orgs",
            "repos_url": "https://api.github.com/users/fchenGT/repos",
            "events_url": "https://api.github.com/users/fchenGT/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fchenGT/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-11-21T20:48:37Z",
        "updated_at": "2023-11-22T15:00:30Z",
        "closed_at": "2023-11-22T01:42:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\n[Previous issue ](https://github.com/run-llama/llama_index/issues/9037) was closed. so I repost my comment as a new issue:\r\n\r\nI tried the following model in Azure -> [\"gpt-35-turbo\", \"gpt-35-turbo-16k\", \"gpt-4\", \"gpt-4-32k\"]\r\nwith api_version = \"2023-07-01-preview\"\r\n\r\nAll of them failed due to same reason:\r\nBadRequestError: Error code: 400 - {'error': {'message': 'Unrecognized request arguments supplied: tool_choice, tools', 'type': 'invalid_request_error', 'param': None, 'code': None}}\r\n\r\n\r\nIf you look into openai python sdk\r\nopenai > resources > chat > completions > Completions > create\r\nthe **function_call** and **functions** are actually deprecated in favor of **tool_choice** and **tools**\r\n\r\n\r\nHowever, if you use AzureOpenAI,\r\n```\r\nfunctions = [\r\n    {\r\n        \"name\": \"get_current_weather\",\r\n        \"description\": \"Get the current weather\",\r\n        \"parameters\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"location\": {\r\n                    \"type\": \"string\",\r\n                    \"description\": \"The city and state, e.g. San Francisco, CA\",\r\n                },\r\n                \"format\": {\r\n                    \"type\": \"string\",\r\n                    \"enum\": [\"celsius\", \"fahrenheit\"],\r\n                    \"description\": \"The temperature unit to use. Infer this from the users location.\",\r\n                },\r\n            },\r\n            \"required\": [\"location\"],\r\n        },\r\n    }\r\n]\r\n\r\ntools = [\r\n    {\r\n        \"type\": \"function\",\r\n        \"function\": {\r\n            \"name\": \"get_current_weather\",\r\n            \"description\": \"Get the current weather\",\r\n            \"parameters\": {\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                    \"location\": {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"The city and state, e.g. San Francisco, CA\",\r\n                    },\r\n                    \"format\": {\r\n                        \"type\": \"string\",\r\n                        \"enum\": [\"celsius\", \"fahrenheit\"],\r\n                        \"description\": \"The temperature unit to use. Infer this from the users location.\",\r\n                    },\r\n                },\r\n                \"required\": [\"location\"],\r\n            },\r\n        },\r\n    }\r\n]\r\n```\r\n\r\nThis works\r\n```\r\nmessages = [\r\n    {\"role\": \"system\", \"content\": \"Don't make assumptions about what values to plug into functions. Ask for clarification if a user request is ambiguous.\"},\r\n    {\"role\": \"user\", \"content\": \"What's the weather like today in Seattle?\"}\r\n]\r\n\r\nchat_completion = client.chat.completions.create(\r\n    model=deployment,\r\n    messages=messages,\r\n    functions=functions,\r\n)\r\nprint(chat_completion)\r\n```\r\n\r\nThis doesn't:\r\n```\r\nmessages = [\r\n    {\r\n        \"role\": \"system\",\r\n        \"content\": \"Don't make assumptions about what values to plug into functions. Ask for clarification if a user request is ambiguous.\",\r\n    },\r\n    {\"role\": \"user\", \"content\": \"What's the weather like today in Seattle?\"},\r\n]\r\n\r\nchat_completion = client.chat.completions.create(\r\n    model=deployment,\r\n    messages=messages,\r\n    tools=tools,\r\n)\r\nprint(chat_completion)\r\n```\r\nSo it seems like the Azure models have not yet accepted tools and tool_choice params.\r\nhttps://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/function-calling?tabs=python-new\r\n\r\n\r\n\r\n### Version\r\n\r\n0.9.5\r\n\r\n### Steps to Reproduce\r\n```\r\nfrom llama_index.tools import FunctionTool\r\nfrom llama_index.llms import AzureOpenAI\r\nfrom llama_index.embeddings import AzureOpenAIEmbedding\r\n\r\napi_key = \"<your-api-key>\"\r\nazure_endpoint = \"https://<your-endpoint>.openai.azure.com/\"\r\napi_version = \"2023-07-01-preview\"\r\n\r\nllm = AzureOpenAI(\r\n    model=\"gpt-4\",\r\n    deployment_name=\"<your-deployment>\",\r\n    api_key=api_key,\r\n    azure_endpoint=azure_endpoint,\r\n    api_version=api_version,\r\n)\r\n\r\ndef multiply(a: int, b: int) -> int:\r\n    \"\"\"Multiply two integers and returns the result integer\"\"\"\r\n    return a * b\r\n\r\n\r\ndef add(a: int, b: int) -> int:\r\n    \"\"\"Add two integers and returns the result integer\"\"\"\r\n    return a + b\r\n\r\n\r\nmultiply_tool = FunctionTool.from_defaults(fn=multiply, name=\"multiply\")\r\n\r\nadd_tool = FunctionTool.from_defaults(fn=add, name=\"add\")\r\n\r\nall_tools = [multiply_tool, add_tool]\r\n\r\nagent = OpenAIAgent.from_tools(all_tools, llm=llm, verbose=True)\r\n\r\nagent.chat(\"What is 2 times 3?\")\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n---------------------------------------------------------------------------\r\nBadRequestError                           Traceback (most recent call last)\r\nd:\\Git\\test_llama_index\\notebook.ipynb Cell 18 line 1\r\n----> 1 agent.chat(\"What is 2 times 3?\")\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\callbacks\\utils.py:39, in trace_method.<locals>.decorator.<locals>.wrapper(self, *args, **kwargs)\r\n     37 callback_manager = cast(CallbackManager, callback_manager)\r\n     38 with callback_manager.as_trace(trace_id):\r\n---> 39     return func(self, *args, **kwargs)\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\agent\\openai_agent.py:408, in BaseOpenAIAgent.chat(self, message, chat_history, tool_choice)\r\n    397 @trace_method(\"chat\")\r\n    398 def chat(\r\n    399     self,\r\n   (...)\r\n    402     tool_choice: Union[str, dict] = \"auto\",\r\n    403 ) -> AgentChatResponse:\r\n    404     with self.callback_manager.event(\r\n    405         CBEventType.AGENT_STEP,\r\n    406         payload={EventPayload.MESSAGES: [message]},\r\n    407     ) as e:\r\n--> 408         chat_response = self._chat(\r\n    409             message, chat_history, tool_choice, mode=ChatResponseMode.WAIT\r\n    410         )\r\n    411         assert isinstance(chat_response, AgentChatResponse)\r\n    412         e.on_end(payload={EventPayload.RESPONSE: chat_response})\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\agent\\openai_agent.py:330, in BaseOpenAIAgent._chat(self, message, chat_history, tool_choice, mode)\r\n    326     print(f\"STARTING TURN {ix}\\n---------------\\n\")\r\n    327 llm_chat_kwargs = self._get_llm_chat_kwargs(\r\n    328     openai_tools, current_tool_choice\r\n    329 )\r\n--> 330 agent_chat_response = self._get_agent_response(mode=mode, **llm_chat_kwargs)\r\n    331 if not self._should_continue(self.latest_tool_calls, n_function_calls):\r\n    332     logger.debug(\"Break: should continue False\")\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\agent\\openai_agent.py:292, in BaseOpenAIAgent._get_agent_response(self, mode, **llm_chat_kwargs)\r\n    288 def _get_agent_response(\r\n    289     self, mode: ChatResponseMode, **llm_chat_kwargs: Any\r\n    290 ) -> AGENT_CHAT_RESPONSE_TYPE:\r\n    291     if mode == ChatResponseMode.WAIT:\r\n--> 292         chat_response: ChatResponse = self._llm.chat(**llm_chat_kwargs)\r\n    293         return self._process_message(chat_response)\r\n    294     elif mode == ChatResponseMode.STREAM:\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\llms\\base.py:187, in llm_chat_callback.<locals>.wrap.<locals>.wrapped_llm_chat(_self, messages, **kwargs)\r\n    178 with wrapper_logic(_self) as callback_manager:\r\n    179     event_id = callback_manager.on_event_start(\r\n    180         CBEventType.LLM,\r\n    181         payload={\r\n   (...)\r\n    185         },\r\n    186     )\r\n--> 187     f_return_val = f(_self, messages, **kwargs)\r\n    189     if isinstance(f_return_val, Generator):\r\n    190         # intercept the generator and add a callback to the end\r\n    191         def wrapped_gen() -> ChatResponseGen:\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\llms\\openai.py:185, in OpenAI.chat(self, messages, **kwargs)\r\n    183 else:\r\n    184     chat_fn = completion_to_chat_decorator(self._complete)\r\n--> 185 return chat_fn(messages, **kwargs)\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\llms\\openai.py:238, in OpenAI._chat(self, messages, **kwargs)\r\n    236 def _chat(self, messages: Sequence[ChatMessage], **kwargs: Any) -> ChatResponse:\r\n    237     message_dicts = to_openai_message_dicts(messages)\r\n--> 238     response = self._client.chat.completions.create(\r\n    239         messages=message_dicts,\r\n    240         stream=False,\r\n    241         **self._get_model_kwargs(**kwargs),\r\n    242     )\r\n    243     openai_message = response.choices[0].message\r\n    244     message = from_openai_message(openai_message)\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\openai\\_utils\\_utils.py:299, in required_args.<locals>.inner.<locals>.wrapper(*args, **kwargs)\r\n    297             msg = f\"Missing required argument: {quote(missing[0])}\"\r\n    298     raise TypeError(msg)\r\n--> 299 return func(*args, **kwargs)\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\openai\\resources\\chat\\completions.py:598, in Completions.create(self, messages, model, frequency_penalty, function_call, functions, logit_bias, max_tokens, n, presence_penalty, response_format, seed, stop, stream, temperature, tool_choice, tools, top_p, user, extra_headers, extra_query, extra_body, timeout)\r\n    551 @required_args([\"messages\", \"model\"], [\"messages\", \"model\", \"stream\"])\r\n    552 def create(\r\n    553     self,\r\n   (...)\r\n    596     timeout: float | httpx.Timeout | None | NotGiven = NOT_GIVEN,\r\n    597 ) -> ChatCompletion | Stream[ChatCompletionChunk]:\r\n--> 598     return self._post(\r\n    599         \"/chat/completions\",\r\n    600         body=maybe_transform(\r\n    601             {\r\n    602                 \"messages\": messages,\r\n    603                 \"model\": model,\r\n    604                 \"frequency_penalty\": frequency_penalty,\r\n    605                 \"function_call\": function_call,\r\n    606                 \"functions\": functions,\r\n    607                 \"logit_bias\": logit_bias,\r\n    608                 \"max_tokens\": max_tokens,\r\n    609                 \"n\": n,\r\n    610                 \"presence_penalty\": presence_penalty,\r\n    611                 \"response_format\": response_format,\r\n    612                 \"seed\": seed,\r\n    613                 \"stop\": stop,\r\n    614                 \"stream\": stream,\r\n    615                 \"temperature\": temperature,\r\n    616                 \"tool_choice\": tool_choice,\r\n    617                 \"tools\": tools,\r\n    618                 \"top_p\": top_p,\r\n    619                 \"user\": user,\r\n    620             },\r\n    621             completion_create_params.CompletionCreateParams,\r\n    622         ),\r\n    623         options=make_request_options(\r\n    624             extra_headers=extra_headers, extra_query=extra_query, extra_body=extra_body, timeout=timeout\r\n    625         ),\r\n    626         cast_to=ChatCompletion,\r\n    627         stream=stream or False,\r\n    628         stream_cls=Stream[ChatCompletionChunk],\r\n    629     )\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\openai\\_base_client.py:1055, in SyncAPIClient.post(self, path, cast_to, body, options, files, stream, stream_cls)\r\n   1041 def post(\r\n   1042     self,\r\n   1043     path: str,\r\n   (...)\r\n   1050     stream_cls: type[_StreamT] | None = None,\r\n   1051 ) -> ResponseT | _StreamT:\r\n   1052     opts = FinalRequestOptions.construct(\r\n   1053         method=\"post\", url=path, json_data=body, files=to_httpx_files(files), **options\r\n   1054     )\r\n-> 1055     return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\openai\\_base_client.py:834, in SyncAPIClient.request(self, cast_to, options, remaining_retries, stream, stream_cls)\r\n    825 def request(\r\n    826     self,\r\n    827     cast_to: Type[ResponseT],\r\n   (...)\r\n    832     stream_cls: type[_StreamT] | None = None,\r\n    833 ) -> ResponseT | _StreamT:\r\n--> 834     return self._request(\r\n    835         cast_to=cast_to,\r\n    836         options=options,\r\n    837         stream=stream,\r\n    838         stream_cls=stream_cls,\r\n    839         remaining_retries=remaining_retries,\r\n    840     )\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\openai\\_base_client.py:877, in SyncAPIClient._request(self, cast_to, options, remaining_retries, stream, stream_cls)\r\n    874     # If the response is streamed then we need to explicitly read the response\r\n    875     # to completion before attempting to access the response text.\r\n    876     err.response.read()\r\n--> 877     raise self._make_status_error_from_response(err.response) from None\r\n    878 except httpx.TimeoutException as err:\r\n    879     if retries > 0:\r\n\r\nBadRequestError: Error code: 400 - {'error': {'message': 'Unrecognized request arguments supplied: tool_choice, tools', 'type': 'invalid_request_error', 'param': None, 'code': None}}\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9062/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9062/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9061",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9061/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9061/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9061/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9061",
        "id": 2005099577,
        "node_id": "PR_kwDOIWuq585gEKGH",
        "number": 9061,
        "title": "Removed `deprecated` dependency",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6232710946,
                "node_id": "LA_kwDOIWuq588AAAABc3-fIg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:L",
                "name": "size:L",
                "color": "eb9500",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-21T20:46:16Z",
        "updated_at": "2023-11-21T20:48:42Z",
        "closed_at": "2023-11-21T20:48:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9061",
            "html_url": "https://github.com/run-llama/llama_index/pull/9061",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9061.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9061.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nIt looks like https://github.com/run-llama/llama_index/pull/8016 added `deprecated` a month ago to help deprecate some interface.\r\n\r\n- Finishes the deprecation cycle (it's been a month)\r\n- Removes the `deprecated` dependency in favor of the built-in deprecation facilities (`DeprecationWarning` + `warnings`)\r\n    - Re-runs `poetry lock` afterwards\r\n\r\nThis PR removes one of the dependencies of LlamaIndex, making it marginally lighter weight\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9061/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9061/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9060",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9060/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9060/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9060/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9060",
        "id": 2005048405,
        "node_id": "PR_kwDOIWuq585gD-8F",
        "number": 9060,
        "title": "Fix ReAct Output Parser for Multi-line action inputs",
        "user": {
            "login": "embiem",
            "id": 3866457,
            "node_id": "MDQ6VXNlcjM4NjY0NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3866457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/embiem",
            "html_url": "https://github.com/embiem",
            "followers_url": "https://api.github.com/users/embiem/followers",
            "following_url": "https://api.github.com/users/embiem/following{/other_user}",
            "gists_url": "https://api.github.com/users/embiem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/embiem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/embiem/subscriptions",
            "organizations_url": "https://api.github.com/users/embiem/orgs",
            "repos_url": "https://api.github.com/users/embiem/repos",
            "events_url": "https://api.github.com/users/embiem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/embiem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710919,
                "node_id": "LA_kwDOIWuq588AAAABc3-fBw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:S",
                "name": "size:S",
                "color": "77b800",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-21T20:09:11Z",
        "updated_at": "2023-11-21T21:55:54Z",
        "closed_at": "2023-11-21T21:55:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9060",
            "html_url": "https://github.com/run-llama/llama_index/pull/9060",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9060.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9060.patch",
            "merged_at": "2023-11-21T21:55:53Z"
        },
        "body": "# Description\r\n\r\nChanged the regex pattern to work for multi-line action inputs. I also added a test case that is failing on the current main's output parser and green with my regex pattern change.\r\n\r\nI've encountered this issue when using custom tools that required more complex inputs. In my tests, most of the time the LLM will respond with a well formatted, multi-line JSON that was always failing in the current output parser.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9060/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9060/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9059",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9059/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9059/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9059/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9059",
        "id": 2005035442,
        "node_id": "PR_kwDOIWuq585gD8OX",
        "number": 9059,
        "title": "Testing whether Algolia will understand a sitemap",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-21T19:59:37Z",
        "updated_at": "2023-11-21T20:18:29Z",
        "closed_at": "2023-11-21T20:18:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9059",
            "html_url": "https://github.com/run-llama/llama_index/pull/9059",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9059.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9059.patch",
            "merged_at": "2023-11-21T20:18:28Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9059/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9059/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9057",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9057/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9057/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9057/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9057",
        "id": 2004908563,
        "node_id": "I_kwDOIWuq5853gHoT",
        "number": 9057,
        "title": "[Bug]: messages_to_prompt assert fails in react mode due to duplication in assistant Thought",
        "user": {
            "login": "Herobring",
            "id": 11737734,
            "node_id": "MDQ6VXNlcjExNzM3NzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11737734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Herobring",
            "html_url": "https://github.com/Herobring",
            "followers_url": "https://api.github.com/users/Herobring/followers",
            "following_url": "https://api.github.com/users/Herobring/following{/other_user}",
            "gists_url": "https://api.github.com/users/Herobring/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Herobring/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Herobring/subscriptions",
            "organizations_url": "https://api.github.com/users/Herobring/orgs",
            "repos_url": "https://api.github.com/users/Herobring/repos",
            "events_url": "https://api.github.com/users/Herobring/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Herobring/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-21T18:31:55Z",
        "updated_at": "2023-11-27T20:24:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\n<img width=\"1514\" alt=\"Screenshot 2023-11-21 at 18 12 50\" src=\"https://github.com/run-llama/llama_index/assets/11737734/f338edea-f553-47ed-a112-cb6968502512\">\r\n\r\nmessages_to_prompt expects:\r\n```python\r\n    for i in range(0, len(messages), 2):\r\n        # first message should always be a user\r\n        user_message = messages[i]\r\n        assert user_message.role == MessageRole.USER\r\n```\r\nBut the second message is a thought.\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"/somewhere/Projects/src/dsml/service/bot_integration/src/app/bot/bot_cli.py\", line 239, in <module>\r\n    start()\r\n  File \"/somewhere/Projects/src/dsml/service/bot_integration/src/app/bot/bot_cli.py\", line 207, in start\r\n    response = chat_engine.stream_chat(message[1:])\r\n  File \"/somewhere/miniforge3/envs/f310/lib/python3.10/site-packages/llama_index/callbacks/utils.py\", line 39, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/somewhere/miniforge3/envs/f310/lib/python3.10/site-packages/llama_index/agent/react/base.py\", line 438, in stream_chat\r\n    chat_stream = self._llm.stream_chat(input_chat)\r\n  File \"/somewhere/miniforge3/envs/f310/lib/python3.10/site-packages/llama_index/llms/base.py\", line 186, in wrapped_llm_chat\r\n    f_return_val = f(_self, messages, **kwargs)\r\n  File \"/somewhere/miniforge3/envs/f310/lib/python3.10/site-packages/llama_index/llms/llama_cpp.py\", line 211, in stream_chat\r\n    prompt = self.messages_to_prompt(messages)\r\n  File \"/somewhere/miniforge3/envs/f310/lib/python3.10/site-packages/llama_index/llms/llama_utils.py\", line 32, in messages_to_prompt\r\n    assert user_message.role == MessageRole.USER\r\nAssertionError\r\n```\r\n\r\n### Version\r\n\r\n0.8.*\r\n\r\n### Steps to Reproduce\r\n\r\nSend two messages to \r\n\r\n```python\r\nindex = VectorStoreIndex.from_vector_store(vector_store=pm.vector_store, storage_context=storage_context, service_context=service_context)\r\nindex.as_chat_engine(chat_mode=\"react\", streaming=True, verbose=True, service_context=service_context)\r\n```\r\nwith LlamaCPP as llm\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n>  +count to 3\r\nDebug: React chat mode. LLM: ServiceContext(llm_predictor=LLMPredictor(system_prompt=None, query_wrapper_prompt=None, pydantic_program_mode=<PydanticProgramMode.DEFAULT: 'default'>), prompt_helper=PromptHelper(context_window=3900, num_output=1024, chunk_overlap_ratio=0.1, chunk_size_limit=None, separator='\r\n'), embed_model=HuggingFaceEmbedding(model_name='sentence-transformers/all-MiniLM-L6-v2', embed_batch_size=10, callback_manager=<llama_index.callbacks.base.CallbackManager object at 0x17ff77910>, tokenizer_name='sentence-transformers/all-MiniLM-L6-v2', max_length=512, pooling=<Pooling.CLS: 'cls'>, \r\nnormalize='True', query_instruction=None, text_instruction=None, cache_folder=None), node_parser=SimpleNodeParser(text_splitter=SentenceSplitter(chunk_size=1024, chunk_overlap=20, separator=' ', paragraph_separator='\\n\\n\\n', secondary_chunking_regex='[^,.;\u3002\uff1f\uff01]+[,.;\u3002\uff1f\uff01]?', \r\nchunking_tokenizer_fn=<function split_by_sentence_tokenizer.<locals>.split at 0x17fe8c160>, callback_manager=<llama_index.callbacks.base.CallbackManager object at 0x17ff77910>, tokenizer=functools.partial(<bound method Encoding.encode of <Encoding 'gpt2'>>, allowed_special='all')), include_metadata=True, \r\ninclude_prev_next_rel=True, metadata_extractor=None, callback_manager=<llama_index.callbacks.base.CallbackManager object at 0x17ff77910>), llama_logger=<llama_index.logger.base.LlamaLogger object at 0x5abb32530>, callback_manager=<llama_index.callbacks.base.CallbackManager object at 0x17ff77910>)\r\nThought: (Implicit) I can answer without any more tools!\r\nResponse (Starts With):  ...\r\n[1m[0m\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 Thought: I need to use a tool to help me answer the question.                                                                                                                                                                                                                                                   \u2502\r\n\u2502 Action: query_engine_tool                                                                                                                                                                                                                                                                                       \u2502\r\n\u2502 Action Input: {\"text\": \"count to 3\"}                                                                                                                                                                                                                                                                            \u2502\r\n\u2502                                                                                                                                                                                                                                                                                                                 \u2502\r\n\u2502 Please provide the response from the tool.                                                                                                                                                                                                                                                                      \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nMessage:\r\n>  +count to 3\r\nThought: (Implicit) I can answer without any more tools!\r\nResponse (Starts With):  ...\r\nThought: (Implicit) I can answer without any more tools!\r\nResponse (Starts With):  ...\r\n[1m[0m\r\nTraceback (most recent call last):\r\n  File \"/Users/devou/Projects/src/dsml/service/bot_integration/src/app/bot/bot_cli.py\", line 239, in <module>\r\n    start()\r\n  File \"/Users/devou/Projects/src/dsml/service/bot_integration/src/app/bot/bot_cli.py\", line 207, in start\r\n    response = chat_engine.stream_chat(message[1:])\r\n  File \"/Users/devou/miniforge3/envs/f310/lib/python3.10/site-packages/llama_index/callbacks/utils.py\", line 39, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/Users/devou/miniforge3/envs/f310/lib/python3.10/site-packages/llama_index/agent/react/base.py\", line 438, in stream_chat\r\n    chat_stream = self._llm.stream_chat(input_chat)\r\n  File \"/Users/devou/miniforge3/envs/f310/lib/python3.10/site-packages/llama_index/llms/base.py\", line 186, in wrapped_llm_chat\r\n    f_return_val = f(_self, messages, **kwargs)\r\n  File \"/Users/devou/miniforge3/envs/f310/lib/python3.10/site-packages/llama_index/llms/llama_cpp.py\", line 211, in stream_chat\r\n    prompt = self.messages_to_prompt(messages)\r\n  File \"/Users/devou/miniforge3/envs/f310/lib/python3.10/site-packages/llama_index/llms/llama_utils.py\", line 32, in messages_to_prompt\r\n    assert user_message.role == MessageRole.USER\r\nAssertionError\r\n\r\nProcess finished with exit code 1\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9057/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9057/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9056",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9056/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9056/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9056/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9056",
        "id": 2004771192,
        "node_id": "PR_kwDOIWuq585gDCC_",
        "number": 9056,
        "title": "[version] bump to v0.9.5",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-21T17:09:13Z",
        "updated_at": "2023-11-21T17:14:28Z",
        "closed_at": "2023-11-21T17:14:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9056",
            "html_url": "https://github.com/run-llama/llama_index/pull/9056",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9056.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9056.patch",
            "merged_at": "2023-11-21T17:14:27Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9056/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9056/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9055",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9055/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9055/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9055/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9055",
        "id": 2004538816,
        "node_id": "I_kwDOIWuq5853etXA",
        "number": 9055,
        "title": "[Feature Request]: Add custom headers to ServiceContext",
        "user": {
            "login": "aavetis",
            "id": 3076502,
            "node_id": "MDQ6VXNlcjMwNzY1MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3076502?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aavetis",
            "html_url": "https://github.com/aavetis",
            "followers_url": "https://api.github.com/users/aavetis/followers",
            "following_url": "https://api.github.com/users/aavetis/following{/other_user}",
            "gists_url": "https://api.github.com/users/aavetis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aavetis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aavetis/subscriptions",
            "organizations_url": "https://api.github.com/users/aavetis/orgs",
            "repos_url": "https://api.github.com/users/aavetis/repos",
            "events_url": "https://api.github.com/users/aavetis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aavetis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-21T15:26:00Z",
        "updated_at": "2023-11-22T16:12:11Z",
        "closed_at": "2023-11-22T16:12:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nProposing to add the ability to specify custom headers - setting them either at global context, or making available to pass in on any LLM call. \r\n\r\nCurrently, you can pass in custom headers when executing a chat response:\r\n```python\r\nmessages = [\r\n    ChatMessage(role=\"system\", content=\"You are a pirate with colorful personality.\"),\r\n    ChatMessage(role=\"user\", content=\"Hello\"),\r\n]\r\n\r\nheaders = {\"custom-headers\": \"my-headers\"}\r\nresponse = llm.chat(messages, extra_headers=headers)\r\n```\r\n\r\nBut you'd have to provide this everywhere, and also, it doesn't work on tailored use cases (like `VectorStoreIndex QueryEngine`).\r\n```python\r\n\r\nindex = VectorStoreIndex.from_documents(documents)\r\nquery_engine = index.as_query_engine()\r\nresponse = query_engine.query(\r\n    \"did the Eagles win last night?\"\r\n    extra_headers=headers,\r\n)\r\n\r\n### ^^ this fails\r\n\n\n### Reason\n\nLLM Observability tools allow you to use headers to track custom application parameters. For example, [my observability tool](https://github.com/aavetis/azure-openai-logger) allows you to pass in custom headers to track prompts, applications, versions, users, and anything else - kind of like usage analytics. \r\n\r\nExamples below:\r\n<img width=\"876\" alt=\"image\" src=\"https://github.com/run-llama/llama_index/assets/3076502/f685e323-f3ee-4301-ac0e-b1f4759445bf\">\r\n<img width=\"1498\" alt=\"image\" src=\"https://github.com/run-llama/llama_index/assets/3076502/db59accc-a510-4ed7-a6f9-ef0a11566f40\">\r\n\r\n\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9055/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9055/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9054",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9054/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9054/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9054/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9054",
        "id": 2004451942,
        "node_id": "I_kwDOIWuq5853eYJm",
        "number": 9054,
        "title": "[Question]: Error when parsing a html file. Inconsistent behaviour",
        "user": {
            "login": "rsreetech",
            "id": 65341271,
            "node_id": "MDQ6VXNlcjY1MzQxMjcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/65341271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rsreetech",
            "html_url": "https://github.com/rsreetech",
            "followers_url": "https://api.github.com/users/rsreetech/followers",
            "following_url": "https://api.github.com/users/rsreetech/following{/other_user}",
            "gists_url": "https://api.github.com/users/rsreetech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rsreetech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rsreetech/subscriptions",
            "organizations_url": "https://api.github.com/users/rsreetech/orgs",
            "repos_url": "https://api.github.com/users/rsreetech/repos",
            "events_url": "https://api.github.com/users/rsreetech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rsreetech/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-21T14:49:02Z",
        "updated_at": "2023-11-23T08:17:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI get this error when trying trying to build an index from a html file:\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\n[/usr/local/lib/python3.10/dist-packages/pandas/core/internals/construction.py](https://localhost:8080/#) in _finalize_columns_and_data(content, columns, dtype)\r\n    968     try:\r\n--> 969         columns = _validate_or_indexify_columns(contents, columns)\r\n    970     except AssertionError as err:\r\n\r\n14 frames\r\n[/usr/local/lib/python3.10/dist-packages/pandas/core/internals/construction.py](https://localhost:8080/#) in _validate_or_indexify_columns(content, columns)\r\n   1016             # caller's responsibility to check for this...\r\n-> 1017             raise AssertionError(\r\n   1018                 f\"{len(columns)} columns passed, passed data had \"\r\n\r\nAssertionError: 2 columns passed, passed data had 4 columns\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nValueError                                Traceback (most recent call last)\r\n[<ipython-input-10-9e6f1eb060e1>](https://localhost:8080/#) in <cell line: 1>()\r\n----> 1 agent=get_agent()\r\n\r\n[<ipython-input-9-82d0d0e0ca09>](https://localhost:8080/#) in get_agent()\r\n    184     logger = logging.getLogger(\"uvicorn\")\r\n    185 \r\n--> 186     vector_index_2021, node_mappings_2021 = _get_index_and_mappings(\r\n    187         data_path=Path(DATA_DIR) / \"/content/Data/adbe-20221202.htm\",\r\n    188         out_index_path=Path(STORAGE_DIR) / \"2022_index\",\r\n\r\n[<ipython-input-9-82d0d0e0ca09>](https://localhost:8080/#) in _get_index_and_mappings(data_path, out_index_path, out_node_mappings_path, logger)\r\n    123         reader = FlatReader()\r\n    124         docs = reader.load_data(data_path)\r\n--> 125         raw_nodes = node_parser.get_nodes_from_documents(docs)\r\n    126 \r\n    127         base_nodes, node_mappings = node_parser.get_base_nodes_and_mappings(\r\n\r\n[/content/llama_index/llama_index/node_parser/interface.py](https://localhost:8080/#) in get_nodes_from_documents(self, documents, show_progress, **kwargs)\r\n     59             CBEventType.NODE_PARSING, payload={EventPayload.DOCUMENTS: documents}\r\n     60         ) as event:\r\n---> 61             nodes = self._parse_nodes(documents, show_progress=show_progress, **kwargs)\r\n     62 \r\n     63             if self.include_metadata:\r\n\r\n[/content/llama_index/llama_index/node_parser/relational/unstructured_element.py](https://localhost:8080/#) in _parse_nodes(self, nodes, show_progress, **kwargs)\r\n    277 \r\n    278         for node in nodes_with_progress:\r\n--> 279             nodes = self.get_nodes_from_node(node)\r\n    280             all_nodes.extend(nodes)\r\n    281 \r\n\r\n[/content/llama_index/llama_index/node_parser/relational/unstructured_element.py](https://localhost:8080/#) in get_nodes_from_node(self, node)\r\n    258     def get_nodes_from_node(self, node: TextNode) -> List[BaseNode]:\r\n    259         \"\"\"Get nodes from node.\"\"\"\r\n--> 260         elements = extract_elements(node.get_content(), table_filters=[filter_table])\r\n    261         table_elements = get_table_elements(elements)\r\n    262         # extract summaries over table elements\r\n\r\n[/content/llama_index/llama_index/node_parser/relational/unstructured_element.py](https://localhost:8080/#) in extract_elements(text, table_filters)\r\n     83     for idx, element in enumerate(elements):\r\n     84         if \"unstructured.documents.html.HTMLTable\" in str(type(element)):\r\n---> 85             should_keep = all(tf(element) for tf in table_filters)\r\n     86             if should_keep:\r\n     87                 table_df = html_to_df(str(element.metadata.text_as_html))\r\n\r\n[/content/llama_index/llama_index/node_parser/relational/unstructured_element.py](https://localhost:8080/#) in <genexpr>(.0)\r\n     83     for idx, element in enumerate(elements):\r\n     84         if \"unstructured.documents.html.HTMLTable\" in str(type(element)):\r\n---> 85             should_keep = all(tf(element) for tf in table_filters)\r\n     86             if should_keep:\r\n     87                 table_df = html_to_df(str(element.metadata.text_as_html))\r\n\r\n[/content/llama_index/llama_index/node_parser/relational/unstructured_element.py](https://localhost:8080/#) in filter_table(table_element)\r\n     68 def filter_table(table_element: Any) -> bool:\r\n     69     \"\"\"Filter table.\"\"\"\r\n---> 70     table_df = html_to_df(table_element.metadata.text_as_html)\r\n     71     return len(table_df) > 1 and len(table_df.columns) > 1\r\n     72 \r\n\r\n[/content/llama_index/llama_index/node_parser/relational/unstructured_element.py](https://localhost:8080/#) in html_to_df(html_str)\r\n     63         data.append(cols)\r\n     64 \r\n---> 65     return pd.DataFrame(data[1:], columns=data[0])\r\n     66 \r\n     67 \r\n\r\n[/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py](https://localhost:8080/#) in __init__(self, data, index, columns, dtype, copy)\r\n    744                     if columns is not None:\r\n    745                         columns = ensure_index(columns)\r\n--> 746                     arrays, columns, index = nested_data_to_arrays(\r\n    747                         # error: Argument 3 to \"nested_data_to_arrays\" has incompatible\r\n    748                         # type \"Optional[Collection[Any]]\"; expected \"Optional[Index]\"\r\n\r\n[/usr/local/lib/python3.10/dist-packages/pandas/core/internals/construction.py](https://localhost:8080/#) in nested_data_to_arrays(data, columns, index, dtype)\r\n    508         columns = ensure_index(data[0]._fields)\r\n    509 \r\n--> 510     arrays, columns = to_arrays(data, columns, dtype=dtype)\r\n    511     columns = ensure_index(columns)\r\n    512 \r\n\r\n[/usr/local/lib/python3.10/dist-packages/pandas/core/internals/construction.py](https://localhost:8080/#) in to_arrays(data, columns, dtype)\r\n    873         arr = _list_to_arrays(data)\r\n    874 \r\n--> 875     content, columns = _finalize_columns_and_data(arr, columns, dtype)\r\n    876     return content, columns\r\n    877 \r\n\r\n[/usr/local/lib/python3.10/dist-packages/pandas/core/internals/construction.py](https://localhost:8080/#) in _finalize_columns_and_data(content, columns, dtype)\r\n    970     except AssertionError as err:\r\n    971         # GH#26429 do not raise user-facing AssertionError\r\n--> 972         raise ValueError(err) from err\r\n    973 \r\n    974     if len(contents) and contents[0].dtype == np.object_:\r\n\r\nValueError: 2 columns passed, passed data had 4 columns\r\nI have seen inconsistent behaviour with the same html file as input. I get different parsing errors on each run\r\nCode is present here: https://colab.research.google.com/drive/1kp_I1z9F9FSs5bjmmd9uZ2OgK1alfyqc?usp=sharing\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9054/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9054/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9053",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9053/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9053/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9053/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9053",
        "id": 2004299208,
        "node_id": "PR_kwDOIWuq585gBZlH",
        "number": 9053,
        "title": "Expand STR_OR_RESPONSE_TYPE",
        "user": {
            "login": "martinkozle",
            "id": 48385621,
            "node_id": "MDQ6VXNlcjQ4Mzg1NjIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48385621?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martinkozle",
            "html_url": "https://github.com/martinkozle",
            "followers_url": "https://api.github.com/users/martinkozle/followers",
            "following_url": "https://api.github.com/users/martinkozle/following{/other_user}",
            "gists_url": "https://api.github.com/users/martinkozle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martinkozle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martinkozle/subscriptions",
            "organizations_url": "https://api.github.com/users/martinkozle/orgs",
            "repos_url": "https://api.github.com/users/martinkozle/repos",
            "events_url": "https://api.github.com/users/martinkozle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martinkozle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-21T13:32:39Z",
        "updated_at": "2023-11-21T16:33:08Z",
        "closed_at": "2023-11-21T16:33:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9053",
            "html_url": "https://github.com/run-llama/llama_index/pull/9053",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9053.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9053.patch",
            "merged_at": "2023-11-21T16:33:07Z"
        },
        "body": "# Description\r\n\r\nExpand `STR_OR_RESPONSE_TYPE` type to include `RESPONSE_TYPE`.\r\n\r\nFixes #9052\r\n\r\n## Type of Change\r\n\r\n- [x] Typing change\r\n\r\n# How Has This Been Tested?\r\n\r\nSince this is just a typing change only mypy would really need to pass.\r\n\r\n- [x] I ran mypy\r\n- [x] I ran pre-commit\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9053/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9053/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9052",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9052/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9052/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9052/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9052",
        "id": 2004295617,
        "node_id": "I_kwDOIWuq5853dx_B",
        "number": 9052,
        "title": "[Question]: Is there a good reason for CustomQueryEngine custom_query method to not be able to return StreamingResponse?",
        "user": {
            "login": "martinkozle",
            "id": 48385621,
            "node_id": "MDQ6VXNlcjQ4Mzg1NjIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48385621?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martinkozle",
            "html_url": "https://github.com/martinkozle",
            "followers_url": "https://api.github.com/users/martinkozle/followers",
            "following_url": "https://api.github.com/users/martinkozle/following{/other_user}",
            "gists_url": "https://api.github.com/users/martinkozle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martinkozle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martinkozle/subscriptions",
            "organizations_url": "https://api.github.com/users/martinkozle/orgs",
            "repos_url": "https://api.github.com/users/martinkozle/repos",
            "events_url": "https://api.github.com/users/martinkozle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martinkozle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-21T13:30:42Z",
        "updated_at": "2023-11-21T16:33:09Z",
        "closed_at": "2023-11-21T16:33:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nThe [custom_query](https://github.com/run-llama/llama_index/blob/178df06a8c4e255c271aa0626ddd7cc61b752319/llama_index/query_engine/custom.py#L66C68-L66C68) and `acustom_query` methods have a return type of  [STR_OR_RESPONSE_TYPE](https://github.com/run-llama/llama_index/blob/178df06a8c4e255c271aa0626ddd7cc61b752319/llama_index/query_engine/custom.py#L13C44-L13C44) which is defined as:\r\n\r\n```python\r\nSTR_OR_RESPONSE_TYPE = Union[Response, str]\r\n```\r\n\r\nBut the `query` method has a return type of [RESPONSE_TYPE](https://github.com/run-llama/llama_index/blob/178df06a8c4e255c271aa0626ddd7cc61b752319/llama_index/response/schema.py#L142) which is defined as:\r\n\r\n```python\r\nRESPONSE_TYPE = Union[Response, StreamingResponse, PydanticResponse]\r\n```\r\n\r\nLooking at the code and by testing it locally I don't see a reason why `STR_OR_RESPONSE_TYPE` isn't expanded to support the other 2 Response types. It seems to work normally at runtime, but the type checker complains because the implemented abstract method has a tighter type.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9052/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9052/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9051",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9051/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9051/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9051/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9051",
        "id": 2004291004,
        "node_id": "PR_kwDOIWuq585gBXzN",
        "number": 9051,
        "title": "Fix : Spelling mistake fixed | Anand Vishwakarma",
        "user": {
            "login": "AnandJVishwakarma",
            "id": 55125207,
            "node_id": "MDQ6VXNlcjU1MTI1MjA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/55125207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AnandJVishwakarma",
            "html_url": "https://github.com/AnandJVishwakarma",
            "followers_url": "https://api.github.com/users/AnandJVishwakarma/followers",
            "following_url": "https://api.github.com/users/AnandJVishwakarma/following{/other_user}",
            "gists_url": "https://api.github.com/users/AnandJVishwakarma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AnandJVishwakarma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AnandJVishwakarma/subscriptions",
            "organizations_url": "https://api.github.com/users/AnandJVishwakarma/orgs",
            "repos_url": "https://api.github.com/users/AnandJVishwakarma/repos",
            "events_url": "https://api.github.com/users/AnandJVishwakarma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AnandJVishwakarma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-21T13:28:17Z",
        "updated_at": "2023-11-21T16:33:35Z",
        "closed_at": "2023-11-21T16:33:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9051",
            "html_url": "https://github.com/run-llama/llama_index/pull/9051",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9051.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9051.patch",
            "merged_at": "2023-11-21T16:33:34Z"
        },
        "body": "# Description\r\n\r\nThere was a spelling mistake of \"multi-model\" in the documentation. \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have made corresponding changes to the documentation",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9051/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9051/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9050",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9050/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9050/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9050/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9050",
        "id": 2004021919,
        "node_id": "I_kwDOIWuq5853cvKf",
        "number": 9050,
        "title": "[Question]: Which is the best index type to use for large amount of JSON documents? Shall I use TreeIndex here?",
        "user": {
            "login": "prabhupant",
            "id": 19776278,
            "node_id": "MDQ6VXNlcjE5Nzc2Mjc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/19776278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prabhupant",
            "html_url": "https://github.com/prabhupant",
            "followers_url": "https://api.github.com/users/prabhupant/followers",
            "following_url": "https://api.github.com/users/prabhupant/following{/other_user}",
            "gists_url": "https://api.github.com/users/prabhupant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prabhupant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prabhupant/subscriptions",
            "organizations_url": "https://api.github.com/users/prabhupant/orgs",
            "repos_url": "https://api.github.com/users/prabhupant/repos",
            "events_url": "https://api.github.com/users/prabhupant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prabhupant/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-21T11:04:13Z",
        "updated_at": "2023-11-21T11:12:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI have a large amount of JSON documents (they contain account information and are stored as an array of JSONs) and I want to create an index on top of it such that when I ask the index a question like \"How many customers have saving accounts\", it should give me proper answer. I tried with VectorIndex but the answers were very poor.\r\n\r\nTried with TreeIndex also but could not find relevant documentations for it.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9050/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9050/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9047",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9047/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9047/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9047/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9047",
        "id": 2003673637,
        "node_id": "I_kwDOIWuq5853baIl",
        "number": 9047,
        "title": "[Bug]: ElasticSearch Vector Store - indexing documents (ERROR:asyncio:Unclosed client session)",
        "user": {
            "login": "Marc-Rennison",
            "id": 151610721,
            "node_id": "U_kgDOCQllYQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/151610721?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Marc-Rennison",
            "html_url": "https://github.com/Marc-Rennison",
            "followers_url": "https://api.github.com/users/Marc-Rennison/followers",
            "following_url": "https://api.github.com/users/Marc-Rennison/following{/other_user}",
            "gists_url": "https://api.github.com/users/Marc-Rennison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Marc-Rennison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Marc-Rennison/subscriptions",
            "organizations_url": "https://api.github.com/users/Marc-Rennison/orgs",
            "repos_url": "https://api.github.com/users/Marc-Rennison/repos",
            "events_url": "https://api.github.com/users/Marc-Rennison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Marc-Rennison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-21T07:59:17Z",
        "updated_at": "2023-11-21T08:11:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI can successfully connect to my locally hosted Elasticsearch cluster, and I am trying to build the VectorStoreIndex. During the bulk ingestion process I receive an asyncio:Unclosed client session error and asyncio:Unclosed connector error which terminates the program.\r\n\r\nI have AIOHTTP version 3.8.6 and Elasticsearch 8.10.1 installed.\r\n\r\nI am using a simple function called  index_documents(index_name, documents):\r\n    \r\n    vector_store = ElasticsearchStore(\r\n        es_url=\"http://localhost:9200\",\r\n        index_name=index_name\r\n    )\r\n\r\n    storage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n\r\n    index = VectorStoreIndex.from_documents(documents, storage_context=storage_context)\r\n    \r\n    \r\nThe VectorStoreIndex.from_documents() does not successfully complete\r\n\r\n\n\n### Version\n\n8.10.1\n\n### Steps to Reproduce\n\n1) Host ElasticSearch cluster locally.\r\n2) Connect to elasticsearch locally.\r\n3) Build VectorStoreIndex using ElasticsearchStore.\r\n\r\nSteps 2 and 3 are exactly as shown in the documentation.\n\n### Relevant Logs/Tracbacks\n\n```shell\nINFO:elastic_transport.transport:PUT http://localhost:9200/_bulk?refresh=true [status:200 duration:0.112s]\r\nPUT http://localhost:9200/_bulk?refresh=true [status:200 duration:0.112s]\r\nERROR:asyncio:Unclosed client session\r\nclient_session: <aiohttp.client.ClientSession object at 0x7f5dc001eb50>\r\nUnclosed client session\r\nclient_session: <aiohttp.client.ClientSession object at 0x7f5dc001eb50>\r\nERROR:asyncio:Unclosed connector\r\nconnections: ['[(<aiohttp.client_proto.ResponseHandler object at 0x7f5dc1054c40>, 2504.483212791)]']\r\nconnector: <aiohttp.connector.TCPConnector object at 0x7f5dc001ec40>\r\nUnclosed connector\r\nconnections: ['[(<aiohttp.client_proto.ResponseHandler object at 0x7f5dc1054c40>, 2504.483212791)]']\r\nconnector: <aiohttp.connector.TCPConnector object at 0x7f5dc001ec40>\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9047/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9047/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9046",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9046/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9046/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9046/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9046",
        "id": 2003581815,
        "node_id": "I_kwDOIWuq5853bDt3",
        "number": 9046,
        "title": "ImportError: cannot import name 'TrafilaturaWebReader' from 'llama_index'",
        "user": {
            "login": "sqpollen",
            "id": 99855230,
            "node_id": "U_kgDOBfOrfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/99855230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sqpollen",
            "html_url": "https://github.com/sqpollen",
            "followers_url": "https://api.github.com/users/sqpollen/followers",
            "following_url": "https://api.github.com/users/sqpollen/following{/other_user}",
            "gists_url": "https://api.github.com/users/sqpollen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sqpollen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sqpollen/subscriptions",
            "organizations_url": "https://api.github.com/users/sqpollen/orgs",
            "repos_url": "https://api.github.com/users/sqpollen/repos",
            "events_url": "https://api.github.com/users/sqpollen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sqpollen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-21T06:53:43Z",
        "updated_at": "2023-11-21T08:57:27Z",
        "closed_at": "2023-11-21T08:57:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nTrafilaturaWebReader doesn't seem to be included in the latest version of LLamaIndex.\r\n\r\n`from llama_index import TrafilaturaWebReader`\r\n\r\ngives\r\n\r\n```Traceback (most recent call last):\r\n  File \"/Users/***/***/pinecone-index/insert.py\", line 1, in <module>\r\n    from lib.utils import init_vector, save_page\r\n  File \"/Users/***/***/pinecone-index/lib/utils.py\", line 7, in <module>\r\n    from llama_index import TrafilaturaWebReader\r\nImportError: cannot import name 'TrafilaturaWebReader' from 'llama_index'\r\n```\r\n\r\n### Version\r\n\r\n0.9.4\r\n\r\n### Steps to Reproduce\r\n\r\n`pip install llama-index`\r\n\r\nimport into your Python file\r\n\r\n`from llama_index import TrafilaturaWebReader`\r\n\r\n\r\n\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"/Users/***/***/pinecone-index/insert.py\", line 1, in <module>\r\n    from lib.utils import init_vector, save_page\r\n  File \"/Users/***/***/pinecone-index/lib/utils.py\", line 7, in <module>\r\n    from llama_index import TrafilaturaWebReader\r\nImportError: cannot import name 'TrafilaturaWebReader' from 'llama_index'\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9046/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9045",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9045/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9045/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9045/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9045",
        "id": 2003341319,
        "node_id": "PR_kwDOIWuq585f-I4d",
        "number": 9045,
        "title": "Image to Image Retrieval with example",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710949,
                "node_id": "LA_kwDOIWuq588AAAABc3-fJQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XL",
                "name": "size:XL",
                "color": "ff823f",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-21T02:39:41Z",
        "updated_at": "2023-11-23T03:38:13Z",
        "closed_at": "2023-11-22T23:21:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9045",
            "html_url": "https://github.com/run-llama/llama_index/pull/9045",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9045.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9045.patch",
            "merged_at": "2023-11-22T23:21:14Z"
        },
        "body": "# Description\r\nImage to Image Retrieval using image embedding\r\n\r\nGPT4V for understanding the correlations between retrieved images and input image\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9045/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9045/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9044",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9044/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9044/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9044/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9044",
        "id": 2003294133,
        "node_id": "PR_kwDOIWuq585f9_AA",
        "number": 9044,
        "title": "Minor clarifications on transformations docs",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710935,
                "node_id": "LA_kwDOIWuq588AAAABc3-fFw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:M",
                "name": "size:M",
                "color": "ebb800",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-21T01:42:10Z",
        "updated_at": "2023-11-21T19:49:50Z",
        "closed_at": "2023-11-21T19:49:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9044",
            "html_url": "https://github.com/run-llama/llama_index/pull/9044",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9044.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9044.patch",
            "merged_at": "2023-11-21T19:49:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9044/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9044/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9043",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9043/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9043/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9043/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9043",
        "id": 2003263679,
        "node_id": "PR_kwDOIWuq585f94nY",
        "number": 9043,
        "title": "feat: fastembed embedding support",
        "user": {
            "login": "Anush008",
            "id": 46051506,
            "node_id": "MDQ6VXNlcjQ2MDUxNTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/46051506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Anush008",
            "html_url": "https://github.com/Anush008",
            "followers_url": "https://api.github.com/users/Anush008/followers",
            "following_url": "https://api.github.com/users/Anush008/following{/other_user}",
            "gists_url": "https://api.github.com/users/Anush008/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Anush008/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Anush008/subscriptions",
            "organizations_url": "https://api.github.com/users/Anush008/orgs",
            "repos_url": "https://api.github.com/users/Anush008/repos",
            "events_url": "https://api.github.com/users/Anush008/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Anush008/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710946,
                "node_id": "LA_kwDOIWuq588AAAABc3-fIg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:L",
                "name": "size:L",
                "color": "eb9500",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-21T01:01:57Z",
        "updated_at": "2023-11-21T17:39:32Z",
        "closed_at": "2023-11-21T16:36:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9043",
            "html_url": "https://github.com/run-llama/llama_index/pull/9043",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9043.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9043.patch",
            "merged_at": "2023-11-21T16:36:16Z"
        },
        "body": "# Description\r\n\r\nThis PR intends to add [Qdrant/FastEmbed](https://qdrant.github.io/fastembed/) as a supported embeddings provider, associated tests and documentation.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests have been added to `tests/embeddings/test_fastembed.py`.\r\n\r\n- [x] Added new unit/integration tests\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code.\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9043/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9043/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9042",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9042/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9042/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9042/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9042",
        "id": 2003249562,
        "node_id": "PR_kwDOIWuq585f91m0",
        "number": 9042,
        "title": "Loosened `dataclasses-json` and removed `pandas`'s `jinja2` extra",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6232710958,
                "node_id": "LA_kwDOIWuq588AAAABc3-fLg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XXL",
                "name": "size:XXL",
                "color": "ffb8b8",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-21T00:43:33Z",
        "updated_at": "2023-11-21T01:16:01Z",
        "closed_at": "2023-11-21T01:16:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9042",
            "html_url": "https://github.com/run-llama/llama_index/pull/9042",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9042.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9042.patch",
            "merged_at": "2023-11-21T01:16:00Z"
        },
        "body": "# Description\r\n\r\nhttps://github.com/run-llama/llama_index/pull/8049 seems to have unnecessarily pinned `dataclasses-json` so it stays like `>=0.5.7,<0.6`. This PR loosens that dependency, which fixes https://github.com/run-llama/llama_index/issues/9039.\r\n\r\nhttps://github.com/run-llama/llama_index/pull/8984 added `jinja2` as an extra, seemingly unnecessarily. This PR also removes the `jinja2` extra from `pandas`, which fixes https://github.com/run-llama/llama_index/issues/9038.\r\n\r\nLastly, it skips a test that fails locally on Python 3.8, because the underlying `default_output_processor` will not run for Python below 3.9.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9042/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9042/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9040",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9040/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9040/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9040/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9040",
        "id": 2003224428,
        "node_id": "PR_kwDOIWuq585f9wQ0",
        "number": 9040,
        "title": "fix: continue instead of forcing exception openai astream chat",
        "user": {
            "login": "saveriyo",
            "id": 144159528,
            "node_id": "U_kgDOCJezKA",
            "avatar_url": "https://avatars.githubusercontent.com/u/144159528?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saveriyo",
            "html_url": "https://github.com/saveriyo",
            "followers_url": "https://api.github.com/users/saveriyo/followers",
            "following_url": "https://api.github.com/users/saveriyo/following{/other_user}",
            "gists_url": "https://api.github.com/users/saveriyo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saveriyo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saveriyo/subscriptions",
            "organizations_url": "https://api.github.com/users/saveriyo/orgs",
            "repos_url": "https://api.github.com/users/saveriyo/repos",
            "events_url": "https://api.github.com/users/saveriyo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saveriyo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710905,
                "node_id": "LA_kwDOIWuq588AAAABc3-e-Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:XS",
                "name": "size:XS",
                "color": "00ff00",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-21T00:11:19Z",
        "updated_at": "2023-11-21T16:36:33Z",
        "closed_at": "2023-11-21T00:55:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9040",
            "html_url": "https://github.com/run-llama/llama_index/pull/9040",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9040.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9040.patch",
            "merged_at": "2023-11-21T00:55:49Z"
        },
        "body": "# Description\r\n\r\nFixes Azure OpenAI LLM failure when returning empty delta dictionary. Currently, an exception is forced anytime a response isn't provided through the completions API call.\r\n\r\nFixes #8995\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n- [X] Tested using AzureOpenAI and OpenAI with OpenAIAgent\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] My changes generate no new warnings\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9040/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9040/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9039",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9039/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9039/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9039/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9039",
        "id": 2003151314,
        "node_id": "I_kwDOIWuq5853ZanS",
        "number": 9039,
        "title": "[Feature Request]: loosening `dataclasses-json` pinning to allow 0.6",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T22:54:33Z",
        "updated_at": "2023-11-21T01:16:02Z",
        "closed_at": "2023-11-21T01:16:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nAs of 0.9.4, `dataclasses-json` is pinned to stick on minor version 0.5.\r\n\r\nCan we bump this to allow 0.6?\n\n### Reason\n\nGetting dependency resolution issues on my end when using `pip-compile-multiple`\n\n### Value of Feature\n\nModernizing dependencies",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9039/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9039/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9038",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9038/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9038/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9038/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9038",
        "id": 2003146744,
        "node_id": "I_kwDOIWuq5853ZZf4",
        "number": 9038,
        "title": "[Bug]: `pandas` no longer provides `jinja` extra",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T22:50:38Z",
        "updated_at": "2023-11-21T01:16:02Z",
        "closed_at": "2023-11-21T01:16:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI am getting a warning about `pandas` no longer providing the `jinja` extra\r\n\r\nhttps://github.com/run-llama/llama_index/blob/v0.9.4/pyproject.toml#L55\r\n\r\nCan we remove the necessity for the `jinja` extra, or add `jinja` as a first-class dependency?\n\n### Version\n\n0.9.4\n\n### Steps to Reproduce\n\n`pip install -e .`\n\n### Relevant Logs/Tracbacks\n\n```shell\nWARNING: pandas 2.1.3 does not provide the extra 'jinja2'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9038/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9038/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9037",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9037/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9037/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9037/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9037",
        "id": 2003131662,
        "node_id": "I_kwDOIWuq5853ZV0O",
        "number": 9037,
        "title": "[Bug]: Using AzureOpenAI with OpenAIAgent",
        "user": {
            "login": "fchenGT",
            "id": 106608909,
            "node_id": "U_kgDOBlq5DQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/106608909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fchenGT",
            "html_url": "https://github.com/fchenGT",
            "followers_url": "https://api.github.com/users/fchenGT/followers",
            "following_url": "https://api.github.com/users/fchenGT/following{/other_user}",
            "gists_url": "https://api.github.com/users/fchenGT/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fchenGT/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fchenGT/subscriptions",
            "organizations_url": "https://api.github.com/users/fchenGT/orgs",
            "repos_url": "https://api.github.com/users/fchenGT/repos",
            "events_url": "https://api.github.com/users/fchenGT/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fchenGT/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-20T22:38:21Z",
        "updated_at": "2023-11-21T20:48:52Z",
        "closed_at": "2023-11-21T16:31:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nOpenAI as llm for OpenAIAgent works.\r\nAzureOpenAI as llm for OpenAIAgent didn't work.\r\nAzureOpenAI as llm for ReactAgent did work.\n\n### Version\n\n0.9.4\n\n### Steps to Reproduce\n\nThe issue has resurface again with 0.9.4 version of llama index\r\nCode\r\n```\r\nfrom llama_index.llms import AzureOpenAI\r\nfrom llama_index.tools import FunctionTool\r\nazure_llm = AzureOpenAI(\r\n    engine=\"gpt-4\",\r\n    model=\"gpt-4\",\r\n    temperature=0,\r\n    api_key=azure_api_key,\r\n    api_version=azure_api_version,\r\n    azure_endpoint=azure_api_endpoint,\r\n)\r\n\r\ndef multiply(a: int, b: int) -> int:\r\n    \"\"\"Multiply two integers and returns the result integer\"\"\"\r\n    return a * b\r\n\r\n\r\ndef add(a: int, b: int) -> int:\r\n    \"\"\"Add two integers and returns the result integer\"\"\"\r\n    return a + b\r\n\r\n\r\nmultiply_tool = FunctionTool.from_defaults(fn=multiply, name=\"multiply\")\r\n\r\nadd_tool = FunctionTool.from_defaults(fn=add, name=\"add\")\r\n\r\nall_tools = [multiply_tool, add_tool]\r\n\r\nagent = OpenAIAgent.from_tools(all_tools, llm=azure_llm, verbose=True)\r\n\r\nagent.chat(\"What is 2 times 3?\")\r\n```\r\n\n\n### Relevant Logs/Tracbacks\n\n```shell\nStack Trace\r\n\r\n---------------------------------------------------------------------------\r\nBadRequestError                           Traceback (most recent call last)\r\nd:\\Git\\test_llama_index\\notebook.ipynb Cell 18 line 1\r\n----> 1 agent.chat(\"What is 2 times 3?\")\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\callbacks\\utils.py:39, in trace_method.<locals>.decorator.<locals>.wrapper(self, *args, **kwargs)\r\n     37 callback_manager = cast(CallbackManager, callback_manager)\r\n     38 with callback_manager.as_trace(trace_id):\r\n---> 39     return func(self, *args, **kwargs)\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\agent\\openai_agent.py:408, in BaseOpenAIAgent.chat(self, message, chat_history, tool_choice)\r\n    397 @trace_method(\"chat\")\r\n    398 def chat(\r\n    399     self,\r\n   (...)\r\n    402     tool_choice: Union[str, dict] = \"auto\",\r\n    403 ) -> AgentChatResponse:\r\n    404     with self.callback_manager.event(\r\n    405         CBEventType.AGENT_STEP,\r\n    406         payload={EventPayload.MESSAGES: [message]},\r\n    407     ) as e:\r\n--> 408         chat_response = self._chat(\r\n    409             message, chat_history, tool_choice, mode=ChatResponseMode.WAIT\r\n    410         )\r\n    411         assert isinstance(chat_response, AgentChatResponse)\r\n    412         e.on_end(payload={EventPayload.RESPONSE: chat_response})\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\agent\\openai_agent.py:330, in BaseOpenAIAgent._chat(self, message, chat_history, tool_choice, mode)\r\n    326     print(f\"STARTING TURN {ix}\\n---------------\\n\")\r\n    327 llm_chat_kwargs = self._get_llm_chat_kwargs(\r\n    328     openai_tools, current_tool_choice\r\n    329 )\r\n--> 330 agent_chat_response = self._get_agent_response(mode=mode, **llm_chat_kwargs)\r\n    331 if not self._should_continue(self.latest_tool_calls, n_function_calls):\r\n    332     logger.debug(\"Break: should continue False\")\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\agent\\openai_agent.py:292, in BaseOpenAIAgent._get_agent_response(self, mode, **llm_chat_kwargs)\r\n    288 def _get_agent_response(\r\n    289     self, mode: ChatResponseMode, **llm_chat_kwargs: Any\r\n    290 ) -> AGENT_CHAT_RESPONSE_TYPE:\r\n    291     if mode == ChatResponseMode.WAIT:\r\n--> 292         chat_response: ChatResponse = self._llm.chat(**llm_chat_kwargs)\r\n    293         return self._process_message(chat_response)\r\n    294     elif mode == ChatResponseMode.STREAM:\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\llms\\base.py:187, in llm_chat_callback.<locals>.wrap.<locals>.wrapped_llm_chat(_self, messages, **kwargs)\r\n    178 with wrapper_logic(_self) as callback_manager:\r\n    179     event_id = callback_manager.on_event_start(\r\n    180         CBEventType.LLM,\r\n    181         payload={\r\n   (...)\r\n    185         },\r\n    186     )\r\n--> 187     f_return_val = f(_self, messages, **kwargs)\r\n    189     if isinstance(f_return_val, Generator):\r\n    190         # intercept the generator and add a callback to the end\r\n    191         def wrapped_gen() -> ChatResponseGen:\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\llms\\openai.py:185, in OpenAI.chat(self, messages, **kwargs)\r\n    183 else:\r\n    184     chat_fn = completion_to_chat_decorator(self._complete)\r\n--> 185 return chat_fn(messages, **kwargs)\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\llama_index\\llms\\openai.py:238, in OpenAI._chat(self, messages, **kwargs)\r\n    236 def _chat(self, messages: Sequence[ChatMessage], **kwargs: Any) -> ChatResponse:\r\n    237     message_dicts = to_openai_message_dicts(messages)\r\n--> 238     response = self._client.chat.completions.create(\r\n    239         messages=message_dicts,\r\n    240         stream=False,\r\n    241         **self._get_model_kwargs(**kwargs),\r\n    242     )\r\n    243     openai_message = response.choices[0].message\r\n    244     message = from_openai_message(openai_message)\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\openai\\_utils\\_utils.py:299, in required_args.<locals>.inner.<locals>.wrapper(*args, **kwargs)\r\n    297             msg = f\"Missing required argument: {quote(missing[0])}\"\r\n    298     raise TypeError(msg)\r\n--> 299 return func(*args, **kwargs)\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\openai\\resources\\chat\\completions.py:598, in Completions.create(self, messages, model, frequency_penalty, function_call, functions, logit_bias, max_tokens, n, presence_penalty, response_format, seed, stop, stream, temperature, tool_choice, tools, top_p, user, extra_headers, extra_query, extra_body, timeout)\r\n    551 @required_args([\"messages\", \"model\"], [\"messages\", \"model\", \"stream\"])\r\n    552 def create(\r\n    553     self,\r\n   (...)\r\n    596     timeout: float | httpx.Timeout | None | NotGiven = NOT_GIVEN,\r\n    597 ) -> ChatCompletion | Stream[ChatCompletionChunk]:\r\n--> 598     return self._post(\r\n    599         \"/chat/completions\",\r\n    600         body=maybe_transform(\r\n    601             {\r\n    602                 \"messages\": messages,\r\n    603                 \"model\": model,\r\n    604                 \"frequency_penalty\": frequency_penalty,\r\n    605                 \"function_call\": function_call,\r\n    606                 \"functions\": functions,\r\n    607                 \"logit_bias\": logit_bias,\r\n    608                 \"max_tokens\": max_tokens,\r\n    609                 \"n\": n,\r\n    610                 \"presence_penalty\": presence_penalty,\r\n    611                 \"response_format\": response_format,\r\n    612                 \"seed\": seed,\r\n    613                 \"stop\": stop,\r\n    614                 \"stream\": stream,\r\n    615                 \"temperature\": temperature,\r\n    616                 \"tool_choice\": tool_choice,\r\n    617                 \"tools\": tools,\r\n    618                 \"top_p\": top_p,\r\n    619                 \"user\": user,\r\n    620             },\r\n    621             completion_create_params.CompletionCreateParams,\r\n    622         ),\r\n    623         options=make_request_options(\r\n    624             extra_headers=extra_headers, extra_query=extra_query, extra_body=extra_body, timeout=timeout\r\n    625         ),\r\n    626         cast_to=ChatCompletion,\r\n    627         stream=stream or False,\r\n    628         stream_cls=Stream[ChatCompletionChunk],\r\n    629     )\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\openai\\_base_client.py:1055, in SyncAPIClient.post(self, path, cast_to, body, options, files, stream, stream_cls)\r\n   1041 def post(\r\n   1042     self,\r\n   1043     path: str,\r\n   (...)\r\n   1050     stream_cls: type[_StreamT] | None = None,\r\n   1051 ) -> ResponseT | _StreamT:\r\n   1052     opts = FinalRequestOptions.construct(\r\n   1053         method=\"post\", url=path, json_data=body, files=to_httpx_files(files), **options\r\n   1054     )\r\n-> 1055     return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\openai\\_base_client.py:834, in SyncAPIClient.request(self, cast_to, options, remaining_retries, stream, stream_cls)\r\n    825 def request(\r\n    826     self,\r\n    827     cast_to: Type[ResponseT],\r\n   (...)\r\n    832     stream_cls: type[_StreamT] | None = None,\r\n    833 ) -> ResponseT | _StreamT:\r\n--> 834     return self._request(\r\n    835         cast_to=cast_to,\r\n    836         options=options,\r\n    837         stream=stream,\r\n    838         stream_cls=stream_cls,\r\n    839         remaining_retries=remaining_retries,\r\n    840     )\r\n\r\nFile d:\\Git\\test_llama_index\\.venv\\Lib\\site-packages\\openai\\_base_client.py:877, in SyncAPIClient._request(self, cast_to, options, remaining_retries, stream, stream_cls)\r\n    874     # If the response is streamed then we need to explicitly read the response\r\n    875     # to completion before attempting to access the response text.\r\n    876     err.response.read()\r\n--> 877     raise self._make_status_error_from_response(err.response) from None\r\n    878 except httpx.TimeoutException as err:\r\n    879     if retries > 0:\r\n\r\nBadRequestError: Error code: 400 - {'error': {'message': 'Unrecognized request arguments supplied: tool_choice, tools', 'type': 'invalid_request_error', 'param': None, 'code': None}}\r\n```\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9037/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9037/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9036",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9036/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9036/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9036/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9036",
        "id": 2003125296,
        "node_id": "PR_kwDOIWuq585f9ajh",
        "number": 9036,
        "title": "Download modules",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710946,
                "node_id": "LA_kwDOIWuq588AAAABc3-fIg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:L",
                "name": "size:L",
                "color": "eb9500",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T22:31:57Z",
        "updated_at": "2023-11-21T22:10:51Z",
        "closed_at": "2023-11-21T22:10:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9036",
            "html_url": "https://github.com/run-llama/llama_index/pull/9036",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9036.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9036.patch",
            "merged_at": "2023-11-21T22:10:50Z"
        },
        "body": "# Description\r\n\r\nThis PR introduces more flexible downloadable modules\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Todo\r\n\r\n- [ ] proper docs\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9036/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9036/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9035",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9035/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9035/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9035/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9035",
        "id": 2003090060,
        "node_id": "PR_kwDOIWuq585f9S4Q",
        "number": 9035,
        "title": "[BUG] fix #9018. AzureOpenAI logic for determining function call",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T22:01:00Z",
        "updated_at": "2023-11-20T23:00:38Z",
        "closed_at": "2023-11-20T23:00:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9035",
            "html_url": "https://github.com/run-llama/llama_index/pull/9035",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9035.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9035.patch",
            "merged_at": "2023-11-20T23:00:37Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #9018 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Checked notebooks still work after the change; verified that `ContextChatAgent` with `AzureOpenAI` works\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9035/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9035/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9033",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9033/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9033/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9033/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9033",
        "id": 2003027079,
        "node_id": "PR_kwDOIWuq585f9E2O",
        "number": 9033,
        "title": "Fixed similarity fetching for Weaviate hybrid searches",
        "user": {
            "login": "pocketcolin",
            "id": 47982430,
            "node_id": "MDQ6VXNlcjQ3OTgyNDMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/47982430?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pocketcolin",
            "html_url": "https://github.com/pocketcolin",
            "followers_url": "https://api.github.com/users/pocketcolin/followers",
            "following_url": "https://api.github.com/users/pocketcolin/following{/other_user}",
            "gists_url": "https://api.github.com/users/pocketcolin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pocketcolin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pocketcolin/subscriptions",
            "organizations_url": "https://api.github.com/users/pocketcolin/orgs",
            "repos_url": "https://api.github.com/users/pocketcolin/repos",
            "events_url": "https://api.github.com/users/pocketcolin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pocketcolin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-20T21:22:01Z",
        "updated_at": "2023-11-21T00:04:33Z",
        "closed_at": "2023-11-21T00:04:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9033",
            "html_url": "https://github.com/run-llama/llama_index/pull/9033",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9033.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9033.patch",
            "merged_at": "2023-11-21T00:04:33Z"
        },
        "body": "# Description\r\n\r\nWeaviate's hybrid search stores the \"distance\" value in a different property (`score`) than the standard vector search (`distance`). Previously, if you ran a hybrid query on a vector database with Weaviate, all of the scores returned would be `1.0` because that is the default score if `distance == none`. This PR simply updates the logic to fetch the additional `score` property and use it if doing a hybrid query. You can find more about hybrid search [here](https://weaviate.io/developers/weaviate/search/hybrid) and [here](https://weaviate.io/developers/weaviate/api/graphql/search-operators#hybrid) and about distance [here](https://weaviate.io/developers/weaviate/api/graphql/additional-properties#distance).\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] New and existing unit tests pass locally with my changes\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9033/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9033/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9032",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9032/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9032/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9032/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9032",
        "id": 2003014944,
        "node_id": "PR_kwDOIWuq585f9CMc",
        "number": 9032,
        "title": "`OpenAILike` ability to not infer `max_tokens`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            },
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            },
            {
                "id": 6232710935,
                "node_id": "LA_kwDOIWuq588AAAABc3-fFw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:M",
                "name": "size:M",
                "color": "ebb800",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-20T21:12:38Z",
        "updated_at": "2023-11-21T16:37:41Z",
        "closed_at": "2023-11-21T16:37:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9032",
            "html_url": "https://github.com/run-llama/llama_index/pull/9032",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9032.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9032.patch",
            "merged_at": "2023-11-21T16:37:40Z"
        },
        "body": "# Description\r\n\r\nPart 2 of the decomposition of https://github.com/run-llama/llama_index/pull/8241.\r\n- Ability to not infer `max_tokens` using `OpenAI` or its subclasses\r\n- Cleans up `OpenAILike` docstring and `description`s\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9032/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9032/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9031",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9031/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9031/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9031/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9031",
        "id": 2002986886,
        "node_id": "PR_kwDOIWuq585f88Fb",
        "number": 9031,
        "title": "Fixing `mypy` for Python 3.8",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T20:52:28Z",
        "updated_at": "2023-11-20T21:18:13Z",
        "closed_at": "2023-11-20T21:18:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9031",
            "html_url": "https://github.com/run-llama/llama_index/pull/9031",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9031.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9031.patch",
            "merged_at": "2023-11-20T21:18:07Z"
        },
        "body": "# Description\r\n\r\nA bit ago I made https://github.com/run-llama/llama_index/pull/8107.  It looks like again there were typing regressions for 3.8.\r\n\r\nThis PR ensures this won't happen again by setting `python_version` for `mypy`.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9031/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9031/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9030",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9030/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9030/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9030/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9030",
        "id": 2002958552,
        "node_id": "PR_kwDOIWuq585f8139",
        "number": 9030,
        "title": "Make PromptTemplate.partial_format Idempotent",
        "user": {
            "login": "CalebCourier",
            "id": 13314870,
            "node_id": "MDQ6VXNlcjEzMzE0ODcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/13314870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CalebCourier",
            "html_url": "https://github.com/CalebCourier",
            "followers_url": "https://api.github.com/users/CalebCourier/followers",
            "following_url": "https://api.github.com/users/CalebCourier/following{/other_user}",
            "gists_url": "https://api.github.com/users/CalebCourier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CalebCourier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CalebCourier/subscriptions",
            "organizations_url": "https://api.github.com/users/CalebCourier/orgs",
            "repos_url": "https://api.github.com/users/CalebCourier/repos",
            "events_url": "https://api.github.com/users/CalebCourier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CalebCourier/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T20:31:32Z",
        "updated_at": "2023-11-20T20:40:10Z",
        "closed_at": "2023-11-20T20:40:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9030",
            "html_url": "https://github.com/run-llama/llama_index/pull/9030",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9030.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9030.patch",
            "merged_at": "2023-11-20T20:40:10Z"
        },
        "body": "# Description\r\n\r\nRe-assigned PromptTemplate.output_parser to self after the deepcopy is performed in PromptTemplate.partial_format.\r\n\r\n\r\nFixes # (issue)\r\nhttps://github.com/run-llama/llama_index/issues/9029\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ran existing tests to assure no regressions\r\n- [x] Ran notebook from https://docs.llamaindex.ai/en/stable/examples/output_parsing/GuardrailsDemo.html with additional logs to show GuardrailsOutputParser.parse is now being called\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9030/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9030/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9029",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9029/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9029/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9029/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9029",
        "id": 2002953519,
        "node_id": "I_kwDOIWuq5853YqUv",
        "number": 9029,
        "title": "[Bug]: Output parser is not called during RetrieverQueryEngine.query",
        "user": {
            "login": "CalebCourier",
            "id": 13314870,
            "node_id": "MDQ6VXNlcjEzMzE0ODcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/13314870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CalebCourier",
            "html_url": "https://github.com/CalebCourier",
            "followers_url": "https://api.github.com/users/CalebCourier/followers",
            "following_url": "https://api.github.com/users/CalebCourier/following{/other_user}",
            "gists_url": "https://api.github.com/users/CalebCourier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CalebCourier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CalebCourier/subscriptions",
            "organizations_url": "https://api.github.com/users/CalebCourier/orgs",
            "repos_url": "https://api.github.com/users/CalebCourier/repos",
            "events_url": "https://api.github.com/users/CalebCourier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CalebCourier/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T20:27:46Z",
        "updated_at": "2023-11-20T20:35:52Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen running examples of output parsers like the one found [here](https://docs.llamaindex.ai/en/stable/examples/output_parsing/GuardrailsDemo.html), the parse method on the output parser assigned to the prompt is never called.\n\n### Version\n\n0.8.62\n\n### Steps to Reproduce\n\n1\\. Create environment with notebook containing example: https://docs.llamaindex.ai/en/stable/examples/output_parsing/GuardrailsDemo.html\r\n\r\n2a. Print the guard state to show that GuardrailsOutputParser.parser was never called:\r\n```py\r\nfrom rich import print as rich_print\r\nrich_print(guard.state)\r\n```\r\n\r\n2b. Additionally can add print statements in StructuredLLMPredictor to show that prompt.output_parser is None even though it was assigned in the PromptTemplate.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9029/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9029/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9028",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9028/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9028/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9028/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9028",
        "id": 2002750631,
        "node_id": "I_kwDOIWuq5853X4yn",
        "number": 9028,
        "title": "[Question]: Are we able to set system prompt for GPT-4? ",
        "user": {
            "login": "staypo",
            "id": 91622088,
            "node_id": "U_kgDOBXYKyA",
            "avatar_url": "https://avatars.githubusercontent.com/u/91622088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/staypo",
            "html_url": "https://github.com/staypo",
            "followers_url": "https://api.github.com/users/staypo/followers",
            "following_url": "https://api.github.com/users/staypo/following{/other_user}",
            "gists_url": "https://api.github.com/users/staypo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/staypo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/staypo/subscriptions",
            "organizations_url": "https://api.github.com/users/staypo/orgs",
            "repos_url": "https://api.github.com/users/staypo/repos",
            "events_url": "https://api.github.com/users/staypo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/staypo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T18:17:25Z",
        "updated_at": "2023-11-20T18:18:37Z",
        "closed_at": "2023-11-20T18:18:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI cannot find any doc about setting system prompt in this version. Are we still supporting setting system prompt? ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9028/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9028/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9027",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9027/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9027/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9027/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9027",
        "id": 2002630647,
        "node_id": "PR_kwDOIWuq585f7uEH",
        "number": 9027,
        "title": "[DRAFT]: Add progress bar for file loaders",
        "user": {
            "login": "Muhtasham",
            "id": 20128202,
            "node_id": "MDQ6VXNlcjIwMTI4MjAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/20128202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Muhtasham",
            "html_url": "https://github.com/Muhtasham",
            "followers_url": "https://api.github.com/users/Muhtasham/followers",
            "following_url": "https://api.github.com/users/Muhtasham/following{/other_user}",
            "gists_url": "https://api.github.com/users/Muhtasham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Muhtasham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Muhtasham/subscriptions",
            "organizations_url": "https://api.github.com/users/Muhtasham/orgs",
            "repos_url": "https://api.github.com/users/Muhtasham/repos",
            "events_url": "https://api.github.com/users/Muhtasham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Muhtasham/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6232710919,
                "node_id": "LA_kwDOIWuq588AAAABc3-fBw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/size:S",
                "name": "size:S",
                "color": "77b800",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T16:57:54Z",
        "updated_at": "2023-11-21T22:43:41Z",
        "closed_at": "2023-11-21T22:43:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9027",
            "html_url": "https://github.com/run-llama/llama_index/pull/9027",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9027.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9027.patch",
            "merged_at": "2023-11-21T22:43:41Z"
        },
        "body": "# Description\r\n\r\nProgress bar for all loaders added to `load_data`, planning to extend to other loaders too.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9027/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9027/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9026",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9026/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9026/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9026/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9026",
        "id": 2002610737,
        "node_id": "PR_kwDOIWuq585f7pt2",
        "number": 9026,
        "title": "More precise testing `OpenAILike`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            },
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T16:46:25Z",
        "updated_at": "2023-11-20T20:39:02Z",
        "closed_at": "2023-11-20T20:39:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9026",
            "html_url": "https://github.com/run-llama/llama_index/pull/9026",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9026.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9026.patch",
            "merged_at": "2023-11-20T20:39:01Z"
        },
        "body": "# Description\r\n\r\nMigrated a subset of the test changes from https://github.com/run-llama/llama_index/pull/8241\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9026/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9026/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9025",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9025/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9025/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9025/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9025",
        "id": 2002561748,
        "node_id": "PR_kwDOIWuq585f7e83",
        "number": 9025,
        "title": "fix prompt helper error",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-20T16:20:03Z",
        "updated_at": "2023-11-20T16:33:05Z",
        "closed_at": "2023-11-20T16:33:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9025",
            "html_url": "https://github.com/run-llama/llama_index/pull/9025",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9025.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9025.patch",
            "merged_at": "2023-11-20T16:33:04Z"
        },
        "body": "# Description\r\n\r\nWhen getting the token counts of chat messages, partial formatting causes some issues. If both query_str and context_str are in the same message, but only query_str is formatted, it will attempt to format the message with incomplete args and cause an error.\r\n\r\nIn the case of this happening, unused vars will get formated with the template var itself (essentially skipping actual formatting).\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/9020\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9025/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9025/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9024",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9024/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9024/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9024/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9024",
        "id": 2002364536,
        "node_id": "I_kwDOIWuq5853Wah4",
        "number": 9024,
        "title": "[Bug]: ZeroDivisionError: division by zero",
        "user": {
            "login": "sarathsurpur",
            "id": 42287472,
            "node_id": "MDQ6VXNlcjQyMjg3NDcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/42287472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarathsurpur",
            "html_url": "https://github.com/sarathsurpur",
            "followers_url": "https://api.github.com/users/sarathsurpur/followers",
            "following_url": "https://api.github.com/users/sarathsurpur/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarathsurpur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarathsurpur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarathsurpur/subscriptions",
            "organizations_url": "https://api.github.com/users/sarathsurpur/orgs",
            "repos_url": "https://api.github.com/users/sarathsurpur/repos",
            "events_url": "https://api.github.com/users/sarathsurpur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarathsurpur/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-20T14:45:34Z",
        "updated_at": "2023-11-21T02:45:48Z",
        "closed_at": "2023-11-20T15:08:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI am implement RAG concept using hybrid approach, initially loading the already created vector db using Qdrant db and tried to load the bm25 using this getting below error \r\n```\r\n\r\n# retireve the top 10 most similar nodes using embeddings\r\nvector_retriever = VectorStoreIndex.from_vector_store(\r\n            service_context = service_context,\r\n            vector_store = vector_store\r\n        )\r\n\r\nBM25Retriever.from_defaults(docstore=vector_retriever.docstore, similarity_top_k=5 )\r\n```\r\n![image](https://github.com/run-llama/llama_index/assets/42287472/db98a280-8067-40e1-b199-15eb7c2e7ca8)\r\n    48             nd[word] = 1\r\n     50     self.corpus_size += 1\r\n---> 52 self.avgdl = num_doc / self.corpus_size\r\n     53 return nd\r\n\r\nZeroDivisionError: division by zero\r\n\n\n### Version\n\n0.9.4\n\n### Steps to Reproduce\n\n1. Load the data from Qdrant db \r\n2. Use the vector retriever with docstore to load bm25\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9024/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9024/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9022",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9022/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9022/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9022/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9022",
        "id": 2002303996,
        "node_id": "I_kwDOIWuq5853WLv8",
        "number": 9022,
        "title": "[Question]: AttributeError: 'NoneType' object has no attribute 'replace' When Using Hybrid Search with vector_store.query",
        "user": {
            "login": "Leonschmitt",
            "id": 28598834,
            "node_id": "MDQ6VXNlcjI4NTk4ODM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/28598834?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Leonschmitt",
            "html_url": "https://github.com/Leonschmitt",
            "followers_url": "https://api.github.com/users/Leonschmitt/followers",
            "following_url": "https://api.github.com/users/Leonschmitt/following{/other_user}",
            "gists_url": "https://api.github.com/users/Leonschmitt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Leonschmitt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Leonschmitt/subscriptions",
            "organizations_url": "https://api.github.com/users/Leonschmitt/orgs",
            "repos_url": "https://api.github.com/users/Leonschmitt/repos",
            "events_url": "https://api.github.com/users/Leonschmitt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Leonschmitt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T14:16:21Z",
        "updated_at": "2023-11-20T14:48:54Z",
        "closed_at": "2023-11-20T14:48:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi guys, I am encountering an AttributeError when attempting to perform a hybrid search using `vector_store.query `in a project utilizing Weaviate as a vector store. The error occurs when I try to execute a query with the VectorStoreQuery object. I am using Weaviate as a Docker container in my setup. I ve tried this [https://gpt-index.readthedocs.io/en/latest/examples/low_level/oss_ingestion_retrieval.html](url) tutorial with  \"hybrid as query mode and the i ve got the error. When i tried this tutorial with \"default\" query mode everything seems to work normal.\r\n\r\nError Message: `AttributeError: 'NoneType' object has no attribute 'replace'`\r\n\r\nSteps to Reproduce:\r\n\r\n```\r\nEMBEDDING_MODEL = \"intfloat/multilingual-e5-large\"\r\n\r\nset_global_tokenizer(\r\n  AutoTokenizer.from_pretrained(EMBEDDING_MODEL).encode\r\n)\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings(\r\n    model_name = EMBEDDING_MODEL,\r\n    model_kwargs = {'device': 'cuda'\r\n....\r\n```\r\n```\r\n\r\n# construct vector store\r\nvector_store = WeaviateVectorStore(weaviate_client = client)\r\n\r\n# setting up the storage for the embeddings\r\nstorage_context = StorageContext.from_defaults(vector_store = vector_store)\r\n\r\n\r\n# TODO add cache\r\npipeline = IngestionPipeline(\r\n    transformations=[\r\n        SentenceSplitter(chunk_size=128, chunk_overlap=30),\r\n        TitleExtractor(llm_predictor=llm_predictor,nodes=2),\r\n        LangchainEmbedding(HuggingFaceEmbeddings(\r\n    model_name = EMBEDDING_MODEL,\r\n    model_kwargs = {'device': 'cuda'}\r\n))\r\n    ], vector_store=vector_store,\r\n)\r\n# Ingest directly into a vector db\r\npipeline.run(documents=docs)\r\n# Create your index\r\nfrom llama_index import VectorStoreIndex\r\nindex = VectorStoreIndex.from_vector_store(vector_store, service_context=service_context)\r\n\r\n```\r\n\r\nAttempt to perform a hybrid search using vector_store.query as shown in the following code snippet:\r\n\r\n```\r\nfrom llama_index.vector_stores import VectorStoreQuery\r\n\r\nquery_mode = \"hybrid\"\r\nquery_str = \"Tell me about working hours\"\r\nquery_embedding = embed_model.get_query_embedding(query_str)\r\nvector_store_query = VectorStoreQuery(\r\n    query_embedding=query_embedding, similarity_top_k=2, mode=query_mode, alpha=0.0\r\n)  \r\nquery_result = vector_store.query(vector_store_query)\r\nprint(query_result.nodes[0].get_content())\r\n```\r\n\r\nError Traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<your_script_name>.py\", line 1, in <module>\r\n    query_result = vector_store.query(vector_store_query)\r\n  File \"weaviate.py\", line 281, in query\r\n    query_result = query_builder.do()\r\n  File \"get.py\", line 1903, in do\r\n    return super().do()\r\n  File \"filter.py\", line 119, in do\r\n    query = self.build()\r\n  File \"get.py\", line 1768, in build\r\n    query += str(self._hybrid)\r\n  File \"get.py\", line 74, in __str__\r\n    ret = f\"query: {util._sanitize_str(self.query)}\"\r\n  File \"util.py\", line 641, in _sanitize_str\r\n    value = strip_newlines(value)\r\n  File \"util.py\", line 624, in strip_newlines\r\n    return s.replace(\"\\n\", \" \")\r\n\r\nAttributeError: 'NoneType' object has no attribute 'replace'\r\n\r\n```\r\nExpected Behavior:\r\nThe query should execute without errors and return relevant results.\r\n\r\nActual Behavior:\r\nExecuting the query results in an AttributeError within the strip_newlines function of the weaviate.util module.\r\n\r\nBTW this works fine.\r\n```\r\nquery_engine = index.as_query_engine(\r\n    vector_store_query_mode=\"hybrid\", similarity_top_k=2\r\n)\r\nresponse = query_engine.query(\"Tell me about working hour?\")\r\nprint(response)\r\n```\r\n\r\n**Did I missed something or is something missing in the Tutorial or is it a bug**\r\n\r\nCan anyone relate to this or help me to resolve this error. Thanks in advance",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9022/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9022/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9021",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9021/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9021/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9021/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9021",
        "id": 2002283884,
        "node_id": "I_kwDOIWuq5853WG1s",
        "number": 9021,
        "title": "[Feature Request]: add from_existing method to OpenAIAssistantAgent",
        "user": {
            "login": "ton77v",
            "id": 50094687,
            "node_id": "MDQ6VXNlcjUwMDk0Njg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/50094687?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ton77v",
            "html_url": "https://github.com/ton77v",
            "followers_url": "https://api.github.com/users/ton77v/followers",
            "following_url": "https://api.github.com/users/ton77v/following{/other_user}",
            "gists_url": "https://api.github.com/users/ton77v/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ton77v/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ton77v/subscriptions",
            "organizations_url": "https://api.github.com/users/ton77v/orgs",
            "repos_url": "https://api.github.com/users/ton77v/repos",
            "events_url": "https://api.github.com/users/ton77v/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ton77v/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-20T14:06:16Z",
        "updated_at": "2023-12-12T22:24:45Z",
        "closed_at": "2023-12-12T22:24:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nOpenAIAssistantAgent could currently be initialized using from_new class method.\r\n\r\nThis method performs API call to create a new assistant. Later on we access self._assistant.id to execute Run\r\n\r\nI propose adding a new method, e.g. \"from_existing\" with assistant_id (string) as an only parameter. Instead of storing the whole Assistant instance we could only store this ID; it will be [returned by \"create\" API endpoint](https://platform.openai.com/docs/api-reference/assistants/createAssistant)\n\n### Reason\n\nAt the moment the only solution to achieve this functionality is to subclass OpenAIAssistantAgent and implement additional method, mocking the self._assistant to use the .id for Runs or [retrieving the whole assistant](https://platform.openai.com/docs/api-reference/assistants/getAssistant)\n\n### Value of Feature\n\nWe will perform less API calls and instead of creating a new Assistant every time, we re-use existing one saving time and resources. If Open AI limits the Assistants number this will be especially useful.\r\n\r\nThe same functionality is already [implemented by LangChain](https://python.langchain.com/docs/modules/agents/agent_types/openai_assistants#using-existing-assistant)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9021/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9021/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9020",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9020/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9020/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9020/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9020",
        "id": 2002024547,
        "node_id": "I_kwDOIWuq5853VHhj",
        "number": 9020,
        "title": "[Bug]: Using ChatPromptTemplate with context_str no longer works in 0.9 because of faulty _get_available_chunk_size logic",
        "user": {
            "login": "martinkozle",
            "id": 48385621,
            "node_id": "MDQ6VXNlcjQ4Mzg1NjIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48385621?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martinkozle",
            "html_url": "https://github.com/martinkozle",
            "followers_url": "https://api.github.com/users/martinkozle/followers",
            "following_url": "https://api.github.com/users/martinkozle/following{/other_user}",
            "gists_url": "https://api.github.com/users/martinkozle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martinkozle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martinkozle/subscriptions",
            "organizations_url": "https://api.github.com/users/martinkozle/orgs",
            "repos_url": "https://api.github.com/users/martinkozle/repos",
            "events_url": "https://api.github.com/users/martinkozle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martinkozle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-20T11:50:24Z",
        "updated_at": "2023-11-20T16:33:05Z",
        "closed_at": "2023-11-20T16:33:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nThe behavior of `ChatPromptTemplate` in llama_index 0.9 has changed so that it no longer works with context_str. It fails in the function for checking available chunk size. In version 0.9 a commit was added (95e77ab9e1e61719e7e759523638cbb1b980417a) which does custom logic for this specific class, which I believe is faulty.\r\n\r\nThe specific code snippet that errors is in `llama_index/indices/prompt_helper.py`:\r\n\r\n```python\r\n# get string variables (if any)\r\ntemplate_vars = [\r\n    var\r\n    for _, var, _, _ in Formatter().parse(str(message))\r\n    if var is not None\r\n]\r\n\r\n# figure out which variables are partially formatted\r\nused_vars = {}\r\nfor var_name, val in prompt.kwargs.items():\r\n    if var_name in template_vars:\r\n        used_vars[var_name] = val\r\n\r\n# format partial message\r\nif len(used_vars) > 0 and partial_message.content is not None:\r\n    partial_message.content = partial_message.content.format(\r\n        **used_vars\r\n    )\r\n```\r\n\r\nI kept trying to understand what this part of code is trying to do, and according to the code and the comment I could only guess that it is trying to replace only parts of the prompt string. But this is not how the Python format method works.\r\n\r\nFor example:\r\n\r\n```python\r\n>>> \"{arg1} {arg2}\".format(arg1=5)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nKeyError: 'arg2'\r\n```\r\n\r\nIf this is truly what the code is supposed to do then I suggest adding a default value to `used_vars` like so:\r\n\r\n```python\r\n# get string variables (if any)\r\ntemplate_vars = [\r\n    var\r\n    for _, var, _, _ in Formatter().parse(str(message))\r\n    if var is not None\r\n]\r\n\r\n# figure out which variables are partially formatted\r\nused_vars = {template_var: f\"{{{template_var}}}\" for template_var in template_vars}\r\nfor var_name, val in prompt.kwargs.items():\r\n    if var_name in template_vars:\r\n        used_vars[var_name] = val\r\n\r\n# format partial message\r\nif len(used_vars) > 0 and partial_message.content is not None:\r\n    partial_message.content = partial_message.content.format(\r\n        **used_vars\r\n    )\r\n```\r\n\r\nThis change would replace the fields that do not have values back to their unformatted selves.\r\nBut since this function is trying to estimate the length, then they could maybe be replaced with any dummy value that would be an estimate.\r\n\r\nIn any case, some default value has to be given to the missing fields so it doesn't error out. If you have a suggestion what this could be I can submit a PR.\r\n\n\n### Version\n\n0.9\n\n### Steps to Reproduce\n\nI tried to create a mock code that doesn't depend on anything else:\r\n\r\n```python\r\nimport os\r\n\r\nfrom llama_index import ChatPromptTemplate, PromptTemplate, ServiceContext\r\nfrom llama_index.llms.base import ChatMessage, MessageRole\r\nfrom llama_index.llms.mock import MockLLM\r\nfrom llama_index.response_synthesizers import get_response_synthesizer\r\nfrom llama_index.schema import NodeWithScore, TextNode\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"...\"\r\n\r\nPROMPT_TEMPLATE_STR = \"\"\"\r\nSYSTEM\r\n{context_str}\r\nQuery: {query_str}\r\nAnswer:\r\n\"\"\"\r\n\r\nCHAT_PROMPT_TEMPLATE = \"\"\"\r\nSYSTEM\r\n__&&__\r\n{context_str}\r\nQuery: {query_str}\r\nAnswer:\r\n\"\"\"\r\n\r\n\r\nprompt_template = PromptTemplate(PROMPT_TEMPLATE_STR)\r\n\r\nsystem_user_delimiter = \"__&&__\"\r\nsystem_prompt, user_prompt = CHAT_PROMPT_TEMPLATE.split(system_user_delimiter)\r\nmessage_templates = [\r\n    ChatMessage(content=system_prompt, role=MessageRole.SYSTEM),\r\n    ChatMessage(content=user_prompt, role=MessageRole.USER),\r\n]\r\nchat_prompt_template = ChatPromptTemplate(message_templates=message_templates)\r\n\r\n\r\nservice_context = ServiceContext.from_defaults(llm=MockLLM(10))\r\nmock_nodes = [NodeWithScore(node=TextNode(text=\"abc\"))]\r\n\r\nchat_prompt_synthesizer = get_response_synthesizer(\r\n    service_context=service_context,\r\n    text_qa_template=prompt_template,\r\n)\r\nprompt_response = chat_prompt_synthesizer.synthesize(query=\"...\", nodes=mock_nodes)\r\nprint(prompt_response)\r\nprint(\"=\" * 10)\r\n\r\nchat_prompt_synthesizer = get_response_synthesizer(\r\n    service_context=service_context, text_qa_template=chat_prompt_template\r\n)\r\nchat_prompt_response = chat_prompt_synthesizer.synthesize(query=\"...\", nodes=mock_nodes)\r\nprint(chat_prompt_response)\r\n```\r\n\r\nIn llama_index 0.8 it outputs:\r\n\r\n```\r\ntext text text text text text text text text text\r\n==========\r\ntext text text text text text text text text text\r\n```\r\n\r\nWhile in llama_index 0.9 it errors with (paths are redacted):\r\n\r\n```\r\ntext text text text text text text text text text\r\n==========\r\nTraceback (most recent call last):\r\n  File \".../scripts/bug_report_example.py\", line 53, in <module>\r\n    chat_prompt_response = chat_prompt_synthesizer.synthesize(query=\"...\", nodes=mock_nodes)\r\n  File \".../.venv/lib/python3.10/site-packages/llama_index/response_synthesizers/base.py\", line 146, in synthesize\r\n    response_str = self.get_response(\r\n  File \".../.venv/lib/python3.10/site-packages/llama_index/response_synthesizers/compact_and_refine.py\", line 38, in get_response\r\n    return super().get_response(\r\n  File \".../.venv/lib/python3.10/site-packages/llama_index/response_synthesizers/refine.py\", line 127, in get_response\r\n    response = self._give_response_single(\r\n  File \".../.venv/lib/python3.10/site-packages/llama_index/response_synthesizers/refine.py\", line 169, in _give_response_single\r\n    text_chunks = self._service_context.prompt_helper.repack(\r\n  File \".../.venv/lib/python3.10/site-packages/llama_index/indices/prompt_helper.py\", line 270, in repack\r\n    text_splitter = self.get_text_splitter_given_prompt(\r\n  File \".../.venv/lib/python3.10/site-packages/llama_index/indices/prompt_helper.py\", line 228, in get_text_splitter_given_prompt\r\n    chunk_size = self._get_available_chunk_size(\r\n  File \".../.venv/lib/python3.10/site-packages/llama_index/indices/prompt_helper.py\", line 198, in _get_available_chunk_size\r\n    partial_message.content = partial_message.content.format(\r\nKeyError: 'context_str'\r\n```\r\n\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9020/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9020/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9019",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9019/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9019/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9019/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9019",
        "id": 2002010238,
        "node_id": "I_kwDOIWuq5853VEB-",
        "number": 9019,
        "title": "[Question]: How to speed up index loading time",
        "user": {
            "login": "SCUT-ChenBD",
            "id": 49072146,
            "node_id": "MDQ6VXNlcjQ5MDcyMTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/49072146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SCUT-ChenBD",
            "html_url": "https://github.com/SCUT-ChenBD",
            "followers_url": "https://api.github.com/users/SCUT-ChenBD/followers",
            "following_url": "https://api.github.com/users/SCUT-ChenBD/following{/other_user}",
            "gists_url": "https://api.github.com/users/SCUT-ChenBD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SCUT-ChenBD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SCUT-ChenBD/subscriptions",
            "organizations_url": "https://api.github.com/users/SCUT-ChenBD/orgs",
            "repos_url": "https://api.github.com/users/SCUT-ChenBD/repos",
            "events_url": "https://api.github.com/users/SCUT-ChenBD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SCUT-ChenBD/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-20T11:43:29Z",
        "updated_at": "2023-11-20T16:08:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIn actual use, I found that the process of loading the index takes a long time, which greatly affects the real-time performance of the retrieval. Is there any way to speed it up? Or can it be converted into other more efficient storage methods (faiss, pgvector)?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9019/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9019/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9018",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9018/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9018/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9018/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9018",
        "id": 2001472615,
        "node_id": "I_kwDOIWuq5853TAxn",
        "number": 9018,
        "title": "[Bug]: ContextChatEngine hit a model error on the second chat message when using AzureOpenAI",
        "user": {
            "login": "mingqxu7",
            "id": 50094870,
            "node_id": "MDQ6VXNlcjUwMDk0ODcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/50094870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mingqxu7",
            "html_url": "https://github.com/mingqxu7",
            "followers_url": "https://api.github.com/users/mingqxu7/followers",
            "following_url": "https://api.github.com/users/mingqxu7/following{/other_user}",
            "gists_url": "https://api.github.com/users/mingqxu7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mingqxu7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mingqxu7/subscriptions",
            "organizations_url": "https://api.github.com/users/mingqxu7/orgs",
            "repos_url": "https://api.github.com/users/mingqxu7/repos",
            "events_url": "https://api.github.com/users/mingqxu7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mingqxu7/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-20T06:36:36Z",
        "updated_at": "2023-11-22T06:30:55Z",
        "closed_at": "2023-11-20T23:00:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI am using stream_chat() and the first message is processed correctly.  Then the second message hits the model error:\r\n\r\n2023-11-19 21:38:11,986 - 11796279296 - types.py-types:116 - WARNING: Encountered exception writing response to history: Error code: 400 - {'error': {'message': \"Additional properties are not allowed ('tool_calls' was unexpected) - 'messages.2'\", 'type': 'invalid_request_error', 'param': None, 'code': None}}\r\n\r\nGoing further back and I see that the request does have a 'tool_calls': [] in the messages array:\r\n\r\n2023-11-19 21:38:11,583 - 11796279296 - _base_client.py-_base_client:422 - DEBUG: Request options: {'method': 'post', 'url': '/deployments/gpt-35-turbo-16k/chat/completions', 'headers': {'api-key': 'ac3099f837a54de5bdcd00ec0d1f0aac'}, 'files': None, 'json_data': {'messages': [{'role': <MessageRole.SYSTEM: 'system'>, 'content': 'Context information is below.\\n--------------------\\n<context string\u2026>.\\n--------------------\\n'}, {'role': <MessageRole.USER: 'user'>, 'content': '<user question 1>'}, {'role': <MessageRole.ASSISTANT: 'assistant'>, 'content': 'assistant response 1', 'tool_calls': []}, {'role': <MessageRole.USER: 'user'>, 'content': '<user question 2'}], 'model': 'gpt-35-turbo-16k', 'stream': True, 'temperature': 0.1}}\r\n**********\r\n\r\nThis is added to the memory from chat_engine/types.py in the StreamingAgentChatResponse class method: write_response_to_history():\r\n\r\n    def write_response_to_history(self, memory: BaseMemory) -> None:\r\n        if self.chat_stream is None:\r\n            raise ValueError(\r\n                \"chat_stream is None. Cannot write to history without chat_stream.\"\r\n            )\r\n\r\n        # try/except to prevent hanging on error\r\n        try:\r\n            final_text = \"\"\r\n            for chat in self.chat_stream:\r\n                self._is_function = is_function(chat.message)\r\n                self.put_in_queue(chat.delta)\r\n                final_text += chat.delta or \"\"\r\n            if self._is_function is not None:  # if loop has gone through iteration\r\n                # NOTE: this is to handle the special case where we consume some of the\r\n                # chat stream, but not all of it (e.g. in react agent)\r\n                chat.message.content = final_text.strip()  # final message\r\n                memory.put(chat.message)\r\n                ^^^^^^^^^^^^\r\n \r\nMy temperary fix is to delete the 'tool_calls' from the additional_kwargs of the response added to the chat_history, while waiting for a proper fix.  \n\n### Version\n\n0.9.3.post1\n\n### Steps to Reproduce\n\nUse ContextChatEngine sample code and use stream_chat()\r\n\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9018/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9018/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9017",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9017/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9017/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9017/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9017",
        "id": 2001458900,
        "node_id": "PR_kwDOIWuq585f3vxA",
        "number": 9017,
        "title": "[version] bump version to 0.9.4 ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-20T06:27:17Z",
        "updated_at": "2023-11-20T07:06:09Z",
        "closed_at": "2023-11-20T07:06:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9017",
            "html_url": "https://github.com/run-llama/llama_index/pull/9017",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9017.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9017.patch",
            "merged_at": "2023-11-20T07:06:08Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9017/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9017/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9016",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9016/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9016/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9016/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9016",
        "id": 2001451705,
        "node_id": "I_kwDOIWuq5853S7q5",
        "number": 9016,
        "title": "[Question]: KnowledgeGraphIndex just support GGUF and OPENAI?",
        "user": {
            "login": "JinSeoung-Oh",
            "id": 78573459,
            "node_id": "MDQ6VXNlcjc4NTczNDU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/78573459?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JinSeoung-Oh",
            "html_url": "https://github.com/JinSeoung-Oh",
            "followers_url": "https://api.github.com/users/JinSeoung-Oh/followers",
            "following_url": "https://api.github.com/users/JinSeoung-Oh/following{/other_user}",
            "gists_url": "https://api.github.com/users/JinSeoung-Oh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JinSeoung-Oh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JinSeoung-Oh/subscriptions",
            "organizations_url": "https://api.github.com/users/JinSeoung-Oh/orgs",
            "repos_url": "https://api.github.com/users/JinSeoung-Oh/repos",
            "events_url": "https://api.github.com/users/JinSeoung-Oh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JinSeoung-Oh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-20T06:21:02Z",
        "updated_at": "2023-11-20T07:49:33Z",
        "closed_at": "2023-11-20T07:43:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi, I have a question about KnowledgeGraphIndex\r\nWhen I build KnowledgeGraph, LlamaCPP(with GGUF) and OPENAI model has no problem\r\nbut with huggingface model, it show AttributeError. It said this object has no attribute 'metadata'\r\n\r\nI understood it form line 120 in llama_index/llm_predictor/base.py\r\nI tried so many model from huggingface model it always show this error\r\nSo, I just want to know KnowledgeGraphIndex just support GGUF and OPENAI or not\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9016/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9016/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9015",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9015/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9015/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9015/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/9015",
        "id": 2001334508,
        "node_id": "I_kwDOIWuq5853SfDs",
        "number": 9015,
        "title": "[Question]: Retrieve returns nodes that has nothing common with query text.",
        "user": {
            "login": "SuperMasterBlasterLaser",
            "id": 8684688,
            "node_id": "MDQ6VXNlcjg2ODQ2ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8684688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SuperMasterBlasterLaser",
            "html_url": "https://github.com/SuperMasterBlasterLaser",
            "followers_url": "https://api.github.com/users/SuperMasterBlasterLaser/followers",
            "following_url": "https://api.github.com/users/SuperMasterBlasterLaser/following{/other_user}",
            "gists_url": "https://api.github.com/users/SuperMasterBlasterLaser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SuperMasterBlasterLaser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SuperMasterBlasterLaser/subscriptions",
            "organizations_url": "https://api.github.com/users/SuperMasterBlasterLaser/orgs",
            "repos_url": "https://api.github.com/users/SuperMasterBlasterLaser/repos",
            "events_url": "https://api.github.com/users/SuperMasterBlasterLaser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SuperMasterBlasterLaser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-20T04:20:07Z",
        "updated_at": "2023-11-20T04:49:33Z",
        "closed_at": "2023-11-20T04:39:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nHello everyone.\r\n\r\nI'm trying to check what kind of nodes are being retrieved by my query text like this:\r\n\r\n```python\r\nllm = OpenAI(temperature=0.1, model=\"gpt-4\")\r\nservice_context = ServiceContext.from_defaults(llm=llm)\r\nstorage_context = StorageContext.from_defaults(persist_dir='./index/combined')\r\nindex = load_index_from_storage(storage_context=storage_context, service_context=service_context)\r\n\r\nretriever = index.as_retriever(similarity_top_k=2)\r\n\r\nquery_text = \"LOLLOLOL\"\r\n\r\nretrieved_nodes = retriever.retrieve(text)\r\n\r\nfor node in retrieved_nodes:\r\n    print(node.node_id)\r\n    print(node.score)\r\n    print()\r\n```\r\nIt returned to me this:\r\n\r\n    41a167ee-bb9b-4f85-96a0-9a9f8b39dd6a\r\n    0.769665012950761\r\n    \r\n    a599a73f-737e-4305-98d7-c605118c5090\r\n    0.7669407729248501\r\n\r\n\r\nThe problem is that i sent random text which should have no conneciton to any of those nodes, and it still returns nodes with high scores.\r\n\r\nThe main idea is to prevent application from answering if user asks something that is not on knowledge vector index. Then why this is happening?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9015/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9015/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9014",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9014/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9014/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9014/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9014",
        "id": 2001315143,
        "node_id": "PR_kwDOIWuq585f3QdS",
        "number": 9014,
        "title": "Pending documentation renames for c3 -> condense_plus_context",
        "user": {
            "login": "kapil-malik",
            "id": 3902288,
            "node_id": "MDQ6VXNlcjM5MDIyODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3902288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kapil-malik",
            "html_url": "https://github.com/kapil-malik",
            "followers_url": "https://api.github.com/users/kapil-malik/followers",
            "following_url": "https://api.github.com/users/kapil-malik/following{/other_user}",
            "gists_url": "https://api.github.com/users/kapil-malik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kapil-malik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kapil-malik/subscriptions",
            "organizations_url": "https://api.github.com/users/kapil-malik/orgs",
            "repos_url": "https://api.github.com/users/kapil-malik/repos",
            "events_url": "https://api.github.com/users/kapil-malik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kapil-malik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T03:57:19Z",
        "updated_at": "2023-11-20T06:30:12Z",
        "closed_at": "2023-11-20T04:09:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9014",
            "html_url": "https://github.com/run-llama/llama_index/pull/9014",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9014.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9014.patch",
            "merged_at": "2023-11-20T04:09:11Z"
        },
        "body": "# Description\r\n\r\nMinor documentation changes pending from the previous commit of condense_plus_context chat engine impl.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nRunning existing unit tests.\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9014/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9014/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9013",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9013/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9013/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9013/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9013",
        "id": 2001182362,
        "node_id": "PR_kwDOIWuq585f2z3-",
        "number": 9013,
        "title": "Add node_parser attribute back to service context",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-20T01:11:36Z",
        "updated_at": "2023-11-20T01:22:54Z",
        "closed_at": "2023-11-20T01:22:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9013",
            "html_url": "https://github.com/run-llama/llama_index/pull/9013",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9013.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9013.patch",
            "merged_at": "2023-11-20T01:22:54Z"
        },
        "body": "# Description\r\n\r\nA few code samples rely on `service_context.node_parser` being available, lets add this back\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/8992\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9013/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9013/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/9012",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/9012/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/9012/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/9012/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/9012",
        "id": 2001170311,
        "node_id": "PR_kwDOIWuq585f2xOt",
        "number": 9012,
        "title": "add context window for perplexity llm",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-20T00:56:02Z",
        "updated_at": "2023-11-20T01:06:51Z",
        "closed_at": "2023-11-20T01:06:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/9012",
            "html_url": "https://github.com/run-llama/llama_index/pull/9012",
            "diff_url": "https://github.com/run-llama/llama_index/pull/9012.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/9012.patch",
            "merged_at": "2023-11-20T01:06:50Z"
        },
        "body": "Fixes https://github.com/run-llama/llama_index/issues/8999\r\n\r\nPerplexity LLM was missing a context window attribute",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/9012/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/9012/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]