[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7988",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7988/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7988/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7988/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7988",
        "id": 1928959859,
        "node_id": "PR_kwDOIWuq585cC8o-",
        "number": 7988,
        "title": "More concise `pip install` instructions in `HuggingFaceLLM`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-05T19:53:02Z",
        "updated_at": "2023-10-06T16:06:59Z",
        "closed_at": "2023-10-06T15:36:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7988",
            "html_url": "https://github.com/run-llama/llama_index/pull/7988",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7988.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7988.patch",
            "merged_at": "2023-10-06T15:36:49Z"
        },
        "body": "# Description\r\n\r\nSimplifying the `pip install` instructions in `HuggingFaceLLM` to use the `torch` extra of `transformers`.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7988/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7988/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7987",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7987/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7987/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7987/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7987",
        "id": 1928899320,
        "node_id": "PR_kwDOIWuq585cCvsx",
        "number": 7987,
        "title": "use proper metadata str for node parsing",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-05T19:10:23Z",
        "updated_at": "2023-10-07T23:04:51Z",
        "closed_at": "2023-10-07T23:04:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7987",
            "html_url": "https://github.com/run-llama/llama_index/pull/7987",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7987.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7987.patch",
            "merged_at": "2023-10-07T23:04:50Z"
        },
        "body": "# Description\r\n\r\nWe should be using the `metadata_str` that is the longest we splitting nodes into chunks. Otherwise, LLM errors occur, or text is truncated by embeddings.\r\n\r\nFixes #7980\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7987/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7987/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7986",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7986/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7986/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7986/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7986",
        "id": 1928847717,
        "node_id": "I_kwDOIWuq585y9-Fl",
        "number": 7986,
        "title": "[Bug]: sub_nodes from nodes or documents?",
        "user": {
            "login": "kevon217",
            "id": 13077896,
            "node_id": "MDQ6VXNlcjEzMDc3ODk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13077896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevon217",
            "html_url": "https://github.com/kevon217",
            "followers_url": "https://api.github.com/users/kevon217/followers",
            "following_url": "https://api.github.com/users/kevon217/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevon217/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevon217/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevon217/subscriptions",
            "organizations_url": "https://api.github.com/users/kevon217/orgs",
            "repos_url": "https://api.github.com/users/kevon217/repos",
            "events_url": "https://api.github.com/users/kevon217/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevon217/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-05T18:38:35Z",
        "updated_at": "2023-11-16T14:54:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI'm trying to implement the recursive retriever as documented on https://gpt-index.readthedocs.io/en/stable/examples/retrievers/recursive_retriever_nodes.html, but when I get my sub_nodes, they don't seem to actually comprise chunks smaller than the parent base_node. When I look at the text field of a sub_node, it is the same as the base_node. Maybe I'm misunderstanding something about chunk references, but was hoping for a little guidance.\n\n### Version\n\n0.8.31\n\n### Steps to Reproduce\n\nI pretty much employed the same steps as demonstrated in the LlamaIndex docs. Although, it seemed odd that you call get_nodes_from_documents() on the base_node. Should it be using get_node_from_nodes() ? \r\n\r\n```\r\nnode_parser = SimpleNodeParser.from_defaults(chunk_size=1024)\r\nbase_nodes = node_parser.get_nodes_from_documents(docs)\r\n# set node ids to be a constant\r\nfor idx, node in enumerate(base_nodes):\r\n    node.id_ = f\"node-{idx}\"\r\n\r\nsub_chunk_sizes = [128, 256, 512]\r\nsub_node_parsers = [\r\n    SimpleNodeParser.from_defaults(chunk_size=c) for c in sub_chunk_sizes\r\n]\r\n\r\nall_nodes = []\r\nfor base_node in base_nodes:\r\n    for n in sub_node_parsers:\r\n        sub_nodes = n.get_nodes_from_documents([base_node])\r\n        sub_inodes = [\r\n            IndexNode.from_text_node(sn, base_node.node_id) for sn in sub_nodes\r\n        ]\r\n        all_nodes.extend(sub_inodes)\r\n\r\n    # also add original node to node\r\n    original_node = IndexNode.from_text_node(base_node, base_node.node_id)\r\n    all_nodes.append(original_node)\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7986/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7986/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7985",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7985/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7985/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7985/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7985",
        "id": 1928809393,
        "node_id": "I_kwDOIWuq585y90ux",
        "number": 7985,
        "title": "[Bug]: Arize Phoenix non-default port only works when set through the environment PHOENIX_PORT",
        "user": {
            "login": "aerickson-clt",
            "id": 32244272,
            "node_id": "MDQ6VXNlcjMyMjQ0Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/32244272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aerickson-clt",
            "html_url": "https://github.com/aerickson-clt",
            "followers_url": "https://api.github.com/users/aerickson-clt/followers",
            "following_url": "https://api.github.com/users/aerickson-clt/following{/other_user}",
            "gists_url": "https://api.github.com/users/aerickson-clt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aerickson-clt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aerickson-clt/subscriptions",
            "organizations_url": "https://api.github.com/users/aerickson-clt/orgs",
            "repos_url": "https://api.github.com/users/aerickson-clt/repos",
            "events_url": "https://api.github.com/users/aerickson-clt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aerickson-clt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-05T18:10:20Z",
        "updated_at": "2023-10-05T19:42:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nYou can set the Phoenix port in code or in the environment, and that will launch the Phoenix app to that port.  However, Llama Index will only use the default port 6060 unless the Phoenix port is set in the environment.  If you set the Phoenix port in code only, Llama Index's callback won't communicate with Phoenix.\r\n\r\n```\r\nif os.getenv(\"PHOENIX_IS_ON\") == \"TRUE\":\r\n    import phoenix as px\r\n    from llama_index import set_global_handler\r\n    session = px.launch_app(port=6081) # <--- this alone doesn't help\r\n    set_global_handler(\"arize_phoenix\")\r\n```\r\n\r\nYou need this:\r\nEnvironment\r\n```\r\nPHOENIX_PORT=6081\r\n```\n\n### Version\n\n839.post1\n\n### Steps to Reproduce\n\nYou can probably reproduce with the phoenix tutorial\r\n\r\nhttps://docs.llamaindex.ai/en/stable/end_to_end_tutorials/one_click_observability.html\r\nhttps://colab.research.google.com/github/Arize-ai/phoenix/blob/main/tutorials/tracing/llama_index_tracing_tutorial.ipynb\r\n\r\nI am using an Azure OpenAI gpt 3.5 turbo, but I doubt this would change anything...\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7985/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7985/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7984",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7984/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7984/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7984/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7984",
        "id": 1928806788,
        "node_id": "PR_kwDOIWuq585cCbml",
        "number": 7984,
        "title": "[version] bump version to 0.8.40",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-05T18:08:17Z",
        "updated_at": "2023-10-05T18:25:55Z",
        "closed_at": "2023-10-05T18:25:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7984",
            "html_url": "https://github.com/run-llama/llama_index/pull/7984",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7984.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7984.patch",
            "merged_at": "2023-10-05T18:25:54Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7984/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7984/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7983",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7983/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7983/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7983/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7983",
        "id": 1928806057,
        "node_id": "PR_kwDOIWuq585cCbce",
        "number": 7983,
        "title": "Removed dead code `class_type`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-05T18:07:42Z",
        "updated_at": "2023-10-06T16:08:29Z",
        "closed_at": "2023-10-06T15:57:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7983",
            "html_url": "https://github.com/run-llama/llama_index/pull/7983",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7983.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7983.patch",
            "merged_at": "2023-10-06T15:57:38Z"
        },
        "body": "# Description\r\n\r\nThere seems to have been some dead code cargo culted around, use of `class_type`.  This is redundant to `class_name`.\r\n\r\n## Type of Change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7983/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7983/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7982",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7982/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7982/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7982/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7982",
        "id": 1928798009,
        "node_id": "PR_kwDOIWuq585cCZsa",
        "number": 7982,
        "title": "`LocalAI` simplified `__init__`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-05T18:01:40Z",
        "updated_at": "2023-10-06T16:08:44Z",
        "closed_at": "2023-10-06T15:57:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7982",
            "html_url": "https://github.com/run-llama/llama_index/pull/7982",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7982.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7982.patch",
            "merged_at": "2023-10-06T15:57:48Z"
        },
        "body": "# Description\r\n\r\nI discovered I had some misgivings about stuff in `__init__` being required for `pydantic` serialization.  This was proven through an added unit test.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7982/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7982/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7981",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7981/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7981/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7981/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7981",
        "id": 1928766122,
        "node_id": "PR_kwDOIWuq585cCS1j",
        "number": 7981,
        "title": "add source nodes to sub_q engine",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-05T17:39:02Z",
        "updated_at": "2023-10-05T23:54:12Z",
        "closed_at": "2023-10-05T23:54:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7981",
            "html_url": "https://github.com/run-llama/llama_index/pull/7981",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7981.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7981.patch",
            "merged_at": "2023-10-05T23:54:11Z"
        },
        "body": "# Description\r\n\r\nSmall change to propagate source nodes to the final response object in the sub-question query engine.\r\n\r\nFixes #7978\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7981/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7981/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7980",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7980/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7980/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7980/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7980",
        "id": 1928751178,
        "node_id": "I_kwDOIWuq585y9mhK",
        "number": 7980,
        "title": "[Bug]: Metadata length is not a good proxy for maximum chunk size",
        "user": {
            "login": "aerickson-clt",
            "id": 32244272,
            "node_id": "MDQ6VXNlcjMyMjQ0Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/32244272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aerickson-clt",
            "html_url": "https://github.com/aerickson-clt",
            "followers_url": "https://api.github.com/users/aerickson-clt/followers",
            "following_url": "https://api.github.com/users/aerickson-clt/following{/other_user}",
            "gists_url": "https://api.github.com/users/aerickson-clt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aerickson-clt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aerickson-clt/subscriptions",
            "organizations_url": "https://api.github.com/users/aerickson-clt/orgs",
            "repos_url": "https://api.github.com/users/aerickson-clt/repos",
            "events_url": "https://api.github.com/users/aerickson-clt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aerickson-clt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-05T17:28:34Z",
        "updated_at": "2023-10-07T23:04:51Z",
        "closed_at": "2023-10-07T23:04:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI have a `Document` defined below with a metadata field `extra_info` that is often quite long.  This is important in my RAG application because the user needs to see some meta info about the source that should not be part of retrieval or synthesis.\r\n\r\n```\r\nDocument(text=row['Answer_Response'],\r\n                  ret.append(Document(text=row['Answer_Response'],\r\n                            metadata={\"question\": row[\"Question\"], \"source\": \"asource\", \"source_uid\": row[\"ID\"],\r\n                                      \"extra_info\": extra_info},\r\n                   excluded_llm_metadata_keys=['extra_info', 'source_uid', 'source'],\r\n                   excluded_embed_metadata_keys=['extra_info', 'source_uid', 'source'],\r\n                   metadata_template=\"{key}: {value}\",\r\n                   text_template=\"{metadata_str}\\n{content}\"))\r\n```\r\n\r\nThe sentence splitter does not like this document because the metadata is too long for the chunk size. Since this fields is excluded from LLM and EMBED, I don't think it should be counted.\r\n\r\n### Version\r\n\r\n839post1\r\n\r\n### Steps to Reproduce\r\n\r\nMake a document with long metadata, give a smaller chunk size, split the nodes with the sentence splitter (or other meta-data aware splitter).\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7980/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7980/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7979",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7979/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7979/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7979/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7979",
        "id": 1928734709,
        "node_id": "I_kwDOIWuq585y9if1",
        "number": 7979,
        "title": "[Bug]: Cannot use SimpleNodeParser & MetadataExtractor with Azure-OpenAI LLM",
        "user": {
            "login": "j0sephsasson",
            "id": 56747110,
            "node_id": "MDQ6VXNlcjU2NzQ3MTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/56747110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j0sephsasson",
            "html_url": "https://github.com/j0sephsasson",
            "followers_url": "https://api.github.com/users/j0sephsasson/followers",
            "following_url": "https://api.github.com/users/j0sephsasson/following{/other_user}",
            "gists_url": "https://api.github.com/users/j0sephsasson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j0sephsasson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j0sephsasson/subscriptions",
            "organizations_url": "https://api.github.com/users/j0sephsasson/orgs",
            "repos_url": "https://api.github.com/users/j0sephsasson/repos",
            "events_url": "https://api.github.com/users/j0sephsasson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j0sephsasson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-05T17:16:03Z",
        "updated_at": "2023-10-05T17:46:00Z",
        "closed_at": "2023-10-05T17:46:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nHello,\r\n\r\nIt is not possible to use the Azure OpenAI service in conjunction with the SimpleNodeParser & MetadataExtractor. \r\n\r\nI am attempting to create nodes and inject specific metadata. This works perfectly fine with my personal OpenAI keys set as env variables and using the '**ChatOpenAI()**'. However, when switching to '**AzureOpenAI()**', it throws this error: ` InvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.chat_completion.ChatCompletion'>`\r\n\r\n### Version\r\n\r\n0.8.39.post2\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\nfrom llama_index.llms import AzureOpenAI\r\n\r\nopenai.api_type = \"azure\"\r\nopenai.api_base = \"<URL>\"\r\nopenai.api_version = \"<VERSION>\"\r\nos.environ[\"OPENAI_API_KEY\"] = \"<KEY>\"\r\nopenai.api_key = os.getenv(\"OPENAI_API_KEY\")\r\n\r\ntext_splitter = TokenTextSplitter(separator=\" \", chunk_size=512, chunk_overlap=128)\r\n\r\nmetadata_extractor = MetadataExtractor(\r\n    extractors=[\r\n        TitleExtractor(nodes=5),\r\n        QuestionsAnsweredExtractor(questions=3),\r\n        SummaryExtractor(summaries=[\"prev\", \"self\"]),\r\n        KeywordExtractor(keywords=10),\r\n    ],\r\n)\r\n\r\nnode_parser = SimpleNodeParser(\r\n    text_splitter=text_splitter,\r\n    metadata_extractor=metadata_extractor,\r\n)\r\n\r\nllm_predictor = LLMPredictor(\r\n    # llm=ChatOpenAI(temperature=0, model_name=\"gpt-4\", max_tokens=512) --> works\r\n    # llm=AzureOpenAI(engine=\"openai-dev\", model=\"gpt-35-turbo\") --> does not work\r\n)\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n    llm_predictor=llm_predictor, \r\n    node_parser=node_parser,\r\n    embed_model=OpenAIEmbedding()\r\n)\r\n\r\ndoc = SimpleDirectoryReader(input_files=[file]).load_data()\r\nnode = node_parser.get_nodes_from_documents(doc)\r\n```\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nFile ~\\anaconda3\\envs\\ai\\Lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py:85, in EngineAPIResource.__prepare_create_request(cls, api_key, api_base, api_type, api_version, organization, **params)\r\n     83 if typed_api_type in (util.ApiType.AZURE, util.ApiType.AZURE_AD):\r\n     84     if deployment_id is None and engine is None:\r\n---> 85         raise error.InvalidRequestError(\r\n     86             \"Must provide an 'engine' or 'deployment_id' parameter to create a %s\"\r\n     87             % cls,\r\n     88             \"engine\",\r\n     89         )\r\n     90 else:\r\n     91     if model is None and engine is None:\r\n\r\nInvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.chat_completion.ChatCompletion'>\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7979/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7979/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7978",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7978/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7978/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7978/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7978",
        "id": 1928645133,
        "node_id": "I_kwDOIWuq585y9MoN",
        "number": 7978,
        "title": "SubQuestionQueryEngine: Equivalent of RetrievalQAWithSourcesChain and printing intermediate results in streamlit",
        "user": {
            "login": "hpsc3",
            "id": 144791741,
            "node_id": "U_kgDOCKFYvQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/144791741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hpsc3",
            "html_url": "https://github.com/hpsc3",
            "followers_url": "https://api.github.com/users/hpsc3/followers",
            "following_url": "https://api.github.com/users/hpsc3/following{/other_user}",
            "gists_url": "https://api.github.com/users/hpsc3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hpsc3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hpsc3/subscriptions",
            "organizations_url": "https://api.github.com/users/hpsc3/orgs",
            "repos_url": "https://api.github.com/users/hpsc3/repos",
            "events_url": "https://api.github.com/users/hpsc3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hpsc3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-05T16:13:34Z",
        "updated_at": "2023-10-05T23:54:12Z",
        "closed_at": "2023-10-05T23:54:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am using SubQuestionQueryEngine for chat with pdf functionality. I need help with a couple of things:\r\n1) Is there an equivalent of RetrievalQAWithSourcesChain from Langchain in Llamaindex? What I want is that the response should also return sources that were used to draft the response with specific page number, so that users can scroll to that part and get additional info as needed. Something similar to what they have implemeneted here: https://chat.langchain.com/\r\n\r\n2) When I run the subquestion query, it does show me the intermediate results in python notebook. But when I try the same code in a streamlit app, the intermediate steps don't appear. Is there a way to stream the intermediate steps in realtime and output it on streamlit ?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7978/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7978/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7977",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7977/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7977/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7977/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7977",
        "id": 1928628944,
        "node_id": "PR_kwDOIWuq585cB2DU",
        "number": 7977,
        "title": "add to function finetuning notebook (v2) ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-05T16:06:15Z",
        "updated_at": "2023-10-05T16:33:09Z",
        "closed_at": "2023-10-05T16:33:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7977",
            "html_url": "https://github.com/run-llama/llama_index/pull/7977",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7977.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7977.patch",
            "merged_at": "2023-10-05T16:33:08Z"
        },
        "body": "added an example here on RAG \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7977/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7977/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7976",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7976/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7976/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7976/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7976",
        "id": 1928479628,
        "node_id": "I_kwDOIWuq585y8kOM",
        "number": 7976,
        "title": "MockLLMPredictor is not showing last_token_usage",
        "user": {
            "login": "kashiftriffort",
            "id": 438943,
            "node_id": "MDQ6VXNlcjQzODk0Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/438943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kashiftriffort",
            "html_url": "https://github.com/kashiftriffort",
            "followers_url": "https://api.github.com/users/kashiftriffort/followers",
            "following_url": "https://api.github.com/users/kashiftriffort/following{/other_user}",
            "gists_url": "https://api.github.com/users/kashiftriffort/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kashiftriffort/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kashiftriffort/subscriptions",
            "organizations_url": "https://api.github.com/users/kashiftriffort/orgs",
            "repos_url": "https://api.github.com/users/kashiftriffort/repos",
            "events_url": "https://api.github.com/users/kashiftriffort/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kashiftriffort/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-05T14:46:14Z",
        "updated_at": "2023-11-09T05:39:30Z",
        "closed_at": "2023-10-05T14:59:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi, I am trying to find last_token_usage using MockLLMPredictor. Below is my code, however somehow running this code shows that last_token_usage is not found in MockLLMPredictor.\r\n\r\n```\r\nBASE_DIR: str = os.path.dirname(__file__)\r\n\r\ndocuments = SimpleDirectoryReader(os.path.join(BASE_DIR, \"data\")).load_data()\r\nprint(documents)\r\n\r\nllm_model_name = \"gpt-4\"\r\nllm_predictor_mock = MockLLMPredictor(max_tokens=256, llm=OpenAI(temperature=0, model_name=llm_model_name))\r\nembed_model_mock = MockEmbedding(embed_dim=1536)\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor_mock, embed_model=embed_model_mock)\r\n\r\n\r\n# Vector is cheaper than raw indexed data\r\n# index = GPTSimpleVectorIndex.from_documents(documents, service_context=service_context)\r\nindex = GPTListIndex.from_documents(documents, service_context=service_context)\r\n\r\n# Run the mock call first\r\n# You can *predict* how many tokens each GPT Index operation\r\n# (build index, query index) can consume! (within 5-10% error)\r\nquery_str = \"Why was Ketanji Brown Jackson nominated?\"\r\n\r\nprint(\"query_str = {}\".format(query_str))\r\n\r\nresponse = index.query(query_str, service_context=service_context)\r\n\r\nprint(response)\r\n\r\n# In this example, after querying the index, you can access the last_token_usage attribute\r\n# of the MockLLMPredictor instance to get the number of tokens used in the query.\r\nlast_token_usage = llm_predictor_mock.last_token_usage\r\n\r\nlast_embedding_usage = embed_model_mock.last_token_usage\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7976/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7976/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7975",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7975/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7975/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7975/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7975",
        "id": 1927979837,
        "node_id": "I_kwDOIWuq585y6qM9",
        "number": 7975,
        "title": "[Bug]:\" JsonPathParserError\" when using \"JSONQueryEngine\"",
        "user": {
            "login": "terilias",
            "id": 37142366,
            "node_id": "MDQ6VXNlcjM3MTQyMzY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37142366?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terilias",
            "html_url": "https://github.com/terilias",
            "followers_url": "https://api.github.com/users/terilias/followers",
            "following_url": "https://api.github.com/users/terilias/following{/other_user}",
            "gists_url": "https://api.github.com/users/terilias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terilias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terilias/subscriptions",
            "organizations_url": "https://api.github.com/users/terilias/orgs",
            "repos_url": "https://api.github.com/users/terilias/repos",
            "events_url": "https://api.github.com/users/terilias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terilias/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-10-05T10:44:01Z",
        "updated_at": "2023-10-10T07:27:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nHello, \r\nThank you for your great work on LlamaIndex and for open-sourcing it along with examples and videos! \r\nI am trying to use the \"JSONQueryEngine\" with my JSON file following the steps described in the [relative example](https://gpt-index.readthedocs.io/en/latest/examples/query_engine/json_query_engine.html). In the step of using the engine to query the index, I get this error: `JsonPathParserError: Parse error at 1:37 near token & (&)`\r\nI search for the error and I saw that maybe it's due to the [library import](https://stackoverflow.com/questions/66951665/jsonpath-error-when-making-a-filter-query-parse-error-at-ss-near-token-s). Am I doing something wrong?\n\n### Version\n\n0.8.39.post2\n\n### Steps to Reproduce\n\n1. Read a JSON object from a file using JSON module: `with open('file.json', 'r') as f:  json_value = json.load(f)` Use this as the json_value parameter of the JSONQueryEngine constructor.\r\n2. Provide a string that contains the json schema. Then convert it to dict using `json.loads(json_schema_string)`\r\n3. Create a JSONQueryEngine using the two dictionaries from the steps above.\r\n4. Use query() method on the JSONQueryEngine.\r\n\n\n### Relevant Logs/Tracbacks\n\n```shell\nFile ~/anaconda3/lib/python3.11/site-packages/jsonpath_ng/parser.py:83, in JsonPathParser.p_error(self, t)\r\n     82 def p_error(self, t):\r\n---> 83     raise JsonPathParserError('Parse error at %s:%s near token %s (%s)'\r\n     84                               % (t.lineno, t.col, t.value, t.type))\r\n\r\nJsonPathParserError: Parse error at 1:37 near token & (&)\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7975/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7975/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7974",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7974/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7974/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7974/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7974",
        "id": 1927513263,
        "node_id": "I_kwDOIWuq585y44Sv",
        "number": 7974,
        "title": "[Question]:  ModelError: Your input is too long. Max input length is 4096 tokens, but you supplied 5441 tokens.",
        "user": {
            "login": "axz91",
            "id": 100378946,
            "node_id": "U_kgDOBfupQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/100378946?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axz91",
            "html_url": "https://github.com/axz91",
            "followers_url": "https://api.github.com/users/axz91/followers",
            "following_url": "https://api.github.com/users/axz91/following{/other_user}",
            "gists_url": "https://api.github.com/users/axz91/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axz91/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axz91/subscriptions",
            "organizations_url": "https://api.github.com/users/axz91/orgs",
            "repos_url": "https://api.github.com/users/axz91/repos",
            "events_url": "https://api.github.com/users/axz91/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axz91/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-05T06:56:21Z",
        "updated_at": "2023-10-24T06:31:42Z",
        "closed_at": "2023-10-24T06:31:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n\r\nModelError: Your input is too long. Max input length is 4096 tokens, but you supplied 5441 tokens.]\r\n\r\nhow to fix this,,",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7974/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7974/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7973",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7973/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7973/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7973/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7973",
        "id": 1927458013,
        "node_id": "PR_kwDOIWuq585b93w6",
        "number": 7973,
        "title": "Adds OpenAILike llm class for OpenAI-compatible api servers",
        "user": {
            "login": "benbot",
            "id": 1340967,
            "node_id": "MDQ6VXNlcjEzNDA5Njc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1340967?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benbot",
            "html_url": "https://github.com/benbot",
            "followers_url": "https://api.github.com/users/benbot/followers",
            "following_url": "https://api.github.com/users/benbot/following{/other_user}",
            "gists_url": "https://api.github.com/users/benbot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benbot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benbot/subscriptions",
            "organizations_url": "https://api.github.com/users/benbot/orgs",
            "repos_url": "https://api.github.com/users/benbot/repos",
            "events_url": "https://api.github.com/users/benbot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benbot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-10-05T06:13:47Z",
        "updated_at": "2023-10-29T02:54:32Z",
        "closed_at": "2023-10-21T23:10:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7973",
            "html_url": "https://github.com/run-llama/llama_index/pull/7973",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7973.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7973.patch",
            "merged_at": "2023-10-21T23:10:13Z"
        },
        "body": "# Description\r\n\r\nThere are a handful of open source projects out there that provide openai-compatible apis over non-openai models.\r\n\r\nCurrently, llama_index prevents using custom models with their OpenAI class because they need to be able to infer some metadata from the model name.\r\n\r\nThis PR adds a class that includes that metadata in the constructor and skips the validation checks that the OpenAI class makes with regards to that metadata.\r\n\r\nThis lets me use the vllm openai-like API with llama index :raised_hands: \r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI got mistral-7b-instruct running on vllm with `python -m vllm.entrypoints.openai.api_server --model mistralai/Mistral-7B-Instruct-v0.1`, then ran this script\r\n\r\n```\r\nfrom llama_index import VectorStoreIndex, ServiceContext, StorageContext, download_loader\r\nfrom llama_index.vector_stores import ChromaVectorStore\r\nfrom llama_index.llms import HuggingFaceLLM, LlamaCPP, OpenAILike\r\nfrom pathlib import Path\r\nimport chromadb\r\n\r\nprint(\"Okay starting\")\r\n\r\nmodel = OpenAILike(\r\n    api_base=\"http://localhost:8000/v1\", \r\n    is_chat_model=True, \r\n    context_window=1024, \r\n    model=\"mistralai/Mistral-7B-Instruct-v0.1\", \r\n    is_function_calling_model=True  # provide this field\r\n)\r\nsvc = ServiceContext.from_defaults(embed_model=\"local\", llm=model)\r\nchroma = chromadb.EphemeralClient()\r\ncollection = chroma.create_collection(\"test\")\r\nstc = StorageContext.from_defaults(vector_store=ChromaVectorStore(chroma_collection=collection))\r\ndocs = {}\r\n\r\nreader = download_loader(\"PDFReader\")\r\n\r\nloader = reader()\r\ndocs = loader.load_data(file=Path('./article.pdf'))\r\n\r\nindex = VectorStoreIndex.from_documents(docs, storage_context=stc, service_context=svc)\r\n\r\nq = index.as_query_engine()\r\nprint(\"now we query\")\r\nresp = q.query(\"Give me an example of a coup one of the houses would perform on another.\")\r\n\r\nprint(resp)\r\n```\r\n\r\nIt worked :)\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7973/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7973/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7972",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7972/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7972/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7972/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7972",
        "id": 1927319888,
        "node_id": "PR_kwDOIWuq585b9Zqa",
        "number": 7972,
        "title": "Fixes run-llama/llama_index#7897",
        "user": {
            "login": "SridharCR",
            "id": 22750196,
            "node_id": "MDQ6VXNlcjIyNzUwMTk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/22750196?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SridharCR",
            "html_url": "https://github.com/SridharCR",
            "followers_url": "https://api.github.com/users/SridharCR/followers",
            "following_url": "https://api.github.com/users/SridharCR/following{/other_user}",
            "gists_url": "https://api.github.com/users/SridharCR/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SridharCR/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SridharCR/subscriptions",
            "organizations_url": "https://api.github.com/users/SridharCR/orgs",
            "repos_url": "https://api.github.com/users/SridharCR/repos",
            "events_url": "https://api.github.com/users/SridharCR/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SridharCR/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-05T03:40:33Z",
        "updated_at": "2023-10-09T02:43:39Z",
        "closed_at": "2023-10-09T02:43:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7972",
            "html_url": "https://github.com/run-llama/llama_index/pull/7972",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7972.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7972.patch",
            "merged_at": "2023-10-09T02:43:39Z"
        },
        "body": "# Description\r\n\r\nThis fixes the documentation typo on the Usage Documents - https://gpt-index.readthedocs.io/en/latest/core_modules/data_modules/documents_and_nodes/usage_documents.html\r\n\r\nFixes #7897 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7972/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7972/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7971",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7971/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7971/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7971/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7971",
        "id": 1927142909,
        "node_id": "PR_kwDOIWuq585b8zxP",
        "number": 7971,
        "title": "WIP: add function fine-tuning notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-04T23:58:38Z",
        "updated_at": "2023-10-05T00:24:17Z",
        "closed_at": "2023-10-05T00:24:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7971",
            "html_url": "https://github.com/run-llama/llama_index/pull/7971",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7971.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7971.patch",
            "merged_at": "2023-10-05T00:24:16Z"
        },
        "body": "this is a super toy example over a pydnatic program\r\n\r\ndidn't have time to get to actual dataset gen + evaluation\r\n\r\nputting something out here as WIP with the intent of dramatically polishing this ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7971/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7971/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7970",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7970/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7970/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7970/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7970",
        "id": 1926821960,
        "node_id": "PR_kwDOIWuq585b7uFv",
        "number": 7970,
        "title": "More complete `ruff` rule set",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-04T19:12:14Z",
        "updated_at": "2023-10-04T20:04:17Z",
        "closed_at": "2023-10-04T20:00:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7970",
            "html_url": "https://github.com/run-llama/llama_index/pull/7970",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7970.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7970.patch",
            "merged_at": "2023-10-04T20:00:16Z"
        },
        "body": "# Description\r\n\r\nUsed the script I made in https://github.com/astral-sh/ruff/issues/7805 to enable more `ruff` rules that don't error.  In other words, what more `ruff` rules can we get, for free?\r\n\r\nThis PR:\r\n- Adds more `ruff` rules, and some to `ignore` explaining why\r\n- Syncs `black` version in `requirements.txt` with `pre-commit`\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7970/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7970/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7969",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7969/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7969/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7969/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7969",
        "id": 1926729076,
        "node_id": "PR_kwDOIWuq585b7Z_D",
        "number": 7969,
        "title": "add RAG fine-tuning notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-04T18:06:55Z",
        "updated_at": "2023-10-04T18:25:05Z",
        "closed_at": "2023-10-04T18:25:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7969",
            "html_url": "https://github.com/run-llama/llama_index/pull/7969",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7969.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7969.patch",
            "merged_at": "2023-10-04T18:25:04Z"
        },
        "body": "notebook showing you how to fine-tune with retrieval-augmented inputs. \r\n\r\nInspired from this paper: https://arxiv.org/abs/2310.01352",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7969/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7969/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7968",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7968/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7968/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7968/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7968",
        "id": 1926643886,
        "node_id": "PR_kwDOIWuq585b7Hja",
        "number": 7968,
        "title": "Add: Async upserting for Qdrant vector store",
        "user": {
            "login": "KennyStryker",
            "id": 15946657,
            "node_id": "MDQ6VXNlcjE1OTQ2NjU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15946657?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KennyStryker",
            "html_url": "https://github.com/KennyStryker",
            "followers_url": "https://api.github.com/users/KennyStryker/followers",
            "following_url": "https://api.github.com/users/KennyStryker/following{/other_user}",
            "gists_url": "https://api.github.com/users/KennyStryker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KennyStryker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KennyStryker/subscriptions",
            "organizations_url": "https://api.github.com/users/KennyStryker/orgs",
            "repos_url": "https://api.github.com/users/KennyStryker/repos",
            "events_url": "https://api.github.com/users/KennyStryker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KennyStryker/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-04T17:07:25Z",
        "updated_at": "2023-10-09T22:11:13Z",
        "closed_at": "2023-10-09T22:11:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7968",
            "html_url": "https://github.com/run-llama/llama_index/pull/7968",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7968.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7968.patch",
            "merged_at": "2023-10-09T22:11:13Z"
        },
        "body": "# Description\r\n\r\nAdded async upserting feature for Qdrant vector store:\r\n* Implemented `async_add` method to QdrantVectorStore.\r\n* Update the qdrant demo notebook to demostrate usage of async and grpc upserting.\r\n* Minor typo fix in ChromaDB demo notebook.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Added existing unit/integration tests\r\n- [X] Updated the demo notebook to show its usage.\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] My changes generate no new warnings\r\n- [X] New and existing unit tests pass locally with my changes\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7968/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7967",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7967/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7967/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7967/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7967",
        "id": 1926252545,
        "node_id": "PR_kwDOIWuq585b5x4D",
        "number": 7967,
        "title": "Clarifai LLM integration",
        "user": {
            "login": "isaac-chung",
            "id": 48971969,
            "node_id": "MDQ6VXNlcjQ4OTcxOTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/48971969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isaac-chung",
            "html_url": "https://github.com/isaac-chung",
            "followers_url": "https://api.github.com/users/isaac-chung/followers",
            "following_url": "https://api.github.com/users/isaac-chung/following{/other_user}",
            "gists_url": "https://api.github.com/users/isaac-chung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/isaac-chung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/isaac-chung/subscriptions",
            "organizations_url": "https://api.github.com/users/isaac-chung/orgs",
            "repos_url": "https://api.github.com/users/isaac-chung/repos",
            "events_url": "https://api.github.com/users/isaac-chung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/isaac-chung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-04T13:43:34Z",
        "updated_at": "2023-10-04T20:06:48Z",
        "closed_at": "2023-10-04T19:50:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7967",
            "html_url": "https://github.com/run-llama/llama_index/pull/7967",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7967.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7967.patch",
            "merged_at": "2023-10-04T19:50:08Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\n- Introduce integration with Clarifai for LLMs\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7967/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7967/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7966",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7966/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7966/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7966/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7966",
        "id": 1926180296,
        "node_id": "I_kwDOIWuq585yzy3I",
        "number": 7966,
        "title": "[Question]: AssertionError: update_kv_cache has a error while running Microsoft/Phi-1.5",
        "user": {
            "login": "vmjcv",
            "id": 25278695,
            "node_id": "MDQ6VXNlcjI1Mjc4Njk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/25278695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vmjcv",
            "html_url": "https://github.com/vmjcv",
            "followers_url": "https://api.github.com/users/vmjcv/followers",
            "following_url": "https://api.github.com/users/vmjcv/following{/other_user}",
            "gists_url": "https://api.github.com/users/vmjcv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vmjcv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vmjcv/subscriptions",
            "organizations_url": "https://api.github.com/users/vmjcv/orgs",
            "repos_url": "https://api.github.com/users/vmjcv/repos",
            "events_url": "https://api.github.com/users/vmjcv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vmjcv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-10-04T13:06:38Z",
        "updated_at": "2023-10-04T19:51:45Z",
        "closed_at": "2023-10-04T19:51:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\ni want to test Phi-1.5 model, this is my code:\r\n```\r\nimport logging\r\nimport sys\r\nfrom transformers import AutoModelForCausalLM, AutoTokenizer\r\nlogging.basicConfig(stream=sys.stdout, level=logging.INFO)\r\nlogging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader, ServiceContext\r\nfrom llama_index.llms import HuggingFaceLLM\r\nfrom llama_index.prompts import PromptTemplate\r\nimport torch\r\n\r\n\r\ndocuments = SimpleDirectoryReader('./data').load_data()\r\n\r\nquery_wrapper_prompt = PromptTemplate(\r\n    \"\"\"Question: {query_str}\r\n\r\nAnswer: Let's think step by step.\"\"\"\r\n)\r\n\r\ntokenizer = AutoTokenizer.from_pretrained(\r\n    \"microsoft/phi-1_5\", trust_remote_code=True, use_cache=True, return_attention_mask=False)\r\n\r\nllm = HuggingFaceLLM(\r\n    query_wrapper_prompt=query_wrapper_prompt,\r\n    tokenizer=tokenizer,\r\n    model_name=\"microsoft/phi-1_5\",\r\n    model_kwargs={\"trust_remote_code\":True}\r\n)\r\nservice_context = ServiceContext.from_defaults(chunk_size=2048, llm=llm)\r\n\r\nindex = VectorStoreIndex.from_documents(documents, service_context=service_context)\r\n\r\nquery_engine = index.as_query_engine()\r\n\r\nquestion = \"Who won FIFA in 1994?\"\r\n\r\nresponse = query_engine.query(question)\r\nprint(response)\r\n```\r\n\r\nthe error is \r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\\u74f6\u5b50\\Downloads\\test_ai\\test.py\", line 46, in <module>\r\n    response = query_engine.query(user_input)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\llama_index\\indices\\query\\base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\llama_index\\query_engine\\retriever_query_engine.py\", line 178, in _query\r\n    response = self._response_synthesizer.synthesize(\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\llama_index\\response_synthesizers\\base.py\", line 128, in synthesize\r\n    response_str = self.get_response(\r\n                   ^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\llama_index\\response_synthesizers\\compact_and_refine.py\", line 34, in get_response\r\n    response = super().get_response(\r\n               ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\llama_index\\response_synthesizers\\refine.py\", line 116, in get_response\r\n    response = self._give_response_single(\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\llama_index\\response_synthesizers\\refine.py\", line 175, in _give_response_single\r\n    StructuredRefineResponse, program(context_str=cur_text_chunk)\r\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\llama_index\\response_synthesizers\\refine.py\", line 56, in __call__\r\n    answer = self._llm_predictor.predict(\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\llama_index\\llm_predictor\\base.py\", line 148, in predict\r\n    response = self._llm.complete(formatted_prompt)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\llama_index\\llms\\base.py\", line 277, in wrapped_llm_predict\r\n    f_return_val = f(_self, *args, **kwargs)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\llama_index\\llms\\huggingface.py\", line 209, in complete\r\n    tokens = self._model.generate(\r\n             ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\torch\\utils\\_contextlib.py\", line 115, in decorate_context\r\n    return func(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\transformers\\generation\\utils.py\", line 1606, in generate\r\n    return self.greedy_search(\r\n           ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\transformers\\generation\\utils.py\", line 2454, in greedy_search\r\n    outputs = self(\r\n              ^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\torch\\nn\\modules\\module.py\", line 1501, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50/.cache\\huggingface\\modules\\transformers_modules\\microsoft\\phi-1_5\\b6a7e2fe15c21f5847279f23e280cc5a0e7049ef\\modeling_mixformer_sequential.py\", line 763, in forward\r\n    hidden_layer = module(hidden_layer, past_key_values=past_key_values, attention_mask=attention_mask)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\torch\\nn\\modules\\module.py\", line 1501, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50/.cache\\huggingface\\modules\\transformers_modules\\microsoft\\phi-1_5\\b6a7e2fe15c21f5847279f23e280cc5a0e7049ef\\modeling_mixformer_sequential.py\", line 596, in forward\r\n    attn_outputs = self.mixer(hidden_states, past_key_values=past_key_values, attention_mask=attention_mask)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\torch\\nn\\modules\\module.py\", line 1501, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50/.cache\\huggingface\\modules\\transformers_modules\\microsoft\\phi-1_5\\b6a7e2fe15c21f5847279f23e280cc5a0e7049ef\\modeling_mixformer_sequential.py\", line 541, in forward\r\n    kv = update_kv_cache(qkv[:, :, 1:], past_key_values, self.layer_idx)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\u74f6\u5b50/.cache\\huggingface\\modules\\transformers_modules\\microsoft\\phi-1_5\\b6a7e2fe15c21f5847279f23e280cc5a0e7049ef\\modeling_mixformer_sequential.py\", line 449, in update_kv_cache\r\n    assert sequence_end <= (kv_cache.shape[1] if kv_cache is not None else v_cache.shape[2])\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAssertionError\r\n```\r\n\r\nI would like to know why the error occurs and how to fix him?\r\n\r\nif i just use langchain, no error,this is code:\r\n```\r\nfrom transformers import pipeline\r\nfrom langchain import PromptTemplate\r\nfrom langchain.llms.huggingface_pipeline import HuggingFacePipeline\r\nfrom transformers import AutoModelForCausalLM, AutoTokenizer\r\nfrom langchain.chains import LLMChain\r\n\r\nmodel = AutoModelForCausalLM.from_pretrained(\"microsoft/phi-1_5\",\r\n                                             trust_remote_code=True)\r\n\r\ntokenizer = AutoTokenizer.from_pretrained(\r\n    \"microsoft/phi-1_5\", trust_remote_code=True, use_cache=True, return_attention_mask=False)\r\n\r\n\r\ntemplate = \"\"\"Question: {question}\r\n\r\nAnswer: Let's think step by step.\"\"\"\r\n\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\n# llm_pipeline = HuggingFacePipeline(pipeline=generate)\r\n\r\npipe = pipeline(\"text-generation\", model=model, tokenizer=tokenizer,max_new_tokens=100)\r\nllm_pipeline = HuggingFacePipeline(pipeline=pipe)\r\ngenerator_chain = LLMChain(llm=llm_pipeline, prompt=prompt)\r\n\r\nquestion = \"Who won FIFA in 1994?\"\r\ngenerator_outputs = generator_chain.run(question)\r\n```\r\n\r\nThanks again for your help, I want get the code that will solve the problem\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7966/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7966/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7965",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7965/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7965/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7965/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7965",
        "id": 1925661325,
        "node_id": "PR_kwDOIWuq585b3w3J",
        "number": 7965,
        "title": "Remove dead code for gpt cache",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-04T08:20:35Z",
        "updated_at": "2023-10-26T14:14:48Z",
        "closed_at": "2023-10-04T08:26:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7965",
            "html_url": "https://github.com/run-llama/llama_index/pull/7965",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7965.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7965.patch",
            "merged_at": "2023-10-04T08:26:59Z"
        },
        "body": "Remove dead code for gpt cache",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7965/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7965/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7964",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7964/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7964/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7964/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7964",
        "id": 1925647168,
        "node_id": "PR_kwDOIWuq585b3tyi",
        "number": 7964,
        "title": "Remove broken test",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-04T08:11:42Z",
        "updated_at": "2023-10-04T08:17:15Z",
        "closed_at": "2023-10-04T08:17:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7964",
            "html_url": "https://github.com/run-llama/llama_index/pull/7964",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7964.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7964.patch",
            "merged_at": "2023-10-04T08:17:13Z"
        },
        "body": "Remove broken test",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7964/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7963",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7963/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7963/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7963/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7963",
        "id": 1925622129,
        "node_id": "PR_kwDOIWuq585b3oUP",
        "number": 7963,
        "title": "Skip test if `elasticsearch` not installed",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-04T07:57:24Z",
        "updated_at": "2023-10-04T08:17:29Z",
        "closed_at": "2023-10-04T08:17:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7963",
            "html_url": "https://github.com/run-llama/llama_index/pull/7963",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7963.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7963.patch",
            "merged_at": "2023-10-04T08:17:28Z"
        },
        "body": "Skip test if `elasticsearch` not installed",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7963/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7963/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7962",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7962/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7962/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7962/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7962",
        "id": 1925497240,
        "node_id": "I_kwDOIWuq585yxMGY",
        "number": 7962,
        "title": "[Bug]: ",
        "user": {
            "login": "ShyamFaguna",
            "id": 52468359,
            "node_id": "MDQ6VXNlcjUyNDY4MzU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/52468359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShyamFaguna",
            "html_url": "https://github.com/ShyamFaguna",
            "followers_url": "https://api.github.com/users/ShyamFaguna/followers",
            "following_url": "https://api.github.com/users/ShyamFaguna/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShyamFaguna/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShyamFaguna/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShyamFaguna/subscriptions",
            "organizations_url": "https://api.github.com/users/ShyamFaguna/orgs",
            "repos_url": "https://api.github.com/users/ShyamFaguna/repos",
            "events_url": "https://api.github.com/users/ShyamFaguna/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShyamFaguna/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-10-04T06:31:41Z",
        "updated_at": "2023-10-04T17:50:43Z",
        "closed_at": "2023-10-04T17:50:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nHi,\r\nI'm having trouble importing the GPTVectorStoreIndex, SimpleDirectoryReader, ServiceContext classes from the llama_index package. I've installed the package using pip, but I'm getting an ImportError when trying to import the classes, it was working fine till yesterday. Is there any known issue or workaround for this problem? I've followed the documentation, but I can't seem to resolve the ImportError.\r\n\r\nUsed :\r\npip install llama-index\r\nfrom llama_index import GPTVectorStoreIndex, SimpleDirectoryReader, ServiceContext\r\n\r\n\r\nError:\r\nModuleNotFoundError                       Traceback (most recent call last)\r\n\r\n<ipython-input-8-3ce7d01dd77c> in <cell line: 7>()\r\n      5 logging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\r\n      6 \r\n----> 7 from llama_index import GPTVectorStoreIndex, SimpleDirectoryReader, ServiceContext\r\n      8 from llama_index.llms import HuggingFaceLLM\r\n      9 \r\n\r\n1 frames\r\n\r\n/usr/local/lib/python3.10/dist-packages/llama_index/indices/common/struct_store/base.py in <module>\r\n     21 from llama_index.schema import BaseNode, MetadataMode\r\n     22 from llama_index.text_splitter import TextSplitter\r\n---> 23 from llama_index.utilities.sql_wrapper import SQLDatabase\r\n     24 from llama_index.utils import truncate_text\r\n     25 \r\n\r\nModuleNotFoundError: No module named 'llama_index.utilities'\n\n### Version\n\n(0.8.39)\n\n### Steps to Reproduce\n\npip install llama-index\r\nfrom llama_index import GPTVectorStoreIndex, SimpleDirectoryReader, ServiceContext\r\n\n\n### Relevant Logs/Tracbacks\n\n```shell\nModuleNotFoundError                       Traceback (most recent call last)\r\n\r\n<ipython-input-8-3ce7d01dd77c> in <cell line: 7>()\r\n      5 logging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\r\n      6 \r\n----> 7 from llama_index import GPTVectorStoreIndex, SimpleDirectoryReader, ServiceContext\r\n      8 from llama_index.llms import HuggingFaceLLM\r\n      9 \r\n\r\n1 frames\r\n\r\n/usr/local/lib/python3.10/dist-packages/llama_index/indices/common/struct_store/base.py in <module>\r\n     21 from llama_index.schema import BaseNode, MetadataMode\r\n     22 from llama_index.text_splitter import TextSplitter\r\n---> 23 from llama_index.utilities.sql_wrapper import SQLDatabase\r\n     24 from llama_index.utils import truncate_text\r\n     25 \r\n\r\nModuleNotFoundError: No module named 'llama_index.utilities'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7962/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7962/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7961",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7961/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7961/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7961/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7961",
        "id": 1925474259,
        "node_id": "PR_kwDOIWuq585b3Iuw",
        "number": 7961,
        "title": "fix: missing init file",
        "user": {
            "login": "RogerHYang",
            "id": 80478925,
            "node_id": "MDQ6VXNlcjgwNDc4OTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/80478925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RogerHYang",
            "html_url": "https://github.com/RogerHYang",
            "followers_url": "https://api.github.com/users/RogerHYang/followers",
            "following_url": "https://api.github.com/users/RogerHYang/following{/other_user}",
            "gists_url": "https://api.github.com/users/RogerHYang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RogerHYang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RogerHYang/subscriptions",
            "organizations_url": "https://api.github.com/users/RogerHYang/orgs",
            "repos_url": "https://api.github.com/users/RogerHYang/repos",
            "events_url": "https://api.github.com/users/RogerHYang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RogerHYang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-04T06:11:35Z",
        "updated_at": "2023-10-04T06:18:27Z",
        "closed_at": "2023-10-04T06:18:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7961",
            "html_url": "https://github.com/run-llama/llama_index/pull/7961",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7961.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7961.patch",
            "merged_at": "2023-10-04T06:18:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7961/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7961/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7960",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7960/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7960/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7960/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7960",
        "id": 1925468649,
        "node_id": "PR_kwDOIWuq585b3Hiu",
        "number": 7960,
        "title": "[version] bump version to 0.8.39.post2",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-04T06:06:17Z",
        "updated_at": "2023-10-04T07:23:15Z",
        "closed_at": "2023-10-04T07:23:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7960",
            "html_url": "https://github.com/run-llama/llama_index/pull/7960",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7960.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7960.patch",
            "merged_at": "2023-10-04T07:23:14Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7960/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7960/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7959",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7959/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7959/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7959/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7959",
        "id": 1925448770,
        "node_id": "PR_kwDOIWuq585b3DTC",
        "number": 7959,
        "title": "fix: missing `__init__.py` for `llama_index.utilities`",
        "user": {
            "login": "RogerHYang",
            "id": 80478925,
            "node_id": "MDQ6VXNlcjgwNDc4OTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/80478925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RogerHYang",
            "html_url": "https://github.com/RogerHYang",
            "followers_url": "https://api.github.com/users/RogerHYang/followers",
            "following_url": "https://api.github.com/users/RogerHYang/following{/other_user}",
            "gists_url": "https://api.github.com/users/RogerHYang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RogerHYang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RogerHYang/subscriptions",
            "organizations_url": "https://api.github.com/users/RogerHYang/orgs",
            "repos_url": "https://api.github.com/users/RogerHYang/repos",
            "events_url": "https://api.github.com/users/RogerHYang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RogerHYang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-04T05:46:16Z",
        "updated_at": "2023-10-04T06:05:15Z",
        "closed_at": "2023-10-04T06:05:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7959",
            "html_url": "https://github.com/run-llama/llama_index/pull/7959",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7959.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7959.patch",
            "merged_at": "2023-10-04T06:05:14Z"
        },
        "body": "# Description\r\n\r\n`llama_index.utilities` was skipped by Python packaging due to missing `__init__.py`\r\n\r\nFixes #7958 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7959/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 1,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7959/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7958",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7958/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7958/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7958/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7958",
        "id": 1925431088,
        "node_id": "I_kwDOIWuq585yw78w",
        "number": 7958,
        "title": "[Bug]: ModuleNotFoundError: No module named 'llama_index.utilities'",
        "user": {
            "login": "MrKimmich",
            "id": 64669814,
            "node_id": "MDQ6VXNlcjY0NjY5ODE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/64669814?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MrKimmich",
            "html_url": "https://github.com/MrKimmich",
            "followers_url": "https://api.github.com/users/MrKimmich/followers",
            "following_url": "https://api.github.com/users/MrKimmich/following{/other_user}",
            "gists_url": "https://api.github.com/users/MrKimmich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MrKimmich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MrKimmich/subscriptions",
            "organizations_url": "https://api.github.com/users/MrKimmich/orgs",
            "repos_url": "https://api.github.com/users/MrKimmich/repos",
            "events_url": "https://api.github.com/users/MrKimmich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MrKimmich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-04T05:26:08Z",
        "updated_at": "2023-10-04T06:05:16Z",
        "closed_at": "2023-10-04T06:05:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nAfter installing llama-index and trying to import SimpleDirectoryReader getting **ModuleNotFoundError: No module named 'llama_index.utilities'**\n\n### Version\n\n0.8.39\n\n### Steps to Reproduce\n\n1. install llama-index using` pip install llama-index`\r\n2. try importing SimpleDirectoryReader as  from `llama_index import SimpleDirectoryReader`\n\n### Relevant Logs/Tracbacks\n\n```shell\n---------------------------------------------------------------------------\r\nModuleNotFoundError                       Traceback (most recent call last)\r\n<ipython-input-4-a501c962bf85> in <cell line: 1>()\r\n----> 1 from llama_index import SimpleDirectoryReader\r\n      2 \r\n      3 reader = SimpleDirectoryReader(input_files=[\"data_processed.txt\"])\r\n      4 docs = reader.load_data()\r\n      5 for doc in docs:\r\n\r\n1 frames\r\n/usr/local/lib/python3.10/dist-packages/llama_index/indices/common/struct_store/base.py in <module>\r\n     21 from llama_index.schema import BaseNode, MetadataMode\r\n     22 from llama_index.text_splitter import TextSplitter\r\n---> 23 from llama_index.utilities.sql_wrapper import SQLDatabase\r\n     24 from llama_index.utils import truncate_text\r\n     25 \r\n\r\nModuleNotFoundError: No module named 'llama_index.utilities'\r\n\r\n---------------------------------------------------------------------------\r\nNOTE: If your import is failing due to a missing package, you can\r\nmanually install dependencies using either !pip or !apt.\r\n\r\nTo view examples of installing some common dependencies, click the\r\n\"Open Examples\" button below.\r\n---------------------------------------------------------------------------\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7958/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7957",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7957/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7957/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7957/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7957",
        "id": 1925385269,
        "node_id": "PR_kwDOIWuq585b21y2",
        "number": 7957,
        "title": "[version] bump version to 0.8.39",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-04T04:32:08Z",
        "updated_at": "2023-10-04T05:31:20Z",
        "closed_at": "2023-10-04T05:31:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7957",
            "html_url": "https://github.com/run-llama/llama_index/pull/7957",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7957.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7957.patch",
            "merged_at": "2023-10-04T05:31:19Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7957/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7957/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7956",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7956/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7956/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7956/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7956",
        "id": 1925197981,
        "node_id": "PR_kwDOIWuq585b2N-b",
        "number": 7956,
        "title": "Avoiding `pydantic` reinstalls in CI",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-04T00:58:35Z",
        "updated_at": "2023-10-04T01:12:08Z",
        "closed_at": "2023-10-04T01:03:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7956",
            "html_url": "https://github.com/run-llama/llama_index/pull/7956",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7956.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7956.patch",
            "merged_at": "2023-10-04T01:03:52Z"
        },
        "body": "# Description\r\n\r\nIn the \"Install deps\" part of https://github.com/run-llama/llama_index/actions/runs/6400130018/job/17373287211?pr=7889:\r\n1. `requirements.txt` installed pydantic v2\r\n2. `data_requirements.txt` swapped it for pydantic v1\r\n\r\nThis PR speeds CI by having all dependencies resolved together\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7956/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7956/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7955",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7955/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7955/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7955/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7955",
        "id": 1925110230,
        "node_id": "PR_kwDOIWuq585b16vx",
        "number": 7955,
        "title": "move tree_sitter_languages into data_requirements.txt",
        "user": {
            "login": "sourabhdesai",
            "id": 3005241,
            "node_id": "MDQ6VXNlcjMwMDUyNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3005241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sourabhdesai",
            "html_url": "https://github.com/sourabhdesai",
            "followers_url": "https://api.github.com/users/sourabhdesai/followers",
            "following_url": "https://api.github.com/users/sourabhdesai/following{/other_user}",
            "gists_url": "https://api.github.com/users/sourabhdesai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sourabhdesai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sourabhdesai/subscriptions",
            "organizations_url": "https://api.github.com/users/sourabhdesai/orgs",
            "repos_url": "https://api.github.com/users/sourabhdesai/repos",
            "events_url": "https://api.github.com/users/sourabhdesai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sourabhdesai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-03T23:37:47Z",
        "updated_at": "2023-10-03T23:43:27Z",
        "closed_at": "2023-10-03T23:43:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7955",
            "html_url": "https://github.com/run-llama/llama_index/pull/7955",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7955.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7955.patch",
            "merged_at": "2023-10-03T23:43:24Z"
        },
        "body": "# Description\r\n\r\nmove `tree_sitter_languages` dependency into `data_requirements.txt`\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7955/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7954",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7954/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7954/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7954/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7954",
        "id": 1925069283,
        "node_id": "PR_kwDOIWuq585b1yGs",
        "number": 7954,
        "title": "Vectara - minor update",
        "user": {
            "login": "ofermend",
            "id": 1823547,
            "node_id": "MDQ6VXNlcjE4MjM1NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofermend",
            "html_url": "https://github.com/ofermend",
            "followers_url": "https://api.github.com/users/ofermend/followers",
            "following_url": "https://api.github.com/users/ofermend/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofermend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofermend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofermend/subscriptions",
            "organizations_url": "https://api.github.com/users/ofermend/orgs",
            "repos_url": "https://api.github.com/users/ofermend/repos",
            "events_url": "https://api.github.com/users/ofermend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofermend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-03T22:51:14Z",
        "updated_at": "2023-10-03T23:13:06Z",
        "closed_at": "2023-10-03T23:13:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7954",
            "html_url": "https://github.com/run-llama/llama_index/pull/7954",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7954.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7954.patch",
            "merged_at": "2023-10-03T23:13:05Z"
        },
        "body": "# Description\r\n\r\n- Minor update to documentation\r\n- Added section about ManagedIndex in Contribution guidelines\r\n- Added X-Source in API header\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7954/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7953",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7953/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7953/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7953/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7953",
        "id": 1924868121,
        "node_id": "PR_kwDOIWuq585b1GCN",
        "number": 7953,
        "title": "first commit draft",
        "user": {
            "login": "mogith-pn",
            "id": 143642606,
            "node_id": "U_kgDOCI_P7g",
            "avatar_url": "https://avatars.githubusercontent.com/u/143642606?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mogith-pn",
            "html_url": "https://github.com/mogith-pn",
            "followers_url": "https://api.github.com/users/mogith-pn/followers",
            "following_url": "https://api.github.com/users/mogith-pn/following{/other_user}",
            "gists_url": "https://api.github.com/users/mogith-pn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mogith-pn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mogith-pn/subscriptions",
            "organizations_url": "https://api.github.com/users/mogith-pn/orgs",
            "repos_url": "https://api.github.com/users/mogith-pn/repos",
            "events_url": "https://api.github.com/users/mogith-pn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mogith-pn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-03T20:11:07Z",
        "updated_at": "2023-10-04T08:42:55Z",
        "closed_at": "2023-10-04T08:42:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7953",
            "html_url": "https://github.com/run-llama/llama_index/pull/7953",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7953.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7953.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7953/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7952",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7952/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7952/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7952/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7952",
        "id": 1924484560,
        "node_id": "PR_kwDOIWuq585bzyvo",
        "number": 7952,
        "title": "Supporting `mypy` local usage with `venv`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-03T16:13:29Z",
        "updated_at": "2023-10-03T16:28:48Z",
        "closed_at": "2023-10-03T16:20:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7952",
            "html_url": "https://github.com/run-llama/llama_index/pull/7952",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7952.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7952.patch",
            "merged_at": "2023-10-03T16:20:19Z"
        },
        "body": "# Description\r\n\r\n- Ignores `venv` for local `mypy` usage\r\n- Fixes error being raised by `mypy` locally when you remove extra `docs` local\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7952/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7952/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7951",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7951/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7951/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7951/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7951",
        "id": 1924428826,
        "node_id": "I_kwDOIWuq585ytHQa",
        "number": 7951,
        "title": "[Bug]: Import error on latest PyPI Release",
        "user": {
            "login": "connor-mccorm",
            "id": 97468934,
            "node_id": "U_kgDOBc9CBg",
            "avatar_url": "https://avatars.githubusercontent.com/u/97468934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/connor-mccorm",
            "html_url": "https://github.com/connor-mccorm",
            "followers_url": "https://api.github.com/users/connor-mccorm/followers",
            "following_url": "https://api.github.com/users/connor-mccorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/connor-mccorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/connor-mccorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/connor-mccorm/subscriptions",
            "organizations_url": "https://api.github.com/users/connor-mccorm/orgs",
            "repos_url": "https://api.github.com/users/connor-mccorm/repos",
            "events_url": "https://api.github.com/users/connor-mccorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/connor-mccorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-03T15:44:48Z",
        "updated_at": "2023-10-03T15:53:48Z",
        "closed_at": "2023-10-03T15:53:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nRunning the following command in a jupyter notebook:\r\n```\r\nfrom llama_index import ServiceContext, StorageContext, SimpleDirectoryReader, VectorStoreIndex, set_global_service_context\r\n```\r\n\r\nGetting the following error:\r\n```\r\nTypeError: Argument 'description' has incorrect type (expected str, got tuple)\r\n```\r\n\r\nI will start looking into this, but I imagine you all have more expertise so would appreciate some guidance/a quick fix if possible.\n\n### Version\n\nlatest - 0.8.38\n\n### Steps to Reproduce\n\nRun the following command in a python shell with 0.8.38 version of llama_index\r\n```\r\nfrom llama_index import ServiceContext, StorageContext, SimpleDirectoryReader, VectorStoreIndex, set_global_service_context\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\n/Users/connor/mambaforge/envs/predibase38/lib/python3.8/site-packages/pinecone/index.py:4: TqdmExperimentalWarning: Using `tqdm.autonotebook.tqdm` in notebook mode. Use `tqdm.tqdm` instead to force console mode (e.g. in jupyter console)\r\n  from tqdm.autonotebook import tqdm\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [1], in <cell line: 6>()\r\n      3 import openai\r\n      4 import pinecone\r\n----> 6 from llama_index import ServiceContext, StorageContext, SimpleDirectoryReader, VectorStoreIndex, set_global_service_context\r\n      7 from llama_index.llms import PredibaseLLM\r\n      8 from llama_index.vector_stores import PineconeVectorStore\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/__init__.py:20, in <module>\r\n     16 from llama_index.embeddings.openai import OpenAIEmbedding\r\n     19 # indices\r\n---> 20 from llama_index.indices.keyword_table import (\r\n     21     KeywordTableIndex,\r\n     22     RAKEKeywordTableIndex,\r\n     23     SimpleKeywordTableIndex,\r\n     24     GPTKeywordTableIndex,\r\n     25     GPTRAKEKeywordTableIndex,\r\n     26     GPTSimpleKeywordTableIndex,\r\n     27 )\r\n     28 from llama_index.indices.knowledge_graph import (\r\n     29     KnowledgeGraphIndex,\r\n     30     GPTKnowledgeGraphIndex,\r\n     31 )\r\n     32 from llama_index.indices.list import ListIndex, GPTListIndex, SummaryIndex\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/indices/__init__.py:4, in <module>\r\n      1 \"\"\"LlamaIndex data structures.\"\"\"\r\n      3 # indices\r\n----> 4 from llama_index.indices.keyword_table.base import (\r\n      5     KeywordTableIndex,\r\n      6     GPTKeywordTableIndex,\r\n      7 )\r\n      8 from llama_index.indices.keyword_table.rake_base import (\r\n      9     RAKEKeywordTableIndex,\r\n     10     GPTRAKEKeywordTableIndex,\r\n     11 )\r\n     12 from llama_index.indices.keyword_table.simple_base import (\r\n     13     SimpleKeywordTableIndex,\r\n     14     GPTSimpleKeywordTableIndex,\r\n     15 )\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/indices/keyword_table/__init__.py:4, in <module>\r\n      1 \"\"\"Keyword Table Index Data Structures.\"\"\"\r\n      3 # indices\r\n----> 4 from llama_index.indices.keyword_table.base import (\r\n      5     KeywordTableIndex,\r\n      6     GPTKeywordTableIndex,\r\n      7 )\r\n      8 from llama_index.indices.keyword_table.retrievers import (\r\n      9     KeywordTableGPTRetriever,\r\n     10     KeywordTableRAKERetriever,\r\n     11     KeywordTableSimpleRetriever,\r\n     12 )\r\n     13 from llama_index.indices.keyword_table.rake_base import (\r\n     14     RAKEKeywordTableIndex,\r\n     15     GPTRAKEKeywordTableIndex,\r\n     16 )\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/indices/keyword_table/base.py:17, in <module>\r\n     15 from llama_index.async_utils import run_async_tasks\r\n     16 from llama_index.data_structs.data_structs import KeywordTable\r\n---> 17 from llama_index.indices.base import BaseIndex\r\n     18 from llama_index.indices.base_retriever import BaseRetriever\r\n     19 from llama_index.indices.keyword_table.utils import extract_keywords_given_response\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/indices/base.py:6, in <module>\r\n      3 from abc import ABC, abstractmethod\r\n      4 from typing import Any, Dict, Generic, List, Optional, Sequence, Type, TypeVar, cast\r\n----> 6 from llama_index.chat_engine.types import BaseChatEngine, ChatMode\r\n      7 from llama_index.data_structs.data_structs import IndexStruct\r\n      8 from llama_index.indices.base_retriever import BaseRetriever\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/chat_engine/__init__.py:1, in <module>\r\n----> 1 from llama_index.chat_engine.condense_question import CondenseQuestionChatEngine\r\n      2 from llama_index.chat_engine.context import ContextChatEngine\r\n      3 from llama_index.chat_engine.simple import SimpleChatEngine\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/chat_engine/condense_question.py:6, in <module>\r\n      3 from typing import Any, List, Optional, Type\r\n      5 from llama_index.callbacks import CallbackManager, trace_method\r\n----> 6 from llama_index.chat_engine.types import (\r\n      7     AgentChatResponse,\r\n      8     BaseChatEngine,\r\n      9     StreamingAgentChatResponse,\r\n     10 )\r\n     11 from llama_index.chat_engine.utils import response_gen_from_query_engine\r\n     12 from llama_index.indices.query.base import BaseQueryEngine\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/chat_engine/types.py:14, in <module>\r\n     12 from llama_index.response.schema import Response, StreamingResponse\r\n     13 from llama_index.schema import NodeWithScore\r\n---> 14 from llama_index.tools import ToolOutput\r\n     16 logger = logging.getLogger(__name__)\r\n     17 logger.setLevel(logging.WARNING)\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/tools/__init__.py:4, in <module>\r\n      1 \"\"\"Tools.\"\"\"\r\n      3 from llama_index.tools.query_engine import QueryEngineTool\r\n----> 4 from llama_index.tools.retriever_tool import RetrieverTool\r\n      5 from llama_index.tools.types import (\r\n      6     BaseTool,\r\n      7     ToolMetadata,\r\n   (...)\r\n     10     AsyncBaseTool,\r\n     11 )\r\n     12 from llama_index.tools.function_tool import FunctionTool\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/tools/retriever_tool.py:5, in <module>\r\n      1 \"\"\"Retriever tool.\"\"\"\r\n      3 from typing import Any, Optional, cast\r\n----> 5 from llama_index.indices.base_retriever import BaseRetriever\r\n      6 from llama_index.tools.types import AsyncBaseTool, ToolMetadata, ToolOutput\r\n      7 from llama_index.langchain_helpers.agents.tools import LlamaIndexTool\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/indices/base_retriever.py:5, in <module>\r\n      2 from typing import List, Optional\r\n      4 from llama_index.indices.query.schema import QueryBundle, QueryType\r\n----> 5 from llama_index.indices.service_context import ServiceContext\r\n      6 from llama_index.schema import NodeWithScore\r\n      9 class BaseRetriever(ABC):\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/indices/service_context.py:17, in <module>\r\n     15 from llama_index.llms.utils import LLMType, resolve_llm\r\n     16 from llama_index.logger import LlamaLogger\r\n---> 17 from llama_index.node_parser.interface import NodeParser\r\n     18 from llama_index.node_parser.sentence_window import SentenceWindowNodeParser\r\n     19 from llama_index.node_parser.simple import SimpleNodeParser\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/node_parser/__init__.py:4, in <module>\r\n      1 \"\"\"Node parsers.\"\"\"\r\n      3 from llama_index.node_parser.interface import NodeParser\r\n----> 4 from llama_index.node_parser.simple import SimpleNodeParser\r\n      5 from llama_index.node_parser.sentence_window import SentenceWindowNodeParser\r\n      6 from llama_index.node_parser.hierarchical import (\r\n      7     HierarchicalNodeParser,\r\n      8     get_leaf_nodes,\r\n      9     get_root_nodes,\r\n     10 )\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/node_parser/simple.py:7, in <module>\r\n      5 from llama_index.callbacks.base import CallbackManager\r\n      6 from llama_index.callbacks.schema import CBEventType, EventPayload\r\n----> 7 from llama_index.node_parser.extractors.metadata_extractors import MetadataExtractor\r\n      8 from llama_index.node_parser.interface import NodeParser\r\n      9 from llama_index.node_parser.node_utils import get_nodes_from_document\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/node_parser/extractors/__init__.py:1, in <module>\r\n----> 1 from llama_index.node_parser.extractors.metadata_extractors import (\r\n      2     MetadataExtractor,\r\n      3     SummaryExtractor,\r\n      4     QuestionsAnsweredExtractor,\r\n      5     TitleExtractor,\r\n      6     KeywordExtractor,\r\n      7     EntityExtractor,\r\n      8     MetadataFeatureExtractor,\r\n      9 )\r\n     10 from llama_index.node_parser.extractors.marvin_metadata_extractor import (\r\n     11     MarvinMetadataExtractor,\r\n     12 )\r\n     14 __all__ = [\r\n     15     \"MetadataExtractor\",\r\n     16     \"MetadataExtractorBase\",\r\n   (...)\r\n     23     \"MarvinMetadataExtractor\",\r\n     24 ]\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/node_parser/extractors/metadata_extractors.py:644, in <module>\r\n    632         return metadata_list\r\n    635 DEFAULT_EXTRACT_TEMPLATE_STR = \"\"\"\\\r\n    636 Here is the content of the section:\r\n    637 ----------------\r\n   (...)\r\n    640 Given the contextual information, extract out a {class_name} object.\\\r\n    641 \"\"\"\r\n--> 644 class PydanticProgramExtractor(MetadataFeatureExtractor):\r\n    645     \"\"\"Pydantic program extractor.\r\n    646 \r\n    647     Uses an LLM to extract out a Pydantic object. Return attributes of that object\r\n    648     in a dictionary.\r\n    649 \r\n    650     \"\"\"\r\n    652     program: BasePydanticProgram = Field(\r\n    653         ..., description=\"Pydantic program to extract.\"\r\n    654     )\r\n\r\nFile ~/mambaforge/envs/predibase38/lib/python3.8/site-packages/llama_index/node_parser/extractors/metadata_extractors.py:655, in PydanticProgramExtractor()\r\n    645 \"\"\"Pydantic program extractor.\r\n    646 \r\n    647 Uses an LLM to extract out a Pydantic object. Return attributes of that object\r\n    648 in a dictionary.\r\n    649 \r\n    650 \"\"\"\r\n    652 program: BasePydanticProgram = Field(\r\n    653     ..., description=\"Pydantic program to extract.\"\r\n    654 )\r\n--> 655 input_key: str = Field(\r\n    656     default=\"input\",\r\n    657     description=(\r\n    658         \"Key to use as input to the program (the program \"\r\n    659         \"template string must expose this key).\",\r\n    660     ),\r\n    661 )\r\n    662 extract_template_str: str = Field(\r\n    663     default=DEFAULT_EXTRACT_TEMPLATE_STR,\r\n    664     description=\"Template to use for extraction.\",\r\n    665 )\r\n    667 @classmethod\r\n    668 def class_name(cls) -> str:\r\n\r\nTypeError: Argument 'description' has incorrect type (expected str, got tuple)\r\n```\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7951/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7951/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7950",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7950/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7950/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7950/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7950",
        "id": 1924184056,
        "node_id": "PR_kwDOIWuq585byxaw",
        "number": 7950,
        "title": "supress sqlalchemy warning",
        "user": {
            "login": "izzatzr",
            "id": 34620941,
            "node_id": "MDQ6VXNlcjM0NjIwOTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/34620941?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/izzatzr",
            "html_url": "https://github.com/izzatzr",
            "followers_url": "https://api.github.com/users/izzatzr/followers",
            "following_url": "https://api.github.com/users/izzatzr/following{/other_user}",
            "gists_url": "https://api.github.com/users/izzatzr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/izzatzr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/izzatzr/subscriptions",
            "organizations_url": "https://api.github.com/users/izzatzr/orgs",
            "repos_url": "https://api.github.com/users/izzatzr/repos",
            "events_url": "https://api.github.com/users/izzatzr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/izzatzr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-03T13:42:17Z",
        "updated_at": "2023-10-04T04:47:42Z",
        "closed_at": "2023-10-04T04:47:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7950",
            "html_url": "https://github.com/run-llama/llama_index/pull/7950",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7950.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7950.patch",
            "merged_at": "2023-10-04T04:47:41Z"
        },
        "body": "# Description\r\n\r\nfix for supressing warning in PGVectorStore:\r\n\r\nSAWarning: TypeDecorator TSVector() will not produce a cache key because the cache_ok attribute is not set to True \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7950/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7949",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7949/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7949/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7949/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7949",
        "id": 1923978244,
        "node_id": "PR_kwDOIWuq585byEqm",
        "number": 7949,
        "title": "fix duplicate embedding",
        "user": {
            "login": "psychomelet",
            "id": 39754068,
            "node_id": "MDQ6VXNlcjM5NzU0MDY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/39754068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/psychomelet",
            "html_url": "https://github.com/psychomelet",
            "followers_url": "https://api.github.com/users/psychomelet/followers",
            "following_url": "https://api.github.com/users/psychomelet/following{/other_user}",
            "gists_url": "https://api.github.com/users/psychomelet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/psychomelet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/psychomelet/subscriptions",
            "organizations_url": "https://api.github.com/users/psychomelet/orgs",
            "repos_url": "https://api.github.com/users/psychomelet/repos",
            "events_url": "https://api.github.com/users/psychomelet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/psychomelet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-03T12:02:51Z",
        "updated_at": "2023-10-04T08:04:31Z",
        "closed_at": "2023-10-03T15:10:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7949",
            "html_url": "https://github.com/run-llama/llama_index/pull/7949",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7949.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7949.patch",
            "merged_at": "2023-10-03T15:10:59Z"
        },
        "body": "embedding.aget_text_embedding_batch currently trigger duplicated embedding requests.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7949/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7949/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7948",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7948/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7948/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7948/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7948",
        "id": 1923511794,
        "node_id": "PR_kwDOIWuq585bwhlJ",
        "number": 7948,
        "title": "add tesla 10q example notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-03T07:40:23Z",
        "updated_at": "2023-10-03T23:12:09Z",
        "closed_at": "2023-10-03T23:12:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7948",
            "html_url": "https://github.com/run-llama/llama_index/pull/7948",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7948.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7948.patch",
            "merged_at": "2023-10-03T23:12:08Z"
        },
        "body": "we use unstructured + llamaindex to parse document + ask questions over text/tables ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7948/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7947",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7947/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7947/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7947/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7947",
        "id": 1923474169,
        "node_id": "I_kwDOIWuq585ypeL5",
        "number": 7947,
        "title": "[Question]: ERROR:root:'generator' object has no attribute 'response_gen'",
        "user": {
            "login": "dinhan92",
            "id": 86275789,
            "node_id": "MDQ6VXNlcjg2Mjc1Nzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/86275789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dinhan92",
            "html_url": "https://github.com/dinhan92",
            "followers_url": "https://api.github.com/users/dinhan92/followers",
            "following_url": "https://api.github.com/users/dinhan92/following{/other_user}",
            "gists_url": "https://api.github.com/users/dinhan92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dinhan92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dinhan92/subscriptions",
            "organizations_url": "https://api.github.com/users/dinhan92/orgs",
            "repos_url": "https://api.github.com/users/dinhan92/repos",
            "events_url": "https://api.github.com/users/dinhan92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dinhan92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-03T07:15:33Z",
        "updated_at": "2023-10-04T03:07:56Z",
        "closed_at": "2023-10-04T03:07:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nSo I try to run my gpt llama index code on windows server IIS with wfastcgi and Flask in production:\r\n\r\n```python\r\n\r\n@app.route('/api/chatbot', methods=['GET', 'POST'])\r\n@token_required\r\n# @serving(websocket=True)\r\n# @login_required\r\n# @authorize.has_role('editor')\r\ndef chatbot(**kwargs) -> str:\r\n    try:\r\n        data = request.data\r\n        input_text = data.decode(\"utf-8\")\r\n\r\n        report_indices = {}\r\n        query_engine = {}\r\n        query_engine_tools = []\r\n        \r\n        for name_pdf in name_pdfs:\r\n            name_pdf_get = name_pdf.Name\r\n            storage_context = StorageContext.from_defaults(persist_dir=f\"./storage_{name_pdf_get}\")\r\n            report_indices[name_pdf_get] = load_index_from_storage(storage_context = storage_context,\r\n                                        service_context = service_context)\r\n            query_engine[name_pdf_get] = report_indices[name_pdf_get].as_query_engine()\r\n            query_engine_tools.append(QueryEngineTool(query_engine=query_engine[name_pdf_get], metadata = ToolMetadata(name=name_pdf_get, description=name_pdf.Description)))\r\n\r\n        agent = OpenAIAgent.from_tools(\r\n            tools=query_engine_tools,\r\n            llm=llm,\r\n            chat_history=[\r\n                ChatMessage(role=MessageRole.USER, content=\"Ch\u00e0o BSNH AI, ch\u00fang ta s\u1ebd b\u00e0n v\u1ec1 n\u00f4ng nghi\u1ec7p ng\u00e0y h\u00f4m nay.\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"\u0110\u01b0\u1ee3c b\u1ea1n \u01a1i, nghe c\u00f3 v\u1ebb h\u1ea5p d\u1eabn.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"B\u1ea1n c\u00f3 kh\u1ecfe kh\u00f4ng?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"T\u00f4i r\u1ea5t kh\u1ecfe, c\u00e1m \u01a1n.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"S\u1ee9c kh\u1ecfe c\u1ee7a b\u1ea1n nh\u01b0 th\u1ebf n\u00e0o?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"T\u00f4i c\u1ef1c k\u1ef3 kh\u1ecfe lu\u00f4n \u1ea5y, s\u1ee9c c\u00f3 th\u1ec3 v\u1ee1 n\u00fai.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"C\u00e2y khoai lang l\u00e0 c\u00e2y g\u00ec?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"C\u00e2y khoai lang l\u00e0 m\u1ed9t lo\u1ea1i c\u00e2y l\u01b0\u01a1ng th\u1ef1c.\"),\r\n            ],\r\n            prefix_messages=[\r\n                ChatMessage(role=MessageRole.SYSTEM, content=\"B\u1ea1n l\u00e0 m\u1ed9t tr\u1ee3 l\u00fd \u1ea3o c\u1ee7a TNH99, c\u00f3 t\u00ean l\u00e0 BSNH AI, \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi TNH99, ch\u1ee7 \u0111\u1ec1 ch\u00ednh c\u1ee7a b\u1ea1n l\u00e0 n\u00f4ng nghi\u1ec7p. N\u1ebfu b\u1ea1n kh\u00f4ng tr\u1ea3 l\u1eddi \u0111\u01b0\u1ee3c h\u00e3y b\u1ea3o ng\u01b0\u1eddi d\u00f9ng li\u00ean h\u1ec7 v\u1edbi TNH99. Vui l\u00f2ng tr\u1ea3 l\u1eddi b\u1eb1ng ti\u1ebfng Vi\u1ec7t.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"Ch\u00e0o BSNH AI, ch\u00fang ta s\u1ebd b\u00e0n v\u1ec1 n\u00f4ng nghi\u1ec7p ng\u00e0y h\u00f4m nay.\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"\u0110\u01b0\u1ee3c b\u1ea1n \u01a1i, nghe c\u00f3 v\u1ebb h\u1ea5p d\u1eabn.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"B\u1ea1n c\u00f3 kh\u1ecfe kh\u00f4ng?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"T\u00f4i r\u1ea5t kh\u1ecfe, c\u00e1m \u01a1n.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"S\u1ee9c kh\u1ecfe c\u1ee7a b\u1ea1n nh\u01b0 th\u1ebf n\u00e0o?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"T\u00f4i c\u1ef1c k\u1ef3 kh\u1ecfe lu\u00f4n \u1ea5y, s\u1ee9c c\u00f3 th\u1ec3 v\u1ee1 n\u00fai.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"C\u00e2y khoai lang l\u00e0 c\u00e2y g\u00ec?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"C\u00e2y khoai lang l\u00e0 m\u1ed9t lo\u1ea1i c\u00e2y l\u01b0\u01a1ng th\u1ef1c.\"),\r\n            ],\r\n            # system_prompt=\"B\u1ea1n l\u00e0 m\u1ed9t tr\u1ee3 l\u00fd \u1ea3o c\u1ee7a TNH99, c\u00f3 t\u00ean l\u00e0 BSNH AI, \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi TNH99, ch\u1ee7 \u0111\u1ec1 ch\u00ednh c\u1ee7a b\u1ea1n l\u00e0 n\u00f4ng nghi\u1ec7p. N\u1ebfu b\u1ea1n kh\u00f4ng tr\u1ea3 l\u1eddi \u0111\u01b0\u1ee3c h\u00e3y b\u1ea3o ng\u01b0\u1eddi d\u00f9ng li\u00ean h\u1ec7 v\u1edbi TNH99. Vui l\u00f2ng tr\u1ea3 l\u1eddi b\u1eb1ng ti\u1ebfng Vi\u1ec7t.\",\r\n            verbose=True\r\n        )\r\n\r\n        agent_stream = agent.stream_chat(input_text)\r\n\r\n        response_gen = agent_stream.response_gen\r\n        \r\n        @stream_with_context\r\n        def generate():\r\n            savedAnswer = \"\";\r\n            \r\n            for token in response_gen:\r\n                savedAnswer += token\r\n                yield token;\r\n\r\n            mycol.insert_one(ChatHistory(Question=input_text, Answer=savedAnswer, IsDone=True, IdUser=kwargs['idUser']).__dict__)\r\n\r\n        return app.response_class(generate())\r\n        \r\n    except Exception as e:\r\n        print(e)\r\n        exception = \"Xin l\u1ed7i, BSNH AI \u0111ang b\u1eadn.\"\r\n        @stream_with_context\r\n        def generate():\r\n            for text in exception:\r\n                yield text;\r\n\r\n        return app.response_class(generate())\r\n\r\n```\r\n\r\nAnd get the error: ERROR:root:'generator' object has no attribute 'response_gen' in this line: response_gen = agent_stream.response_gen.\r\nIt's all fine when I run on local. Still don't know how to fix\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7947/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7947/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7946",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7946/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7946/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7946/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7946",
        "id": 1923243320,
        "node_id": "PR_kwDOIWuq585bvn60",
        "number": 7946,
        "title": "fix elasticsearch module guide",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-03T03:53:47Z",
        "updated_at": "2023-10-03T03:59:27Z",
        "closed_at": "2023-10-03T03:59:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7946",
            "html_url": "https://github.com/run-llama/llama_index/pull/7946",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7946.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7946.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7946/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7946/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7945",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7945/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7945/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7945/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7945",
        "id": 1923104521,
        "node_id": "PR_kwDOIWuq585bvJ9F",
        "number": 7945,
        "title": "Update LlamaCPP context_params property",
        "user": {
            "login": "dimusic",
            "id": 1485977,
            "node_id": "MDQ6VXNlcjE0ODU5Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1485977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dimusic",
            "html_url": "https://github.com/dimusic",
            "followers_url": "https://api.github.com/users/dimusic/followers",
            "following_url": "https://api.github.com/users/dimusic/following{/other_user}",
            "gists_url": "https://api.github.com/users/dimusic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dimusic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dimusic/subscriptions",
            "organizations_url": "https://api.github.com/users/dimusic/orgs",
            "repos_url": "https://api.github.com/users/dimusic/repos",
            "events_url": "https://api.github.com/users/dimusic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dimusic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-03T01:23:54Z",
        "updated_at": "2023-10-09T20:35:07Z",
        "closed_at": "2023-10-03T03:54:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7945",
            "html_url": "https://github.com/run-llama/llama_index/pull/7945",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7945.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7945.patch",
            "merged_at": "2023-10-03T03:54:54Z"
        },
        "body": "# Description\r\n\r\nInitializing new `ServiceContext` with LlamaCPP model started failing for me after update.  Look like `params` property got renamed in the recent `llama-cpp-python` release:\r\n\r\nhttps://github.com/abetlen/llama-cpp-python/commit/1a1c3dc418a3e55073676ea60b3c5b57117d3421\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7945/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7945/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7944",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7944/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7944/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7944/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7944",
        "id": 1923098215,
        "node_id": "I_kwDOIWuq585yoCZn",
        "number": 7944,
        "title": "[Feature Request]: `extras_require` in `setup.py`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-10-03T01:17:02Z",
        "updated_at": "2023-11-08T21:47:30Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nYou can install packages with `pip install package[extra]` or `pip install package[extra1,extra2]`.\r\n\r\nThis is enabled via \"extras\": https://setuptools.pypa.io/en/latest/userguide/dependency_management.html#optional-dependencies.  For reference, check SQL Alchemy's list: https://github.com/sqlalchemy/sqlalchemy/blob/rel_2_0_21/setup.cfg#L43\r\n\r\nIt would be cool to add these to LlamaIndex, so we can do things like `pip install llama-index[llama-cpp-python,ollama]` which will add `requests` and `llama-cpp-python` to the installation list.\n\n### Reason\n\nConvenience of installs, and letting LlamaIndex take care of dependency ranges.\n\n### Value of Feature\n\n- Benefitting end users integrating LlamaIndex into their `requirements` files.\r\n- Upstreaming `data_requirements.txt` into `setup.py`, removing a file from the repo\r\n\r\n```python\r\nsetup(\r\n    ...,\r\n    extras_require={\r\n        \"google\": [\"google-api-python-client\", \"google-auth-httplib2\", \"google-auth-oauthlib\"],\r\n        \"vellum\": [\"vellum-ai==0.0.15\"]\r\n    }\r\n)\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7944/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7943",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7943/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7943/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7943/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7943",
        "id": 1922967616,
        "node_id": "PR_kwDOIWuq585burva",
        "number": 7943,
        "title": "Add parent_id to on_event_start",
        "user": {
            "login": "RogerHYang",
            "id": 80478925,
            "node_id": "MDQ6VXNlcjgwNDc4OTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/80478925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RogerHYang",
            "html_url": "https://github.com/RogerHYang",
            "followers_url": "https://api.github.com/users/RogerHYang/followers",
            "following_url": "https://api.github.com/users/RogerHYang/following{/other_user}",
            "gists_url": "https://api.github.com/users/RogerHYang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RogerHYang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RogerHYang/subscriptions",
            "organizations_url": "https://api.github.com/users/RogerHYang/orgs",
            "repos_url": "https://api.github.com/users/RogerHYang/repos",
            "events_url": "https://api.github.com/users/RogerHYang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RogerHYang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-02T23:14:44Z",
        "updated_at": "2023-10-02T23:25:17Z",
        "closed_at": "2023-10-02T23:25:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7943",
            "html_url": "https://github.com/run-llama/llama_index/pull/7943",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7943.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7943.patch",
            "merged_at": "2023-10-02T23:25:17Z"
        },
        "body": "# Description\r\n\r\nAt `on_event_start`, pass the `parent_id` to the child handlers in the base `CallbackManager`. This allows the handlers to construct their own `TraceMap` if needed. Otherwise the child handlers need to wait for the `end_trace` callback to get the final `TraceMap`. Furthermore, some code paths such LLM [chat](https://github.com/run-llama/llama_index/blob/2af7dacc53def707ccd691fa2e51304b6de7091f/llama_index/llms/base.py#L99C26) does not call the `start_trace` and `end_trace`, so handlers for the LLM event may not know right away whether the LLM event is standalone or part of a larger trace.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7943/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7942",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7942/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7942/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7942/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7942",
        "id": 1922792661,
        "node_id": "PR_kwDOIWuq585buDTI",
        "number": 7942,
        "title": "`LocalAI` removing `max_tokens` from payload",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-02T21:52:40Z",
        "updated_at": "2023-10-03T04:05:42Z",
        "closed_at": "2023-10-03T04:04:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7942",
            "html_url": "https://github.com/run-llama/llama_index/pull/7942",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7942.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7942.patch",
            "merged_at": "2023-10-03T04:04:27Z"
        },
        "body": "# Description\r\n\r\nThis PR fixes bugs in `LocalAI` and adds tests of them:\r\n- Removing `max_tokens` when unset\r\n- Making `NotImplementError` include relevant construction-time argument\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7942/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7942/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7941",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7941/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7941/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7941/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7941",
        "id": 1922554129,
        "node_id": "PR_kwDOIWuq585btNpc",
        "number": 7941,
        "title": "Adds `codespell` tool for enforcing good spelling",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-02T19:42:17Z",
        "updated_at": "2023-10-03T15:31:25Z",
        "closed_at": "2023-10-03T15:14:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7941",
            "html_url": "https://github.com/run-llama/llama_index/pull/7941",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7941.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7941.patch",
            "merged_at": "2023-10-03T15:14:02Z"
        },
        "body": "# Description\r\n\r\nI came across https://github.com/run-llama/llama_index/pull/7931, and decided to enforce typo fixing across the repo using `codespell`:\r\n- Adds `codespell` config to `pyproject.toml` and integrates with `make lint`\r\n- Fixes all files using `--write-changes` and `--interactive`\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\nThis is a breaking change, because I fixed a typo in a module name.\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7941/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7940",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7940/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7940/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7940/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7940",
        "id": 1922481951,
        "node_id": "PR_kwDOIWuq585bs9n8",
        "number": 7940,
        "title": "Clarifai integration for Embeddings",
        "user": {
            "login": "isaac-chung",
            "id": 48971969,
            "node_id": "MDQ6VXNlcjQ4OTcxOTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/48971969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isaac-chung",
            "html_url": "https://github.com/isaac-chung",
            "followers_url": "https://api.github.com/users/isaac-chung/followers",
            "following_url": "https://api.github.com/users/isaac-chung/following{/other_user}",
            "gists_url": "https://api.github.com/users/isaac-chung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/isaac-chung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/isaac-chung/subscriptions",
            "organizations_url": "https://api.github.com/users/isaac-chung/orgs",
            "repos_url": "https://api.github.com/users/isaac-chung/repos",
            "events_url": "https://api.github.com/users/isaac-chung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/isaac-chung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6003270643,
                "node_id": "LA_kwDOIWuq588AAAABZdKj8w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/embedding",
                "name": "embedding",
                "color": "1D775A",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-02T19:03:37Z",
        "updated_at": "2023-10-03T06:59:28Z",
        "closed_at": "2023-10-03T00:21:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7940",
            "html_url": "https://github.com/run-llama/llama_index/pull/7940",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7940.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7940.patch",
            "merged_at": "2023-10-03T00:21:06Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\n- Introduce integration with Clarifai for embeddings\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7940/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7940/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7939",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7939/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7939/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7939/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7939",
        "id": 1922426600,
        "node_id": "I_kwDOIWuq585ylebo",
        "number": 7939,
        "title": "[Question]:Chat Engine with context information with customized prompt - Low-level API",
        "user": {
            "login": "ramakrse",
            "id": 19791881,
            "node_id": "MDQ6VXNlcjE5NzkxODgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/19791881?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ramakrse",
            "html_url": "https://github.com/ramakrse",
            "followers_url": "https://api.github.com/users/ramakrse/followers",
            "following_url": "https://api.github.com/users/ramakrse/following{/other_user}",
            "gists_url": "https://api.github.com/users/ramakrse/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ramakrse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ramakrse/subscriptions",
            "organizations_url": "https://api.github.com/users/ramakrse/orgs",
            "repos_url": "https://api.github.com/users/ramakrse/repos",
            "events_url": "https://api.github.com/users/ramakrse/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ramakrse/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-02T18:36:14Z",
        "updated_at": "2023-10-24T06:31:40Z",
        "closed_at": "2023-10-24T06:31:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am using the currently high level below APIs for Context Chat Engine.\r\n``chat_engine = index.as_chat_engine(\r\n            chat_mode='context', \r\n            llm = my_llm,  memory=chat_memory, similarity_top_k=top_k,\r\n            system_prompt=system_prompt, verbose=True) `\r\n            \r\nI would like to give my own prompt template of system prompt, CHAT_TEXT_QA_PROMPT, CHAT_REFINE_PROMPT, as well as a context template.  Request help on that.\r\n\r\nWhen, I attempted with `ContextChatEngine`, Unable to provideCHAT_TEXT_QA_PROMPT. Moreover, I need to explicitly give chat_history, as the memory.chat_history is empty always.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7939/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7938",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7938/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7938/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7938/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7938",
        "id": 1922388218,
        "node_id": "I_kwDOIWuq585ylVD6",
        "number": 7938,
        "title": "[Bug]: Stop downloading TikToken when a custom tokeniser is passed in SentenceSplitter.",
        "user": {
            "login": "winstxnhdw",
            "id": 56998716,
            "node_id": "MDQ6VXNlcjU2OTk4NzE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/56998716?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/winstxnhdw",
            "html_url": "https://github.com/winstxnhdw",
            "followers_url": "https://api.github.com/users/winstxnhdw/followers",
            "following_url": "https://api.github.com/users/winstxnhdw/following{/other_user}",
            "gists_url": "https://api.github.com/users/winstxnhdw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/winstxnhdw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/winstxnhdw/subscriptions",
            "organizations_url": "https://api.github.com/users/winstxnhdw/orgs",
            "repos_url": "https://api.github.com/users/winstxnhdw/repos",
            "events_url": "https://api.github.com/users/winstxnhdw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/winstxnhdw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-02T18:10:21Z",
        "updated_at": "2023-10-03T13:39:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI am trying to run my applications without internet access but I keep getting `ConnectionError` and the trace shows that `SentenceSplitter` is calling `tiktoken.get_encoding('gpt_2')`. Why is this even a thing?\r\n\r\n\r\n```python\r\nSentenceSplitter(\r\n   chunk_size=128,\r\n   chunk_overlap=0,\r\n   tokenizer=LLM.tokeniser\r\n)\r\n```\n\n### Version\n\n0.8.37\n\n### Steps to Reproduce\n\n```python\r\nSentenceSplitter(\r\n   chunk_size=128,\r\n   chunk_overlap=0,\r\n   tokenizer=LLM.tokeniser\r\n)\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\nbackend  |     from llama_index.text_splitter import SentenceSplitter\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/llama_index/__init__.py\", line 20, in <module>\r\nbackend  |     from llama_index.indices.keyword_table import (\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/__init__.py\", line 4, in <module>\r\nbackend  |     from llama_index.indices.keyword_table.base import (\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/keyword_table/__init__.py\", line 4, in <module>\r\nbackend  |     from llama_index.indices.keyword_table.base import (\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/keyword_table/base.py\", line 17, in <module>\r\nbackend  |     from llama_index.indices.base import BaseIndex\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/base.py\", line 6, in <module>\r\nbackend  |     from llama_index.chat_engine.types import BaseChatEngine, ChatMode\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/llama_index/chat_engine/__init__.py\", line 1, in <module>\r\nbackend  |     from llama_index.chat_engine.condense_question import CondenseQuestionChatEngine\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/llama_index/chat_engine/condense_question.py\", line 6, in <module>\r\nbackend  |     from llama_index.chat_engine.types import (\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/llama_index/chat_engine/types.py\", line 11, in <module>\r\nbackend  |     from llama_index.memory import BaseMemory\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/llama_index/memory/__init__.py\", line 1, in <module>\r\nbackend  |     from llama_index.memory.chat_memory_buffer import ChatMemoryBuffer\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/llama_index/memory/chat_memory_buffer.py\", line 12, in <module>\r\nbackend  |     class ChatMemoryBuffer(BaseMemory):\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/llama_index/memory/chat_memory_buffer.py\", line 18, in ChatMemoryBuffer\r\nbackend  |     default_factory=cast(Callable[[], Any], GlobalsHelper().tokenizer),\r\nbackend  |      \r\nbackend  |                       \r\nbackend  |  \r\nbackend  |      \r\nbackend  |    \r\nbackend  |         ^^^^^\r\nbackend  | ^^^^^^\r\nbackend  | ^^^^^^^^^^^^^^\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/llama_index/utils.py\", line 52, in tokenizer\r\nbackend  |     enc = tiktoken.get_encoding(\"gpt2\")\r\nbackend  |           ^^^^^\r\nbackend  | ^^\r\nbackend  | ^^^^^^^^^^^\r\nbackend  | ^^^^^^^\r\nbackend  | ^^^\r\nbackend  | ^\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/tiktoken/registry.py\", line 73, in get_encoding\r\nbackend  |     enc = Encoding(**constructor())\r\nbackend  |       \r\nbackend  |       \r\nbackend  |         \r\nbackend  |  ^^^^^^^^\r\nbackend  | ^^^^^\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/tiktoken_ext/openai_public.py\", line 11, in gpt2\r\nbackend  |     mergeable_ranks = data_gym_to_mergeable_bpe_ranks(\r\nbackend  |         \r\nbackend  |        \r\nbackend  |    \r\nbackend  |     ^\r\nbackend  | ^^^\r\nbackend  | ^^^^^^\r\nbackend  | ^^^^^\r\nbackend  | ^^\r\nbackend  | ^^^\r\nbackend  | ^^\r\nbackend  | ^^^^^^^^^\r\nbackend  | ^\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/tiktoken/load.py\", line 75, in data_gym_to_mergeable_bpe_ranks\r\nbackend  |     vocab_bpe_contents = read_file_cached(vocab_bpe_file).decode()\r\nbackend  |         \r\nbackend  |       \r\nbackend  |     \r\nbackend  |  \r\nbackend  |     \r\nbackend  |  \r\nbackend  |  ^\r\nbackend  | ^^\r\nbackend  | ^^^^^^^\r\nbackend  | ^^^^^^^^^^\r\nbackend  | ^^^^^\r\nbackend  | ^^\r\nbackend  | ^\r\nbackend  | ^^\r\nbackend  | ^\r\nbackend  | ^\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/tiktoken/load.py\", line 48, in read_file_cached\r\nbackend  |     contents = read_file(blobpath)\r\nbackend  |       \r\nbackend  |   \r\nbackend  |     \r\nbackend  |    ^\r\nbackend  | ^^^\r\nbackend  | ^^\r\nbackend  | ^^^\r\nbackend  | ^^\r\nbackend  | ^\r\nbackend  | ^^^^^^\r\nbackend  | ^\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/tiktoken/load.py\", line 24, in read_file\r\nbackend  |     resp = requests.get(blobpath)\r\nbackend  |  \r\nbackend  |           ^^^^^^^^^\r\nbackend  | ^^^^^^^^^^\r\nbackend  | ^^^\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/requests/api.py\", line 73, in get\r\nbackend  |     return request(\"get\", url, params=params, **kwargs)\r\nbackend  |            ^\r\nbackend  | ^^^^^\r\nbackend  | ^^^\r\nbackend  | ^^^\r\nbackend  | ^^^^^^^^^\r\nbackend  | ^^^^^^^^^\r\nbackend  | ^\r\nbackend  | ^^\r\nbackend  | ^^^\r\nbackend  | ^\r\nbackend  | ^^^^^^^\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/requests/api.py\", line 59, in request\r\nbackend  |     return session.request(method=method, url=url, **kwargs)\r\nbackend  |       \r\nbackend  |   \r\nbackend  |  \r\nbackend  |  \r\nbackend  |  ^\r\nbackend  | ^\r\nbackend  | ^\r\nbackend  | ^^^\r\nbackend  | ^^\r\nbackend  | ^^^^\r\nbackend  | ^\r\nbackend  | ^^^\r\nbackend  | ^^^^^\r\nbackend  | ^^^^^\r\nbackend  | ^^^^^\r\nbackend  | ^^^^^^^^^^^\r\nbackend  | ^\r\nbackend  | ^^^\r\nbackend  | ^^^\r\nbackend  | \r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/requests/sessions.py\", line 589, in request\r\nbackend  | \r\nbackend  |     resp = self.send(prep, **send_kwargs)\r\nbackend  |            ^^^^\r\nbackend  | ^^^^^\r\nbackend  | ^^^^^\r\nbackend  | ^^^^^^^\r\nbackend  | ^^^^^^^\r\nbackend  | ^^\r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/requests/sessions.py\", line 703, in send\r\nbackend  |     r = adapter.send(request, **kwargs)\r\nbackend  |         ^^^\r\nbackend  | ^^^^^^\r\nbackend  | ^^^^^^^\r\nbackend  | ^^^^\r\nbackend  | ^^^^\r\nbackend  | ^^^^^^^\r\nbackend  | \r\nbackend  |   File \"/usr/local/lib/python3.11/site-packages/requests/adapters.py\", line 519, in send\r\nbackend  | \r\nbackend  |     raise ConnectionError(e, request=request)\r\nbackend  | requests.exceptions.ConnectionError: HTTPSConnectionPool(host='openaipublic.blob.core.windows.net', port=443): Max retries exceeded with url: /gpt-2/encodings/main/vocab.bpe (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fe25c8364d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))\r\nbackend exited with code 1\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7938/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7938/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7937",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7937/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7937/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7937/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7937",
        "id": 1922379990,
        "node_id": "PR_kwDOIWuq585bsoOE",
        "number": 7937,
        "title": "[version] bump to v0.8.38",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-02T18:04:26Z",
        "updated_at": "2023-10-03T18:49:26Z",
        "closed_at": "2023-10-02T18:11:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7937",
            "html_url": "https://github.com/run-llama/llama_index/pull/7937",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7937.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7937.patch",
            "merged_at": "2023-10-02T18:11:45Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7937/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7937/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7936",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7936/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7936/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7936/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7936",
        "id": 1922342518,
        "node_id": "PR_kwDOIWuq585bsgGg",
        "number": 7936,
        "title": "docs(one-click): add proper titles for arize-phoenix integrations",
        "user": {
            "login": "mikeldking",
            "id": 5640648,
            "node_id": "MDQ6VXNlcjU2NDA2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5640648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeldking",
            "html_url": "https://github.com/mikeldking",
            "followers_url": "https://api.github.com/users/mikeldking/followers",
            "following_url": "https://api.github.com/users/mikeldking/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeldking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeldking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeldking/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeldking/orgs",
            "repos_url": "https://api.github.com/users/mikeldking/repos",
            "events_url": "https://api.github.com/users/mikeldking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeldking/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-02T17:37:02Z",
        "updated_at": "2023-10-02T17:46:04Z",
        "closed_at": "2023-10-02T17:44:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7936",
            "html_url": "https://github.com/run-llama/llama_index/pull/7936",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7936.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7936.patch",
            "merged_at": "2023-10-02T17:44:38Z"
        },
        "body": "# Description\r\n\r\nThe one-click integrations for arize-phoenix lacked proper titles, causing the side-nav to be a bit vague and hard to search. This adds explicit titles to the guides so that the nav is cleaner and easier to parse.\r\n\r\n<img width=\"260\" alt=\"Screenshot 2023-10-02 at 11 35 41 AM\" src=\"https://github.com/run-llama/llama_index/assets/5640648/d17a0f0c-cfe7-455f-9bd5-795fb43e9ca4\">\r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7936/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7936/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7935",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7935/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7935/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7935/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7935",
        "id": 1922213557,
        "node_id": "PR_kwDOIWuq585bsEQ2",
        "number": 7935,
        "title": "remove mentions of old LlamaToolKit",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-02T16:07:49Z",
        "updated_at": "2023-10-02T16:11:07Z",
        "closed_at": "2023-10-02T16:11:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7935",
            "html_url": "https://github.com/run-llama/llama_index/pull/7935",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7935.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7935.patch",
            "merged_at": "2023-10-02T16:11:06Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7935/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7935/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7934",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7934/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7934/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7934/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7934",
        "id": 1921790004,
        "node_id": "PR_kwDOIWuq585bqoyc",
        "number": 7934,
        "title": "refactor: improve model loading, weighted pooling fix t5 model loading",
        "user": {
            "login": "bwanglzu",
            "id": 9794489,
            "node_id": "MDQ6VXNlcjk3OTQ0ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9794489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bwanglzu",
            "html_url": "https://github.com/bwanglzu",
            "followers_url": "https://api.github.com/users/bwanglzu/followers",
            "following_url": "https://api.github.com/users/bwanglzu/following{/other_user}",
            "gists_url": "https://api.github.com/users/bwanglzu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bwanglzu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bwanglzu/subscriptions",
            "organizations_url": "https://api.github.com/users/bwanglzu/orgs",
            "repos_url": "https://api.github.com/users/bwanglzu/repos",
            "events_url": "https://api.github.com/users/bwanglzu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bwanglzu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-02T12:07:01Z",
        "updated_at": "2023-11-09T03:19:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7934",
            "html_url": "https://github.com/run-llama/llama_index/pull/7934",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7934.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7934.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\ni made several changes to the HF embedding class to:\r\n\r\n1. allow pass `model_args` and `tokenizer_args` to the auto classes, this could allow user to specify some important parameters, such as `revision` or `trust_remote_code`.\r\n2. fix t5 model loading, it uses a different architecture than other models.\r\n3. added `weighted mean pooling`, allows use LLM as an embedding model, proposed in SGPT paper.\r\n4. Not sure if i should do it or not, i renamed `model_name` to `model_name_or_path` to keep consistent with HF. I can revert this change to avoid breaking change.\r\n5. Change the default pooling to `mean` since it always brings better embedding quality compared to cls. Please refenrece to sbert paper or sentence-t5 paper.\r\n\r\n~Something quite confuse me is in the current implementation, the class allows not only `model_name` but also a `model` to be passed into the constructor, my personal suggestion is keeping `model_name` and `cache_dir` is sufficiently enough.~\r\n\r\nfyi @logan-markewich \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7934/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7933",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7933/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7933/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7933/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7933",
        "id": 1921505957,
        "node_id": "PR_kwDOIWuq585bpr4N",
        "number": 7933,
        "title": "Add async_add implementation and async upsert to Pinecone vector store",
        "user": {
            "login": "DosticJelena",
            "id": 49482144,
            "node_id": "MDQ6VXNlcjQ5NDgyMTQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/49482144?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DosticJelena",
            "html_url": "https://github.com/DosticJelena",
            "followers_url": "https://api.github.com/users/DosticJelena/followers",
            "following_url": "https://api.github.com/users/DosticJelena/following{/other_user}",
            "gists_url": "https://api.github.com/users/DosticJelena/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DosticJelena/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DosticJelena/subscriptions",
            "organizations_url": "https://api.github.com/users/DosticJelena/orgs",
            "repos_url": "https://api.github.com/users/DosticJelena/repos",
            "events_url": "https://api.github.com/users/DosticJelena/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DosticJelena/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-02T08:53:08Z",
        "updated_at": "2023-10-17T10:12:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7933",
            "html_url": "https://github.com/run-llama/llama_index/pull/7933",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7933.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7933.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nAdded upsert optimizations to Pinecone vector store which include the following changes:\r\n\r\n- Modified the upsert function to use asynchronous requests for each batch.\r\n- Increased the batch size from 100 to 200, based on experimental results.\r\n- Implemented asynchronous version for the `add` method (`async_add`) in the Pinecone vector store.\r\n- Changed `add` to `async_add` in `_aget_node_with_embedding` method in _llama_index/indices/vector_store/base.py_ file.\r\n- Made a small modification in Pinecone's tests to follow the new parameter name.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Ran existing unit/integration tests\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7933/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7933/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7932",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7932/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7932/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7932/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7932",
        "id": 1921416707,
        "node_id": "PR_kwDOIWuq585bpZAF",
        "number": 7932,
        "title": "docs fix typo in example ondemand_loader_tool",
        "user": {
            "login": "stepdi",
            "id": 2643330,
            "node_id": "MDQ6VXNlcjI2NDMzMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2643330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stepdi",
            "html_url": "https://github.com/stepdi",
            "followers_url": "https://api.github.com/users/stepdi/followers",
            "following_url": "https://api.github.com/users/stepdi/following{/other_user}",
            "gists_url": "https://api.github.com/users/stepdi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stepdi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stepdi/subscriptions",
            "organizations_url": "https://api.github.com/users/stepdi/orgs",
            "repos_url": "https://api.github.com/users/stepdi/repos",
            "events_url": "https://api.github.com/users/stepdi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stepdi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-02T07:50:05Z",
        "updated_at": "2023-10-02T14:23:23Z",
        "closed_at": "2023-10-02T14:23:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7932",
            "html_url": "https://github.com/run-llama/llama_index/pull/7932",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7932.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7932.patch",
            "merged_at": "2023-10-02T14:23:23Z"
        },
        "body": "Fixed typo in an example code in docs: `on_demand_loader_tool` -> `ondemand_loader_tool` to make it work",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7932/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7932/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7931",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7931/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7931/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7931/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7931",
        "id": 1921358794,
        "node_id": "PR_kwDOIWuq585bpM9g",
        "number": 7931,
        "title": "Fix typo in usage_documents.md (fixes #7896)",
        "user": {
            "login": "kaushalpowar",
            "id": 90775147,
            "node_id": "MDQ6VXNlcjkwNzc1MTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/90775147?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kaushalpowar",
            "html_url": "https://github.com/kaushalpowar",
            "followers_url": "https://api.github.com/users/kaushalpowar/followers",
            "following_url": "https://api.github.com/users/kaushalpowar/following{/other_user}",
            "gists_url": "https://api.github.com/users/kaushalpowar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kaushalpowar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kaushalpowar/subscriptions",
            "organizations_url": "https://api.github.com/users/kaushalpowar/orgs",
            "repos_url": "https://api.github.com/users/kaushalpowar/repos",
            "events_url": "https://api.github.com/users/kaushalpowar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kaushalpowar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-02T07:04:06Z",
        "updated_at": "2023-10-02T15:06:36Z",
        "closed_at": "2023-10-02T14:22:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7931",
            "html_url": "https://github.com/run-llama/llama_index/pull/7931",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7931.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7931.patch",
            "merged_at": "2023-10-02T14:22:45Z"
        },
        "body": "Fixes #7896 and #7874\r\n\r\nI found the issue and fixed the typo in the documentation. This resolves issue #7896 and issue #7874\r\n\r\n# Description\r\n\r\nI found the issue and fixed the typo in the documentation. This resolves issue #7896\r\nFixed typo in router.ipynb. This resolves issue #7874 \r\n\r\nFixes # (7896)\r\nFixes # (7874)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n\r\n- [x] I have made corresponding changes to the documentation\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7931/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7931/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7930",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7930/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7930/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7930/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7930",
        "id": 1921209406,
        "node_id": "I_kwDOIWuq585yg1Q-",
        "number": 7930,
        "title": "[Question]: Got error Streaming not supported for async on version when migrate from 0.7 to 0.8.37",
        "user": {
            "login": "dinhan92",
            "id": 86275789,
            "node_id": "MDQ6VXNlcjg2Mjc1Nzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/86275789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dinhan92",
            "html_url": "https://github.com/dinhan92",
            "followers_url": "https://api.github.com/users/dinhan92/followers",
            "following_url": "https://api.github.com/users/dinhan92/following{/other_user}",
            "gists_url": "https://api.github.com/users/dinhan92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dinhan92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dinhan92/subscriptions",
            "organizations_url": "https://api.github.com/users/dinhan92/orgs",
            "repos_url": "https://api.github.com/users/dinhan92/repos",
            "events_url": "https://api.github.com/users/dinhan92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dinhan92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-02T04:03:25Z",
        "updated_at": "2023-10-03T06:47:15Z",
        "closed_at": "2023-10-03T06:47:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHere is my code:\r\n\r\n``` python\r\nasync def chatbot(**kwargs) -> str:\r\n    try:\r\n        \r\n        data = await request.data\r\n        input_text = data.decode(\"utf-8\")\r\n\r\n       \r\n        \r\n        # T\u1eeb \u0111\u00e2y\r\n        report_indices = {}\r\n        query_engine = {}\r\n        query_engine_tools = []\r\n        # rebuild storage context\r\n        for name_pdf in name_pdfs:\r\n            name_pdf_get = name_pdf.Name\r\n            storage_context = StorageContext.from_defaults(persist_dir=f\"./storage_{name_pdf_get}\")\r\n            report_indices[name_pdf_get] = load_index_from_storage(storage_context = storage_context,\r\n                                        # embed_model=embed_model, \r\n                                        service_context = service_context)\r\n            query_engine[name_pdf_get] = report_indices[name_pdf_get].as_query_engine(streaming = True)\r\n            query_engine_tools.append(QueryEngineTool(query_engine=query_engine[name_pdf_get], metadata = ToolMetadata(name=name_pdf_get, description=name_pdf.Description)))\r\n\r\n       \r\n\r\n        agent = OpenAIAgent.from_tools(\r\n            tools=query_engine_tools,\r\n            llm=llm,\r\n            chat_history=[\r\n                ChatMessage(role=MessageRole.USER, content=\"Ch\u00e0o BSNH AI, ch\u00fang ta s\u1ebd b\u00e0n v\u1ec1 n\u00f4ng nghi\u1ec7p ng\u00e0y h\u00f4m nay.\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"\u0110\u01b0\u1ee3c b\u1ea1n \u01a1i, nghe c\u00f3 v\u1ebb h\u1ea5p d\u1eabn.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"B\u1ea1n c\u00f3 kh\u1ecfe kh\u00f4ng?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"T\u00f4i r\u1ea5t kh\u1ecfe, c\u00e1m \u01a1n.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"S\u1ee9c kh\u1ecfe c\u1ee7a b\u1ea1n nh\u01b0 th\u1ebf n\u00e0o?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"T\u00f4i c\u1ef1c k\u1ef3 kh\u1ecfe lu\u00f4n \u1ea5y, s\u1ee9c c\u00f3 th\u1ec3 v\u1ee1 n\u00fai.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"C\u00e2y khoai lang l\u00e0 c\u00e2y g\u00ec?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"C\u00e2y khoai lang l\u00e0 m\u1ed9t lo\u1ea1i c\u00e2y l\u01b0\u01a1ng th\u1ef1c.\"),\r\n            ],\r\n            prefix_messages=[\r\n                ChatMessage(role=MessageRole.SYSTEM, content=\"B\u1ea1n l\u00e0 m\u1ed9t tr\u1ee3 l\u00fd \u1ea3o c\u1ee7a TNH99, c\u00f3 t\u00ean l\u00e0 BSNH AI, \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi TNH99, ch\u1ee7 \u0111\u1ec1 ch\u00ednh c\u1ee7a b\u1ea1n l\u00e0 n\u00f4ng nghi\u1ec7p. N\u1ebfu b\u1ea1n kh\u00f4ng tr\u1ea3 l\u1eddi \u0111\u01b0\u1ee3c h\u00e3y b\u1ea3o ng\u01b0\u1eddi d\u00f9ng li\u00ean h\u1ec7 v\u1edbi TNH99. Vui l\u00f2ng tr\u1ea3 l\u1eddi b\u1eb1ng ti\u1ebfng Vi\u1ec7t.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"Ch\u00e0o BSNH AI, ch\u00fang ta s\u1ebd b\u00e0n v\u1ec1 n\u00f4ng nghi\u1ec7p ng\u00e0y h\u00f4m nay.\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"\u0110\u01b0\u1ee3c b\u1ea1n \u01a1i, nghe c\u00f3 v\u1ebb h\u1ea5p d\u1eabn.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"B\u1ea1n c\u00f3 kh\u1ecfe kh\u00f4ng?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"T\u00f4i r\u1ea5t kh\u1ecfe, c\u00e1m \u01a1n.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"S\u1ee9c kh\u1ecfe c\u1ee7a b\u1ea1n nh\u01b0 th\u1ebf n\u00e0o?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"T\u00f4i c\u1ef1c k\u1ef3 kh\u1ecfe lu\u00f4n \u1ea5y, s\u1ee9c c\u00f3 th\u1ec3 v\u1ee1 n\u00fai.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"C\u00e2y khoai lang l\u00e0 c\u00e2y g\u00ec?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"C\u00e2y khoai lang l\u00e0 m\u1ed9t lo\u1ea1i c\u00e2y l\u01b0\u01a1ng th\u1ef1c.\"),\r\n            ],\r\n            # system_prompt=\"B\u1ea1n l\u00e0 m\u1ed9t tr\u1ee3 l\u00fd \u1ea3o c\u1ee7a TNH99, c\u00f3 t\u00ean l\u00e0 BSNH AI, \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi TNH99, ch\u1ee7 \u0111\u1ec1 ch\u00ednh c\u1ee7a b\u1ea1n l\u00e0 n\u00f4ng nghi\u1ec7p. N\u1ebfu b\u1ea1n kh\u00f4ng tr\u1ea3 l\u1eddi \u0111\u01b0\u1ee3c h\u00e3y b\u1ea3o ng\u01b0\u1eddi d\u00f9ng li\u00ean h\u1ec7 v\u1edbi TNH99. Vui l\u00f2ng tr\u1ea3 l\u1eddi b\u1eb1ng ti\u1ebfng Vi\u1ec7t.\",\r\n            verbose=True\r\n        )\r\n\r\n        agent_stream = await agent.astream_chat(input_text, chat_history=[\r\n                ChatMessage(role=MessageRole.USER, content=\"Ch\u00e0o BSNH AI, ch\u00fang ta s\u1ebd b\u00e0n v\u1ec1 n\u00f4ng nghi\u1ec7p ng\u00e0y h\u00f4m nay.\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"\u0110\u01b0\u1ee3c b\u1ea1n \u01a1i, nghe c\u00f3 v\u1ebb h\u1ea5p d\u1eabn.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"B\u1ea1n c\u00f3 kh\u1ecfe kh\u00f4ng?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"T\u00f4i r\u1ea5t kh\u1ecfe, c\u00e1m \u01a1n.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"S\u1ee9c kh\u1ecfe c\u1ee7a b\u1ea1n nh\u01b0 th\u1ebf n\u00e0o?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"T\u00f4i c\u1ef1c k\u1ef3 kh\u1ecfe lu\u00f4n \u1ea5y, s\u1ee9c c\u00f3 th\u1ec3 v\u1ee1 n\u00fai.\"),\r\n                ChatMessage(role=MessageRole.USER, content=\"C\u00e2y khoai lang l\u00e0 c\u00e2y g\u00ec?\"),\r\n                ChatMessage(role=MessageRole.ASSISTANT, content=\"C\u00e2y khoai lang l\u00e0 m\u1ed9t lo\u1ea1i c\u00e2y l\u01b0\u01a1ng th\u1ef1c.\"),\r\n            ])\r\n\r\n        \r\n\r\n        @stream_with_context\r\n        async def generate():\r\n           \r\n                \r\n            savedAnswer = \"\";\r\n            \r\n            async for token in agent_stream.async_response_gen():\r\n               \r\n                savedAnswer += token\r\n                yield token;\r\n                await asyncio.sleep(0)\r\n\r\n            mycol.insert_one(ChatHistory(Question=input_text, Answer=savedAnswer, IsDone=True, IdUser=kwargs['idUser']).__dict__)\r\n\r\n          \r\n\r\n        return app.response_class(generate())\r\n        # return app.response_class(stream_with_context(iter))\r\n    except Exception as e:\r\n        print(e)\r\n        exception = \"Xin l\u1ed7i, BSNH AI \u0111ang b\u1eadn.\"\r\n        @stream_with_context\r\n        async def generate():\r\n            for text in exception:\r\n                yield text;\r\n\r\n        return app.response_class(generate())\r\n```\r\nI got error: Streaming not supported for async at agent_stream = await agent.astream_chat(input_text, chat_history=[\r\nHow do I fix this?\r\nThank you",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7930/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7930/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7929",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7929/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7929/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7929/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7929",
        "id": 1921187470,
        "node_id": "PR_kwDOIWuq585booZD",
        "number": 7929,
        "title": "Implement own SQLDatabase class, remove langchain",
        "user": {
            "login": "Javtor",
            "id": 8462127,
            "node_id": "MDQ6VXNlcjg0NjIxMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8462127?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Javtor",
            "html_url": "https://github.com/Javtor",
            "followers_url": "https://api.github.com/users/Javtor/followers",
            "following_url": "https://api.github.com/users/Javtor/following{/other_user}",
            "gists_url": "https://api.github.com/users/Javtor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Javtor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Javtor/subscriptions",
            "organizations_url": "https://api.github.com/users/Javtor/orgs",
            "repos_url": "https://api.github.com/users/Javtor/repos",
            "events_url": "https://api.github.com/users/Javtor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Javtor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-02T03:31:22Z",
        "updated_at": "2023-10-03T00:22:36Z",
        "closed_at": "2023-10-03T00:22:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7929",
            "html_url": "https://github.com/run-llama/llama_index/pull/7929",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7929.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7929.patch",
            "merged_at": "2023-10-03T00:22:35Z"
        },
        "body": "# Description\r\n\r\nImplement own SQLDatabase class, remove langchain dependency\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7929/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7929/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7928",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7928/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7928/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7928/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7928",
        "id": 1921185240,
        "node_id": "PR_kwDOIWuq585bon8F",
        "number": 7928,
        "title": "minor agent refactor: add tool retrieval to both openai and react agent",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-02T03:27:59Z",
        "updated_at": "2023-10-11T05:34:32Z",
        "closed_at": "2023-10-11T05:34:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7928",
            "html_url": "https://github.com/run-llama/llama_index/pull/7928",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7928.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7928.patch",
            "merged_at": "2023-10-11T05:34:31Z"
        },
        "body": "In this PR, did some refactor to add the option of tool retrieval in both the openai and react agent.\r\n\r\nNow both `OpenAIAgent` and `ReActAgent` support passing in a `tool_retriever` that can perform retrieval of tools during query-time.\r\n\r\nBefore, the openai agent had a subclass `FnRetrieverOpenAIAgent` that did this. We could've added another subclass for the react agent. But I wanted to avoid the proliferation of subclasses. \r\n\r\nFuture work:\r\n- Right now retrieval happens by passing in the current chat message to the object retriever. But this completely ignores conversation history. There's probably a more general abstraction we can do here. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7928/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7927",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7927/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7927/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7927/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7927",
        "id": 1921048320,
        "node_id": "PR_kwDOIWuq585boK0q",
        "number": 7927,
        "title": "Docs: typofix",
        "user": {
            "login": "revolunet",
            "id": 124937,
            "node_id": "MDQ6VXNlcjEyNDkzNw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124937?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revolunet",
            "html_url": "https://github.com/revolunet",
            "followers_url": "https://api.github.com/users/revolunet/followers",
            "following_url": "https://api.github.com/users/revolunet/following{/other_user}",
            "gists_url": "https://api.github.com/users/revolunet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revolunet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revolunet/subscriptions",
            "organizations_url": "https://api.github.com/users/revolunet/orgs",
            "repos_url": "https://api.github.com/users/revolunet/repos",
            "events_url": "https://api.github.com/users/revolunet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revolunet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-02T00:14:21Z",
        "updated_at": "2023-10-02T01:14:57Z",
        "closed_at": "2023-10-02T01:14:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7927",
            "html_url": "https://github.com/run-llama/llama_index/pull/7927",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7927.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7927.patch",
            "merged_at": "2023-10-02T01:14:57Z"
        },
        "body": "Just some typo fixes. Great article btw !",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7927/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7927/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7926",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7926/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7926/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7926/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7926",
        "id": 1921011986,
        "node_id": "PR_kwDOIWuq585boDc2",
        "number": 7926,
        "title": "Filtering out answers not present in data does not happen",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-01T22:43:26Z",
        "updated_at": "2023-10-02T14:24:15Z",
        "closed_at": "2023-10-02T14:24:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7926",
            "html_url": "https://github.com/run-llama/llama_index/pull/7926",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7926.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7926.patch",
            "merged_at": "2023-10-02T14:24:14Z"
        },
        "body": "# Description\r\n\r\nThe notebook attempts to filter out of the training data any questions not actually answered by the context, but the test `if \"NO\" in eval` is always false because eval is not a string, it's type `llama_index.llms.base.CompletionResponse`. This casts to a string and makes the filtering work.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7926/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7926/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7925",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7925/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7925/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7925/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7925",
        "id": 1920905431,
        "node_id": "I_kwDOIWuq585yfrDX",
        "number": 7925,
        "title": "[Bug]: start_char_idx and end_char_idx removed",
        "user": {
            "login": "tkreuder",
            "id": 385110,
            "node_id": "MDQ6VXNlcjM4NTExMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/385110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tkreuder",
            "html_url": "https://github.com/tkreuder",
            "followers_url": "https://api.github.com/users/tkreuder/followers",
            "following_url": "https://api.github.com/users/tkreuder/following{/other_user}",
            "gists_url": "https://api.github.com/users/tkreuder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tkreuder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tkreuder/subscriptions",
            "organizations_url": "https://api.github.com/users/tkreuder/orgs",
            "repos_url": "https://api.github.com/users/tkreuder/repos",
            "events_url": "https://api.github.com/users/tkreuder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tkreuder/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-01T18:31:12Z",
        "updated_at": "2023-10-02T11:49:20Z",
        "closed_at": "2023-10-01T21:33:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nThis commit https://github.com/jerryjliu/llama_index/pull/7236/commits/f887df2ee95ec693b28e6d575afe2f06bb45cd55 removed start_char_idx and end_char_idx from node_utils.py\n\n### Version\n\n0.8.37\n\n### Steps to Reproduce\n\nUse SimpleParser and you will always get start_char_idx and end_char_idx of None.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7925/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7925/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7924",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7924/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7924/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7924/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7924",
        "id": 1920745573,
        "node_id": "I_kwDOIWuq585yfEBl",
        "number": 7924,
        "title": "[Question]: LlamaCPP system prompt",
        "user": {
            "login": "mzoonAlwalmani",
            "id": 23708704,
            "node_id": "MDQ6VXNlcjIzNzA4NzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/23708704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzoonAlwalmani",
            "html_url": "https://github.com/mzoonAlwalmani",
            "followers_url": "https://api.github.com/users/mzoonAlwalmani/followers",
            "following_url": "https://api.github.com/users/mzoonAlwalmani/following{/other_user}",
            "gists_url": "https://api.github.com/users/mzoonAlwalmani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mzoonAlwalmani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mzoonAlwalmani/subscriptions",
            "organizations_url": "https://api.github.com/users/mzoonAlwalmani/orgs",
            "repos_url": "https://api.github.com/users/mzoonAlwalmani/repos",
            "events_url": "https://api.github.com/users/mzoonAlwalmani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mzoonAlwalmani/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-10-01T12:37:35Z",
        "updated_at": "2023-10-02T04:39:56Z",
        "closed_at": "2023-10-01T21:39:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\n\r\nI am using LlamaCPP and I want to pass a system prompt. i believe I should use messages_to_prompt, could you please share with me how to correctly pass a prompt. i am looking for something like HuggingFaceLLM where I can pass the system prompt easily.  \r\n\r\n\r\n\r\n`from llama_index.llms import LlamaCPP\r\nfrom llama_index.llms.llama_utils import messages_to_prompt, completion_to_prompt\r\n\r\nllm = LlamaCPP(\r\n    # You can pass in the URL to a GGML model to download it automatically\r\n    model_url=model_url,\r\n    # optionally, you can set the path to a pre-downloaded model instead of model_url\r\n    model_path= model_path,\r\n    temperature=0.1,\r\n    max_new_tokens=256,\r\n    # llama2 has a context window of 4096 tokens, but we set it lower to allow for some wiggle room\r\n    context_window=3900,\r\n    # kwargs to pass to __call__()\r\n    generate_kwargs={},\r\n    # kwargs to pass to __init__()\r\n    # set to at least 1 to use GPU\r\n    model_kwargs={\"n_gpu_layers\": 1},\r\n    # transform inputs into Llama2 format\r\n    messages_to_prompt=messages_to_prompt,\r\n    completion_to_prompt=completion_to_prompt,\r\n    verbose=True,\r\n)`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7924/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7924/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7923",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7923/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7923/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7923/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7923",
        "id": 1920641998,
        "node_id": "PR_kwDOIWuq585bm3od",
        "number": 7923,
        "title": "add multi-document agent notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-01T08:33:26Z",
        "updated_at": "2023-10-01T16:22:54Z",
        "closed_at": "2023-10-01T16:22:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7923",
            "html_url": "https://github.com/run-llama/llama_index/pull/7923",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7923.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7923.patch",
            "merged_at": "2023-10-01T16:22:53Z"
        },
        "body": "- added a \"multi-agent\" demo\r\n- this can load in large number of docs and answer a bunch of questions over them: QA, summarization, compare/contrast,a and more.\r\n- hierarchical agent: top-level agent, tool retrieval -> document agents per document ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7923/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7923/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7922",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7922/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7922/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7922/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7922",
        "id": 1920516231,
        "node_id": "I_kwDOIWuq585yeMCH",
        "number": 7922,
        "title": "[Feature Request]: chat engine to support recursive retriever",
        "user": {
            "login": "mingqxu7",
            "id": 50094870,
            "node_id": "MDQ6VXNlcjUwMDk0ODcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/50094870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mingqxu7",
            "html_url": "https://github.com/mingqxu7",
            "followers_url": "https://api.github.com/users/mingqxu7/followers",
            "following_url": "https://api.github.com/users/mingqxu7/following{/other_user}",
            "gists_url": "https://api.github.com/users/mingqxu7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mingqxu7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mingqxu7/subscriptions",
            "organizations_url": "https://api.github.com/users/mingqxu7/orgs",
            "repos_url": "https://api.github.com/users/mingqxu7/repos",
            "events_url": "https://api.github.com/users/mingqxu7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mingqxu7/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-01T02:53:52Z",
        "updated_at": "2023-10-01T21:39:41Z",
        "closed_at": "2023-10-01T21:39:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nIn the current system architecture, there's a noted incongruity between the inherent capabilities of the recursive retriever and its integration within the chat engine framework. Specifically, while the recursive retriever demonstrates substantial utility for specific use cases, its deployment within the chat engine relies on the underlying index, which isn't inherently recursive. As of now, a workaround requires direct modifications to the chat engine's core codebase to accept the recursive retriever as an argument. This not only disrupts the intended abstraction layers but also potentially compromises modularity and future supportability. A more streamlined integration method, preserving abstraction and ensuring flexibility, would be a significant enhancement to the system's design paradigm.\n\n### Reason\n\nWithin the current architectural framework, the primary mechanism in place is the RetrieverQueryEngine. However, I find the contextual handling and output structure of a chat engine more aligned with certain requirements. The chat engine inherently possesses the capability to maintain and understand chat context, a feature critical for nuanced applications. Being relatively unfamiliar with the intricacies of the llama index, it's plausible that my configuration for the RetrieverQueryEngine might not be fully optimized. If there exists a possibility to adapt or modify the RetrieverQueryEngine to emulate the behavior and contextual awareness of a chat engine, it would merit serious consideration for integration.\r\n\r\nOn a related note, I've successfully restructured my langchain RAG project in a span of a weekend, demonstrating the agility and adaptability of the framework. I'm inclined to leverage the llama index for forthcoming RAG projects, emphasizing the importance of ensuring the chat engine's compatibility and versatility in these contexts.\n\n### Value of Feature\n\nIn the context of RAG scenarios, the implementation of blind-folded fixed set chunking presents inherent challenges that can hinder optimal results. The Recursive Retriever emerges as a refined solution, meticulously addressing these challenges. By integrating it within the chat engine, we stand to enhance the quality and precision of responses. This will not only sidestep the pitfalls associated with conventional chunking techniques but also elevate the chat engine's capability to deliver more nuanced, accurate, and context-aware results. However, my previous PM experience tells me that I am better served not to push for a specific implementation but to be open to alternatives.  ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7922/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7922/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7921",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7921/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7921/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7921/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7921",
        "id": 1920426423,
        "node_id": "PR_kwDOIWuq585bmKFA",
        "number": 7921,
        "title": "`LocalAI` using `/chat/completions` or `/completions` per call",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-30T23:07:11Z",
        "updated_at": "2023-10-01T04:26:36Z",
        "closed_at": "2023-10-01T04:16:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7921",
            "html_url": "https://github.com/run-llama/llama_index/pull/7921",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7921.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7921.patch",
            "merged_at": "2023-10-01T04:16:48Z"
        },
        "body": "# Description\r\n\r\n- `OpenAI` infers `/chat/completions` or `/completions` based on model name alone (not per call)\r\n- There was some weird double logic in `OpenAI` where private methods had validations that couldn't be triggered by design\r\n\r\nThis PR:\r\n- Enables `LocalAI` to universally specify `/chat/completions` or `/completions`, or use per-call\r\n- Removes weird double logic from `OpenAI`\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7921/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7921/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7920",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7920/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7920/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7920/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7920",
        "id": 1920423169,
        "node_id": "PR_kwDOIWuq585bmJg-",
        "number": 7920,
        "title": "exclude openai api key",
        "user": {
            "login": "aaalexlit",
            "id": 116374290,
            "node_id": "U_kgDOBu-7Eg",
            "avatar_url": "https://avatars.githubusercontent.com/u/116374290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaalexlit",
            "html_url": "https://github.com/aaalexlit",
            "followers_url": "https://api.github.com/users/aaalexlit/followers",
            "following_url": "https://api.github.com/users/aaalexlit/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaalexlit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaalexlit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaalexlit/subscriptions",
            "organizations_url": "https://api.github.com/users/aaalexlit/orgs",
            "repos_url": "https://api.github.com/users/aaalexlit/repos",
            "events_url": "https://api.github.com/users/aaalexlit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaalexlit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-30T22:51:18Z",
        "updated_at": "2023-10-01T04:17:11Z",
        "closed_at": "2023-10-01T04:17:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7920",
            "html_url": "https://github.com/run-llama/llama_index/pull/7920",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7920.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7920.patch",
            "merged_at": "2023-10-01T04:17:11Z"
        },
        "body": "# Description\r\n\r\nExclude OpenAI api key from being serialized\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7920/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7919",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7919/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7919/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7919/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7919",
        "id": 1920356162,
        "node_id": "PR_kwDOIWuq585bl84P",
        "number": 7919,
        "title": "created examples on using wikipedia to filter relations when using REBEL model from hugging face",
        "user": {
            "login": "ohdearquant",
            "id": 122793010,
            "node_id": "U_kgDOB1GsMg",
            "avatar_url": "https://avatars.githubusercontent.com/u/122793010?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ohdearquant",
            "html_url": "https://github.com/ohdearquant",
            "followers_url": "https://api.github.com/users/ohdearquant/followers",
            "following_url": "https://api.github.com/users/ohdearquant/following{/other_user}",
            "gists_url": "https://api.github.com/users/ohdearquant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ohdearquant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ohdearquant/subscriptions",
            "organizations_url": "https://api.github.com/users/ohdearquant/orgs",
            "repos_url": "https://api.github.com/users/ohdearquant/repos",
            "events_url": "https://api.github.com/users/ohdearquant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ohdearquant/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-30T18:22:04Z",
        "updated_at": "2023-10-01T21:39:58Z",
        "closed_at": "2023-10-01T21:39:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7919",
            "html_url": "https://github.com/run-llama/llama_index/pull/7919",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7919.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7919.patch",
            "merged_at": "2023-10-01T21:39:58Z"
        },
        "body": "# Description\r\n\r\ncreated an example using wikipedia to filter relation data when using REBEL model from huggingface \r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7919/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7919/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7918",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7918/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7918/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7918/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7918",
        "id": 1920308009,
        "node_id": "PR_kwDOIWuq585blzjj",
        "number": 7918,
        "title": "[version] bump version to 0.8.37",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-30T15:53:30Z",
        "updated_at": "2023-09-30T16:07:13Z",
        "closed_at": "2023-09-30T16:07:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7918",
            "html_url": "https://github.com/run-llama/llama_index/pull/7918",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7918.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7918.patch",
            "merged_at": "2023-09-30T16:07:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7918/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7918/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7917",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7917/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7917/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7917/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7917",
        "id": 1920187662,
        "node_id": "PR_kwDOIWuq585blcM7",
        "number": 7917,
        "title": "Validations when misconfigured prompt chunks",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-30T09:18:29Z",
        "updated_at": "2023-09-30T18:03:00Z",
        "closed_at": "2023-09-30T15:57:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7917",
            "html_url": "https://github.com/run-llama/llama_index/pull/7917",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7917.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7917.patch",
            "merged_at": "2023-09-30T15:57:06Z"
        },
        "body": "# Description\r\n\r\nWhen you have a misconfigured system, weird things happen.\r\n\r\nThere is a philosophy: make impossible values unrepresentable\r\n\r\nThis PR accomplishes that by:\r\n- Validating out available context size \u2264 0\r\n- Validating out chunk size \u2264 0 (instead of just 0)\r\n\r\n## Type of Change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7917/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7917/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7916",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7916/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7916/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7916/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7916",
        "id": 1920158122,
        "node_id": "PR_kwDOIWuq585blWcl",
        "number": 7916,
        "title": "rerun evals in notebooks",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-30T07:31:52Z",
        "updated_at": "2023-09-30T15:38:15Z",
        "closed_at": "2023-09-30T15:38:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7916",
            "html_url": "https://github.com/run-llama/llama_index/pull/7916",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7916.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7916.patch",
            "merged_at": "2023-09-30T15:38:14Z"
        },
        "body": "previously the eval results were generated from a faulty datasetgenerator (fixed in #7915) \r\n\r\nrerun results for sentence window, ensemble, auto-merging retriever ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7916/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7916/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7915",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7915/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7915/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7915/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7915",
        "id": 1920131366,
        "node_id": "PR_kwDOIWuq585blRMu",
        "number": 7915,
        "title": "eval fixes: fix dataset response generation, add score to evaluators",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-30T05:44:11Z",
        "updated_at": "2023-09-30T06:06:00Z",
        "closed_at": "2023-09-30T06:05:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7915",
            "html_url": "https://github.com/run-llama/llama_index/pull/7915",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7915.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7915.patch",
            "merged_at": "2023-09-30T06:05:59Z"
        },
        "body": "- the query/response generation in the `DatasetGenerator` was broken. The synthetic ground-truth response was always getting generated from the last piece of sample context (Which led to a lot of \"the answer was not found in the context\" issues). \r\n- added a score to other evaluator classes",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7915/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7915/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7914",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7914/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7914/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7914/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7914",
        "id": 1920112389,
        "node_id": "PR_kwDOIWuq585blNdB",
        "number": 7914,
        "title": "elasticsearch embeddings",
        "user": {
            "login": "abstract829",
            "id": 56497105,
            "node_id": "MDQ6VXNlcjU2NDk3MTA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/56497105?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abstract829",
            "html_url": "https://github.com/abstract829",
            "followers_url": "https://api.github.com/users/abstract829/followers",
            "following_url": "https://api.github.com/users/abstract829/following{/other_user}",
            "gists_url": "https://api.github.com/users/abstract829/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abstract829/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abstract829/subscriptions",
            "organizations_url": "https://api.github.com/users/abstract829/orgs",
            "repos_url": "https://api.github.com/users/abstract829/repos",
            "events_url": "https://api.github.com/users/abstract829/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abstract829/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-30T04:23:00Z",
        "updated_at": "2023-10-02T23:42:23Z",
        "closed_at": "2023-10-01T23:31:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7914",
            "html_url": "https://github.com/run-llama/llama_index/pull/7914",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7914.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7914.patch",
            "merged_at": "2023-10-01T23:31:35Z"
        },
        "body": "# Description\r\n\r\nThis PR provides a wrapper around Elasticsearch embedding models. The new ElasticsearchEmbeddings class allows users to generate embeddings for documents and query texts using a [model deployed in an Elasticsearch cluster](https://www.elastic.co/guide/en/machine-learning/current/ml-nlp-model-ref.html#ml-nlp-model-ref-text-embedding).\r\n\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7914/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7913",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7913/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7913/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7913/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7913",
        "id": 1920048676,
        "node_id": "PR_kwDOIWuq585blA4W",
        "number": 7913,
        "title": "LocalAI LLM",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-30T01:11:44Z",
        "updated_at": "2023-09-30T04:35:44Z",
        "closed_at": "2023-09-30T03:57:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7913",
            "html_url": "https://github.com/run-llama/llama_index/pull/7913",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7913.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7913.patch",
            "merged_at": "2023-09-30T03:57:02Z"
        },
        "body": "# Description\r\n\r\nPartly fixes https://github.com/jerryjliu/llama_index/issues/7907 by making an `OpenAI` subclass called `LocalAI` (for [LocalAI](https://localai.io/)).\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7913/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7913/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7912",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7912/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7912/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7912/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7912",
        "id": 1920044422,
        "node_id": "PR_kwDOIWuq585blACz",
        "number": 7912,
        "title": "Improved `BaseComponent.class_name` docstring",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-30T00:58:16Z",
        "updated_at": "2023-09-30T04:24:54Z",
        "closed_at": "2023-09-30T03:57:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7912",
            "html_url": "https://github.com/run-llama/llama_index/pull/7912",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7912.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7912.patch",
            "merged_at": "2023-09-30T03:57:37Z"
        },
        "body": "# Description\r\n\r\nDocumentation behind my misunderstanding that caused me to make https://github.com/jerryjliu/llama_index/pull/7911\r\n\r\n## Type of Change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7912/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7912/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7911",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7911/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7911/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7911/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7911",
        "id": 1920038874,
        "node_id": "PR_kwDOIWuq585bk-7-",
        "number": 7911,
        "title": "Removed `class_name` cargo culting",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-30T00:40:08Z",
        "updated_at": "2023-09-30T10:17:14Z",
        "closed_at": "2023-09-30T00:53:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7911",
            "html_url": "https://github.com/run-llama/llama_index/pull/7911",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7911.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7911.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nWhen making a new subclass, I discovered this cargo culting of `class_name`, and I removed it.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7911/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7911/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7910",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7910/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7910/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7910/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7910",
        "id": 1920017986,
        "node_id": "PR_kwDOIWuq585bk6mW",
        "number": 7910,
        "title": "Only truncate responses if there are responses during dataset generation",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-29T23:45:04Z",
        "updated_at": "2023-09-30T16:00:44Z",
        "closed_at": "2023-09-30T16:00:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7910",
            "html_url": "https://github.com/run-llama/llama_index/pull/7910",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7910.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7910.patch",
            "merged_at": "2023-09-30T16:00:44Z"
        },
        "body": "# Description\r\n\r\nI was running into a [crash bug](https://gist.github.com/seldo/ba532e53a60200d382396ae20857a674) when attempting to replicate [this notebook](https://gpt-index.readthedocs.io/en/stable/examples/finetuning/openai_fine_tuning.html).\r\n\r\nIn `dataset_generation` the method `generate_dataset_from_nodes` calls `_agenerate_dataset` with `generate_response` set to `True` and everything works fine. `generate_questions_from_nodes` calls it with that variable set to `False`.\r\n\r\nWhen `generate_response` is false, the code attempts to truncate the `responses_dict` to the exact set of keys in `queries`, but since there are no responses the dict is empty and you get a KeyError. The fix is to only attempt this truncation if `generate_responses` is True.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7910/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7910/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7909",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7909/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7909/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7909/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7909",
        "id": 1920014690,
        "node_id": "PR_kwDOIWuq585bk533",
        "number": 7909,
        "title": "examples on improving KG building",
        "user": {
            "login": "ohdearquant",
            "id": 122793010,
            "node_id": "U_kgDOB1GsMg",
            "avatar_url": "https://avatars.githubusercontent.com/u/122793010?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ohdearquant",
            "html_url": "https://github.com/ohdearquant",
            "followers_url": "https://api.github.com/users/ohdearquant/followers",
            "following_url": "https://api.github.com/users/ohdearquant/following{/other_user}",
            "gists_url": "https://api.github.com/users/ohdearquant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ohdearquant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ohdearquant/subscriptions",
            "organizations_url": "https://api.github.com/users/ohdearquant/orgs",
            "repos_url": "https://api.github.com/users/ohdearquant/repos",
            "events_url": "https://api.github.com/users/ohdearquant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ohdearquant/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-29T23:37:12Z",
        "updated_at": "2023-09-30T18:11:14Z",
        "closed_at": "2023-09-30T18:11:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7909",
            "html_url": "https://github.com/run-llama/llama_index/pull/7909",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7909.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7909.patch",
            "merged_at": null
        },
        "body": "Use REBEL model from huggingface, with wikipedia, to improve KG building.  \r\n\r\n\r\n# Description\r\n\r\nnew example on KG. need torch, math, wikipedia\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7909/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7909/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7908",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7908/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7908/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7908/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7908",
        "id": 1920008831,
        "node_id": "PR_kwDOIWuq585bk4k0",
        "number": 7908,
        "title": "Fix warnings shown when running pytests",
        "user": {
            "login": "ShuoChenUS",
            "id": 15270819,
            "node_id": "MDQ6VXNlcjE1MjcwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15270819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShuoChenUS",
            "html_url": "https://github.com/ShuoChenUS",
            "followers_url": "https://api.github.com/users/ShuoChenUS/followers",
            "following_url": "https://api.github.com/users/ShuoChenUS/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShuoChenUS/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShuoChenUS/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShuoChenUS/subscriptions",
            "organizations_url": "https://api.github.com/users/ShuoChenUS/orgs",
            "repos_url": "https://api.github.com/users/ShuoChenUS/repos",
            "events_url": "https://api.github.com/users/ShuoChenUS/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShuoChenUS/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-29T23:27:11Z",
        "updated_at": "2023-09-30T16:11:16Z",
        "closed_at": "2023-09-30T16:11:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7908",
            "html_url": "https://github.com/run-llama/llama_index/pull/7908",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7908.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7908.patch",
            "merged_at": "2023-09-30T16:11:16Z"
        },
        "body": "# Description\r\n\r\nThis PR is to fix all the warnings when we run `pytest tests` as shown in \r\n<img width=\"1085\" alt=\"Screenshot 2023-09-29 at 4 08 36 PM\" src=\"https://github.com/jerryjliu/llama_index/assets/15270819/4bfde4c8-8e35-47d1-b59c-7b5f6b7f3799\">. \r\n\r\n3 types of warning are observed, \r\n- `pytest` throws warnings when class names start with `Test` but have `__ini__` in them because that's how `pytest` discovers test cases. In the llama_index code base, for example `TestLLM` in `llms/test_custom.py` is just a dummy class to support the tests instead of a test class needed to be discovered and run by `pytest`. According to [this SO](https://stackoverflow.com/questions/62460557/cannot-collect-test-class-testmain-because-it-has-a-init-constructor-from), I added a `__test__ = False` to those dummy classes to remove those warnings.\r\n- `logger.warn` is deprecated and I replace it with `logger.warning`\r\n- the last one is a bit tricky. In `tests/indices/tree/test_index.py`, there is a test case of `test_build_tree_async` which has a mock on `llama_index.indices.common_tree.base.run_async_tasks`. We have a mock function `patch_llmpredictor_apredict` which is invoked and becomes a coroutine before passed into `run_async_tasks`. Because `run_async_tasks` was mocked and there is no `await` is invoked on that coroutine, `pytest` warns us that that coroutine was never `awaited`. The simplest approach in my 2cents is to suppress the warning and after fiddling with `pytest.mark.filterwarning` for a while, I still could not fully resolve it. For the time being, I will leave that untouched then. \r\n\r\nAfter those changes, here is the only warning shown\r\n<img width=\"1085\" alt=\"Screenshot 2023-09-29 at 4 24 40 PM\" src=\"https://github.com/jerryjliu/llama_index/assets/15270819/37eb76ec-88be-47f9-af25-dba652794deb\">\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7908/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7908/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7907",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7907/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7907/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7907/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7907",
        "id": 1919968960,
        "node_id": "I_kwDOIWuq585ycGbA",
        "number": 7907,
        "title": "[Feature Request]: example for `LocalAI`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-29T22:17:51Z",
        "updated_at": "2023-11-29T21:04:24Z",
        "closed_at": "2023-11-29T21:04:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\n[`LocalAI`](https://localai.io/) has an OpenAI compatible API.  So one can game an `OpenAI` wrapper to work with `LocalAI`. In fact, that's how [`langchain` does it](https://github.com/langchain-ai/langchain/blob/v0.0.305/libs/langchain/langchain/embeddings/localai.py#L123).\r\n\r\nI think to support `LocalAI`, one just needs to use `llama_index.llms.OpenAI(api_base=\"http://localhost:8080/v1\", api_key=\"stub\")` or `OPENAI_API_BASE` environment variable.\r\n\r\nIt would be cool if there was a brief demo IPython Notebook for this, somewhere in LlamaIndex.\r\n\r\n### Reason\r\n\r\n`LocalAI` is a nice alternative to `Ollama` or `Llama.cpp` for running models from Hugging Face.\r\n\r\n### Value of Feature\r\n\r\nLots of people use `LocalAI`. It was also previously requested [here](https://github.com/jerryjliu/llama_index/issues/1772#issuecomment-1628735329).",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7907/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7907/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7906",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7906/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7906/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7906/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7906",
        "id": 1919938964,
        "node_id": "PR_kwDOIWuq585bkpkh",
        "number": 7906,
        "title": "Adds support for using message metadata.",
        "user": {
            "login": "bLopata",
            "id": 42045469,
            "node_id": "MDQ6VXNlcjQyMDQ1NDY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/42045469?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bLopata",
            "html_url": "https://github.com/bLopata",
            "followers_url": "https://api.github.com/users/bLopata/followers",
            "following_url": "https://api.github.com/users/bLopata/following{/other_user}",
            "gists_url": "https://api.github.com/users/bLopata/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bLopata/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bLopata/subscriptions",
            "organizations_url": "https://api.github.com/users/bLopata/orgs",
            "repos_url": "https://api.github.com/users/bLopata/repos",
            "events_url": "https://api.github.com/users/bLopata/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bLopata/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-29T21:40:13Z",
        "updated_at": "2023-10-03T01:07:35Z",
        "closed_at": "2023-10-03T00:23:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7906",
            "html_url": "https://github.com/run-llama/llama_index/pull/7906",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7906.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7906.patch",
            "merged_at": "2023-10-03T00:23:05Z"
        },
        "body": "# Description\r\nModifies the `load_data` method of the Discord Reader class with an additional optional parameter to return complete message metadata, namely by way of a boolean value `complete_metadata` (defaulted to false). \r\n\r\nThis change is needed for users who wish to query information about the users and allows for further advanced filtering (such as NSFW content, among others). This change requires no dependency changes.\r\n\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nRan a modified version of the [Discord Reader Demo](https://gpt-index.readthedocs.io/en/stable/examples/data_connectors/DiscordDemo.html) locally both with and without the flag and queried the index/engine for a list of users who sent messages in the specified channel (query: `list all users who posted to the channel` produced an output similar to `There is no information provided about the users who posted ideas to the channel.` with the flag set to `False`, and produced an accurate list when the metadata was provided by way of the override flag.\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7906/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7906/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7905",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7905/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7905/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7905/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7905",
        "id": 1919938178,
        "node_id": "I_kwDOIWuq585yb-6C",
        "number": 7905,
        "title": "[Feature Request]: `HuggingFaceLLM` supporting Hugging Face Inference API or GGUF file type",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-09-29T21:39:08Z",
        "updated_at": "2023-10-22T03:32:31Z",
        "closed_at": "2023-10-22T03:32:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nI am trying to use https://huggingface.co/TheBloke/Llama-2-13B-Ensemble-v5-GGUF/blob/main/llama-2-13b-ensemble-v5.Q4_K_M.gguf with `HuggingFaceLLM(model_name=\"insert GGUF model\")` from `llama_index==0.8.36`.\r\n\r\nWhen trying to use a GGUF model:\r\n\r\n1. `HuggingFaceLLM` outsources to `transformers.AutoModelForCausalLM`\r\n2. `transformers.AutoModelForCausalLM` throws this error:\r\n\r\n```none\r\nOSError: <model> does not appear to have a file named pytorch_model.bin, tf_model.h5, model.ckpt or flax_model.msgpack.\r\n```\r\n\r\nSo GGUF and I also believe the Hugging Face Inference API isn't supported.\r\n\r\nThe request: support Hugging Face Inference API (what I really want) or local GGUF files behind `HuggingFaceLLM`.\n\n### Reason\n\nIt's useful to be able to stay close to Hugging Face.\n\n### Value of Feature\n\nDevelopers on laptops can't always run larger models or multiple models locally.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7905/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7905/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7904",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7904/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7904/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7904/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7904",
        "id": 1919924308,
        "node_id": "PR_kwDOIWuq585bkmWE",
        "number": 7904,
        "title": "`HuggingFaceLLM` protections with `ImportError`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-29T21:22:42Z",
        "updated_at": "2023-09-29T22:52:31Z",
        "closed_at": "2023-09-29T22:39:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7904",
            "html_url": "https://github.com/run-llama/llama_index/pull/7904",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7904.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7904.patch",
            "merged_at": "2023-09-29T22:39:24Z"
        },
        "body": "# Description\r\n\r\n- Nice-ified `ImportError`s in `HuggingFaceLLM`\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7904/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7904/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7903",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7903/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7903/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7903/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7903",
        "id": 1919869991,
        "node_id": "PR_kwDOIWuq585bkaZA",
        "number": 7903,
        "title": "`LlamaCPP` overrides via `model_kwargs`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-29T20:30:34Z",
        "updated_at": "2023-09-30T18:03:44Z",
        "closed_at": "2023-09-30T16:07:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7903",
            "html_url": "https://github.com/run-llama/llama_index/pull/7903",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7903.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7903.patch",
            "merged_at": "2023-09-30T16:07:36Z"
        },
        "body": "# Description\r\n\r\nI find it awkward to pass some `Llama` configurations via `model_kwargs` and some via pass throughs like `verbose`/`context_window`.  This PR makes it so you can just use `model_kwargs` like a true wrapper\r\n\r\n- Removes statefulness of wrapped `Llama` vs `LlamaCPP` object\r\n    - Not passing `verbose`/`context_window` to `super()`, since it's not used by a super class (please confirm here)\r\n- Defined defaults in `pydantic` model\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7903/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7903/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7902",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7902/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7902/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7902/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7902",
        "id": 1919865577,
        "node_id": "PR_kwDOIWuq585bkZap",
        "number": 7902,
        "title": "If results directory doesn't exist evaluate_st should create it",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-29T20:26:03Z",
        "updated_at": "2023-09-29T22:42:34Z",
        "closed_at": "2023-09-29T22:42:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7902",
            "html_url": "https://github.com/run-llama/llama_index/pull/7902",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7902.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7902.patch",
            "merged_at": "2023-09-29T22:42:34Z"
        },
        "body": "# Description\r\n\r\nThe notebook currently contains a [stack trace](https://gpt-index.readthedocs.io/en/stable/examples/finetuning/embeddings/finetune_embedding.html#baai-bge-small-en) caused by the \"results\" folder not existing when InformationRetrievalEvaluator. This adds code to create the folder if it's missing.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7902/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7902/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7901",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7901/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7901/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7901/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7901",
        "id": 1919849438,
        "node_id": "PR_kwDOIWuq585bkV7R",
        "number": 7901,
        "title": "`Ollama` to `llama_index.llms`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-29T20:09:27Z",
        "updated_at": "2023-09-29T22:52:59Z",
        "closed_at": "2023-09-29T22:42:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7901",
            "html_url": "https://github.com/run-llama/llama_index/pull/7901",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7901.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7901.patch",
            "merged_at": "2023-09-29T22:42:57Z"
        },
        "body": "# Description\r\n\r\n- Adds `Ollama` class to `llama_index.llms`\r\n- Alphabetizes `__all__` in `llama_index.llms` for readability\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7901/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7900",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7900/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7900/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7900/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7900",
        "id": 1919609771,
        "node_id": "PR_kwDOIWuq585bjizj",
        "number": 7900,
        "title": "Nice-ified SQL Alchemy `ProgrammingError`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-29T16:51:40Z",
        "updated_at": "2023-09-29T18:33:12Z",
        "closed_at": "2023-09-29T18:31:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7900",
            "html_url": "https://github.com/run-llama/llama_index/pull/7900",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7900.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7900.patch",
            "merged_at": "2023-09-29T18:31:54Z"
        },
        "body": "# Description\r\n\r\n- Nice-ified SQL errors for LLM responses that didn't listen to prompt\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7900/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7900/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7899",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7899/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7899/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7899/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7899",
        "id": 1919569911,
        "node_id": "PR_kwDOIWuq585bjab0",
        "number": 7899,
        "title": "Pass down kwargs from AutoRetriever to IndexRetriever",
        "user": {
            "login": "cevian",
            "id": 112245,
            "node_id": "MDQ6VXNlcjExMjI0NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/112245?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cevian",
            "html_url": "https://github.com/cevian",
            "followers_url": "https://api.github.com/users/cevian/followers",
            "following_url": "https://api.github.com/users/cevian/following{/other_user}",
            "gists_url": "https://api.github.com/users/cevian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cevian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cevian/subscriptions",
            "organizations_url": "https://api.github.com/users/cevian/orgs",
            "repos_url": "https://api.github.com/users/cevian/repos",
            "events_url": "https://api.github.com/users/cevian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cevian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-29T16:20:12Z",
        "updated_at": "2023-09-29T18:32:29Z",
        "closed_at": "2023-09-29T18:32:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7899",
            "html_url": "https://github.com/run-llama/llama_index/pull/7899",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7899.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7899.patch",
            "merged_at": "2023-09-29T18:32:29Z"
        },
        "body": "# Description\r\n\r\nKwargs should be passed down. For example, a user may want to pass down vector_store_kwargs.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7899/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7899/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7898",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7898/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7898/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7898/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7898",
        "id": 1919251431,
        "node_id": "I_kwDOIWuq585yZXPn",
        "number": 7898,
        "title": "\"ModuleNotFoundError: No module named 'llama_cpp'\" when using Palm API.",
        "user": {
            "login": "hpsc3",
            "id": 144791741,
            "node_id": "U_kgDOCKFYvQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/144791741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hpsc3",
            "html_url": "https://github.com/hpsc3",
            "followers_url": "https://api.github.com/users/hpsc3/followers",
            "following_url": "https://api.github.com/users/hpsc3/following{/other_user}",
            "gists_url": "https://api.github.com/users/hpsc3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hpsc3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hpsc3/subscriptions",
            "organizations_url": "https://api.github.com/users/hpsc3/orgs",
            "repos_url": "https://api.github.com/users/hpsc3/repos",
            "events_url": "https://api.github.com/users/hpsc3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hpsc3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-29T13:13:15Z",
        "updated_at": "2023-09-29T15:58:50Z",
        "closed_at": "2023-09-29T13:57:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am following the code from: https://gpt-index.readthedocs.io/en/stable/examples/llm/palm.html \r\nto use Palm api for inference and it is working fine. After that I am trying to extend the code to do 10Q analysis, using this code:\r\n\r\n`#10 Q Analysis\r\nimport nest_asyncio\r\n\r\nnest_asyncio.apply()\r\nfrom llama_index import SimpleDirectoryReader, ServiceContext, VectorStoreIndex\r\nfrom llama_index.response.pprint_utils import pprint_response\r\nfrom llama_index.llms import OpenAI\r\n\r\nfrom llama_index.tools import QueryEngineTool, ToolMetadata\r\nfrom llama_index.query_engine import SubQuestionQueryEngine\r\n\r\nservice_context = ServiceContext.from_defaults(llm=llm)\r\n\r\nmarch_2022 = SimpleDirectoryReader(\r\n    input_files=[\"10q1.pdf\"]\r\n).load_data()\r\n\r\nmarch_index = VectorStoreIndex.from_documents(march_2022)\r\n\r\n`\r\n\r\nI am getting this error when initializing the vector store index: \r\n\r\n> ---------------------------------------------------------------------------\r\nModuleNotFoundError                       Traceback (most recent call last)\r\nFile /opt/conda/lib/python3.10/site-packages/llama_index/llms/llama_cpp.py:82, in LlamaCPP.__init__(self, model_url, model_path, temperature, max_new_tokens, context_window, messages_to_prompt, completion_to_prompt, callback_manager, generate_kwargs, model_kwargs, verbose)\r\n     81 try:\r\n---> 82     from llama_cpp import Llama\r\n     83 except ImportError:\r\n\r\nModuleNotFoundError: No module named 'llama_cpp'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nImportError                               Traceback (most recent call last)\r\nCell In[11], line 2\r\n      1 llm\r\n----> 2 march_index = VectorStoreIndex.from_documents(march_2022)\r\n\r\n\r\nWhy is it looking for llama_cpp when I am using Palm api. How do I fix this?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7898/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7898/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7897",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7897/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7897/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7897/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7897",
        "id": 1918729632,
        "node_id": "I_kwDOIWuq585yXX2g",
        "number": 7897,
        "title": "[Documentation]: Typo: Defining and Customizing Documents",
        "user": {
            "login": "FabianAltendorfer",
            "id": 98153318,
            "node_id": "U_kgDOBdmzZg",
            "avatar_url": "https://avatars.githubusercontent.com/u/98153318?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FabianAltendorfer",
            "html_url": "https://github.com/FabianAltendorfer",
            "followers_url": "https://api.github.com/users/FabianAltendorfer/followers",
            "following_url": "https://api.github.com/users/FabianAltendorfer/following{/other_user}",
            "gists_url": "https://api.github.com/users/FabianAltendorfer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FabianAltendorfer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FabianAltendorfer/subscriptions",
            "organizations_url": "https://api.github.com/users/FabianAltendorfer/orgs",
            "repos_url": "https://api.github.com/users/FabianAltendorfer/repos",
            "events_url": "https://api.github.com/users/FabianAltendorfer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FabianAltendorfer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-29T07:19:36Z",
        "updated_at": "2023-10-06T15:15:39Z",
        "closed_at": "2023-10-06T15:15:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\n![image](https://github.com/jerryjliu/llama_index/assets/98153318/e7ac468c-f5e0-49d4-a26e-7b7452d13a89)\r\n\n\n### Documenation Link\n\nhttps://gpt-index.readthedocs.io/en/latest/core_modules/data_modules/documents_and_nodes/usage_documents.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7897/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7896",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7896/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7896/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7896/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7896",
        "id": 1918727048,
        "node_id": "I_kwDOIWuq585yXXOI",
        "number": 7896,
        "title": "[Documentation]: Typo: Defining and Customizing Documents",
        "user": {
            "login": "FabianAltendorfer",
            "id": 98153318,
            "node_id": "U_kgDOBdmzZg",
            "avatar_url": "https://avatars.githubusercontent.com/u/98153318?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FabianAltendorfer",
            "html_url": "https://github.com/FabianAltendorfer",
            "followers_url": "https://api.github.com/users/FabianAltendorfer/followers",
            "following_url": "https://api.github.com/users/FabianAltendorfer/following{/other_user}",
            "gists_url": "https://api.github.com/users/FabianAltendorfer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FabianAltendorfer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FabianAltendorfer/subscriptions",
            "organizations_url": "https://api.github.com/users/FabianAltendorfer/orgs",
            "repos_url": "https://api.github.com/users/FabianAltendorfer/repos",
            "events_url": "https://api.github.com/users/FabianAltendorfer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FabianAltendorfer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-29T07:17:22Z",
        "updated_at": "2023-10-02T14:22:47Z",
        "closed_at": "2023-10-02T14:22:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\n![image](https://github.com/jerryjliu/llama_index/assets/98153318/f3bee658-c9e5-4b69-935c-36129b9fd1c3)\r\n\n\n### Documenation Link\n\nhttps://gpt-index.readthedocs.io/en/latest/core_modules/data_modules/documents_and_nodes/usage_documents.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7896/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7896/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7895",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7895/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7895/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7895/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7895",
        "id": 1918724421,
        "node_id": "I_kwDOIWuq585yXWlF",
        "number": 7895,
        "title": "[Documentation]: Typo: Metadata in Defining and Customizing Documents",
        "user": {
            "login": "FabianAltendorfer",
            "id": 98153318,
            "node_id": "U_kgDOBdmzZg",
            "avatar_url": "https://avatars.githubusercontent.com/u/98153318?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FabianAltendorfer",
            "html_url": "https://github.com/FabianAltendorfer",
            "followers_url": "https://api.github.com/users/FabianAltendorfer/followers",
            "following_url": "https://api.github.com/users/FabianAltendorfer/following{/other_user}",
            "gists_url": "https://api.github.com/users/FabianAltendorfer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FabianAltendorfer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FabianAltendorfer/subscriptions",
            "organizations_url": "https://api.github.com/users/FabianAltendorfer/orgs",
            "repos_url": "https://api.github.com/users/FabianAltendorfer/repos",
            "events_url": "https://api.github.com/users/FabianAltendorfer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FabianAltendorfer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-29T07:15:02Z",
        "updated_at": "2023-10-06T15:15:39Z",
        "closed_at": "2023-10-06T15:15:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\n![image](https://github.com/jerryjliu/llama_index/assets/98153318/604adab5-a837-42f3-9a83-21cbb83f6f3e)\r\n\n\n### Documenation Link\n\nhttps://gpt-index.readthedocs.io/en/latest/core_modules/data_modules/documents_and_nodes/usage_documents.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7895/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7895/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7894",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7894/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7894/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7894/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7894",
        "id": 1918721514,
        "node_id": "PR_kwDOIWuq585bgheS",
        "number": 7894,
        "title": "Update KeywordNodePostprocessor to support languages without clearly defined word boundaries",
        "user": {
            "login": "Hironsan",
            "id": 6737785,
            "node_id": "MDQ6VXNlcjY3Mzc3ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6737785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Hironsan",
            "html_url": "https://github.com/Hironsan",
            "followers_url": "https://api.github.com/users/Hironsan/followers",
            "following_url": "https://api.github.com/users/Hironsan/following{/other_user}",
            "gists_url": "https://api.github.com/users/Hironsan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Hironsan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Hironsan/subscriptions",
            "organizations_url": "https://api.github.com/users/Hironsan/orgs",
            "repos_url": "https://api.github.com/users/Hironsan/repos",
            "events_url": "https://api.github.com/users/Hironsan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Hironsan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-29T07:12:27Z",
        "updated_at": "2023-09-30T21:27:18Z",
        "closed_at": "2023-09-30T16:11:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7894",
            "html_url": "https://github.com/run-llama/llama_index/pull/7894",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7894.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7894.patch",
            "merged_at": "2023-09-30T16:11:00Z"
        },
        "body": "# Description\r\n\r\nIn this PR, I updated `KeywordNodePostprocessor` to support languages without clearly defined word boundaries (Japanese, Chinese, Thai, and so on). When I tried this feature in Japanese, the results were not what I expected:\r\n\r\n```python\r\nkey = \"__last_accessed__\"\r\nnodes = [\r\n    TextNode(text=\"\u3053\u3093\u306b\u3061\u306f\u4e16\u754c\u3002\", id_=\"1\", metadata={key: 0}),\r\n    TextNode(text=\"\u3053\u308c\u306f\u30c6\u30b9\u30c8\u3067\u3059\u3002\", id_=\"2\", metadata={key: 1}),\r\n    TextNode(text=\"\u3053\u308c\u306f\u5225\u306e\u30c6\u30b9\u30c8\u3067\u3059\u3002\", id_=\"3\", metadata={key: 2}),\r\n    TextNode(text=\"\u3053\u308c\u306f\u30c6\u30b9\u30c8v2\u3067\u3059\u3002\", id_=\"4\", metadata={key: 3}),\r\n]\r\nnode_with_scores = [NodeWithScore(node=node) for node in nodes]\r\n\r\npostprocessor = KeywordNodePostprocessor(required_keywords=[\"\u3053\u308c\"])\r\nnew_nodes = postprocessor.postprocess_nodes(node_with_scores)\r\nnew_nodes  # This should have three nodes but in fact an empty list.\r\n```\r\n\r\nProposal:\r\n- Use spaCy's [PhraseMatcher](https://spacy.io/api/phrasematcher) instead of regular expression\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI added the test cases for Japanese.\r\n\r\n- [x] Added new unit/integration tests\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7894/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7893",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7893/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7893/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7893/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7893",
        "id": 1918592011,
        "node_id": "PR_kwDOIWuq585bgFgI",
        "number": 7893,
        "title": "Allow pydantic program through query engines",
        "user": {
            "login": "bmax",
            "id": 158370,
            "node_id": "MDQ6VXNlcjE1ODM3MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/158370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmax",
            "html_url": "https://github.com/bmax",
            "followers_url": "https://api.github.com/users/bmax/followers",
            "following_url": "https://api.github.com/users/bmax/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmax/subscriptions",
            "organizations_url": "https://api.github.com/users/bmax/orgs",
            "repos_url": "https://api.github.com/users/bmax/repos",
            "events_url": "https://api.github.com/users/bmax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-29T04:45:18Z",
        "updated_at": "2023-10-02T22:01:09Z",
        "closed_at": "2023-10-02T22:01:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7893",
            "html_url": "https://github.com/run-llama/llama_index/pull/7893",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7893.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7893.patch",
            "merged_at": "2023-10-02T22:01:08Z"
        },
        "body": "# Description\r\nAdds the ability to pass an pydantic function to get_response_synthesizer. It will choose which BasePydanticProgram to use based on whether the LLM specified is openai, chat model, or not.  \r\n\r\nThis feature included upgrading `LLMTextCompletionProgram` and `OpenAIPydanticProgram` to support messages, including returning a new response type `PydanticResponse`\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7893/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7893/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7892",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7892/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7892/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7892/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7892",
        "id": 1918566581,
        "node_id": "I_kwDOIWuq585yWwC1",
        "number": 7892,
        "title": "[Question]: How to Use ReAct Chat Engine to Query a Collection of PandasQueryEngines",
        "user": {
            "login": "benhgm",
            "id": 80461537,
            "node_id": "MDQ6VXNlcjgwNDYxNTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/80461537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benhgm",
            "html_url": "https://github.com/benhgm",
            "followers_url": "https://api.github.com/users/benhgm/followers",
            "following_url": "https://api.github.com/users/benhgm/following{/other_user}",
            "gists_url": "https://api.github.com/users/benhgm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benhgm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benhgm/subscriptions",
            "organizations_url": "https://api.github.com/users/benhgm/orgs",
            "repos_url": "https://api.github.com/users/benhgm/repos",
            "events_url": "https://api.github.com/users/benhgm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benhgm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-29T04:14:11Z",
        "updated_at": "2023-10-05T13:06:31Z",
        "closed_at": "2023-10-02T01:29:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\ndoes anyone know if i am able to use a ReAct chat engine to perform data analysis on a collection of pandas dataframes?\r\n\r\nwhat is the best way to compose an application for such a use case? \r\n\r\nAs per the documentation, using ReAct and Single Query Transform can be done on VectorStoreIndexes. However, I can't find any documentation on how to create a VectorStoreIndex using pandas dataframes.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7892/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7891",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7891/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7891/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7891/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7891",
        "id": 1918443634,
        "node_id": "PR_kwDOIWuq585bflyZ",
        "number": 7891,
        "title": "Nice-ified `JSONDecodeError`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-29T00:46:38Z",
        "updated_at": "2023-09-30T08:24:04Z",
        "closed_at": "2023-09-29T01:56:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7891",
            "html_url": "https://github.com/run-llama/llama_index/pull/7891",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7891.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7891.patch",
            "merged_at": "2023-09-29T01:56:02Z"
        },
        "body": "# Description\r\n\r\n- Nice-ified `JSONDecodeError` for LLM responses that didn't listen\r\n- Combined two test cases into one (extra parameterized case\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7891/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7891/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7890",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7890/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7890/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7890/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7890",
        "id": 1918418651,
        "node_id": "PR_kwDOIWuq585bfghm",
        "number": 7890,
        "title": "update one_click_observability.md for arize_phoenix",
        "user": {
            "login": "RogerHYang",
            "id": 80478925,
            "node_id": "MDQ6VXNlcjgwNDc4OTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/80478925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RogerHYang",
            "html_url": "https://github.com/RogerHYang",
            "followers_url": "https://api.github.com/users/RogerHYang/followers",
            "following_url": "https://api.github.com/users/RogerHYang/following{/other_user}",
            "gists_url": "https://api.github.com/users/RogerHYang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RogerHYang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RogerHYang/subscriptions",
            "organizations_url": "https://api.github.com/users/RogerHYang/orgs",
            "repos_url": "https://api.github.com/users/RogerHYang/repos",
            "events_url": "https://api.github.com/users/RogerHYang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RogerHYang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-29T00:03:44Z",
        "updated_at": "2023-09-29T00:33:50Z",
        "closed_at": "2023-09-29T00:32:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7890",
            "html_url": "https://github.com/run-llama/llama_index/pull/7890",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7890.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7890.patch",
            "merged_at": "2023-09-29T00:32:22Z"
        },
        "body": "Add section in one_click_observability.md for Arize Phoenix.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7890/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7890/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7889",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7889/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7889/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7889/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7889",
        "id": 1918411215,
        "node_id": "PR_kwDOIWuq585bfe-Y",
        "number": 7889,
        "title": "Updated `ruff` and `Makefile`, added `toml-sort` and `pre-commit-hooks`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-09-28T23:50:54Z",
        "updated_at": "2023-10-04T04:21:27Z",
        "closed_at": "2023-10-04T03:54:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7889",
            "html_url": "https://github.com/run-llama/llama_index/pull/7889",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7889.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7889.patch",
            "merged_at": "2023-10-04T03:54:37Z"
        },
        "body": "# Description\r\n\r\nTooling update!\r\n- Updates `ruff` to the newest version, enabling many autofixable rules\r\n    - Makes a few fixes that broke `ruff` autofix\r\n- Adds `toml-sort` and some `pre-commit-hooks`\r\n- Updates `Makefile` to use `pre-commit` to run tools (solving toolchain problem)\r\n\r\nNOTE: this PR will break CI unless you run `pre-commit run --all-files` and commit the changes.  But when you do that, GitHub PR view will become really laggy, as there's many autofixes. This PR will enable ~1.5k `ruff` autofixes.\r\n\r\nTo investigate other `ruff` autofixable rules that can be enabled:\r\n\r\n```bash\r\nruff --select=\"ALL\" . | grep \"[*]\"\r\n# Or if you're like me\r\nruff --select=\"ALL\" --ignore=\"COM812,ERA001,S101\" . | grep \"[*]\"\r\n```\r\n\r\nI can add a few more `select` rules if desired, depends how people feel about this.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7889/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7889/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]