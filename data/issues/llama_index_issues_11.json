[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8478",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8478/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8478/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8478/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8478",
        "id": 1962018115,
        "node_id": "PR_kwDOIWuq585dyUKR",
        "number": 8478,
        "title": "add Jina AI embeddings notebook + huggingface embedding fix",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-25T18:44:36Z",
        "updated_at": "2023-10-25T19:20:41Z",
        "closed_at": "2023-10-25T19:20:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8478",
            "html_url": "https://github.com/run-llama/llama_index/pull/8478",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8478.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8478.patch",
            "merged_at": "2023-10-25T19:20:40Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8478/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8478/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8477",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8477/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8477/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8477/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8477",
        "id": 1961903339,
        "node_id": "I_kwDOIWuq58508ETr",
        "number": 8477,
        "title": "[Question]: pdf to (well-structured) text ",
        "user": {
            "login": "jyskim",
            "id": 26681366,
            "node_id": "MDQ6VXNlcjI2NjgxMzY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/26681366?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jyskim",
            "html_url": "https://github.com/jyskim",
            "followers_url": "https://api.github.com/users/jyskim/followers",
            "following_url": "https://api.github.com/users/jyskim/following{/other_user}",
            "gists_url": "https://api.github.com/users/jyskim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jyskim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jyskim/subscriptions",
            "organizations_url": "https://api.github.com/users/jyskim/orgs",
            "repos_url": "https://api.github.com/users/jyskim/repos",
            "events_url": "https://api.github.com/users/jyskim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jyskim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-25T17:29:51Z",
        "updated_at": "2023-10-28T19:20:36Z",
        "closed_at": "2023-10-28T19:20:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI use llama-index and explore the feature to generate questions,  summary or to fine tune on the documents. \r\nI am stuck in something that i guess simpler and want to ask help here. \r\nI want to load pdf and generate to the full raw text (no text processing for summary or question..) in well structured form with the line breaks, paragraph separation, but couldn't find a solution.\r\nBelow is my code: \r\n\r\n```\r\nimport requests\r\nfrom llama_index import SimpleDirectoryReader\r\nr = requests.get('https://arxiv.org/pdf/2310.06117.pdf', allow_redirects=True)\r\nopen('pdf1.pdf', 'wb').write(r.content)\r\ndocuments = SimpleDirectoryReader( input_files=['pdf1.pdf'] ).load_data()\r\nopen('txt1.txt', 'w', encoding='utf-8').write('\\n'.join([d.text for d in `documents]))`\r\n```\r\nit's amazing to extract the full text, but the structure is broken.\r\n```\r\n...\r\nground reasoning on abstractions to reduce the chance of making errors in the intermediate reasoning\r\nsteps.\r\nWhat happens to the \r\npressure, P, of an ideal gas if \r\nthe temperature is increased \r\nby a factor of 2 and the \r\nvolume is increased by a \r\nfactor of 8 ? What are the physics \r\nprinciples behind this \r\n...\r\n```\r\nIs there an available api from llama-index or others or a prompt technic to update the text structure close to the original? \r\nThank you in advance - I would appreciate any help. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8477/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8477/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8476",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8476/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8476/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8476/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8476",
        "id": 1961847597,
        "node_id": "I_kwDOIWuq585072st",
        "number": 8476,
        "title": "[Documentation]: Missing Link to Blog Post",
        "user": {
            "login": "bllchmbrs",
            "id": 1642503,
            "node_id": "MDQ6VXNlcjE2NDI1MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1642503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bllchmbrs",
            "html_url": "https://github.com/bllchmbrs",
            "followers_url": "https://api.github.com/users/bllchmbrs/followers",
            "following_url": "https://api.github.com/users/bllchmbrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/bllchmbrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bllchmbrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bllchmbrs/subscriptions",
            "organizations_url": "https://api.github.com/users/bllchmbrs/orgs",
            "repos_url": "https://api.github.com/users/bllchmbrs/repos",
            "events_url": "https://api.github.com/users/bllchmbrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bllchmbrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-25T16:55:52Z",
        "updated_at": "2023-12-03T15:10:04Z",
        "closed_at": "2023-12-03T15:10:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nMissing documentation link to the blog post on [the tools page](https://docs.llamaindex.ai/en/stable/core_modules/agent_modules/tools/root.html#blog-post).\r\n\r\n> For full details, please check out our detailed blog post.\r\n\r\nThe problem is, there is no link to the blog post.\r\n\r\nI assume [this](https://blog.llamaindex.ai/building-better-tools-for-llm-agents-f8c5a6714f11) is the blog post but not 100% sure.\r\n\r\n\n\n### Documentation Link\n\nhttps://docs.llamaindex.ai/en/stable/core_modules/agent_modules/tools/root.html#blog-post",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8476/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8476/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8475",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8475/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8475/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8475/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8475",
        "id": 1961782687,
        "node_id": "I_kwDOIWuq58507m2f",
        "number": 8475,
        "title": "[Bug]: PandasQueryEngine with llama ccp",
        "user": {
            "login": "YoExplo13",
            "id": 148955206,
            "node_id": "U_kgDOCODgRg",
            "avatar_url": "https://avatars.githubusercontent.com/u/148955206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YoExplo13",
            "html_url": "https://github.com/YoExplo13",
            "followers_url": "https://api.github.com/users/YoExplo13/followers",
            "following_url": "https://api.github.com/users/YoExplo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/YoExplo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YoExplo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YoExplo13/subscriptions",
            "organizations_url": "https://api.github.com/users/YoExplo13/orgs",
            "repos_url": "https://api.github.com/users/YoExplo13/repos",
            "events_url": "https://api.github.com/users/YoExplo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YoExplo13/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-25T16:13:29Z",
        "updated_at": "2023-10-30T10:51:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nHello I am trying to use the PandasQueryEngine as in this example : https://docs.llamaindex.ai/en/stable/examples/query_engine/pandas_query_engine.html but with llama ccp as ServiceContext.\r\n\r\nI am on a Mac with M2 and macOS 13.6.\r\n\r\nI have two issues : \r\n- first I installed llama ccp with codellama-7b.Q4_0.gguf as it is presented here : https://docs.llamaindex.ai/en/stable/examples/llm/llama_2_llama_cpp.html. The install worked with llama_cpp_python==0.2.11 and text completion works. But when I try to use the model wrapped in ServiceContext with \r\n```from llama_cpp import Llama\r\nfrom llama_index.embeddings import HuggingFaceEmbedding\r\n\r\nllm = Llama(model_path=\"/Users/yoannrussello/Downloads/codellama-7b.Q4_0.gguf\")\r\nembed_model = HuggingFaceEmbedding(model_name=\"BAAI/bge-small-en-v1.5\")\r\n# create a service context\r\nservice_context = ServiceContext.from_defaults(\r\n    llm=llm,\r\n    embed_model=embed_model,\r\n)\r\n```\r\nI got the error : \r\n```AttributeError                            Traceback (most recent call last)\r\n[/Users/yoannrussello/Documents/pdf-parsing/notebooks/test_llama.ipynb](https://file+.vscode-resource.vscode-cdn.net/Users/yoannrussello/Documents/pdf-parsing/notebooks/test_llama.ipynb) Cell 13 line 1\r\n----> [1](vscode-notebook-cell:/Users/yoannrussello/Documents/pdf-parsing/notebooks/test_llama.ipynb#X15sZmlsZQ%3D%3D?line=0) service_context = ServiceContext.from_defaults(llm=llm,    embed_model=embed_model)\r\n\r\nFile [~/.pyenv/versions/3.10.4/envs/pdf-parsing_3.10.4/lib/python3.10/site-packages/llama_index/indices/service_context.py:167](https://file+.vscode-resource.vscode-cdn.net/Users/yoannrussello/Documents/pdf-parsing/notebooks/~/.pyenv/versions/3.10.4/envs/pdf-parsing_3.10.4/lib/python3.10/site-packages/llama_index/indices/service_context.py:167), in ServiceContext.from_defaults(cls, llm_predictor, llm, prompt_helper, embed_model, node_parser, llama_logger, callback_manager, system_prompt, query_wrapper_prompt, chunk_size, chunk_overlap, context_window, num_output, chunk_size_limit)\r\n    163 embed_model = resolve_embed_model(embed_model)\r\n    164 embed_model.callback_manager = callback_manager\r\n    166 prompt_helper = prompt_helper or _get_default_prompt_helper(\r\n--> 167     llm_metadata=llm_predictor.metadata,\r\n    168     context_window=context_window,\r\n    169     num_output=num_output,\r\n    170 )\r\n    172 node_parser = node_parser or _get_default_node_parser(\r\n    173     chunk_size=chunk_size,\r\n    174     chunk_overlap=chunk_overlap,\r\n    175     callback_manager=callback_manager,\r\n    176 )\r\n    178 llama_logger = llama_logger or LlamaLogger()\r\n\r\nFile [~/.pyenv/versions/3.10.4/envs/pdf-parsing_3.10.4/lib/python3.10/site-packages/llama_index/llm_predictor/base.py:115](https://file+.vscode-resource.vscode-cdn.net/Users/yoannrussello/Documents/pdf-parsing/notebooks/~/.pyenv/versions/3.10.4/envs/pdf-parsing_3.10.4/lib/python3.10/site-packages/llama_index/llm_predictor/base.py:115), in LLMPredictor.metadata(self)\r\n    112 @property\r\n    113 def metadata(self) -> LLMMetadata:\r\n    114     \"\"\"Get LLM metadata.\"\"\"\r\n--> 115     return self._llm.metadata\r\n\r\nAttributeError: 'Llama' object has no attribute 'metadata' \r\n```\r\nI don't know if this error needs to be fixed here or in llama ccp or if it needs a new features.\r\n\r\n- I tried to use HuggingFaceModel like here : https://docs.llamaindex.ai/en/stable/examples/llm/llama_2_llama_cpp.html. The model is loaded but when I run an easy query I got the error : \r\n```\r\nLlama.generate: prefix-match hit\r\nThere was an error running the output as Python code. Error message: invalid syntax (<unknown>, line 3)\r\n\r\nllama_print_timings:        load time =  1575.28 ms\r\nllama_print_timings:      sample time =   168.43 ms [/](https://file+.vscode-resource.vscode-cdn.net/)   256 runs   (    0.66 ms per token,  1519.89 tokens per second)\r\nllama_print_timings: prompt eval time =   386.26 ms [/](https://file+.vscode-resource.vscode-cdn.net/)    30 tokens (   12.88 ms per token,    77.67 tokens per second)\r\nllama_print_timings:        eval time =  7143.62 ms [/](https://file+.vscode-resource.vscode-cdn.net/)   255 runs   (   28.01 ms per token,    35.70 tokens per second)\r\nllama_print_timings:       total time =  7977.79 ms\r\nTraceback (most recent call last):\r\n  File \"/Users/yoannrussello/.pyenv/versions/3.10.4/envs/pdf-parsing_3.10.4/lib/python3.10/site-packages/llama_index/query_engine/pandas_query_engine.py\", line 59, in default_output_processor\r\n    tree = ast.parse(output)\r\n  File \"/Users/yoannrussello/.pyenv/versions/3.10.4/lib/python3.10/ast.py\", line 50, in parse\r\n    return compile(source, filename, mode, flags,\r\n  File \"<unknown>\", line 3\r\n    [SYS] <<INS>> \r\n                  ^\r\nSyntaxError: invalid syntax\r\n```\r\nI've found this closed topic that has a similar issue : https://github.com/run-llama/llama_index/issues/7269.\r\nSo I tried to add instructions : \r\n```\r\ninstruction_str = (\r\n    \"We wish to convert this query to executable Python code using Pandas.\\n\"\r\n    \"The final line of code should be a Python expression that can be called \"\r\n    \"in a notebook. This expression should represent a solution \"\r\n    \"to the query. Your response should ONLY contain python code.\"\r\n)\r\nquery_engine = PandasQueryEngine(df, service_context=service_context,   instruction_str = instruction_str)\r\nresponse = query_engine.query(\"What is the biggest sepal length?\")\r\nprint(response)\r\n```\r\nBut I got the error : \r\n```\r\nLlama.generate: prefix-match hit\r\nThere was an error running the output as Python code. Error message: invalid syntax (<unknown>, line 3)\r\n\r\nllama_print_timings:        load time =  1575.28 ms\r\nllama_print_timings:      sample time =   168.43 ms [/](https://file+.vscode-resource.vscode-cdn.net/)   256 runs   (    0.66 ms per token,  1519.89 tokens per second)\r\nllama_print_timings: prompt eval time =   386.26 ms [/](https://file+.vscode-resource.vscode-cdn.net/)    30 tokens (   12.88 ms per token,    77.67 tokens per second)\r\nllama_print_timings:        eval time =  7143.62 ms [/](https://file+.vscode-resource.vscode-cdn.net/)   255 runs   (   28.01 ms per token,    35.70 tokens per second)\r\nllama_print_timings:       total time =  7977.79 ms\r\nTraceback (most recent call last):\r\n  File \"/Users/yoannrussello/.pyenv/versions/3.10.4/envs/pdf-parsing_3.10.4/lib/python3.10/site-packages/llama_index/query_engine/pandas_query_engine.py\", line 59, in default_output_processor\r\n    tree = ast.parse(output)\r\n  File \"/Users/yoannrussello/.pyenv/versions/3.10.4/lib/python3.10/ast.py\", line 50, in parse\r\n    return compile(source, filename, mode, flags,\r\n  File \"<unknown>\", line 3\r\n    [SYS] <<INS>> \r\n                  ^\r\nSyntaxError: invalid syntax\r\n```\r\nMore details in the steps to reproduce.\r\n\r\nMy primary goal was to use llama offline to extract data from pdf tables converted to pandas dataframe like here : https://gpt-index.readthedocs.io/en/latest/examples/query_engine/pdf_tables/recursive_retriever.html.\r\n\r\n### Version\r\n\r\n0.8.45.post1\r\n\r\n### Steps to Reproduce\r\n\r\nInstall METAL as in here : https://gpt-index.readthedocs.io/en/v0.8.25/examples/llm/llama_2_llama_cpp.html\r\nInstall the libraries\r\n```\r\nhuggingface-hub==0.17.3\r\nllama-hub==0.0.38\r\nllama-index==0.8.45.post1\r\nllama_cpp_python==0.2.11\r\n```\r\nThen run the following code : \r\n```\r\nfrom llama_index.llms.llama_utils import messages_to_prompt, completion_to_prompt\r\nfrom llama_cpp import Llama\r\nfrom llama_index.embeddings import HuggingFaceEmbedding\r\nfrom llama_index.llms import LlamaCPP\r\n\r\nimport pandas as pd\r\n\r\nmodel_url = \"https://huggingface.co/TheBloke/CodeLlama-13B-GGUF/resolve/main/codellama-13b.Q4_0.gguf\"\r\nllm = LlamaCPP(\r\n    # You can pass in the URL to a GGML model to download it automatically\r\n    model_url=model_url,\r\n    # optionally, you can set the path to a pre-downloaded model instead of model_url\r\n    model_path=None,\r\n    temperature=0.1,\r\n    max_new_tokens=256,\r\n    # llama2 has a context window of 4096 tokens, but we set it lower to allow for some wiggle room\r\n    context_window=3900,\r\n    # kwargs to pass to __call__()\r\n    generate_kwargs={},\r\n    # kwargs to pass to __init__()\r\n    # set to at least 1 to use GPU\r\n    model_kwargs={\"n_gpu_layers\": 1},\r\n    # transform inputs into Llama2 format\r\n    messages_to_prompt=messages_to_prompt,\r\n    completion_to_prompt=completion_to_prompt,\r\n    verbose=True,\r\n)\r\nembed_model = HuggingFaceEmbedding(model_name=\"BAAI/bge-small-en-v1.5\")\r\ninstruction_str = (\r\n    \"We wish to convert this query to executable Python code using Pandas.\\n\"\r\n    \"The final line of code should be a Python expression that can be called \"\r\n    \"with the `eval()` function. This expression should represent a solution \"\r\n    \"to the query. Your response should ONLY contain python code.\"\r\n)\r\n\r\ndata = {\r\n    \"sepal_length\": [5.1, 4.9, 4.7, 4.6],\r\n    \"sepal_width\": [3.5, 3.0, 3.2, 3.1],\r\n    \"petal_length\": [1.4, 1.4, 1.3, 1.5]\r\n}\r\ndf = pd.DataFrame(data)\r\n\r\n# create a service context\r\nservice_context = ServiceContext.from_defaults(\r\n    llm=llm,\r\n    embed_model=embed_model,\r\n)\r\n\r\nquery_engine = PandasQueryEngine(df, service_context=service_context)\r\nresponse = query_engine.query(\"What is the biggest sepal length?\")\r\n```\r\n\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nllama_model_loader: loaded meta data with 20 key-value pairs and 363 tensors from /Users/yoannrussello/Library/Caches/llama_index/models/codellama-13b.Q4_0.gguf (version GGUF V2 (latest))\r\nllama_model_loader: - tensor    0:                token_embd.weight q4_0     [  5120, 32016,     1,     1 ]\r\nllama_model_loader: - tensor    1:           blk.0.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor    2:            blk.0.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor    3:            blk.0.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor    4:              blk.0.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor    5:            blk.0.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor    6:              blk.0.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor    7:         blk.0.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor    8:              blk.0.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor    9:              blk.0.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   10:           blk.1.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   11:            blk.1.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   12:            blk.1.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   13:              blk.1.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   14:            blk.1.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   15:              blk.1.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   16:         blk.1.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   17:              blk.1.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   18:              blk.1.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   19:          blk.10.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   20:           blk.10.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   21:           blk.10.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   22:             blk.10.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   23:           blk.10.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   24:             blk.10.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   25:        blk.10.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   26:             blk.10.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   27:             blk.10.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   28:          blk.11.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   29:           blk.11.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   30:           blk.11.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   31:             blk.11.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   32:           blk.11.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   33:             blk.11.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   34:        blk.11.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   35:             blk.11.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   36:             blk.11.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   37:          blk.12.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   38:           blk.12.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   39:           blk.12.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   40:             blk.12.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   41:           blk.12.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   42:             blk.12.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   43:        blk.12.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   44:             blk.12.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   45:             blk.12.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   46:          blk.13.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   47:           blk.13.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   48:           blk.13.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   49:             blk.13.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   50:           blk.13.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   51:             blk.13.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   52:        blk.13.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   53:             blk.13.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   54:             blk.13.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   55:          blk.14.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   56:           blk.14.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   57:           blk.14.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   58:             blk.14.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   59:           blk.14.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   60:             blk.14.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   61:        blk.14.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   62:             blk.14.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   63:             blk.14.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   64:             blk.15.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   65:             blk.15.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   66:           blk.2.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   67:            blk.2.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   68:            blk.2.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   69:              blk.2.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   70:            blk.2.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   71:              blk.2.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   72:         blk.2.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   73:              blk.2.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   74:              blk.2.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   75:           blk.3.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   76:            blk.3.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   77:            blk.3.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   78:              blk.3.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   79:            blk.3.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   80:              blk.3.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   81:         blk.3.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   82:              blk.3.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   83:              blk.3.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   84:           blk.4.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   85:            blk.4.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   86:            blk.4.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   87:              blk.4.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   88:            blk.4.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   89:              blk.4.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   90:         blk.4.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   91:              blk.4.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   92:              blk.4.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   93:           blk.5.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   94:            blk.5.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   95:            blk.5.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   96:              blk.5.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor   97:            blk.5.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor   98:              blk.5.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor   99:         blk.5.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  100:              blk.5.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  101:              blk.5.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  102:           blk.6.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  103:            blk.6.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  104:            blk.6.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  105:              blk.6.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  106:            blk.6.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  107:              blk.6.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  108:         blk.6.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  109:              blk.6.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  110:              blk.6.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  111:           blk.7.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  112:            blk.7.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  113:            blk.7.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  114:              blk.7.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  115:            blk.7.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  116:              blk.7.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  117:         blk.7.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  118:              blk.7.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  119:              blk.7.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  120:           blk.8.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  121:            blk.8.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  122:            blk.8.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  123:              blk.8.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  124:            blk.8.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  125:              blk.8.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  126:         blk.8.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  127:              blk.8.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  128:              blk.8.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  129:           blk.9.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  130:            blk.9.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  131:            blk.9.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  132:              blk.9.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  133:            blk.9.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  134:              blk.9.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  135:         blk.9.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  136:              blk.9.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  137:              blk.9.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  138:          blk.15.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  139:           blk.15.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  140:           blk.15.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  141:             blk.15.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  142:           blk.15.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  143:        blk.15.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  144:             blk.15.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  145:          blk.16.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  146:           blk.16.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  147:           blk.16.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  148:             blk.16.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  149:           blk.16.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  150:             blk.16.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  151:        blk.16.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  152:             blk.16.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  153:             blk.16.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  154:          blk.17.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  155:           blk.17.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  156:           blk.17.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  157:             blk.17.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  158:           blk.17.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  159:             blk.17.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  160:        blk.17.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  161:             blk.17.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  162:             blk.17.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  163:          blk.18.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  164:           blk.18.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  165:           blk.18.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  166:             blk.18.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  167:           blk.18.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  168:             blk.18.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  169:        blk.18.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  170:             blk.18.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  171:             blk.18.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  172:          blk.19.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  173:           blk.19.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  174:           blk.19.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  175:             blk.19.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  176:           blk.19.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  177:             blk.19.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  178:        blk.19.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  179:             blk.19.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  180:             blk.19.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  181:          blk.20.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  182:           blk.20.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  183:           blk.20.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  184:             blk.20.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  185:           blk.20.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  186:             blk.20.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  187:        blk.20.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  188:             blk.20.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  189:             blk.20.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  190:          blk.21.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  191:           blk.21.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  192:           blk.21.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  193:             blk.21.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  194:           blk.21.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  195:             blk.21.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  196:        blk.21.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  197:             blk.21.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  198:             blk.21.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  199:          blk.22.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  200:           blk.22.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  201:           blk.22.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  202:             blk.22.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  203:           blk.22.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  204:             blk.22.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  205:        blk.22.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  206:             blk.22.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  207:             blk.22.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  208:          blk.23.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  209:           blk.23.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  210:           blk.23.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  211:             blk.23.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  212:           blk.23.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  213:             blk.23.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  214:        blk.23.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  215:             blk.23.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  216:             blk.23.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  217:          blk.24.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  218:           blk.24.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  219:           blk.24.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  220:             blk.24.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  221:           blk.24.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  222:             blk.24.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  223:        blk.24.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  224:             blk.24.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  225:             blk.24.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  226:          blk.25.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  227:           blk.25.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  228:           blk.25.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  229:             blk.25.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  230:           blk.25.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  231:             blk.25.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  232:        blk.25.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  233:             blk.25.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  234:             blk.25.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  235:          blk.26.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  236:           blk.26.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  237:           blk.26.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  238:             blk.26.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  239:           blk.26.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  240:             blk.26.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  241:        blk.26.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  242:             blk.26.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  243:             blk.26.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  244:          blk.27.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  245:           blk.27.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  246:           blk.27.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  247:             blk.27.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  248:           blk.27.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  249:             blk.27.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  250:        blk.27.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  251:             blk.27.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  252:             blk.27.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  253:          blk.28.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  254:           blk.28.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  255:           blk.28.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  256:             blk.28.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  257:           blk.28.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  258:             blk.28.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  259:        blk.28.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  260:             blk.28.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  261:             blk.28.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  262:          blk.29.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  263:           blk.29.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  264:           blk.29.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  265:             blk.29.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  266:           blk.29.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  267:             blk.29.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  268:        blk.29.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  269:             blk.29.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  270:             blk.29.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  271:           blk.30.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  272:             blk.30.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  273:             blk.30.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  274:        blk.30.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  275:             blk.30.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  276:             blk.30.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  277:                    output.weight q6_K     [  5120, 32016,     1,     1 ]\r\nllama_model_loader: - tensor  278:          blk.30.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  279:           blk.30.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  280:           blk.30.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  281:          blk.31.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  282:           blk.31.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  283:           blk.31.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  284:             blk.31.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  285:           blk.31.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  286:             blk.31.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  287:        blk.31.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  288:             blk.31.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  289:             blk.31.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  290:          blk.32.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  291:           blk.32.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  292:           blk.32.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  293:             blk.32.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  294:           blk.32.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  295:             blk.32.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  296:        blk.32.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  297:             blk.32.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  298:             blk.32.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  299:          blk.33.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  300:           blk.33.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  301:           blk.33.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  302:             blk.33.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  303:           blk.33.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  304:             blk.33.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  305:        blk.33.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  306:             blk.33.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  307:             blk.33.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  308:          blk.34.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  309:           blk.34.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  310:           blk.34.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  311:             blk.34.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  312:           blk.34.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  313:             blk.34.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  314:        blk.34.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  315:             blk.34.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  316:             blk.34.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  317:          blk.35.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  318:           blk.35.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  319:           blk.35.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  320:             blk.35.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  321:           blk.35.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  322:             blk.35.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  323:        blk.35.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  324:             blk.35.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  325:             blk.35.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  326:          blk.36.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  327:           blk.36.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  328:           blk.36.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  329:             blk.36.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  330:           blk.36.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  331:             blk.36.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  332:        blk.36.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  333:             blk.36.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  334:             blk.36.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  335:          blk.37.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  336:           blk.37.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  337:           blk.37.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  338:             blk.37.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  339:           blk.37.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  340:             blk.37.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  341:        blk.37.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  342:             blk.37.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  343:             blk.37.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  344:          blk.38.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  345:           blk.38.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  346:           blk.38.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  347:             blk.38.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  348:           blk.38.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  349:             blk.38.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  350:        blk.38.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  351:             blk.38.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  352:             blk.38.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  353:          blk.39.attn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  354:           blk.39.ffn_down.weight q4_0     [ 13824,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  355:           blk.39.ffn_gate.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  356:             blk.39.ffn_up.weight q4_0     [  5120, 13824,     1,     1 ]\r\nllama_model_loader: - tensor  357:           blk.39.ffn_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - tensor  358:             blk.39.attn_k.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  359:        blk.39.attn_output.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  360:             blk.39.attn_q.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  361:             blk.39.attn_v.weight q4_0     [  5120,  5120,     1,     1 ]\r\nllama_model_loader: - tensor  362:               output_norm.weight f32      [  5120,     1,     1,     1 ]\r\nllama_model_loader: - kv   0:                       general.architecture str     \r\nllama_model_loader: - kv   1:                               general.name str     \r\nllama_model_loader: - kv   2:                       llama.context_length u32     \r\nllama_model_loader: - kv   3:                     llama.embedding_length u32     \r\nllama_model_loader: - kv   4:                          llama.block_count u32     \r\nllama_model_loader: - kv   5:                  llama.feed_forward_length u32     \r\nllama_model_loader: - kv   6:                 llama.rope.dimension_count u32     \r\nllama_model_loader: - kv   7:                 llama.attention.head_count u32     \r\nllama_model_loader: - kv   8:              llama.attention.head_count_kv u32     \r\nllama_model_loader: - kv   9:     llama.attention.layer_norm_rms_epsilon f32     \r\nllama_model_loader: - kv  10:                       llama.rope.freq_base f32     \r\nllama_model_loader: - kv  11:                          general.file_type u32     \r\nllama_model_loader: - kv  12:                       tokenizer.ggml.model str     \r\nllama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr     \r\nllama_model_loader: - kv  14:                      tokenizer.ggml.scores arr     \r\nllama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr     \r\nllama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32     \r\nllama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32     \r\nllama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32     \r\nllama_model_loader: - kv  19:               general.quantization_version u32     \r\nllama_model_loader: - type  f32:   81 tensors\r\nllama_model_loader: - type q4_0:  281 tensors\r\nllama_model_loader: - type q6_K:    1 tensors\r\nllm_load_print_meta: format           = GGUF V2 (latest)\r\nllm_load_print_meta: arch             = llama\r\nllm_load_print_meta: vocab type       = SPM\r\nllm_load_print_meta: n_vocab          = 32016\r\nllm_load_print_meta: n_merges         = 0\r\nllm_load_print_meta: n_ctx_train      = 16384\r\nllm_load_print_meta: n_embd           = 5120\r\nllm_load_print_meta: n_head           = 40\r\nllm_load_print_meta: n_head_kv        = 40\r\nllm_load_print_meta: n_layer          = 40\r\nllm_load_print_meta: n_rot            = 128\r\nllm_load_print_meta: n_gqa            = 1\r\nllm_load_print_meta: f_norm_eps       = 0.0e+00\r\nllm_load_print_meta: f_norm_rms_eps   = 1.0e-05\r\nllm_load_print_meta: n_ff             = 13824\r\nllm_load_print_meta: freq_base_train  = 1000000.0\r\nllm_load_print_meta: freq_scale_train = 1\r\nllm_load_print_meta: model type       = 13B\r\nllm_load_print_meta: model ftype      = mostly Q4_0\r\nllm_load_print_meta: model params     = 13.02 B\r\nllm_load_print_meta: model size       = 6.86 GiB (4.53 BPW) \r\nllm_load_print_meta: general.name   = codellama_codellama-13b-hf\r\nllm_load_print_meta: BOS token = 1 '<s>'\r\nllm_load_print_meta: EOS token = 2 '</s>'\r\nllm_load_print_meta: UNK token = 0 '<unk>'\r\nllm_load_print_meta: LF token  = 13 '<0x0A>'\r\nllm_load_tensors: ggml ctx size =    0.12 MB\r\nllm_load_tensors: mem required  = 7024.12 MB\r\n...................................................................................................\r\nllama_new_context_with_model: n_ctx      = 3900\r\nllama_new_context_with_model: freq_base  = 1000000.0\r\nllama_new_context_with_model: freq_scale = 1\r\nllama_new_context_with_model: kv self size  = 3046.88 MB\r\nggml_metal_init: allocating\r\nggml_metal_init: found device: Apple M2 Max\r\nggml_metal_init: picking default device: Apple M2 Max\r\nggml_metal_init: loading '/Users/yoannrussello/.pyenv/versions/3.10.4/envs/pdf-parsing_3.10.4/lib/python3.10/site-packages/llama_cpp/ggml-metal.metal'\r\nggml_metal_init: loaded kernel_add                            0x3ac66fcf0 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_add_row                        0x3ac66ff50 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_mul                            0x3ac6701b0 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_row                        0x3ac670410 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_scale                          0x3ac670670 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_silu                           0x3ac6708d0 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_relu                           0x3ac670b30 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_gelu                           0x3ac670d90 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_soft_max                       0x3ac670ff0 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_soft_max_4                     0x3ac671250 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_diag_mask_inf                  0x3ac6714b0 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_diag_mask_inf_8                0x3ac671710 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_get_rows_f32                   0x3ac672fb0 | th_max =  896 | th_width =   32\r\nggml_metal_init: loaded kernel_get_rows_f16                   0x3ac673210 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_get_rows_q4_0                  0x3ac673470 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_get_rows_q4_1                  0x3ac6736d0 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_get_rows_q8_0                  0x3ac673930 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_get_rows_q2_K                  0x3ac673b90 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_get_rows_q3_K                  0x3ac674270 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_get_rows_q4_K                  0x3ac6744d0 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_get_rows_q5_K                  0x3ac668090 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_get_rows_q6_K                  0x3ac6682f0 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_rms_norm                       0x3ac6751d0 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_norm                           0x3ac675430 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mat_f32_f32                0x3ac675690 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mat_f16_f32                0x3ac6758f0 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mat_f16_f32_1row           0x3ac675b50 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mat_f16_f32_l4             0x3ac675db0 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mat_q4_0_f32               0x3ac676010 | th_max =  896 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mat_q4_1_f32               0x3ac6befe0 | th_max =  896 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mat_q8_0_f32               0x3ac6bf240 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mat_q2_K_f32               0x3ac6bf4a0 | th_max =  640 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mat_q3_K_f32               0x3ac6bf700 | th_max =  576 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mat_q4_K_f32               0x3ac6bf960 | th_max =  576 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mat_q5_K_f32               0x3ac6bfbc0 | th_max =  640 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mat_q6_K_f32               0x3ac6bfe20 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mm_f32_f32                 0x3ac6c0080 | th_max =  768 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mm_f16_f32                 0x3ac6c02e0 | th_max =  768 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mm_q4_0_f32                0x3ac6c0540 | th_max =  768 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mm_q8_0_f32                0x3ac6c07a0 | th_max =  768 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mm_q4_1_f32                0x3ac6c0a00 | th_max =  768 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mm_q2_K_f32                0x3ac6c0c60 | th_max =  768 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mm_q3_K_f32                0x3ac6c0ec0 | th_max =  768 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mm_q4_K_f32                0x3ac6c1120 | th_max =  768 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mm_q5_K_f32                0x3ac6c1380 | th_max =  768 | th_width =   32\r\nggml_metal_init: loaded kernel_mul_mm_q6_K_f32                0x3ac6c15e0 | th_max =  768 | th_width =   32\r\nggml_metal_init: loaded kernel_rope_f32                       0x3ac6c1840 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_rope_f16                       0x3ac6c1aa0 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_alibi_f32                      0x3ac6c1d00 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_cpy_f32_f16                    0x3ac6c1f60 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_cpy_f32_f32                    0x3ac6c21c0 | th_max = 1024 | th_width =   32\r\nggml_metal_init: loaded kernel_cpy_f16_f16                    0x3ac6c2420 | th_max = 1024 | th_width =   32\r\nggml_metal_init: hasUnifiedMemory              = true\r\nggml_metal_init: recommendedMaxWorkingSetSize  = 21845.34 MB\r\nggml_metal_init: maxTransferRate               = built-in GPU\r\nllama_new_context_with_model: compute buffer total size = 348.18 MB\r\nllama_new_context_with_model: max tensor size =   128.24 MB\r\nggml_metal_add_buffer: allocated 'data            ' buffer, size =  7024.72 MB, (59107.19 / 21845.34), warning: current allocated size is greater than the recommended max working set size\r\nggml_metal_add_buffer: allocated 'kv              ' buffer, size =  3048.88 MB, (62156.06 / 21845.34), warning: current allocated size is greater than the recommended max working set size\r\nggml_metal_add_buffer: allocated 'alloc           ' buffer, size =   342.31 MB, (62498.38 / 21845.34), warning: current allocated size is greater than the recommended max working set size\r\nAVX = 0 | AVX2 = 0 | AVX512 = 0 | AVX512_VBMI = 0 | AVX512_VNNI = 0 | FMA = 0 | NEON = 1 | ARM_FMA = 1 | F16C = 0 | FP16_VA = 1 | WASM_SIMD = 0 | BLAS = 1 | SSE3 = 0 | SSSE3 = 0 | VSX = 0 |\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8475/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8475/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8474",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8474/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8474/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8474/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8474",
        "id": 1961407571,
        "node_id": "PR_kwDOIWuq585dwP4U",
        "number": 8474,
        "title": "Adding more questions in FAQ section",
        "user": {
            "login": "anoopshrma",
            "id": 26565263,
            "node_id": "MDQ6VXNlcjI2NTY1MjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/26565263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anoopshrma",
            "html_url": "https://github.com/anoopshrma",
            "followers_url": "https://api.github.com/users/anoopshrma/followers",
            "following_url": "https://api.github.com/users/anoopshrma/following{/other_user}",
            "gists_url": "https://api.github.com/users/anoopshrma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anoopshrma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anoopshrma/subscriptions",
            "organizations_url": "https://api.github.com/users/anoopshrma/orgs",
            "repos_url": "https://api.github.com/users/anoopshrma/repos",
            "events_url": "https://api.github.com/users/anoopshrma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anoopshrma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-25T13:16:37Z",
        "updated_at": "2023-10-25T21:38:24Z",
        "closed_at": "2023-10-25T21:38:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8474",
            "html_url": "https://github.com/run-llama/llama_index/pull/8474",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8474.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8474.patch",
            "merged_at": "2023-10-25T21:38:24Z"
        },
        "body": "Following @EmanuelCampos  FAQ PR and have added few more questions and added a new section for Document and Nodes.\r\n\r\nHow Has This Been Tested?\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n[x] I stared at the code and made sure it made sense",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8474/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8474/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8473",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8473/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8473/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8473/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8473",
        "id": 1961194960,
        "node_id": "I_kwDOIWuq58505XXQ",
        "number": 8473,
        "title": "[Feature Request]: Global manager for default promt templates.",
        "user": {
            "login": "Inkorak",
            "id": 52286717,
            "node_id": "MDQ6VXNlcjUyMjg2NzE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/52286717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Inkorak",
            "html_url": "https://github.com/Inkorak",
            "followers_url": "https://api.github.com/users/Inkorak/followers",
            "following_url": "https://api.github.com/users/Inkorak/following{/other_user}",
            "gists_url": "https://api.github.com/users/Inkorak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Inkorak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Inkorak/subscriptions",
            "organizations_url": "https://api.github.com/users/Inkorak/orgs",
            "repos_url": "https://api.github.com/users/Inkorak/repos",
            "events_url": "https://api.github.com/users/Inkorak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Inkorak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-25T11:43:25Z",
        "updated_at": "2023-10-27T02:22:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nI would really like to have a global manager in which you can change the default templates for prompts, rather than manually entering them for each llama index object that use them. This will be especially useful for localization into other languages, since if you need to use llama_index and chatgpt (or other models) to work with text and chat in other languages, almost all the templates need to be changed so that the model adheres to this language without problems.\r\n\r\n### Reason\r\n\r\n_No response_\r\n\r\n### Value of Feature\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8473/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8473/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8472",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8472/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8472/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8472/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8472",
        "id": 1961033183,
        "node_id": "I_kwDOIWuq58504v3f",
        "number": 8472,
        "title": "[Question]: How can I disable the node_parser",
        "user": {
            "login": "284nnuS",
            "id": 91007431,
            "node_id": "MDQ6VXNlcjkxMDA3NDMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/91007431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/284nnuS",
            "html_url": "https://github.com/284nnuS",
            "followers_url": "https://api.github.com/users/284nnuS/followers",
            "following_url": "https://api.github.com/users/284nnuS/following{/other_user}",
            "gists_url": "https://api.github.com/users/284nnuS/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/284nnuS/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/284nnuS/subscriptions",
            "organizations_url": "https://api.github.com/users/284nnuS/orgs",
            "repos_url": "https://api.github.com/users/284nnuS/repos",
            "events_url": "https://api.github.com/users/284nnuS/events{/privacy}",
            "received_events_url": "https://api.github.com/users/284nnuS/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-25T10:11:49Z",
        "updated_at": "2023-10-25T10:22:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello,\r\n\r\nIn my case, I had pre-process data and cut the data to data_chunks before I feed the data to vector storage.\r\nAnd when i'm trying to disable the node_parser with this code :\r\n`self.service_context = ServiceContext.from_defaults(\r\n            embed_model = self.embedding,\r\n            llm = self.llm,\r\n            chunk_overlap= None,\r\n            chunk_size=None,\r\n            chunk_size_limit=None,\r\n            node_parser=None)`\r\nIt not work and the data still be spilitted by the node parser of llama index. How can I disable that.\r\nPlease help me... ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8472/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8472/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8471",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8471/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8471/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8471/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8471",
        "id": 1960897568,
        "node_id": "I_kwDOIWuq58504Owg",
        "number": 8471,
        "title": "[Feature Request]: Extend PGVectorStore to Support Custom Schemas and Tables",
        "user": {
            "login": "darkovelkoski",
            "id": 137195652,
            "node_id": "U_kgDOCC1whA",
            "avatar_url": "https://avatars.githubusercontent.com/u/137195652?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darkovelkoski",
            "html_url": "https://github.com/darkovelkoski",
            "followers_url": "https://api.github.com/users/darkovelkoski/followers",
            "following_url": "https://api.github.com/users/darkovelkoski/following{/other_user}",
            "gists_url": "https://api.github.com/users/darkovelkoski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/darkovelkoski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/darkovelkoski/subscriptions",
            "organizations_url": "https://api.github.com/users/darkovelkoski/orgs",
            "repos_url": "https://api.github.com/users/darkovelkoski/repos",
            "events_url": "https://api.github.com/users/darkovelkoski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/darkovelkoski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6129428377,
                "node_id": "LA_kwDOIWuq588AAAABbVenmQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/request%20contribution%20board",
                "name": "request contribution board",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-25T08:58:54Z",
        "updated_at": "2023-10-26T15:47:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nIdeally PGVectorStore should be flexible enough to work with custom schemas and tables.\r\nIt should allow for integration with existing projects that have predefined database structures, without enforcing the use of specific tables or schemas.\n\n### Reason\n\nWe are trying to integrate llama_index into our existing project that is based on Python, PostgreSQL, pgvector, SQLAlchemy, and Alembic. Our database consists of several tables with custom schema. We want to leverage the advanced functionalities of llama_index, such as hybrid search, metadata filtering, etc., however, it seems that llama_index primarily works on the public schema and operates on predefined tables within the library's code, making it challenging to apply its functionalities directly to our custom tables and schema.\n\n### Value of Feature\n\nCustomization and Flexibility\r\n\r\nUsers with existing database structures won\u2019t need to modify their schemas or table designs to accommodate llama_index. This makes the library more adaptable and easier to integrate into existing projects.\r\n\r\nThe library\u2019s functionalities would become applicable in a wider range of scenarios and use-cases, given its increased compatibility with various database designs.\r\n\r\nWith increased flexibility, the library is likely to see broader adoption in the developer community, as it could be applied in a more diverse range of projects and use-cases.\r\n\r\nProjects can scale more efficiently without being constrained by rigid library schemas and table structures.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8471/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8471/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8469",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8469/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8469/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8469/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8469",
        "id": 1960811877,
        "node_id": "PR_kwDOIWuq585duN0g",
        "number": 8469,
        "title": "add `is_chat_model` to replicate",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-25T08:13:31Z",
        "updated_at": "2023-10-25T17:41:31Z",
        "closed_at": "2023-10-25T17:41:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8469",
            "html_url": "https://github.com/run-llama/llama_index/pull/8469",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8469.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8469.patch",
            "merged_at": "2023-10-25T17:41:30Z"
        },
        "body": "was playing around with some replicate models, we should allow user to specify which models are chat models to use the chat-based prompts ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8469/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8469/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8468",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8468/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8468/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8468/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8468",
        "id": 1960801785,
        "node_id": "I_kwDOIWuq585033X5",
        "number": 8468,
        "title": "[Question]: \u8bf7\u95ee\u4e3a\u4ec0\u4e48response.response\u603b\u662f",
        "user": {
            "login": "rzechen",
            "id": 24729413,
            "node_id": "MDQ6VXNlcjI0NzI5NDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24729413?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rzechen",
            "html_url": "https://github.com/rzechen",
            "followers_url": "https://api.github.com/users/rzechen/followers",
            "following_url": "https://api.github.com/users/rzechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/rzechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rzechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rzechen/subscriptions",
            "organizations_url": "https://api.github.com/users/rzechen/orgs",
            "repos_url": "https://api.github.com/users/rzechen/repos",
            "events_url": "https://api.github.com/users/rzechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rzechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-25T08:07:32Z",
        "updated_at": "2023-10-25T08:27:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n<img width=\"1234\" alt=\"image\" src=\"https://github.com/run-llama/llama_index/assets/24729413/ccf10c77-5d4b-4202-b4f9-8ed8c6651f27\">\r\n\r\n\u6700\u7ec8\u603b\u662f\u88ab\u622a\u65ad\uff0c\u56de\u7b54\u4e0d\u5168\uff0c\u6709\u4ec0\u4e48\u529e\u6cd5\u5904\u7406\u4e00\u4e0b",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8468/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8468/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8467",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8467/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8467/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8467/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8467",
        "id": 1960558089,
        "node_id": "PR_kwDOIWuq585dtWrf",
        "number": 8467,
        "title": "`Pooling` in `HuggingFaceEmbedding` with PyTorch",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-25T05:18:04Z",
        "updated_at": "2023-10-30T21:45:33Z",
        "closed_at": "2023-10-30T21:45:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8467",
            "html_url": "https://github.com/run-llama/llama_index/pull/8467",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8467.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8467.patch",
            "merged_at": "2023-10-30T21:45:32Z"
        },
        "body": "# Description\r\n\r\n- Cleans up `HuggingFaceEmbedding.__init__` to make control flows more explicit\r\n    - Fixes control flow where `model_name` or `tokenizer_name can be left as `None`\r\n- Adds support for `torch.Tensor` in `Pooling.CLS`\r\n- Moves `HuggingFaceEmbedding.pooling` to use the `Pooling` enum\r\n- Removed `torch` dependency for `HuggingFaceEmbedding._mean_pooling`\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8467/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8467/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8466",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8466/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8466/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8466/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8466",
        "id": 1960555594,
        "node_id": "PR_kwDOIWuq585dtWI5",
        "number": 8466,
        "title": "CogniSwitch Integration",
        "user": {
            "login": "CogniJT",
            "id": 131272471,
            "node_id": "U_kgDOB9MPFw",
            "avatar_url": "https://avatars.githubusercontent.com/u/131272471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CogniJT",
            "html_url": "https://github.com/CogniJT",
            "followers_url": "https://api.github.com/users/CogniJT/followers",
            "following_url": "https://api.github.com/users/CogniJT/following{/other_user}",
            "gists_url": "https://api.github.com/users/CogniJT/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CogniJT/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CogniJT/subscriptions",
            "organizations_url": "https://api.github.com/users/CogniJT/orgs",
            "repos_url": "https://api.github.com/users/CogniJT/repos",
            "events_url": "https://api.github.com/users/CogniJT/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CogniJT/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 22,
        "created_at": "2023-10-25T05:15:34Z",
        "updated_at": "2023-11-08T08:29:17Z",
        "closed_at": "2023-11-08T06:59:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8466",
            "html_url": "https://github.com/run-llama/llama_index/pull/8466",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8466.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8466.patch",
            "merged_at": "2023-11-08T06:59:12Z"
        },
        "body": "# Added Components\r\n- QueryEngine\r\n- Tests\r\n- Example Notebook\r\n- Inits\r\n\r\n# Description\r\n\r\nThis provides a connector to the CogniSwitch platform within LlamaIndex. \r\n\r\n## What is CogniSwitch?\r\nCogniSwitch enhances the reliability of Generative AI applications for enterprises. It achieves this by leveraging AI to gather and organize knowledge from documented sources, eliminating biases and hallucinations in AI responses. The platform allows experts to curate and visualize this knowledge before it is published. The CogniSwitch API enables Gen AI applications to access this knowledge as needed, ensuring reliability. It seamlessly integrates with top Generative AI technologies and offers customized solutions for different business functions within an enterprise. \r\n\r\n## Why CogniSwitch?\r\nUse CogniSwitch to build production ready applications that can consume, organize and retrieve knowledge flawlessly. Using the framework of your choice, in this case Llama-Index, CogniSwitch helps alleviate the stress of decision making when it comes to, choosing the right storage and retrieval formats. It also eradicates reliability issues and hallucinations when it comes to responses that are generated. Get started by interacting with your knowledge in just three simple steps\r\n\r\n## Type of Change\r\n- New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8466/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8466/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8465",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8465/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8465/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8465/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8465",
        "id": 1960551244,
        "node_id": "I_kwDOIWuq585026NM",
        "number": 8465,
        "title": "[Question]: How can I merge multiple documents generated from a PDF into one?(\u600e\u6837\u624d\u80fd\u5c06\u4e00\u7bc7pdf\u4ea7\u751f\u7684\u591a\u4e2adocument\u201c\u7f1d\u5408\u201d\u5230\u4e00\u8d77\uff1f)",
        "user": {
            "login": "sophia2020602",
            "id": 61531233,
            "node_id": "MDQ6VXNlcjYxNTMxMjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/61531233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sophia2020602",
            "html_url": "https://github.com/sophia2020602",
            "followers_url": "https://api.github.com/users/sophia2020602/followers",
            "following_url": "https://api.github.com/users/sophia2020602/following{/other_user}",
            "gists_url": "https://api.github.com/users/sophia2020602/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sophia2020602/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sophia2020602/subscriptions",
            "organizations_url": "https://api.github.com/users/sophia2020602/orgs",
            "repos_url": "https://api.github.com/users/sophia2020602/repos",
            "events_url": "https://api.github.com/users/sophia2020602/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sophia2020602/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-25T05:10:56Z",
        "updated_at": "2023-10-25T05:31:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\nI remember there was a function in llamaindex that could concatenate multiple documents generated from a PDF, but I can't find this function now. Can you please let me know, experts? Thank you!\r\n\u6211\u8bb0\u5f97llamaindex\u4e2d\u6709\u4e2afunction\uff0c\u80fd\u591f\u5c06\u4e00\u7bc7pdf\u4ea7\u751f\u7684\u591a\u4e2adocument\u62fc\u63a5\u5230\u4e00\u8d77\uff0c\u4f46\u662f\u73b0\u5728\u627e\u4e0d\u5230\u8fd9\u4e2afunction\uff0c\u8bf7\u5404\u4f4d\u5927\u4f6c\u544a\u77e5\u4e00\u4e0b\uff0c\u8c22\u8c22\uff01",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8465/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8465/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8463",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8463/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8463/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8463/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8463",
        "id": 1960079855,
        "node_id": "I_kwDOIWuq58501HHv",
        "number": 8463,
        "title": "[Bug]: Lack of an OpenAI API Key automatically downloads huggingface embeddings, making CI machines to run out of memory",
        "user": {
            "login": "mikeldking",
            "id": 5640648,
            "node_id": "MDQ6VXNlcjU2NDA2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5640648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeldking",
            "html_url": "https://github.com/mikeldking",
            "followers_url": "https://api.github.com/users/mikeldking/followers",
            "following_url": "https://api.github.com/users/mikeldking/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeldking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeldking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeldking/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeldking/orgs",
            "repos_url": "https://api.github.com/users/mikeldking/repos",
            "events_url": "https://api.github.com/users/mikeldking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeldking/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-24T21:09:34Z",
        "updated_at": "2023-11-11T18:49:12Z",
        "closed_at": "2023-11-11T18:49:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWe have a few unit tests that stub out openAI during CI that are used to test integrations with Llama_index. However a recent version bump introduced Huggingface embeddings that get downloaded when there is no openAI key\r\n\r\n```\r\n----------------------------- Captured stdout call -----------------------------\r\n******\r\nCould not load OpenAIEmbedding. Using HuggingFaceBgeEmbeddings with model_name=BAAI/bge-small-en. If you intended to use OpenAI, please check your OPENAI_API_KEY.\r\nOriginal error:\r\nNo API key found for OpenAI.\r\nPlease set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\nAPI keys can be found or created at https://platform.openai.com/account/api-keys\r\n\r\n******\r\n----------------------------- Captured stderr call -----------------------------\r\n\r\nDownloading (\u2026)lve/main/config.json:   0%|          | 0.00/684 [00:00<?, ?B/s]\r\nDownloading (\u2026)lve/main/config.json: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 684/684 [00:00<00:00, 111kB/s]\r\n\r\nDownloading model.safetensors:   0%|          | 0.00/133M [00:00<?, ?B/s]\r\nDownloading model.safetensors:   8%|\u258a         | 10.5M/133M [00:00<00:03, 31.3MB/s]\r\nDownloading model.safetensors:  16%|\u2588\u258c        | 21.0M/133M [00:00<00:03, 33.0MB/s]\r\nDownloading model.safetensors:  24%|\u2588\u2588\u258e       | 31.5M/133M [00:01<00:03, 30.6MB/s]\r\nDownloading model.safetensors:  31%|\u2588\u2588\u2588\u258f      | 41.9M/133M [00:01<00:02, 32.0MB/s]\r\nDownloading model.safetensors:  39%|\u2588\u2588\u2588\u2589      | 52.4M/133M [00:01<00:02, 30.1MB/s]\r\nDownloading model.safetensors:  47%|\u2588\u2588\u2588\u2588\u258b     | 62.9M/133M [00:02<00:02, 29.5MB/s]\r\nDownloading model.safetensors:  55%|\u2588\u2588\u2588\u2588\u2588\u258d    | 73.4M/133M [00:02<00:01, 30.1MB/s]\r\nDownloading model.safetensors:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 83.9M/133M [00:02<00:01, 31.8MB/s]\r\nDownloading model.safetensors:  71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 94.4M/133M [00:02<00:01, 33.6MB/s]\r\nDownloading model.safetensors:  79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 105M/133M [00:03<00:00, 31.6MB/s] \r\nDownloading model.safetensors:  86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b | [115](https://github.com/Arize-ai/phoenix/actions/runs/6632202572/job/18017368092#step:5:116)M/133M [00:03<00:00, 30.8MB/s]\r\nDownloading model.safetensors:  94%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d| [126](https://github.com/Arize-ai/phoenix/actions/runs/6632202572/job/18017368092#step:5:127)M/[133](https://github.com/Arize-ai/phoenix/actions/runs/6632202572/job/18017368092#step:5:134)M [00:04<00:00, 31.7MB/s]\r\nDownloading model.safetensors: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 133M/133M [00:04<00:00, 31.3MB/s]\r\nDownloading model.safetensors: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 133M/133M [00:04<00:00, 31.3MB/s]\r\n_________________ test_on_event_start_handler_fails_gracefully _________________\r\n```\r\n\r\nThis is too big to run on our CI machines and it requires stubbing out the API key which feels a bit of a dirty solution. Can this behavior be disabled somehow?\n\n### Version\n\n0.8.50\n\n### Steps to Reproduce\n\nWrite some pytorch unit tests with models mocked out.\r\n\r\nE.x.\r\n```python\r\ndef test_on_event_start_handler_fails_gracefully(\r\n    mock_handler_internals, mock_service_context: ServiceContext, caplog\r\n) -> None:\r\n    # callback handlers should *never* introduce errors in user code if they fail\r\n    question = \"What are the seven wonders of the world?\"\r\n    callback_handler = OpenInferenceTraceCallbackHandler(exporter=NoOpExporter())\r\n    index = ListIndex(nodes)\r\n    retriever = index.as_retriever(retriever_mode=\"default\")\r\n    response_synthesizer = get_response_synthesizer()\r\n\r\n    query_engine = RetrieverQueryEngine(\r\n        retriever=retriever,\r\n        response_synthesizer=response_synthesizer,\r\n        callback_manager=CallbackManager([callback_handler]),\r\n    )\r\n\r\n    mock_handler_internals.side_effect = CallbackError(\"callback exception\")\r\n    query_engine.query(question)\r\n\r\n    assert caplog.records[0].levelname == \"ERROR\"\r\n    assert \"on_event_start\" in caplog.records[0].message\r\n    assert \"CallbackError\" in caplog.records[0].message\r\n```\r\n\r\nThe CI machine (notably github runners) - will be OOMKilled with pytorch errors\n\n### Relevant Logs/Tracbacks\n\n```shell\nFAILED tests/trace/llama_index/test_callback.py::test_callback_llm - RuntimeError: MPS backend out of memory (MPS allocated: 0 bytes, other allocations: 0 bytes). Tried to allocate 0 bytes on private pool.\r\nFAILED tests/trace/llama_index/test_callback.py::test_on_event_start_handler_fails_gracefully - RuntimeError: MPS backend out of memory (MPS allocated: 0 bytes, other allocations: 0 bytes). Tried to allocate 0 bytes on private pool.\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8463/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8463/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8462",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8462/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8462/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8462/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8462",
        "id": 1960051180,
        "node_id": "I_kwDOIWuq58501AHs",
        "number": 8462,
        "title": "[Bug]: chat_history field is not a list of ChatMessage as listed in documentation",
        "user": {
            "login": "XariZaru",
            "id": 18338434,
            "node_id": "MDQ6VXNlcjE4MzM4NDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/18338434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XariZaru",
            "html_url": "https://github.com/XariZaru",
            "followers_url": "https://api.github.com/users/XariZaru/followers",
            "following_url": "https://api.github.com/users/XariZaru/following{/other_user}",
            "gists_url": "https://api.github.com/users/XariZaru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XariZaru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XariZaru/subscriptions",
            "organizations_url": "https://api.github.com/users/XariZaru/orgs",
            "repos_url": "https://api.github.com/users/XariZaru/repos",
            "events_url": "https://api.github.com/users/XariZaru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XariZaru/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T20:49:02Z",
        "updated_at": "2023-10-24T21:00:21Z",
        "closed_at": "2023-10-24T20:51:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nHi, \r\n\r\nI've been using the chat_history field for awhile and it's been working until recently. It's supposed to be a list of ChatMessages, but when I display the chat_history, it looks like a mixed list of strings and a ChatMessage object.\r\n\r\n```python\r\nmodel.chat_history\r\n\r\n[('Can I get this in bullet point form?',\r\n  \"Sure! Here's the information in bullet point form:\\n\\n- You requested the information to be presented in bullet point form.\\n- Bullet points are a concise way to list information.\\n- They are often used to highlight key points or to organize information.\\n- Bullet points are typically represented by small dots or symbols.\\n- They can be used in presentations, reports, or any other form of communication.\\n- Bullet points help to break down complex information into easily digestible chunks.\\n- They provide a clear and structured format for presenting information.\\n- Bullet points can be used to summarize information or to provide a quick overview.\\n- They are an effective way to present information in a visually appealing manner.\\n- Bullet points can be customized with different symbols, colors, or formatting options.\\n- They are a versatile tool that can be used in various contexts and for different purposes.\\n\\nI hope this helps! Let me know if you have any other questions.\"),\r\n ChatMessage(role=<MessageRole.USER: 'user'>, content='What is the minimum balance to earn APY for a regular share account at Kinecta?', additional_kwargs={})]\r\n```\r\n\r\nAm I misunderstanding this property? \n\n### Version\n\n0.8.46\n\n### Steps to Reproduce\n\nCreate a chat model and send some queries. Then check the chat_history object.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8462/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8462/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8461",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8461/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8461/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8461/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8461",
        "id": 1959957937,
        "node_id": "I_kwDOIWuq58500pWx",
        "number": 8461,
        "title": "[Documentation]: Mistyped word In Install documentation. (aronund -> around)",
        "user": {
            "login": "davidearlyoung",
            "id": 1407095,
            "node_id": "MDQ6VXNlcjE0MDcwOTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1407095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidearlyoung",
            "html_url": "https://github.com/davidearlyoung",
            "followers_url": "https://api.github.com/users/davidearlyoung/followers",
            "following_url": "https://api.github.com/users/davidearlyoung/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidearlyoung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidearlyoung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidearlyoung/subscriptions",
            "organizations_url": "https://api.github.com/users/davidearlyoung/orgs",
            "repos_url": "https://api.github.com/users/davidearlyoung/repos",
            "events_url": "https://api.github.com/users/davidearlyoung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidearlyoung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-24T19:41:50Z",
        "updated_at": "2023-11-07T16:27:38Z",
        "closed_at": "2023-11-07T16:27:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nThere is a mistyped word in your documentation. (LlamaIndex version 0.8.50, current stable branch as of time of creation of this issue.)\r\n\r\nIt can be found at: https://docs.llamaindex.ai/en/stable/getting_started/installation.html#local-environment-setup  (\"Local Environment Setup\" header at the bottom of the page.)  Second paragraph, last sentence of that second paragraph.\r\n\r\n\"This will use aronund 11.5GB of memory across the CPU and GPU.\" is the sentence in question. And \"aronund\" is the word that is mistyped. I'm assuming that the writer means \"around\" based off of the surrounding context.\r\n\r\nI'm not interested in taking time to make the adjustments myself. So please don't ask me to correct it my self using cloning and PR methods.\r\n\r\nI hope that this helps. Thanks for your time.\r\n\n\n### Documentation Link\n\nhttps://docs.llamaindex.ai/en/stable/getting_started/installation.html#local-environment-setup",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8461/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8461/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8460",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8460/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8460/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8460/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8460",
        "id": 1959910202,
        "node_id": "PR_kwDOIWuq585drN_S",
        "number": 8460,
        "title": "Do not use nest_asyncio as the main async runtime",
        "user": {
            "login": "ryanpeach",
            "id": 14838729,
            "node_id": "MDQ6VXNlcjE0ODM4NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14838729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanpeach",
            "html_url": "https://github.com/ryanpeach",
            "followers_url": "https://api.github.com/users/ryanpeach/followers",
            "following_url": "https://api.github.com/users/ryanpeach/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanpeach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanpeach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanpeach/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanpeach/orgs",
            "repos_url": "https://api.github.com/users/ryanpeach/repos",
            "events_url": "https://api.github.com/users/ryanpeach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanpeach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T19:11:27Z",
        "updated_at": "2023-11-07T21:26:27Z",
        "closed_at": "2023-11-06T16:25:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8460",
            "html_url": "https://github.com/run-llama/llama_index/pull/8460",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8460.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8460.patch",
            "merged_at": "2023-11-06T16:25:48Z"
        },
        "body": "# Description\r\n\r\nIt adds a dependency and doesn't work with all loop types, such as `uvicorn`\r\n\r\nFixes #8204\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Works in my codebase\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8460/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8460/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8459",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8459/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8459/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8459/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8459",
        "id": 1959795928,
        "node_id": "PR_kwDOIWuq585dq1YC",
        "number": 8459,
        "title": "8147 bug streaming on react chat agent not working as expected",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-24T18:05:17Z",
        "updated_at": "2023-10-25T15:54:24Z",
        "closed_at": "2023-10-25T15:12:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8459",
            "html_url": "https://github.com/run-llama/llama_index/pull/8459",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8459.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8459.patch",
            "merged_at": "2023-10-25T15:12:37Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nThe BUG:\r\n- The original intention of `ReActAgent.stream_chat` method is to only stream the final response; and not the entire ReAct outputs that encompass a Thought-Action-ActionInput-Observation-....-Answer pattern.\r\n- Ultimately, we had a BUG in our logic when monitoring the stream of the output in real-time to infer when the latest stream (of the current iteration) is part of the final reasoning step (i.e. has the Answer)\r\n    - The biggest culprit was when the Agent decides to not use the Thought-Action pattern (which we handle a bit in output_parser for extracting reasoning steps, but this part of code doesn't get hit until after we've accumulated a full response)\r\n    - The result was that it would get a Response, but we were not correctly stopping the ReAct evaluation, so it would go to the next step, and then sometimes (but not always) it would stop execution\r\n\r\nThe FIX:\r\n- Improved logic check for when a chunk stream is part of the final response and/or if the Agent decided to not use the Thought-Action pattern\r\n- A bit of manual Prompt Engineering:\r\n    - Added explicit instruction in the system prompt for ReAct to start with a Thought\r\n    - Added an end case where the Agent doesn't have the right context to answer the query (without this, the ReAct agent would loop over and over often)\r\n- When asserting if the latest chunk of the stream is part of the final reasoning step, we need to add it back to the chunk stream before giving it off to `StreamingAgentChatResponse`; otherwise the final response is missing the initial part of the answer (i.e., a typical chunk for the start of the final reasoning step looks like \"Answer: I\", so not putting this back in the stream doesn't capture the \"I\" part of the final response)\r\n- Added async of stream_chat\r\n    - Requires `aiostream` to merge the partial_response_chunk back to the async stream \r\n\r\nFixes [#8147](https://github.com/run-llama/llama_index/issues/8147)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] ~~Added new~~ Modified relevant unit/integration tests\r\n- [x] ~~Added new~~ Confirmed relevant notebooks still worked end-to-end (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n## MORE NOTES:\r\n- When stream_chat and `verbose=True` the final Response reasoning step will only output the beginning of the response\r\n- This is because once we identify that the incoming stream is now the final response reasoning step, we pass the stream off to `StreamingAgentChatResponse`.\r\n- To show this, the modification to the React verbose output indicates `Starts With` when in streaming mode:\r\n![image](https://github.com/run-llama/llama_index/assets/92402603/8981914b-bc6b-4f9b-981e-f24bef9cda71)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8459/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8459/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8458",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8458/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8458/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8458/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8458",
        "id": 1959476377,
        "node_id": "I_kwDOIWuq5850yzyZ",
        "number": 8458,
        "title": "[Question]: Clarity on managing document stored in Vector stores that store embeddings and text",
        "user": {
            "login": "OliverFarren",
            "id": 5064282,
            "node_id": "MDQ6VXNlcjUwNjQyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5064282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OliverFarren",
            "html_url": "https://github.com/OliverFarren",
            "followers_url": "https://api.github.com/users/OliverFarren/followers",
            "following_url": "https://api.github.com/users/OliverFarren/following{/other_user}",
            "gists_url": "https://api.github.com/users/OliverFarren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OliverFarren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OliverFarren/subscriptions",
            "organizations_url": "https://api.github.com/users/OliverFarren/orgs",
            "repos_url": "https://api.github.com/users/OliverFarren/repos",
            "events_url": "https://api.github.com/users/OliverFarren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OliverFarren/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-24T15:03:22Z",
        "updated_at": "2023-10-24T16:20:43Z",
        "closed_at": "2023-10-24T15:29:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello, we've recently moved from using the disk based SimpleVectorStore to using the PineconeVectorStore and with that change there are some aspects of our document management I am no longer clear how I should be managing.\r\n\r\nSpecifically around how I aught to go about deleting a specific document and or checking for it's existence. Let me go through a rough example.\r\n\r\nSuppose I had a 10 page pdf document called 'super-awesome.pdf' we'd first load into some documents:\r\n``` python\r\nfrom pathlib import Path\r\nfrom typing import Optional\r\nfrom llama_hub.file.pdf.base import PDFReader\r\nfrom llama_index import Document\r\n\r\ndef load_file_into_document_pdf(\r\n    file_path: Path, extra_info: Optional[dict] = None\r\n) -> list[Document]:\r\n    loader = PDFReader()\r\n    pdf: list[Document] = loader.load_data(file=file_path, extra_info=extra_info)\r\n    return pdf\r\n```\r\n\r\nThis would return an array of 10 Documents, each containing some metadata including the `page_label` and `file_name`. The doc_id is a randomly generated uuid4. \r\n\r\nWe then add each of these to the index like:\r\n``` python\r\nindex: VectorStoreIndex = get_index()\r\npdf = load_file_into_document_pdf(file_path)\r\nfor page in pdf:\r\n    index.insert(page)\r\n```\r\n\r\nWith the change to Pinecone my understanding is that we're not really using (or needing to use) the `docstore` or `index_store` and the `index.ref_doc_info` property is no longer implemented so i'm unsure what the standard way is of avoiding uploading the same document twice? Or subsequently deleting a document based on it's filename. \r\n\r\nI could manage this myself with a simple kv store, and store the doc-ids under a file-name key or something but it sort of feels like there should be a way within llama-index to do this. It seems I could also following an insert to the index, invoke:\r\n``` python\r\nnodes = index.service_context.node_parser.get_nodes_from_documents(\r\n    [page]\r\n)\r\nindex.docstore.add_document(nodes)\r\n```\r\n\r\nAnd then maybe the metadata gets stored? But then i'm also storing my nodes in my k-v store AND in my vector store, when really all I want is the metadata-id mapping. \r\n\r\nIs this something I could get clarity on?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8458/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8458/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8457",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8457/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8457/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8457/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8457",
        "id": 1959329187,
        "node_id": "I_kwDOIWuq5850yP2j",
        "number": 8457,
        "title": "[Question]: Storing StorageContext beforehand for a near real-time RAG pipeline?",
        "user": {
            "login": "utility-aagrawal",
            "id": 140737044,
            "node_id": "U_kgDOCGN6FA",
            "avatar_url": "https://avatars.githubusercontent.com/u/140737044?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/utility-aagrawal",
            "html_url": "https://github.com/utility-aagrawal",
            "followers_url": "https://api.github.com/users/utility-aagrawal/followers",
            "following_url": "https://api.github.com/users/utility-aagrawal/following{/other_user}",
            "gists_url": "https://api.github.com/users/utility-aagrawal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/utility-aagrawal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/utility-aagrawal/subscriptions",
            "organizations_url": "https://api.github.com/users/utility-aagrawal/orgs",
            "repos_url": "https://api.github.com/users/utility-aagrawal/repos",
            "events_url": "https://api.github.com/users/utility-aagrawal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/utility-aagrawal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-24T14:00:38Z",
        "updated_at": "2023-11-04T11:06:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi All,\r\n\r\nI am building a hybrid Q&A RAG pipeline (using semantic and keyword search) over a set of documents. Currently, it takes too long to answer a question. I want to store StorageContext in advance to improve processing time. Is that a good practice? What are some things I need to keep in mind for this purpose? Some other questions I have:\r\n\r\n1) I understand that StorageContext has 4 components: index_store, vector_store, graph_store, and docstore. For my use case, there's no graph_store. Where can I store the remaining 3 stores? Is it a best practice to store all of them in a vector database?\r\n\r\n2) I am using SimpleKeywordTableIndex for keyword search. Where can I store this index if I want to do it in advance? Can this also be stored in a vector database?\r\n\r\nI would really appreciate if you can point me to a documentation around this use case. Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8457/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8457/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8456",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8456/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8456/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8456/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8456",
        "id": 1959066988,
        "node_id": "I_kwDOIWuq5850xP1s",
        "number": 8456,
        "title": "[Question]: About the speed of the embeddings generation",
        "user": {
            "login": "terilias",
            "id": 37142366,
            "node_id": "MDQ6VXNlcjM3MTQyMzY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37142366?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terilias",
            "html_url": "https://github.com/terilias",
            "followers_url": "https://api.github.com/users/terilias/followers",
            "following_url": "https://api.github.com/users/terilias/following{/other_user}",
            "gists_url": "https://api.github.com/users/terilias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terilias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terilias/subscriptions",
            "organizations_url": "https://api.github.com/users/terilias/orgs",
            "repos_url": "https://api.github.com/users/terilias/repos",
            "events_url": "https://api.github.com/users/terilias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terilias/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-24T11:40:37Z",
        "updated_at": "2023-10-24T22:09:44Z",
        "closed_at": "2023-10-24T22:09:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [x] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello, \r\nI have a question regarding the embeddings generation process in LlamaIndex. If I use `from llama_index.embeddings import HuggingFaceEmbedding` instead of LangChain integration (`from llama_index import VectorStoreIndex, SimpleDirectoryReader, LangchainEmbedding`) the time needed for the embeddings generation is longer. I timed the process and I found that the LangChain integration needs 4 to 7 times shorter time to generate the embeddings using the same model (paraphrase-MiniLM-L6-v2). Do you know why this happens? How can I increase the speed of the LlamaIndex HuggingFaceEmbedding? I need it because I want to use as few libraries as possible. So I prefer to keep only LlamaIndex instead of both frameworks in my project's requirements.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8456/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8456/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8455",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8455/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8455/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8455/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8455",
        "id": 1959029972,
        "node_id": "I_kwDOIWuq5850xGzU",
        "number": 8455,
        "title": "[Bug]: sources or source_nodes not being set for chat responses of ContextRetrieverOpenAIAgent ",
        "user": {
            "login": "nictuku",
            "id": 202998,
            "node_id": "MDQ6VXNlcjIwMjk5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/202998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nictuku",
            "html_url": "https://github.com/nictuku",
            "followers_url": "https://api.github.com/users/nictuku/followers",
            "following_url": "https://api.github.com/users/nictuku/following{/other_user}",
            "gists_url": "https://api.github.com/users/nictuku/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nictuku/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nictuku/subscriptions",
            "organizations_url": "https://api.github.com/users/nictuku/orgs",
            "repos_url": "https://api.github.com/users/nictuku/repos",
            "events_url": "https://api.github.com/users/nictuku/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nictuku/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-24T11:18:42Z",
        "updated_at": "2023-10-31T17:19:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nIn adherence with the behaviour of other agents and chat engines, ContextRetrieverOpenAIAgent should ideally inform in its response which sources it has consulted - i.e: which documents were used in the context.\r\n\r\nAt the moment, this information is not being passed through. Details below.\n\n### Version\n\n0.8.49\n\n### Steps to Reproduce\n\n```bash\r\n$ echo 'hello world' > data/hello.txt\r\n```\r\n\r\n```python\r\nfrom llama_index.agent import OpenAIAgent, ReActAgent, ContextRetrieverOpenAIAgent\r\nfrom llama_index.indices.empty.retrievers import EmptyIndexRetriever\r\nfrom llama_index import SummaryIndex, SimpleDirectoryReader\r\n\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\nindex = SummaryIndex.from_documents(documents)\r\nretriever = EmptyIndexRetriever(index)\r\n\r\nquery_engine = index.as_query_engine()\r\nctx_agent = ContextRetrieverOpenAIAgent.from_tools_and_retriever(\r\n    verbose=False,\r\n    tools=[],\r\n    retriever=retriever)\r\n\r\n# compare this:\r\nresponse = query_engine.query(\"<question text>\")\r\nprint(\"query_engine response source nodes:\", response.source_nodes)\r\n\r\n# with this:\r\nresponse = ctx_agent.chat(\"a\")\r\nprint(\"context_retriever_openai_agent response source nodes:\", response.source_nodes)\r\nprint(\"context_retriever_openai_agent response sources:\", response.sources)\r\n```\r\n\r\nNote how the last two lines will not print sources while the query_engine.chat response does include them.\n\n### Relevant Logs/Tracbacks\n\n```shell\nquery_engine response source nodes: [NodeWithScore(node=TextNode(id_='8d5f6cab-8e5b-486d-9453-eb268c9fb73b', embedding=None, metadata={}, excluded_embed_metadata_keys=[], excluded_llm_metadata_keys=[], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='f1a5967e-2ec1-4c16-8f68-0f7a37bfec77', node_type=<ObjectType.DOCUMENT: '4'>, metadata={}, hash='c13128b72eeac1e98cfb0f42a2d6036c9bb28b2adb52fdf8eb5dc5b07578e15e')}, hash='351b5b79b4cf0d96b24050f568933500d93160ec03e5e996aa31c29cf2d2f654', text='hello world', start_char_idx=None, end_char_idx=None, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n'), score=None)]\r\n\r\ncontext_retriever_openai_agent response source nodes: []\r\ncontext_retriever_openai_agent response sources: []\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8455/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8455/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8454",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8454/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8454/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8454/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8454",
        "id": 1958855460,
        "node_id": "I_kwDOIWuq5850wcMk",
        "number": 8454,
        "title": "[Feature Request]: Change the return type of `BaseReader.load_data` from `list` to `Iterable`",
        "user": {
            "login": "david20571015",
            "id": 51911434,
            "node_id": "MDQ6VXNlcjUxOTExNDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david20571015",
            "html_url": "https://github.com/david20571015",
            "followers_url": "https://api.github.com/users/david20571015/followers",
            "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
            "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
            "organizations_url": "https://api.github.com/users/david20571015/orgs",
            "repos_url": "https://api.github.com/users/david20571015/repos",
            "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david20571015/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-24T09:26:42Z",
        "updated_at": "2023-10-27T10:21:21Z",
        "closed_at": "2023-10-27T10:21:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nThe proposal is to change the return type of the [`BaseReader.load_data`](https://github.com/run-llama/llama_index/blob/91649e1d7f0a97461ede59191e7da1413672c242/llama_index/readers/base.py#L14) method from `List[Document]` to `Iterable[Document]`.\r\n\r\nbefore:\r\n\r\n```python\r\ndef load_data(self) -> List[Document]:\r\n    documents = []\r\n    for file in files:\r\n        doc = read_file(file)\r\n        documents.append(doc)\r\n    return documents\r\n```\r\n\r\nafter:\r\n\r\n```python\r\ndef load_data(self) -> Iterable[Document]:\r\n    for file in files:\r\n        doc = read_file(file)\r\n        yield doc\r\n```\r\n\r\nThis change might be considered a *breaking change*.\r\n\r\nbefore:\r\n\r\n```python\r\ndocs = reader.load_data()\r\nprint(docs[0])\r\n```\r\n\r\nafter:\r\n\r\n```python\r\ndocs = list(reader.load_data())\r\nprint(docs[0])\r\n```\r\n\r\n\r\n### Reason\r\n\r\nThe current implementation of [`BaseReader.load_data`](https://github.com/run-llama/llama_index/blob/0c938097aa1415ad297dddc26fe2b616e2bb7f40/llama_index/readers/base.py#L14) returns `List[Document]`, which loads all data into memory at once, potentially causing memory exhaustion and `MemoryError`.\r\n\r\n### Value of Feature\r\n\r\nChanging the return type to `Iterable` and implementing lazy loading using a generator can significantly reduce memory usage.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8454/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8454/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8453",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8453/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8453/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8453/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8453",
        "id": 1958705919,
        "node_id": "PR_kwDOIWuq585dnJ8N",
        "number": 8453,
        "title": "[version] bump version to 0.8.50",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T07:53:14Z",
        "updated_at": "2023-10-24T16:26:15Z",
        "closed_at": "2023-10-24T16:26:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8453",
            "html_url": "https://github.com/run-llama/llama_index/pull/8453",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8453.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8453.patch",
            "merged_at": "2023-10-24T16:26:13Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8453/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8453/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8452",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8452/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8452/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8452/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8452",
        "id": 1958621486,
        "node_id": "I_kwDOIWuq5850vjEu",
        "number": 8452,
        "title": "[Question]: llama-index package connectivity issue in an offline environment",
        "user": {
            "login": "wilberlee",
            "id": 39259760,
            "node_id": "MDQ6VXNlcjM5MjU5NzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/39259760?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wilberlee",
            "html_url": "https://github.com/wilberlee",
            "followers_url": "https://api.github.com/users/wilberlee/followers",
            "following_url": "https://api.github.com/users/wilberlee/following{/other_user}",
            "gists_url": "https://api.github.com/users/wilberlee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wilberlee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wilberlee/subscriptions",
            "organizations_url": "https://api.github.com/users/wilberlee/orgs",
            "repos_url": "https://api.github.com/users/wilberlee/repos",
            "events_url": "https://api.github.com/users/wilberlee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wilberlee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Disiok",
                "id": 5567282,
                "node_id": "MDQ6VXNlcjU1NjcyODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Disiok",
                "html_url": "https://github.com/Disiok",
                "followers_url": "https://api.github.com/users/Disiok/followers",
                "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
                "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
                "organizations_url": "https://api.github.com/users/Disiok/orgs",
                "repos_url": "https://api.github.com/users/Disiok/repos",
                "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Disiok/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-24T06:48:21Z",
        "updated_at": "2023-10-24T10:44:47Z",
        "closed_at": "2023-10-24T10:44:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [x] I have searched both the documentation and discord for an answer.\n\n### Question\n\nAfter deploying the project in an intranet environment, when I tried to import llama_index for the first time, I encountered an error due to the lack of internet connectivity in the intranet environment.  Even with just one line of code: \"import llama_index,\" the same error occurs.\r\n\r\nI was able to reproduce this issue on a computer in an internet-connected environment as well. I first connected to the internet and installed llama-index, then disconnected from the network. When I attempted to import llama_index for the first time, I encountered the same error mentioned above. \r\nThe error message is as follows:\r\n`\r\nTraceback (most recent call last):\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/urllib3/connection.py\", line 174, in _new_conn\r\n    conn = connection.create_connection(\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/urllib3/util/connection.py\", line 72, in create_connection\r\n    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/socket.py\", line 918, in getaddrinfo\r\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\r\nsocket.gaierror: [Errno -2] Name or service not known\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 715, in urlopen\r\n    httplib_response = self._make_request(\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 404, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 1058, in _validate_conn\r\n    conn.connect()\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/urllib3/connection.py\", line 363, in connect\r\n    self.sock = conn = self._new_conn()\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/urllib3/connection.py\", line 186, in _new_conn\r\n    raise NewConnectionError(\r\nurllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x7fdb307d3640>: Failed to establish a new connection: [Errno -2] Name or service not known\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/requests/adapters.py\", line 486, in send\r\n    resp = conn.urlopen(\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 799, in urlopen\r\n    retries = retries.increment(\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/urllib3/util/retry.py\", line 592, in increment\r\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='openaipublic.blob.core.windows.net', port=443): Max retries exceeded with url: /gpt-2/encodings/main/vocab.bpe (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fdb307d3640>: Failed to establish a new connection: [Errno -2] Name or service not known'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/data/llm_group/code/Llama_index_for_kg/demo-kg-build-main/graph_rag_chatbot.py\", line 10, in <module>\r\n    from llama_index import PromptHelper\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/llama_index/__init__.py\", line 20, in <module>\r\n    from llama_index.indices.keyword_table import (\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/llama_index/indices/__init__.py\", line 4, in <module>\r\n    from llama_index.indices.keyword_table.base import (\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/llama_index/indices/keyword_table/__init__.py\", line 4, in <module>\r\n    from llama_index.indices.keyword_table.base import (\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/llama_index/indices/keyword_table/base.py\", line 17, in <module>\r\n    from llama_index.indices.base import BaseIndex\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/llama_index/indices/base.py\", line 6, in <module>\r\n    from llama_index.chat_engine.types import BaseChatEngine, ChatMode\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/llama_index/chat_engine/__init__.py\", line 1, in <module>\r\n    from llama_index.chat_engine.condense_question import CondenseQuestionChatEngine\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/llama_index/chat_engine/condense_question.py\", line 6, in <module>\r\n    from llama_index.chat_engine.types import (\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/llama_index/chat_engine/types.py\", line 11, in <module>\r\n    from llama_index.memory import BaseMemory\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/llama_index/memory/__init__.py\", line 1, in <module>\r\n    from llama_index.memory.chat_memory_buffer import ChatMemoryBuffer\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/llama_index/memory/chat_memory_buffer.py\", line 16, in <module>\r\n    class ChatMemoryBuffer(BaseMemory):\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/llama_index/memory/chat_memory_buffer.py\", line 22, in ChatMemoryBuffer\r\n    default_factory=cast(Callable[[], Any], GlobalsHelper().tokenizer),\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/llama_index/utils.py\", line 50, in tokenizer\r\n    enc = tiktoken.get_encoding(\"gpt2\")\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/tiktoken/registry.py\", line 73, in get_encoding\r\n    enc = Encoding(**constructor())\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/tiktoken_ext/openai_public.py\", line 11, in gpt2\r\n    mergeable_ranks = data_gym_to_mergeable_bpe_ranks(\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/tiktoken/load.py\", line 75, in data_gym_to_mergeable_bpe_ranks\r\n    vocab_bpe_contents = read_file_cached(vocab_bpe_file).decode()\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/tiktoken/load.py\", line 48, in read_file_cached\r\n    contents = read_file(blobpath)\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/tiktoken/load.py\", line 24, in read_file\r\n    resp = requests.get(blobpath)\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/requests/api.py\", line 73, in get\r\n    return request(\"get\", url, params=params, **kwargs)\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/requests/api.py\", line 59, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/requests/sessions.py\", line 589, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/requests/sessions.py\", line 703, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/opt/miniconda3/envs/graph_rag_1018/lib/python3.8/site-packages/requests/adapters.py\", line 519, in send\r\n    raise ConnectionError(e, request=request)\r\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='openaipublic.blob.core.windows.net', port=443): Max retries exceeded with url: /gpt-2/encodings/main/vocab.bpe (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fdb307d3640>: Failed to establish a new connection: [Errno -2] Name or service not known'))\r\n\r\nProcess finished with exit code 1\r\n`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8452/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8452/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8275",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8275/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8275/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8275/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8275",
        "id": 1958524238,
        "node_id": "PR_kwDOIWuq585dmjRO",
        "number": 8275,
        "title": "Expose prompts in different modules (query engines, synthesizers, and more) ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T04:58:33Z",
        "updated_at": "2023-10-24T07:51:47Z",
        "closed_at": "2023-10-24T07:51:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8275",
            "html_url": "https://github.com/run-llama/llama_index/pull/8275",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8275.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8275.patch",
            "merged_at": "2023-10-24T07:51:46Z"
        },
        "body": "# Description\r\n\r\nThis is the big PR version of #8234. Try adding prompt mixin for:\r\n- query engines\r\n- response synthesis\r\n- selectors\r\n- evaluators\r\n- retrievers\r\n- slight modifications on pydantic program ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8275/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8275/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8274",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8274/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8274/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8274/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8274",
        "id": 1958486846,
        "node_id": "PR_kwDOIWuq585dma0h",
        "number": 8274,
        "title": "Backdoor to defeat MPS backend",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-24T04:28:31Z",
        "updated_at": "2023-10-25T01:45:09Z",
        "closed_at": "2023-10-25T01:45:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8274",
            "html_url": "https://github.com/run-llama/llama_index/pull/8274",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8274.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8274.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPyTorch's MPS backend is a WIP: https://github.com/pytorch/pytorch/issues/77764\r\n\r\nThus, let's add a backdoor to use CPU backend over MPS for macOS\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8274/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8274/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8273",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8273/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8273/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8273/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8273",
        "id": 1958373838,
        "node_id": "PR_kwDOIWuq585dmB_A",
        "number": 8273,
        "title": "Update usage_documents.md",
        "user": {
            "login": "amartinson193",
            "id": 32916663,
            "node_id": "MDQ6VXNlcjMyOTE2NjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/32916663?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amartinson193",
            "html_url": "https://github.com/amartinson193",
            "followers_url": "https://api.github.com/users/amartinson193/followers",
            "following_url": "https://api.github.com/users/amartinson193/following{/other_user}",
            "gists_url": "https://api.github.com/users/amartinson193/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amartinson193/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amartinson193/subscriptions",
            "organizations_url": "https://api.github.com/users/amartinson193/orgs",
            "repos_url": "https://api.github.com/users/amartinson193/repos",
            "events_url": "https://api.github.com/users/amartinson193/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amartinson193/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-24T02:45:57Z",
        "updated_at": "2023-10-24T06:30:29Z",
        "closed_at": "2023-10-24T06:30:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8273",
            "html_url": "https://github.com/run-llama/llama_index/pull/8273",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8273.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8273.patch",
            "merged_at": "2023-10-24T06:30:28Z"
        },
        "body": "Fixed typo\r\n\r\n# Description\r\n\r\nJust a typo",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8273/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8273/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8272",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8272/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8272/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8272/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8272",
        "id": 1958345539,
        "node_id": "PR_kwDOIWuq585dl8JS",
        "number": 8272,
        "title": "`HuggingFaceInferenceAPI` example notebook",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T02:12:07Z",
        "updated_at": "2023-10-24T07:48:54Z",
        "closed_at": "2023-10-24T07:48:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8272",
            "html_url": "https://github.com/run-llama/llama_index/pull/8272",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8272.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8272.patch",
            "merged_at": "2023-10-24T07:48:53Z"
        },
        "body": "# Description\r\n\r\nDocuments some of the ways to use `HuggingFaceInferenceAPI` in a notebook\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8272/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8272/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8271",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8271/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8271/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8271/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8271",
        "id": 1958326014,
        "node_id": "PR_kwDOIWuq585dl35c",
        "number": 8271,
        "title": "Add Llava MultiModal QA examples for Tesla 10k RAG",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5870194078,
                "node_id": "LA_kwDOIWuq588AAAABXeQNng",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/retrieval",
                "name": "retrieval",
                "color": "471981",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-24T01:57:13Z",
        "updated_at": "2023-10-25T01:42:18Z",
        "closed_at": "2023-10-25T01:42:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8271",
            "html_url": "https://github.com/run-llama/llama_index/pull/8271",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8271.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8271.patch",
            "merged_at": "2023-10-25T01:42:17Z"
        },
        "body": "# Description\r\n\r\nTODO:\r\nWaiting for https://github.com/abetlen/llama-cpp-python supporting LlaVa model in python wrapper.\r\nSo LlamaIndex can leverage `LlamaCPP` class for serving LlaVa model directly.\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8271/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8271/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8270",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8270/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8270/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8270/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8270",
        "id": 1958286956,
        "node_id": "PR_kwDOIWuq585dlwOs",
        "number": 8270,
        "title": "Fix grammar error in concepts.md",
        "user": {
            "login": "josephrmartinez",
            "id": 13042856,
            "node_id": "MDQ6VXNlcjEzMDQyODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13042856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephrmartinez",
            "html_url": "https://github.com/josephrmartinez",
            "followers_url": "https://api.github.com/users/josephrmartinez/followers",
            "following_url": "https://api.github.com/users/josephrmartinez/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephrmartinez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephrmartinez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephrmartinez/subscriptions",
            "organizations_url": "https://api.github.com/users/josephrmartinez/orgs",
            "repos_url": "https://api.github.com/users/josephrmartinez/repos",
            "events_url": "https://api.github.com/users/josephrmartinez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephrmartinez/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-24T01:14:01Z",
        "updated_at": "2023-10-24T06:32:13Z",
        "closed_at": "2023-10-24T06:32:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8270",
            "html_url": "https://github.com/run-llama/llama_index/pull/8270",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8270.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8270.patch",
            "merged_at": "2023-10-24T06:32:13Z"
        },
        "body": "Small plural error fix.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8270/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8270/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8269",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8269/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8269/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8269/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8269",
        "id": 1958268801,
        "node_id": "I_kwDOIWuq5850uM-B",
        "number": 8269,
        "title": "[Question]: \u6211\u5e94\u8be5\u5982\u4f55\u8bfb\u53d6RedisDocumentStore\u5e76\u8f6c\u6362\u4e3anodes\uff1f",
        "user": {
            "login": "rzechen",
            "id": 24729413,
            "node_id": "MDQ6VXNlcjI0NzI5NDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24729413?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rzechen",
            "html_url": "https://github.com/rzechen",
            "followers_url": "https://api.github.com/users/rzechen/followers",
            "following_url": "https://api.github.com/users/rzechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/rzechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rzechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rzechen/subscriptions",
            "organizations_url": "https://api.github.com/users/rzechen/orgs",
            "repos_url": "https://api.github.com/users/rzechen/repos",
            "events_url": "https://api.github.com/users/rzechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rzechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-24T00:51:04Z",
        "updated_at": "2023-10-24T06:26:42Z",
        "closed_at": "2023-10-24T06:26:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n\u6211\u5df2\u7ecf\u901a\u8fc7add_document\u5c06\u6587\u6863\u5b58\u50a8\u5230redis\u4e2d\uff0c\u5982\u4f55\u5c06\u6587\u6863\u8bfb\u53d6\u51fa\u6765\uff1f\r\nconn = redis.Redis(host=redis_host, port=redis_port, db=redis_db, password=redis_password)\r\ndocstore = RedisDocumentStore.from_redis_client(redis_client=conn, namespace=\"llama_index2\")\r\nstorage_context = StorageContext.from_defaults(docstore=docs_store)\r\n\r\n\u4e3a\u4ec0\u4e48\u5df2\u7ecf\u8bfb\u53d6\u4e3astorage context\u4e86\uff0c\u8fd8\u9700\u8981\u4f20\u5165nodes\uff0c\u6216\u8005\u5982\u4f55\u5c06docstore\u8f6c\u6362\u4e3anodes\u5462\uff1f\r\nsummary_index = SummaryIndex(nodes, storage_context=storage_context)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8269/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8269/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8268",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8268/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8268/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8268/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8268",
        "id": 1958228194,
        "node_id": "I_kwDOIWuq5850uDDi",
        "number": 8268,
        "title": "The RAG return inappropriate (general) content",
        "user": {
            "login": "snassimr",
            "id": 6830626,
            "node_id": "MDQ6VXNlcjY4MzA2MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6830626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snassimr",
            "html_url": "https://github.com/snassimr",
            "followers_url": "https://api.github.com/users/snassimr/followers",
            "following_url": "https://api.github.com/users/snassimr/following{/other_user}",
            "gists_url": "https://api.github.com/users/snassimr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snassimr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snassimr/subscriptions",
            "organizations_url": "https://api.github.com/users/snassimr/orgs",
            "repos_url": "https://api.github.com/users/snassimr/repos",
            "events_url": "https://api.github.com/users/snassimr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snassimr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T23:59:36Z",
        "updated_at": "2023-10-24T06:32:31Z",
        "closed_at": "2023-10-24T06:32:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi, \r\n\r\nI have 9 pdf files and want the RAG answers only question regarding one or seberal PDFs that in collection.\r\nSuprisingly , I am getting some answer to question \"How to prepare pizza ?\" however my collection of pdfs nothing to do with pizza. And it's not clear why response's score is above 0.7 . How I can rely on it ?\r\n\r\nWhat the way block such answers that not grounded in one or several PDFs and provide some general answer that PDFs don't contain relevant information ?\r\n\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8268/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8268/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8267",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8267/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8267/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8267/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8267",
        "id": 1958189474,
        "node_id": "PR_kwDOIWuq585dlbpU",
        "number": 8267,
        "title": "Brought back `toml-sort` to `pre-commit`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-23T23:22:31Z",
        "updated_at": "2023-10-25T01:06:12Z",
        "closed_at": "2023-10-25T01:06:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8267",
            "html_url": "https://github.com/run-llama/llama_index/pull/8267",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8267.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8267.patch",
            "merged_at": "2023-10-25T01:06:11Z"
        },
        "body": "# Description\r\n\r\nhttps://github.com/run-llama/llama_index/pull/8236 removed `toml-sort` from `pre-commit` because it was making undesired changes.  It seems the undesired changes were:\r\n- Sorting `tool.poetry.dependencies` in `pyproject.toml`\r\n- Sorting `poetry.lock`\r\n\r\nThis PR blocks those two areas, and brings `toml-sort` back.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8267/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8267/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8266",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8266/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8266/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8266/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8266",
        "id": 1958170050,
        "node_id": "I_kwDOIWuq5850t03C",
        "number": 8266,
        "title": "Getting metadata after getting response ",
        "user": {
            "login": "snassimr",
            "id": 6830626,
            "node_id": "MDQ6VXNlcjY4MzA2MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6830626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snassimr",
            "html_url": "https://github.com/snassimr",
            "followers_url": "https://api.github.com/users/snassimr/followers",
            "following_url": "https://api.github.com/users/snassimr/following{/other_user}",
            "gists_url": "https://api.github.com/users/snassimr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snassimr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snassimr/subscriptions",
            "organizations_url": "https://api.github.com/users/snassimr/orgs",
            "repos_url": "https://api.github.com/users/snassimr/repos",
            "events_url": "https://api.github.com/users/snassimr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snassimr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T23:02:48Z",
        "updated_at": "2023-10-23T23:51:20Z",
        "closed_at": "2023-10-23T23:51:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am trying to retrieve TextNode after I get the response from RecursiveRetriever this way : \r\n\r\ntext_nodes = dict()\r\n\r\nfor file in documents:\r\n    file_text_nodes = node_parser.get_nodes_from_documents(documents = documents[file])\r\n    text_nodes[file] = file_text_nodes\r\n\r\ntarget_id = response.source_nodes[0].node.id_\r\nfor k,v in text_nodes.items():\r\n    file = k\r\n    response_in_text_nodes = [obj for obj in v if obj.id_ == target_id]\r\n    if len(response_in_text_nodes) > 0:\r\n        print(file)\r\n\r\nI dont get any TextNode during the check : len(response_in_text_nodes) > 0\r\n\r\nI want to retrieve all relevant passages and their document ids and files.\r\n\r\nAny help ?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8266/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8266/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8265",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8265/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8265/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8265/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8265",
        "id": 1958137981,
        "node_id": "PR_kwDOIWuq585dlQP8",
        "number": 8265,
        "title": "Update fusion_retriever.ipynb",
        "user": {
            "login": "theptrk",
            "id": 5618025,
            "node_id": "MDQ6VXNlcjU2MTgwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5618025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theptrk",
            "html_url": "https://github.com/theptrk",
            "followers_url": "https://api.github.com/users/theptrk/followers",
            "following_url": "https://api.github.com/users/theptrk/following{/other_user}",
            "gists_url": "https://api.github.com/users/theptrk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/theptrk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/theptrk/subscriptions",
            "organizations_url": "https://api.github.com/users/theptrk/orgs",
            "repos_url": "https://api.github.com/users/theptrk/repos",
            "events_url": "https://api.github.com/users/theptrk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/theptrk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T22:40:07Z",
        "updated_at": "2023-10-24T06:32:52Z",
        "closed_at": "2023-10-24T06:32:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8265",
            "html_url": "https://github.com/run-llama/llama_index/pull/8265",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8265.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8265.patch",
            "merged_at": "2023-10-24T06:32:52Z"
        },
        "body": "results is undefined in this function\r\n\r\n# Description\r\n\r\nChange `results` to `results_dict`\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8265/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8265/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8264",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8264/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8264/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8264/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8264",
        "id": 1958096589,
        "node_id": "I_kwDOIWuq5850ti7N",
        "number": 8264,
        "title": "[Bug]: not skipping `test_s3_kvstore` in CI",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Disiok",
                "id": 5567282,
                "node_id": "MDQ6VXNlcjU1NjcyODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Disiok",
                "html_url": "https://github.com/Disiok",
                "followers_url": "https://api.github.com/users/Disiok/followers",
                "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
                "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
                "organizations_url": "https://api.github.com/users/Disiok/orgs",
                "repos_url": "https://api.github.com/users/Disiok/repos",
                "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Disiok/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T22:04:57Z",
        "updated_at": "2023-10-24T07:08:22Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nhttps://github.com/run-llama/llama_index/issues/8242 could exist because it's currently entirely skipped in CI.\r\n\r\nCan we make it such that it's not skipped in CI?\n\n### Version\n\n0.8.48\n\n### Steps to Reproduce\n\nhttps://github.com/run-llama/llama_index/actions/runs/6619499991/job/17980163809?pr=8263\r\n\r\nSee \"Run testing\" section\n\n### Relevant Logs/Tracbacks\n\n```shell\ntests/storage/kvstore/test_s3_kvstore.py ssssss                          [ 75%]\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8264/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8264/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8263",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8263/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8263/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8263/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8263",
        "id": 1958092196,
        "node_id": "PR_kwDOIWuq585dlGgV",
        "number": 8263,
        "title": "Added `LocationConstraint` for local `test_s3_kvstore`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-23T22:01:01Z",
        "updated_at": "2023-10-25T01:15:56Z",
        "closed_at": "2023-10-25T01:15:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8263",
            "html_url": "https://github.com/run-llama/llama_index/pull/8263",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8263.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8263.patch",
            "merged_at": "2023-10-25T01:15:55Z"
        },
        "body": "# Description\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/8242\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8263/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8263/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8262",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8262/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8262/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8262/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8262",
        "id": 1958081196,
        "node_id": "I_kwDOIWuq5850tfKs",
        "number": 8262,
        "title": "[Feature Request]: adding `blacken-docs` to `pre-commit`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6129428377,
                "node_id": "LA_kwDOIWuq588AAAABbVenmQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/request%20contribution%20board",
                "name": "request contribution board",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-10-23T21:51:13Z",
        "updated_at": "2023-11-05T20:44:37Z",
        "closed_at": "2023-11-05T20:44:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nAdding this to `pre-commit` will blacken Python snippets in many `.md` files:\r\n\r\n```yaml\r\n  - repo: https://github.com/adamchainz/blacken-docs\r\n    rev: 1.16.0\r\n    hooks:\r\n      - id: blacken-docs\r\n        args: [--line-length=79]\r\n        types_or: [rst, markdown, tex]\r\n        additional_dependencies: [black]\r\n```\r\n\r\nHowever, there are some parsing errors that stop its `.pre-commit` integration.  Is anyone willing to work through the parsing errors so we can add this to `pre-commit`?\n\n### Reason\n\nIt will lead to blackened code snippets in `.md` files\n\n### Value of Feature\n\n`black`ened code increases readability and standardization",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8262/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8262/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8261",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8261/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8261/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8261/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8261",
        "id": 1958075607,
        "node_id": "PR_kwDOIWuq585dlC8A",
        "number": 8261,
        "title": "[version] bump version to 0.8.49",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-23T21:46:23Z",
        "updated_at": "2023-10-23T22:27:58Z",
        "closed_at": "2023-10-23T22:27:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8261",
            "html_url": "https://github.com/run-llama/llama_index/pull/8261",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8261.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8261.patch",
            "merged_at": "2023-10-23T22:27:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8261/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8261/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8260",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8260/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8260/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8260/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8260",
        "id": 1958072904,
        "node_id": "PR_kwDOIWuq585dlCWX",
        "number": 8260,
        "title": "Add jupyter lab as dev dependency",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-23T21:44:01Z",
        "updated_at": "2023-10-23T21:58:17Z",
        "closed_at": "2023-10-23T21:58:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8260",
            "html_url": "https://github.com/run-llama/llama_index/pull/8260",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8260.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8260.patch",
            "merged_at": "2023-10-23T21:58:16Z"
        },
        "body": "# Description\r\nAdd jupyter lab as dev dependency",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8260/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8260/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8259",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8259/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8259/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8259/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8259",
        "id": 1958056377,
        "node_id": "PR_kwDOIWuq585dk-yP",
        "number": 8259,
        "title": "Fix bug in `ContextRetrieverOpenAIAgent` ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-23T21:30:26Z",
        "updated_at": "2023-10-23T21:46:29Z",
        "closed_at": "2023-10-23T21:46:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8259",
            "html_url": "https://github.com/run-llama/llama_index/pull/8259",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8259.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8259.patch",
            "merged_at": "2023-10-23T21:46:28Z"
        },
        "body": "### Summary\r\nAdd missing method ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8259/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8259/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8258",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8258/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8258/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8258/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8258",
        "id": 1957972388,
        "node_id": "I_kwDOIWuq5850tEmk",
        "number": 8258,
        "title": "[Question]: error with service context - did occur a few days ago ",
        "user": {
            "login": "zzadiues",
            "id": 64059206,
            "node_id": "MDQ6VXNlcjY0MDU5MjA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64059206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zzadiues",
            "html_url": "https://github.com/zzadiues",
            "followers_url": "https://api.github.com/users/zzadiues/followers",
            "following_url": "https://api.github.com/users/zzadiues/following{/other_user}",
            "gists_url": "https://api.github.com/users/zzadiues/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zzadiues/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zzadiues/subscriptions",
            "organizations_url": "https://api.github.com/users/zzadiues/orgs",
            "repos_url": "https://api.github.com/users/zzadiues/repos",
            "events_url": "https://api.github.com/users/zzadiues/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zzadiues/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-23T20:29:33Z",
        "updated_at": "2023-10-24T06:32:29Z",
        "closed_at": "2023-10-24T06:32:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI loaded a GGUF LLM \r\n\r\nllm = LlamaCPP(\r\n    model_url=\"https://huggingface.co/TheBloke/Llama-2-13B-chat-GGUF/resolve/main/llama-2-13b-chat.Q5_K_M.gguf\",\r\n    #model_url=\"https://huggingface.co/TheBloke/Llama-2-13B-chat-GGUF/resolve/main/llama-2-13b-chat.Q5_K_M.gguf\",\r\n    # optionally, you can set the path to a pre-downloaded model instead of model_url\r\n    model_path=None,\r\n    \r\n    temperature=0.0,\r\n    max_new_tokens=1024,\r\n    \r\n    # llama2 has a context window of 4096 tokens, but we set it lower to allow for some wiggle room\r\n    context_window=3900,  # note, this sets n_ctx in the model_kwargs below, so you don't need to pass it there.\r\n    \r\n    # kwargs to pass to __call__()\r\n    generate_kwargs={},\r\n    \r\n    # kwargs to pass to __init__()\r\n    # set to at least 1 to use GPU\r\n    model_kwargs={\"n_gpu_layers\": 4}, # I need to play with this and see if it actually helps\r\n    \r\n    # transform inputs into Llama2 format\r\n    messages_to_prompt=messages_to_prompt,\r\n    completion_to_prompt=completion_to_prompt,\r\n    verbose=True,\r\n)\r\n\r\ndefining the service context \r\n\r\nservice_context = ServiceContext.from_defaults(chunk_size=100, llm=llm,embed_model=\"local\",\r\n                                               callback_manager=callback_manager)\r\n\r\nthrew an error like \r\n\r\nAttributeError                            Traceback (most recent call last)\r\nCell In[10], line 2\r\n      1 #service_context = ServiceContext.from_defaults(chunk_size=128, llm=llm)\r\n----> 2 service_context = ServiceContext.from_defaults(chunk_size=100, llm=llm,embed_model=\"local\",\r\n      3                                                callback_manager=callback_manager)\r\n\r\nFile ~/anaconda3/envs/llmproj/lib/python3.10/site-packages/llama_index/indices/service_context.py:167, in ServiceContext.from_defaults(cls, llm_predictor, llm, prompt_helper, embed_model, node_parser, llama_logger, callback_manager, system_prompt, query_wrapper_prompt, chunk_size, chunk_overlap, context_window, num_output, chunk_size_limit)\r\n    163 embed_model = resolve_embed_model(embed_model)\r\n    164 embed_model.callback_manager = callback_manager\r\n    166 prompt_helper = prompt_helper or _get_default_prompt_helper(\r\n--> 167     llm_metadata=llm_predictor.metadata,\r\n    168     context_window=context_window,\r\n    169     num_output=num_output,\r\n    170 )\r\n    172 node_parser = node_parser or _get_default_node_parser(\r\n    173     chunk_size=chunk_size,\r\n    174     chunk_overlap=chunk_overlap,\r\n    175     callback_manager=callback_manager,\r\n    176 )\r\n    178 llama_logger = llama_logger or LlamaLogger()\r\n\r\nFile ~/anaconda3/envs/llmproj/lib/python3.10/site-packages/llama_index/llm_predictor/base.py:115, in LLMPredictor.metadata(self)\r\n    112 @property\r\n    113 def metadata(self) -> LLMMetadata:\r\n    114     \"\"\"Get LLM metadata.\"\"\"\r\n--> 115     return self._llm.metadata\r\n\r\nFile ~/anaconda3/envs/llmproj/lib/python3.10/site-packages/llama_index/llms/llama_cpp.py:154, in LlamaCPP.metadata(self)\r\n    150 @property\r\n    151 def metadata(self) -> LLMMetadata:\r\n    152     \"\"\"LLM metadata.\"\"\"\r\n    153     return LLMMetadata(\r\n--> 154         context_window=self._model.context_params.n_ctx,\r\n    155         num_output=self.max_new_tokens,\r\n    156         model_name=self.model_path,\r\n    157     )\r\n\r\nAttributeError: 'Llama' object has no attribute 'context_params'\r\n                                               \r\n                                              ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8258/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8257",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8257/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8257/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8257/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8257",
        "id": 1957842774,
        "node_id": "PR_kwDOIWuq585dkQO8",
        "number": 8257,
        "title": "Update flat_metadata to False in PineconeVectorStore",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T19:05:20Z",
        "updated_at": "2023-10-23T21:58:40Z",
        "closed_at": "2023-10-23T21:58:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8257",
            "html_url": "https://github.com/run-llama/llama_index/pull/8257",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8257.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8257.patch",
            "merged_at": "2023-10-23T21:58:37Z"
        },
        "body": "# Description\r\n\r\nUpdated default value of flat_metadata = False so that support for metadata to an array of values works without causing any error. It is done only in PineconeVectorStore.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8257/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8257/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8256",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8256/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8256/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8256/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8256",
        "id": 1957788804,
        "node_id": "I_kwDOIWuq5850sXyE",
        "number": 8256,
        "title": "[Bug]: Can't instantiate abstract class ContextRetrieverOpenAIAgent with abstract method get_tools ",
        "user": {
            "login": "yvesjunqueira",
            "id": 113640369,
            "node_id": "U_kgDOBsYDsQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/113640369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yvesjunqueira",
            "html_url": "https://github.com/yvesjunqueira",
            "followers_url": "https://api.github.com/users/yvesjunqueira/followers",
            "following_url": "https://api.github.com/users/yvesjunqueira/following{/other_user}",
            "gists_url": "https://api.github.com/users/yvesjunqueira/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yvesjunqueira/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yvesjunqueira/subscriptions",
            "organizations_url": "https://api.github.com/users/yvesjunqueira/orgs",
            "repos_url": "https://api.github.com/users/yvesjunqueira/repos",
            "events_url": "https://api.github.com/users/yvesjunqueira/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yvesjunqueira/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Disiok",
                "id": 5567282,
                "node_id": "MDQ6VXNlcjU1NjcyODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Disiok",
                "html_url": "https://github.com/Disiok",
                "followers_url": "https://api.github.com/users/Disiok/followers",
                "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
                "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
                "organizations_url": "https://api.github.com/users/Disiok/orgs",
                "repos_url": "https://api.github.com/users/Disiok/repos",
                "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Disiok/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T18:41:45Z",
        "updated_at": "2023-10-23T21:46:29Z",
        "closed_at": "2023-10-23T21:46:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nHi there. This code works on 0.8.43 but it doesn't work on 0.8.44 and onwards, including 0.8.49.\r\n\r\n```\r\n        ctx_agent = ContextRetrieverOpenAIAgent.from_tools_and_retriever(\r\n                    tools=[date_tool],\r\n                    retriever=idx.as_retriever(similarity_top_k=2),\r\n                    llm=llm,\r\n                    max_function_calls=2,\r\n                    system_prompt=CHAT_ENGINE_PROMPT,\r\n                    verbose=True,\r\n        )           \r\n        return ctx_agent\r\n```\r\n\r\nThe error I get on 0.8.44 and newer versions is:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"app.py\", line 1011, in <module>\r\n    chat_engine = new_chat_engine(query_engine, query_index.index)\r\n  File \"app.py\", line 976, in new_chat_engine\r\n    ctx_agent = ContextRetrieverOpenAIAgent.from_tools_and_retriever(\r\n  File \"/Users/yves/opt/anaconda3/envs/gpt/lib/python3.10/site-packages/llama_index/agent/context_retriever_agent.py\", line 137, in from_tools_and_retriever\r\n    return cls(\r\nTypeError: Can't instantiate abstract class ContextRetrieverOpenAIAgent with abstract method get_tools\r\n```\r\n\r\nI'm trying to use newer versions of llama index because I presume from PRs here and there that the retrieval sources are now being populated in ContextRetrieverOpenAIAgent.\r\n\r\n\r\n\r\n### Version\r\n\r\n0.8.44\r\n\r\n### Steps to Reproduce\r\n\r\nthis is a self-contained example that works on 0.8.43 and doesn't work on later versions:\r\n\r\n```\r\nfrom llama_index.agent import OpenAIAgent, ReActAgent, ContextRetrieverOpenAIAgent\r\nfrom llama_index.indices.empty.retrievers import EmptyIndexRetriever\r\nfrom llama_index.indices.empty.base import EmptyIndex\r\n\r\nidx = EmptyIndex()\r\nretriever = EmptyIndexRetriever(idx)\r\n\r\nctx_agent = ContextRetrieverOpenAIAgent.from_tools_and_retriever(\r\n    verbose=True,\r\n    tools=[],\r\n    retriever=retriever)\r\n\r\nctx_agent.chat(\"a\")\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n# 0.8.43\r\n$ python a.py \r\nContext information is below.\r\n---------------------\r\n\r\n---------------------\r\nGiven the context information and not prior knowledge, either pick the corresponding tool or answer the function: a\r\n\r\n\r\n# 0.8.44+\r\n$ python a.py \r\nTraceback (most recent call last):\r\n  File \"a.py\", line 8, in <module>\r\n    ctx_agent = ContextRetrieverOpenAIAgent.from_tools_and_retriever(\r\n  File \"/Users/yves/opt/anaconda3/envs/gpt/lib/python3.10/site-packages/llama_index/agent/context_retriever_agent.py\", line 137, in from_tools_and_retriever\r\n    return cls(\r\nTypeError: Can't instantiate abstract class ContextRetrieverOpenAIAgent with abstract method get_tools\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8256/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8256/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8255",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8255/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8255/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8255/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8255",
        "id": 1957569580,
        "node_id": "PR_kwDOIWuq585djUqo",
        "number": 8255,
        "title": "Adapt Cassandra VectorStore constructor DB connection through cassio.init",
        "user": {
            "login": "hemidactylus",
            "id": 14221764,
            "node_id": "MDQ6VXNlcjE0MjIxNzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/14221764?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemidactylus",
            "html_url": "https://github.com/hemidactylus",
            "followers_url": "https://api.github.com/users/hemidactylus/followers",
            "following_url": "https://api.github.com/users/hemidactylus/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemidactylus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemidactylus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemidactylus/subscriptions",
            "organizations_url": "https://api.github.com/users/hemidactylus/orgs",
            "repos_url": "https://api.github.com/users/hemidactylus/repos",
            "events_url": "https://api.github.com/users/hemidactylus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemidactylus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Disiok",
                "id": 5567282,
                "node_id": "MDQ6VXNlcjU1NjcyODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Disiok",
                "html_url": "https://github.com/Disiok",
                "followers_url": "https://api.github.com/users/Disiok/followers",
                "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
                "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
                "organizations_url": "https://api.github.com/users/Disiok/orgs",
                "repos_url": "https://api.github.com/users/Disiok/repos",
                "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Disiok/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-23T16:37:32Z",
        "updated_at": "2023-11-08T23:14:14Z",
        "closed_at": "2023-10-26T07:32:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8255",
            "html_url": "https://github.com/run-llama/llama_index/pull/8255",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8255.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8255.patch",
            "merged_at": "2023-10-26T07:32:28Z"
        },
        "body": "# Description\r\n\r\nThe `cassio` library underlying the Cassandra Vector Store integration has gained a global `cassio.init(...)` method that sets a globally-available database connection. This way, for all subsequently created CassIO table abstractions (such as the one behind LlamaIndex's `CassandraVectorStore`, the connection parameters `session` and `keyspace` can be left out entirely, in that case falling back to the global values.\r\n\r\nThis PR adapts LlamaIndex' class signature to this usage, essentially making the `session` and `keyspace` parameters of `CassandraVectorStore` optional as well.\r\n\r\n### A slightly breaking change in the `__init__`\r\n\r\nI am aware that this introduces a slight breaking change, limited to former instantiations being done passing _positional_ arguments. That is, keyword-based existing code does not suffer any disturbance, but the (IMO almost nonexistent) positionally-specified constructions such as this one would raise an error with this PR:\r\n\r\n```\r\nmy_v_store = CassandraVectorStore(\r\n  my_session,\r\n  my_keyspace,\r\n  table=\"my_table_name\",\r\n  ...\r\n)\r\n```\r\n\r\nWhile I think that enabling use of the `cassio.init(...)` handy method, on the long run, vastly overweighs the discomfort of having to revise usages like the above, I took care of:\r\n- rephrasing the docstring for the `__init__` method to make it as clear as possible how the code should be changed to work again;\r\n- enforcing, with the `*` special argument, a keyword-only syntax from now on for the `__init__`. This well matches the keyword-based examples that we provide everywhere and would prevent future similar trouble, and incidentally results in an error message from the occasional legacy positional-based usage that points to the actual proper cause of the error.\r\n\r\nI would be happy to discuss the motivation behind this choice in more detail! Thank you for a review!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8255/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8255/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8254",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8254/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8254/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8254/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8254",
        "id": 1957442629,
        "node_id": "PR_kwDOIWuq585di5Hm",
        "number": 8254,
        "title": "Update the correctness evaluator's default prompt",
        "user": {
            "login": "bhavishpahwa",
            "id": 108733252,
            "node_id": "U_kgDOBnsjRA",
            "avatar_url": "https://avatars.githubusercontent.com/u/108733252?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhavishpahwa",
            "html_url": "https://github.com/bhavishpahwa",
            "followers_url": "https://api.github.com/users/bhavishpahwa/followers",
            "following_url": "https://api.github.com/users/bhavishpahwa/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhavishpahwa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhavishpahwa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhavishpahwa/subscriptions",
            "organizations_url": "https://api.github.com/users/bhavishpahwa/orgs",
            "repos_url": "https://api.github.com/users/bhavishpahwa/repos",
            "events_url": "https://api.github.com/users/bhavishpahwa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhavishpahwa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T15:28:04Z",
        "updated_at": "2023-10-25T18:13:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8254",
            "html_url": "https://github.com/run-llama/llama_index/pull/8254",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8254.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8254.patch",
            "merged_at": null
        },
        "body": "# Description\r\nUpdates the Correctness Evaluator module's default prompt to bring more concise and detailed rules which more strongly penalizes hallucinations and discrepancies in entities and concepts between generated answer and the reference answer.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n- [x] Updated an evaluation metric to make it more robust\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n- [x] Updated the older notebook and dev tested with respect to the new changes \r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8254/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8254/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8253",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8253/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8253/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8253/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8253",
        "id": 1957236222,
        "node_id": "I_kwDOIWuq5850qQ3-",
        "number": 8253,
        "title": "llama_index , SimpleDirectoryReader , chunk size and overlap",
        "user": {
            "login": "snassimr",
            "id": 6830626,
            "node_id": "MDQ6VXNlcjY4MzA2MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6830626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snassimr",
            "html_url": "https://github.com/snassimr",
            "followers_url": "https://api.github.com/users/snassimr/followers",
            "following_url": "https://api.github.com/users/snassimr/following{/other_user}",
            "gists_url": "https://api.github.com/users/snassimr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snassimr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snassimr/subscriptions",
            "organizations_url": "https://api.github.com/users/snassimr/orgs",
            "repos_url": "https://api.github.com/users/snassimr/repos",
            "events_url": "https://api.github.com/users/snassimr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snassimr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Disiok",
                "id": 5567282,
                "node_id": "MDQ6VXNlcjU1NjcyODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Disiok",
                "html_url": "https://github.com/Disiok",
                "followers_url": "https://api.github.com/users/Disiok/followers",
                "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
                "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
                "organizations_url": "https://api.github.com/users/Disiok/orgs",
                "repos_url": "https://api.github.com/users/Disiok/repos",
                "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Disiok/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T13:54:26Z",
        "updated_at": "2023-10-23T17:55:36Z",
        "closed_at": "2023-10-23T17:55:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi ,\r\n\r\nI wonder why SimpleDirectoryReader doesn't have chunk size and overlap parameters similar to LangChain ?\r\nIf any optimization is performed during parsing file to Documents ?\r\nIf any has experience to combine Langchain's SimpleDirectoryReader and llama_index's documents handling ?\r\n\r\nThanks,\r\nNissim",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8253/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8253/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8252",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8252/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8252/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8252/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8252",
        "id": 1957124455,
        "node_id": "I_kwDOIWuq5850p1ln",
        "number": 8252,
        "title": "[Bug]: self.ctx is not None:",
        "user": {
            "login": "Lowpower",
            "id": 3133734,
            "node_id": "MDQ6VXNlcjMxMzM3MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3133734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lowpower",
            "html_url": "https://github.com/Lowpower",
            "followers_url": "https://api.github.com/users/Lowpower/followers",
            "following_url": "https://api.github.com/users/Lowpower/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lowpower/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lowpower/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lowpower/subscriptions",
            "organizations_url": "https://api.github.com/users/Lowpower/orgs",
            "repos_url": "https://api.github.com/users/Lowpower/repos",
            "events_url": "https://api.github.com/users/Lowpower/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lowpower/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T13:06:57Z",
        "updated_at": "2023-10-23T13:18:32Z",
        "closed_at": "2023-10-23T13:18:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nerror loading model: unknown (magic, version) combination: 46554747, 00000002; is this really a GGML file?\r\nllama_load_model_from_file: failed to load model\r\nTraceback (most recent call last):\r\n  File \"/Users/shengzhiqiang/dev/LLM/new-chat-flow-created-at-2023-10-23/llama_langchain.py\", line 11, in <module>\r\n    llm = llms.LlamaCPP(\r\n          ^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/llama_index/llms/llama_cpp.py\", line 110, in __init__\r\n    self._model = Llama(model_path=model_path, **model_kwargs)\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/llama_cpp/llama.py\", line 313, in __init__\r\n    assert self.model is not None\r\n           ^^^^^^^^^^^^^^^^^^^^^^\r\nAssertionError\r\nException ignored in: <function Llama.__del__ at 0x11ddb6b60>\r\nTraceback (most recent call last):\r\n  File \"/opt/homebrew/lib/python3.11/site-packages/llama_cpp/llama.py\", line 1510, in __del__\r\n    if self.ctx is not None:\r\n       ^^^^^^^^\r\nAttributeError: 'Llama' object has no attribute 'ctx'\n\n### Version\n\nnew\n\n### Steps to Reproduce\n\nwen i load llama.cpp/models/llama-2-13b.Q4_0.gguf\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8252/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8252/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8251",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8251/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8251/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8251/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8251",
        "id": 1957095658,
        "node_id": "PR_kwDOIWuq585dhtah",
        "number": 8251,
        "title": "fix(json-path): multiple expressions parsing",
        "user": {
            "login": "EmanuelCampos",
            "id": 16262455,
            "node_id": "MDQ6VXNlcjE2MjYyNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16262455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EmanuelCampos",
            "html_url": "https://github.com/EmanuelCampos",
            "followers_url": "https://api.github.com/users/EmanuelCampos/followers",
            "following_url": "https://api.github.com/users/EmanuelCampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/EmanuelCampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EmanuelCampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EmanuelCampos/subscriptions",
            "organizations_url": "https://api.github.com/users/EmanuelCampos/orgs",
            "repos_url": "https://api.github.com/users/EmanuelCampos/repos",
            "events_url": "https://api.github.com/users/EmanuelCampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EmanuelCampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T12:51:17Z",
        "updated_at": "2023-10-23T19:04:15Z",
        "closed_at": "2023-10-23T19:04:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8251",
            "html_url": "https://github.com/run-llama/llama_index/pull/8251",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8251.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8251.patch",
            "merged_at": "2023-10-23T19:04:15Z"
        },
        "body": "# Description\r\n\r\nJSON path parse fails sometimes when dealing with multiple expressions, so now iterating over each expression and parsing and accumulating the results\r\n\r\nFixes # https://github.com/run-llama/llama_index/issues/7975 https://github.com/run-llama/llama_index/issues/7747\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8251/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8251/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8250",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8250/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8250/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8250/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8250",
        "id": 1956975988,
        "node_id": "PR_kwDOIWuq585dhTVI",
        "number": 8250,
        "title": "Fix retry mechanisms in OpenAI embeddings",
        "user": {
            "login": "bhavishpahwa",
            "id": 108733252,
            "node_id": "U_kgDOBnsjRA",
            "avatar_url": "https://avatars.githubusercontent.com/u/108733252?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhavishpahwa",
            "html_url": "https://github.com/bhavishpahwa",
            "followers_url": "https://api.github.com/users/bhavishpahwa/followers",
            "following_url": "https://api.github.com/users/bhavishpahwa/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhavishpahwa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhavishpahwa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhavishpahwa/subscriptions",
            "organizations_url": "https://api.github.com/users/bhavishpahwa/orgs",
            "repos_url": "https://api.github.com/users/bhavishpahwa/repos",
            "events_url": "https://api.github.com/users/bhavishpahwa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhavishpahwa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6003270643,
                "node_id": "LA_kwDOIWuq588AAAABZdKj8w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/embedding",
                "name": "embedding",
                "color": "1D775A",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-23T11:45:12Z",
        "updated_at": "2023-11-01T15:08:30Z",
        "closed_at": "2023-11-01T15:08:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8250",
            "html_url": "https://github.com/run-llama/llama_index/pull/8250",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8250.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8250.patch",
            "merged_at": "2023-11-01T15:08:30Z"
        },
        "body": "# Description\r\n\r\nThis issue changes the retry mechanisms in OpenAI embeddings to trigger only for the certain specific errors where there might be a need to retry and not trigger for errors like Authentication error, InvalidRequestError as currently due to the retries sometimes the end user thinks the code is working and in the end gets confused whether it was a retry error or an error on their side( in rare cases where user does not pass OpenAI config or keys properly).\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n- [x] Dev tested by calling the respective functions with the specific error codes and checked whether the retry mechanism was working in the cases it should and not working in cases it should not.\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8250/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8250/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8249",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8249/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8249/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8249/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8249",
        "id": 1956905096,
        "node_id": "PR_kwDOIWuq585dhD1i",
        "number": 8249,
        "title": "docs(FAQ): frequently asked questions",
        "user": {
            "login": "EmanuelCampos",
            "id": 16262455,
            "node_id": "MDQ6VXNlcjE2MjYyNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16262455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EmanuelCampos",
            "html_url": "https://github.com/EmanuelCampos",
            "followers_url": "https://api.github.com/users/EmanuelCampos/followers",
            "following_url": "https://api.github.com/users/EmanuelCampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/EmanuelCampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EmanuelCampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EmanuelCampos/subscriptions",
            "organizations_url": "https://api.github.com/users/EmanuelCampos/orgs",
            "repos_url": "https://api.github.com/users/EmanuelCampos/repos",
            "events_url": "https://api.github.com/users/EmanuelCampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EmanuelCampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-23T11:02:37Z",
        "updated_at": "2023-10-24T23:51:06Z",
        "closed_at": "2023-10-24T23:51:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8249",
            "html_url": "https://github.com/run-llama/llama_index/pull/8249",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8249.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8249.patch",
            "merged_at": "2023-10-24T23:51:06Z"
        },
        "body": "# Description\r\n\r\nFrequently asked questions for easier navigation and commonly repeated questions from the community\r\n\r\nnotes:\r\n\r\n- Headings are being used on questions for better anchoring, being easy to copy and paste\r\n- Numbers on questions/answers are being used for easier location\r\n\r\n\r\nFixes # (issue)\r\n\r\n## Next steps\r\n- [x] Initial structure\r\n- [ ] Add more Q/A\r\n- [ ] Improve FAQ sections with better descriptions\r\n\r\n## Type of Change\r\n- [x] Documentation update \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it made sense\r\n\r\n![image](https://github.com/run-llama/llama_index/assets/16262455/fc25fe2e-e39f-4fb4-b2a4-3224efd5c48b)\r\n![image](https://github.com/run-llama/llama_index/assets/16262455/b614abec-8862-4e81-b1ea-6b537cd33849)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8249/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8249/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8248",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8248/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8248/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8248/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8248",
        "id": 1956529435,
        "node_id": "PR_kwDOIWuq585dfy9g",
        "number": 8248,
        "title": "Add missing changelog items",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-23T07:28:35Z",
        "updated_at": "2023-10-23T07:28:59Z",
        "closed_at": "2023-10-23T07:28:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8248",
            "html_url": "https://github.com/run-llama/llama_index/pull/8248",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8248.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8248.patch",
            "merged_at": "2023-10-23T07:28:59Z"
        },
        "body": "# Description\r\n\r\nAdd missing changelog items\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8248/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8247",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8247/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8247/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8247/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8247",
        "id": 1956525256,
        "node_id": "I_kwDOIWuq5850njTI",
        "number": 8247,
        "title": "[Bug]:  Getting \"Importing PromptTemplate from langchain root module is no longer supported.\" when I import PromptTemplate from llama-index",
        "user": {
            "login": "kaushalpowar",
            "id": 90775147,
            "node_id": "MDQ6VXNlcjkwNzc1MTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/90775147?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kaushalpowar",
            "html_url": "https://github.com/kaushalpowar",
            "followers_url": "https://api.github.com/users/kaushalpowar/followers",
            "following_url": "https://api.github.com/users/kaushalpowar/following{/other_user}",
            "gists_url": "https://api.github.com/users/kaushalpowar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kaushalpowar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kaushalpowar/subscriptions",
            "organizations_url": "https://api.github.com/users/kaushalpowar/orgs",
            "repos_url": "https://api.github.com/users/kaushalpowar/repos",
            "events_url": "https://api.github.com/users/kaushalpowar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kaushalpowar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T07:25:45Z",
        "updated_at": "2023-10-23T08:06:32Z",
        "closed_at": "2023-10-23T08:06:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/__init__.py:24: UserWarning: Importing PromptTemplate from langchain root module is no longer supported.\n\n### Version\n\n0.8.35\n\n### Steps to Reproduce\n\nfrom llama_index.prompts import PromptTemplate\r\n shows this mentioned error.\r\n \n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8247/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8247/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8246",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8246/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8246/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8246/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8246",
        "id": 1956481787,
        "node_id": "PR_kwDOIWuq585dfor5",
        "number": 8246,
        "title": "gradient guide: fine-tune text-to-SQL ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T06:56:33Z",
        "updated_at": "2023-10-23T15:12:19Z",
        "closed_at": "2023-10-23T15:12:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8246",
            "html_url": "https://github.com/run-llama/llama_index/pull/8246",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8246.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8246.patch",
            "merged_at": "2023-10-23T15:12:18Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8246/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8246/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8245",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8245/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8245/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8245/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8245",
        "id": 1956296999,
        "node_id": "I_kwDOIWuq5850mrkn",
        "number": 8245,
        "title": "Improvements to Slack Reader",
        "user": {
            "login": "mulka",
            "id": 51038,
            "node_id": "MDQ6VXNlcjUxMDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mulka",
            "html_url": "https://github.com/mulka",
            "followers_url": "https://api.github.com/users/mulka/followers",
            "following_url": "https://api.github.com/users/mulka/following{/other_user}",
            "gists_url": "https://api.github.com/users/mulka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mulka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mulka/subscriptions",
            "organizations_url": "https://api.github.com/users/mulka/orgs",
            "repos_url": "https://api.github.com/users/mulka/repos",
            "events_url": "https://api.github.com/users/mulka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mulka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Disiok",
                "id": 5567282,
                "node_id": "MDQ6VXNlcjU1NjcyODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Disiok",
                "html_url": "https://github.com/Disiok",
                "followers_url": "https://api.github.com/users/Disiok/followers",
                "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
                "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
                "organizations_url": "https://api.github.com/users/Disiok/orgs",
                "repos_url": "https://api.github.com/users/Disiok/repos",
                "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Disiok/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T03:50:15Z",
        "updated_at": "2023-10-23T17:51:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nWondering if the Slack Reader should be improved. The context doesn't seem to have the real channel name nor the users names who post there.\r\n\r\n\r\n```\r\nContext information is below.\r\n---------------------\r\nchannel: CAMPGT6R3\r\n\r\nhi\r\n\r\n<@U062YH5FXCG> has joined the channel\r\n---------------------\r\nGiven the context information and not prior knowledge, answer the query.\r\nQuery: <query here>\r\nAnswer: \r\n```\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8245/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8245/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8244",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8244/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8244/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8244/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8244",
        "id": 1956296157,
        "node_id": "PR_kwDOIWuq585dfAnV",
        "number": 8244,
        "title": "Update concepts.md",
        "user": {
            "login": "josephrmartinez",
            "id": 13042856,
            "node_id": "MDQ6VXNlcjEzMDQyODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13042856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephrmartinez",
            "html_url": "https://github.com/josephrmartinez",
            "followers_url": "https://api.github.com/users/josephrmartinez/followers",
            "following_url": "https://api.github.com/users/josephrmartinez/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephrmartinez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephrmartinez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephrmartinez/subscriptions",
            "organizations_url": "https://api.github.com/users/josephrmartinez/orgs",
            "repos_url": "https://api.github.com/users/josephrmartinez/repos",
            "events_url": "https://api.github.com/users/josephrmartinez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephrmartinez/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T03:49:04Z",
        "updated_at": "2023-10-27T20:41:42Z",
        "closed_at": "2023-10-23T07:54:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8244",
            "html_url": "https://github.com/run-llama/llama_index/pull/8244",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8244.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8244.patch",
            "merged_at": "2023-10-23T07:54:33Z"
        },
        "body": "# Description\r\nGrammar. Correct plural typos.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8244/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8244/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8242",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8242/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8242/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8242/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8242",
        "id": 1956073613,
        "node_id": "I_kwDOIWuq5850l1CN",
        "number": 8242,
        "title": "[Bug]: `botocore.exceptions.ClientError` during local testing with `test_s3_kvstore`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Disiok",
                "id": 5567282,
                "node_id": "MDQ6VXNlcjU1NjcyODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Disiok",
                "html_url": "https://github.com/Disiok",
                "followers_url": "https://api.github.com/users/Disiok/followers",
                "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
                "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
                "organizations_url": "https://api.github.com/users/Disiok/orgs",
                "repos_url": "https://api.github.com/users/Disiok/repos",
                "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Disiok/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-22T22:06:03Z",
        "updated_at": "2023-10-25T01:15:56Z",
        "closed_at": "2023-10-25T01:15:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nDuring local testing of all cases in `tests/storage/kvstore/test_s3_kvstore.py`, I get:\r\n\r\n```\r\nE           botocore.exceptions.ClientError: An error occurred (IllegalLocationConstraintException) when calling the CreateBucket operation: The unspecified location constraint is incompatible for the region specific endpoint this request was sent to.\r\n\r\nvenv/lib/python3.8/site-packages/botocore/client.py:980: ClientError\r\n```\r\n\r\nThis issue has persisted since I started developing with LlamaIndex, I am just reporting it now. Ideally one can run testing without having test failures due to one's own `aws configure`. In other words, I think LlamaIndex testing needs to isolate its AWS portion better.\n\n### Version\n\nv0.8.48\n\n### Steps to Reproduce\n\nRunning tests locally with Python 3.8.\n\n### Relevant Logs/Tracbacks\n\n```shell\n__________________________________________________________________________________________ ERROR at setup of test_get_all __________________________________________________________________________________________\r\n\r\n    @pytest.fixture()\r\n    @pytest.fixture()\r\n    def kvstore_from_mocked_bucket() -> Generator[S3DBKVStore, None, None]:\r\n        with mock_s3():\r\n            s3 = boto3.resource(\"s3\")\r\n            bucket = s3.Bucket(\"test_bucket\")\r\n>           bucket.create()\r\n\r\ntests/storage/kvstore/test_s3_kvstore.py:20:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nvenv/lib/python3.8/site-packages/boto3/resources/factory.py:580: in do_action\r\n    response = action(self, *args, **kwargs)\r\nvenv/lib/python3.8/site-packages/boto3/resources/action.py:88: in __call__\r\n    response = getattr(parent.meta.client, operation_name)(*args, **params)\r\nvenv/lib/python3.8/site-packages/botocore/client.py:535: in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <botocore.client.S3 object at 0x15d0591f0>, operation_name = 'CreateBucket', api_params = {'Bucket': 'test_bucket'}\r\n\r\n    def _make_api_call(self, operation_name, api_params):\r\n        operation_model = self._service_model.operation_model(operation_name)\r\n        service_name = self._service_model.service_name\r\n        history_recorder.record(\r\n            'API_CALL',\r\n            {\r\n                'service': service_name,\r\n                'operation': operation_name,\r\n                'params': api_params,\r\n            },\r\n        )\r\n        if operation_model.deprecated:\r\n            logger.debug(\r\n                'Warning: %s.%s() is deprecated', service_name, operation_name\r\n            )\r\n        request_context = {\r\n            'client_region': self.meta.region_name,\r\n            'client_config': self.meta.config,\r\n            'has_streaming_input': operation_model.has_streaming_input,\r\n            'auth_type': operation_model.auth_type,\r\n        }\r\n        api_params = self._emit_api_params(\r\n            api_params=api_params,\r\n            operation_model=operation_model,\r\n            context=request_context,\r\n        )\r\n        endpoint_url, additional_headers = self._resolve_endpoint_ruleset(\r\n            operation_model, api_params, request_context\r\n        )\r\n        request_dict = self._convert_to_request_dict(\r\n            api_params=api_params,\r\n            operation_model=operation_model,\r\n            endpoint_url=endpoint_url,\r\n            context=request_context,\r\n            headers=additional_headers,\r\n        )\r\n        resolve_checksum_context(request_dict, operation_model, api_params)\r\n\r\n        service_id = self._service_model.service_id.hyphenize()\r\n        handler, event_response = self.meta.events.emit_until_response(\r\n            'before-call.{service_id}.{operation_name}'.format(\r\n                service_id=service_id, operation_name=operation_name\r\n            ),\r\n            model=operation_model,\r\n            params=request_dict,\r\n            request_signer=self._request_signer,\r\n            context=request_context,\r\n        )\r\n\r\n        if event_response is not None:\r\n            http, parsed_response = event_response\r\n        else:\r\n            maybe_compress_request(\r\n                self.meta.config, request_dict, operation_model\r\n            )\r\n            apply_request_checksum(request_dict)\r\n            http, parsed_response = self._make_request(\r\n                operation_model, request_dict, request_context\r\n            )\r\n\r\n        self.meta.events.emit(\r\n            'after-call.{service_id}.{operation_name}'.format(\r\n                service_id=service_id, operation_name=operation_name\r\n            ),\r\n            http_response=http,\r\n            parsed=parsed_response,\r\n            model=operation_model,\r\n            context=request_context,\r\n        )\r\n\r\n        if http.status_code >= 300:\r\n            error_code = parsed_response.get(\"Error\", {}).get(\"Code\")\r\n            error_class = self.exceptions.from_code(error_code)\r\n>           raise error_class(parsed_response, operation_name)\r\nE           botocore.exceptions.ClientError: An error occurred (IllegalLocationConstraintException) when calling the CreateBucket operation: The unspecified location constraint is incompatible for the region specific endpoint this request was sent to.\r\n\r\nvenv/lib/python3.8/site-packages/botocore/client.py:980: ClientError\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8242/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8242/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8241",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8241/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8241/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8241/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8241",
        "id": 1956068451,
        "node_id": "PR_kwDOIWuq585dePqs",
        "number": 8241,
        "title": "Deprecating `localai` in favor of expanded `openai_like`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-10-22T21:48:21Z",
        "updated_at": "2023-11-29T21:26:07Z",
        "closed_at": "2023-11-29T21:24:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8241",
            "html_url": "https://github.com/run-llama/llama_index/pull/8241",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8241.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8241.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\n- Deprecates `localai.LocalAI` in favor of `openai_like.OpenAILike` with special parameterization\r\n- Expands `OpenAI._update_max_tokens` to have a backdoor for not adding `max_tokens`\r\n- Avoids duplication of `OpenALike` `Field` descriptions\r\n- Fixes testing in several ways\r\n    - Stub tokenizer now delivers `List[int]`\r\n    - Local testers can now run without `OPENAI_API_KEY` in their environment\r\n- Tightens test assertions\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8241/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8241/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8240",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8240/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8240/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8240/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8240",
        "id": 1955862728,
        "node_id": "I_kwDOIWuq5850lBjI",
        "number": 8240,
        "title": "[Question]: PGVectorStore\u2019s QueryResult always returns saved Node as TextNode. Is this intended?",
        "user": {
            "login": "jacepark12",
            "id": 11798004,
            "node_id": "MDQ6VXNlcjExNzk4MDA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11798004?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacepark12",
            "html_url": "https://github.com/jacepark12",
            "followers_url": "https://api.github.com/users/jacepark12/followers",
            "following_url": "https://api.github.com/users/jacepark12/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacepark12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacepark12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacepark12/subscriptions",
            "organizations_url": "https://api.github.com/users/jacepark12/orgs",
            "repos_url": "https://api.github.com/users/jacepark12/repos",
            "events_url": "https://api.github.com/users/jacepark12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacepark12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-22T11:23:14Z",
        "updated_at": "2023-10-30T06:29:09Z",
        "closed_at": "2023-10-30T06:29:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi, I am running the [\"Joint tabular/semantic QA\"](https://github.com/run-llama/llama_index/blob/main/docs/examples/query_engine/sec_tables/tesla_10q_table.ipynb) example from the documentation, which creates two types of nodes. In this example, `UnstructuredElementNodeParser` creates `IndexNode` and `TextNode`, with `IndexNode` capturing the caption of tabular data and saving the `TextNode`'s ID containing raw tabular data. Everything works fine without additional changes. However, when I add an external storage context (Postgres vector store for this case), IndexNode is not properly processed by `RecursiveRetriever`, since every retrieved nodes are TextNode.\r\n\r\nI have found that the problem arises because when querying from `PGVectorStore`, it always returns nodes as `TextNode`. I assume other vector stores behave similarly, as the `metadata_dict_to_node` function from `vector_stores.utils` consistently returns `TextNode`.\r\n\r\nI wonder if this behavior is intentional. \r\nAlso, if this behavior is intentional, what would be the best approach to persist IndexNode? I have considered using another storage method for IndexNode, but since it needs to be queried alongside other nodes, I have temporarily customized the PGVectorStore code for my needs.\r\n\r\nThank you!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8240/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8240/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8239",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8239/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8239/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8239/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8239",
        "id": 1955861647,
        "node_id": "I_kwDOIWuq5850lBSP",
        "number": 8239,
        "title": "[Bug]: multi_document_agents - - - top_agent.chat(\"my_message\")",
        "user": {
            "login": "ElioErrico",
            "id": 143315119,
            "node_id": "U_kgDOCIrQrw",
            "avatar_url": "https://avatars.githubusercontent.com/u/143315119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ElioErrico",
            "html_url": "https://github.com/ElioErrico",
            "followers_url": "https://api.github.com/users/ElioErrico/followers",
            "following_url": "https://api.github.com/users/ElioErrico/following{/other_user}",
            "gists_url": "https://api.github.com/users/ElioErrico/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ElioErrico/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ElioErrico/subscriptions",
            "organizations_url": "https://api.github.com/users/ElioErrico/orgs",
            "repos_url": "https://api.github.com/users/ElioErrico/repos",
            "events_url": "https://api.github.com/users/ElioErrico/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ElioErrico/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-22T11:19:32Z",
        "updated_at": "2023-10-23T08:37:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nHello,\r\n\r\nI followed the documentation on [https://gpt-index.readthedocs.io/en/stable/examples/agent/multi_document_agents.html](url).\r\nEverything is working correctly just cooping and pasting.\r\nBut if i try to change from:\r\n`response=top_agent.query(\"tell me more about boston?\")`\r\nto:\r\n`response=top_agent.chat(\"tell me more about boston?\")`\r\n\r\nit gives me some errors if I don't explicit the topic in my next message once that the topic should be defined.\r\n\r\nI start with:\r\n`response=top_agent.chat(\"tell me more about boston?\")`\r\n I get the answer correctly calling the boston tool.\r\n\r\nthan this is the chat history:\r\n`[\r\nChatMessage(role=<MessageRole.USER: 'user'>, content='Ciao mi dici di pi\u00f9 su boston?', additional_kwargs={}), \r\nChatMessage(role=<MessageRole.ASSISTANT: 'assistant'>, content=None, additional_kwargs={'function_call': <OpenAIObject at 0x1eaf6deb230> JSON: {\r\n  \"name\": \"tool_Boston\",\r\n  \"arguments\": \"{\\n\\\"input\\\": \\\"overview\\\"\\n}\"\r\n}}), \r\nChatMessage(role=<MessageRole.FUNCTION: 'function'>, content=\"Boston ... bla bla bla.\", additional_kwargs={'name': 'tool_Boston'}), \r\nChatMessage(role=<MessageRole.ASSISTANT: 'assistant'>, content=\"Boston ... bla bla bla\", additional_kwargs={})]`\r\n\r\nbut then if I ask somithing like:\r\nwhat can you tell me about art:\r\n`response = top_agent.chat(what about art?)`\r\nit gives me the following error reported in the traceback.\r\nit seems that it can not find anymore the tool.\r\n\r\nlet me know.\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Version\r\n\r\n0.8.48\r\n\r\n### Steps to Reproduce\r\n\r\n- follow the documentation on [https://gpt-index.readthedocs.io/en/stable/examples/agent/multi_document_agents.html](url).\r\n\r\nchange from:\r\n`response=top_agent.query(\"tell me more about boston?\")`\r\nto:\r\n`response=top_agent.chat(\"tell me more about boston?\")`\r\n\r\nstart chatting with out giving topic reference after the first message.\r\n\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nValueError                                Traceback (most recent call last)\r\nc:\\Users\\erric\\Desktop\\Python\\17-llama-index-experiments.py\\00-llama_index_notebooks\\04_multi_documents_chat.ipynb Cell 18 line 7\r\n      5 print(last_used_tool)\r\n      6 new_question=question_from_user+last_used_tool\r\n----> 7 response = top_agent.chat(\"what about art?\")\r\n      9 print (response)\r\n\r\nFile c:\\Users\\erric\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\llama_index\\callbacks\\utils.py:39, in trace_method.<locals>.decorator.<locals>.wrapper(self, *args, **kwargs)\r\n     37 callback_manager = cast(CallbackManager, callback_manager)\r\n     38 with callback_manager.as_trace(trace_id):\r\n---> 39     return func(self, *args, **kwargs)\r\n\r\nFile c:\\Users\\erric\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\llama_index\\agent\\openai_agent.py:342, in BaseOpenAIAgent.chat(self, message, chat_history, function_call)\r\n    331 @trace_method(\"chat\")\r\n    332 def chat(\r\n    333     self,\r\n   (...)\r\n    336     function_call: Union[str, dict] = \"auto\",\r\n    337 ) -> AgentChatResponse:\r\n    338     with self.callback_manager.event(\r\n    339         CBEventType.AGENT_STEP,\r\n    340         payload={EventPayload.MESSAGES: [message]},\r\n    341     ) as e:\r\n--> 342         chat_response = self._chat(\r\n...\r\n     38 if name not in name_to_tool:\r\n---> 39     raise ValueError(f\"Tool with name {name} not found\")\r\n     40 return name_to_tool[name]\r\n\r\nValueError: Tool with name tool_Boston not found\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8239/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8239/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8238",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8238/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8238/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8238/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8238",
        "id": 1955817319,
        "node_id": "PR_kwDOIWuq585ddemt",
        "number": 8238,
        "title": "fix: add response synthesis notebook showcasing custom prompts",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-22T08:48:40Z",
        "updated_at": "2023-10-22T09:01:13Z",
        "closed_at": "2023-10-22T09:01:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8238",
            "html_url": "https://github.com/run-llama/llama_index/pull/8238",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8238.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8238.patch",
            "merged_at": "2023-10-22T09:01:12Z"
        },
        "body": "this shows how users can use their custom prompts w/ custom template vars ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8238/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8238/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8237",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8237/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8237/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8237/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8237",
        "id": 1955811511,
        "node_id": "PR_kwDOIWuq585dddeY",
        "number": 8237,
        "title": "add low-level fusion retriever tutorial",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-22T08:29:00Z",
        "updated_at": "2023-10-22T09:00:58Z",
        "closed_at": "2023-10-22T09:00:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8237",
            "html_url": "https://github.com/run-llama/llama_index/pull/8237",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8237.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8237.patch",
            "merged_at": "2023-10-22T09:00:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8237/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8237/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8236",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8236/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8236/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8236/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8236",
        "id": 1955791148,
        "node_id": "PR_kwDOIWuq585ddZmL",
        "number": 8236,
        "title": "Simplify dependencies",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-22T07:12:47Z",
        "updated_at": "2023-10-22T07:24:41Z",
        "closed_at": "2023-10-22T07:24:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8236",
            "html_url": "https://github.com/run-llama/llama_index/pull/8236",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8236.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8236.patch",
            "merged_at": "2023-10-22T07:24:40Z"
        },
        "body": "# Summary\r\n* Reduce `poetry lock --no-update` time from ~1000s to ~40s\r\n* Fix package extras [local_models, postgres, query_tools]\r\n\r\n### Details\r\n* previously we listed out a large number of optional dependencies, which all need to be resolved during `poetry lock` time. Explicitly listing these don't actually add that much value, since they only help with dev, not packaging\r\n* remove `dataloaders` package extra. I think it has limited value since users likely don't want to install deps for all possible loaders.\r\n* in order for package extras to work, the optional dependencies must be listed in the main group. Previous they were listed in dependency groups, so not actually being added to the package extras.  \r\n* Remove `toml-sort-fix` since it's making undesired changes in `pyproject.toml` \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8236/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8236/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8235",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8235/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8235/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8235/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8235",
        "id": 1955757542,
        "node_id": "I_kwDOIWuq5850kn3m",
        "number": 8235,
        "title": "What are your takes on open-source model capability to implement numerous pipeline logic that you have came out with? ",
        "user": {
            "login": "timothylimyl",
            "id": 49274721,
            "node_id": "MDQ6VXNlcjQ5Mjc0NzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/49274721?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timothylimyl",
            "html_url": "https://github.com/timothylimyl",
            "followers_url": "https://api.github.com/users/timothylimyl/followers",
            "following_url": "https://api.github.com/users/timothylimyl/following{/other_user}",
            "gists_url": "https://api.github.com/users/timothylimyl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timothylimyl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timothylimyl/subscriptions",
            "organizations_url": "https://api.github.com/users/timothylimyl/orgs",
            "repos_url": "https://api.github.com/users/timothylimyl/repos",
            "events_url": "https://api.github.com/users/timothylimyl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timothylimyl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Disiok",
                "id": 5567282,
                "node_id": "MDQ6VXNlcjU1NjcyODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Disiok",
                "html_url": "https://github.com/Disiok",
                "followers_url": "https://api.github.com/users/Disiok/followers",
                "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
                "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
                "organizations_url": "https://api.github.com/users/Disiok/orgs",
                "repos_url": "https://api.github.com/users/Disiok/repos",
                "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Disiok/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-22T04:37:00Z",
        "updated_at": "2023-10-24T06:32:27Z",
        "closed_at": "2023-10-24T06:32:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi,\r\n\r\nI really enjoyed reading through the entire llama index documentation to get some ideas on how you are going about implementing RAG.\r\n\r\nIt seems to me that a lot of software logic implemented here will require the LLM to be:\r\n\r\n1. General-purpose (Instruction/Conversational)\r\n2. Highly Performant (Generalisable, assume to be OS level LLM)\r\n\r\nBy OS level LLM, I am indicating that the LLM is treated as the central-agent that does is capable of dynamic planning and reasoning which I believe is only currently available for closed-sourced LLM as it is an emergent property of size. Thus, I am curious on whether have you tested the overall pipeline with an open-source LLM to replicate your RAG pipeline successfully.\r\n\r\nFor example, there's a few requirement that you have assumed the LLM to have:\r\na. Logical decomposition of main query to precise sub query for usage of search and retrieval\r\nb. Evaluation of quality of answer given query to decide whether to re-query\r\nc. Using it as Main-Agent/Document-Agent including your idea of Router\r\n\r\n\r\nA few that I think is within the realm of \"doable\" for open-source:\r\na. Summarisation of descriptions of chunk (Efforts to disambiguate)\r\nb. Normal QA (Answers is found in context or in the compiled answers)\r\n\r\nand an extra questionable feature:\r\na. Answering based off context provided and not hallucinate.  If you are just prompting it to \"do not provide an answer if answers cannot be found in the context provided\", then it is highly probable your LLM will still answer especially if context has some sort of relevance.  This is something that GPT3.5 has problem with too.\r\n\r\nI foresee a lot of pitfalls/point of failures that will come with open-source models especially if most pipeline logic is just prompting your way through and hoping that the LLM can handle the logic. Don't get me wrong, I understand the quick progress wins that you can get with OpenAI and it really helps you to test your idea immediately.\r\n\r\nWhat are your takes on open-source model capability to implement numerous pipeline logic that you have came out with? Hope this thread can be a space for discussion in the area of open-source LLM.\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8235/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8235/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8234",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8234/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8234/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8234/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8234",
        "id": 1955728780,
        "node_id": "PR_kwDOIWuq585ddNvz",
        "number": 8234,
        "title": "Expose prompts for different modules (query engine, etc.) ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-22T02:08:15Z",
        "updated_at": "2023-10-24T05:59:24Z",
        "closed_at": "2023-10-24T05:59:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8234",
            "html_url": "https://github.com/run-llama/llama_index/pull/8234",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8234.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8234.patch",
            "merged_at": null
        },
        "body": "this PR exposes `get_prompts` and `update_prompts` so that users can easily view the prompts and update prompts for query engines, response synthesizers, more.\r\n\r\nvery WIP at the moment, only implemented for response synthesis. feedback on design etc welcome ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8234/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8234/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8233",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8233/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8233/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8233/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8233",
        "id": 1955700040,
        "node_id": "PR_kwDOIWuq585ddIHr",
        "number": 8233,
        "title": "Add ai21 llm",
        "user": {
            "login": "D-coder22",
            "id": 43219702,
            "node_id": "MDQ6VXNlcjQzMjE5NzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/43219702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/D-coder22",
            "html_url": "https://github.com/D-coder22",
            "followers_url": "https://api.github.com/users/D-coder22/followers",
            "following_url": "https://api.github.com/users/D-coder22/following{/other_user}",
            "gists_url": "https://api.github.com/users/D-coder22/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/D-coder22/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/D-coder22/subscriptions",
            "organizations_url": "https://api.github.com/users/D-coder22/orgs",
            "repos_url": "https://api.github.com/users/D-coder22/repos",
            "events_url": "https://api.github.com/users/D-coder22/events{/privacy}",
            "received_events_url": "https://api.github.com/users/D-coder22/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T23:47:20Z",
        "updated_at": "2023-10-22T05:02:36Z",
        "closed_at": "2023-10-22T05:02:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8233",
            "html_url": "https://github.com/run-llama/llama_index/pull/8233",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8233.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8233.patch",
            "merged_at": "2023-10-22T05:02:36Z"
        },
        "body": "# Description\r\n\r\nThis PR adds support for [AI21 Labs](https://www.ai21.com/) LLMs. I have added unit tests for basic functionality. I have also included an example notebook and added that to the documentation. AI21 Labs Python SDK does not have a streaming functionality, hence I have not implemented it and if called it raises a NotImplementedError.\r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8233/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8233/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8232",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8232/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8232/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8232/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8232",
        "id": 1955608899,
        "node_id": "PR_kwDOIWuq585dc2yl",
        "number": 8232,
        "title": "Upgrade response synthesizer",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-21T18:10:07Z",
        "updated_at": "2023-10-21T21:17:31Z",
        "closed_at": "2023-10-21T21:17:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8232",
            "html_url": "https://github.com/run-llama/llama_index/pull/8232",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8232.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8232.patch",
            "merged_at": "2023-10-21T21:17:30Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8232/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8232/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8231",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8231/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8231/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8231/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8231",
        "id": 1955520419,
        "node_id": "PR_kwDOIWuq585dclrQ",
        "number": 8231,
        "title": "Fix delete in elasticsearch vector store (#8230)",
        "user": {
            "login": "Samyak2",
            "id": 34161949,
            "node_id": "MDQ6VXNlcjM0MTYxOTQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/34161949?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Samyak2",
            "html_url": "https://github.com/Samyak2",
            "followers_url": "https://api.github.com/users/Samyak2/followers",
            "following_url": "https://api.github.com/users/Samyak2/following{/other_user}",
            "gists_url": "https://api.github.com/users/Samyak2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Samyak2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Samyak2/subscriptions",
            "organizations_url": "https://api.github.com/users/Samyak2/orgs",
            "repos_url": "https://api.github.com/users/Samyak2/repos",
            "events_url": "https://api.github.com/users/Samyak2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Samyak2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T14:43:12Z",
        "updated_at": "2023-10-21T15:28:37Z",
        "closed_at": "2023-10-21T15:28:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8231",
            "html_url": "https://github.com/run-llama/llama_index/pull/8231",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8231.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8231.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nSince we're checking for exact matches of `ref_doc_id`, we should use `.keyword` instead of the field itself. `.keyword` was being used in other places in this module but not for delete. This was causing deletion to be skipped (see #8230).\r\n\r\nFixes #8230\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8231/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8231/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8230",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8230/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8230/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8230/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8230",
        "id": 1955519296,
        "node_id": "I_kwDOIWuq5850jttA",
        "number": 8230,
        "title": "[Bug]: Delete document in Elasticsearch vector store does not work",
        "user": {
            "login": "Samyak2",
            "id": 34161949,
            "node_id": "MDQ6VXNlcjM0MTYxOTQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/34161949?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Samyak2",
            "html_url": "https://github.com/Samyak2",
            "followers_url": "https://api.github.com/users/Samyak2/followers",
            "following_url": "https://api.github.com/users/Samyak2/following{/other_user}",
            "gists_url": "https://api.github.com/users/Samyak2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Samyak2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Samyak2/subscriptions",
            "organizations_url": "https://api.github.com/users/Samyak2/orgs",
            "repos_url": "https://api.github.com/users/Samyak2/repos",
            "events_url": "https://api.github.com/users/Samyak2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Samyak2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-21T14:39:45Z",
        "updated_at": "2023-10-21T15:29:13Z",
        "closed_at": "2023-10-21T15:29:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI was using `index.update_ref_doc(doc)` to update an existing document but it was inserting a duplicate instead. When I enabled logs and checked for issues, I found this:\r\n```\r\nWARNING:  2023-10-21 19:50:07 Could not find text <document-id-here> to delete\r\n```\n\n### Version\n\n0.8.46\n\n### Steps to Reproduce\n\n- Set up an elasticsearch index\r\n- Add a document using `index.insert(doc)`\r\n- Try updating the same document using `index.update_ref_doc(doc)` (ensure this doc is the same or has the same `doc_id` as the one in the previous step)\r\n- Check documents in the elasticsearch index, there will be 2 documents with the same `doc_id`\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8230/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8230/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8229",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8229/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8229/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8229/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8229",
        "id": 1955408633,
        "node_id": "I_kwDOIWuq5850jSr5",
        "number": 8229,
        "title": "[Question]: Metadata Structure in Pinecone Upsert using LlamaIndex",
        "user": {
            "login": "burberg92",
            "id": 78668495,
            "node_id": "MDQ6VXNlcjc4NjY4NDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/78668495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/burberg92",
            "html_url": "https://github.com/burberg92",
            "followers_url": "https://api.github.com/users/burberg92/followers",
            "following_url": "https://api.github.com/users/burberg92/following{/other_user}",
            "gists_url": "https://api.github.com/users/burberg92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/burberg92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/burberg92/subscriptions",
            "organizations_url": "https://api.github.com/users/burberg92/orgs",
            "repos_url": "https://api.github.com/users/burberg92/repos",
            "events_url": "https://api.github.com/users/burberg92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/burberg92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-21T09:35:23Z",
        "updated_at": "2023-10-23T08:37:12Z",
        "closed_at": "2023-10-23T08:37:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nHello all, I am using Pinecone vector db with LlamaIndex.\r\n\r\nI am trying to understand the metadata that is created when upserting to Pinecone, and want to ensure that it's structured correctly.\r\n\r\nI noticed that document_id and ref_doc_id have the same value, which I presume is the identifier for the document being upserted. However, I am unsure about the _node_content field and its sub-fields. Below is a snippet of the metadata that is generated during the upsert operation:\r\n\r\n\r\nMETADATA:\r\n_nodecontent: \r\n\"{\"id\": \"a645c9ae-52a0-4702-b347-bf1c197fdd06\", \"embedding\": null, \"metadata\": {\"page_label\": \"16\", \"file_name\": \"LABORCODE.pdf\"}, \"excluded_embed_metadata_keys\": [], \"excluded_llm_metadata_keys\": [], \"relationships\": {\"1\": {\"node_id\": \"7bffb2e4-e08e-43a1-8027-5bd356e4c521\", \"node_type\": null, \"metadata\": {\"page_label\": \"16\", \"file_name\": \"LABORCODE.pdf\"}, \"hash\": \"431f995dbad545f4735413d1f065446f4cc2f9b5209ffd944d6a9f6ac03cec12\"}}, \"hash\": \"431f995dbad545f4735413d1f065446f4cc2f9b5209ffd944d6a9f6ac03cec12\", \"text\": \\ <DELETED FOR BREVITY>  \", \"start_char_idx\": null, \"end_char_idx\": null, \"text_template\": \"{metadata_str}\\n\\n{content}\", \"metadata_template\": \"{key}: {value}\", \"metadata_seperator\": \"\\n\"}\"\r\n\r\ndoc_id: \"7bffb2e4-e08e-43a1-8027-5bd356e4c521\"\r\n\r\ndocument_id: \"7bffb2e4-e08e-43a1-8027-5bd356e4c521\"\r\n\r\nfile_name: \"LABORCODE.pdf\"\r\n\r\npage_label: \"16\"\r\n\r\nref_doc_id: \"7bffb2e4-e08e-43a1-8027-5bd356e4c521\"",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8229/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8229/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8228",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8228/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8228/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8228/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8228",
        "id": 1955329873,
        "node_id": "PR_kwDOIWuq585dcAY-",
        "number": 8228,
        "title": "BUG-8206-remove-kwargs-from-ReActAgent-from-tools",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-21T05:19:10Z",
        "updated_at": "2023-10-21T05:34:09Z",
        "closed_at": "2023-10-21T05:34:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8228",
            "html_url": "https://github.com/run-llama/llama_index/pull/8228",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8228.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8228.patch",
            "merged_at": "2023-10-21T05:34:04Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes [#8206](https://github.com/run-llama/llama_index/issues/8206) \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\nReplicated bug using script below:\r\n\r\n```\r\nimport os\r\n\r\nimport drum\r\n\r\nfrom llama_index import SimpleDirectoryReader\r\nfrom llama_index.chat_engine.types import ChatMode\r\nfrom llama_index.indices.loading import load_index_from_storage\r\nfrom llama_index.indices.vector_store import VectorStoreIndex\r\nfrom llama_index.node_parser import SimpleNodeParser\r\nfrom llama_index.prompts import Prompt\r\nfrom llama_index.storage import StorageContext\r\nfrom llama_index.storage.docstore import SimpleDocumentStore\r\n\r\nreader = SimpleDirectoryReader(\"./docs/examples/data/paul_graham\")\r\ndocuments = reader.load_data()\r\nnodes = SimpleNodeParser.from_defaults().get_nodes_from_documents(documents)\r\ndocstore = SimpleDocumentStore()\r\ndocstore.add_documents(nodes)\r\n\r\nsc = StorageContext.from_defaults(docstore=docstore)\r\n\r\ntry:\r\n    key = drum.RuntimeParameters.get(\"OPENAI_API_KEY\")[\"apiToken\"]\r\nexcept:\r\n    key = os.environ[\"OPENAI_API_KEY\"]\r\n\r\nindex = VectorStoreIndex(nodes, storage_context=sc)\r\n\r\ntemplate_str = \"\"\"We have provided context information below. If you don't know the answer, just say you don't know. Don't make up an answer. Do not mention you are an AI language model. \r\nAlways say to refer to the respective department for extra information. Don't mention anything about the provided context in your response. \\n\"\r\n\"---------------------\\n\"\r\n\"{context_str}\"\r\n\"\\n---------------------\\n\"\r\n\"Do not give me an answer if it is not mentioned in the context as a fact. Given this information, please answer the question: {query_str}\\n\"\"\"\r\n\r\nqa_template = Prompt(template_str)\r\nmodel = index.as_chat_engine(\r\n    chat_mode=ChatMode.REACT,\r\n    similarity_top_k=2, text_qa_template=qa_template)\r\n```\r\n\r\nAfter the change is made, the error of unknown params goes away.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8228/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8228/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8227",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8227/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8227/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8227/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8227",
        "id": 1955139171,
        "node_id": "PR_kwDOIWuq585dbW2X",
        "number": 8227,
        "title": "[version] bump version to 0.8.48",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-20T23:46:20Z",
        "updated_at": "2023-10-21T00:00:03Z",
        "closed_at": "2023-10-21T00:00:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8227",
            "html_url": "https://github.com/run-llama/llama_index/pull/8227",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8227.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8227.patch",
            "merged_at": "2023-10-21T00:00:02Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8227/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8227/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8226",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8226/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8226/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8226/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8226",
        "id": 1955115917,
        "node_id": "PR_kwDOIWuq585dbRr8",
        "number": 8226,
        "title": "add semantic kernel document format",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-20T23:12:26Z",
        "updated_at": "2023-10-20T23:21:47Z",
        "closed_at": "2023-10-20T23:21:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8226",
            "html_url": "https://github.com/run-llama/llama_index/pull/8226",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8226.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8226.patch",
            "merged_at": "2023-10-20T23:21:46Z"
        },
        "body": "# Description\r\n\r\nQuick PR to add to/from semantic kernel `MemoryRecord` format\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8226/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8226/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8225",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8225/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8225/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8225/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8225",
        "id": 1955082630,
        "node_id": "PR_kwDOIWuq585dbKec",
        "number": 8225,
        "title": "remove automatic download",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-20T22:27:44Z",
        "updated_at": "2023-10-20T22:33:56Z",
        "closed_at": "2023-10-20T22:33:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8225",
            "html_url": "https://github.com/run-llama/llama_index/pull/8225",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8225.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8225.patch",
            "merged_at": "2023-10-20T22:33:55Z"
        },
        "body": "# Description\r\n\r\nInstead of auto-downloading such a large file, let's just give the user a better error message\r\n\r\nFixes #8216 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8225/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8225/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8223",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8223/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8223/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8223/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8223",
        "id": 1954361210,
        "node_id": "PR_kwDOIWuq585dYt4X",
        "number": 8223,
        "title": "Add Bedrock LLM",
        "user": {
            "login": "neil-botelho",
            "id": 116251564,
            "node_id": "U_kgDOBu3brA",
            "avatar_url": "https://avatars.githubusercontent.com/u/116251564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neil-botelho",
            "html_url": "https://github.com/neil-botelho",
            "followers_url": "https://api.github.com/users/neil-botelho/followers",
            "following_url": "https://api.github.com/users/neil-botelho/following{/other_user}",
            "gists_url": "https://api.github.com/users/neil-botelho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neil-botelho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neil-botelho/subscriptions",
            "organizations_url": "https://api.github.com/users/neil-botelho/orgs",
            "repos_url": "https://api.github.com/users/neil-botelho/repos",
            "events_url": "https://api.github.com/users/neil-botelho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neil-botelho/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-20T14:02:42Z",
        "updated_at": "2023-10-21T20:16:46Z",
        "closed_at": "2023-10-21T20:16:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8223",
            "html_url": "https://github.com/run-llama/llama_index/pull/8223",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8223.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8223.patch",
            "merged_at": "2023-10-21T20:16:45Z"
        },
        "body": "# Description\r\nThis commit adds support for bedrock LLMs. I've added unit tests for basic and streaming functionality.  A couple of notes on some design decisions I've made that you may want done differently:\r\n\r\n1. the Anthropic model requires the prompt to start with \"Human:\" and end with \"Assistant:\". But boto3 gives very detailed error messages for these cases. So I don't raise an error if `complete` is called when using an Anthropic model, I allow boto3 to raise the error. \r\n1. In Bedrock.metadata I've set is_chat_model to be False, based on it's definition in the LLMMetadata class. All calls to bedrock models take a string prompt as input, they don't accept a series of messages. But some models(eg. Anthropic) are technically chat models. \r\n\r\nLet me know if either of these are wrong, I'm happy to update the PR\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8223/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8223/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8222",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8222/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8222/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8222/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8222",
        "id": 1953905481,
        "node_id": "I_kwDOIWuq5850djtJ",
        "number": 8222,
        "title": "[Feature Request]: How to use the multimodal example with llava-13b",
        "user": {
            "login": "smyja",
            "id": 20070770,
            "node_id": "MDQ6VXNlcjIwMDcwNzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20070770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smyja",
            "html_url": "https://github.com/smyja",
            "followers_url": "https://api.github.com/users/smyja/followers",
            "following_url": "https://api.github.com/users/smyja/following{/other_user}",
            "gists_url": "https://api.github.com/users/smyja/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smyja/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smyja/subscriptions",
            "organizations_url": "https://api.github.com/users/smyja/orgs",
            "repos_url": "https://api.github.com/users/smyja/repos",
            "events_url": "https://api.github.com/users/smyja/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smyja/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-10-20T09:35:05Z",
        "updated_at": "2023-10-29T15:33:35Z",
        "closed_at": "2023-10-29T15:20:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nAn example on using llava-13b and llamaindex would be great, Here is the model available on [replicate](https://replicate.com/yorickvp/llava-13b/)\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8222/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8222/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8221",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8221/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8221/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8221/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8221",
        "id": 1953828545,
        "node_id": "I_kwDOIWuq5850dQ7B",
        "number": 8221,
        "title": "[Feature Request]: Support for pydantic v2",
        "user": {
            "login": "ierehon1905",
            "id": 31146334,
            "node_id": "MDQ6VXNlcjMxMTQ2MzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/31146334?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ierehon1905",
            "html_url": "https://github.com/ierehon1905",
            "followers_url": "https://api.github.com/users/ierehon1905/followers",
            "following_url": "https://api.github.com/users/ierehon1905/following{/other_user}",
            "gists_url": "https://api.github.com/users/ierehon1905/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ierehon1905/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ierehon1905/subscriptions",
            "organizations_url": "https://api.github.com/users/ierehon1905/orgs",
            "repos_url": "https://api.github.com/users/ierehon1905/repos",
            "events_url": "https://api.github.com/users/ierehon1905/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ierehon1905/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-20T08:48:49Z",
        "updated_at": "2023-10-26T18:48:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nMigrate to pydantic v2. I noticed there is already a feature branch with related name. https://github.com/run-llama/llama_index/tree/support-pydantic-v2 . But I do not know if its alive\n\n### Reason\n\nI do not know.\n\n### Value of Feature\n\nPydantic v1 iss absolete",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8221/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8221/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8220",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8220/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8220/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8220/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8220",
        "id": 1953746095,
        "node_id": "I_kwDOIWuq5850c8yv",
        "number": 8220,
        "title": "[Question]: How to serialize and deserialize QueryResponse object ? ",
        "user": {
            "login": "projects-g",
            "id": 63178974,
            "node_id": "MDQ6VXNlcjYzMTc4OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/63178974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/projects-g",
            "html_url": "https://github.com/projects-g",
            "followers_url": "https://api.github.com/users/projects-g/followers",
            "following_url": "https://api.github.com/users/projects-g/following{/other_user}",
            "gists_url": "https://api.github.com/users/projects-g/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/projects-g/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/projects-g/subscriptions",
            "organizations_url": "https://api.github.com/users/projects-g/orgs",
            "repos_url": "https://api.github.com/users/projects-g/repos",
            "events_url": "https://api.github.com/users/projects-g/events{/privacy}",
            "received_events_url": "https://api.github.com/users/projects-g/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-20T07:57:17Z",
        "updated_at": "2023-10-24T06:32:25Z",
        "closed_at": "2023-10-24T06:32:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am executing the llama index workflow in a remote machine and I need to send back all the parameters of the response like text, node info, metadata, etc. I want to serialize before sending and load it back into an object to retain/work with all the info from the response. But I cant seem to do it currently.\r\n\r\nIs there a clean way to do this ?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8220/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8220/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8219",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8219/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8219/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8219/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8219",
        "id": 1953684314,
        "node_id": "I_kwDOIWuq5850ctta",
        "number": 8219,
        "title": "[Feature Request]: SpeedUp chatGPT training and Q&A process using GPU",
        "user": {
            "login": "gaurang12041999",
            "id": 60000566,
            "node_id": "MDQ6VXNlcjYwMDAwNTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/60000566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaurang12041999",
            "html_url": "https://github.com/gaurang12041999",
            "followers_url": "https://api.github.com/users/gaurang12041999/followers",
            "following_url": "https://api.github.com/users/gaurang12041999/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaurang12041999/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaurang12041999/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaurang12041999/subscriptions",
            "organizations_url": "https://api.github.com/users/gaurang12041999/orgs",
            "repos_url": "https://api.github.com/users/gaurang12041999/repos",
            "events_url": "https://api.github.com/users/gaurang12041999/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaurang12041999/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-20T07:14:45Z",
        "updated_at": "2023-10-20T11:39:17Z",
        "closed_at": "2023-10-20T11:39:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nHii Jerry Liu,\r\n\r\nI am doing ChatGPT integration with my chatbot and I am using the Llama index for it. But the big question is speed. It's taking too much time to answer the questions. It would be great if you could add GPU support to the library. \r\n\r\nThanks,\r\nGaurang Dealvadiya\r\n\r\n### Reason\r\n\r\n_No response_\r\n\r\n### Value of Feature\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8219/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8219/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8218",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8218/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8218/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8218/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8218",
        "id": 1953578711,
        "node_id": "I_kwDOIWuq5850cT7X",
        "number": 8218,
        "title": "[Question]: Nvidia Triton/TensorRT support ",
        "user": {
            "login": "pranavbhat12",
            "id": 54463581,
            "node_id": "MDQ6VXNlcjU0NDYzNTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/54463581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavbhat12",
            "html_url": "https://github.com/pranavbhat12",
            "followers_url": "https://api.github.com/users/pranavbhat12/followers",
            "following_url": "https://api.github.com/users/pranavbhat12/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavbhat12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavbhat12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavbhat12/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavbhat12/orgs",
            "repos_url": "https://api.github.com/users/pranavbhat12/repos",
            "events_url": "https://api.github.com/users/pranavbhat12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavbhat12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-20T05:48:50Z",
        "updated_at": "2023-10-24T06:32:24Z",
        "closed_at": "2023-10-24T06:32:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIs there any support to wrap Triton server/TensorRT hosted models in llamaindex ? Not able to find enough documentation or support for this.Thankyou.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8218/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8218/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8217",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8217/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8217/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8217/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8217",
        "id": 1953432708,
        "node_id": "I_kwDOIWuq5850bwSE",
        "number": 8217,
        "title": "[Bug]: llama_new_context_with_model: ggml_metal_init() failed",
        "user": {
            "login": "steve36871",
            "id": 96456050,
            "node_id": "U_kgDOBb_Ncg",
            "avatar_url": "https://avatars.githubusercontent.com/u/96456050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/steve36871",
            "html_url": "https://github.com/steve36871",
            "followers_url": "https://api.github.com/users/steve36871/followers",
            "following_url": "https://api.github.com/users/steve36871/following{/other_user}",
            "gists_url": "https://api.github.com/users/steve36871/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/steve36871/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/steve36871/subscriptions",
            "organizations_url": "https://api.github.com/users/steve36871/orgs",
            "repos_url": "https://api.github.com/users/steve36871/repos",
            "events_url": "https://api.github.com/users/steve36871/events{/privacy}",
            "received_events_url": "https://api.github.com/users/steve36871/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-20T03:18:54Z",
        "updated_at": "2023-10-20T03:23:06Z",
        "closed_at": "2023-10-20T03:20:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nThis bug seems related to the Macbook GPU. I have attached the Github issue from llama-cpp-python that I think is relevant. Still filing it here as well, because I am not sure how to configure llama-index such that it works (even if only using the CPU).\n\n### Version\n\n0.8.47\n\n### Steps to Reproduce\n\nQuery a VectorStoreEngine\n\n### Relevant Logs/Tracbacks\n\n```shell\nhttps://github.com/ggerganov/llama.cpp/issues/3129\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8217/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8217/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8216",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8216/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8216/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8216/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8216",
        "id": 1953426997,
        "node_id": "I_kwDOIWuq5850bu41",
        "number": 8216,
        "title": "[Bug]: Exception condition leads to download of an llm ",
        "user": {
            "login": "ethan0807",
            "id": 43458694,
            "node_id": "MDQ6VXNlcjQzNDU4Njk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/43458694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethan0807",
            "html_url": "https://github.com/ethan0807",
            "followers_url": "https://api.github.com/users/ethan0807/followers",
            "following_url": "https://api.github.com/users/ethan0807/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethan0807/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethan0807/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethan0807/subscriptions",
            "organizations_url": "https://api.github.com/users/ethan0807/orgs",
            "repos_url": "https://api.github.com/users/ethan0807/repos",
            "events_url": "https://api.github.com/users/ethan0807/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethan0807/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-20T03:11:17Z",
        "updated_at": "2023-10-20T22:33:56Z",
        "closed_at": "2023-10-20T22:33:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nCurrently llama_index will default to use OpenAI if not set explicitly. However, if a ValueError gets thrown when trying to resolve to OpenAI, it will then try to use LlamaCPP which by default is hard coded to download a quantized llama2 13b model from TheBloke via huggingface. I would not expect that an openai config issue that throws a ValueError would lead to automatically downloading an llm to the local system. \r\n\r\nSuggest error just be written out.\r\n\r\nThanks!\n\n### Version\n\n0.8.47\n\n### Steps to Reproduce\n\n# Just want to do a simple embedding\r\n\r\nmodel = OpenAIEmbedding(api_key=\"mykey\")\r\ndoc = Document(text=\"Hello World\")\r\nservice_context = ServiceContext.from_defaults(embed_model=model)\r\nindex = VectorStoreIndex.from_documents(documents=[doc], service_context=service_context)\r\n\r\n# This triggers a 7 gig download of a chat llm to my local system.  Code from llms -> utils.py:\r\n\r\ndef resolve_llm(llm: Optional[LLMType] = None) -> LLM:\r\n    \"\"\"Resolve LLM from string or LLM instance.\"\"\"\r\n    if llm == \"default\":\r\n        # return default OpenAI model. If it fails, return LlamaCPP\r\n        try:\r\n            llm = OpenAI()\r\n        except ValueError as e:\r\n            llm = \"local\"\r\n            print(\r\n                \"******\\n\"\r\n                \"Could not load OpenAI model. Using default LlamaCPP=llama2-13b-chat. \"\r\n                \"If you intended to use OpenAI, please check your OPENAI_API_KEY.\\n\"\r\n                \"Original error:\\n\"\r\n                f\"{e!s}\"\r\n                \"\\n******\"\r\n            )\n\n### Relevant Logs/Tracbacks\n\n```shell\n******\r\nCould not load OpenAI model. Using default LlamaCPP=llama2-13b-chat. If you intended to use OpenAI, please check your OPENAI_API_KEY.\r\nOriginal error:\r\nNo API key found for OpenAI.\r\nPlease set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\nAPI keys can be found or created at https://platform.openai.com/account/api-keys\r\n\r\n******\r\nDownloading url https://huggingface.co/TheBloke/Llama-2-13B-chat-GGUF/resolve/main/llama-2-13b-chat.Q4_0.gguf to path ...models\\llama_index\\models\r\nma-2-13b-chat.Q4_0.gguf\r\ntotal size (MB): 7365.83\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8216/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8216/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8215",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8215/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8215/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8215/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8215",
        "id": 1953371007,
        "node_id": "PR_kwDOIWuq585dVWmT",
        "number": 8215,
        "title": "Small typo correction for simple observability tool",
        "user": {
            "login": "BrianMcBrayer",
            "id": 7584774,
            "node_id": "MDQ6VXNlcjc1ODQ3NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7584774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BrianMcBrayer",
            "html_url": "https://github.com/BrianMcBrayer",
            "followers_url": "https://api.github.com/users/BrianMcBrayer/followers",
            "following_url": "https://api.github.com/users/BrianMcBrayer/following{/other_user}",
            "gists_url": "https://api.github.com/users/BrianMcBrayer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BrianMcBrayer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BrianMcBrayer/subscriptions",
            "organizations_url": "https://api.github.com/users/BrianMcBrayer/orgs",
            "repos_url": "https://api.github.com/users/BrianMcBrayer/repos",
            "events_url": "https://api.github.com/users/BrianMcBrayer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BrianMcBrayer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-20T02:18:59Z",
        "updated_at": "2023-10-20T22:26:27Z",
        "closed_at": "2023-10-20T22:26:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8215",
            "html_url": "https://github.com/run-llama/llama_index/pull/8215",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8215.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8215.patch",
            "merged_at": "2023-10-20T22:26:27Z"
        },
        "body": "# Description\r\n\r\nThere was a tiny typo around the documentation for the simple observability tool. Nothing major at all\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8215/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8215/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8214",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8214/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8214/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8214/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8214",
        "id": 1953246428,
        "node_id": "PR_kwDOIWuq585dU7hQ",
        "number": 8214,
        "title": "Docs reorg v0",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-20T00:12:46Z",
        "updated_at": "2023-10-20T00:16:20Z",
        "closed_at": "2023-10-20T00:16:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8214",
            "html_url": "https://github.com/run-llama/llama_index/pull/8214",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8214.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8214.patch",
            "merged_at": "2023-10-20T00:16:20Z"
        },
        "body": "![image](https://github.com/run-llama/llama_index/assets/185893/dd33b94a-72cf-43f3-939c-f4ffc7c824ec)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8214/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8214/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8213",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8213/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8213/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8213/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8213",
        "id": 1953152802,
        "node_id": "I_kwDOIWuq5850ar8i",
        "number": 8213,
        "title": "[Bug]: Predibase `prompt` method deprecation",
        "user": {
            "login": "connor-mccorm",
            "id": 97468934,
            "node_id": "U_kgDOBc9CBg",
            "avatar_url": "https://avatars.githubusercontent.com/u/97468934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/connor-mccorm",
            "html_url": "https://github.com/connor-mccorm",
            "followers_url": "https://api.github.com/users/connor-mccorm/followers",
            "following_url": "https://api.github.com/users/connor-mccorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/connor-mccorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/connor-mccorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/connor-mccorm/subscriptions",
            "organizations_url": "https://api.github.com/users/connor-mccorm/orgs",
            "repos_url": "https://api.github.com/users/connor-mccorm/repos",
            "events_url": "https://api.github.com/users/connor-mccorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/connor-mccorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-19T22:27:21Z",
        "updated_at": "2023-10-21T20:25:28Z",
        "closed_at": "2023-10-21T20:25:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nPredibase has updated it's prompt method and deprecated the old method. In response, I have raised [this pr](https://github.com/run-llama/llama_index/pull/8211) to fix the issue.\n\n### Version\n\nlatest\n\n### Steps to Reproduce\n\nTry to instantiate Predibase LLM\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8213/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8213/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8212",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8212/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8212/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8212/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8212",
        "id": 1953112884,
        "node_id": "PR_kwDOIWuq585dUePs",
        "number": 8212,
        "title": "Clarifications/simplifications in S3 and Redis notebooks",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-19T21:50:42Z",
        "updated_at": "2023-10-21T19:52:31Z",
        "closed_at": "2023-10-21T19:52:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8212",
            "html_url": "https://github.com/run-llama/llama_index/pull/8212",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8212.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8212.patch",
            "merged_at": "2023-10-21T19:52:30Z"
        },
        "body": "# Description\r\n\r\nClarifications and simplifications in S3 and Redis notebooks. Also fixes https://github.com/run-llama/llama_index/issues/8205\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8212/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8212/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8211",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8211/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8211/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8211/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8211",
        "id": 1953091124,
        "node_id": "PR_kwDOIWuq585dUZW3",
        "number": 8211,
        "title": "Predibase LLM Integration - prompt method deprecation update",
        "user": {
            "login": "connor-mccorm",
            "id": 97468934,
            "node_id": "U_kgDOBc9CBg",
            "avatar_url": "https://avatars.githubusercontent.com/u/97468934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/connor-mccorm",
            "html_url": "https://github.com/connor-mccorm",
            "followers_url": "https://api.github.com/users/connor-mccorm/followers",
            "following_url": "https://api.github.com/users/connor-mccorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/connor-mccorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/connor-mccorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/connor-mccorm/subscriptions",
            "organizations_url": "https://api.github.com/users/connor-mccorm/orgs",
            "repos_url": "https://api.github.com/users/connor-mccorm/repos",
            "events_url": "https://api.github.com/users/connor-mccorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/connor-mccorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-19T21:34:17Z",
        "updated_at": "2023-10-23T15:51:13Z",
        "closed_at": "2023-10-21T20:25:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8211",
            "html_url": "https://github.com/run-llama/llama_index/pull/8211",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8211.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8211.patch",
            "merged_at": "2023-10-21T20:25:27Z"
        },
        "body": "# Description\r\n\r\nWe updated the method for prompting an LLM with the latest Predibase SDK release and deprecated the old method. This PR addresses these changes",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8211/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8211/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8210",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8210/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8210/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8210/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8210",
        "id": 1953087481,
        "node_id": "I_kwDOIWuq5850ab_5",
        "number": 8210,
        "title": "[Feature Request]: `SimpleDirectoryReader` reading from AWS S3",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6129428377,
                "node_id": "LA_kwDOIWuq588AAAABbVenmQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/request%20contribution%20board",
                "name": "request contribution board",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-10-19T21:30:46Z",
        "updated_at": "2023-12-05T15:33:08Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nhttps://docs.llamaindex.ai/en/stable/core_modules/data_modules/storage/save_load.html#using-a-remote-backend\r\n\r\nThis demo has `SimpleDirectoryReader` reading in documents from local storage.  It would be cool if `SimpleDirectoryReader` could directly integrate with AWS S3 via `s3fs.S3FileSystem`.\r\n\r\n### Reason\r\n\r\nNot having to store raw corpus on local filesystem.\r\n\r\n### Value of Feature\r\n\r\n- Increased flexibility when creating `VectorStore`s\r\n- Symmetry with `StorageContext`'s support for `fs` as an input",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8210/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8210/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8209",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8209/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8209/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8209/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8209",
        "id": 1953021980,
        "node_id": "PR_kwDOIWuq585dUKHm",
        "number": 8209,
        "title": "Fix release publishing",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-19T20:40:27Z",
        "updated_at": "2023-10-19T20:40:36Z",
        "closed_at": "2023-10-19T20:40:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8209",
            "html_url": "https://github.com/run-llama/llama_index/pull/8209",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8209.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8209.patch",
            "merged_at": "2023-10-19T20:40:35Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8209/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8209/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8208",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8208/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8208/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8208/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8208",
        "id": 1953013998,
        "node_id": "PR_kwDOIWuq585dUIW3",
        "number": 8208,
        "title": "add gradient fine tuning engine",
        "user": {
            "login": "lilwilsond2",
            "id": 13373810,
            "node_id": "MDQ6VXNlcjEzMzczODEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/13373810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lilwilsond2",
            "html_url": "https://github.com/lilwilsond2",
            "followers_url": "https://api.github.com/users/lilwilsond2/followers",
            "following_url": "https://api.github.com/users/lilwilsond2/following{/other_user}",
            "gists_url": "https://api.github.com/users/lilwilsond2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lilwilsond2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lilwilsond2/subscriptions",
            "organizations_url": "https://api.github.com/users/lilwilsond2/orgs",
            "repos_url": "https://api.github.com/users/lilwilsond2/repos",
            "events_url": "https://api.github.com/users/lilwilsond2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lilwilsond2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-19T20:34:40Z",
        "updated_at": "2023-10-21T23:14:49Z",
        "closed_at": "2023-10-21T23:14:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8208",
            "html_url": "https://github.com/run-llama/llama_index/pull/8208",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8208.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8208.patch",
            "merged_at": "2023-10-21T23:14:49Z"
        },
        "body": "# Description\r\nadds gradient fine tuning engine\r\n\r\n\r\n## Type of Change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [ x ] I have performed a self-review of my own code\r\n- [ x ] I have commented my code, particularly in hard-to-understand areas\r\n- [ x ] I have made corresponding changes to the documentation\r\n- [ x ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ x ] New and existing unit tests pass locally with my changes\r\n- [ x ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8208/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8208/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8207",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8207/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8207/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8207/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8207",
        "id": 1952968285,
        "node_id": "I_kwDOIWuq5850Z-5d",
        "number": 8207,
        "title": "[Feature Request]: integrate `setuptools_scm` for better versioning from Git",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-19T20:00:51Z",
        "updated_at": "2023-11-14T19:58:42Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nCurrently, there's two versioning systems:\r\n\r\n1. Git repo tags (lagging right now at v0.8.42)\r\n2. Manual versioning by editing `pyproject.toml`\r\n\r\nLets sync these two by using `setuptools_scm` :rocket\n\n### Reason\n\nI like to use Git tags in my links, to ensure they always work (whereas `main` branch-based links may not always work).\r\n\r\nIt would be nice to keep these in sync\n\n### Value of Feature\n\nYou use GitHub releases to publish new versions, instead of manually changing the version in `pyproject.toml`.  It's more automated and seamless.  Also, no need to manually create `CHANGELOG`, it's just done with GitHub releases.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8207/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8207/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8206",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8206/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8206/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8206/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8206",
        "id": 1952894099,
        "node_id": "I_kwDOIWuq5850ZsyT",
        "number": 8206,
        "title": "[Bug]: index.as_chat_engine",
        "user": {
            "login": "XariZaru",
            "id": 18338434,
            "node_id": "MDQ6VXNlcjE4MzM4NDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/18338434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XariZaru",
            "html_url": "https://github.com/XariZaru",
            "followers_url": "https://api.github.com/users/XariZaru/followers",
            "following_url": "https://api.github.com/users/XariZaru/following{/other_user}",
            "gists_url": "https://api.github.com/users/XariZaru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XariZaru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XariZaru/subscriptions",
            "organizations_url": "https://api.github.com/users/XariZaru/orgs",
            "repos_url": "https://api.github.com/users/XariZaru/repos",
            "events_url": "https://api.github.com/users/XariZaru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XariZaru/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-10-19T19:07:01Z",
        "updated_at": "2023-10-25T21:23:45Z",
        "closed_at": "2023-10-21T05:34:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nVectoreStoreIndex.as_chat_engine method not taking Streaming, k_similarity, or qa_template parameters anymore.\r\n\r\nNot sure if this was a recent update, but none of those initializer parameters are working anymore.\n\n### Version\n\n0.8.46\n\n### Steps to Reproduce\n\nCreate a VectoreStoreIndex. Call as_chat_engine method on the index.\r\n\r\n```python\r\nsc = StorageContext.from_defaults(persist_dir=PERSIST_DIR)\r\n\r\n    try:\r\n        key = drum.RuntimeParameters.get(\"OPENAI_API_KEY\")[\"apiToken\"]\r\n    except:\r\n        key = os.environ[\"OPENAI_API_KEY\"]\r\n    \r\n    try:\r\n        index = load_index_from_storage(storage_context=sc, index_id='vector_index')\r\n    \r\n        template_str = \"\"\"We have provided context information below. If you don't know the answer, just say you don't know. Don't make up an answer. Do not mention you are an AI language model. \r\n        Always say to refer to the respective department for extra information. Don't mention anything about the provided context in your response. \\n\"\r\n        \"---------------------\\n\"\r\n        \"{context_str}\"\r\n        \"\\n---------------------\\n\"\r\n        \"Do not give me an answer if it is not mentioned in the context as a fact. Given this information, please answer the question: {query_str}\\n\"\"\"\r\n    \r\n        qa_template = Prompt(template_str)\r\n        model = index.as_chat_engine(streaming=False\r\n                                                  ,similarity_top_k=2\r\n                                                  , text_qa_template=qa_template)\r\n```\r\n\n\n### Relevant Logs/Tracbacks\n\n```shell\nError: __init__() got an unexpected keyword argument 'streaming'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8206/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8206/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8205",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8205/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8205/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8205/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8205",
        "id": 1952882831,
        "node_id": "I_kwDOIWuq5850ZqCP",
        "number": 8205,
        "title": "[Documentation]: more info on `set_index_id` in S3 notebook",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-19T19:00:04Z",
        "updated_at": "2023-10-19T23:01:12Z",
        "closed_at": "2023-10-19T23:01:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\n> ```python\r\n> # save index to remote blob storage\r\n> index.set_index_id(\"vector_index\")\r\n> ```\r\n\r\nWhy is this `set_index_id` call in the S3 remote backend notebook?\r\n\r\nHappy to add this to the notebook, but I am thinking it's unnecessary\n\n### Documentation Link\n\nhttps://docs.llamaindex.ai/en/stable/core_modules/data_modules/storage/save_load.html#using-a-remote-backend",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8205/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8205/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8204",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8204/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8204/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8204/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8204",
        "id": 1952725363,
        "node_id": "I_kwDOIWuq5850ZDlz",
        "number": 8204,
        "title": "[Bug]: QueryFusionRetriever doesn't work in async context",
        "user": {
            "login": "ryanpeach",
            "id": 14838729,
            "node_id": "MDQ6VXNlcjE0ODM4NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14838729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanpeach",
            "html_url": "https://github.com/ryanpeach",
            "followers_url": "https://api.github.com/users/ryanpeach/followers",
            "following_url": "https://api.github.com/users/ryanpeach/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanpeach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanpeach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanpeach/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanpeach/orgs",
            "repos_url": "https://api.github.com/users/ryanpeach/repos",
            "events_url": "https://api.github.com/users/ryanpeach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanpeach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-10-19T17:12:47Z",
        "updated_at": "2023-10-24T19:09:11Z",
        "closed_at": "2023-10-24T07:11:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nIf you run QueryFusionRetriever with an await and aretrieve you get an error related to there already being an async loop. I have tried two solutions for your review, one works one doesn't.\r\n\r\nDoesn't work, but it'd be nice to fix it at this level. However, this function is only used one place. Note, you can't even reach nest_asyncio unless show_progress is True, which is default False and never overwritten:\r\n\r\nhttps://github.com/OnScale/llama_index/pull/5\r\n\r\nWorks but has a lot of code duplication:\r\n\r\nhttps://github.com/OnScale/llama_index/pull/6\n\n### Version\n\nv0.8.42\n\n### Steps to Reproduce\n\n```python\r\nasync def main():\r\n    await QueryFusionRetriever(\r\n            retrievers=...,\r\n            llm=...,\r\n            similarity_top_k=2,\r\n            num_queries=4,\r\n            async=True,\r\n            verbose=True,\r\n        ).aretrieve(query.content)\r\n\r\nasyncio.run(main())\r\n```\r\n\r\n```python\r\nasync def main():\r\n    QueryFusionRetriever(\r\n            retrievers=...,\r\n            llm=...,\r\n            similarity_top_k=2,\r\n            num_queries=4,\r\n            async=True,\r\n            verbose=True,\r\n        ).retrieve(query.content)\r\n\r\nasyncio.run(main())\r\n```\r\n\r\nNeither of these will work.\n\n### Relevant Logs/Tracbacks\n\n```shell\nAt this point I've lost the failure logs.\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8204/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8204/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8203",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8203/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8203/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8203/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8203",
        "id": 1952675664,
        "node_id": "PR_kwDOIWuq585dS-Pk",
        "number": 8203,
        "title": "An alternative approach that doesnt use nest_asyncio",
        "user": {
            "login": "ryanpeach",
            "id": 14838729,
            "node_id": "MDQ6VXNlcjE0ODM4NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14838729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanpeach",
            "html_url": "https://github.com/ryanpeach",
            "followers_url": "https://api.github.com/users/ryanpeach/followers",
            "following_url": "https://api.github.com/users/ryanpeach/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanpeach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanpeach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanpeach/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanpeach/orgs",
            "repos_url": "https://api.github.com/users/ryanpeach/repos",
            "events_url": "https://api.github.com/users/ryanpeach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanpeach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-19T16:42:52Z",
        "updated_at": "2023-10-19T16:43:08Z",
        "closed_at": "2023-10-19T16:43:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8203",
            "html_url": "https://github.com/run-llama/llama_index/pull/8203",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8203.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8203.patch",
            "merged_at": null
        },
        "body": "# Description\n\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\n\nFixes # (issue)\n\n## Type of Change\n\nPlease delete options that are not relevant.\n\n- [ ] Bug fix (non-breaking change which fixes an issue)\n- [ ] New feature (non-breaking change which adds functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n- [ ] This change requires a documentation update\n\n# How Has This Been Tested?\n\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\n\n- [ ] Added new unit/integration tests\n- [ ] Added new notebook (that tests end-to-end)\n- [ ] I stared at the code and made sure it makes sense\n\n# Suggested Checklist:\n\n- [ ] I have performed a self-review of my own code\n- [ ] I have commented my code, particularly in hard-to-understand areas\n- [ ] I have made corresponding changes to the documentation\n- [ ] My changes generate no new warnings\n- [ ] I have added tests that prove my fix is effective or that my feature works\n- [ ] New and existing unit tests pass locally with my changes\n- [ ] I ran `make format; make lint` to appease the lint gods\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8203/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8203/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8202",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8202/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8202/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8202/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8202",
        "id": 1952362498,
        "node_id": "I_kwDOIWuq5850XrAC",
        "number": 8202,
        "title": "[Question]: can tensorflow model be used with llamaindex ?",
        "user": {
            "login": "iriye",
            "id": 47598555,
            "node_id": "MDQ6VXNlcjQ3NTk4NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47598555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iriye",
            "html_url": "https://github.com/iriye",
            "followers_url": "https://api.github.com/users/iriye/followers",
            "following_url": "https://api.github.com/users/iriye/following{/other_user}",
            "gists_url": "https://api.github.com/users/iriye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iriye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iriye/subscriptions",
            "organizations_url": "https://api.github.com/users/iriye/orgs",
            "repos_url": "https://api.github.com/users/iriye/repos",
            "events_url": "https://api.github.com/users/iriye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iriye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-19T14:09:39Z",
        "updated_at": "2023-10-19T19:10:03Z",
        "closed_at": "2023-10-19T19:10:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\ncan tensorflow model be used with llamaindex ? model extension .ckpt , give a example used tensorflow model?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8202/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8202/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8201",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8201/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8201/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8201/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8201",
        "id": 1952287794,
        "node_id": "I_kwDOIWuq5850XYwy",
        "number": 8201,
        "title": "[Question]: Can a locally stored TensorFlow model be used with llamaindex?",
        "user": {
            "login": "iriye",
            "id": 47598555,
            "node_id": "MDQ6VXNlcjQ3NTk4NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47598555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iriye",
            "html_url": "https://github.com/iriye",
            "followers_url": "https://api.github.com/users/iriye/followers",
            "following_url": "https://api.github.com/users/iriye/following{/other_user}",
            "gists_url": "https://api.github.com/users/iriye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iriye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iriye/subscriptions",
            "organizations_url": "https://api.github.com/users/iriye/orgs",
            "repos_url": "https://api.github.com/users/iriye/repos",
            "events_url": "https://api.github.com/users/iriye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iriye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-19T13:38:16Z",
        "updated_at": "2023-10-19T19:09:32Z",
        "closed_at": "2023-10-19T19:09:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nCan a locally stored TensorFlow model be used with llamaindex?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8201/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8201/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8200",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8200/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8200/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8200/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8200",
        "id": 1951860028,
        "node_id": "I_kwDOIWuq5850VwU8",
        "number": 8200,
        "title": "[Feature Request]: Multiple value filters in Qdrant Vectorstore",
        "user": {
            "login": "AravAct",
            "id": 122975761,
            "node_id": "U_kgDOB1R2EQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/122975761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AravAct",
            "html_url": "https://github.com/AravAct",
            "followers_url": "https://api.github.com/users/AravAct/followers",
            "following_url": "https://api.github.com/users/AravAct/following{/other_user}",
            "gists_url": "https://api.github.com/users/AravAct/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AravAct/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AravAct/subscriptions",
            "organizations_url": "https://api.github.com/users/AravAct/orgs",
            "repos_url": "https://api.github.com/users/AravAct/repos",
            "events_url": "https://api.github.com/users/AravAct/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AravAct/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6129428377,
                "node_id": "LA_kwDOIWuq588AAAABbVenmQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/request%20contribution%20board",
                "name": "request contribution board",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-19T10:42:55Z",
        "updated_at": "2023-11-30T02:44:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\n**Qdrant Vector store Metadata filters**\r\n\r\nAllow users to have multiple values for the same key\r\neg : {'key':'country','values':{'usa','uk'}\r\nQdrant has already implemented this in their python client, allows adding MatchAny to the filters. LlamaIndex currently supports only single value for a key\r\nhttps://qdrant.tech/documentation/concepts/filtering/#match-any \n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8200/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8200/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8199",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8199/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8199/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8199/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8199",
        "id": 1951602132,
        "node_id": "PR_kwDOIWuq585dPWxH",
        "number": 8199,
        "title": "[version] bump version to 0.8.47",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-19T08:33:53Z",
        "updated_at": "2023-10-19T19:24:03Z",
        "closed_at": "2023-10-19T19:24:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8199",
            "html_url": "https://github.com/run-llama/llama_index/pull/8199",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8199.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8199.patch",
            "merged_at": "2023-10-19T19:24:02Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8199/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8199/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]