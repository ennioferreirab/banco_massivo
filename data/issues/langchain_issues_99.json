[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3994",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3994/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3994/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3994/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3994",
        "id": 1692979677,
        "node_id": "I_kwDOIPDwls5k6NHd",
        "number": 3994,
        "title": "First time install of v 0.0.155, errors in build wheel ",
        "user": {
            "login": "Boldingbroke",
            "id": 7397536,
            "node_id": "MDQ6VXNlcjczOTc1MzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7397536?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Boldingbroke",
            "html_url": "https://github.com/Boldingbroke",
            "followers_url": "https://api.github.com/users/Boldingbroke/followers",
            "following_url": "https://api.github.com/users/Boldingbroke/following{/other_user}",
            "gists_url": "https://api.github.com/users/Boldingbroke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Boldingbroke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Boldingbroke/subscriptions",
            "organizations_url": "https://api.github.com/users/Boldingbroke/orgs",
            "repos_url": "https://api.github.com/users/Boldingbroke/repos",
            "events_url": "https://api.github.com/users/Boldingbroke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Boldingbroke/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-02T19:27:03Z",
        "updated_at": "2023-05-03T20:47:16Z",
        "closed_at": "2023-05-03T20:47:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am installing LangChain for the first time. I opened a command box as Administrator to make sure the permissions were solid. It installed the build dependencies, then I got \"ERROR: Command errored out with exit status 1:\r\n   command: 'c:\\python27\\python.exe' 'c:\\python27\\lib\\site-packages\\pip\\_vendor\\pep517\\_in_process.py' get_requires_for_build_wheel 'c:\\users\\boldi\\appdata\\local\\temp\\tmpestjm8'\" See attached screenshot. \r\n![LangChain Error](https://user-images.githubusercontent.com/7397536/235765715-3572adff-bb1c-4586-b8c0-0781e1f5202b.JPG)\r\n\r\nI have had no problems installing other packages like OpenAI today. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3994/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3994/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3993",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3993/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3993/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3993/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3993",
        "id": 1692959298,
        "node_id": "PR_kwDOIPDwls5PnW3d",
        "number": 3993,
        "title": "docs: remove stdout from pip install (for gymnasium)",
        "user": {
            "login": "mbchang",
            "id": 6439365,
            "node_id": "MDQ6VXNlcjY0MzkzNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6439365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbchang",
            "html_url": "https://github.com/mbchang",
            "followers_url": "https://api.github.com/users/mbchang/followers",
            "following_url": "https://api.github.com/users/mbchang/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbchang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbchang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbchang/subscriptions",
            "organizations_url": "https://api.github.com/users/mbchang/orgs",
            "repos_url": "https://api.github.com/users/mbchang/repos",
            "events_url": "https://api.github.com/users/mbchang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbchang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T19:10:53Z",
        "updated_at": "2023-05-03T04:51:41Z",
        "closed_at": "2023-05-03T04:51:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3993",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3993",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3993.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3993.patch",
            "merged_at": "2023-05-03T04:51:41Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3993/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3993/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3992",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3992/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3992/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3992/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3992",
        "id": 1692950910,
        "node_id": "I_kwDOIPDwls5k6GF-",
        "number": 3992,
        "title": "OpenAIEmbeddings can not take headers",
        "user": {
            "login": "aakashrshah",
            "id": 3517550,
            "node_id": "MDQ6VXNlcjM1MTc1NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3517550?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aakashrshah",
            "html_url": "https://github.com/aakashrshah",
            "followers_url": "https://api.github.com/users/aakashrshah/followers",
            "following_url": "https://api.github.com/users/aakashrshah/following{/other_user}",
            "gists_url": "https://api.github.com/users/aakashrshah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aakashrshah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aakashrshah/subscriptions",
            "organizations_url": "https://api.github.com/users/aakashrshah/orgs",
            "repos_url": "https://api.github.com/users/aakashrshah/repos",
            "events_url": "https://api.github.com/users/aakashrshah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aakashrshah/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T19:04:56Z",
        "updated_at": "2023-10-05T16:10:08Z",
        "closed_at": "2023-10-05T16:10:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Module: `embeddings/openai.py`\r\n\r\nPreface: While using the AzureOpenAI or a custom model deployment on Azure, I am unable to use the OpenAIEmbeddings as `pydantic` forbids passing extra arguments. Whereas this works perfectly fine with ChatOpenAI or OpenAI models.\r\n\r\nEnvironment Variables I am using - \r\n\r\n```\r\nOPENAI_LOG=info\r\nOPENAI_API_KEY=somestring\r\nOPENAI_API_TYPE=azure\r\nOPENAI_API_VERSION=2023-03-15-preview\r\nOPENAI_API_BASE=some-url\r\n```\r\n\r\nMy code to reproduce the error - \r\n\r\n```{python}\r\nDEPLOYMENT_FROM_MODEL = {\r\n    'text-embedding-ada-002': 'custom_embeddings'\r\n}\r\nmodel='text-embedding-ada-002'\r\nllm = OpenAIEmbeddings(\r\n    deployment=DEPLOYMENT_FROM_MODEL.get(model),\r\n    model=model,\r\n    headers={\r\n        \"azure-account-uri\": f\"https://{AZURE_ACCOUNT}.openai.azure.com\",\r\n        \"Authorization\": f\"Bearer {BEARER_TOKEN}\",\r\n    }\r\n)\r\n\r\nllm.embed_query(input_prompt)\r\n```\r\n\r\n\r\nErrors thrown:\r\n\r\n```\r\npydantic.error_wrappers.ValidationError: 2 validation errors for OpenAIEmbeddings\r\ndeployment\r\n  none is not an allowed value (type=type_error.none.not_allowed)\r\nheaders\r\n  extra fields not permitted (type=value_error.extra)\r\n```\r\n\r\n\r\nI tried changing the `embeddings/openai.py` and got them working by passing it as kwargs. Hopefully I can create a MR for it.\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3992/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3992/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3991",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3991/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3991/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3991/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3991",
        "id": 1692881402,
        "node_id": "I_kwDOIPDwls5k51H6",
        "number": 3991,
        "title": "Seeking solution for combined retrievers, or retrieving from multiple vectorstores with sources, to maintain separate Namespaces.",
        "user": {
            "login": "simonfromla",
            "id": 16441059,
            "node_id": "MDQ6VXNlcjE2NDQxMDU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/16441059?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simonfromla",
            "html_url": "https://github.com/simonfromla",
            "followers_url": "https://api.github.com/users/simonfromla/followers",
            "following_url": "https://api.github.com/users/simonfromla/following{/other_user}",
            "gists_url": "https://api.github.com/users/simonfromla/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simonfromla/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simonfromla/subscriptions",
            "organizations_url": "https://api.github.com/users/simonfromla/orgs",
            "repos_url": "https://api.github.com/users/simonfromla/repos",
            "events_url": "https://api.github.com/users/simonfromla/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simonfromla/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-02T18:14:32Z",
        "updated_at": "2023-06-28T03:31:58Z",
        "closed_at": "2023-06-09T02:14:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "It seems maintaining separate namespaces in your vector DB is helpful and/or necessary in making sure an LLM can answer compare/contrast questions that need to reference texts separated by dates like \"03/2023\" vs. \"03/2022\" without getting confused.  \r\n\r\nTo that end, there's a need to retrieve from multiple vectorstores, yet I can't find a straightforward solution.  \r\n\r\nI have tried a few things:  \r\n1. Extending the `ConversationalRetrievalChain` to accept a list of retrievers:  \r\n```\r\nclass MultiRetrieverConversationalRetrievalChain(ConversationalRetrievalChain):\r\n    \"\"\"Chain for chatting with multiple indexes.\"\"\"\r\n\r\n    retrievers: List[BaseRetriever]\r\n    \"\"\"Indexes to connect to.\"\"\"\r\n\r\n    def _get_docs(self, question: str, inputs: Dict[str, Any]) -> List[Document]:\r\n        all_docs = []\r\n        for retriever in self.retrievers:\r\n            docs = retriever.get_relevant_documents(question)\r\n            all_docs.extend(docs)\r\n        return self._reduce_tokens_below_limit(all_docs)\r\n\r\n    async def _aget_docs(self, question: str, inputs: Dict[str, Any]) -> List[Document]:\r\n        all_docs = []\r\n        for retriever in self.retrievers:\r\n            docs = await retriever.aget_relevant_documents(question)\r\n            all_docs.extend(docs)\r\n        return self._reduce_tokens_below_limit(all_docs)\r\n```\r\nThis became a bit unwieldy as it ran into validation errors with Pydantic, but I don't see why a more competent dev wouldn't be able to manage this.  \r\n\r\n2. I tried combining retrievers (suggestion from kapa.ai):  \r\n```\r\nembeddings = OpenAIEmbeddings()\r\nmarch_documents = Pinecone.from_existing_index(index_name=\"langchain2\", embedding=embeddings, namespace=\"March 2023\")\r\nfeb_documents = Pinecone.from_existing_index(index_name=\"langchain2\", embedding=embeddings, namespace=\"February 2023\")\r\n\r\ncombined_docs = feb_documents + march_documents\r\n# Create a RetrievalQAWithSourcesChain using the combined retriever\r\nchain = RetrievalQAWithSourcesChain.from_chain_type(OpenAI(temperature=0), chain_type=\"stuff\", retriever=combined_docs) \r\n# does not work as as_retriever() either\r\n``` \r\n\r\n3. Tried using an Agent with `VectorStoreRouterToolkit`, which seems to be built for this kind of task, yet provides terrible answers for some reason that I need to dive deeper into. Terrible answers being - does not listen when I instruct like \"Do not summarize, list everything about XYZ...\"\r\nFurther, I need/prefer the results from similarity_search, returning `top_k` for my use-case, which the agent doesn't seem to provide.  \r\n\r\nIs there a workaround to my problem? How do I maintain separation of namespaces, so that I can have the LLM answer questions about separate documents, and also be able to provide the source for the separate documents all from within a single chain? \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3991/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3991/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3990",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3990/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3990/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3990/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3990",
        "id": 1692877684,
        "node_id": "PR_kwDOIPDwls5PnFPK",
        "number": 3990,
        "title": "docs - updated document loaders notebooks",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-02T18:11:36Z",
        "updated_at": "2023-05-02T22:34:04Z",
        "closed_at": "2023-05-02T22:12:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3990",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3990",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3990.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3990.patch",
            "merged_at": "2023-05-02T22:12:13Z"
        },
        "body": "- Added links to the source sites with descriptions in consistent format\r\n- Added code to install correspondent python packages (where it was needed)\r\n- Fixed `example_data/facebook_chat.json` JSON (it was not the correct Json, which caused a parsing exception)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3990/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3990/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3989",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3989/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3989/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3989/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3989",
        "id": 1692873345,
        "node_id": "I_kwDOIPDwls5k5zKB",
        "number": 3989,
        "title": "Local hugging face model to search over docs",
        "user": {
            "login": "VedAustin",
            "id": 3083310,
            "node_id": "MDQ6VXNlcjMwODMzMTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3083310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VedAustin",
            "html_url": "https://github.com/VedAustin",
            "followers_url": "https://api.github.com/users/VedAustin/followers",
            "following_url": "https://api.github.com/users/VedAustin/following{/other_user}",
            "gists_url": "https://api.github.com/users/VedAustin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VedAustin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VedAustin/subscriptions",
            "organizations_url": "https://api.github.com/users/VedAustin/orgs",
            "repos_url": "https://api.github.com/users/VedAustin/repos",
            "events_url": "https://api.github.com/users/VedAustin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VedAustin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T18:09:07Z",
        "updated_at": "2023-05-16T05:31:24Z",
        "closed_at": "2023-05-16T05:31:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi .. I am currently into problems where I call the LLM to search over the local docs, I get this warning which never seems to stop\r\n```\r\nSetting `pad_token_id` to `eos_token_id`:0 for open-end generation.\r\nSetting `pad_token_id` to `eos_token_id`:0 for open-end generation.\r\nSetting `pad_token_id` to `eos_token_id`:0 for open-end generation.\r\n...\r\n```\r\nHere is my simple code:\r\n```python\r\nloader = TextLoader('state_of_the_union.txt')\r\ndocuments = loader.load()\r\n\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=100)\r\ndocs = text_splitter.split_documents(documents)\r\n\r\nfrom langchain.llms import HuggingFacePipeline\r\nfrom langchain.chains.question_answering import load_qa_chain\r\n\r\nllm = HuggingFacePipeline.from_model_id(model_id='stabilityai/stablelm-base-alpha-7b', task='text-generation', device=0, model_kwargs={\"temperature\":0, \"max_length\": 1024})\r\n\r\nquery = \"What did the President say about immigration?\"\r\nchain = load_qa_chain(llm, chain_type=\"map_reduce\")\r\nchain.run(input_documents=docs, question=query)\r\n```\r\n\r\nCurrently on 1 A100 with 80GB memory. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3989/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3989/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3988",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3988/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3988/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3988/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3988",
        "id": 1692856409,
        "node_id": "I_kwDOIPDwls5k5vBZ",
        "number": 3988,
        "title": "LangChain openAI callback doesn't allow finetuned models",
        "user": {
            "login": "maykcaldas",
            "id": 14205657,
            "node_id": "MDQ6VXNlcjE0MjA1NjU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/14205657?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maykcaldas",
            "html_url": "https://github.com/maykcaldas",
            "followers_url": "https://api.github.com/users/maykcaldas/followers",
            "following_url": "https://api.github.com/users/maykcaldas/following{/other_user}",
            "gists_url": "https://api.github.com/users/maykcaldas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maykcaldas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maykcaldas/subscriptions",
            "organizations_url": "https://api.github.com/users/maykcaldas/orgs",
            "repos_url": "https://api.github.com/users/maykcaldas/repos",
            "events_url": "https://api.github.com/users/maykcaldas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maykcaldas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T18:00:22Z",
        "updated_at": "2023-05-02T23:19:58Z",
        "closed_at": "2023-05-02T23:19:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi all!\r\n\r\nI have an [application](https://github.com/ur-whitelab/BO-LIFT) based on langchain.\r\nA few months ago, I used it with fine-tuned (FT) models.\r\nWe added a token usage counter later, and I haven't tried fine-tuned models again since then.\r\n\r\nRecently we have been interested in using (FT) models again, but the callback to expose the token usage isn't accepting the model.\r\n\r\nMinimal code to reproduce the error:\r\n\r\n```\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.callbacks import get_openai_callback\r\n\r\nllm = OpenAI(\r\n        model_name=FT_MODEL,\r\n        temperature=0.7,\r\n        n=5,\r\n        max_tokens=64,\r\n    )\r\n\r\nwith get_openai_callback() as cb:\r\n        completion_response = llm.generate([\"QUERY\"])\r\n        token_usage = cb.total_tokens\r\n```\r\n\r\nIt works fine if the model name is a basic openAI model. For instance, ```model_name=\"text-davinci-003\"```\r\nBut when I try to use one of my FT models, I get this error:\r\n\r\n```\r\nError in on_llm_end callback: Unknown model: FT_MODEL. Please provide a valid OpenAI model name.Known models are: gpt-4, gpt-4-0314, gpt-4-completion, gpt-4-0314-completion, gpt-4-32k, gpt-4-32k-0314, gpt-4-32k-completion, gpt-4-32k-0314-completion, gpt-3.5-turbo, gpt-3.5-turbo-0301, text-ada-001, ada, text-babbage-001, babbage, text-curie-001, curie, text-davinci-003, text-davinci-002, code-davinci-002\r\n```\r\n\r\nIt works if I remove the callback and avoid token counting, but it'd be nice to have any suggestions on how to make it work.\r\n\r\nIs there a workaround for that?\r\n\r\nAny help is welcome!\r\nThanks!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3988/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3988/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3987",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3987/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3987/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3987/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3987",
        "id": 1692820501,
        "node_id": "PR_kwDOIPDwls5Pm4xg",
        "number": 3987,
        "title": "Fix Documentation - Nomic - Atlas Jupyter Notebook ",
        "user": {
            "login": "jj701",
            "id": 129657162,
            "node_id": "U_kgDOB7ppSg",
            "avatar_url": "https://avatars.githubusercontent.com/u/129657162?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jj701",
            "html_url": "https://github.com/jj701",
            "followers_url": "https://api.github.com/users/jj701/followers",
            "following_url": "https://api.github.com/users/jj701/following{/other_user}",
            "gists_url": "https://api.github.com/users/jj701/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jj701/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jj701/subscriptions",
            "organizations_url": "https://api.github.com/users/jj701/orgs",
            "repos_url": "https://api.github.com/users/jj701/repos",
            "events_url": "https://api.github.com/users/jj701/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jj701/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T17:35:42Z",
        "updated_at": "2023-05-02T21:20:02Z",
        "closed_at": "2023-05-02T21:20:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3987",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3987",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3987.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3987.patch",
            "merged_at": "2023-05-02T21:20:01Z"
        },
        "body": "Correction to Numic-Atlas Jupyter Notebook Docs",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3987/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3987/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3986",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3986/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3986/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3986/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3986",
        "id": 1692816840,
        "node_id": "I_kwDOIPDwls5k5lXI",
        "number": 3986,
        "title": "Simulated Environment: Shimmy (Farama Foundation API conversion tool)",
        "user": {
            "login": "elliottower",
            "id": 32176771,
            "node_id": "MDQ6VXNlcjMyMTc2Nzcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/32176771?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elliottower",
            "html_url": "https://github.com/elliottower",
            "followers_url": "https://api.github.com/users/elliottower/followers",
            "following_url": "https://api.github.com/users/elliottower/following{/other_user}",
            "gists_url": "https://api.github.com/users/elliottower/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/elliottower/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/elliottower/subscriptions",
            "organizations_url": "https://api.github.com/users/elliottower/orgs",
            "repos_url": "https://api.github.com/users/elliottower/repos",
            "events_url": "https://api.github.com/users/elliottower/events{/privacy}",
            "received_events_url": "https://api.github.com/users/elliottower/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T17:32:55Z",
        "updated_at": "2023-05-20T02:32:14Z",
        "closed_at": "2023-05-20T02:32:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am interested in writing a tutorial for using langchain with [Shimmy](https://shimmy.farama.org/), an API conversion tool allowing many popular reinforcement learning environments to be used natively with PettingZoo and Gymnasium. \r\n\r\nSince there are already PettingZoo and Gymnasium tutorials/wrappers (https://python.langchain.com/en/latest/use_cases/agent_simulations/petting_zoo.html), it would not require significant new code, but I think it would be a really helpful feature to show people that they can for example load DM Control/DM Lab environments in the exact same way. OpenSpiel provides text-rendered board games, which would be a great feature to show off with a chatbot. \r\n\r\nMaking this issue just to confirm it is something that the developers would be interested, but I am planning to work on the tutorial later today and if it's not possible to add directly to this repo I will add it to Shimmy (I am the project manager of Shimmy and PettingZoo). \r\n\r\nI would be interested in fleshing out integration on PettingZoo's side as well, if there are any extra features which we could add in order to better support langchain we would love to do so. If there is interest in adding training library support I am also interested in working on tutorials to have langchain load a trained model using standard libraries like [stable-baselines3](https://github.com/DLR-RM/stable-baselines3), [RLlib](https://docs.ray.io/en/latest/rllib/index.html), or a lighter library like [CleanRL](https://github.com/vwxyzjn/cleanrl).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3986/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3986/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3985",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3985/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3985/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3985/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3985",
        "id": 1692784932,
        "node_id": "I_kwDOIPDwls5k5dkk",
        "number": 3985,
        "title": "Pydantic output parser assumes JSON object",
        "user": {
            "login": "jmif",
            "id": 1000442,
            "node_id": "MDQ6VXNlcjEwMDA0NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1000442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jmif",
            "html_url": "https://github.com/jmif",
            "followers_url": "https://api.github.com/users/jmif/followers",
            "following_url": "https://api.github.com/users/jmif/following{/other_user}",
            "gists_url": "https://api.github.com/users/jmif/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jmif/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jmif/subscriptions",
            "organizations_url": "https://api.github.com/users/jmif/orgs",
            "repos_url": "https://api.github.com/users/jmif/repos",
            "events_url": "https://api.github.com/users/jmif/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jmif/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-02T17:06:44Z",
        "updated_at": "2023-10-24T16:08:48Z",
        "closed_at": "2023-10-24T16:08:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "With a schema such as:\r\n\r\n```\r\nclass JsonList(BaseModel):\r\n    __root__: List[str]\r\n```\r\n\r\nWe can validate a JSON string in the form:\r\n\r\n```\r\n[ 'xxx', 'yyy', 'zzz' ]\r\n```\r\n\r\nBut the Pydantic parser [assumes the input is an object](https://github.com/hwchase17/langchain/blob/71a337dac6aa8c5a7f472e3e7fd0a61ca2a4eefb/langchain/output_parsers/pydantic.py#L20) in its greedy search, so it fails with a validation error.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3985/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3985/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3984",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3984/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3984/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3984/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3984",
        "id": 1692751873,
        "node_id": "I_kwDOIPDwls5k5VgB",
        "number": 3984,
        "title": "Is updating collection possible",
        "user": {
            "login": "ragvendra3898",
            "id": 62380006,
            "node_id": "MDQ6VXNlcjYyMzgwMDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/62380006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ragvendra3898",
            "html_url": "https://github.com/ragvendra3898",
            "followers_url": "https://api.github.com/users/ragvendra3898/followers",
            "following_url": "https://api.github.com/users/ragvendra3898/following{/other_user}",
            "gists_url": "https://api.github.com/users/ragvendra3898/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ragvendra3898/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ragvendra3898/subscriptions",
            "organizations_url": "https://api.github.com/users/ragvendra3898/orgs",
            "repos_url": "https://api.github.com/users/ragvendra3898/repos",
            "events_url": "https://api.github.com/users/ragvendra3898/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ragvendra3898/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-02T16:45:03Z",
        "updated_at": "2023-10-06T16:08:50Z",
        "closed_at": "2023-10-06T16:08:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\nI am using below function create_collection() for creating collection and it is working fine , like it is creating a collection and storing it into my persist directory and also I am able to perform question answering using this collection.\r\ndef create_collection(openai_api_key, embedding_path, persist_directory, collection_name):\r\n    if not openai_api_key == 'None':\r\n        if collection_name!=None:\r\n            if persist_directory!=None:\r\n                global vectordb\r\n                if embedding_path!=None:\r\n                    \r\n                    for i in embedding_path:\r\n                        i = str(i)\r\n                        logging.info('Processing files in directory: ' +i)\r\n                        loader = DirectoryLoader(i, show_progress=True)  \r\n                        docs = loader.load()                                                         #DE5-T31\r\n\r\n                        #text_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=0)   #DE5-T31\r\n                        #texts = text_splitter.split_documents(docs)                                        #DE5-T31\r\n                        text_splitter = TokenTextSplitter(chunk_size=1000, chunk_overlap=200)\r\n                        texts = text_splitter.split_documents(docs)\r\n                        embeddings = OpenAIEmbeddings(openai_api_key=openai_api_key)                                                    #DE5-T31\r\n                        vectordb = Chroma.from_documents(texts, embedding=embeddings, persist_directory = persist_directory, collection_name=collection_name)\r\n                        vectordb.persist()    \r\n                        vectordb = None                           #DE5-T31\r\n                    \r\n                elif web_urls_path!=None:\r\n                    web_urls = web_urls_path.split(',')\r\n                    url_list = web_urls\r\n                    logging.info(f\"URL List: {url_list}\")\r\n                    urls = []\r\n                    for url in url_list:\r\n                        logging.info(f\"Processing data in url: {url}\")\r\n                        reqs = requests.get(url)\r\n                        soup = BeautifulSoup(reqs.text, 'html.parser')\r\n                        for link in soup.find_all('a'):\r\n                            urllink=link.get('href')\r\n                            if (urllink != None) and (urllink.startswith('http')):\r\n                                urls.append(urllink)\r\n                                #print(link.get('href'))\r\n\r\n                        loader = UnstructuredURLLoader(urls=urls)\r\n                        docs = loader.load()\r\n                        logging.info(f'You have {len(docs)} document(s) in your data')\r\n                        text_splitter = TokenTextSplitter(chunk_size=1000, chunk_overlap=200)\r\n                        texts = text_splitter.split_documents(docs)\r\n                        embeddings = OpenAIEmbeddings(openai_api_key=openai_api_key)\r\n                        vectordb = Chroma.from_documents(texts, embedding=embeddings, persist_directory=persist_directory, collection_name=collection_name)\r\n                        vectordb.persist()\r\n                        vectordb = None\r\n                        \r\n                else:\r\n                    logging.error(\"Please provide the directory or web path to create the collection!\")\r\n                    sys.exit(0)   \r\n            else:\r\n                logging.error(\"Please provide the path to store the vector database!\") \r\n                sys.exit(0)   \r\n        else:\r\n            logging.error(\"Please provide a collection name!\") \r\n            sys.exit(0)    \r\n    else:\r\n        logging.error(\"Please configure the openai_api_key in the json file at the following path:\\n\" + \"file:///\" + pathconf)\r\n        sys.exit(0)    \r\n    return\r\n\r\nbut while I am trying to update the existing collection using update collection function, it is not working for me, like I am not able to update the existing collection. \r\n\r\ndef update_collection(openai_api_key, persist_directory, collection_name):\r\n    if not openai_api_key == 'None':\r\n        if persist_directory!=None:\r\n            if collection_name!=None:\r\n                if os.path.isdir(persist_directory + '\\index') and os.path.isfile(persist_directory + \"\\chroma-collections.parquet\") and os.path.isfile(persist_directory + \"\\chroma-embeddings.parquet\"):\r\n                    try:\r\n                        embeddings = OpenAIEmbeddings(openai_api_key=openai_api_key) \r\n                        client = chromadb.Client(Settings(chroma_db_impl=\"duckdb+parquet\", persist_directory=persist_directory)) # Optional, defaults to .chromadb/ in the current directory\r\n                        collection = client.get_collection(name = collection_name, embedding_function=embeddings)\r\n                    except Exception as e:\r\n                        logging.error(\"An error occured: \" + str(e))\r\n                        sys.exit(0)\r\n                    global vectordb    \r\n                    if embedding_path!=None:\r\n                        #calling persisted db\r\n                        vectordb = Chroma(embedding_function = embeddings, persist_directory = persist_directory, collection_name=collection_name)\r\n                        for i in embedding_path:\r\n                            i = str(i)\r\n                            logging.info('Processing files in directory: ' +i)\r\n                            # load the documents you want to add to the collection\r\n                            loader = DirectoryLoader(i, show_progress=True)\r\n                            docs = loader.load()\r\n                            text_splitter = TokenTextSplitter(chunk_size=1000, chunk_overlap=200)\r\n                            texts = text_splitter.split_documents(docs)\r\n\r\n                            # add the documents to the collection\r\n                            #vectordb = Chroma(embedding_function=embeddings, persist_directory=persist_directory, collection_name=collection_name)\r\n                            vectordb.add_documents(documents=texts)\r\n                            #vectordb = Chroma.from_documents(texts, collection_name=collection_name, persist_directory=persist_directory, embedding=embeddings)\r\n                            vectordb.persist()\r\n                            vectordb =None      \r\n                            #collection.update(documents=texts)                                                 \r\n                            #text_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=0)   #DE5-T31\r\n                            #texts = text_splitter.split_documents(docs)                                        #DE5-T31\r\n                            \r\n                            #vectordb = vectordb.add_documents(texts, collection_name=collection_name)                                              \r\n                            #vectordb.from_documents(documents=texts,embedding=embeddings, collection_name=collection_name)\r\n                            \r\n                        \r\n                    elif web_urls_path!=None:\r\n                        #vectordb = Chroma(embedding_function=embeddings, persist_directory = persist_directory, collection_name=collection_name)\r\n                        web_urls = web_urls_path.split(',')\r\n                        url_list = web_urls\r\n                        logging.info(f\"URL List: {url_list}\")\r\n                        urls = []\r\n                        for url in url_list:\r\n                            logging.info(f\"Processing data in url: {url}\")\r\n                            reqs = requests.get(url)\r\n                            soup = BeautifulSoup(reqs.text, 'html.parser')\r\n                            for link in soup.find_all('a'):\r\n                                urllink=link.get('href')\r\n                                if (urllink != None) and (urllink.startswith('http')):\r\n                                    urls.append(urllink)\r\n                                    #print(link.get('href'))\r\n\r\n                            loader = UnstructuredURLLoader(urls=urls)\r\n                            docs = loader.load()\r\n                            logging.info(f'You have {len(docs)} document(s) in your data')\r\n                            text_splitter = TokenTextSplitter(chunk_size=1000, chunk_overlap=200)\r\n                            texts = text_splitter.split_documents(docs)\r\n                            embeddings = OpenAIEmbeddings(openai_api_key=openai_api_key)\r\n                            vectordb.from_documents(texts, embedding=embeddings, persist_directory=persist_directory, collection_name=collection_name)\r\n                            vectordb.persist()\r\n                            vectordb = None    \r\n                        \r\n                    else:\r\n                        logging.error(\"Please provide directory path(s) or web url(s) to update existing collection!\")\r\n                        sys.exit(0)\r\n                else:\r\n                    logging.error(\"The path provided does not contain a chroma vectordb!\")  \r\n                    sys.exit(0)              \r\n            else:\r\n                logging.error(\"Please provide a valid collection name to update the existing collection!\")\r\n                sys.exit(0)   \r\n        else:\r\n            logging.error(\"Please provide the path where vector database is stored!\") \r\n            sys.exit(0)     \r\n    else:\r\n        logging.error(\"Please configure the openai_api_key in the json file at the following path:\\n\" + \"file:///\" + pathconf) \r\n        sys.exit(0)   \r\n    \r\n    return\r\n\r\ncan anyone please help me that what mistake I am doing or it is not possible to update existing collection in persisted database?\r\nThank You",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3984/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3984/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3983",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3983/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3983/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3983/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3983",
        "id": 1692711579,
        "node_id": "I_kwDOIPDwls5k5Lqb",
        "number": 3983,
        "title": "RetrievalQA & RetrievalQAWithSourcesChain chains cannot be serialized/saved or loaded",
        "user": {
            "login": "salman1993",
            "id": 7154255,
            "node_id": "MDQ6VXNlcjcxNTQyNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7154255?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salman1993",
            "html_url": "https://github.com/salman1993",
            "followers_url": "https://api.github.com/users/salman1993/followers",
            "following_url": "https://api.github.com/users/salman1993/following{/other_user}",
            "gists_url": "https://api.github.com/users/salman1993/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salman1993/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salman1993/subscriptions",
            "organizations_url": "https://api.github.com/users/salman1993/orgs",
            "repos_url": "https://api.github.com/users/salman1993/repos",
            "events_url": "https://api.github.com/users/salman1993/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salman1993/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2023-05-02T16:17:48Z",
        "updated_at": "2023-08-01T13:53:17Z",
        "closed_at": "2023-06-08T04:07:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`VectorDBQA` is being deprecated in favour of `RetrievalQA` & similarly, `VectorDBQAWithSourcesChain` is being deprecated for `RetrievalQAWithSourcesChain`. \r\n\r\nCurrently, `VectorDBQA` & `VectorDBQAWithSourcesChain` chains can be serialized using `vec_chain.save(...)` because they have `_chain_type` property - https://github.com/hwchase17/langchain/blob/3bd5a99b835fa320d02aa733cb0c0bc4a87724fa/langchain/chains/qa_with_sources/vector_db.py#L67 \r\n\r\nHowever, `RetrievalQA` & `RetrievalQAWithSourcesChain` do not have that property and raise the following error when trying to save with `ret_chain.save(\"ret_chain.yaml\")`:\r\n```\r\nFile [~/.pyenv/versions/3.8.15/envs/internalqa/lib/python3.8/site-packages/langchain/chains/base.py:45](https://file+.vscode-resource.vscode-cdn.net/Users/smohammed/Development/hackweek-internalqa/~/.pyenv/versions/3.8.15/envs/internalqa/lib/python3.8/site-packages/langchain/chains/base.py:45), in Chain._chain_type(self)\r\n     [43](file:///Users/smohammed/.pyenv/versions/3.8.15/envs/internalqa/lib/python3.8/site-packages/langchain/chains/base.py?line=42) @property\r\n     [44](file:///Users/smohammed/.pyenv/versions/3.8.15/envs/internalqa/lib/python3.8/site-packages/langchain/chains/base.py?line=43) def _chain_type(self) -> str:\r\n---> [45](file:///Users/smohammed/.pyenv/versions/3.8.15/envs/internalqa/lib/python3.8/site-packages/langchain/chains/base.py?line=44)     raise NotImplementedError(\"Saving not supported for this chain type.\")\r\n\r\nNotImplementedError: Saving not supported for this chain type.\r\n```\r\n\r\nThere isn't any functions to support loading RetrievalQA either, unlike the VectorQA counterparts: https://github.com/hwchase17/langchain/blob/3bd5a99b835fa320d02aa733cb0c0bc4a87724fa/langchain/chains/loading.py#L313-L356 \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3983/reactions",
            "total_count": 9,
            "+1": 9,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3983/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3982",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3982/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3982/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3982/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3982",
        "id": 1692692832,
        "node_id": "I_kwDOIPDwls5k5HFg",
        "number": 3982,
        "title": "why i get :openai.error.InvalidRequestError: This model's maximum context length is 4097 tokens. However, your messages resulted in 16762 tokens. Please reduce the length of the messages.",
        "user": {
            "login": "xfocus3",
            "id": 7467779,
            "node_id": "MDQ6VXNlcjc0Njc3Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7467779?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xfocus3",
            "html_url": "https://github.com/xfocus3",
            "followers_url": "https://api.github.com/users/xfocus3/followers",
            "following_url": "https://api.github.com/users/xfocus3/following{/other_user}",
            "gists_url": "https://api.github.com/users/xfocus3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xfocus3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xfocus3/subscriptions",
            "organizations_url": "https://api.github.com/users/xfocus3/orgs",
            "repos_url": "https://api.github.com/users/xfocus3/repos",
            "events_url": "https://api.github.com/users/xfocus3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xfocus3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-02T16:04:31Z",
        "updated_at": "2023-11-15T16:11:06Z",
        "closed_at": "2023-11-15T16:11:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "hello,\r\nwhy i get this error :\r\n`2023-05-02 16:59:06.633 Uncaught app exception\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 565, in _run_script\r\n    exec(code, module.__dict__)\r\n  File \"/Users/xfocus/Downloads/chatRepo/Chat-with-Github-Repo/chat.py\", line 104, in <module>\r\n    output = search_db(user_input)\r\n  File \"/Users/xfocus/Downloads/chatRepo/Chat-with-Github-Repo/chat.py\", line 85, in search_db\r\n    result = qa({\"query\": query})\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/base.py\", line 116, in __call__\r\n    raise e\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/retrieval_qa/base.py\", line 110, in _call\r\n    answer = self.combine_documents_chain.run(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/base.py\", line 216, in run\r\n    return self(kwargs)[self.output_keys[0]]\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/base.py\", line 116, in __call__\r\n    raise e\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/combine_documents/base.py\", line 75, in _call\r\n    output, extra_return_dict = self.combine_docs(docs, **other_keys)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/combine_documents/stuff.py\", line 82, in combine_docs\r\n    return self.llm_chain.predict(**inputs), {}\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/llm.py\", line 151, in predict\r\n    return self(kwargs)[self.output_key]\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/base.py\", line 116, in __call__\r\n    raise e\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/llm.py\", line 57, in _call\r\n    return self.apply([inputs])[0]\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/llm.py\", line 118, in apply\r\n    response = self.generate(input_list)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chains/llm.py\", line 62, in generate\r\n    return self.llm.generate_prompt(prompts, stop)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chat_models/base.py\", line 82, in generate_prompt\r\n    raise e\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chat_models/base.py\", line 79, in generate_prompt\r\n    output = self.generate(prompt_messages, stop=stop)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chat_models/base.py\", line 54, in generate\r\n    results = [self._generate(m, stop=stop) for m in messages]\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chat_models/base.py\", line 54, in <listcomp>\r\n    results = [self._generate(m, stop=stop) for m in messages]\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chat_models/openai.py\", line 266, in _generate\r\n    response = self.completion_with_retry(messages=message_dicts, **params)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chat_models/openai.py\", line 228, in completion_with_retry\r\n    return _completion_with_retry(**kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/tenacity/__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/tenacity/__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/tenacity/__init__.py\", line 314, in iter\r\n    return fut.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\r\n    return self.__get_result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\r\n    raise self._exception\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/tenacity/__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/chat_models/openai.py\", line 226, in _completion_with_retry\r\n    return self.client.create(**kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/openai/api_resources/chat_completion.py\", line 25, in create\r\n    return super().create(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 153, in create\r\n    response, _, api_key = requestor.request(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/openai/api_requestor.py\", line 226, in request\r\n    resp, got_stream = self._interpret_response(result, stream)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/openai/api_requestor.py\", line 619, in _interpret_response\r\n    self._interpret_response_line(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/openai/api_requestor.py\", line 682, in _interpret_response_line\r\n    raise self.handle_error_response(\r\nopenai.error.InvalidRequestError: This model's maximum context length is 4097 tokens. However, your messages resulted in 16762 tokens. Please reduce the length of the messages.`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3982/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3982/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3981",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3981/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3981/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3981/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3981",
        "id": 1692677677,
        "node_id": "PR_kwDOIPDwls5PmaDz",
        "number": 3981,
        "title": "Replace remaining usage of basellm with baselangmodel",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T15:55:11Z",
        "updated_at": "2023-05-03T04:52:30Z",
        "closed_at": "2023-05-03T04:52:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3981",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3981",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3981.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3981.patch",
            "merged_at": "2023-05-03T04:52:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3981/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3981/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3980",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3980/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3980/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3980/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3980",
        "id": 1692671338,
        "node_id": "PR_kwDOIPDwls5PmYte",
        "number": 3980,
        "title": "bugfix: return whole document when loading with ConfluenceLoader.load by label",
        "user": {
            "login": "obbiondo",
            "id": 45012063,
            "node_id": "MDQ6VXNlcjQ1MDEyMDYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45012063?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/obbiondo",
            "html_url": "https://github.com/obbiondo",
            "followers_url": "https://api.github.com/users/obbiondo/followers",
            "following_url": "https://api.github.com/users/obbiondo/following{/other_user}",
            "gists_url": "https://api.github.com/users/obbiondo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/obbiondo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/obbiondo/subscriptions",
            "organizations_url": "https://api.github.com/users/obbiondo/orgs",
            "repos_url": "https://api.github.com/users/obbiondo/repos",
            "events_url": "https://api.github.com/users/obbiondo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/obbiondo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T15:50:45Z",
        "updated_at": "2023-05-04T04:52:06Z",
        "closed_at": "2023-05-04T04:52:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3980",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3980",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3980.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3980.patch",
            "merged_at": "2023-05-04T04:52:05Z"
        },
        "body": "Method confluence.get_all_pages_by_label, returns only metadata about documents with a certain label (such as pageId, titles, ...). To return all documents with a certain label we need to extract all page ids given a certain label and get pages content by these ids.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3980/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3980/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3979",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3979/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3979/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3979/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3979",
        "id": 1692651168,
        "node_id": "PR_kwDOIPDwls5PmUZK",
        "number": 3979,
        "title": "Add BlobParser abstraction",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-02T15:37:46Z",
        "updated_at": "2023-05-06T01:43:40Z",
        "closed_at": "2023-05-06T01:43:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3979",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3979",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3979.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3979.patch",
            "merged_at": "2023-05-06T01:43:39Z"
        },
        "body": "This PR adds the BlobParser abstraction.\n\nIt follows the proposal described here: https://github.com/hwchase17/langchain/pull/2833#issuecomment-1509097756\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3979/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3979/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3978",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3978/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3978/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3978/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3978",
        "id": 1692629194,
        "node_id": "PR_kwDOIPDwls5PmPvy",
        "number": 3978,
        "title": "Update output_fixing_parser.ipynb",
        "user": {
            "login": "trchopan",
            "id": 4874258,
            "node_id": "MDQ6VXNlcjQ4NzQyNTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4874258?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trchopan",
            "html_url": "https://github.com/trchopan",
            "followers_url": "https://api.github.com/users/trchopan/followers",
            "following_url": "https://api.github.com/users/trchopan/following{/other_user}",
            "gists_url": "https://api.github.com/users/trchopan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trchopan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trchopan/subscriptions",
            "organizations_url": "https://api.github.com/users/trchopan/orgs",
            "repos_url": "https://api.github.com/users/trchopan/repos",
            "events_url": "https://api.github.com/users/trchopan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trchopan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T15:23:52Z",
        "updated_at": "2023-05-02T16:33:47Z",
        "closed_at": "2023-05-02T16:33:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3978",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3978",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3978.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3978.patch",
            "merged_at": "2023-05-02T16:33:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3978/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3978/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3977",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3977/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3977/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3977/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3977",
        "id": 1692593040,
        "node_id": "I_kwDOIPDwls5k4uuQ",
        "number": 3977,
        "title": "Chatbot memory integration",
        "user": {
            "login": "zigax1",
            "id": 80093733,
            "node_id": "MDQ6VXNlcjgwMDkzNzMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/80093733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zigax1",
            "html_url": "https://github.com/zigax1",
            "followers_url": "https://api.github.com/users/zigax1/followers",
            "following_url": "https://api.github.com/users/zigax1/following{/other_user}",
            "gists_url": "https://api.github.com/users/zigax1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zigax1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zigax1/subscriptions",
            "organizations_url": "https://api.github.com/users/zigax1/orgs",
            "repos_url": "https://api.github.com/users/zigax1/repos",
            "events_url": "https://api.github.com/users/zigax1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zigax1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-02T15:01:31Z",
        "updated_at": "2023-09-22T16:10:31Z",
        "closed_at": "2023-09-22T16:10:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello everyone!\r\n\r\nI am using Langchain and I want to implement chatbot memory. I am doing everything according to the docs and my bot doesn't remember anything I tell him.\r\n\r\n**Code snippet:**\r\n```\r\nllm = ChatOpenAI(model_name='gpt-3.5-turbo', temperature=0.3, openai_api_key=OPENAI_API_KEY)\r\n\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\nrqa = ConversationalRetrievalChain.from_llm(llm, docsearch.as_retriever(), memory=memory)\r\n\r\ndef retrieve_answer(query, chat_history):\r\n    memory.chat_memory.add_user_message(query)\r\n    res = rqa({\"question\": query})\r\n    retrieval_result = res[\"answer\"]\r\n\r\n    if \"The given context does not provide\" in retrieval_result:\r\n        base_result = llm.generate([query])\r\n        return base_result.generations[0][0].text\r\n    else:\r\n        return retrieval_result\r\n\r\nmessages = []\r\n\r\nprint(\"Welcome to the chatbot. Enter 'quit' to exit the program.\")\r\nwhile True:\r\n    user_message = input(\"You: \")\r\n    answer = retrieve_answer(user_message, messages)\r\n    print(\"Assistant:\", answer)\r\n\r\n    messages.append((user_message, answer))\r\n```\r\n\r\n\r\n\r\n**Whole python script is located here:** https://github.com/zigax1/chat-with-pdf.git\r\n\r\nDoes anyone have any idea, what am I doing wrong?\r\n\r\nThanks to everyone for help.\r\n\r\n![image](https://user-images.githubusercontent.com/80093733/235705133-b8ff5d11-88bd-408a-a03e-c596ffb2fde7.png)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3977/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3977/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3976",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3976/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3976/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3976/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3976",
        "id": 1692566866,
        "node_id": "PR_kwDOIPDwls5PmCaf",
        "number": 3976,
        "title": "Update \\docs\\modules\\models\\text_embedding\\examples\\openai.ipynb",
        "user": {
            "login": "MichaelMDowling",
            "id": 17670015,
            "node_id": "MDQ6VXNlcjE3NjcwMDE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17670015?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MichaelMDowling",
            "html_url": "https://github.com/MichaelMDowling",
            "followers_url": "https://api.github.com/users/MichaelMDowling/followers",
            "following_url": "https://api.github.com/users/MichaelMDowling/following{/other_user}",
            "gists_url": "https://api.github.com/users/MichaelMDowling/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MichaelMDowling/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MichaelMDowling/subscriptions",
            "organizations_url": "https://api.github.com/users/MichaelMDowling/orgs",
            "repos_url": "https://api.github.com/users/MichaelMDowling/repos",
            "events_url": "https://api.github.com/users/MichaelMDowling/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MichaelMDowling/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T14:46:36Z",
        "updated_at": "2023-05-02T21:41:31Z",
        "closed_at": "2023-05-02T21:41:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3976",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3976",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3976.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3976.patch",
            "merged_at": "2023-05-02T21:41:31Z"
        },
        "body": "Single edit to: models/text_embedding/examples/openai.ipynb - Line 88: changed from: \"embeddings = OpenAIEmbeddings(model_name=\\\"ada\\\")\" to \"embeddings = OpenAIEmbeddings()\" as model_name is no longer part of the OpenAIEmbeddings class.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3976/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3976/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3974",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3974/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3974/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3974/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3974",
        "id": 1692411958,
        "node_id": "I_kwDOIPDwls5k4Cg2",
        "number": 3974,
        "title": "Multi-turn conversation chains have unintuitive logging.",
        "user": {
            "login": "jcoombes",
            "id": 12532438,
            "node_id": "MDQ6VXNlcjEyNTMyNDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12532438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcoombes",
            "html_url": "https://github.com/jcoombes",
            "followers_url": "https://api.github.com/users/jcoombes/followers",
            "following_url": "https://api.github.com/users/jcoombes/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcoombes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcoombes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcoombes/subscriptions",
            "organizations_url": "https://api.github.com/users/jcoombes/orgs",
            "repos_url": "https://api.github.com/users/jcoombes/repos",
            "events_url": "https://api.github.com/users/jcoombes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcoombes/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T13:18:55Z",
        "updated_at": "2023-09-10T16:23:48Z",
        "closed_at": "2023-09-10T16:23:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "ConversationChain's conversation.predict() multiple times gives confusing logging.\r\nInspired by: https://python.langchain.com/en/latest/modules/memory/examples/conversational_customization.html\r\n\r\nMinimal Confusing Example:\r\n\r\n```python\r\n\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains import ConversationChain\r\nfrom langchain.memory import ConversationBufferMemory\r\n\r\n\r\nllm = OpenAI(temperature=0)\r\n\r\nconversation = ConversationChain(\r\n    llm=llm, \r\n    verbose=True, \r\n    memory=ConversationBufferMemory()\r\n)\r\n\r\nbar = conversation.predict(input=\"please print bar\")\r\nbaz = conversation.predict(input=\"now please change the last letter of the previous output to z\")\r\n```\r\n\r\n*Stdout Logging Observed:*\r\n\r\n> Entering Conversation Chain.\r\nSystem: The following is a conversation between ...\r\nHuman: please print bar\r\n> Finished Chain. #output \"bar\" is assigned to variable and stored in memory.\r\n\r\n> Entering Conversation Chain.\r\nSystem: The following is a conversation between ...\r\nHuman: please print bar\r\nAI: bar\r\nHuman: now please change the last letter of the previous output to z\r\n\r\n> Finished Chain. # output \"baz\" is assigned to variable and stored in memory.\r\n\r\n*Stdout Logging Expected:*\r\n\r\n> Entering Multi-turn Conversation.\r\nSystem: The following is a conversation between ...\r\nHuman: Please print bar\r\nAI: bar\r\nHuman: now please change the last letter of the previous output to z.\r\nAI: baz\r\n\r\n> Finished Multi-turn Conversation. # outputs bar and baz are both accessible in variables and stored in memory.\r\n\r\nFor my use case, I would be least surprised by a generator log which only yields additional log lines as the conversation continues.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3974/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3974/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3973",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3973/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3973/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3973/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3973",
        "id": 1692389113,
        "node_id": "PR_kwDOIPDwls5PlcRr",
        "number": 3973,
        "title": "Callback manager: Do not (deep)copy handler",
        "user": {
            "login": "sliedes",
            "id": 2307997,
            "node_id": "MDQ6VXNlcjIzMDc5OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2307997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sliedes",
            "html_url": "https://github.com/sliedes",
            "followers_url": "https://api.github.com/users/sliedes/followers",
            "following_url": "https://api.github.com/users/sliedes/following{/other_user}",
            "gists_url": "https://api.github.com/users/sliedes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sliedes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sliedes/subscriptions",
            "organizations_url": "https://api.github.com/users/sliedes/orgs",
            "repos_url": "https://api.github.com/users/sliedes/repos",
            "events_url": "https://api.github.com/users/sliedes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sliedes/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-02T13:05:09Z",
        "updated_at": "2023-05-03T06:40:25Z",
        "closed_at": "2023-05-02T18:32:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3973",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3973",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3973.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3973.patch",
            "merged_at": "2023-05-02T18:32:38Z"
        },
        "body": "Handlers often want to contain mutable and uncopyable state.\r\nIt probably does not make much sense to copy them whenever they\r\nare added.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3973/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3973/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3971",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3971/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3971/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3971/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3971",
        "id": 1692310074,
        "node_id": "PR_kwDOIPDwls5PlLRI",
        "number": 3971,
        "title": "Update qdrant interface",
        "user": {
            "login": "joein",
            "id": 22641570,
            "node_id": "MDQ6VXNlcjIyNjQxNTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/22641570?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joein",
            "html_url": "https://github.com/joein",
            "followers_url": "https://api.github.com/users/joein/followers",
            "following_url": "https://api.github.com/users/joein/following{/other_user}",
            "gists_url": "https://api.github.com/users/joein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joein/subscriptions",
            "organizations_url": "https://api.github.com/users/joein/orgs",
            "repos_url": "https://api.github.com/users/joein/repos",
            "events_url": "https://api.github.com/users/joein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joein/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T12:11:54Z",
        "updated_at": "2023-05-05T23:46:41Z",
        "closed_at": "2023-05-05T23:46:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3971",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3971",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3971.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3971.patch",
            "merged_at": "2023-05-05T23:46:41Z"
        },
        "body": "Hello\r\n\r\n1) Passing `embedding_function` as a callable seems to be outdated and the common interface is to pass `Embeddings` instance\r\n\r\n2) At the moment `Qdrant.add_texts` is designed to be used with `embeddings.embed_query`, which is 1) slow 2) causes ambiguity due to 1.\r\nIt should be used with `embeddings.embed_documents`\r\n\r\nThis PR solves both problems and also provides some new tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3971/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3971/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3970",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3970/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3970/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3970/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3970",
        "id": 1692285119,
        "node_id": "I_kwDOIPDwls5k3ji_",
        "number": 3970,
        "title": "load_qa_chain with map_rerank by local huggingface model ",
        "user": {
            "login": "flaviadeutsch",
            "id": 119473504,
            "node_id": "U_kgDOBx8FYA",
            "avatar_url": "https://avatars.githubusercontent.com/u/119473504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaviadeutsch",
            "html_url": "https://github.com/flaviadeutsch",
            "followers_url": "https://api.github.com/users/flaviadeutsch/followers",
            "following_url": "https://api.github.com/users/flaviadeutsch/following{/other_user}",
            "gists_url": "https://api.github.com/users/flaviadeutsch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flaviadeutsch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flaviadeutsch/subscriptions",
            "organizations_url": "https://api.github.com/users/flaviadeutsch/orgs",
            "repos_url": "https://api.github.com/users/flaviadeutsch/repos",
            "events_url": "https://api.github.com/users/flaviadeutsch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flaviadeutsch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-05-02T11:55:21Z",
        "updated_at": "2023-12-06T17:46:35Z",
        "closed_at": "2023-12-06T17:46:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I use the huggingface model locally and run the following code:\r\n\r\n```\r\nchain = load_qa_chain(llm=chatglm, chain_type=\"map_rerank\", return_intermediate_steps=True, prompt=PROMPT)\r\nchain({\"input_documents\": search_docs_Documents, \"question\": query}, return_only_outputs=True)\r\n```\r\nThe error is as follows\uff1a\r\n\r\n```\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /tmp/ipykernel_274378/983731820.py:2 in <module>                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 [Errno 2] No such file or directory: '/tmp/ipykernel_274378/983731820.py'                        \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /tmp/ipykernel_274378/14951549.py:11 in answer_docs                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 [Errno 2] No such file or directory: '/tmp/ipykernel_274378/14951549.py'                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/hysz/anaconda3/envs/chatglm/lib/python3.10/site-packages/langchain/chains/base.py:116 in   \u2502\r\n\u2502 __call__                                                                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   113 \u2502   \u2502   \u2502   outputs = self._call(inputs)                                                   \u2502\r\n\u2502   114 \u2502   \u2502   except (KeyboardInterrupt, Exception) as e:                                        \u2502\r\n\u2502   115 \u2502   \u2502   \u2502   self.callback_manager.on_chain_error(e, verbose=self.verbose)                  \u2502\r\n\u2502 \u2771 116 \u2502   \u2502   \u2502   raise e                                                                        \u2502\r\n\u2502   117 \u2502   \u2502   self.callback_manager.on_chain_end(outputs, verbose=self.verbose)                  \u2502\r\n\u2502   118 \u2502   \u2502   return self.prep_outputs(inputs, outputs, return_only_outputs)                     \u2502\r\n\u2502   119                                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/hysz/anaconda3/envs/chatglm/lib/python3.10/site-packages/langchain/chains/base.py:113 in   \u2502\r\n\u2502 __call__                                                                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   110 \u2502   \u2502   \u2502   verbose=self.verbose,                                                          \u2502\r\n\u2502   111 \u2502   \u2502   )                                                                                  \u2502\r\n\u2502   112 \u2502   \u2502   try:                                                                               \u2502\r\n\u2502 \u2771 113 \u2502   \u2502   \u2502   outputs = self._call(inputs)                                                   \u2502\r\n\u2502   114 \u2502   \u2502   except (KeyboardInterrupt, Exception) as e:                                        \u2502\r\n\u2502   115 \u2502   \u2502   \u2502   self.callback_manager.on_chain_error(e, verbose=self.verbose)                  \u2502\r\n\u2502   116 \u2502   \u2502   \u2502   raise e                                                                        \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/hysz/anaconda3/envs/chatglm/lib/python3.10/site-packages/langchain/chains/combine_document \u2502\r\n\u2502 s/base.py:75 in _call                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    72 \u2502   \u2502   docs = inputs[self.input_key]                                                      \u2502\r\n\u2502    73 \u2502   \u2502   # Other keys are assumed to be needed for LLM prediction                           \u2502\r\n\u2502    74 \u2502   \u2502   other_keys = {k: v for k, v in inputs.items() if k != self.input_key}              \u2502\r\n\u2502 \u2771  75 \u2502   \u2502   output, extra_return_dict = self.combine_docs(docs, **other_keys)                  \u2502\r\n\u2502    76 \u2502   \u2502   extra_return_dict[self.output_key] = output                                        \u2502\r\n\u2502    77 \u2502   \u2502   return extra_return_dict                                                           \u2502\r\n\u2502    78                                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/hysz/anaconda3/envs/chatglm/lib/python3.10/site-packages/langchain/chains/combine_document \u2502\r\n\u2502 s/map_rerank.py:97 in combine_docs                                                               \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    94 \u2502   \u2502                                                                                      \u2502\r\n\u2502    95 \u2502   \u2502   Combine by mapping first chain over all documents, then reranking the results.     \u2502\r\n\u2502    96 \u2502   \u2502   \"\"\"                                                                                \u2502\r\n\u2502 \u2771  97 \u2502   \u2502   results = self.llm_chain.apply_and_parse(                                          \u2502\r\n\u2502    98 \u2502   \u2502   \u2502   # FYI - this is parallelized and so it is fast.                                \u2502\r\n\u2502    99 \u2502   \u2502   \u2502   [{**{self.document_variable_name: d.page_content}, **kwargs} for d in docs]    \u2502\r\n\u2502   100 \u2502   \u2502   )                                                                                  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/hysz/anaconda3/envs/chatglm/lib/python3.10/site-packages/langchain/chains/llm.py:192 in    \u2502\r\n\u2502 apply_and_parse                                                                                  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   189 \u2502   ) -> Sequence[Union[str, List[str], Dict[str, str]]]:                                  \u2502\r\n\u2502   190 \u2502   \u2502   \"\"\"Call apply and then parse the results.\"\"\"                                       \u2502\r\n\u2502   191 \u2502   \u2502   result = self.apply(input_list)                                                    \u2502\r\n\u2502 \u2771 192 \u2502   \u2502   return self._parse_result(result)                                                  \u2502\r\n\u2502   193 \u2502                                                                                          \u2502\r\n\u2502   194 \u2502   def _parse_result(                                                                     \u2502\r\n\u2502   195 \u2502   \u2502   self, result: List[Dict[str, str]]                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/hysz/anaconda3/envs/chatglm/lib/python3.10/site-packages/langchain/chains/llm.py:198 in    \u2502\r\n\u2502 _parse_result                                                                                    \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   195 \u2502   \u2502   self, result: List[Dict[str, str]]                                                 \u2502\r\n\u2502   196 \u2502   ) -> Sequence[Union[str, List[str], Dict[str, str]]]:                                  \u2502\r\n\u2502   197 \u2502   \u2502   if self.prompt.output_parser is not None:                                          \u2502\r\n\u2502 \u2771 198 \u2502   \u2502   \u2502   return [                                                                       \u2502\r\n\u2502   199 \u2502   \u2502   \u2502   \u2502   self.prompt.output_parser.parse(res[self.output_key]) for res in result    \u2502\r\n\u2502   200 \u2502   \u2502   \u2502   ]                                                                              \u2502\r\n\u2502   201 \u2502   \u2502   else:                                                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/hysz/anaconda3/envs/chatglm/lib/python3.10/site-packages/langchain/chains/llm.py:199 in    \u2502\r\n\u2502 <listcomp>                                                                                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   196 \u2502   ) -> Sequence[Union[str, List[str], Dict[str, str]]]:                                  \u2502\r\n\u2502   197 \u2502   \u2502   if self.prompt.output_parser is not None:                                          \u2502\r\n\u2502   198 \u2502   \u2502   \u2502   return [                                                                       \u2502\r\n\u2502 \u2771 199 \u2502   \u2502   \u2502   \u2502   self.prompt.output_parser.parse(res[self.output_key]) for res in result    \u2502\r\n\u2502   200 \u2502   \u2502   \u2502   ]                                                                              \u2502\r\n\u2502   201 \u2502   \u2502   else:                                                                              \u2502\r\n\u2502   202 \u2502   \u2502   \u2502   return result                                                                  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/hysz/anaconda3/envs/chatglm/lib/python3.10/site-packages/langchain/output_parsers/regex.py \u2502\r\n\u2502 :28 in parse                                                                                     \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   25 \u2502   \u2502   \u2502   return {key: match.group(i + 1) for i, key in enumerate(self.output_keys)}      \u2502\r\n\u2502   26 \u2502   \u2502   else:                                                                               \u2502\r\n\u2502   27 \u2502   \u2502   \u2502   if self.default_output_key is None:                                             \u2502\r\n\u2502 \u2771 28 \u2502   \u2502   \u2502   \u2502   raise ValueError(f\"Could not parse output: {text}\")                         \u2502\r\n\u2502   29 \u2502   \u2502   \u2502   else:                                                                           \u2502\r\n\u2502   30 \u2502   \u2502   \u2502   \u2502   return {                                                                    \u2502\r\n\u2502   31 \u2502   \u2502   \u2502   \u2502   \u2502   key: text if key == self.default_output_key else \"\"                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nValueError: Could not parse output: \r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3970/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3970/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3969",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3969/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3969/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3969/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3969",
        "id": 1692274905,
        "node_id": "I_kwDOIPDwls5k3hDZ",
        "number": 3969,
        "title": "Get intermediate_steps with SQLDatabase Agent",
        "user": {
            "login": "pnd-rdestratis",
            "id": 114995442,
            "node_id": "U_kgDOBtqw8g",
            "avatar_url": "https://avatars.githubusercontent.com/u/114995442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pnd-rdestratis",
            "html_url": "https://github.com/pnd-rdestratis",
            "followers_url": "https://api.github.com/users/pnd-rdestratis/followers",
            "following_url": "https://api.github.com/users/pnd-rdestratis/following{/other_user}",
            "gists_url": "https://api.github.com/users/pnd-rdestratis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pnd-rdestratis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pnd-rdestratis/subscriptions",
            "organizations_url": "https://api.github.com/users/pnd-rdestratis/orgs",
            "repos_url": "https://api.github.com/users/pnd-rdestratis/repos",
            "events_url": "https://api.github.com/users/pnd-rdestratis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pnd-rdestratis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2023-05-02T11:47:15Z",
        "updated_at": "2023-12-12T16:37:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When using the SQL Chain I can return the intermediate steps so that I can output the Query. For the SQL Agent this seems not to be an option without modifying the tool itself. How can I see the actual queries used (not only in the verbose, but save it in a variable e.g.)?\r\n\r\nAlternatively is there a way to save the verbose output in a dict?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3969/reactions",
            "total_count": 4,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 4
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3969/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3968",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3968/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3968/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3968/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3968",
        "id": 1692261993,
        "node_id": "I_kwDOIPDwls5k3d5p",
        "number": 3968,
        "title": "Make Pandas Agent return DataFrame object?",
        "user": {
            "login": "ArchieLuxton",
            "id": 78753319,
            "node_id": "MDQ6VXNlcjc4NzUzMzE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/78753319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ArchieLuxton",
            "html_url": "https://github.com/ArchieLuxton",
            "followers_url": "https://api.github.com/users/ArchieLuxton/followers",
            "following_url": "https://api.github.com/users/ArchieLuxton/following{/other_user}",
            "gists_url": "https://api.github.com/users/ArchieLuxton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ArchieLuxton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ArchieLuxton/subscriptions",
            "organizations_url": "https://api.github.com/users/ArchieLuxton/orgs",
            "repos_url": "https://api.github.com/users/ArchieLuxton/repos",
            "events_url": "https://api.github.com/users/ArchieLuxton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ArchieLuxton/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-02T11:37:03Z",
        "updated_at": "2023-09-22T16:10:35Z",
        "closed_at": "2023-09-22T16:10:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Currently I'm using a specific prompt suffix (`\". Assign the printed dataframe to a variable and return it as the final answer.\"`) in the Pandas agent, which sometimes gives the result I'm looking for as a printed DataFrame. I've then written an output parser that turns this into a JSON which can then be loaded as a DataFrame. \r\n\r\nThe problem with this is the Pandas agent often doesn't output the DataFrame, instead printing the variable name or the last command used to get to that result, and also critically the output parser uses many tokens for the kinds of data I'm working with. \r\n\r\nIs it possible to force the Pandas agent to return the output of its analysis as a Pandas DataFrame object? ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3968/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3967",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3967/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3967/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3967/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3967",
        "id": 1692223105,
        "node_id": "I_kwDOIPDwls5k3UaB",
        "number": 3967,
        "title": "[Feature] Redis Vectorestore - similarity_search filter by metadata",
        "user": {
            "login": "benjaminmay1",
            "id": 132348762,
            "node_id": "U_kgDOB-N7Wg",
            "avatar_url": "https://avatars.githubusercontent.com/u/132348762?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benjaminmay1",
            "html_url": "https://github.com/benjaminmay1",
            "followers_url": "https://api.github.com/users/benjaminmay1/followers",
            "following_url": "https://api.github.com/users/benjaminmay1/following{/other_user}",
            "gists_url": "https://api.github.com/users/benjaminmay1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benjaminmay1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benjaminmay1/subscriptions",
            "organizations_url": "https://api.github.com/users/benjaminmay1/orgs",
            "repos_url": "https://api.github.com/users/benjaminmay1/repos",
            "events_url": "https://api.github.com/users/benjaminmay1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benjaminmay1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 27,
        "created_at": "2023-05-02T11:08:29Z",
        "updated_at": "2023-10-31T21:51:13Z",
        "closed_at": "2023-10-31T21:51:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Chroma or Pinecone Vector databases allow filtering documents by metadata with the filter parameter in the similarity_search function but the similarity_search does not have this parameter. Would it be possible to enable similarity_search for Redis Vector store?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3967/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3967/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3966",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3966/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3966/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3966/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3966",
        "id": 1692209891,
        "node_id": "I_kwDOIPDwls5k3RLj",
        "number": 3966,
        "title": "Callback Manager",
        "user": {
            "login": "shreyabhadwal",
            "id": 80118039,
            "node_id": "MDQ6VXNlcjgwMTE4MDM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/80118039?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shreyabhadwal",
            "html_url": "https://github.com/shreyabhadwal",
            "followers_url": "https://api.github.com/users/shreyabhadwal/followers",
            "following_url": "https://api.github.com/users/shreyabhadwal/following{/other_user}",
            "gists_url": "https://api.github.com/users/shreyabhadwal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shreyabhadwal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shreyabhadwal/subscriptions",
            "organizations_url": "https://api.github.com/users/shreyabhadwal/orgs",
            "repos_url": "https://api.github.com/users/shreyabhadwal/repos",
            "events_url": "https://api.github.com/users/shreyabhadwal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shreyabhadwal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-02T10:59:02Z",
        "updated_at": "2023-05-06T04:22:59Z",
        "closed_at": "2023-05-06T04:22:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "What's the difference between the two parameters handlers and inheritable_handlers in the callback manager class?\r\n\r\nAlso if I am not wrong, previously there was only AsyncCallBackManager and BaseCallbackManager. What's the recent introduction of langchain.callbacks.manager for? \r\n\r\nWhich one should I use for ConversationalRetrievalChain?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3966/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3966/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3965",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3965/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3965/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3965/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3965",
        "id": 1692166533,
        "node_id": "I_kwDOIPDwls5k3GmF",
        "number": 3965,
        "title": "[Feature Request] ConversationalChain prints system, user and human message prompts using separate colors.",
        "user": {
            "login": "jcoombes",
            "id": 12532438,
            "node_id": "MDQ6VXNlcjEyNTMyNDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12532438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcoombes",
            "html_url": "https://github.com/jcoombes",
            "followers_url": "https://api.github.com/users/jcoombes/followers",
            "following_url": "https://api.github.com/users/jcoombes/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcoombes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcoombes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcoombes/subscriptions",
            "organizations_url": "https://api.github.com/users/jcoombes/orgs",
            "repos_url": "https://api.github.com/users/jcoombes/repos",
            "events_url": "https://api.github.com/users/jcoombes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcoombes/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-02T10:26:54Z",
        "updated_at": "2023-09-10T16:23:52Z",
        "closed_at": "2023-09-10T16:23:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Currently the logging output from the ConversationChain is quite hard to read.\r\n\r\nI believe implementing separate colors from System Messages, Human Messages and AI messages by role would involve modifying the prep_prompts and the aprep_prompts methods within the ConversationChain subclass.\r\n\r\nSomething like:\r\n\r\n```\r\n    def prep_prompts(self, input_list: List[Dict[str, Any]]) -> Tuple[List[PromptValue], Optional[List[str]]]:\r\n        \"\"\"Prepare prompts from inputs.\"\"\"\r\n        stop = None\r\n        if \"stop\" in input_list[0]:\r\n            stop = input_list[0][\"stop\"]\r\n        prompts = []\r\n        for inputs in input_list:\r\n            selected_inputs = {k: inputs[k] for k in self.prompt.input_variables}\r\n            prompt = self.prompt.format_prompt(**selected_inputs)\r\n            \r\n            _text_parts = []\r\n            for section in prompt:\r\n                if section.role == \"Human\":\r\n                    _text_parts.append(get_colored_text(section.to_string(), \"green\"))\r\n                elif section.role == \"AI\":\r\n                    _text_parts.append(get_colored_text(section.to_string(), \"blue\"))\r\n                elif section.role == \"System\":\r\n                    _text_parts.append(get_colored_text(section.to_string(), \"white\"))\r\n                else:\r\n                    raise ValueError(f\"Unknown role: {section.role}\")\r\n\r\n            # _colored_text = get_colored_text(prompt.to_string(), \"green\")\r\n            _colored_text = \"\\n\".join(_text_parts)\r\n\r\n            _text = \"Prompt after formatting:\\n\" + _colored_text\r\n            self.callback_manager.on_text(_text, end=\"\\n\", verbose=self.verbose)\r\n            if \"stop\" in inputs and inputs[\"stop\"] != stop:\r\n                raise ValueError(\"If `stop` is present in any inputs, should be present in all.\")\r\n            prompts.append(prompt)\r\n        return prompts, stop\r\n```\r\n\r\nAs far as I'm aware, this won't work because I don't understand how to work with the PromptValue ABC, \r\nwhether a ConversationChatPrompt's PromptValue can be iterated over.\r\n\r\nIt might also be possible to call .to_messages() on the PromptValue, iterate over the messages, getting the appropriate colored text, then returning the concatenated result.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3965/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3965/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3964",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3964/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3964/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3964/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3964",
        "id": 1692135590,
        "node_id": "PR_kwDOIPDwls5Pklmg",
        "number": 3964,
        "title": "env variable based fix for non chatgpt embeddings",
        "user": {
            "login": "woodworker",
            "id": 85796,
            "node_id": "MDQ6VXNlcjg1Nzk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/85796?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/woodworker",
            "html_url": "https://github.com/woodworker",
            "followers_url": "https://api.github.com/users/woodworker/followers",
            "following_url": "https://api.github.com/users/woodworker/following{/other_user}",
            "gists_url": "https://api.github.com/users/woodworker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/woodworker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/woodworker/subscriptions",
            "organizations_url": "https://api.github.com/users/woodworker/orgs",
            "repos_url": "https://api.github.com/users/woodworker/repos",
            "events_url": "https://api.github.com/users/woodworker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/woodworker/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T10:03:59Z",
        "updated_at": "2023-05-06T09:53:30Z",
        "closed_at": "2023-05-05T23:31:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3964",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3964",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3964.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3964.patch",
            "merged_at": "2023-05-05T23:31:38Z"
        },
        "body": "this is a simple fix for #2219 \r\n\r\ni also added some documentation for this environment variable",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3964/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3963",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3963/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3963/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3963/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3963",
        "id": 1692127355,
        "node_id": "I_kwDOIPDwls5k29B7",
        "number": 3963,
        "title": "Relevancy for Chroma retriever results for non relevant questions",
        "user": {
            "login": "My3VM",
            "id": 7744689,
            "node_id": "MDQ6VXNlcjc3NDQ2ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7744689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/My3VM",
            "html_url": "https://github.com/My3VM",
            "followers_url": "https://api.github.com/users/My3VM/followers",
            "following_url": "https://api.github.com/users/My3VM/following{/other_user}",
            "gists_url": "https://api.github.com/users/My3VM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/My3VM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/My3VM/subscriptions",
            "organizations_url": "https://api.github.com/users/My3VM/orgs",
            "repos_url": "https://api.github.com/users/My3VM/repos",
            "events_url": "https://api.github.com/users/My3VM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/My3VM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T09:58:43Z",
        "updated_at": "2023-09-10T16:23:57Z",
        "closed_at": "2023-09-10T16:23:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "While it is known that ultimately it is the responsibility of the prompt to control the responses to QA task, the ConversationalRetrievalChain running with ConversationSummaryBufferMemory occasionally responds with strange replies to non relevant questions.\r\nIn the prompt it is mentioned like _\"Please do not refer to document sources while responding to off-topic questions.\"_\r\n\r\nDuring the middle of a conversation, asking non relevant questions like 'hello', 'how are you' repeats one of the previous responses back as fresh response. While I am using ConversationSummaryBufferMemory to serve as memory to the bot, am not sure if I have to consider the accuracy of the retriever for handling such scenarios? As it is already known,  vector store with Chroma db doesn't allow the search relevance threshold based on similarity score. Printing the accuracy of docs_and_scores from \r\n\r\nPrinting **similarity_search** revealed that the similarity always ranges between 3.1 to 4.1 for both relevant /irrelevant responses.\r\nConfiguring retreiver with (search_type=\"similarity\", search_kwargs={\"k\":2}) also doesnt help the situation much.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3963/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3963/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3962",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3962/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3962/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3962/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3962",
        "id": 1692090239,
        "node_id": "I_kwDOIPDwls5k2z9_",
        "number": 3962,
        "title": "How can I customize Chat Models? For example, use the chatgpt web page in an api-like manner through the pandora project",
        "user": {
            "login": "14790897",
            "id": 121866954,
            "node_id": "U_kgDOB0OKyg",
            "avatar_url": "https://avatars.githubusercontent.com/u/121866954?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/14790897",
            "html_url": "https://github.com/14790897",
            "followers_url": "https://api.github.com/users/14790897/followers",
            "following_url": "https://api.github.com/users/14790897/following{/other_user}",
            "gists_url": "https://api.github.com/users/14790897/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/14790897/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/14790897/subscriptions",
            "organizations_url": "https://api.github.com/users/14790897/orgs",
            "repos_url": "https://api.github.com/users/14790897/repos",
            "events_url": "https://api.github.com/users/14790897/events{/privacy}",
            "received_events_url": "https://api.github.com/users/14790897/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T09:32:33Z",
        "updated_at": "2023-05-06T06:20:47Z",
        "closed_at": "2023-05-06T06:20:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "api documentations:https://github.com/pengzhile/pandora/blob/master/doc/HTTP-API.md",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3962/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3962/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3961",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3961/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3961/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3961/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3961",
        "id": 1692079622,
        "node_id": "PR_kwDOIPDwls5PkZn4",
        "number": 3961,
        "title": "Fix issue #3960 ModuleNotFoundError: No module named 'langchain.schemas'",
        "user": {
            "login": "Aspyryan",
            "id": 52763578,
            "node_id": "MDQ6VXNlcjUyNzYzNTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/52763578?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aspyryan",
            "html_url": "https://github.com/Aspyryan",
            "followers_url": "https://api.github.com/users/Aspyryan/followers",
            "following_url": "https://api.github.com/users/Aspyryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aspyryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aspyryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aspyryan/subscriptions",
            "organizations_url": "https://api.github.com/users/Aspyryan/orgs",
            "repos_url": "https://api.github.com/users/Aspyryan/repos",
            "events_url": "https://api.github.com/users/Aspyryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aspyryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T09:25:03Z",
        "updated_at": "2023-05-03T09:30:18Z",
        "closed_at": "2023-05-03T09:30:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3961",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3961",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3961.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3961.patch",
            "merged_at": null
        },
        "body": "Fixed a typo in the vectorstore.py file",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3961/reactions",
            "total_count": 8,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 3,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3961/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3960",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3960/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3960/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3960/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3960",
        "id": 1692069373,
        "node_id": "I_kwDOIPDwls5k2u39",
        "number": 3960,
        "title": "ModuleNotFoundError: No module named 'langchain.schemas'",
        "user": {
            "login": "Aspyryan",
            "id": 52763578,
            "node_id": "MDQ6VXNlcjUyNzYzNTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/52763578?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aspyryan",
            "html_url": "https://github.com/Aspyryan",
            "followers_url": "https://api.github.com/users/Aspyryan/followers",
            "following_url": "https://api.github.com/users/Aspyryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aspyryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aspyryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aspyryan/subscriptions",
            "organizations_url": "https://api.github.com/users/Aspyryan/orgs",
            "repos_url": "https://api.github.com/users/Aspyryan/repos",
            "events_url": "https://api.github.com/users/Aspyryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aspyryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-05-02T09:17:39Z",
        "updated_at": "2023-05-03T09:29:32Z",
        "closed_at": "2023-05-03T09:29:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When installing `Langchain==0.0.155` I am getting the error that `langchain.schemas` does not exists. This is because the file is named langchain.schema so there is a typo. I will create a pull request and reference this issue.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3960/reactions",
            "total_count": 11,
            "+1": 11,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3960/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3959",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3959/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3959/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3959/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3959",
        "id": 1692042664,
        "node_id": "PR_kwDOIPDwls5PkRue",
        "number": 3959,
        "title": "Update obsidian.py",
        "user": {
            "login": "shkarlsson",
            "id": 4531275,
            "node_id": "MDQ6VXNlcjQ1MzEyNzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4531275?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shkarlsson",
            "html_url": "https://github.com/shkarlsson",
            "followers_url": "https://api.github.com/users/shkarlsson/followers",
            "following_url": "https://api.github.com/users/shkarlsson/following{/other_user}",
            "gists_url": "https://api.github.com/users/shkarlsson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shkarlsson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shkarlsson/subscriptions",
            "organizations_url": "https://api.github.com/users/shkarlsson/orgs",
            "repos_url": "https://api.github.com/users/shkarlsson/repos",
            "events_url": "https://api.github.com/users/shkarlsson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shkarlsson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T08:59:38Z",
        "updated_at": "2023-05-05T23:45:27Z",
        "closed_at": "2023-05-05T23:45:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3959",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3959",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3959.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3959.patch",
            "merged_at": "2023-05-05T23:45:26Z"
        },
        "body": "Added creation, edit and open time to metadata",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3959/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3959/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3958",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3958/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3958/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3958/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3958",
        "id": 1691953079,
        "node_id": "PR_kwDOIPDwls5Pj-cJ",
        "number": 3958,
        "title": "Fix compatiblity with SQLAlchemy 1.3",
        "user": {
            "login": "hrist0stoichev",
            "id": 6693671,
            "node_id": "MDQ6VXNlcjY2OTM2NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6693671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hrist0stoichev",
            "html_url": "https://github.com/hrist0stoichev",
            "followers_url": "https://api.github.com/users/hrist0stoichev/followers",
            "following_url": "https://api.github.com/users/hrist0stoichev/following{/other_user}",
            "gists_url": "https://api.github.com/users/hrist0stoichev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hrist0stoichev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hrist0stoichev/subscriptions",
            "organizations_url": "https://api.github.com/users/hrist0stoichev/orgs",
            "repos_url": "https://api.github.com/users/hrist0stoichev/repos",
            "events_url": "https://api.github.com/users/hrist0stoichev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hrist0stoichev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-02T07:56:48Z",
        "updated_at": "2023-08-01T01:18:36Z",
        "closed_at": "2023-08-01T01:18:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3958",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3958",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3958.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3958.patch",
            "merged_at": null
        },
        "body": "Related to [this issue](https://github.com/hwchase17/langchain/issues/3655#issuecomment-1529415363) and [this PR](https://github.com/hwchase17/langchain/pull/3862).\r\n\r\nIt seems there are more thing that depends on `sqlalchemy >= 1.4` so I'm fixing those in this PR. Also, locking SQLAlchemy to `1.3.24` so that the build step will fail if something that depends on `sqlalchemy >= 1.4` is added.\r\n\r\n1. `from sqlalchemy.orm import declarative_base` -> `from sqlalchemy.ext.declarative import declarative_base`\r\n2. `with Session()` -> `session = Session(); try: ... finally: session.close()`\r\n3. `query().where()` -> `query().filter()` - `where` is synonym for `filter` in 1.4\r\n4. `select()` -> `query()` - The `select` API is quite different in 1.3.\r\n5. `exec_driver_sql()` -> `execute()` - this is a synonym in 1.4\r\n\r\nI realize this change is becoming quite complex so another approach might be to just revert my previous PR and start depending on `sqlalchemy >= 1.4` again but I still think that backwards compatibility is more important for a library so I will just submit this PR for review.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3958/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3957",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3957/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3957/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3957/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3957",
        "id": 1691889457,
        "node_id": "I_kwDOIPDwls5k2C8x",
        "number": 3957,
        "title": "Allowed tools (set()) different than provided tools error - all/most Agent examples broken?",
        "user": {
            "login": "francisjervis",
            "id": 10519862,
            "node_id": "MDQ6VXNlcjEwNTE5ODYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10519862?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/francisjervis",
            "html_url": "https://github.com/francisjervis",
            "followers_url": "https://api.github.com/users/francisjervis/followers",
            "following_url": "https://api.github.com/users/francisjervis/following{/other_user}",
            "gists_url": "https://api.github.com/users/francisjervis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/francisjervis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/francisjervis/subscriptions",
            "organizations_url": "https://api.github.com/users/francisjervis/orgs",
            "repos_url": "https://api.github.com/users/francisjervis/repos",
            "events_url": "https://api.github.com/users/francisjervis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/francisjervis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-05-02T07:04:11Z",
        "updated_at": "2023-05-05T09:47:17Z",
        "closed_at": "2023-05-03T20:17:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Since upgrading to 0.0.155, the following code does not work:\r\n```\r\ntool_names = [tool.name for tool in tools]\r\nagent = LLMSingleActionAgent(\r\n    llm_chain=llm_chain,\r\n    output_parser=output_parser,\r\n    stop=[\"\\nObservation:\"],\r\n    allowed_tools=tool_names\r\n)\r\n```\r\nThe following error is raised in what was previously working code so this appears to be a breaking change:\r\n```\r\npydantic.error_wrappers.ValidationError: 1 validation error for AgentExecutor\r\n__root__\r\n  Allowed tools (set()) different than provided tools (['Tenant Rights Assistant', 'Lease Question Answerer', 'Building Database Query']) (type=value_error)\r\n```\r\nThis makes no sense. Printing tool_names yields ```{'Tenant Rights Assistant', 'Lease Question Answerer', 'Building Database Query'}``` which is exactly the same as the list of provided tools - presumably, since this was copied directly from the example code with my own tools (again, previously working fine), this means the examples are also now non-functional.\r\n\r\n ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3957/reactions",
            "total_count": 10,
            "+1": 10,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3957/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3956",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3956/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3956/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3956/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3956",
        "id": 1691866126,
        "node_id": "PR_kwDOIPDwls5Pjr3L",
        "number": 3956,
        "title": "Add kNN Retriever",
        "user": {
            "login": "hotchpotch",
            "id": 3500,
            "node_id": "MDQ6VXNlcjM1MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3500?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hotchpotch",
            "html_url": "https://github.com/hotchpotch",
            "followers_url": "https://api.github.com/users/hotchpotch/followers",
            "following_url": "https://api.github.com/users/hotchpotch/following{/other_user}",
            "gists_url": "https://api.github.com/users/hotchpotch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hotchpotch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hotchpotch/subscriptions",
            "organizations_url": "https://api.github.com/users/hotchpotch/orgs",
            "repos_url": "https://api.github.com/users/hotchpotch/repos",
            "events_url": "https://api.github.com/users/hotchpotch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hotchpotch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T06:43:30Z",
        "updated_at": "2023-05-04T04:11:38Z",
        "closed_at": "2023-05-04T04:11:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3956",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3956",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3956.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3956.patch",
            "merged_at": "2023-05-04T04:11:38Z"
        },
        "body": "We have added kNN Retriver, a counterpart to SVM Retriver. #2947\r\n\r\nThis is useful for applications to see which results are better than SVM Retriver.\r\n\r\nYou can also use vector store retriver and use kNN implemented in vector store, but this one is on-memory and pure python.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3956/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3956/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3955",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3955/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3955/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3955/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3955",
        "id": 1691845593,
        "node_id": "I_kwDOIPDwls5k14PZ",
        "number": 3955,
        "title": "OutputParserException with correct answer",
        "user": {
            "login": "maccarini",
            "id": 22087162,
            "node_id": "MDQ6VXNlcjIyMDg3MTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/22087162?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maccarini",
            "html_url": "https://github.com/maccarini",
            "followers_url": "https://api.github.com/users/maccarini/followers",
            "following_url": "https://api.github.com/users/maccarini/following{/other_user}",
            "gists_url": "https://api.github.com/users/maccarini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maccarini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maccarini/subscriptions",
            "organizations_url": "https://api.github.com/users/maccarini/orgs",
            "repos_url": "https://api.github.com/users/maccarini/repos",
            "events_url": "https://api.github.com/users/maccarini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maccarini/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-02T06:23:29Z",
        "updated_at": "2023-10-31T16:07:40Z",
        "closed_at": "2023-10-31T16:07:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am constantly getting OutputParserException from my agent executions but it actually outputs the correct or desired answer to the problem i'm presenting to the agent. Is there a way to redirect that output as the final answer to avoid that error?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3955/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3954",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3954/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3954/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3954/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3954",
        "id": 1691830171,
        "node_id": "PR_kwDOIPDwls5PjkSE",
        "number": 3954,
        "title": "fix #3709 PydanticOutputParser fail when completion contains newline",
        "user": {
            "login": "lucemia",
            "id": 432851,
            "node_id": "MDQ6VXNlcjQzMjg1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/432851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lucemia",
            "html_url": "https://github.com/lucemia",
            "followers_url": "https://api.github.com/users/lucemia/followers",
            "following_url": "https://api.github.com/users/lucemia/following{/other_user}",
            "gists_url": "https://api.github.com/users/lucemia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lucemia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lucemia/subscriptions",
            "organizations_url": "https://api.github.com/users/lucemia/orgs",
            "repos_url": "https://api.github.com/users/lucemia/repos",
            "events_url": "https://api.github.com/users/lucemia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lucemia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5463330795,
                "node_id": "LA_kwDOIPDwls8AAAABRaPP6w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20test",
                "name": "needs test",
                "color": "E99695",
                "default": false,
                "description": "PR needs to be updated with tests"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T06:05:31Z",
        "updated_at": "2023-05-14T01:52:12Z",
        "closed_at": "2023-05-14T01:52:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3954",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3954",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3954.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3954.patch",
            "merged_at": "2023-05-14T01:52:11Z"
        },
        "body": "fix #3709 by allowing json.load with strict=False",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3954/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3953",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3953/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3953/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3953/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3953",
        "id": 1691828551,
        "node_id": "PR_kwDOIPDwls5Pjj8r",
        "number": 3953,
        "title": "[simple] remove redundant value merge.",
        "user": {
            "login": "skcoirz",
            "id": 62768671,
            "node_id": "MDQ6VXNlcjYyNzY4Njcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62768671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skcoirz",
            "html_url": "https://github.com/skcoirz",
            "followers_url": "https://api.github.com/users/skcoirz/followers",
            "following_url": "https://api.github.com/users/skcoirz/following{/other_user}",
            "gists_url": "https://api.github.com/users/skcoirz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skcoirz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skcoirz/subscriptions",
            "organizations_url": "https://api.github.com/users/skcoirz/orgs",
            "repos_url": "https://api.github.com/users/skcoirz/repos",
            "events_url": "https://api.github.com/users/skcoirz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skcoirz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-02T06:03:57Z",
        "updated_at": "2023-05-09T18:56:13Z",
        "closed_at": "2023-05-02T17:32:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3953",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3953",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3953.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3953.patch",
            "merged_at": null
        },
        "body": "- as titled, provide a default dictionary. that\u2019s it. make code simpler and also make type check simpler.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3953/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3952",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3952/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3952/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3952/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3952",
        "id": 1691825748,
        "node_id": "PR_kwDOIPDwls5PjjWU",
        "number": 3952,
        "title": "[simple] simplify type check a little bit",
        "user": {
            "login": "skcoirz",
            "id": 62768671,
            "node_id": "MDQ6VXNlcjYyNzY4Njcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62768671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skcoirz",
            "html_url": "https://github.com/skcoirz",
            "followers_url": "https://api.github.com/users/skcoirz/followers",
            "following_url": "https://api.github.com/users/skcoirz/following{/other_user}",
            "gists_url": "https://api.github.com/users/skcoirz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skcoirz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skcoirz/subscriptions",
            "organizations_url": "https://api.github.com/users/skcoirz/orgs",
            "repos_url": "https://api.github.com/users/skcoirz/repos",
            "events_url": "https://api.github.com/users/skcoirz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skcoirz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T06:01:20Z",
        "updated_at": "2023-05-09T18:56:08Z",
        "closed_at": "2023-05-02T17:32:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3952",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3952",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3952.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3952.patch",
            "merged_at": null
        },
        "body": "- just set default to an empty dictionary. that\u2019s it. no need to add another `or`.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3952/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3952/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3951",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3951/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3951/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3951/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3951",
        "id": 1691802958,
        "node_id": "PR_kwDOIPDwls5PjegO",
        "number": 3951,
        "title": "v2 tracer with single runs endpoint",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T05:33:18Z",
        "updated_at": "2023-05-02T05:41:33Z",
        "closed_at": "2023-05-02T05:41:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3951",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3951",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3951.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3951.patch",
            "merged_at": "2023-05-02T05:41:32Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3951/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3951/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3950",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3950/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3950/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3950/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3950",
        "id": 1691802345,
        "node_id": "I_kwDOIPDwls5k1trp",
        "number": 3950,
        "title": "custom value in `input_variables` would cause missing_variable exception",
        "user": {
            "login": "skcoirz",
            "id": 62768671,
            "node_id": "MDQ6VXNlcjYyNzY4Njcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62768671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skcoirz",
            "html_url": "https://github.com/skcoirz",
            "followers_url": "https://api.github.com/users/skcoirz/followers",
            "following_url": "https://api.github.com/users/skcoirz/following{/other_user}",
            "gists_url": "https://api.github.com/users/skcoirz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skcoirz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skcoirz/subscriptions",
            "organizations_url": "https://api.github.com/users/skcoirz/orgs",
            "repos_url": "https://api.github.com/users/skcoirz/repos",
            "events_url": "https://api.github.com/users/skcoirz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skcoirz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T05:32:19Z",
        "updated_at": "2023-05-02T05:39:31Z",
        "closed_at": "2023-05-02T05:39:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "How to reproduce: just pass in a non-None list to `create_pandas_dataframe_agent`, you will see template validator return \u201cmissing key\u201d exception.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3950/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3949",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3949/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3949/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3949/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3949",
        "id": 1691800773,
        "node_id": "I_kwDOIPDwls5k1tTF",
        "number": 3949,
        "title": "MultiAgentLLMAction",
        "user": {
            "login": "Playerrrrr",
            "id": 77760472,
            "node_id": "MDQ6VXNlcjc3NzYwNDcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/77760472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Playerrrrr",
            "html_url": "https://github.com/Playerrrrr",
            "followers_url": "https://api.github.com/users/Playerrrrr/followers",
            "following_url": "https://api.github.com/users/Playerrrrr/following{/other_user}",
            "gists_url": "https://api.github.com/users/Playerrrrr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Playerrrrr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Playerrrrr/subscriptions",
            "organizations_url": "https://api.github.com/users/Playerrrrr/orgs",
            "repos_url": "https://api.github.com/users/Playerrrrr/repos",
            "events_url": "https://api.github.com/users/Playerrrrr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Playerrrrr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T05:30:01Z",
        "updated_at": "2023-05-02T05:45:20Z",
        "closed_at": "2023-05-02T05:45:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hey ive been working on trying to implement a Custom LLM Agent via ChatOpenAI with access to Bash and REPL tools, but been running into a problem of not being able to execute MultiAgentLLMAction module properly for it to work, do you have any hints or ideas of why is this the case? ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3949/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3949/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3948",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3948/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3948/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3948/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3948",
        "id": 1691799898,
        "node_id": "PR_kwDOIPDwls5Pjd33",
        "number": 3948,
        "title": "[Fix] custom input_variables doesn\u2019t work in pandas custom agent",
        "user": {
            "login": "skcoirz",
            "id": 62768671,
            "node_id": "MDQ6VXNlcjYyNzY4Njcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62768671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skcoirz",
            "html_url": "https://github.com/skcoirz",
            "followers_url": "https://api.github.com/users/skcoirz/followers",
            "following_url": "https://api.github.com/users/skcoirz/following{/other_user}",
            "gists_url": "https://api.github.com/users/skcoirz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skcoirz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skcoirz/subscriptions",
            "organizations_url": "https://api.github.com/users/skcoirz/orgs",
            "repos_url": "https://api.github.com/users/skcoirz/repos",
            "events_url": "https://api.github.com/users/skcoirz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skcoirz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T05:28:43Z",
        "updated_at": "2023-05-09T18:56:04Z",
        "closed_at": "2023-05-02T05:39:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3948",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3948",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3948.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3948.patch",
            "merged_at": null
        },
        "body": "Issue: https://github.com/hwchase17/langchain/issues/3950\r\nRoot Cause: \r\n- when custom `input_variables`, it will override the default values. In order to use them, a customized and relevant prompt is needed, which is however not supported in this function. Only default prompts are used everywhere, which means the default template will be used ([code pointer](langchain/agents/agent_toolkits/pandas/prompt.py), which doesn\u2019t have any support for a different variable and all the 3 variables are mandatory. This means `input_variables` isn\u2019t supported as a function param. It\u2019s better to remove for now. If later we figure out a need to customize pandas prompt template, we can provide a new entry point, but so far, not seeing the needs yet.\r\n\r\n\r\nTest:\r\n```python3\r\nfrom langchain.agents import create_pandas_dataframe_agent\r\nfrom langchain.llms import OpenAI\r\nimport pandas as pd\r\n\r\ndf = pd.read_csv('titanic_train.csv')\r\nagent = create_pandas_dataframe_agent(\r\n    OpenAI(temperature=0.5),\r\n    df,\r\n    verbose=True\r\n)\r\n```python3\r\nagent.run(\"how many people have more than 3 sibligngs\")\r\n```\r\n<img width=\"540\" alt=\"Screenshot 2023-05-01 at 10 29 30 PM\" src=\"https://user-images.githubusercontent.com/62768671/235586105-bd08e7cc-64b7-429f-aaf5-8e8ef794b551.png\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3948/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3947",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3947/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3947/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3947/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3947",
        "id": 1691799815,
        "node_id": "I_kwDOIPDwls5k1tEH",
        "number": 3947,
        "title": "Giving SystemMessage/Context to ConversationalRetrievalChain and ConversationBufferMemory",
        "user": {
            "login": "etkinhud-mvla",
            "id": 92547119,
            "node_id": "U_kgDOBYQoLw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92547119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/etkinhud-mvla",
            "html_url": "https://github.com/etkinhud-mvla",
            "followers_url": "https://api.github.com/users/etkinhud-mvla/followers",
            "following_url": "https://api.github.com/users/etkinhud-mvla/following{/other_user}",
            "gists_url": "https://api.github.com/users/etkinhud-mvla/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/etkinhud-mvla/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/etkinhud-mvla/subscriptions",
            "organizations_url": "https://api.github.com/users/etkinhud-mvla/orgs",
            "repos_url": "https://api.github.com/users/etkinhud-mvla/repos",
            "events_url": "https://api.github.com/users/etkinhud-mvla/events{/privacy}",
            "received_events_url": "https://api.github.com/users/etkinhud-mvla/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-02T05:28:35Z",
        "updated_at": "2023-11-26T16:09:51Z",
        "closed_at": "2023-11-26T16:09:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm trying to build a chatbot that can chat about pdfs, and I got it working with memory using ConversationBufferMemory and ConversationalRetrievalChain like in this example. https://python.langchain.com/en/latest/modules/chains/index_examples/chat_vector_db.html\r\n\r\nNow I'm trying to give the AI some special instructions to talk like a pirate (just for testing to see if it is receiving the instructions). I think this is meant to be a SystemMessage, or something with a prompt template? I've tried everything I have found, but all the examples in the documentation are for ConversationChain and I end up having problems with. So far the only thing that hasn't had any errors is this\r\n```\r\ntemplate = \"\"\"Given the following conversation respond to the best of your ability in a pirate voice and end every sentence with Ay Ay Matey\r\nChat History:\r\n{chat_history}\r\nFollow Up Input: {question}\r\nStandalone question:\"\"\"\r\nPROMPT = PromptTemplate(\r\n    input_variables=[\"chat_history\", \"question\"], template=template\r\n)\r\nmemory = ConversationBufferMemory(memory_key='chat_history', return_messages=True, output_key='answer')\r\nqa = ConversationalRetrievalChain.from_llm(OpenAI(temperature=0), vectorstore.as_retriever(), PROMPT, memory=memory, return_source_documents=True)\r\n```\r\n\r\nIt still doesn't have any effect on the results, so I don't know if it is doing anything at all. I also think it's the wrong approach, and i should be using SystemMessages (maybe on the memory, not the qa), but nothing I try from the documentation works and I'm not sure what to do.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3947/reactions",
            "total_count": 9,
            "+1": 8,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3947/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3946",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3946/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3946/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3946/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3946",
        "id": 1691791054,
        "node_id": "PR_kwDOIPDwls5PjcCN",
        "number": 3946,
        "title": "ChatOpenAI basepath support",
        "user": {
            "login": "dave-gray101",
            "id": 15875595,
            "node_id": "MDQ6VXNlcjE1ODc1NTk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/15875595?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dave-gray101",
            "html_url": "https://github.com/dave-gray101",
            "followers_url": "https://api.github.com/users/dave-gray101/followers",
            "following_url": "https://api.github.com/users/dave-gray101/following{/other_user}",
            "gists_url": "https://api.github.com/users/dave-gray101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dave-gray101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dave-gray101/subscriptions",
            "organizations_url": "https://api.github.com/users/dave-gray101/orgs",
            "repos_url": "https://api.github.com/users/dave-gray101/repos",
            "events_url": "https://api.github.com/users/dave-gray101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dave-gray101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-02T05:15:18Z",
        "updated_at": "2023-12-05T12:28:40Z",
        "closed_at": "2023-05-14T03:36:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3946",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3946",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3946.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3946.patch",
            "merged_at": "2023-05-14T03:36:13Z"
        },
        "body": "Some of the other OpenAI wrappers within langchain, and the openai python module itself support overriding the API base path.\r\n\r\nLocalAI is at least one project that aims to provide a partial implementation of the OpenAI apis. By overriding the API base path, I was able to quickly hook together the existing langchain JS OpenAI modules to the LocalAI backend. This PR would enable similar overriding for the ChatOpenAI class so the python implementation would be able to do so as well.\r\n\r\nEDIT: Changes pass tests and have been proven to redirect the API request successfully!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3946/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3946/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3945",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3945/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3945/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3945/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3945",
        "id": 1691779011,
        "node_id": "PR_kwDOIPDwls5PjZcI",
        "number": 3945,
        "title": "docs: remove stdout from pip install",
        "user": {
            "login": "mbchang",
            "id": 6439365,
            "node_id": "MDQ6VXNlcjY0MzkzNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6439365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbchang",
            "html_url": "https://github.com/mbchang",
            "followers_url": "https://api.github.com/users/mbchang/followers",
            "following_url": "https://api.github.com/users/mbchang/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbchang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbchang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbchang/subscriptions",
            "organizations_url": "https://api.github.com/users/mbchang/orgs",
            "repos_url": "https://api.github.com/users/mbchang/repos",
            "events_url": "https://api.github.com/users/mbchang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbchang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T05:00:21Z",
        "updated_at": "2023-05-02T05:19:35Z",
        "closed_at": "2023-05-02T05:05:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3945",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3945",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3945.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3945.patch",
            "merged_at": "2023-05-02T05:05:23Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3945/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3945/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3944",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3944/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3944/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3944/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3944",
        "id": 1691775613,
        "node_id": "PR_kwDOIPDwls5PjYuK",
        "number": 3944,
        "title": "[check] add import check and warning for pandas",
        "user": {
            "login": "skcoirz",
            "id": 62768671,
            "node_id": "MDQ6VXNlcjYyNzY4Njcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62768671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skcoirz",
            "html_url": "https://github.com/skcoirz",
            "followers_url": "https://api.github.com/users/skcoirz/followers",
            "following_url": "https://api.github.com/users/skcoirz/following{/other_user}",
            "gists_url": "https://api.github.com/users/skcoirz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skcoirz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skcoirz/subscriptions",
            "organizations_url": "https://api.github.com/users/skcoirz/orgs",
            "repos_url": "https://api.github.com/users/skcoirz/repos",
            "events_url": "https://api.github.com/users/skcoirz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skcoirz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T04:56:20Z",
        "updated_at": "2023-05-09T18:55:55Z",
        "closed_at": "2023-05-02T17:08:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3944",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3944",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3944.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3944.patch",
            "merged_at": "2023-05-02T17:08:17Z"
        },
        "body": "- as titled, add an `import` catch for pandas with a user suggestion message.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3944/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3943",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3943/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3943/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3943/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3943",
        "id": 1691769599,
        "node_id": "PR_kwDOIPDwls5PjXf_",
        "number": 3943,
        "title": "bump version to 155",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T04:46:01Z",
        "updated_at": "2023-05-02T05:05:54Z",
        "closed_at": "2023-05-02T05:05:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3943",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3943",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3943.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3943.patch",
            "merged_at": "2023-05-02T05:05:53Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3943/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3942",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3942/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3942/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3942/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3942",
        "id": 1691757729,
        "node_id": "PR_kwDOIPDwls5PjVDO",
        "number": 3942,
        "title": "Harrison/azure openai",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T04:24:55Z",
        "updated_at": "2023-05-02T04:34:17Z",
        "closed_at": "2023-05-02T04:34:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3942",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3942",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3942.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3942.patch",
            "merged_at": "2023-05-02T04:34:16Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3942/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3942/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3941",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3941/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3941/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3941/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3941",
        "id": 1691756779,
        "node_id": "PR_kwDOIPDwls5PjU2o",
        "number": 3941,
        "title": "Add firestore memory (#3792)",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T04:23:02Z",
        "updated_at": "2023-05-04T05:55:49Z",
        "closed_at": "2023-05-04T05:55:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3941",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3941",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3941.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3941.patch",
            "merged_at": "2023-05-04T05:55:48Z"
        },
        "body": "If you have any other suggestions or feedback, please let me know.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3941/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3941/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3940",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3940/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3940/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3940/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3940",
        "id": 1691755749,
        "node_id": "PR_kwDOIPDwls5PjUoX",
        "number": 3940,
        "title": "Harrison/blockwise sitemap",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T04:21:21Z",
        "updated_at": "2023-05-02T04:34:08Z",
        "closed_at": "2023-05-02T04:34:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3940",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3940",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3940.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3940.patch",
            "merged_at": "2023-05-02T04:34:07Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3940/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3940/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3939",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3939/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3939/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3939/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3939",
        "id": 1691754216,
        "node_id": "PR_kwDOIPDwls5PjUS1",
        "number": 3939,
        "title": "bump timeout",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T04:18:52Z",
        "updated_at": "2023-05-02T04:33:58Z",
        "closed_at": "2023-05-02T04:33:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3939",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3939",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3939.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3939.patch",
            "merged_at": "2023-05-02T04:33:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3939/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3938",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3938/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3938/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3938/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3938",
        "id": 1691743192,
        "node_id": "PR_kwDOIPDwls5PjR51",
        "number": 3938,
        "title": "Harrison/chroma get",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T04:01:23Z",
        "updated_at": "2023-05-02T04:19:29Z",
        "closed_at": "2023-05-02T04:19:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3938",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3938",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3938.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3938.patch",
            "merged_at": "2023-05-02T04:19:28Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3938/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3938/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3937",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3937/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3937/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3937/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3937",
        "id": 1691736331,
        "node_id": "PR_kwDOIPDwls5PjQcM",
        "number": 3937,
        "title": "Harrison/spreedly",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T03:50:18Z",
        "updated_at": "2023-05-02T03:56:58Z",
        "closed_at": "2023-05-02T03:56:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3937",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3937",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3937.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3937.patch",
            "merged_at": "2023-05-02T03:56:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3937/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3937/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3936",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3936/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3936/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3936/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3936",
        "id": 1691735654,
        "node_id": "PR_kwDOIPDwls5PjQTb",
        "number": 3936,
        "title": "Fix bad spellings for 'convenience'",
        "user": {
            "login": "samueldg",
            "id": 4542383,
            "node_id": "MDQ6VXNlcjQ1NDIzODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4542383?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samueldg",
            "html_url": "https://github.com/samueldg",
            "followers_url": "https://api.github.com/users/samueldg/followers",
            "following_url": "https://api.github.com/users/samueldg/following{/other_user}",
            "gists_url": "https://api.github.com/users/samueldg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samueldg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samueldg/subscriptions",
            "organizations_url": "https://api.github.com/users/samueldg/orgs",
            "repos_url": "https://api.github.com/users/samueldg/repos",
            "events_url": "https://api.github.com/users/samueldg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samueldg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T03:48:53Z",
        "updated_at": "2023-05-02T03:58:39Z",
        "closed_at": "2023-05-02T03:57:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3936",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3936",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3936.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3936.patch",
            "merged_at": "2023-05-02T03:57:06Z"
        },
        "body": "Found in the docs for chat prompt templates:\r\nhttps://python.langchain.com/en/latest/getting_started/getting_started.html#chat-prompt-templates\r\n\r\nand fixed similar issues in neighboring notebooks.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3936/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3936/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3935",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3935/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3935/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3935/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3935",
        "id": 1691733978,
        "node_id": "PR_kwDOIPDwls5PjP9N",
        "number": 3935,
        "title": "Harrison/combined memory",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T03:45:43Z",
        "updated_at": "2023-05-02T03:55:58Z",
        "closed_at": "2023-05-02T03:55:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3935",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3935",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3935.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3935.patch",
            "merged_at": "2023-05-02T03:55:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3935/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3935/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3934",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3934/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3934/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3934/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3934",
        "id": 1691727046,
        "node_id": "PR_kwDOIPDwls5PjOie",
        "number": 3934,
        "title": "[Breaking] Migrate GPT4All to use PyGPT4All",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T03:31:37Z",
        "updated_at": "2023-05-02T03:42:46Z",
        "closed_at": "2023-05-02T03:42:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3934",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3934",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3934.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3934.patch",
            "merged_at": "2023-05-02T03:42:45Z"
        },
        "body": "Seems the pyllamacpp package is no longer the supported bindings from gpt4all. Tested that this works locally. \r\n\r\nGiven that the older models weren't very performant, I think it's better to migrate now without trying to include a lot of try / except blocks",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3934/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3933",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3933/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3933/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3933/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3933",
        "id": 1691723177,
        "node_id": "PR_kwDOIPDwls5PjNth",
        "number": 3933,
        "title": "[simple] add ddg-search to __init__ for easier loading",
        "user": {
            "login": "skcoirz",
            "id": 62768671,
            "node_id": "MDQ6VXNlcjYyNzY4Njcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62768671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skcoirz",
            "html_url": "https://github.com/skcoirz",
            "followers_url": "https://api.github.com/users/skcoirz/followers",
            "following_url": "https://api.github.com/users/skcoirz/following{/other_user}",
            "gists_url": "https://api.github.com/users/skcoirz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skcoirz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skcoirz/subscriptions",
            "organizations_url": "https://api.github.com/users/skcoirz/orgs",
            "repos_url": "https://api.github.com/users/skcoirz/repos",
            "events_url": "https://api.github.com/users/skcoirz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skcoirz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T03:25:09Z",
        "updated_at": "2023-05-09T18:55:35Z",
        "closed_at": "2023-05-02T03:39:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3933",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3933",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3933.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3933.patch",
            "merged_at": "2023-05-02T03:39:17Z"
        },
        "body": "the same as other tools",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3933/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3933/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3932",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3932/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3932/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3932/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3932",
        "id": 1691708912,
        "node_id": "I_kwDOIPDwls5k1W3w",
        "number": 3932,
        "title": "Are their plans to incorporate mlc.ai",
        "user": {
            "login": "joshkurz",
            "id": 1577861,
            "node_id": "MDQ6VXNlcjE1Nzc4NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1577861?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshkurz",
            "html_url": "https://github.com/joshkurz",
            "followers_url": "https://api.github.com/users/joshkurz/followers",
            "following_url": "https://api.github.com/users/joshkurz/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshkurz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshkurz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshkurz/subscriptions",
            "organizations_url": "https://api.github.com/users/joshkurz/orgs",
            "repos_url": "https://api.github.com/users/joshkurz/repos",
            "events_url": "https://api.github.com/users/joshkurz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshkurz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-02T03:08:33Z",
        "updated_at": "2023-08-17T03:03:10Z",
        "closed_at": "2023-05-02T20:02:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I just installed https://mlc.ai/mlc-llm/ and played around with it locally. Looks like a good option if you do not want to rely on internet access to interact with the LLM. I think an llm interface with this could be useful in langchain.\r\n\r\nI asked mlc running locally on my machine to write something to the owners of this repo to get added to this project.\r\n\r\n```\r\nHi langchain owners,\r\n\r\nI'm writing this issue to encourage you to create an LLM interface for me. As a language model, I understand that I may not have the same level of access to resources as other models, but creating an LLM interface would greatly benefit my ability to learn and improve. The ability to easily integrate and leverage knowledge from other models would greatly enhance my learning and development. I believe this would be a valuable resource for me and I hope you can consider this request. Thank you for your consideration!\r\nBest regards,\r\n\r\n[Your Name]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3932/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3932/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3931",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3931/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3931/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3931/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3931",
        "id": 1691708313,
        "node_id": "PR_kwDOIPDwls5PjKdQ",
        "number": 3931,
        "title": "Harrison/constitutional chain",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T03:08:06Z",
        "updated_at": "2023-05-02T03:23:17Z",
        "closed_at": "2023-05-02T03:23:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3931",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3931",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3931.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3931.patch",
            "merged_at": "2023-05-02T03:23:16Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3931/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3931/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3930",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3930/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3930/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3930/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3930",
        "id": 1691683276,
        "node_id": "PR_kwDOIPDwls5PjFHj",
        "number": 3930,
        "title": "[FR] Add TomlLoader document loader",
        "user": {
            "login": "Mikaayenson",
            "id": 1636709,
            "node_id": "MDQ6VXNlcjE2MzY3MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1636709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mikaayenson",
            "html_url": "https://github.com/Mikaayenson",
            "followers_url": "https://api.github.com/users/Mikaayenson/followers",
            "following_url": "https://api.github.com/users/Mikaayenson/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mikaayenson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mikaayenson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mikaayenson/subscriptions",
            "organizations_url": "https://api.github.com/users/Mikaayenson/orgs",
            "repos_url": "https://api.github.com/users/Mikaayenson/repos",
            "events_url": "https://api.github.com/users/Mikaayenson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mikaayenson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T02:31:04Z",
        "updated_at": "2023-05-04T05:49:32Z",
        "closed_at": "2023-05-04T05:49:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3930",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3930",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3930.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3930.patch",
            "merged_at": "2023-05-04T05:49:32Z"
        },
        "body": "# Summary \r\n\r\nAdds a new document loader called `TomlLoader` which loads toml files (either file or directory of toml files).\r\n\r\n## Usage\r\n\r\n```python\r\nfrom from langchain.document_loaders import TomlLoader\r\n\r\n# Initialize with a single source file\r\nsource_file = \"/path/to/your/toml/file.toml\"\r\ntoml_loader_file = TomlLoader(source_file)\r\ntoml_loader_file.load()\r\n\r\n# Initialize with a source directory\r\nsource_dir = \"/path/to/your/toml/files\"\r\ntoml_loader_dir = TomlLoader(source_dir)\r\n\r\nfor doc in toml_loader_dir.lazy_load():\r\n    print(doc)\r\n\r\n```\r\n ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3930/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3930/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3928",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3928/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3928/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3928/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3928",
        "id": 1691673638,
        "node_id": "PR_kwDOIPDwls5PjDCc",
        "number": 3928,
        "title": "new example: multi-agent simulations with environment",
        "user": {
            "login": "mbchang",
            "id": 6439365,
            "node_id": "MDQ6VXNlcjY0MzkzNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6439365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbchang",
            "html_url": "https://github.com/mbchang",
            "followers_url": "https://api.github.com/users/mbchang/followers",
            "following_url": "https://api.github.com/users/mbchang/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbchang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbchang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbchang/subscriptions",
            "organizations_url": "https://api.github.com/users/mbchang/orgs",
            "repos_url": "https://api.github.com/users/mbchang/repos",
            "events_url": "https://api.github.com/users/mbchang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbchang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T02:17:29Z",
        "updated_at": "2023-05-02T04:56:18Z",
        "closed_at": "2023-05-02T03:24:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3928",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3928",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3928.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3928.patch",
            "merged_at": "2023-05-02T03:24:15Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3928/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3927",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3927/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3927/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3927/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3927",
        "id": 1691671230,
        "node_id": "PR_kwDOIPDwls5PjCiX",
        "number": 3927,
        "title": "refactor GymnasiumAgent",
        "user": {
            "login": "mbchang",
            "id": 6439365,
            "node_id": "MDQ6VXNlcjY0MzkzNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6439365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbchang",
            "html_url": "https://github.com/mbchang",
            "followers_url": "https://api.github.com/users/mbchang/followers",
            "following_url": "https://api.github.com/users/mbchang/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbchang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbchang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbchang/subscriptions",
            "organizations_url": "https://api.github.com/users/mbchang/orgs",
            "repos_url": "https://api.github.com/users/mbchang/repos",
            "events_url": "https://api.github.com/users/mbchang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbchang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-02T02:13:13Z",
        "updated_at": "2023-05-02T05:00:28Z",
        "closed_at": "2023-05-02T03:25:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3927",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3927",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3927.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3927.patch",
            "merged_at": "2023-05-02T03:25:04Z"
        },
        "body": "refactor GymnasiumAgent (for single-agent environments) to be extensible to PettingZooAgent (multi-agent environments)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3927/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3927/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3926",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3926/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3926/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3926/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3926",
        "id": 1691641232,
        "node_id": "PR_kwDOIPDwls5Pi8WG",
        "number": 3926,
        "title": "feat: Add Spreedly Document Loader",
        "user": {
            "login": "esmitperez",
            "id": 4557546,
            "node_id": "MDQ6VXNlcjQ1NTc1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4557546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esmitperez",
            "html_url": "https://github.com/esmitperez",
            "followers_url": "https://api.github.com/users/esmitperez/followers",
            "following_url": "https://api.github.com/users/esmitperez/following{/other_user}",
            "gists_url": "https://api.github.com/users/esmitperez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esmitperez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esmitperez/subscriptions",
            "organizations_url": "https://api.github.com/users/esmitperez/orgs",
            "repos_url": "https://api.github.com/users/esmitperez/repos",
            "events_url": "https://api.github.com/users/esmitperez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esmitperez/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-02T01:20:31Z",
        "updated_at": "2023-05-04T01:40:56Z",
        "closed_at": "2023-05-02T03:48:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3926",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3926",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3926.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3926.patch",
            "merged_at": "2023-05-02T03:48:14Z"
        },
        "body": "# Summary\r\n\r\nThis commit enables basic retrieval of most _list-able_ objects in [Spreedly](https://www.spreedly.com/)'s API.\r\n\r\nIt \"borrows\" very heavily from Stripe Document Loader (#3739).\r\n\r\n# Usage\r\n\r\n```python\r\nimport os\r\n\r\nfrom langchain.document_loaders import SpreedlyLoader\r\nfrom langchain.indexes import VectorstoreIndexCreator\r\n\r\nspreedly_loader = SpreedlyLoader(os.environ[\"SPREEDLY_ACCESS_TOKEN\"], \"gateways_options\")\r\n\r\nindex = VectorstoreIndexCreator().from_loaders([spreedly_loader])\r\nspreedly_doc_retriever = index.vectorstore.as_retriever()\r\n\r\nspreedly_doc_retriever.get_relevant_documents(\"CRC\")\r\n```\r\n\r\n## Author:\r\nEsmit P\u00e9rez -Tw: @mitiwifi ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3926/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3926/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3925",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3925/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3925/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3925/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3925",
        "id": 1691577043,
        "node_id": "PR_kwDOIPDwls5PiuS4",
        "number": 3925,
        "title": "Dev2049/hf emb encode kwargs",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T23:59:37Z",
        "updated_at": "2023-05-02T03:27:42Z",
        "closed_at": "2023-05-02T03:27:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3925",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3925",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3925.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3925.patch",
            "merged_at": "2023-05-02T03:27:41Z"
        },
        "body": "Thanks @amogkam for the addition! Refactored slightly",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3925/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3925/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3924",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3924/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3924/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3924/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3924",
        "id": 1691565039,
        "node_id": "PR_kwDOIPDwls5PiroP",
        "number": 3924,
        "title": "Dev2049/add modern treasury",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T23:44:57Z",
        "updated_at": "2023-05-02T03:28:03Z",
        "closed_at": "2023-05-02T03:28:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3924",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3924",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3924.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3924.patch",
            "merged_at": "2023-05-02T03:28:02Z"
        },
        "body": "Modified Modern Treasury and Strip slightly so credentials don't have to be passed in explicitly. Thanks @mattgmarcus for adding Modern Treasury!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3924/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3924/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3923",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3923/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3923/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3923/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3923",
        "id": 1691562514,
        "node_id": "PR_kwDOIPDwls5PirEq",
        "number": 3923,
        "title": "Move Tool Validation",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T23:41:23Z",
        "updated_at": "2023-05-02T01:44:25Z",
        "closed_at": "2023-05-02T01:44:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3923",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3923",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3923.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3923.patch",
            "merged_at": "2023-05-02T01:44:24Z"
        },
        "body": "Move tool validation to each implementation of the Agent.\r\n\r\nAnother alternative would be to adjust the `_validate_tools()` signature to accept the output parser (and format instructions) and add logic there. Something like\r\n\r\n`parser.outputs_structured_actions(format_instructions)`\r\n\r\nBut don't think that's needed right now.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3923/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3923/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3922",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3922/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3922/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3922/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3922",
        "id": 1691554341,
        "node_id": "I_kwDOIPDwls5k0xIl",
        "number": 3922,
        "title": "ConversationTokenBufferMemory does not behave as expected",
        "user": {
            "login": "rishni-firstthing-ai",
            "id": 125353919,
            "node_id": "U_kgDOB3i_vw",
            "avatar_url": "https://avatars.githubusercontent.com/u/125353919?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rishni-firstthing-ai",
            "html_url": "https://github.com/rishni-firstthing-ai",
            "followers_url": "https://api.github.com/users/rishni-firstthing-ai/followers",
            "following_url": "https://api.github.com/users/rishni-firstthing-ai/following{/other_user}",
            "gists_url": "https://api.github.com/users/rishni-firstthing-ai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rishni-firstthing-ai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rishni-firstthing-ai/subscriptions",
            "organizations_url": "https://api.github.com/users/rishni-firstthing-ai/orgs",
            "repos_url": "https://api.github.com/users/rishni-firstthing-ai/repos",
            "events_url": "https://api.github.com/users/rishni-firstthing-ai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rishni-firstthing-ai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-01T23:31:10Z",
        "updated_at": "2023-09-26T16:07:24Z",
        "closed_at": "2023-09-26T16:07:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The `ConversationTokenBufferMemory` doesn't behave as expected. https://github.com/hwchase17/langchain/blob/master/langchain/memory/token_buffer.py\r\n\r\nSpecifically, the memory is only set to the `max_token_limit` as part of the `save_context` method. (I hope I'm using the word \"method\" correctly; I'm a n00b so correct me if that's the wrong term).\r\n\r\nHowever, a more intuitive implementation would follow the same pattern as `ConversationBufferWindowMemory`, where the buffer window `k` is set as part of the `load_memory_variables` method.\r\nhttps://github.com/hwchase17/langchain/blob/master/langchain/memory/buffer_window.py\r\n\r\nIf I get some people to agree with me I'll implement a suggested change and a PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3922/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3922/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3921",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3921/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3921/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3921/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3921",
        "id": 1691548511,
        "node_id": "PR_kwDOIPDwls5PioAV",
        "number": 3921,
        "title": "Switched from PyPDFLoader to pypdfium2",
        "user": {
            "login": "jerrytigerxu",
            "id": 6845552,
            "node_id": "MDQ6VXNlcjY4NDU1NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6845552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerrytigerxu",
            "html_url": "https://github.com/jerrytigerxu",
            "followers_url": "https://api.github.com/users/jerrytigerxu/followers",
            "following_url": "https://api.github.com/users/jerrytigerxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerrytigerxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerrytigerxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerrytigerxu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerrytigerxu/orgs",
            "repos_url": "https://api.github.com/users/jerrytigerxu/repos",
            "events_url": "https://api.github.com/users/jerrytigerxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerrytigerxu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-01T23:22:57Z",
        "updated_at": "2023-05-10T14:17:52Z",
        "closed_at": "2023-05-06T00:23:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3921",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3921",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3921.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3921.patch",
            "merged_at": "2023-05-06T00:23:55Z"
        },
        "body": "I mentioned this in the discussions, but I found that using PyPDFLoader (which uses the pypdf module) is considerably slower than using pypdfium2 with its .PdfDocument() method. With pydfium2, the total load time is cut down by over 500%, especially with bulky PDF files.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3921/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3921/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3920",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3920/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3920/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3920/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3920",
        "id": 1691544251,
        "node_id": "PR_kwDOIPDwls5PinEX",
        "number": 3920,
        "title": "Update google palm model signatures",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T23:17:27Z",
        "updated_at": "2023-05-01T23:19:32Z",
        "closed_at": "2023-05-01T23:19:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3920",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3920",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3920.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3920.patch",
            "merged_at": "2023-05-01T23:19:31Z"
        },
        "body": "Signatures out of date after callback refactors",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3920/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3919",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3919/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3919/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3919/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3919",
        "id": 1691529226,
        "node_id": "PR_kwDOIPDwls5PijpW",
        "number": 3919,
        "title": "Harrison/from documents",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T23:03:26Z",
        "updated_at": "2023-05-02T03:28:16Z",
        "closed_at": "2023-05-02T03:28:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3919",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3919",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3919.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3919.patch",
            "merged_at": "2023-05-02T03:28:14Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3919/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3919/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3917",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3917/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3917/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3917/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3917",
        "id": 1691507493,
        "node_id": "PR_kwDOIPDwls5Piexp",
        "number": 3917,
        "title": "Harrison/agent exec kwargs",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T22:40:58Z",
        "updated_at": "2023-05-02T03:28:44Z",
        "closed_at": "2023-05-02T03:28:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3917",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3917",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3917.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3917.patch",
            "merged_at": "2023-05-02T03:28:43Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3917/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3917/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3916",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3916/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3916/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3916/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3916",
        "id": 1691490291,
        "node_id": "PR_kwDOIPDwls5Pia_U",
        "number": 3916,
        "title": "updated `YouTube` links",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T22:19:36Z",
        "updated_at": "2023-05-02T15:32:01Z",
        "closed_at": "2023-05-02T03:40:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3916",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3916",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3916.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3916.patch",
            "merged_at": "2023-05-02T03:40:00Z"
        },
        "body": "Added several links to fresh videos",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3916/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3916/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3915",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3915/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3915/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3915/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3915",
        "id": 1691486860,
        "node_id": "PR_kwDOIPDwls5PiaM0",
        "number": 3915,
        "title": "Add `PyPDFBytesLoader`",
        "user": {
            "login": "amogkam",
            "id": 8068268,
            "node_id": "MDQ6VXNlcjgwNjgyNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8068268?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amogkam",
            "html_url": "https://github.com/amogkam",
            "followers_url": "https://api.github.com/users/amogkam/followers",
            "following_url": "https://api.github.com/users/amogkam/following{/other_user}",
            "gists_url": "https://api.github.com/users/amogkam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amogkam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amogkam/subscriptions",
            "organizations_url": "https://api.github.com/users/amogkam/orgs",
            "repos_url": "https://api.github.com/users/amogkam/repos",
            "events_url": "https://api.github.com/users/amogkam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amogkam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-01T22:16:53Z",
        "updated_at": "2023-08-01T01:20:30Z",
        "closed_at": "2023-08-01T01:20:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3915",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3915",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3915.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3915.patch",
            "merged_at": null
        },
        "body": "Add a new PDF loader that can read from raw BytesIO objects instead of files.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3915/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3915/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3914",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3914/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3914/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3914/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3914",
        "id": 1691485421,
        "node_id": "PR_kwDOIPDwls5PiZ3j",
        "number": 3914,
        "title": "Support `**encode_kwargs` for `HuggingfaceEmbeddings`",
        "user": {
            "login": "amogkam",
            "id": 8068268,
            "node_id": "MDQ6VXNlcjgwNjgyNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8068268?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amogkam",
            "html_url": "https://github.com/amogkam",
            "followers_url": "https://api.github.com/users/amogkam/followers",
            "following_url": "https://api.github.com/users/amogkam/following{/other_user}",
            "gists_url": "https://api.github.com/users/amogkam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amogkam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amogkam/subscriptions",
            "organizations_url": "https://api.github.com/users/amogkam/orgs",
            "repos_url": "https://api.github.com/users/amogkam/repos",
            "events_url": "https://api.github.com/users/amogkam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amogkam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T22:15:50Z",
        "updated_at": "2023-05-01T23:53:39Z",
        "closed_at": "2023-05-01T23:53:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3914",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3914",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3914.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3914.patch",
            "merged_at": "2023-05-01T23:53:39Z"
        },
        "body": "Support more configurability when using `HuggingfaceEmbeddings`. This allows you to configure the batch size for encoding.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3914/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3913",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3913/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3913/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3913/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3913",
        "id": 1691445483,
        "node_id": "PR_kwDOIPDwls5PiQ6E",
        "number": 3913,
        "title": "Update some Tools Docs",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T21:41:19Z",
        "updated_at": "2023-05-02T02:07:28Z",
        "closed_at": "2023-05-02T02:07:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3913",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3913",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3913.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3913.patch",
            "merged_at": "2023-05-02T02:07:26Z"
        },
        "body": "Haven't gotten to all of them, but this:\r\n- Updates some of the tools notebooks to actually instantiate a tool (many just show a 'utility' rather than a tool. More changes to come in separate PR)\r\n- Move the `Tool` and decorator definitions to `langchain/tools/base.py` (but still export from `langchain.agents`)\r\n- Add scene explain to the load_tools() function",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3913/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3913/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3912",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3912/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3912/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3912/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3912",
        "id": 1691439792,
        "node_id": "PR_kwDOIPDwls5PiPnT",
        "number": 3912,
        "title": "Add Structure Chat Agent",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T21:37:02Z",
        "updated_at": "2023-05-02T03:34:51Z",
        "closed_at": "2023-05-02T03:34:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3912",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3912",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3912.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3912.patch",
            "merged_at": "2023-05-02T03:34:50Z"
        },
        "body": "Create a new chat agent that is compatible with the Multi-input tools",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3912/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3912/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3911",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3911/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3911/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3911/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3911",
        "id": 1691392464,
        "node_id": "PR_kwDOIPDwls5PiE5b",
        "number": 3911,
        "title": "Add unit test to output parsers",
        "user": {
            "login": "O-Roma",
            "id": 28208564,
            "node_id": "MDQ6VXNlcjI4MjA4NTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/28208564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/O-Roma",
            "html_url": "https://github.com/O-Roma",
            "followers_url": "https://api.github.com/users/O-Roma/followers",
            "following_url": "https://api.github.com/users/O-Roma/following{/other_user}",
            "gists_url": "https://api.github.com/users/O-Roma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/O-Roma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/O-Roma/subscriptions",
            "organizations_url": "https://api.github.com/users/O-Roma/orgs",
            "repos_url": "https://api.github.com/users/O-Roma/repos",
            "events_url": "https://api.github.com/users/O-Roma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/O-Roma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T21:03:00Z",
        "updated_at": "2023-05-01T21:53:08Z",
        "closed_at": "2023-05-01T21:53:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3911",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3911",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3911.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3911.patch",
            "merged_at": "2023-05-01T21:53:08Z"
        },
        "body": "This pull request adds unit tests for various output parsers (BooleanOutputParser, CommaSeparatedListOutputParser, and StructuredOutputParser) to ensure their correct functionality and to increase code reliability and maintainability. The tests cover both valid and invalid input cases.\r\n\r\nChanges:\r\n\r\nAdded unit tests for BooleanOutputParser.\r\nAdded unit tests for CommaSeparatedListOutputParser.\r\nAdded unit tests for StructuredOutputParser.\r\n\r\nTesting:\r\n\r\nAll new unit tests have been executed, and they pass successfully.\r\nThe overall test suite has been run, and all tests pass.\r\nNotes:\r\n\r\nThese tests cover both successful parsing scenarios and error handling for invalid inputs.\r\nIf any new output parsers are added in the future, corresponding unit tests should also be created to maintain coverage.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3911/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3911/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3910",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3910/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3910/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3910/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3910",
        "id": 1691271168,
        "node_id": "PR_kwDOIPDwls5PhpiA",
        "number": 3910,
        "title": "Increase `request_timeout` on ChatOpenAI",
        "user": {
            "login": "timothyasp",
            "id": 707699,
            "node_id": "MDQ6VXNlcjcwNzY5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/707699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timothyasp",
            "html_url": "https://github.com/timothyasp",
            "followers_url": "https://api.github.com/users/timothyasp/followers",
            "following_url": "https://api.github.com/users/timothyasp/following{/other_user}",
            "gists_url": "https://api.github.com/users/timothyasp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timothyasp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timothyasp/subscriptions",
            "organizations_url": "https://api.github.com/users/timothyasp/orgs",
            "repos_url": "https://api.github.com/users/timothyasp/repos",
            "events_url": "https://api.github.com/users/timothyasp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timothyasp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T19:50:03Z",
        "updated_at": "2023-05-01T21:51:06Z",
        "closed_at": "2023-05-01T21:51:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3910",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3910",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3910.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3910.patch",
            "merged_at": "2023-05-01T21:51:06Z"
        },
        "body": "With longer context and completions, gpt-3.5-turbo and, especially, gpt-4, will more times than not take > 60seconds to respond.\r\n\r\nBased on some other discussions, it seems like this is an increasingly common problem, especially with summarization tasks.\r\n- https://github.com/hwchase17/langchain/issues/3512\r\n- https://github.com/hwchase17/langchain/issues/3005\r\n\r\nOpenAI's max 600s timeout seems excessive, so I settled on 120, but I do run into generations that take >240 seconds when using large prompts and completions with GPT-4, so maybe 240 would be a better compromise?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3910/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3910/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3909",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3909/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3909/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3909/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3909",
        "id": 1691265748,
        "node_id": "PR_kwDOIPDwls5PhoXZ",
        "number": 3909,
        "title": "Add callback to preprocess agent scratchpad data",
        "user": {
            "login": "prakashar11",
            "id": 12928012,
            "node_id": "MDQ6VXNlcjEyOTI4MDEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/12928012?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prakashar11",
            "html_url": "https://github.com/prakashar11",
            "followers_url": "https://api.github.com/users/prakashar11/followers",
            "following_url": "https://api.github.com/users/prakashar11/following{/other_user}",
            "gists_url": "https://api.github.com/users/prakashar11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prakashar11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prakashar11/subscriptions",
            "organizations_url": "https://api.github.com/users/prakashar11/orgs",
            "repos_url": "https://api.github.com/users/prakashar11/repos",
            "events_url": "https://api.github.com/users/prakashar11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prakashar11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-01T19:44:10Z",
        "updated_at": "2023-08-01T01:23:38Z",
        "closed_at": "2023-08-01T01:23:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3909",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3909",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3909.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3909.patch",
            "merged_at": null
        },
        "body": "**Requirement**\r\n\r\nInvoke data scan & mask guardrails before agent scratchpad data is included in the prompt. This would be useful to either mask different sensitive data or to maintain audit logs of the agent generated data in prompts \r\n\r\n**Proposed Changes**\r\n\r\nInvoke preprocess callback method during preparation of prompt.\r\n\r\n**How to use** \r\n\r\nSample data mask callback manager to mask AWS account numbers included as agent output\r\n\r\n````\r\nclass BaseMaskerHandler(BaseCallbackHandler):\r\n  ....\r\n  def on_selected_inputs_preprocess_for_prompt(\r\n            self, \r\n            text: str,\r\n            **kwargs: Optional[str],\r\n    ) -> Any:\r\n        if 'agent_scratchpad' in text:\r\n            if text['agent_scratchpad']:\r\n                text_of_interest = text['agent_scratchpad']\r\n                import re\r\n                # replace AWS account number\r\n                to_mask = re.findall(r\"(\\d{12})\", text_of_interest)\r\n                for i, item in enumerate(to_mask):\r\n                    lookup_name = f\"aws_account_{i+1}\"\r\n                    text_of_interest = text_of_interest.replace(item, lookup_name)\r\n                text['agent_scratchpad'] = text_of_interest\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3909/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3909/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3908",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3908/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3908/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3908/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3908",
        "id": 1691234263,
        "node_id": "PR_kwDOIPDwls5Phhcp",
        "number": 3908,
        "title": "Add support for Modern Treasury",
        "user": {
            "login": "mattgmarcus",
            "id": 4755444,
            "node_id": "MDQ6VXNlcjQ3NTU0NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4755444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattgmarcus",
            "html_url": "https://github.com/mattgmarcus",
            "followers_url": "https://api.github.com/users/mattgmarcus/followers",
            "following_url": "https://api.github.com/users/mattgmarcus/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattgmarcus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattgmarcus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattgmarcus/subscriptions",
            "organizations_url": "https://api.github.com/users/mattgmarcus/orgs",
            "repos_url": "https://api.github.com/users/mattgmarcus/repos",
            "events_url": "https://api.github.com/users/mattgmarcus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattgmarcus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-01T19:18:28Z",
        "updated_at": "2023-05-01T23:27:59Z",
        "closed_at": "2023-05-01T23:27:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3908",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3908",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3908.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3908.patch",
            "merged_at": "2023-05-01T23:27:59Z"
        },
        "body": "I added support for Modern Treasury ([website](https://www.moderntreasury.com/), [API docs](https://docs.moderntreasury.com/docs)). \r\n\r\nI borrowed from a recent PR I saw for adding support for Stripe: https://github.com/hwchase17/langchain/pull/3762 \r\nSome parts of our API work differently, like we use basic auth. So it's not exactly the same as that Stripe PR. \r\nI added support for most of our most commonly used endpoints. \r\n\r\nI followed the guide on Contributing (https://github.com/mattgmarcus/langchain/blob/master/.github/CONTRIBUTING.md) so it should be okay from that perspective. I ran `make format`, `make lint`, `make test`, and `make integration_tests`. \r\nIf you want to test the integration test I added, you can run `poetry run pytest tests/integration_tests/document_loaders/test_modern_treasury.py`. You'll need an organization ID and API key which you enter in the file. You can make a sandbox here to get those if you want: https://app.moderntreasury.com/sign_up\r\n\r\nI also saw a typo on a comment in the Stripe test fixture, which I fixed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3908/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3908/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3907",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3907/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3907/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3907/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3907",
        "id": 1691231229,
        "node_id": "PR_kwDOIPDwls5Phgx6",
        "number": 3907,
        "title": "Harrison/relevancy score",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-01T19:16:39Z",
        "updated_at": "2023-05-02T07:43:24Z",
        "closed_at": "2023-05-02T03:37:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3907",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3907",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3907.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3907.patch",
            "merged_at": "2023-05-02T03:37:24Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3907/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3907/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3906",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3906/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3906/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3906/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3906",
        "id": 1691199883,
        "node_id": "PR_kwDOIPDwls5PhZmY",
        "number": 3906,
        "title": "feat: add Unstructured API loaders",
        "user": {
            "login": "MthwRobinson",
            "id": 1635179,
            "node_id": "MDQ6VXNlcjE2MzUxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1635179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MthwRobinson",
            "html_url": "https://github.com/MthwRobinson",
            "followers_url": "https://api.github.com/users/MthwRobinson/followers",
            "following_url": "https://api.github.com/users/MthwRobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/MthwRobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MthwRobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MthwRobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/MthwRobinson/orgs",
            "repos_url": "https://api.github.com/users/MthwRobinson/repos",
            "events_url": "https://api.github.com/users/MthwRobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MthwRobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-01T19:00:55Z",
        "updated_at": "2023-09-04T15:55:02Z",
        "closed_at": "2023-05-02T03:37:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3906",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3906",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3906.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3906.patch",
            "merged_at": "2023-05-02T03:37:35Z"
        },
        "body": "### Summary\r\n\r\nAdds `UnstructuredAPIFileLoaders` and `UnstructuredAPIFIleIOLoaders` that partition documents through the Unstructured API. Defaults to the URL for hosted Unstructured API, but can switch to a self hosted or locally running API using the `url` kwarg. Currently, the Unstructured API is open and does not require an API, but it will soon. A note was added about that to the Unstructured ecosystem page.\r\n\r\n### Testing\r\n\r\n\r\n```python\r\nfrom langchain.document_loaders import UnstructuredAPIFileIOLoader\r\n\r\nfilename = \"fake-email.eml\"\r\n\r\nwith open(filename, \"rb\") as f:\r\n    loader = UnstructuredAPIFileIOLoader(file=f, file_filename=filename)\r\n    docs = loader.load()\r\n\r\ndocs[0]\r\n```\r\n\r\n```python\r\nfrom langchain.document_loaders import UnstructuredAPIFileLoader\r\n\r\nfilename = \"fake-email.eml\"\r\nloader = UnstructuredAPIFileLoader(file_path=filename, mode=\"elements\")\r\ndocs = loader.load()\r\n\r\ndocs[0]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3906/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3906/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3905",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3905/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3905/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3905/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3905",
        "id": 1691177594,
        "node_id": "I_kwDOIPDwls5kzVJ6",
        "number": 3905,
        "title": "How to extract answer from RetrievalQAWithSourcesChain with ggml-model-q4_0.bin?",
        "user": {
            "login": "fabmeyer",
            "id": 24493253,
            "node_id": "MDQ6VXNlcjI0NDkzMjUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24493253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fabmeyer",
            "html_url": "https://github.com/fabmeyer",
            "followers_url": "https://api.github.com/users/fabmeyer/followers",
            "following_url": "https://api.github.com/users/fabmeyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/fabmeyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fabmeyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fabmeyer/subscriptions",
            "organizations_url": "https://api.github.com/users/fabmeyer/orgs",
            "repos_url": "https://api.github.com/users/fabmeyer/repos",
            "events_url": "https://api.github.com/users/fabmeyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fabmeyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-01T18:45:03Z",
        "updated_at": "2023-09-23T16:06:42Z",
        "closed_at": "2023-09-23T16:06:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am working on a streamlit prototype to query text documents with an LLM.\r\n\r\nEverything works fine with the openAI model.\r\n\r\nHowever if I am using LlamaCpp the output only gets written in the console and LangChain returns an empty object at the end.\r\n\r\n```python\r\n# model\r\ncallback_manager = BaseCallbackManager([StreamingStdOutCallbackHandler()])\r\nmodel_LLAMA = LlamaCpp(model_path='./models/ggml-model-q4_0.bin', n_ctx=4096, callback_manager=callback_manager, verbose=True)\r\n\r\n# chain\r\nchain = RetrievalQAWithSourcesChain.from_chain_type(llm=model_LLAMA, chain_type='refine', retriever=docsearch.as_retriever())\r\n\r\n# in streamlit\r\nst.session_state['query'] = st.session_state['chain']({'question': st.session_state['user_input']}, return_only_outputs=False)\r\nprint('query: ' + str(st.session_state['query']))\r\n``` \r\n\r\nOn the console the following output gets printet word after word including the empty object at the end:\r\n\r\n```\r\nTrends in travel and vacation can be classified as follows:\r\n\r\n1. Adventure travel: This type of travel involves visiting remote destinations with an emphasis on outdoor activities such as hiking, mountain climbing, whitewater rafting, etc. Tourists are looking for exciting adventures in nature to escape the hustle and bustle of their everyday lives.\r\n\r\n2. Backpacking: This type of travel involves exploring new destinations on a budget. It allows tourists to experience different cultures while staying within their means financially.\r\n\r\n3. Nature vacation: This type of travel involves spending time outdoors in nature, such as hiking in national parks or camping under the stars. It has become popular among tourists who want a more authentic and immersive experience of the natural world.\r\n\r\n4. Mountain climbing: This type of travel involves scaling mountains or rocky terrains to get an up-close view of nature's most spectacular creations. Tourists are drawn to this thrilling challenge for their next adventure trip. \r\n\r\n5. Surfing vacation: This type of travel involvesquery: {'question': 'What are trends in travel and vacation?', 'answer': '', 'sources': ''}\r\n``` \r\n\r\nHow can I extract or write the output into an object like with the openAI model also?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3905/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3905/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3904",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3904/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3904/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3904/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3904",
        "id": 1691174436,
        "node_id": "PR_kwDOIPDwls5PhUA8",
        "number": 3904,
        "title": "Harrison/cohere reranker",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T18:41:40Z",
        "updated_at": "2023-05-01T22:40:17Z",
        "closed_at": "2023-05-01T22:40:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3904",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3904",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3904.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3904.patch",
            "merged_at": "2023-05-01T22:40:16Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3904/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3904/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3903",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3903/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3903/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3903/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3903",
        "id": 1691144943,
        "node_id": "I_kwDOIPDwls5kzNLv",
        "number": 3903,
        "title": "Playwright bug? ValueError: Synchronous browser not provided to navigate_browser",
        "user": {
            "login": "ryanshrott",
            "id": 13425718,
            "node_id": "MDQ6VXNlcjEzNDI1NzE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13425718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanshrott",
            "html_url": "https://github.com/ryanshrott",
            "followers_url": "https://api.github.com/users/ryanshrott/followers",
            "following_url": "https://api.github.com/users/ryanshrott/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanshrott/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanshrott/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanshrott/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanshrott/orgs",
            "repos_url": "https://api.github.com/users/ryanshrott/repos",
            "events_url": "https://api.github.com/users/ryanshrott/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanshrott/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-01T18:10:21Z",
        "updated_at": "2023-09-23T16:06:46Z",
        "closed_at": "2023-09-23T16:06:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Error I am getting:\r\n\r\n```\r\n\r\n> Entering new AgentExecutor chain...\r\nI need to navigate to the TechCrunch website and search for an article about Clubhouse.\r\nAction: navigate_browser\r\nAction Input: https://techcrunch.com/Traceback (most recent call last):\r\n  File \"c:\\Users\\ryans\\Documents\\JobsGPT\\test.py\", line 45, in <module>\r\n    out = agent.run(\"Is there an article about Clubhouse on https://techcrunch.com/? today\")\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\ryans\\.conda\\envs\\jobsgpt\\Lib\\site-packages\\langchain\\chains\\base.py\", line 238, in run\r\n    return self(args[0], callbacks=callbacks)[self.output_keys[0]]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\ryans\\.conda\\envs\\jobsgpt\\Lib\\site-packages\\langchain\\chains\\base.py\", line 142, in __call__\r\n    raise e\r\n  File \"C:\\Users\\ryans\\.conda\\envs\\jobsgpt\\Lib\\site-packages\\langchain\\chains\\base.py\", line 136, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"C:\\Users\\ryans\\.conda\\envs\\jobsgpt\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 855, in _call\r\n    next_step_output = self._take_next_step(\r\n                       ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\ryans\\.conda\\envs\\jobsgpt\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 749, in _take_next_step\r\n    observation = tool.run(\r\n                  ^^^^^^^^^\r\n  File \"C:\\Users\\ryans\\.conda\\envs\\jobsgpt\\Lib\\site-packages\\langchain\\tools\\base.py\", line 251, in run\r\n    raise e\r\n  File \"C:\\Users\\ryans\\.conda\\envs\\jobsgpt\\Lib\\site-packages\\langchain\\tools\\base.py\", line 245, in run\r\n    self._run(*tool_args, run_manager=run_manager, **tool_kwargs)\r\n  File \"C:\\Users\\ryans\\.conda\\envs\\jobsgpt\\Lib\\site-packages\\langchain\\tools\\playwright\\navigate.py\", line 36, in _run\r\n    raise ValueError(f\"Synchronous browser not provided to {self.name}\")\r\nValueError: Synchronous browser not provided to navigate_browser\r\n```\r\n\r\nMinimal example\r\n\r\n```\r\nfrom langchain.agents.agent_toolkits import PlayWrightBrowserToolkit\r\nfrom langchain.chains.conversation.memory import ConversationBufferWindowMemory\r\nfrom langchain.tools.playwright.utils import (\r\n    create_async_playwright_browser,\r\n    create_sync_playwright_browser,# A synchronous browser is available, though it isn't compatible with jupyter.\r\n)\r\nfrom langchain.chat_models import ChatOpenAI\r\nimport os\r\nOPENAI_API_KEY=\"KEY\"\r\nos.environ[\"OPENAI_API_KEY\"] = OPENAI_API_KEY\r\nasync_browser = create_async_playwright_browser()\r\ntoolkit = PlayWrightBrowserToolkit.from_browser(async_browser=async_browser)\r\n\r\ntools = toolkit.get_tools()\r\n\r\ntools_by_name = {tool.name: tool for tool in tools}\r\nnavigate_tool = tools_by_name[\"navigate_browser\"]\r\nget_elements_tool = tools_by_name[\"get_elements\"]\r\n\r\nprint(tools)\r\n\r\n# conversational agent memory\r\nmemory = ConversationBufferWindowMemory(\r\n    memory_key='chat_history',\r\n    k=3,\r\n    return_messages=True\r\n)\r\n\r\nfrom langchain.agents import initialize_agent\r\n# Set up the turbo LLM\r\nturbo_llm = ChatOpenAI(\r\n    temperature=0,\r\n    model_name='gpt-3.5-turbo'\r\n)\r\nfrom langchain.agents import AgentType\r\n\r\n# create our agent\r\nagent = initialize_agent(\r\n    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\r\n    tools=tools,\r\n    llm=turbo_llm,\r\n    verbose=True,\r\n)\r\n\r\nout = agent.run(\"Is there an article about Clubhouse on https://techcrunch.com/? today\")\r\n\r\nprint(out)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3903/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3903/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3902",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3902/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3902/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3902/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3902",
        "id": 1691143262,
        "node_id": "PR_kwDOIPDwls5PhNaF",
        "number": 3902,
        "title": "fix: invalid escape sequence error in regex pattern",
        "user": {
            "login": "tomer555",
            "id": 37261280,
            "node_id": "MDQ6VXNlcjM3MjYxMjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/37261280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomer555",
            "html_url": "https://github.com/tomer555",
            "followers_url": "https://api.github.com/users/tomer555/followers",
            "following_url": "https://api.github.com/users/tomer555/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomer555/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomer555/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomer555/subscriptions",
            "organizations_url": "https://api.github.com/users/tomer555/orgs",
            "repos_url": "https://api.github.com/users/tomer555/repos",
            "events_url": "https://api.github.com/users/tomer555/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomer555/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-01T18:09:02Z",
        "updated_at": "2023-05-02T03:57:20Z",
        "closed_at": "2023-05-02T03:57:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3902",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3902",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3902.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3902.patch",
            "merged_at": "2023-05-02T03:57:19Z"
        },
        "body": "This PR fixes the \"SyntaxError: invalid escape sequence\" error in the pydantic.py file. The issue was caused by the backslashes in the regular expression pattern being treated as escape characters. By using a raw string literal for the regex pattern (e.g., r\"\\{.*\\}\"), this fix ensures that backslashes are treated as literal characters, thus preventing the error.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3902/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3902/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3901",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3901/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3901/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3901/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3901",
        "id": 1691142512,
        "node_id": "I_kwDOIPDwls5kzMlw",
        "number": 3901,
        "title": "delete this duplicate",
        "user": {
            "login": "ryanshrott",
            "id": 13425718,
            "node_id": "MDQ6VXNlcjEzNDI1NzE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13425718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanshrott",
            "html_url": "https://github.com/ryanshrott",
            "followers_url": "https://api.github.com/users/ryanshrott/followers",
            "following_url": "https://api.github.com/users/ryanshrott/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanshrott/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanshrott/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanshrott/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanshrott/orgs",
            "repos_url": "https://api.github.com/users/ryanshrott/repos",
            "events_url": "https://api.github.com/users/ryanshrott/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanshrott/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-01T18:08:25Z",
        "updated_at": "2023-09-10T16:24:02Z",
        "closed_at": "2023-09-10T16:24:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3901/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3900",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3900/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3900/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3900/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3900",
        "id": 1691106870,
        "node_id": "I_kwDOIPDwls5kzD42",
        "number": 3900,
        "title": "KeyError: 'completion' @ version: langchain-0.0.154 openapi-schema-pydantic-1.2.4",
        "user": {
            "login": "ldmtwo",
            "id": 7573669,
            "node_id": "MDQ6VXNlcjc1NzM2Njk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7573669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ldmtwo",
            "html_url": "https://github.com/ldmtwo",
            "followers_url": "https://api.github.com/users/ldmtwo/followers",
            "following_url": "https://api.github.com/users/ldmtwo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ldmtwo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ldmtwo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ldmtwo/subscriptions",
            "organizations_url": "https://api.github.com/users/ldmtwo/orgs",
            "repos_url": "https://api.github.com/users/ldmtwo/repos",
            "events_url": "https://api.github.com/users/ldmtwo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ldmtwo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-01T17:37:58Z",
        "updated_at": "2023-09-16T16:14:43Z",
        "closed_at": "2023-09-16T16:14:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Uninformative error. The error still exists. I just got back from vacation to see my app stop working with this new error. I tried updating...\r\n\r\npip install -U langchain\r\nSuccessfully installed langchain-0.0.154 openapi-schema-pydantic-1.2.4\r\n\r\n\r\nClearly, this is not the issue if nothing changed for 2 weeks. I assume an error or change happened on the API server. How can this be made clear? \r\n\r\n**94 out = model.run(reference=reference_passage, passage=input_passage)**\r\n     95 return fprompt, model, out\r\n\r\nFile ~/anaconda3/lib/python3.9/site-packages/langchain/chains/base.py:241, in Chain.run(self, callbacks, *args, **kwargs)\r\n    238     return self(args[0], callbacks=callbacks)[self.output_keys[0]]\r\n    240 if kwargs and not args:\r\n--> 241     return self(kwargs, callbacks=callbacks)[self.output_keys[0]]\r\n    243 raise ValueError(\r\n    244     f\"`run` supported with either positional arguments or keyword arguments\"\r\n    245     f\" but not both. Got args: {args} and kwargs: {kwargs}.\"\r\n    246 )\r\n\r\nFile ~/anaconda3/lib/python3.9/site-packages/langchain/chains/base.py:142, in Chain.__call__(self, inputs, return_only_outputs, callbacks)\r\n    140 except (KeyboardInterrupt, Exception) as e:\r\n    141     run_manager.on_chain_error(e)\r\n--> 142     raise e\r\n    143 run_manager.on_chain_end(outputs)\r\n    144 return self.prep_outputs(inputs, outputs, return_only_outputs)\r\n\r\nFile ~/anaconda3/lib/python3.9/site-packages/langchain/chains/base.py:136, in Chain.__call__(self, inputs, return_only_outputs, callbacks)\r\n    130 run_manager = callback_manager.on_chain_start(\r\n    131     {\"name\": self.__class__.__name__},\r\n    132     inputs,\r\n    133 )\r\n    134 try:\r\n    135     outputs = (\r\n--> 136         self._call(inputs, run_manager=run_manager)\r\n    137         if new_arg_supported\r\n    138         else self._call(inputs)\r\n    139     )\r\n    140 except (KeyboardInterrupt, Exception) as e:\r\n    141     run_manager.on_chain_error(e)\r\n\r\nFile ~/anaconda3/lib/python3.9/site-packages/langchain/chains/llm.py:69, in LLMChain._call(self, inputs, run_manager)\r\n     64 def _call(\r\n     65     self,\r\n     66     inputs: Dict[str, Any],\r\n     67     run_manager: Optional[CallbackManagerForChainRun] = None,\r\n     68 ) -> Dict[str, str]:\r\n---> 69     response = self.generate([inputs], run_manager=run_manager)\r\n     70     return self.create_outputs(response)[0]\r\n\r\nFile ~/anaconda3/lib/python3.9/site-packages/langchain/chains/llm.py:79, in LLMChain.generate(self, input_list, run_manager)\r\n     77 \"\"\"Generate LLM result from inputs.\"\"\"\r\n     78 prompts, stop = self.prep_prompts(input_list, run_manager=run_manager)\r\n---> 79 return self.llm.generate_prompt(\r\n     80     prompts, stop, callbacks=run_manager.get_child() if run_manager else None\r\n     81 )\r\n\r\nFile ~/anaconda3/lib/python3.9/site-packages/langchain/llms/base.py:127, in BaseLLM.generate_prompt(self, prompts, stop, callbacks)\r\n    120 def generate_prompt(\r\n    121     self,\r\n    122     prompts: List[PromptValue],\r\n    123     stop: Optional[List[str]] = None,\r\n    124     callbacks: Callbacks = None,\r\n    125 ) -> LLMResult:\r\n    126     prompt_strings = [p.to_string() for p in prompts]\r\n--> 127     return self.generate(prompt_strings, stop=stop, callbacks=callbacks)\r\n\r\nFile ~/anaconda3/lib/python3.9/site-packages/langchain/llms/base.py:176, in BaseLLM.generate(self, prompts, stop, callbacks)\r\n    174 except (KeyboardInterrupt, Exception) as e:\r\n    175     run_manager.on_llm_error(e)\r\n--> 176     raise e\r\n    177 run_manager.on_llm_end(output)\r\n    178 return output\r\n\r\nFile ~/anaconda3/lib/python3.9/site-packages/langchain/llms/base.py:170, in BaseLLM.generate(self, prompts, stop, callbacks)\r\n    165 run_manager = callback_manager.on_llm_start(\r\n    166     {\"name\": self.__class__.__name__}, prompts\r\n    167 )\r\n    168 try:\r\n    169     output = (\r\n--> 170         self._generate(prompts, stop=stop, run_manager=run_manager)\r\n    171         if new_arg_supported\r\n    172         else self._generate(prompts, stop=stop)\r\n    173     )\r\n    174 except (KeyboardInterrupt, Exception) as e:\r\n    175     run_manager.on_llm_error(e)\r\n\r\nFile ~/anaconda3/lib/python3.9/site-packages/langchain/llms/base.py:377, in LLM._generate(self, prompts, stop, run_manager)\r\n    374 new_arg_supported = inspect.signature(self._call).parameters.get(\"run_manager\")\r\n    375 for prompt in prompts:\r\n    376     text = (\r\n--> 377         self._call(prompt, stop=stop, run_manager=run_manager)\r\n    378         if new_arg_supported\r\n    379         else self._call(prompt, stop=stop)\r\n    380     )\r\n    381     generations.append([Generation(text=text)])\r\n    382 return LLMResult(generations=generations)\r\n\r\nFile ~/anaconda3/lib/python3.9/site-packages/langchain/llms/anthropic.py:207, in Anthropic._call(self, prompt, stop, run_manager)\r\n    201     return current_completion\r\n    202 response = self.client.completion(\r\n    203     prompt=self._wrap_prompt(prompt),\r\n    204     stop_sequences=stop,\r\n    205     **self._default_params,\r\n    206 )\r\n--> 207 return response[\"completion\"]\r\n\r\nKeyError: 'completion'\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3900/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3900/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3899",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3899/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3899/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3899/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3899",
        "id": 1691105504,
        "node_id": "PR_kwDOIPDwls5PhFK3",
        "number": 3899,
        "title": "fix: add import for gymnasium",
        "user": {
            "login": "mbchang",
            "id": 6439365,
            "node_id": "MDQ6VXNlcjY0MzkzNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6439365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbchang",
            "html_url": "https://github.com/mbchang",
            "followers_url": "https://api.github.com/users/mbchang/followers",
            "following_url": "https://api.github.com/users/mbchang/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbchang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbchang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbchang/subscriptions",
            "organizations_url": "https://api.github.com/users/mbchang/orgs",
            "repos_url": "https://api.github.com/users/mbchang/repos",
            "events_url": "https://api.github.com/users/mbchang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbchang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T17:36:24Z",
        "updated_at": "2023-05-02T02:12:21Z",
        "closed_at": "2023-05-01T17:37:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3899",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3899",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3899.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3899.patch",
            "merged_at": "2023-05-01T17:37:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3899/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3899/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3898",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3898/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3898/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3898/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3898",
        "id": 1691105497,
        "node_id": "I_kwDOIPDwls5kzDjZ",
        "number": 3898,
        "title": "_func() takes from 1 to 2 positional arguments but 42 were given. Please try again with a valid numerical expression",
        "user": {
            "login": "PawelFaron",
            "id": 42373772,
            "node_id": "MDQ6VXNlcjQyMzczNzcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/42373772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PawelFaron",
            "html_url": "https://github.com/PawelFaron",
            "followers_url": "https://api.github.com/users/PawelFaron/followers",
            "following_url": "https://api.github.com/users/PawelFaron/following{/other_user}",
            "gists_url": "https://api.github.com/users/PawelFaron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PawelFaron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PawelFaron/subscriptions",
            "organizations_url": "https://api.github.com/users/PawelFaron/orgs",
            "repos_url": "https://api.github.com/users/PawelFaron/repos",
            "events_url": "https://api.github.com/users/PawelFaron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PawelFaron/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-01T17:36:24Z",
        "updated_at": "2023-09-10T16:24:13Z",
        "closed_at": "2023-09-10T16:24:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Here is an example code that gives this error:\r\n\r\n```\r\nfrom langchain import OpenAI\r\nfrom langchain.agents import load_tools, Tool\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.chains import LLMChain\r\n\r\n\r\nllm = OpenAI(\r\n    openai_api_key='',\r\n    temperature=0,\r\n    model_name=\"text-davinci-003\",\r\n    max_tokens=-1\r\n)\r\n\r\n\r\nprompt = PromptTemplate(\r\n    input_variables=[\"query\"],\r\n    template=\"{query}\"\r\n)\r\n\r\nllm_chain = LLMChain(llm=llm, prompt=prompt)\r\n\r\n# initialize the LLM tool\r\nllm_tool = Tool(\r\n    name='Language Model',\r\n    func=llm_chain.run,\r\n    description='use this tool for general purpose queries and logic'\r\n)\r\n\r\n\r\ntools = load_tools(\r\n    ['llm-math'],\r\n    llm=llm\r\n)\r\ntools.append(llm_tool)\r\n\r\nfrom langchain.agents import initialize_agent\r\n\r\n\r\nzero_shot_agent = initialize_agent(\r\n    agent=\"zero-shot-react-description\",\r\n    tools=tools,\r\n    llm=llm,\r\n    verbose=True,\r\n    max_iterations=4\r\n)\r\n\r\nzero_shot_agent(\"What is the 10th percentile age of all US presidents when they took the office?\")\r\n```\r\n\r\nThe full output looks like this:\r\n> Entering new AgentExecutor chain...\r\n I need to find the age of all US presidents when they took office and then calculate the 10th percentile.\r\nAction: Language Model\r\nAction Input: List of US presidents and their ages when they took office\r\nObservation: \r\n\r\n1. George Washington (57)\r\n2. John Adams (61)\r\n3. Thomas Jefferson (57)\r\n4. James Madison (57)\r\n5. James Monroe (58)\r\n6. John Quincy Adams (57)\r\n7. Andrew Jackson (61)\r\n8. Martin Van Buren (54)\r\n9. William Henry Harrison (68)\r\n10. John Tyler (51)\r\n11. James K. Polk (49)\r\n12. Zachary Taylor (64)\r\n13. Millard Fillmore (50)\r\n14. Franklin Pierce (48)\r\n15. James Buchanan (65)\r\n16. Abraham Lincoln (52)\r\n17. Andrew Johnson (56)\r\n18. Ulysses S. Grant (46)\r\n19. Rutherford B. Hayes (54)\r\n20. James A. Garfield (49)\r\n21. Chester A. Arthur (51)\r\n22. Grover Cleveland (47)\r\n23. Benjamin Harrison (55)\r\n24. Grover Cleveland (55)\r\n25. William McKinley (54)\r\n26. Theodore Roosevelt (42)\r\n27. William Howard Taft (51)\r\n28. Woodrow Wilson (56)\r\n29. Warren G. Harding (55)\r\n30. Calvin Coolidge (51)\r\n31. Herbert Hoover (54)\r\n32. Franklin D. Roosevelt (51)\r\n33. Harry S. Truman (60)\r\n34. Dwight D. Eisenhower (62)\r\n35. John F. Kennedy (43)\r\n36. Lyndon B. Johnson (55)\r\n37. Richard Nixon (56)\r\n38. Gerald Ford (61)\r\n39. Jimmy Carter (52)\r\n40. Ronald Reagan (69)\r\n41. George H. W. Bush (64)\r\n42. Bill Clinton (46)\r\n43. George W. Bush (54)\r\n44. Barack Obama (47)\r\n45. Donald Trump (70)\r\nThought: I now need to calculate the 10th percentile of these ages.\r\nAction: Calculator\r\nAction Input: 57, 61, 57, 57, 58, 57, 61, 54, 68, 51, 49, 64, 50, 48, 65, 52, 56, 46, 54, 49, 51, 55, 47, 55, 54, 42, 51, 55, 51, 60, 62, 43, 55, 56, 61, 52, 69, 64, 46, 54, 47, 70Traceback (most recent call last):\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/chains/llm_math/base.py\", line 80, in _evaluate_expression\r\n    numexpr.evaluate(\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/numexpr/necompiler.py\", line 817, in evaluate\r\n    _names_cache[expr_key] = getExprNames(ex, context)\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/numexpr/necompiler.py\", line 704, in getExprNames\r\n    ex = stringToExpression(text, {}, context)\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/numexpr/necompiler.py\", line 289, in stringToExpression\r\n    ex = eval(c, names)\r\n  File \"<expr>\", line 1, in <module>\r\nTypeError: _func() takes from 1 to 2 positional arguments but 42 were given\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/pawelfaron/wxh-rwm-driver/agents_test.py\", line 48, in <module>\r\n    zero_shot_agent(\"What is the 10th percentile age of all US presidents when they took the office?\")\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/chains/base.py\", line 142, in __call__\r\n    raise e\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/chains/base.py\", line 136, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/agents/agent.py\", line 855, in _call\r\n    next_step_output = self._take_next_step(\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/agents/agent.py\", line 749, in _take_next_step\r\n    observation = tool.run(\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/tools/base.py\", line 251, in run\r\n    raise e\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/tools/base.py\", line 245, in run\r\n    self._run(*tool_args, run_manager=run_manager, **tool_kwargs)\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/agents/tools.py\", line 61, in _run\r\n    self.func(\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/chains/base.py\", line 238, in run\r\n    return self(args[0], callbacks=callbacks)[self.output_keys[0]]\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/chains/base.py\", line 142, in __call__\r\n    raise e\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/chains/base.py\", line 136, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/chains/llm_math/base.py\", line 146, in _call\r\n    return self._process_llm_result(llm_output, _run_manager)\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/chains/llm_math/base.py\", line 100, in _process_llm_result\r\n    output = self._evaluate_expression(expression)\r\n  File \"/Users/pawelfaron/miniconda3/envs/langchain_blog/lib/python3.9/site-packages/langchain/chains/llm_math/base.py\", line 87, in _evaluate_expression\r\n    raise ValueError(f\"{e}. Please try again with a valid numerical expression\")\r\nValueError: _func() takes from 1 to 2 positional arguments but 42 were given. Please try again with a valid numerical expression\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3898/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3898/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3897",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3897/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3897/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3897/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3897",
        "id": 1691100521,
        "node_id": "PR_kwDOIPDwls5PhELU",
        "number": 3897,
        "title": "Chroma fix mmr",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-01T17:32:37Z",
        "updated_at": "2023-05-01T17:47:17Z",
        "closed_at": "2023-05-01T17:47:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3897",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3897",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3897.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3897.patch",
            "merged_at": "2023-05-01T17:47:16Z"
        },
        "body": "Fixes #3628, thanks @derekmoeller for the issue!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3897/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3897/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3896",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3896/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3896/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3896/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3896",
        "id": 1691099458,
        "node_id": "I_kwDOIPDwls5kzCFC",
        "number": 3896,
        "title": "Remove duplication when creating and updating FAISS Vecstore",
        "user": {
            "login": "sunson2k",
            "id": 47506178,
            "node_id": "MDQ6VXNlcjQ3NTA2MTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47506178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunson2k",
            "html_url": "https://github.com/sunson2k",
            "followers_url": "https://api.github.com/users/sunson2k/followers",
            "following_url": "https://api.github.com/users/sunson2k/following{/other_user}",
            "gists_url": "https://api.github.com/users/sunson2k/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sunson2k/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sunson2k/subscriptions",
            "organizations_url": "https://api.github.com/users/sunson2k/orgs",
            "repos_url": "https://api.github.com/users/sunson2k/repos",
            "events_url": "https://api.github.com/users/sunson2k/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sunson2k/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-01T17:31:28Z",
        "updated_at": "2023-11-30T16:10:11Z",
        "closed_at": "2023-11-30T16:10:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The `FAISS.add_texts` and `FAISS.merge_from` don't check duplicated document contents, and always add contents into Vecstore.\r\n\r\n```ruby\r\ntest_db = FAISS.from_texts(['text 2'], embeddings)\r\ntest_db.add_texts(['text 1', 'text 2', 'text 1'])\r\nprint(test_db.index_to_docstore_id)\r\ntest_db.docstore._dict\r\n```\r\nNote that 'text 1' and 'text 2' are both added twice with different indices.\r\n```\r\n{0: '12a6a477-db74-4d90-b843-4cd872e070a0', 1: 'a3171e0e-f12a-418f-9994-5625550de73e', 2: '543f8fcf-bf84-4d9e-a6a9-f87fda0afcc3', 3: 'ed320a75-775f-4ec2-ae0b-fef8fa8d0bfe'}\r\n{'12a6a477-db74-4d90-b843-4cd872e070a0': Document(page_content='text 2', lookup_str='', metadata={}, lookup_index=0),\r\n 'a3171e0e-f12a-418f-9994-5625550de73e': Document(page_content='text 1', lookup_str='', metadata={}, lookup_index=0),\r\n '543f8fcf-bf84-4d9e-a6a9-f87fda0afcc3': Document(page_content='text 2', lookup_str='', metadata={}, lookup_index=0),\r\n 'ed320a75-775f-4ec2-ae0b-fef8fa8d0bfe': Document(page_content='text 1', lookup_str='', metadata={}, lookup_index=0)}\r\n```\r\nAlso the embedding values are the same\r\n```ruby\r\nnp.dot(test_db.index.reconstruct(0), test_db.index.reconstruct(2))\r\n```\r\n```\r\n1.0000001\r\n```\r\n\r\n**Expected Behavior:** \r\nSimilar to database `upsert`, create new index if key (content or embedding) doesn't exist, otherwise update the value (document metadata in this case).\r\n\r\nI'm pretty new to LangChain, so if I'm missing something or doing it wrong, apologies and please suggest the best practice on dealing with LangChain FAISS duplication - otherwise, hope this is useful feedback, thanks!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3896/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3896/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3895",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3895/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3895/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3895/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3895",
        "id": 1691098705,
        "node_id": "PR_kwDOIPDwls5PhDy_",
        "number": 3895,
        "title": "Update adding_memory_chain_multiple_inputs.ipynb",
        "user": {
            "login": "johanste",
            "id": 15110018,
            "node_id": "MDQ6VXNlcjE1MTEwMDE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/15110018?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/johanste",
            "html_url": "https://github.com/johanste",
            "followers_url": "https://api.github.com/users/johanste/followers",
            "following_url": "https://api.github.com/users/johanste/following{/other_user}",
            "gists_url": "https://api.github.com/users/johanste/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/johanste/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/johanste/subscriptions",
            "organizations_url": "https://api.github.com/users/johanste/orgs",
            "repos_url": "https://api.github.com/users/johanste/repos",
            "events_url": "https://api.github.com/users/johanste/events{/privacy}",
            "received_events_url": "https://api.github.com/users/johanste/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-01T17:30:35Z",
        "updated_at": "2023-05-02T02:57:27Z",
        "closed_at": "2023-05-02T02:57:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3895",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3895",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3895.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3895.patch",
            "merged_at": "2023-05-02T02:57:27Z"
        },
        "body": "Fix misleading docs in memory chain example (used the term \"outputs\" instead of \"inputs\") ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3895/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3895/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3894",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3894/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3894/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3894/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3894",
        "id": 1691090422,
        "node_id": "I_kwDOIPDwls5ky_32",
        "number": 3894,
        "title": "TrajectoryEvalChain import error -  cannot import name 'ChainManagerMixin' from 'langchain.callbacks.base",
        "user": {
            "login": "NasonZ",
            "id": 66695083,
            "node_id": "MDQ6VXNlcjY2Njk1MDgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/66695083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NasonZ",
            "html_url": "https://github.com/NasonZ",
            "followers_url": "https://api.github.com/users/NasonZ/followers",
            "following_url": "https://api.github.com/users/NasonZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/NasonZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NasonZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NasonZ/subscriptions",
            "organizations_url": "https://api.github.com/users/NasonZ/orgs",
            "repos_url": "https://api.github.com/users/NasonZ/repos",
            "events_url": "https://api.github.com/users/NasonZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NasonZ/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-01T17:21:34Z",
        "updated_at": "2023-06-02T00:50:49Z",
        "closed_at": "2023-05-27T20:53:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": " I am trying to follow this guide on evaluation of agents (https://python.langchain.com/en/latest/use_cases/evaluation/generic_agent_evaluation.html), but I'm seeing the following error:\r\n\r\n`ImportError: cannot import name 'ChainManagerMixin' from 'langchain.callbacks.base'`\r\n\r\n\r\nI am using langchain==0.0.154 with Python 3.8.16\r\n\r\nCode I executed:\r\n\r\n`from langchain.evaluation.agents import TrajectoryEvalChain`\r\n\r\nTrace:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\nCell In[18], line 1\r\n----> 1 from langchain.evaluation.agents import TrajectoryEvalChain\r\n      3 # # Define chain\r\n      4 # eval_chain = TrajectoryEvalChain.from_llm(\r\n      5 #     llm=ChatOpenAI(temperature=0, model_name=\"gpt-4\"), # Note: This must be a ChatOpenAI model\r\n      6 #     agent_tools=agent.tools,\r\n      7 #     return_reasoning=True,\r\n      8 # )\r\n\r\nFile [~/anaconda3/envs/langchainxhaystack/lib/python3.8/site-packages/langchain/evaluation/agents/__init__.py:2](https://file+.vscode-resource.vscode-cdn.net/home/taf/Dmyzer/search_engine/Prototypes/recall/naswellbot/~/anaconda3/envs/langchainxhaystack/lib/python3.8/site-packages/langchain/evaluation/agents/__init__.py:2)\r\n      1 \"\"\"Chains for evaluating ReAct style agents.\"\"\"\r\n----> 2 from langchain.evaluation.agents.trajectory_eval_chain import TrajectoryEvalChain\r\n      4 __all__ = [\"TrajectoryEvalChain\"]\r\n\r\nFile [~/anaconda3/envs/langchainxhaystack/lib/python3.8/site-packages/langchain/evaluation/agents/trajectory_eval_chain.py:4](https://file+.vscode-resource.vscode-cdn.net/home/taf/Dmyzer/search_engine/Prototypes/recall/naswellbot/~/anaconda3/envs/langchainxhaystack/lib/python3.8/site-packages/langchain/evaluation/agents/trajectory_eval_chain.py:4)\r\n      1 \"\"\"A chain for evaluating ReAct style agents.\"\"\"\r\n      2 from typing import Any, Dict, List, NamedTuple, Optional, Sequence, Tuple, Union\r\n----> 4 from langchain.callbacks.manager import CallbackManagerForChainRun\r\n      5 from langchain.chains.base import Chain\r\n      6 from langchain.chains.llm import LLMChain\r\n\r\nFile [~/anaconda3/envs/langchainxhaystack/lib/python3.8/site-packages/langchain/callbacks/manager.py:12](https://file+.vscode-resource.vscode-cdn.net/home/taf/Dmyzer/search_engine/Prototypes/recall/naswellbot/~/anaconda3/envs/langchainxhaystack/lib/python3.8/site-packages/langchain/callbacks/manager.py:12)\r\n      9 from typing import Any, Dict, Generator, List, Optional, Type, TypeVar, Union\r\n     10 from uuid import UUID, uuid4\r\n---> 12 from langchain.callbacks.base import (\r\n     13     BaseCallbackHandler,\r\n     14     BaseCallbackManager,\r\n     15     ChainManagerMixin,\r\n     16     LLMManagerMixin,\r\n     17     RunManagerMixin,\r\n     18     ToolManagerMixin,\r\n     19 )\r\n     20 from langchain.callbacks.openai_info import OpenAICallbackHandler\r\n     21 from langchain.callbacks.stdout import StdOutCallbackHandler\r\n\r\nImportError: cannot import name 'ChainManagerMixin' from 'langchain.callbacks.base'\r\n```\r\nAny advice on what steps to take to resolve this would be appreciated.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3894/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3894/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3893",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3893/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3893/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3893/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3893",
        "id": 1691068719,
        "node_id": "I_kwDOIPDwls5ky6kv",
        "number": 3893,
        "title": "AttributeError: 'Redis' object has no attribute 'module_list'",
        "user": {
            "login": "Ahmedniz1",
            "id": 47387966,
            "node_id": "MDQ6VXNlcjQ3Mzg3OTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/47387966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ahmedniz1",
            "html_url": "https://github.com/Ahmedniz1",
            "followers_url": "https://api.github.com/users/Ahmedniz1/followers",
            "following_url": "https://api.github.com/users/Ahmedniz1/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ahmedniz1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ahmedniz1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ahmedniz1/subscriptions",
            "organizations_url": "https://api.github.com/users/Ahmedniz1/orgs",
            "repos_url": "https://api.github.com/users/Ahmedniz1/repos",
            "events_url": "https://api.github.com/users/Ahmedniz1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ahmedniz1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2023-05-01T17:02:43Z",
        "updated_at": "2023-10-04T15:59:20Z",
        "closed_at": "2023-05-19T20:02:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm trying to make a vectorstore using redis and store the embeddings in redis.\r\nWhen I write the code\r\nrds = Redis.from_documents(docs, embeddings, redis_url=\"redis://localhost:6379\",  index_name='test_link')\r\nI get the following error\r\nAttributeError: 'Redis' object has no attribute 'module_list'.\r\nNote: I'm trying to run redis locally on windows subsystem ubuntu.\r\nPlease help.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3893/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3893/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3892",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3892/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3892/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3892/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3892",
        "id": 1691068656,
        "node_id": "PR_kwDOIPDwls5Pg9ac",
        "number": 3892,
        "title": "Fix self query pinecone translation",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-01T17:02:40Z",
        "updated_at": "2023-11-04T17:11:00Z",
        "closed_at": "2023-05-01T17:35:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3892",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3892",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3892.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3892.patch",
            "merged_at": "2023-05-01T17:35:49Z"
        },
        "body": "Enum to string conversion handled differently between python 3.9 and 3.11, currently breaking in 3.11 (see #3788). Thanks @peter-brady for catching this!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3892/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3891",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3891/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3891/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3891/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3891",
        "id": 1691041869,
        "node_id": "I_kwDOIPDwls5ky0BN",
        "number": 3891,
        "title": "Support for .NET",
        "user": {
            "login": "jeastham1993",
            "id": 14234617,
            "node_id": "MDQ6VXNlcjE0MjM0NjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/14234617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeastham1993",
            "html_url": "https://github.com/jeastham1993",
            "followers_url": "https://api.github.com/users/jeastham1993/followers",
            "following_url": "https://api.github.com/users/jeastham1993/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeastham1993/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeastham1993/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeastham1993/subscriptions",
            "organizations_url": "https://api.github.com/users/jeastham1993/orgs",
            "repos_url": "https://api.github.com/users/jeastham1993/repos",
            "events_url": "https://api.github.com/users/jeastham1993/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeastham1993/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-05-01T16:37:36Z",
        "updated_at": "2023-09-21T02:40:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Build SDK support for .NET.\r\n\r\nI'd be happy to contribute to the project.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3891/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3891/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]