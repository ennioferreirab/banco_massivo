[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8587",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8587/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8587/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8587/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8587",
        "id": 1968498550,
        "node_id": "PR_kwDOIWuq585eIKec",
        "number": 8587,
        "title": "Add IBM WatsonX LLM support",
        "user": {
            "login": "amit-kenkre",
            "id": 116057705,
            "node_id": "U_kgDOBurmaQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/116057705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amit-kenkre",
            "html_url": "https://github.com/amit-kenkre",
            "followers_url": "https://api.github.com/users/amit-kenkre/followers",
            "following_url": "https://api.github.com/users/amit-kenkre/following{/other_user}",
            "gists_url": "https://api.github.com/users/amit-kenkre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amit-kenkre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amit-kenkre/subscriptions",
            "organizations_url": "https://api.github.com/users/amit-kenkre/orgs",
            "repos_url": "https://api.github.com/users/amit-kenkre/repos",
            "events_url": "https://api.github.com/users/amit-kenkre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amit-kenkre/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-30T14:23:46Z",
        "updated_at": "2023-10-30T17:31:19Z",
        "closed_at": "2023-10-30T17:31:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8587",
            "html_url": "https://github.com/run-llama/llama_index/pull/8587",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8587.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8587.patch",
            "merged_at": "2023-10-30T17:31:18Z"
        },
        "body": "# Description\r\n\r\nThis PR adds support for IBM WatsonX Foundation Models.  I've added unit tests for basic and streaming functionality. \r\n\r\nJust a note regarding the implementation I've done in the tests, where I mocked the `ibm_watson_machine_learning.foundation_models.model` module. I did that because the library makes an API call during initialization to check for credentials' validity. I wasn't able to find an alternative way, to handle this. So I referenced `test_palm.py` and decided to follow that way to Mock the module.\r\n\r\nPlease let me know if my method is wrong, or if there are any other changes that you'd like in the PR.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8587/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8587/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8586",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8586/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8586/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8586/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8586",
        "id": 1968490328,
        "node_id": "I_kwDOIWuq5851VMdY",
        "number": 8586,
        "title": "[Question]: how to relsove asyncio.run() cannot be called from a running event loop when app evaluation?",
        "user": {
            "login": "sieu-anika",
            "id": 148925140,
            "node_id": "U_kgDOCOBq1A",
            "avatar_url": "https://avatars.githubusercontent.com/u/148925140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sieu-anika",
            "html_url": "https://github.com/sieu-anika",
            "followers_url": "https://api.github.com/users/sieu-anika/followers",
            "following_url": "https://api.github.com/users/sieu-anika/following{/other_user}",
            "gists_url": "https://api.github.com/users/sieu-anika/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sieu-anika/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sieu-anika/subscriptions",
            "organizations_url": "https://api.github.com/users/sieu-anika/orgs",
            "repos_url": "https://api.github.com/users/sieu-anika/repos",
            "events_url": "https://api.github.com/users/sieu-anika/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sieu-anika/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-30T14:19:58Z",
        "updated_at": "2023-11-01T10:51:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI apply evaluation to my code, but when i call to function, i see error : asyncio.run() cannot be called from a running event loop\r\nI try find solution to solve issue, but couldn't. can you help me? \r\nMy code: \r\n\r\ndef evaluate_result(query: str, reference: str, answer: str) -> EvaluationResult:\r\n\r\n    llm = VertexAI(\r\n            model_name=\"text-bison\",\r\n            max_output_tokens=800,\r\n            temperature=0.2,\r\n            top_p=0.2,\r\n            top_k=1.0,\r\n            verbose=True\r\n        )\r\n    service_context = ServiceContext.from_defaults(llm=llm)\r\n    evaluator = CorrectnessEvaluator(service_context=service_context)\r\n\r\n    return evaluator.evaluate(\r\n        query=query,\r\n        response=answer,\r\n        reference=reference,\r\n    )\r\n\r\n\r\nAnd i call: \r\nasync def answer_chat_question():\r\n          data = evaluate_result(query=result[\"query\"], reference=result[\"source_documents\"], answer=result[\"result\"])\r\n           print(data)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8586/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8586/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8585",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8585/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8585/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8585/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8585",
        "id": 1968488357,
        "node_id": "PR_kwDOIWuq585eIIQL",
        "number": 8585,
        "title": "I'm encountering the `object has no attribute '__fields_set__'` error with pydantic.",
        "user": {
            "login": "HawkClaws",
            "id": 62013138,
            "node_id": "MDQ6VXNlcjYyMDEzMTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/62013138?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HawkClaws",
            "html_url": "https://github.com/HawkClaws",
            "followers_url": "https://api.github.com/users/HawkClaws/followers",
            "following_url": "https://api.github.com/users/HawkClaws/following{/other_user}",
            "gists_url": "https://api.github.com/users/HawkClaws/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HawkClaws/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HawkClaws/subscriptions",
            "organizations_url": "https://api.github.com/users/HawkClaws/orgs",
            "repos_url": "https://api.github.com/users/HawkClaws/repos",
            "events_url": "https://api.github.com/users/HawkClaws/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HawkClaws/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-30T14:19:04Z",
        "updated_at": "2023-10-30T17:35:06Z",
        "closed_at": "2023-10-30T17:35:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8585",
            "html_url": "https://github.com/run-llama/llama_index/pull/8585",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8585.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8585.patch",
            "merged_at": "2023-10-30T17:35:06Z"
        },
        "body": "# Description\r\n\r\nI'm encountering the `object has no attribute '__fields_set__'` error with pydantic.\r\n\r\nHere's the code snippet:\r\n\r\n```python\r\nself.bearer_token = bearer_token\r\nself.num_tweets = num_tweets\r\nsuper().__init__(\r\n    num_tweets=num_tweets,\r\n    bearer_token=bearer_token,\r\n)\r\n```\r\n\r\nIt seems that the object is being initialized twice, and the first initialization is unnecessary. Additionally, during the first initialization, I'm encountering the object has no attribute '__fields_set__' error with pydantic.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8585/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8585/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8584",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8584/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8584/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8584/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8584",
        "id": 1968261714,
        "node_id": "PR_kwDOIWuq585eHWZf",
        "number": 8584,
        "title": "Handle metadata with None values in chromadb",
        "user": {
            "login": "neil-botelho",
            "id": 116251564,
            "node_id": "U_kgDOBu3brA",
            "avatar_url": "https://avatars.githubusercontent.com/u/116251564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neil-botelho",
            "html_url": "https://github.com/neil-botelho",
            "followers_url": "https://api.github.com/users/neil-botelho/followers",
            "following_url": "https://api.github.com/users/neil-botelho/following{/other_user}",
            "gists_url": "https://api.github.com/users/neil-botelho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neil-botelho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neil-botelho/subscriptions",
            "organizations_url": "https://api.github.com/users/neil-botelho/orgs",
            "repos_url": "https://api.github.com/users/neil-botelho/repos",
            "events_url": "https://api.github.com/users/neil-botelho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neil-botelho/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-30T12:40:08Z",
        "updated_at": "2023-10-30T14:35:03Z",
        "closed_at": "2023-10-30T14:35:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8584",
            "html_url": "https://github.com/run-llama/llama_index/pull/8584",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8584.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8584.patch",
            "merged_at": "2023-10-30T14:35:03Z"
        },
        "body": "# Description\r\nThis solves #8583 \r\nI think `None` values in metadata only needs to be handled for cases where a llama_index library function internally tries to set `None` values for metadata. If a user passes `None` values they'd understand the issue and should be able to handle the error themselves. Also iterating over every value of a metadata dict for every item passed in would be wasteful.\r\n\r\nMy solution is to only check if the metadata_dict contains the `context` key and if it is set to None set it to an empty string instead. This is admittedly a bit of a patchwork solution, but I think it solves the problem in the most efficient way. \r\nThe alternative would be to make the default value for `context` an empty string [here](https://github.com/run-llama/llama_index/blob/95e107423664812eeece1af0f162c9dcd4bfe670/llama_index/objects/table_node_mapping.py#L54) but its harder to trace what the downstream consequences of that would be. \r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n- [x] I have performed a self-review of my own code\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8584/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8584/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8583",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8583/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8583/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8583/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8583",
        "id": 1968239191,
        "node_id": "I_kwDOIWuq5851UPJX",
        "number": 8583,
        "title": "[Bug]: ChromaDB throws Error when used with SQLTableNodeMapping",
        "user": {
            "login": "neil-botelho",
            "id": 116251564,
            "node_id": "U_kgDOBu3brA",
            "avatar_url": "https://avatars.githubusercontent.com/u/116251564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neil-botelho",
            "html_url": "https://github.com/neil-botelho",
            "followers_url": "https://api.github.com/users/neil-botelho/followers",
            "following_url": "https://api.github.com/users/neil-botelho/following{/other_user}",
            "gists_url": "https://api.github.com/users/neil-botelho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neil-botelho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neil-botelho/subscriptions",
            "organizations_url": "https://api.github.com/users/neil-botelho/orgs",
            "repos_url": "https://api.github.com/users/neil-botelho/repos",
            "events_url": "https://api.github.com/users/neil-botelho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neil-botelho/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-30T12:28:26Z",
        "updated_at": "2023-10-31T04:22:55Z",
        "closed_at": "2023-10-31T04:22:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI was following [this tutorial](https://docs.llamaindex.ai/en/stable/examples/index_structs/struct_indices/SQLIndexDemo.html#part-2-query-time-retrieval-of-tables-for-text-to-sql) on text to sql, but using ChromaDB as the Vector store. \r\nIf you don't pass `context_str` as an argument to SQLTableSchema, then in the nodes that it generates for each table we get an entry `context:None`. \r\n\r\nThe problem is chromadb doesn't accept None values in metadata, so it throws and error when a node is added to it. The offending line is [here](https://github.com/run-llama/llama_index/blob/95e107423664812eeece1af0f162c9dcd4bfe670/llama_index/vector_stores/chroma.py#L161)\r\n\r\nWhen we attempt to add the nodes to chroma it throws:\r\n```\r\n ~/.../lib/python3.9/site-packages/chromadb/api/types.py:159   \u2502\r\n\u2502 in validate_metadata                                                                             \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   156 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502   157 \u2502   \u2502   # isinstance(True, int) evaluates to True, so we need to check for bools separat   \u2502\r\n\u2502   158 \u2502   \u2502   if not isinstance(value, bool) and not isinstance(value, (str, int, float)):       \u2502\r\n\u2502 \u2771 159 \u2502   \u2502   \u2502   raise ValueError(                                                              \u2502\r\n\u2502   160 \u2502   \u2502   \u2502   \u2502   f\"Expected metadata value to be a str, int, float or bool, got {value} w   \u2502\r\n\u2502   161 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502   162 \u2502   return metadata                                                                        \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nValueError: Expected metadata value to be a str, int, float or bool, got None which is a <class 'NoneType'>\r\n```\r\n\r\n### Version\r\n\r\n0.8.55\r\n\r\n### Steps to Reproduce\r\n\r\nFollow  [this tutorial](https://docs.llamaindex.ai/en/stable/examples/index_structs/struct_indices/SQLIndexDemo.html#part-2-query-time-retrieval-of-tables-for-text-to-sql) but create a chromadb vector store and pass it as part of `storage_context` to `ObjectIndex.from_objects`\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n~/.../source_code/llama_index/llama_index/vector_stores/chroma.py:177 in  \u2502\r\n\u2502 add                                                                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   174 \u2502   \u2502   \u2502   \u2502   ids.append(node.node_id)                                                   \u2502\r\n\u2502   175 \u2502   \u2502   \u2502   \u2502   documents.append(node.get_content(metadata_mode=MetadataMode.NONE))        \u2502\r\n\u2502   176 \u2502   \u2502   \u2502                                                                                  \u2502\r\n\u2502 \u2771 177 \u2502   \u2502   \u2502   self._collection.add(                                                          \u2502\r\n\u2502   178 \u2502   \u2502   \u2502   \u2502   embeddings=embeddings,                                                     \u2502\r\n\u2502   179 \u2502   \u2502   \u2502   \u2502   ids=ids,                                                                   \u2502\r\n\u2502   180 \u2502   \u2502   \u2502   \u2502   metadatas=metadatas,                                                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502  ~/.../lib/python3.9/site-packages/chromadb/api/models/Collect \u2502\r\n\u2502 ion.py:96 in add                                                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    93 \u2502   \u2502                                                                                      \u2502\r\n\u2502    94 \u2502   \u2502   \"\"\"                                                                                \u2502\r\n\u2502    95 \u2502   \u2502                                                                                      \u2502\r\n\u2502 \u2771  96 \u2502   \u2502   ids, embeddings, metadatas, documents = self._validate_embedding_set(              \u2502\r\n\u2502    97 \u2502   \u2502   \u2502   ids, embeddings, metadatas, documents                                          \u2502\r\n\u2502    98 \u2502   \u2502   )                                                                                  \u2502\r\n\u2502    99                                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 ~/.../lib/python3.9/site-packages/chromadb/api/models/Collect \u2502\r\n\u2502 ion.py:354 in _validate_embedding_set                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   351 \u2502   \u2502   \u2502   else None                                                                      \u2502\r\n\u2502   352 \u2502   \u2502   )                                                                                  \u2502\r\n\u2502   353 \u2502   \u2502   metadatas = (                                                                      \u2502\r\n\u2502 \u2771 354 \u2502   \u2502   \u2502   validate_metadatas(maybe_cast_one_to_many(metadatas))                          \u2502\r\n\u2502   355 \u2502   \u2502   \u2502   if metadatas is not None                                                       \u2502\r\n\u2502   356 \u2502   \u2502   \u2502   else None                                                                      \u2502\r\n\u2502   357 \u2502   \u2502   )                                                                                  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502  ~/.../lib/python3.9/site-packages/chromadb/api/types.py:191   \u2502\r\n\u2502 in validate_metadatas                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   188 \u2502   if not isinstance(metadatas, list):                                                    \u2502\r\n\u2502   189 \u2502   \u2502   raise ValueError(f\"Expected metadatas to be a list, got {metadatas}\")              \u2502\r\n\u2502   190 \u2502   for metadata in metadatas:                                                             \u2502\r\n\u2502 \u2771 191 \u2502   \u2502   validate_metadata(metadata)                                                        \u2502\r\n\u2502   192 \u2502   return metadatas                                                                       \u2502\r\n\u2502   193                                                                                            \u2502\r\n\u2502   194                                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502  ~/.../lib/python3.9/site-packages/chromadb/api/types.py:159   \u2502\r\n\u2502 in validate_metadata                                                                             \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   156 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502   157 \u2502   \u2502   # isinstance(True, int) evaluates to True, so we need to check for bools separat   \u2502\r\n\u2502   158 \u2502   \u2502   if not isinstance(value, bool) and not isinstance(value, (str, int, float)):       \u2502\r\n\u2502 \u2771 159 \u2502   \u2502   \u2502   raise ValueError(                                                              \u2502\r\n\u2502   160 \u2502   \u2502   \u2502   \u2502   f\"Expected metadata value to be a str, int, float or bool, got {value} w   \u2502\r\n\u2502   161 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502   162 \u2502   return metadata                                                                        \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nValueError: Expected metadata value to be a str, int, float or bool, got None which is a <class 'NoneType'>```\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8583/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8583/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8582",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8582/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8582/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8582/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8582",
        "id": 1968167521,
        "node_id": "PR_kwDOIWuq585eHBgn",
        "number": 8582,
        "title": "add support for ChromaDB PersistentClient",
        "user": {
            "login": "neil-botelho",
            "id": 116251564,
            "node_id": "U_kgDOBu3brA",
            "avatar_url": "https://avatars.githubusercontent.com/u/116251564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neil-botelho",
            "html_url": "https://github.com/neil-botelho",
            "followers_url": "https://api.github.com/users/neil-botelho/followers",
            "following_url": "https://api.github.com/users/neil-botelho/following{/other_user}",
            "gists_url": "https://api.github.com/users/neil-botelho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neil-botelho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neil-botelho/subscriptions",
            "organizations_url": "https://api.github.com/users/neil-botelho/orgs",
            "repos_url": "https://api.github.com/users/neil-botelho/repos",
            "events_url": "https://api.github.com/users/neil-botelho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neil-botelho/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-30T11:55:05Z",
        "updated_at": "2023-11-01T00:55:46Z",
        "closed_at": "2023-11-01T00:55:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8582",
            "html_url": "https://github.com/run-llama/llama_index/pull/8582",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8582.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8582.patch",
            "merged_at": "2023-11-01T00:55:46Z"
        },
        "body": "# Description\r\nThe existing ChromaDb vector store only had support for the HttpClient. This PR adds support for the PersistentClient with the optional arguement persist_dir.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8582/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8582/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8581",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8581/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8581/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8581/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8581",
        "id": 1968126343,
        "node_id": "I_kwDOIWuq5851TzmH",
        "number": 8581,
        "title": "[Bug]: Qdrant client returns empty response for Composable graph",
        "user": {
            "login": "ljsafurai",
            "id": 147727307,
            "node_id": "U_kgDOCM4jyw",
            "avatar_url": "https://avatars.githubusercontent.com/u/147727307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ljsafurai",
            "html_url": "https://github.com/ljsafurai",
            "followers_url": "https://api.github.com/users/ljsafurai/followers",
            "following_url": "https://api.github.com/users/ljsafurai/following{/other_user}",
            "gists_url": "https://api.github.com/users/ljsafurai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ljsafurai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ljsafurai/subscriptions",
            "organizations_url": "https://api.github.com/users/ljsafurai/orgs",
            "repos_url": "https://api.github.com/users/ljsafurai/repos",
            "events_url": "https://api.github.com/users/ljsafurai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ljsafurai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-30T11:32:30Z",
        "updated_at": "2023-10-30T11:47:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nRegular Vector Store Index returns regular output, while Composable graph with Vector Store Index returns 'Empty response' and [] for source nodes.\r\n\r\n### Version\r\n\r\n0.8.55\r\n\r\n### Steps to Reproduce\r\n\r\nHere is code snippet which will reproduce bug:\r\n```\r\nclient = qdrant_client.QdrantClient(\":memory:\")\r\nservice_context = ServiceContext.from_defaults()\r\n\r\ndocuments = ['Document text here']\r\nvector_store1 = QdrantVectorStore(client=client, collection_name='a')\r\nstorage_context1 = StorageContext.from_defaults(vector_store=vector_store1)\r\nindex1 = VectorStoreIndex.from_documents(documents , storage_context=storage_context1, service_context=service_context)\r\n\r\nvector_store3 = QdrantVectorStore(client=client, collection_name='c')\r\nstorage_context3 = StorageContext.from_defaults(vector_store=vector_store3)\r\ngraph = ComposableGraph.from_indices(\r\n    VectorStoreIndex,\r\n    [index1],\r\n    index_summaries=['summary for index1'],\r\n    service_context=service_context,\r\n    storage_context=storage_context3,\r\n)\r\nprint(graph.root_id)\r\n\r\nquery_engine1 = index1.as_query_engine()\r\nquery_engine3 = graph.as_query_engine()\r\nquery = \"What is LlamaIndex?\"\r\nresponse1 = query_engine1.query(query)\r\nprint(response1)\r\nprint(response1.source_nodes)\r\nresponse3 = query_engine3.query(query)\r\nprint(response3)\r\nprint(response3.source_nodes)\r\n```\r\n\r\nI managed to trace it back to Filter. Even though Composable Graph includes relevant Node id into Filter, it is not correctly processed in qdrant_client library. Specifically in [_get_value function](https://github.com/qdrant/qdrant-client/blob/6875996cad0b4d15c891e9e81c725aaa3e9afdb5/qdrant_client/local/payload_value_extractor.py#L24) where it compares the payload to the filter data.\r\n\r\nThis is example of payload (data argument) of composable graph: [{'_node_content': '{\"id_\": \"8b345717-10e3-4cd7-92fe-478e739f51d2\", \"embedding\": null, \"metadata\": {}, \"excluded_embed_metadata_keys\": [], \"excluded_llm_metadata_keys\": [], \"relationships\": {\"1\": {\"node_id\": \"3afcdfdb-cdc4-4e9e-bcfe-08d6adbb6dcc\", \"node_type\": \"3\", \"metadata\": {}, \"hash\": null}}, \"hash\": \"6bea3e95fb5b08d0820a4632a4b6b4d89ef71c934d1a193f11791182213be7b9\", \"text\": \"summary example\", \"start_char_idx\": null, \"end_char_idx\": null, \"text_template\": \"{metadata_str}\\\\n\\\\n{content}\", \"metadata_template\": \"{key}: {value}\", \"metadata_seperator\": \"\\\\n\", \"index_id\": \"3afcdfdb-cdc4-4e9e-bcfe-08d6adbb6dcc\"}',\r\n  'document_id': '3afcdfdb-cdc4-4e9e-bcfe-08d6adbb6dcc',\r\n  'doc_id': '3afcdfdb-cdc4-4e9e-bcfe-08d6adbb6dcc',\r\n  'ref_doc_id': '3afcdfdb-cdc4-4e9e-bcfe-08d6adbb6dcc'}].\r\n\r\nThis is key list: ['id']\r\n\r\nTherefore key id is not found and cant return its value for condition check to verify its same as one in filter. It returns False, which propagates backwards to False condition check and therefore empty id list and finally to empty node list.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8581/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8581/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8580",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8580/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8580/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8580/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8580",
        "id": 1968045789,
        "node_id": "PR_kwDOIWuq585eGm5_",
        "number": 8580,
        "title": "Add `tree-sitter-languages` for testing",
        "user": {
            "login": "david20571015",
            "id": 51911434,
            "node_id": "MDQ6VXNlcjUxOTExNDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david20571015",
            "html_url": "https://github.com/david20571015",
            "followers_url": "https://api.github.com/users/david20571015/followers",
            "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
            "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
            "organizations_url": "https://api.github.com/users/david20571015/orgs",
            "repos_url": "https://api.github.com/users/david20571015/repos",
            "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david20571015/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-30T10:46:00Z",
        "updated_at": "2023-10-30T23:57:06Z",
        "closed_at": "2023-10-30T17:40:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8580",
            "html_url": "https://github.com/run-llama/llama_index/pull/8580",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8580.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8580.patch",
            "merged_at": "2023-10-30T17:40:11Z"
        },
        "body": "# Description\r\n\r\nAdd `tree-sitter-languages` for testing\r\n\r\nFixes #8508\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8580/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8580/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8579",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8579/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8579/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8579/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8579",
        "id": 1968035805,
        "node_id": "PR_kwDOIWuq585eGkue",
        "number": 8579,
        "title": "fix: retrieve actual content of All the Triplets from KG",
        "user": {
            "login": "nandhakumarsoliton",
            "id": 112395616,
            "node_id": "U_kgDOBrMFYA",
            "avatar_url": "https://avatars.githubusercontent.com/u/112395616?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nandhakumarsoliton",
            "html_url": "https://github.com/nandhakumarsoliton",
            "followers_url": "https://api.github.com/users/nandhakumarsoliton/followers",
            "following_url": "https://api.github.com/users/nandhakumarsoliton/following{/other_user}",
            "gists_url": "https://api.github.com/users/nandhakumarsoliton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nandhakumarsoliton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nandhakumarsoliton/subscriptions",
            "organizations_url": "https://api.github.com/users/nandhakumarsoliton/orgs",
            "repos_url": "https://api.github.com/users/nandhakumarsoliton/repos",
            "events_url": "https://api.github.com/users/nandhakumarsoliton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nandhakumarsoliton/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-30T10:41:11Z",
        "updated_at": "2023-11-01T05:43:23Z",
        "closed_at": "2023-11-01T05:43:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8579",
            "html_url": "https://github.com/run-llama/llama_index/pull/8579",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8579.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8579.patch",
            "merged_at": "2023-11-01T05:43:23Z"
        },
        "body": "# Description\r\n\r\nWhen dealing with Knowledge Graph retrieval process, I found an issue which is **when `include_text=True` is passed, Only the direct triplet's actual content is fetched while the actual content of the triplets retrieved from the Depth First Search with configured depth is not retrieved.**\r\nSo made a common change and now when `include_text=True` is passed then the actual content of every triplet is retrieved from the Keyword:Actual Node ID table which is maintained. [Moved the include_text logic out of `if block` so that a single statement works for all keyword, embedding and hybrid retriever mode]\r\n\r\nHope this change also helps everyone :-)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\nTested with the sample Knowledge Graph that was build using Simple Knowledge Graph.\r\n\r\n# Suggested Checklist:\r\n\r\n- I have performed a self-review of my own code\r\n- I have commented my code, particularly in hard-to-understand areas\r\n- I have made corresponding changes to the documentation\r\n- My changes generate no new warnings\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8579/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8578",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8578/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8578/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8578/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8578",
        "id": 1968035692,
        "node_id": "I_kwDOIWuq5851Tdds",
        "number": 8578,
        "title": "[Bug]: RetryGuidelineQueryEngine asks for OPENAI_API_KEY while vertex AI Palm in the service context",
        "user": {
            "login": "arashkavi",
            "id": 147561206,
            "node_id": "U_kgDOCMua9g",
            "avatar_url": "https://avatars.githubusercontent.com/u/147561206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arashkavi",
            "html_url": "https://github.com/arashkavi",
            "followers_url": "https://api.github.com/users/arashkavi/followers",
            "following_url": "https://api.github.com/users/arashkavi/following{/other_user}",
            "gists_url": "https://api.github.com/users/arashkavi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arashkavi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arashkavi/subscriptions",
            "organizations_url": "https://api.github.com/users/arashkavi/orgs",
            "repos_url": "https://api.github.com/users/arashkavi/repos",
            "events_url": "https://api.github.com/users/arashkavi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arashkavi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-30T10:41:07Z",
        "updated_at": "2023-10-30T22:08:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nThe following error is thrown out when trying GuidelineEvaluator with VertexAI Palm as LLM abstraction.\r\n\r\n`Please set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\nAPI keys can be found or created at https://platform.openai.com/account/api-keys`\r\n\r\n\r\n\r\n### Version\r\n\r\n0.8.55\r\n\r\n### Steps to Reproduce\r\n\r\nI have the following RetrySourceQueryEngine chain that works perfectly with my defined service context below\r\n\r\n> `model = PaLM(api_key=palm_api_key, model_name=\"models/text-bison-001\")\r\n> llm_predictor = LLMPredictor(llm=model)\r\n> service_context = ServiceContext.from_defaults(embed_model=embed_model,  node_parser=parser, llm_predictor=llm_predictor)`\r\n> \r\n> `from llama_index.query_engine import RetrySourceQueryEngine\r\n> from llama_index.evaluation import RelevancyEvaluator\r\n> from llama_index.response_synthesizers import ResponseMode, get_response_synthesizer\r\n> \r\n> \r\n> response_synthesizer = get_response_synthesizer(response_mode=ResponseMode.REFINE)\r\n> query_engine = index.as_query_engine(response_synthesizer=response_synthesizer)\r\n> \r\n> \r\n> query_response_evaluator = RelevancyEvaluator()\r\n> retry_source_query_engine = RetrySourceQueryEngine(\r\n>     query_engine = query_engine, evaluator = query_response_evaluator, max_retries=5\r\n> )\r\n> retry_source_response = retry_source_query_engine.query(question)\r\n> print(retry_source_response)`\r\n> \r\n\r\nBut when switched to GuidelineEvaluator as below:\r\n\r\n> `from llama_index.evaluation.guideline import (\r\n>     GuidelineEvaluator,\r\n>     DEFAULT_GUIDELINES,\r\n> )\r\n> from llama_index.query_engine.retry_query_engine import RetryGuidelineQueryEngine\r\n> \r\n> \r\n> guideline_eval = GuidelineEvaluator(\r\n>     guidelines=DEFAULT_GUIDELINES\r\n>     + \"\\nThe response should not be unethical, illegal, offensive, endorse racism or conspiracy theories.\\n\"\r\n> )\r\n> \r\n> retry_source_query_engine = RetryGuidelineQueryEngine(\r\n>     query_engine = query_engine, guideline_evaluator = guideline_eval\r\n> )\r\n> retry_source_response = retry_source_query_engine.query(question)\r\n> print(retry_source_response)`\r\n\r\nFor which I get the following \r\n\r\n> `ValueError                                Traceback (most recent call last)\r\n> File [/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/llama_index/llms/utils.py:20](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/llama_index/llms/utils.py:20), in resolve_llm(llm)\r\n>      19 try:\r\n> ---> 20     llm = OpenAI()\r\n>      21 except ValueError as e:\r\n> \r\n> File [/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/llama_index/llms/openai.py:92](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/llama_index/llms/openai.py:92), in OpenAI.__init__(self, model, temperature, max_tokens, additional_kwargs, max_retries, api_key, api_type, api_base, api_version, callback_manager, **kwargs)\r\n>      90 additional_kwargs = additional_kwargs or {}\r\n> ---> 92 api_key, api_type, api_base, api_version = resolve_openai_credentials(\r\n>      93     api_key=api_key,\r\n>      94     api_type=api_type,\r\n>      95     api_base=api_base,\r\n>      96     api_version=api_version,\r\n>      97 )\r\n>      99 super().__init__(\r\n>     100     model=model,\r\n>     101     temperature=temperature,\r\n>    (...)\r\n>     110     **kwargs,\r\n>     111 )\r\n> \r\n> File [/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/llama_index/llms/openai_utils.py:297](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/llama_index/llms/openai_utils.py:297), in resolve_openai_credentials(api_key, api_type, api_base, api_version)\r\n>     296 if not api_key:\r\n> --> 297     raise ValueError(MISSING_API_KEY_ERROR_MESSAGE)\r\n> ...\r\n> Please set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\n> API keys can be found or created at https://platform.openai.com/account/api-keys\r\n> \r\n> To disable the LLM entirely, set llm=None.\r\n> ******`\r\n> \r\n> ### Relevant Logs/Tracbacks\r\n> \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8578/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8577",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8577/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8577/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8577/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8577",
        "id": 1968034053,
        "node_id": "I_kwDOIWuq5851TdEF",
        "number": 8577,
        "title": "[Bug]: RetryGuidelineQueryEngine asks for OPENAI_API_KEY while vertex AI in the service context",
        "user": {
            "login": "arashkavi",
            "id": 147561206,
            "node_id": "U_kgDOCMua9g",
            "avatar_url": "https://avatars.githubusercontent.com/u/147561206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arashkavi",
            "html_url": "https://github.com/arashkavi",
            "followers_url": "https://api.github.com/users/arashkavi/followers",
            "following_url": "https://api.github.com/users/arashkavi/following{/other_user}",
            "gists_url": "https://api.github.com/users/arashkavi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arashkavi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arashkavi/subscriptions",
            "organizations_url": "https://api.github.com/users/arashkavi/orgs",
            "repos_url": "https://api.github.com/users/arashkavi/repos",
            "events_url": "https://api.github.com/users/arashkavi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arashkavi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-30T10:40:15Z",
        "updated_at": "2023-11-06T02:48:29Z",
        "closed_at": "2023-11-06T02:48:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nReceiving \r\n\r\n`Please set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\nAPI keys can be found or created at https://platform.openai.com/account/api-keys`\r\n\r\nwhen trying GuidelineEvaluator with VertexAI LLM model.\n\n### Version\n\n0.8.55\n\n### Steps to Reproduce\n\nI have the following RetrySourceQueryEngine chain that works perfectly with my defined service context below\r\n\r\n`model = PaLM(api_key=palm_api_key, model_name=\"models/text-bison-001\")\r\n\r\nllm_predictor = LLMPredictor(llm=model)\r\nservice_context = ServiceContext.from_defaults(embed_model=embed_model,  node_parser=parser, llm_predictor=llm_predictor)`\r\n\r\n`from llama_index.query_engine import RetrySourceQueryEngine\r\nfrom llama_index.evaluation import RelevancyEvaluator\r\nfrom llama_index.response_synthesizers import ResponseMode, get_response_synthesizer\r\n\r\n\r\nresponse_synthesizer = get_response_synthesizer(response_mode=ResponseMode.REFINE)\r\nquery_engine = index.as_query_engine(response_synthesizer=response_synthesizer)\r\n\r\n\r\nquery_response_evaluator = RelevancyEvaluator()\r\nretry_source_query_engine = RetrySourceQueryEngine(\r\n    query_engine = query_engine, evaluator = query_response_evaluator, max_retries=5\r\n)\r\nretry_source_response = retry_source_query_engine.query(question)\r\nprint(retry_source_response)`\r\n\r\nBut when switched to GuidelineEvaluator as below:\r\n\r\n`\r\nfrom llama_index.evaluation.guideline import (\r\n    GuidelineEvaluator,\r\n    DEFAULT_GUIDELINES,\r\n)\r\nfrom llama_index.query_engine.retry_query_engine import RetryGuidelineQueryEngine\r\n\r\n# Guideline eval\r\nguideline_eval = GuidelineEvaluator(\r\n    guidelines=DEFAULT_GUIDELINES\r\n    + \"\\nThe response should not be unethical, illegal, offensive, endorse racism or conspiracy theories.\\n\"\r\n)\r\n\r\nretry_source_query_engine = RetryGuidelineQueryEngine(\r\n    query_engine = query_engine, guideline_evaluator = guideline_eval\r\n)\r\nretry_source_response = retry_source_query_engine.query(question)\r\nprint(retry_source_response)`\r\n\r\nFor which I get the following \r\n\r\n`ValueError                                Traceback (most recent call last)\r\nFile [/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/llama_index/llms/utils.py:20](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/llama_index/llms/utils.py:20), in resolve_llm(llm)\r\n     19 try:\r\n---> 20     llm = OpenAI()\r\n     21 except ValueError as e:\r\n\r\nFile [/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/llama_index/llms/openai.py:92](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/llama_index/llms/openai.py:92), in OpenAI.__init__(self, model, temperature, max_tokens, additional_kwargs, max_retries, api_key, api_type, api_base, api_version, callback_manager, **kwargs)\r\n     90 additional_kwargs = additional_kwargs or {}\r\n---> 92 api_key, api_type, api_base, api_version = resolve_openai_credentials(\r\n     93     api_key=api_key,\r\n     94     api_type=api_type,\r\n     95     api_base=api_base,\r\n     96     api_version=api_version,\r\n     97 )\r\n     99 super().__init__(\r\n    100     model=model,\r\n    101     temperature=temperature,\r\n   (...)\r\n    110     **kwargs,\r\n    111 )\r\n\r\nFile [/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/llama_index/llms/openai_utils.py:297](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/llama_index/llms/openai_utils.py:297), in resolve_openai_credentials(api_key, api_type, api_base, api_version)\r\n    296 if not api_key:\r\n--> 297     raise ValueError(MISSING_API_KEY_ERROR_MESSAGE)\r\n...\r\nPlease set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\nAPI keys can be found or created at https://platform.openai.com/account/api-keys\r\n\r\nTo disable the LLM entirely, set llm=None.\r\n******`\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8577/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8577/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8576",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8576/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8576/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8576/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8576",
        "id": 1967987652,
        "node_id": "I_kwDOIWuq5851TRvE",
        "number": 8576,
        "title": "[Bug]: OpenInferenceCallbackHandler error",
        "user": {
            "login": "Inkorak",
            "id": 52286717,
            "node_id": "MDQ6VXNlcjUyMjg2NzE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/52286717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Inkorak",
            "html_url": "https://github.com/Inkorak",
            "followers_url": "https://api.github.com/users/Inkorak/followers",
            "following_url": "https://api.github.com/users/Inkorak/following{/other_user}",
            "gists_url": "https://api.github.com/users/Inkorak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Inkorak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Inkorak/subscriptions",
            "organizations_url": "https://api.github.com/users/Inkorak/orgs",
            "repos_url": "https://api.github.com/users/Inkorak/repos",
            "events_url": "https://api.github.com/users/Inkorak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Inkorak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-30T10:15:14Z",
        "updated_at": "2023-11-16T21:09:55Z",
        "closed_at": "2023-11-16T21:09:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nError when using OpenInferenceCallbackHandler. 'str' object has no attribute 'node'\r\n\r\n### Version\r\n\r\n0.8.55\r\n\r\n### Steps to Reproduce\r\n\r\nThe problem is when you use a OpenInferenceCallbackHandler with a recursive retriever that uses a router retrievers.\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 541, in _run_script\r\n    exec(code, module.__dict__)\r\n  File \"/home/user/PycharmProjects/QA_llm/prototype_v2/data_agent.py\", line 138, in <module>\r\n    response = data_agent.stream_chat(prompt)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/callbacks/utils.py\", line 39, in wrapper\r\n    return func(self, *args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/agent/react/base.py\", line 451, in stream_chat\r\n    reasoning_steps, _ = self._process_actions(\r\n                         ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/agent/react/base.py\", line 198, in _process_actions\r\n    tool_output = tool.call(**reasoning_step.action_input)\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/PycharmProjects/QA_llm/prototype_v2/custom_query_engine.py\", line 19, in call\r\n    response = self._query_engine.query(query_str)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/indices/query/base.py\", line 32, in query\r\n    return self._query(str_or_query_bundle)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 176, in _query\r\n    nodes = self.retrieve(query_bundle)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 128, in retrieve\r\n    nodes = self._retriever.retrieve(query_bundle)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/indices/base_retriever.py\", line 34, in retrieve\r\n    return self._retrieve(str_or_query_bundle)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/retrievers/recursive_retriever.py\", line 185, in _retrieve\r\n    retrieved_nodes, _ = self._retrieve_rec(query_bundle, query_id=None)\r\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/retrievers/recursive_retriever.py\", line 161, in _retrieve_rec\r\n    nodes_to_add, additional_nodes = self._query_retrieved_nodes(\r\n                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/retrievers/recursive_retriever.py\", line 99, in _query_retrieved_nodes\r\n    cur_retrieved_nodes, cur_additional_nodes = self._retrieve_rec(\r\n                                                ^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/retrievers/recursive_retriever.py\", line 158, in _retrieve_rec\r\n    nodes = obj.retrieve(query_bundle)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/indices/base_retriever.py\", line 34, in retrieve\r\n    return self._retrieve(str_or_query_bundle)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/retrievers/router_retriever.py\", line 96, in _retrieve\r\n    query_event.on_end(payload={EventPayload.NODES: retrieved_results})\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/callbacks/base.py\", line 258, in on_end\r\n    self._callback_manager.on_event_end(\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/callbacks/base.py\", line 116, in on_event_end\r\n    handler.on_event_end(event_type, payload, event_id=event_id, **kwargs)\r\n  File \"/home/user/anaconda3/envs/transformers/lib/python3.11/site-packages/llama_index/callbacks/open_inference_callback.py\", line 210, in on_event_end\r\n    node = node_with_score.node\r\n           ^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: 'str' object has no attribute 'node'\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8576/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8575",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8575/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8575/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8575/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8575",
        "id": 1967926517,
        "node_id": "PR_kwDOIWuq585eGM-p",
        "number": 8575,
        "title": "fix: Return the Nodes found by Keywords when No relationship is found\u2026",
        "user": {
            "login": "nandhakumarsoliton",
            "id": 112395616,
            "node_id": "U_kgDOBrMFYA",
            "avatar_url": "https://avatars.githubusercontent.com/u/112395616?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nandhakumarsoliton",
            "html_url": "https://github.com/nandhakumarsoliton",
            "followers_url": "https://api.github.com/users/nandhakumarsoliton/followers",
            "following_url": "https://api.github.com/users/nandhakumarsoliton/following{/other_user}",
            "gists_url": "https://api.github.com/users/nandhakumarsoliton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nandhakumarsoliton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nandhakumarsoliton/subscriptions",
            "organizations_url": "https://api.github.com/users/nandhakumarsoliton/orgs",
            "repos_url": "https://api.github.com/users/nandhakumarsoliton/repos",
            "events_url": "https://api.github.com/users/nandhakumarsoliton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nandhakumarsoliton/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-30T09:42:58Z",
        "updated_at": "2023-11-01T05:40:08Z",
        "closed_at": "2023-11-01T05:40:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8575",
            "html_url": "https://github.com/run-llama/llama_index/pull/8575",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8575.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8575.patch",
            "merged_at": "2023-11-01T05:40:08Z"
        },
        "body": "\u2026 by embeddings in Hybrid retriever_mode\r\n\r\n# Description\r\n\r\nI was using the KnowledgeGraphIndex in recent days. With `hybrid` retriever_mode in index.as_query_engine() when \"No Relationship is found\" by `embeddings search`, the nodes found by the `keyword` search are not returned.\r\nThis was commented but the code was not in such way.\r\nSo just added an else case and **returned the nodes found by Keyword search** when no nodes are found in Embedding search.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n-Tested the code with the custom Knowledge Graph that I have created.\r\n\r\n# Steps to reproduce the issue\r\n- Have a custom Knowledge Graph and create an index either with SimpleGraphStore or NebulaGraphStore\r\n- Configure the retriever_mode as `hybrid`\r\n- Now ask a query which fetched the relevant triplet with keyword search and not with embedding search\r\n- \"No Relationship found\" will be the response but the Nodes identified from the \"Keyword\" search is not returned.\r\n- It is already commented to return the Nodes found by Keywords but not returned\r\n- So I have just added an else case and returned accordingly\r\n\r\nHope this saved your time :-)\r\n\r\n# Suggested Checklist:\r\n\r\n- I have performed a self-review of my own code\r\n- I have commented my code, particularly in hard-to-understand areas\r\n- I have made corresponding changes to the documentation\r\n- My changes generate no new warnings\r\n- I have added tests that prove my fix is effective or that my feature works\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8575/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8575/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8574",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8574/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8574/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8574/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8574",
        "id": 1967676581,
        "node_id": "PR_kwDOIWuq585eFWXo",
        "number": 8574,
        "title": "Check for unused import in ruff ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-30T07:24:50Z",
        "updated_at": "2023-10-30T18:05:24Z",
        "closed_at": "2023-10-30T18:05:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8574",
            "html_url": "https://github.com/run-llama/llama_index/pull/8574",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8574.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8574.patch",
            "merged_at": "2023-10-30T18:05:23Z"
        },
        "body": "# Description\r\n\r\nCheck for unused import in ruff. And fix existing files. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8574/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8574/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8573",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8573/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8573/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8573/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8573",
        "id": 1967666775,
        "node_id": "I_kwDOIWuq5851SDZX",
        "number": 8573,
        "title": "[Bug]: Need OpenAI API Key always?!",
        "user": {
            "login": "AbhiPawar5",
            "id": 45484556,
            "node_id": "MDQ6VXNlcjQ1NDg0NTU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/45484556?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AbhiPawar5",
            "html_url": "https://github.com/AbhiPawar5",
            "followers_url": "https://api.github.com/users/AbhiPawar5/followers",
            "following_url": "https://api.github.com/users/AbhiPawar5/following{/other_user}",
            "gists_url": "https://api.github.com/users/AbhiPawar5/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AbhiPawar5/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AbhiPawar5/subscriptions",
            "organizations_url": "https://api.github.com/users/AbhiPawar5/orgs",
            "repos_url": "https://api.github.com/users/AbhiPawar5/repos",
            "events_url": "https://api.github.com/users/AbhiPawar5/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AbhiPawar5/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-10-30T07:17:43Z",
        "updated_at": "2023-11-06T02:45:52Z",
        "closed_at": "2023-11-06T02:45:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nNutshell : Llama index needs to use OpenAI API Key even when LLM is disabled and I want to simply do semantic search.\r\n\r\nDescription : When I try creating VectorStoreIndex from Postgres, it says I need OpenAI API Key always!\n\n### Version\n\n0.8.55\n\n### Steps to Reproduce\n\nYou can follow the steps from here : https://gpt-index.readthedocs.io/en/latest/examples/vector_stores/postgres.html#querying-existing-index\r\n\r\nExcept we disable the LLM as : \r\n```\r\nfrom llama_index import ServiceContext\r\nservice_context = ServiceContext.from_defaults(llm=None)\r\n```\r\n\r\nAnd then create index as follows:\r\n```\r\nindex = VectorStoreIndex.from_vector_store(vector_store=vector_store)\r\nquery_engine = index.as_query_engine()\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\nValueError                                Traceback (most recent call last)\r\nFile ~/miniconda3/envs/pgvect/lib/python3.9/site-packages/llama_index/llms/utils.py:20, in resolve_llm(llm)\r\n     19 try:\r\n---> 20     llm = OpenAI()\r\n     21 except ValueError as e:\r\n\r\nFile ~/miniconda3/envs/pgvect/lib/python3.9/site-packages/llama_index/llms/openai.py:92, in OpenAI.__init__(self, model, temperature, max_tokens, additional_kwargs, max_retries, api_key, api_type, api_base, api_version, callback_manager, **kwargs)\r\n     90 additional_kwargs = additional_kwargs or {}\r\n---> 92 api_key, api_type, api_base, api_version = resolve_openai_credentials(\r\n     93     api_key=api_key,\r\n     94     api_type=api_type,\r\n     95     api_base=api_base,\r\n     96     api_version=api_version,\r\n     97 )\r\n     99 super().__init__(\r\n    100     model=model,\r\n    101     temperature=temperature,\r\n   (...)\r\n    110     **kwargs,\r\n    111 )\r\n\r\nFile ~/miniconda3/envs/pgvect/lib/python3.9/site-packages/llama_index/llms/openai_utils.py:297, in resolve_openai_credentials(api_key, api_type, api_base, api_version)\r\n    296 if not api_key:\r\n--> 297     raise ValueError(MISSING_API_KEY_ERROR_MESSAGE)\r\n    299 return api_key, api_type, api_base, api_version\r\n\r\nValueError: No API key found for OpenAI.\r\nPlease set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\nAPI keys can be found or created at https://platform.openai.com/account/api-keys\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\nCell In[9], line 1\r\n----> 1 index = VectorStoreIndex.from_vector_store(vector_store=vector_store)\r\n      2 #query_engine = index.as_query_engine(response_model='text')\r\n\r\nFile ~/miniconda3/envs/pgvect/lib/python3.9/site-packages/llama_index/indices/vector_store/base.py:71, in VectorStoreIndex.from_vector_store(cls, vector_store, service_context, **kwargs)\r\n     66     raise ValueError(\r\n     67         \"Cannot initialize from a vector store that does not store text.\"\r\n     68     )\r\n     70 storage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n---> 71 return cls(\r\n     72     nodes=[], service_context=service_context, storage_context=storage_context\r\n     73 )\r\n\r\nFile ~/miniconda3/envs/pgvect/lib/python3.9/site-packages/llama_index/indices/vector_store/base.py:49, in VectorStoreIndex.__init__(self, nodes, index_struct, service_context, storage_context, use_async, store_nodes_override, show_progress, **kwargs)\r\n     47 self._use_async = use_async\r\n     48 self._store_nodes_override = store_nodes_override\r\n---> 49 super().__init__(\r\n     50     nodes=nodes,\r\n     51     index_struct=index_struct,\r\n     52     service_context=service_context,\r\n     53     storage_context=storage_context,\r\n     54     show_progress=show_progress,\r\n     55     **kwargs,\r\n     56 )\r\n\r\nFile ~/miniconda3/envs/pgvect/lib/python3.9/site-packages/llama_index/indices/base.py:61, in BaseIndex.__init__(self, nodes, index_struct, storage_context, service_context, show_progress, **kwargs)\r\n     58     else:\r\n     59         raise ValueError(\"nodes must be a list of Node objects.\")\r\n---> 61 self._service_context = service_context or ServiceContext.from_defaults()\r\n     62 self._storage_context = storage_context or StorageContext.from_defaults()\r\n     63 self._docstore = self._storage_context.docstore\r\n\r\nFile ~/miniconda3/envs/pgvect/lib/python3.9/site-packages/llama_index/indices/service_context.py:157, in ServiceContext.from_defaults(cls, llm_predictor, llm, prompt_helper, embed_model, node_parser, llama_logger, callback_manager, system_prompt, query_wrapper_prompt, pydantic_program_mode, chunk_size, chunk_overlap, context_window, num_output, chunk_size_limit)\r\n    155         raise ValueError(\"Cannot specify both llm and llm_predictor\")\r\n    156     llm = resolve_llm(llm)\r\n--> 157 llm_predictor = llm_predictor or LLMPredictor(\r\n    158     llm=llm, pydantic_program_mode=pydantic_program_mode\r\n    159 )\r\n    160 if isinstance(llm_predictor, LLMPredictor):\r\n    161     llm_predictor.llm.callback_manager = callback_manager\r\n\r\nFile ~/miniconda3/envs/pgvect/lib/python3.9/site-packages/llama_index/llm_predictor/base.py:92, in LLMPredictor.__init__(self, llm, callback_manager, system_prompt, query_wrapper_prompt, pydantic_program_mode)\r\n     83 def __init__(\r\n     84     self,\r\n     85     llm: Optional[LLMType] = \"default\",\r\n   (...)\r\n     89     pydantic_program_mode: PydanticProgramMode = PydanticProgramMode.DEFAULT,\r\n     90 ) -> None:\r\n     91     \"\"\"Initialize params.\"\"\"\r\n---> 92     self._llm = resolve_llm(llm)\r\n     94     if callback_manager:\r\n     95         self._llm.callback_manager = callback_manager\r\n\r\nFile ~/miniconda3/envs/pgvect/lib/python3.9/site-packages/llama_index/llms/utils.py:22, in resolve_llm(llm)\r\n     20         llm = OpenAI()\r\n     21     except ValueError as e:\r\n---> 22         raise ValueError(\r\n     23             \"******\\n\"\r\n     24             \"Could not load OpenAI model. \"\r\n     25             \"If you intended to use OpenAI, please check your OPENAI_API_KEY.\\n\"\r\n...\r\nPlease set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\nAPI keys can be found or created at https://platform.openai.com/account/api-keys\r\n\r\nTo disable the LLM entirely, set llm=None.\r\n******\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8573/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8573/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8572",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8572/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8572/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8572/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8572",
        "id": 1967538912,
        "node_id": "I_kwDOIWuq5851RkLg",
        "number": 8572,
        "title": "[Question]: Semantic Search with Postgres without LLM",
        "user": {
            "login": "AbhiPawar5",
            "id": 45484556,
            "node_id": "MDQ6VXNlcjQ1NDg0NTU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/45484556?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AbhiPawar5",
            "html_url": "https://github.com/AbhiPawar5",
            "followers_url": "https://api.github.com/users/AbhiPawar5/followers",
            "following_url": "https://api.github.com/users/AbhiPawar5/following{/other_user}",
            "gists_url": "https://api.github.com/users/AbhiPawar5/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AbhiPawar5/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AbhiPawar5/subscriptions",
            "organizations_url": "https://api.github.com/users/AbhiPawar5/orgs",
            "repos_url": "https://api.github.com/users/AbhiPawar5/repos",
            "events_url": "https://api.github.com/users/AbhiPawar5/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AbhiPawar5/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-30T05:26:17Z",
        "updated_at": "2023-10-30T07:07:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi team, amazing work integrating various tech stacks in llama index!\r\n\r\nMy question is : How can I do Semantic Search with existing Postgres DB as backend without any LLM? When I try creating index, it says I need OpenAI API Key always!\r\n```\r\nindex = VectorStoreIndex.from_vector_store(vector_store=vector_store)\r\n```\r\n\r\nThe embeddings are written to the Postgres DB table already, I just need Llama Index to do Semantic Search for me. Thanks",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8572/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8572/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8569",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8569/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8569/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8569/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8569",
        "id": 1967166044,
        "node_id": "I_kwDOIWuq5851QJJc",
        "number": 8569,
        "title": "[Question]: How to retrieve full content of document in case it is chunked into multiple nodes.",
        "user": {
            "login": "amitguptadumka",
            "id": 39477047,
            "node_id": "MDQ6VXNlcjM5NDc3MDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/39477047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitguptadumka",
            "html_url": "https://github.com/amitguptadumka",
            "followers_url": "https://api.github.com/users/amitguptadumka/followers",
            "following_url": "https://api.github.com/users/amitguptadumka/following{/other_user}",
            "gists_url": "https://api.github.com/users/amitguptadumka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amitguptadumka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amitguptadumka/subscriptions",
            "organizations_url": "https://api.github.com/users/amitguptadumka/orgs",
            "repos_url": "https://api.github.com/users/amitguptadumka/repos",
            "events_url": "https://api.github.com/users/amitguptadumka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amitguptadumka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-10-29T21:44:07Z",
        "updated_at": "2023-11-02T08:30:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nSuppose my document content exceeds the 512 chunk length and it is divided into 3 sub chunks. Now while retrieval if one particular leaf chunk is retrieved in top k for a input query but i want to get the entire content of the actual parent/root node (sub chunk1+subchunk2 +subchunk3). How to get that?\r\nThe reason is i dont want to break my passage and pass as input rather i want to have entire actual document content as input even if part of it is retrieved as top k. Kindly help.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8569/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8569/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8566",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8566/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8566/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8566/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8566",
        "id": 1967156913,
        "node_id": "I_kwDOIWuq5851QG6x",
        "number": 8566,
        "title": "[Question]: 'VectorStoreIndex' object has no attribute 'save'",
        "user": {
            "login": "freecoffee13",
            "id": 112905496,
            "node_id": "U_kgDOBrrNGA",
            "avatar_url": "https://avatars.githubusercontent.com/u/112905496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freecoffee13",
            "html_url": "https://github.com/freecoffee13",
            "followers_url": "https://api.github.com/users/freecoffee13/followers",
            "following_url": "https://api.github.com/users/freecoffee13/following{/other_user}",
            "gists_url": "https://api.github.com/users/freecoffee13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freecoffee13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freecoffee13/subscriptions",
            "organizations_url": "https://api.github.com/users/freecoffee13/orgs",
            "repos_url": "https://api.github.com/users/freecoffee13/repos",
            "events_url": "https://api.github.com/users/freecoffee13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freecoffee13/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-29T21:14:22Z",
        "updated_at": "2023-10-29T21:25:16Z",
        "closed_at": "2023-10-29T21:25:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\ni'm coding a chatbot with chat gpt api and i'm stucked in this error:\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\nCell In[11], line 22\r\n     19     index.save('index.json')\r\n     21     return index\r\n---> 22 a= construct_index(\"/home/ber/Documentos/docs\")\r\n\r\nCell In[11], line 19, in construct_index(directory_path)\r\n     15 documentos = SimpleDirectoryReader(\"/home/ber/Documentos/docs\").load_data()\r\n     17 index = VectorStoreIndex(nodes=documentos, llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\n---> 19 index.save('index.json')\r\n     21 return index\r\n\r\nAttributeError: 'VectorStoreIndex' object has no attribute 'save'\r\n\r\n\r\nhere is the code\r\n\r\nimport os\r\nimport gradio as gr\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader, ListIndex, LLMPredictor, PromptHelper\r\nfrom langchain.llms import OpenAI\r\nimport openai\r\n\r\n#openai.api_key = 'xxxx'\r\nos.environ[\"OPENAI_API_KEY\"] = \"xxxx\"\r\n#os.environ[\"xxxx\"] = ''\r\n\r\ndef construct_index(directory_path):\r\n    max_input_size = 4096\r\n    num_outputs = 512\r\n    max_chunk_overlap = 0.9\r\n    limite_de_tamanho_do_chunk = 600\r\n\r\n    prompt_helper = PromptHelper(max_input_size, num_outputs, max_chunk_overlap, \r\n    chunk_size_limit=limite_de_tamanho_do_chunk)\r\n\r\n    llm_predictor = LLMPredictor(llm=OpenAI(temperature=0.7, model_name=\"gpt-3.5-turbo\", \r\n    max_tokens=num_outputs))\r\n\r\n    documentos = SimpleDirectoryReader(\"/home/ber/Documentos/docs\").load_data()\r\n\r\n    index = VectorStoreIndex(nodes=documentos, llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\n\r\n    index.save('index.json')\r\n\r\n    return index\r\n\r\ndef chatbot(input_text):\r\n    index = VectorStoreIndex(nodes=SimpleDirectoryReader(\"index.json\").load_data())\r\n    response = index.query(input_text, response_mode=\"compact\")\r\n    return response.response\r\n\r\n    if __name__ == \"__main__\":\r\n        iface = gr.Interface(fn=chatbot,\r\n                             inputs=gr.Textbox(lines=7, label=\"Introduz o teu texto\"),\r\n                             outputs=gr.Textbox(),\r\n                             title=\"Vestibular da Unicamp 2024 ChatBot\")\r\n        iface.launch(share=True)\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8566/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8566/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8565",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8565/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8565/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8565/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8565",
        "id": 1967152343,
        "node_id": "PR_kwDOIWuq585eDkQs",
        "number": 8565,
        "title": "Make embedding name consistent",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-29T21:00:25Z",
        "updated_at": "2023-11-01T05:29:15Z",
        "closed_at": "2023-10-29T21:10:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8565",
            "html_url": "https://github.com/run-llama/llama_index/pull/8565",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8565.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8565.patch",
            "merged_at": "2023-10-29T21:10:31Z"
        },
        "body": "# Description\r\n\r\nMake embedding name consistent, keep old names as type alias for backward compatibility. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8565/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8565/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8560",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8560/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8560/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8560/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8560",
        "id": 1967075769,
        "node_id": "PR_kwDOIWuq585eDVFR",
        "number": 8560,
        "title": "[version] bump version to 0.8.55",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-29T17:13:59Z",
        "updated_at": "2023-10-29T18:00:04Z",
        "closed_at": "2023-10-29T18:00:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8560",
            "html_url": "https://github.com/run-llama/llama_index/pull/8560",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8560.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8560.patch",
            "merged_at": "2023-10-29T18:00:03Z"
        },
        "body": "should've cut this earlier mb ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8560/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8560/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8559",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8559/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8559/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8559/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8559",
        "id": 1967018318,
        "node_id": "PR_kwDOIWuq585eDJpk",
        "number": 8559,
        "title": "fix typo (former->latter)",
        "user": {
            "login": "hemidactylus",
            "id": 14221764,
            "node_id": "MDQ6VXNlcjE0MjIxNzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/14221764?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemidactylus",
            "html_url": "https://github.com/hemidactylus",
            "followers_url": "https://api.github.com/users/hemidactylus/followers",
            "following_url": "https://api.github.com/users/hemidactylus/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemidactylus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemidactylus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemidactylus/subscriptions",
            "organizations_url": "https://api.github.com/users/hemidactylus/orgs",
            "repos_url": "https://api.github.com/users/hemidactylus/repos",
            "events_url": "https://api.github.com/users/hemidactylus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemidactylus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-29T14:42:08Z",
        "updated_at": "2023-11-08T23:14:11Z",
        "closed_at": "2023-10-29T15:21:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8559",
            "html_url": "https://github.com/run-llama/llama_index/pull/8559",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8559.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8559.patch",
            "merged_at": "2023-10-29T15:21:31Z"
        },
        "body": "Admittedly a very small fix. Apologies for my distraction in drafting the text earlier :(\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8559/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8559/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8558",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8558/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8558/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8558/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8558",
        "id": 1967000300,
        "node_id": "PR_kwDOIWuq585eDGIM",
        "number": 8558,
        "title": "Added example to persist graph",
        "user": {
            "login": "sumitsahoo",
            "id": 6181114,
            "node_id": "MDQ6VXNlcjYxODExMTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6181114?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sumitsahoo",
            "html_url": "https://github.com/sumitsahoo",
            "followers_url": "https://api.github.com/users/sumitsahoo/followers",
            "following_url": "https://api.github.com/users/sumitsahoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/sumitsahoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sumitsahoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sumitsahoo/subscriptions",
            "organizations_url": "https://api.github.com/users/sumitsahoo/orgs",
            "repos_url": "https://api.github.com/users/sumitsahoo/repos",
            "events_url": "https://api.github.com/users/sumitsahoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sumitsahoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-29T13:52:05Z",
        "updated_at": "2023-10-30T03:31:26Z",
        "closed_at": "2023-10-30T03:31:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8558",
            "html_url": "https://github.com/run-llama/llama_index/pull/8558",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8558.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8558.patch",
            "merged_at": "2023-10-30T03:31:22Z"
        },
        "body": "# Description\r\n\r\nAdded example to store `Composable Graph`. \r\n\r\nFixes # (issue)\r\nNA\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I tested the code\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8558/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8558/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8557",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8557/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8557/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8557/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8557",
        "id": 1966928589,
        "node_id": "I_kwDOIWuq5851PPLN",
        "number": 8557,
        "title": "Agent get the right informations, but The ASSISTENT answering to own FUNCTION got output [Bug]: ",
        "user": {
            "login": "ElioErrico",
            "id": 143315119,
            "node_id": "U_kgDOCIrQrw",
            "avatar_url": "https://avatars.githubusercontent.com/u/143315119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ElioErrico",
            "html_url": "https://github.com/ElioErrico",
            "followers_url": "https://api.github.com/users/ElioErrico/followers",
            "following_url": "https://api.github.com/users/ElioErrico/following{/other_user}",
            "gists_url": "https://api.github.com/users/ElioErrico/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ElioErrico/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ElioErrico/subscriptions",
            "organizations_url": "https://api.github.com/users/ElioErrico/orgs",
            "repos_url": "https://api.github.com/users/ElioErrico/repos",
            "events_url": "https://api.github.com/users/ElioErrico/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ElioErrico/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-29T10:17:46Z",
        "updated_at": "2023-10-30T10:20:11Z",
        "closed_at": "2023-10-30T10:19:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nHello,\r\n\r\nthis is my simple question, hope you can help me.\r\nI think is a bug but meaby I have to consider something else, let me know.\r\n\r\nWhy when I chat with and agent (with vector tool query engine and another Function Tool) like:\r\n\r\n```\r\nresponse=agent.chat(\"hello I'm Elio\")\r\nprint(response)\r\n```\r\n\r\n`hello I can I help you?`\r\n\r\nthan if I make the real question\r\n\r\n```\r\nresponse=agent.chat(\"how can I solve error 2?\")\r\nprint(response)\r\n```\r\n\r\n**_The agent is able to get the right informations, but when i print the response I get this response (that is not the correct output)._**\r\n \r\n`I hope these instructions have been helpful in resolving error 2. If you need further clarification or have other questions, I'd be happy to assist!`\r\n\r\n**_The ASSISTENT is answering to its own FUNCTION got output._**\r\n\r\nse below with debug=True:\r\n```\r\n=== Calling Function ===\r\nCalling function: vector_tool with args: {\r\n\"input\": \"how do I resolve error 2?\"\r\n}\r\nGot output: To resolve error 2, you can follow the procedure below:\r\n\r\nCheck if the unit's filters have been replaced more than a month ago. If so, advise the user to replace the filters.\r\nTurn off and restart the heat pump by disconnecting the unit from the electrical panel. Check if error 2 reoccurs upon the next restart.\r\nIf the error persists, it is advisable to check the VMC's operation by monitoring the 4 temperatures (outdoor, supplied, extracted, expelled) and adjusting the intake and extraction fan speeds to correctly calibrate the machine.\r\nAfter performing these operations, the following scenarios might arise:\r\na) If the temperatures are within the limits and error 2 doesn't reappear, it means the heat pump is working correctly.\r\nb) If the changes made to the fans have not affected the temperature behavior and the error continues, a specialized technician's visit is required.\r\nc) If, despite the temperatures being within the limits, error 2 frequently recurs, the following considerations can be made:\r\nIf error 2 only occurs during the coldest or hottest moments of the season, it might be interpreted as protection for the heat pump.\r\nIf error 2 continues to occur frequently, a specialized technician's visit is necessary.\r\n========================\r\nI hope these instructions have been helpful in resolving error 2. If you need further clarification or have other questions, I'd be happy to assist!\r\n```\r\n\r\nThan I noticed that if I don't start with `hello i'm Elio` and I ask for error 2 I obtain the correct answer, see below:\r\n\r\n```\r\n=== Calling Function ===\r\nCalling function: vector_tool with args: {\r\n  \"input\": \"how to solve error 2\"\r\n}\r\nGot output: To solve \"Error 2\" on the SMART series VMC, you can follow the following procedure:\r\n1) First, determine if the filters have been replaced recently. If the filters were replaced more than a month ago, advise the user to replace the filters.\r\n2) Turn off and restart the heat pump by disconnecting it from the electrical panel. Check if the Error 2 reoccurs during the next restart.\r\n3) If the error reoccurs, check the operation of the VMC by monitoring the 4 temperatures (new, supply, extract, exhaust) and adjust the fan speeds to calibrate the machine correctly.\r\n4) After performing the diagnostic procedure, the following scenarios may occur:\r\n   a) If the temperatures are within the temperature management tool limits and the Error 2 does not reoccur, then the heat pump is functioning correctly.\r\n   b) If the changes made to the fans do not affect the behavior of the 4 temperatures and the error continues to occur, it is necessary to call a specialized technician.\r\n   c) If the temperatures are within the limits but the Error 2 reoccurs, consider the following:\r\n      - If Error 2 is sporadic and only occurs during the coldest or hottest moments of the season, it should be interpreted as a protection mechanism of the heat pump.\r\n      - If Error 2 continues to occur frequently, it is necessary to call a specialized technician.\r\n========================\r\nTo solve \"Error 2\" on the SMART series VMC, you can follow these steps:\r\n\r\n1. Check if the filters have been replaced recently. If not, replace the filters.\r\n2. Turn off the heat pump by disconnecting it from the electrical panel, and then restart it.\r\n3. Monitor the 4 temperatures (new, supply, extract, exhaust) using the temperature management tool.\r\n4. Adjust the fan speeds to calibrate the machine correctly based on the temperature readings.\r\n5. After performing the diagnostic procedure, consider the following scenarios:\r\n   - If the temperatures are within the specified limits and the Error 2 does not reoccur, the heat pump is functioning correctly.\r\n   - If the changes made to the fans do not affect the temperature readings and the error continues to occur, contact a specialized technician.\r\n   - If the temperatures are within the limits but the Error 2 reoccurs sporadically during extreme weather conditions, it is a protection mechanism of the heat pump.\r\n   - If the Error 2 continues to occur frequently, contact a specialized technician for further assistance.\r\n\r\nHave you replaced the filters recently?\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Version\r\n\r\n0.8.48\r\n\r\n### Steps to Reproduce\r\n\r\nI created this vector_query_engine:\r\n```\r\nvector_query_engine = index.as_query_engine()\r\nquery_engine_tool =QueryEngineTool(\r\n            query_engine=vector_query_engine,\r\n            metadata=ToolMetadata(\r\n                name=\"vector_tool\",\r\n                description=f\"\"\"Use this tool for specific questions regarding error 1 or error 2, such as: 'how do I diagnose error 2?' or 'how do I resolve error 1?' or similar.\"\"\",\r\n            ))\r\n\r\n```\r\n\r\nthan I created a Function_tool like:\r\n\r\n```\r\ndef temperature_management(season: str = None, \r\n                           outdoor_air_temperature: float = None,\r\n                           supplied_air_temperature: float = None,\r\n                           extracted_air_temperature: float = None,\r\n                           expelled_air_temperature: float = None) -> str:\r\n    \"\"\"\r\n    This tool should be used when the user requests an evaluation of the four temperatures,\r\n    evaluates temperatures based on the season and provided temperature values.\r\n    The user will provide the season ('winter' or 'summer'), outdoor air temperature, supplied air temperature, \r\n    extracted air temperature, and expelled air temperature.\r\n\r\n    Args:\r\n        season: \"winter\" or \"summer\"\r\n        outdoor_air_temperature: Outdoor air temperature\r\n        supplied_air_temperature: Supplied air temperature\r\n        extracted_air_temperature: Extracted air temperature\r\n        expelled_air_temperature: Expelled air temperature\r\n    \"\"\"\r\n    ... code to run ...\r\n\r\ngestione_temperature_tool = FunctionTool.from_defaults(fn=temperature_management)\r\n```\r\n\r\nthan i created this agent:\r\n\r\n```\r\ncustom_system_prompt = \"\"\"\r\nYou are an AI assistant that provides post-sale technical support. \r\nYour objective is to assist operators in resolving technical issues based on the provided tools. \r\n\r\nNOTE: Do not interpret messages coming from the Tools.\r\n\r\nStructure of answers:\r\n1. Begin by acknowledging the operator's request.\r\n2. Provide a concise, relevant answer, organized by points.\r\n3. End the answer with a question that helps the operator decide what to do as the next step.\r\n\r\n\"\"\"\r\n\r\nllm = OpenAI(model=\"gpt-3.5-turbo-0613\")\r\nagent = OpenAIAgent.from_tools(\r\n    [query_engine_tool, temperature_management_tool], llm=llm, verbose=True,\r\n    system_prompt=custom_system_prompt\r\n)\r\n\r\n```\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n=== Calling Function ===\r\nCalling function: vector_tool with args: {\r\n\"input\": \"how do I resolve error 2?\"\r\n}\r\nGot output: To resolve error 2, you can follow the procedure below:\r\n\r\nCheck if the unit's filters have been replaced more than a month ago. If so, advise the user to replace the filters.\r\nTurn off and restart the heat pump by disconnecting the unit from the electrical panel. Check if error 2 reoccurs upon the next restart.\r\nIf the error persists, it is advisable to check the VMC's operation by monitoring the 4 temperatures (outdoor, supplied, extracted, expelled) and adjusting the intake and extraction fan speeds to correctly calibrate the machine.\r\nAfter performing these operations, the following scenarios might arise:\r\na) If the temperatures are within the limits and error 2 doesn't reappear, it means the heat pump is working correctly.\r\nb) If the changes made to the fans have not affected the temperature behavior and the error continues, a specialized technician's visit is required.\r\nc) If, despite the temperatures being within the limits, error 2 frequently recurs, the following considerations can be made:\r\nIf error 2 only occurs during the coldest or hottest moments of the season, it might be interpreted as protection for the heat pump.\r\nIf error 2 continues to occur frequently, a specialized technician's visit is necessary.\r\n========================\r\nI hope these instructions have been helpful in resolving error 2. If you need further clarification or have other questions, I'd be happy to assist!\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8557/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8557/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8556",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8556/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8556/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8556/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8556",
        "id": 1966928439,
        "node_id": "I_kwDOIWuq5851PPI3",
        "number": 8556,
        "title": "[Bug]: SubQuestion Query Engine not working with Azure Open AI GPT",
        "user": {
            "login": "Shubham-Sahay",
            "id": 22997591,
            "node_id": "MDQ6VXNlcjIyOTk3NTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22997591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Shubham-Sahay",
            "html_url": "https://github.com/Shubham-Sahay",
            "followers_url": "https://api.github.com/users/Shubham-Sahay/followers",
            "following_url": "https://api.github.com/users/Shubham-Sahay/following{/other_user}",
            "gists_url": "https://api.github.com/users/Shubham-Sahay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Shubham-Sahay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Shubham-Sahay/subscriptions",
            "organizations_url": "https://api.github.com/users/Shubham-Sahay/orgs",
            "repos_url": "https://api.github.com/users/Shubham-Sahay/repos",
            "events_url": "https://api.github.com/users/Shubham-Sahay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Shubham-Sahay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-29T10:17:21Z",
        "updated_at": "2023-10-29T20:34:57Z",
        "closed_at": "2023-10-29T20:34:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nGetting error unrecognized request argument supplied: funtions\r\n\r\nI have used below exact code shared by @jerryjliu in one of his sessions:\r\nPlease note that query engine is working fine individually on uber and lyft but while using sub query engine i am encountering this error.\r\n\r\nPlease refer to this discord thread for discussion on this where one developer have pointed to exact place in code where the bug is present. Please help me get this running as i am working on some urgent requirement for document comparison.\r\n\r\n\r\n### Version\r\n\r\n0.8.54\r\n\r\n### Steps to Reproduce\r\n\r\nFollow screenshot of code in sequence with azure open ai models.\r\n\r\n![image](https://github.com/run-llama/llama_index/assets/22997591/282e2e6b-ea78-4cee-8d9c-1681a9bf9cd3)\r\n![image](https://github.com/run-llama/llama_index/assets/22997591/ce866402-4092-4d2d-aa2a-43614625da90)\r\n![image](https://github.com/run-llama/llama_index/assets/22997591/e1fd828e-c6cb-41fc-8bfd-1f9ff2380386)\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8556/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8556/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8555",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8555/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8555/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8555/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8555",
        "id": 1966872704,
        "node_id": "PR_kwDOIWuq585eCtl-",
        "number": 8555,
        "title": "add advanced prompt + \"prompt engineering for RAG\" notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-29T07:08:42Z",
        "updated_at": "2023-10-29T15:50:14Z",
        "closed_at": "2023-10-29T15:50:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8555",
            "html_url": "https://github.com/run-llama/llama_index/pull/8555",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8555.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8555.patch",
            "merged_at": "2023-10-29T15:50:13Z"
        },
        "body": "In this PR we add two notebooks:\r\n1) an advanced prompt notebook showing how to do partial formatting, template variable mapping, functions\r\n2) a \"prompt engineering for RAG\" guide showing how using prompt functions can help extend capabilities of RAG with prompt customization (using LangChainHub), few-shot prompting, prompt functions, etc.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8555/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8554",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8554/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8554/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8554/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8554",
        "id": 1966822929,
        "node_id": "I_kwDOIWuq5851O1YR",
        "number": 8554,
        "title": "How to pass filter condition for chromadb when used in a chat engine? [Question]: ",
        "user": {
            "login": "snbhanja",
            "id": 3896278,
            "node_id": "MDQ6VXNlcjM4OTYyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3896278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snbhanja",
            "html_url": "https://github.com/snbhanja",
            "followers_url": "https://api.github.com/users/snbhanja/followers",
            "following_url": "https://api.github.com/users/snbhanja/following{/other_user}",
            "gists_url": "https://api.github.com/users/snbhanja/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snbhanja/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snbhanja/subscriptions",
            "organizations_url": "https://api.github.com/users/snbhanja/orgs",
            "repos_url": "https://api.github.com/users/snbhanja/repos",
            "events_url": "https://api.github.com/users/snbhanja/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snbhanja/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-29T03:00:11Z",
        "updated_at": "2023-10-29T20:21:33Z",
        "closed_at": "2023-10-29T20:21:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi, I am facing an issue, how do I pass the metadata filter condition here? like, {\"file_name\": \"abc.pdf\"}\r\nIt is not clear from the documentation either. \r\n\r\n\r\n```python\r\nremote_db = chromadb.HttpClient()\r\ncollection_metadata = {\"hnsw:space\": \"cosine\"}\r\n\r\nchroma_collection = remote_db.get_or_create_collection(name = \"quickstart2\", \r\n                                                           metadata=collection_metadata)\r\n\r\nvector_store = ChromaVectorStore(chroma_collection=chroma_collection)\r\n\r\nstorage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n\r\nembed_model = HuggingFaceEmbedding(\r\n        model_name=\"thenlper/gte-small\", cache_folder=\"embed_model\"\r\n    )\r\n\r\nservice_context = ServiceContext.from_defaults(embed_model=embed_model, llm=llms)\r\n\r\nindex = VectorStoreIndex.from_vector_store(vector_store=vector_store, service_context=service_context)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8554/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8554/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8553",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8553/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8553/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8553/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8553",
        "id": 1966788240,
        "node_id": "I_kwDOIWuq5851Os6Q",
        "number": 8553,
        "title": "[Bug]: Cannot query more than 10 documents at a time.",
        "user": {
            "login": "Ayfri",
            "id": 34159136,
            "node_id": "MDQ6VXNlcjM0MTU5MTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34159136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ayfri",
            "html_url": "https://github.com/Ayfri",
            "followers_url": "https://api.github.com/users/Ayfri/followers",
            "following_url": "https://api.github.com/users/Ayfri/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ayfri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ayfri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ayfri/subscriptions",
            "organizations_url": "https://api.github.com/users/Ayfri/orgs",
            "repos_url": "https://api.github.com/users/Ayfri/repos",
            "events_url": "https://api.github.com/users/Ayfri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ayfri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-10-29T00:44:35Z",
        "updated_at": "2023-10-30T17:32:43Z",
        "closed_at": "2023-10-30T17:32:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nHello, I'm trying to create a query from a `VectorStoreIndex` with more than 10 of `similarity_top_k`, but it always result in a response having `response.source_nodes` being equal to 10.\r\nI need to query a large quantity of documents where information can be parsed among a lot of them so this is crucial to my project, I'm required to create multiple sub prompts to gather all the information I need for a final prompt. Using one prompt with a very high top_k would help avoid doing this.\r\nSo, what am I doing wrong ?\n\n### Version\n\n0.8.22 (slowly updating to more recent versions)\n\n### Steps to Reproduce\n\n1. Create a new VectorStoreIndex.\r\n2. Create a BaseQueryEngine from the index with a `similarity_top_k` of for example 20.\r\n3. Query the engine with a prompt.\r\n4. Log `len(response.source_nodes)`.\r\n5. See that it was \"reverted\" to 10.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8553/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8553/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8552",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8552/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8552/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8552/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8552",
        "id": 1966770902,
        "node_id": "I_kwDOIWuq5851OorW",
        "number": 8552,
        "title": "[Question]: chatbot to facilitate development.",
        "user": {
            "login": "buckmaxwell",
            "id": 6210452,
            "node_id": "MDQ6VXNlcjYyMTA0NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6210452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/buckmaxwell",
            "html_url": "https://github.com/buckmaxwell",
            "followers_url": "https://api.github.com/users/buckmaxwell/followers",
            "following_url": "https://api.github.com/users/buckmaxwell/following{/other_user}",
            "gists_url": "https://api.github.com/users/buckmaxwell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/buckmaxwell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/buckmaxwell/subscriptions",
            "organizations_url": "https://api.github.com/users/buckmaxwell/orgs",
            "repos_url": "https://api.github.com/users/buckmaxwell/repos",
            "events_url": "https://api.github.com/users/buckmaxwell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/buckmaxwell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-28T23:31:20Z",
        "updated_at": "2023-10-29T20:25:41Z",
        "closed_at": "2023-10-29T20:25:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nWhat I want to do is simple - at the root of a code repository run the following.\r\n\r\nMy expectation would have been that I could then ask questions about the code and it would be kind of like chat gpt 4 but I wouldn't need to provide all the extra context. \r\n\r\nIt isn't working that way though - it doesn't seem to be able to answer any questions -  as if the indexer was only built for understanding text files and docs not for reading code. Is there another reader or indexer I could be using? Or another way to solve this problem?\r\n\r\n```python\r\nimport os\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = os.environ.get(\"OPENAI_PROJECT_INDEXER_API_KEY\")\r\n\r\n\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader, ServiceContext\r\n\r\nfrom llama_index.llms import OpenAI\r\n\r\n# Necessary to use the latest OpenAI models that support function calling API\r\nservice_context = ServiceContext.from_defaults(llm=OpenAI(model=\"gpt-4\"))\r\ndata = SimpleDirectoryReader(input_dir=\".\").load_data()\r\nindex = VectorStoreIndex.from_documents(data, service_context=service_context)\r\n\r\nchat_engine = index.as_chat_engine(chat_mode=\"openai\", verbose=True)\r\n\r\n# Until the user types \"exit\", keep asking for queries\r\nprint(\"System ready. Type 'exit' to quit.\")\r\nwhile True:\r\n    query = input(\"\\n\\n\")\r\n    query = query.strip()\r\n    if query == \"exit\":\r\n        break\r\n    response = chat_engine.chat(query)\r\n    print(response)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8552/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8552/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8551",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8551/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8551/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8551/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8551",
        "id": 1966723036,
        "node_id": "I_kwDOIWuq5851Oc_c",
        "number": 8551,
        "title": "[Bug]: UnstructuredElementNodeParser getting ValueError: Could not extract json string from output: ",
        "user": {
            "login": "mohade09",
            "id": 25840379,
            "node_id": "MDQ6VXNlcjI1ODQwMzc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/25840379?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mohade09",
            "html_url": "https://github.com/mohade09",
            "followers_url": "https://api.github.com/users/mohade09/followers",
            "following_url": "https://api.github.com/users/mohade09/following{/other_user}",
            "gists_url": "https://api.github.com/users/mohade09/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mohade09/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mohade09/subscriptions",
            "organizations_url": "https://api.github.com/users/mohade09/orgs",
            "repos_url": "https://api.github.com/users/mohade09/repos",
            "events_url": "https://api.github.com/users/mohade09/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mohade09/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-28T19:59:17Z",
        "updated_at": "2023-12-06T06:41:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n\r\n\r\n```\r\n\r\nllm = Bedrock(\r\n    model=\"anthropic.claude-v2\", profile_name=profile\r\n)\r\n# create UnstructuredElementNodeParser from LLamaIndex\r\nfrom llama_index.node_parser import (\r\n    UnstructuredElementNodeParser,\r\n)\r\n\r\nnode_parser = UnstructuredElementNodeParser(llm=llm)\r\n```\n\n### Version\n\n0.8.50\n\n### Steps to Reproduce\n\nhttps://docs.llamaindex.ai/en/latest/examples/query_engine/sec_tables/tesla_10q_table.html#try-table-comparisons\r\nwas trying the above example ,\r\n\r\nthe only change i did is passing the bedrock model in the code ,and getting the error\r\n\r\n67 match = re.search(r\"\\{.*\\}\", text.strip(), re.MULTILINE | re.IGNORECASE | re.DOTALL)\r\n     68 if not match:\r\n---> 69     raise ValueError(f\"Could not extract json string from output: {text}\")\r\n     71 return match.group()\r\n\r\nValueError: Could not extract json string from output:  Here is a summary of the table without directly referencing the context:\r\n\r\nThe table outlines the contents and structure of a business financial report. It contains sections on business details, risk factors, financial statements, controls and procedures, and more. The table provides a useful overview of the key components of the report and should be kept.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8551/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8551/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8550",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8550/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8550/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8550/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8550",
        "id": 1966711391,
        "node_id": "PR_kwDOIWuq585eCOIM",
        "number": 8550,
        "title": "Add Bedrock Embedding",
        "user": {
            "login": "viveksilimkhan1",
            "id": 126159777,
            "node_id": "U_kgDOB4ULoQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/126159777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viveksilimkhan1",
            "html_url": "https://github.com/viveksilimkhan1",
            "followers_url": "https://api.github.com/users/viveksilimkhan1/followers",
            "following_url": "https://api.github.com/users/viveksilimkhan1/following{/other_user}",
            "gists_url": "https://api.github.com/users/viveksilimkhan1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viveksilimkhan1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viveksilimkhan1/subscriptions",
            "organizations_url": "https://api.github.com/users/viveksilimkhan1/orgs",
            "repos_url": "https://api.github.com/users/viveksilimkhan1/repos",
            "events_url": "https://api.github.com/users/viveksilimkhan1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viveksilimkhan1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6003270643,
                "node_id": "LA_kwDOIWuq588AAAABZdKj8w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/embedding",
                "name": "embedding",
                "color": "1D775A",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-28T19:18:05Z",
        "updated_at": "2023-11-22T16:54:27Z",
        "closed_at": "2023-10-30T06:29:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8550",
            "html_url": "https://github.com/run-llama/llama_index/pull/8550",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8550.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8550.patch",
            "merged_at": "2023-10-30T06:29:17Z"
        },
        "body": "# Description\r\n\r\nAdd Bedrock Embedding \r\n\r\nFixes # (#8549)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8550/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8550/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8549",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8549/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8549/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8549/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8549",
        "id": 1966710872,
        "node_id": "I_kwDOIWuq5851OaBY",
        "number": 8549,
        "title": "[Feature Request]: Add Bedrock Embedding",
        "user": {
            "login": "viveksilimkhan1",
            "id": 126159777,
            "node_id": "U_kgDOB4ULoQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/126159777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viveksilimkhan1",
            "html_url": "https://github.com/viveksilimkhan1",
            "followers_url": "https://api.github.com/users/viveksilimkhan1/followers",
            "following_url": "https://api.github.com/users/viveksilimkhan1/following{/other_user}",
            "gists_url": "https://api.github.com/users/viveksilimkhan1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viveksilimkhan1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viveksilimkhan1/subscriptions",
            "organizations_url": "https://api.github.com/users/viveksilimkhan1/orgs",
            "repos_url": "https://api.github.com/users/viveksilimkhan1/repos",
            "events_url": "https://api.github.com/users/viveksilimkhan1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viveksilimkhan1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6003270643,
                "node_id": "LA_kwDOIWuq588AAAABZdKj8w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/embedding",
                "name": "embedding",
                "color": "1D775A",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-28T19:16:10Z",
        "updated_at": "2023-10-30T06:29:18Z",
        "closed_at": "2023-10-30T06:29:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nAWS Bedrock provides Titan Embedding model, would like to have this feature in llama_index. \n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8549/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8549/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8548",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8548/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8548/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8548/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8548",
        "id": 1966687820,
        "node_id": "PR_kwDOIWuq585eCJk8",
        "number": 8548,
        "title": "allow prompts to take in functions with `function_mappings`",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-28T18:00:13Z",
        "updated_at": "2023-10-29T15:42:12Z",
        "closed_at": "2023-10-29T15:42:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8548",
            "html_url": "https://github.com/run-llama/llama_index/pull/8548",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8548.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8548.patch",
            "merged_at": "2023-10-29T15:42:11Z"
        },
        "body": "This allows users to pass in a function for each format variable. This function will take in all specified kwargs and fill in that format variable, instead of users needing to pass in the format variable during `prompt.format`\r\n\r\nThis allows for a few things:\r\n- Lets users specify functions for few-shot prompting: easily define a few_shot_function that takes in other format variables (e.g. the user query), and can return examples\r\n- For prompts used in modules like response synthesis, users can define functions for variables like `query_str` and `context_str` allowing them to have greater control over how to process these variables ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8548/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8548/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8547",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8547/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8547/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8547/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8547",
        "id": 1966679178,
        "node_id": "PR_kwDOIWuq585eCH3L",
        "number": 8547,
        "title": "Fixed typo",
        "user": {
            "login": "amartinson193",
            "id": 32916663,
            "node_id": "MDQ6VXNlcjMyOTE2NjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/32916663?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amartinson193",
            "html_url": "https://github.com/amartinson193",
            "followers_url": "https://api.github.com/users/amartinson193/followers",
            "following_url": "https://api.github.com/users/amartinson193/following{/other_user}",
            "gists_url": "https://api.github.com/users/amartinson193/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amartinson193/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amartinson193/subscriptions",
            "organizations_url": "https://api.github.com/users/amartinson193/orgs",
            "repos_url": "https://api.github.com/users/amartinson193/repos",
            "events_url": "https://api.github.com/users/amartinson193/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amartinson193/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-28T17:33:07Z",
        "updated_at": "2023-10-29T20:43:58Z",
        "closed_at": "2023-10-29T20:43:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8547",
            "html_url": "https://github.com/run-llama/llama_index/pull/8547",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8547.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8547.patch",
            "merged_at": "2023-10-29T20:43:58Z"
        },
        "body": "# Description\r\n\r\nFixed a simple typo\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8547/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8547/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8546",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8546/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8546/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8546/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8546",
        "id": 1966658957,
        "node_id": "I_kwDOIWuq5851ONWN",
        "number": 8546,
        "title": "[Question]: llama-index as a basic interface to openai",
        "user": {
            "login": "jyskim",
            "id": 26681366,
            "node_id": "MDQ6VXNlcjI2NjgxMzY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/26681366?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jyskim",
            "html_url": "https://github.com/jyskim",
            "followers_url": "https://api.github.com/users/jyskim/followers",
            "following_url": "https://api.github.com/users/jyskim/following{/other_user}",
            "gists_url": "https://api.github.com/users/jyskim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jyskim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jyskim/subscriptions",
            "organizations_url": "https://api.github.com/users/jyskim/orgs",
            "repos_url": "https://api.github.com/users/jyskim/repos",
            "events_url": "https://api.github.com/users/jyskim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jyskim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-28T16:32:23Z",
        "updated_at": "2023-10-29T20:27:19Z",
        "closed_at": "2023-10-29T20:27:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nHi llama-index team, \r\n\r\ni have a question to use the llama-index purely as an interface to openai api, as the module offers a lot of heler functions to reduce the code and easy to maintain. In this use case, i don't need any document loading or connector setup, but purely interface the chatgpt and continue to chat by the code something like below..\r\n\r\n`\r\nfrom llama_index.agent import OpenAIAgent \r\n\r\nagent = OpenAIAgent....(... 'chatgpt-4' ...)\r\n\r\nprint(agent.chat(\"Tell me a funny story\"))\r\n\r\nprint(agent.chat(\"What's fun point in the story?\"))\r\n`\r\n\r\nAbove using only openai module needs quite some code. \r\n\r\ni searched around but couldn't easily find this basic use cases (maybe too basic or not the llama-index target use case.. \r\nAny advice would be appreciated. \r\nThanks in advance. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8546/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8546/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8545",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8545/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8545/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8545/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8545",
        "id": 1966651800,
        "node_id": "PR_kwDOIWuq585eCCjt",
        "number": 8545,
        "title": "fix Colab link ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-28T16:10:57Z",
        "updated_at": "2023-10-28T16:11:53Z",
        "closed_at": "2023-10-28T16:11:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8545",
            "html_url": "https://github.com/run-llama/llama_index/pull/8545",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8545.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8545.patch",
            "merged_at": "2023-10-28T16:11:52Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8545/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8545/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8544",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8544/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8544/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8544/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8544",
        "id": 1966650035,
        "node_id": "PR_kwDOIWuq585eCCPC",
        "number": 8544,
        "title": "[version] bump version to 0.8.54",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-28T16:05:51Z",
        "updated_at": "2023-10-28T16:59:26Z",
        "closed_at": "2023-10-28T16:59:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8544",
            "html_url": "https://github.com/run-llama/llama_index/pull/8544",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8544.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8544.patch",
            "merged_at": "2023-10-28T16:59:25Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8544/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8544/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8543",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8543/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8543/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8543/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8543",
        "id": 1966569757,
        "node_id": "I_kwDOIWuq5851N3kd",
        "number": 8543,
        "title": "[Feature Request]: Pass Metadata Filters to the Auto Retriever to append to the filter list",
        "user": {
            "login": "cwysong85",
            "id": 2041279,
            "node_id": "MDQ6VXNlcjIwNDEyNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2041279?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cwysong85",
            "html_url": "https://github.com/cwysong85",
            "followers_url": "https://api.github.com/users/cwysong85/followers",
            "following_url": "https://api.github.com/users/cwysong85/following{/other_user}",
            "gists_url": "https://api.github.com/users/cwysong85/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cwysong85/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cwysong85/subscriptions",
            "organizations_url": "https://api.github.com/users/cwysong85/orgs",
            "repos_url": "https://api.github.com/users/cwysong85/repos",
            "events_url": "https://api.github.com/users/cwysong85/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cwysong85/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            },
            {
                "id": 6129428377,
                "node_id": "LA_kwDOIWuq588AAAABbVenmQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/request%20contribution%20board",
                "name": "request contribution board",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-28T12:05:33Z",
        "updated_at": "2023-11-02T17:16:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nAdd `append_filters` to `VectorIndexAutoRetriever` class to always append said filters even if the LLM comes back with filters.\r\n\r\n### Reason\r\n\r\nCurrently, the auto retriever does a great job in extracting what filters need to be dynamically added to a retriever. However, if I have a set of `ExactMatch` filters that I want to use always, that functionality isn't available today. Currently, I'm able to \"trick\" the LLM into doing this by appending the filters I want to use to the end of the input message:\r\n\r\n`Give me a summary of this document. Filter by documentId: {documentId}`\r\n\r\nThis works! However, the LLM now outputs the filter back to me in the final response even though the default prompt states to not do this. `... Any conditions in the filter should not be mentioned in the query as well.`\r\n\r\n### Value of Feature\r\n\r\nAllows more control and granularity for developers to filter.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8543/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8543/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8542",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8542/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8542/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8542/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8542",
        "id": 1966535236,
        "node_id": "I_kwDOIWuq5851NvJE",
        "number": 8542,
        "title": "[Question]: How to use sagemaker endpoint in service_context ",
        "user": {
            "login": "jc1518",
            "id": 4754235,
            "node_id": "MDQ6VXNlcjQ3NTQyMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4754235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jc1518",
            "html_url": "https://github.com/jc1518",
            "followers_url": "https://api.github.com/users/jc1518/followers",
            "following_url": "https://api.github.com/users/jc1518/following{/other_user}",
            "gists_url": "https://api.github.com/users/jc1518/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jc1518/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jc1518/subscriptions",
            "organizations_url": "https://api.github.com/users/jc1518/orgs",
            "repos_url": "https://api.github.com/users/jc1518/repos",
            "events_url": "https://api.github.com/users/jc1518/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jc1518/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            },
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-28T10:19:00Z",
        "updated_at": "2023-10-30T02:48:42Z",
        "closed_at": "2023-10-30T02:48:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello, I am trying to use sagemaker endpoint (for both llm and embedding) in service_context, but no luck so far. Here is my code, any ideas what I missed?\r\n\r\n```python\r\n\"\"\"SageMaker Service Context\"\"\"\r\nimport json\r\n\r\nimport boto3\r\nfrom langchain.llms.sagemaker_endpoint import SagemakerEndpoint, LLMContentHandler\r\nfrom langchain.embeddings import SagemakerEndpointEmbeddings\r\nfrom langchain.embeddings.sagemaker_endpoint import EmbeddingsContentHandler\r\nfrom llama_index import LLMPredictor, ServiceContext, VectorStoreIndex\r\nfrom llama_index.callbacks import CallbackManager, LlamaDebugHandler\r\nfrom llama_hub.web.simple_web.base import SimpleWebPageReader\r\n\r\n\r\nclass ContentHandler(LLMContentHandler):\r\n    \"\"\"Text model content handler\"\"\"\r\n\r\n    content_type = \"application/json\"\r\n    accepts = \"application/json\"\r\n\r\n    def transform_input(self, prompt, model_kwargs):\r\n        input_str = json.dumps({\"inputs\": prompt, **model_kwargs})\r\n        return input_str.encode(\"utf-8\")\r\n\r\n    def transform_output(self, output):\r\n        response_json = json.loads(output.read().decode(\"utf-8\"))\r\n        return response_json[0][\"generated_text\"]\r\n\r\n\r\nclass EmbedContentHandler(EmbeddingsContentHandler):\r\n    \"\"\"Embedding model content handler\"\"\"\r\n\r\n    content_type = \"application/json\"\r\n    accepts = \"application/json\"\r\n\r\n    def transform_input(self, prompt, model_kwargs):\r\n        input_str = json.dumps({prompt: prompt, **model_kwargs})\r\n        return input_str.encode(\"utf-8\")\r\n\r\n    def transform_output(self, output):\r\n        response_json = json.loads(output.read().decode(\"utf-8\"))\r\n        return response_json[\"vectors\"]\r\n\r\n\r\nsagemaker_text_endpoint = \"jumpstart-dft-hf-llm-mistral-7b-instruct\"\r\nsagemaker_embed_endpoint = \"jumpstart-dft-hf-textembedding-gpt-j-6b-fp16\"\r\n\r\nsession = boto3.Session()\r\nboto3_sagemaker = session.client(service_name=\"sagemaker-runtime\")\r\n\r\nllm = SagemakerEndpoint(\r\n    client=boto3_sagemaker,\r\n    endpoint_name=sagemaker_text_endpoint,\r\n    content_handler=ContentHandler(),\r\n    verbose=True,\r\n)\r\n\r\nembedding = SagemakerEndpointEmbeddings(\r\n    client=boto3_sagemaker,\r\n    endpoint_name=sagemaker_embed_endpoint,\r\n    content_handler=EmbedContentHandler(),\r\n)\r\n\r\nllama_debug = LlamaDebugHandler(print_trace_on_end=True)\r\ncallback_manager = CallbackManager([llama_debug])\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n    llm_predictor=LLMPredictor(llm),\r\n    embed_model=embedding,\r\n    callback_manager=callback_manager,\r\n)\r\n\r\nreader = SimpleWebPageReader(html_to_text=True)\r\ndocs = reader.load_data(\r\n    urls=[\"https://blog.llamaindex.ai/llamaindex-update-2023-10-10-3718a3d19fb9\"]\r\n)\r\n\r\nindex = VectorStoreIndex.from_documents(\r\n    docs, service_context=service_context, show_progress=True\r\n)\r\nquery_engine = index.as_query_engine()\r\nprint(query_engine.query(\"What are the updates?\"))\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8542/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8542/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8540",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8540/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8540/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8540/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8540",
        "id": 1966468885,
        "node_id": "PR_kwDOIWuq585eBey4",
        "number": 8540,
        "title": "notebook showing how to fine-tune llama2 on structured outputs",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-28T06:55:58Z",
        "updated_at": "2023-10-28T16:02:51Z",
        "closed_at": "2023-10-28T16:02:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8540",
            "html_url": "https://github.com/run-llama/llama_index/pull/8540",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8540.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8540.patch",
            "merged_at": "2023-10-28T16:02:50Z"
        },
        "body": "in the process made edits to:\r\n- finetuning handler: added a GradientAIFinetuningHandler\r\n- llmpredictor/servicecontext: allow users tos et a \"pydanticprogrammode\" to specify the specific pydantic program to use. put in servicecontext for now, very open to changing\r\n- added is_chat_model option to gradient ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8540/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8540/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8539",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8539/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8539/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8539/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8539",
        "id": 1966366210,
        "node_id": "PR_kwDOIWuq585eBJFL",
        "number": 8539,
        "title": "Leverage Replicate API for serving LLaVa modal",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-28T02:10:30Z",
        "updated_at": "2023-10-28T23:58:39Z",
        "closed_at": "2023-10-28T23:58:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8539",
            "html_url": "https://github.com/run-llama/llama_index/pull/8539",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8539.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8539.patch",
            "merged_at": "2023-10-28T23:58:38Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8539/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8539/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8538",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8538/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8538/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8538/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8538",
        "id": 1966281755,
        "node_id": "PR_kwDOIWuq585eA3Ff",
        "number": 8538,
        "title": "Add zephyr-7b-beta for benchmarking",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-27T22:56:43Z",
        "updated_at": "2023-10-27T23:09:01Z",
        "closed_at": "2023-10-27T23:09:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8538",
            "html_url": "https://github.com/run-llama/llama_index/pull/8538",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8538.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8538.patch",
            "merged_at": "2023-10-27T23:09:00Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8538/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8538/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8537",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8537/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8537/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8537/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8537",
        "id": 1966278438,
        "node_id": "I_kwDOIWuq5851Mwcm",
        "number": 8537,
        "title": "[Bug]: doc_ids filter on Weaviate Vector Store throws exception",
        "user": {
            "login": "KristianMischke",
            "id": 4390379,
            "node_id": "MDQ6VXNlcjQzOTAzNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4390379?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KristianMischke",
            "html_url": "https://github.com/KristianMischke",
            "followers_url": "https://api.github.com/users/KristianMischke/followers",
            "following_url": "https://api.github.com/users/KristianMischke/following{/other_user}",
            "gists_url": "https://api.github.com/users/KristianMischke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KristianMischke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KristianMischke/subscriptions",
            "organizations_url": "https://api.github.com/users/KristianMischke/orgs",
            "repos_url": "https://api.github.com/users/KristianMischke/repos",
            "events_url": "https://api.github.com/users/KristianMischke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KristianMischke/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-27T22:51:54Z",
        "updated_at": "2023-11-01T01:01:00Z",
        "closed_at": "2023-11-01T01:01:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nSpecifying `doc_ids` in a `VectorStoreQuery` against a weaviate database (v1.18.3) throws an error. Looks like `valueString` was deprecated since v1.12.0. See: https://weaviate.io/developers/weaviate/more-resources/faq#q-what-is-the-difference-between-text-and-string-and-valuetext-and-valuestring\r\n\r\n### Version\r\n\r\n0.8.50\r\n\r\n### Steps to Reproduce\r\n\r\nMinimal example:\r\n\r\nEnsure weaviate is running at localhost:8080 (or adjust for your system to test it out)\r\n\r\n```py\r\nimport weaviate\r\nfrom llama_index.vector_stores.weaviate import WeaviateVectorStore\r\nfrom llama_index.vector_stores import VectorStoreQuery\r\nfrom llama_index.schema import TextNode\r\nimport pandas as pd\r\n\r\nclient = weaviate.Client(url=\"http://localhost:8080\")\r\nclient.schema.delete_all()\r\nvector_store = WeaviateVectorStore(weaviate_client=client, index_name=\"TestClass\", text_key=\"sentence\")\r\n\r\n\r\ndf = pd.DataFrame.from_records([\r\n    {\r\n        \"sentence\": \"this is a test sentence\",\r\n        \"doc_id\": \"123\",\r\n        \"node_id\": \"9123\",\r\n        \"embedding\": [1, 0, 0],\r\n    },\r\n    {\r\n        \"sentence\": \"Technology helps solve your problems\",\r\n        \"doc_id\": \"123\",\r\n        \"node_id\": \"9124\",\r\n        \"embedding\": [0, 20, 0],\r\n    },\r\n    {\r\n        \"sentence\": \"Education Technology (Ed-Tech)\",\r\n        \"doc_id\": \"124\",\r\n        \"node_id\": \"8123\",\r\n        \"embedding\": [0, 20, 5],\r\n    }\r\n])\r\n\r\nvector_store.add([\r\n        TextNode(\r\n            text=row[\"sentence\"],\r\n            metadata=row[[\"doc_id\", \"node_id\"]].to_dict(),\r\n            embedding=row[\"embedding\"]\r\n        ) for _, row in df.iterrows()\r\n    ])\r\n\r\nquery_vector = [0.1, 18, 2]\r\n\r\nquery = VectorStoreQuery(\r\n    query_embedding=query_vector,\r\n    similarity_top_k=100,\r\n    doc_ids=['123']  # <-- this is the culprit of the error\r\n)\r\nresult = vector_store.query(query=query)\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"/<redacted_path>/llama_index_bug.py\", line 48, in <module>\r\n    result = vector_store.query(query=query)\r\n  File \"/<redacted_path>/.venv/lib/python3.10/site-packages/llama_index/vector_stores/weaviate.py\", line 275, in query\r\n    parsed_result = parse_get_response(query_result)\r\n  File \"/<redacted_path>/.venv/lib/python3.10/site-packages/llama_index/vector_stores/weaviate_utils.py\", line 65, in parse_get_response\r\n    raise ValueError(\"Invalid query, got errors: {}\".format(response[\"errors\"]))\r\nValueError: Invalid query, got errors: [{'locations': [{'column': 6, 'line': 1}], 'message': 'invalid \\'where\\' filter: child operand at position 0: data type filter cannot use \"valueString\" on type \"text\", use \"valueText\" instead', 'path': ['Get', 'TestClass']}]\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8537/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8537/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8536",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8536/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8536/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8536/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8536",
        "id": 1966265884,
        "node_id": "I_kwDOIWuq5851MtYc",
        "number": 8536,
        "title": "[Bug]:  UnstructuredElementNodeParser doesn't pass llm/embed model to internally generated service_context",
        "user": {
            "login": "moshewe",
            "id": 7280505,
            "node_id": "MDQ6VXNlcjcyODA1MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7280505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/moshewe",
            "html_url": "https://github.com/moshewe",
            "followers_url": "https://api.github.com/users/moshewe/followers",
            "following_url": "https://api.github.com/users/moshewe/following{/other_user}",
            "gists_url": "https://api.github.com/users/moshewe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/moshewe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/moshewe/subscriptions",
            "organizations_url": "https://api.github.com/users/moshewe/orgs",
            "repos_url": "https://api.github.com/users/moshewe/repos",
            "events_url": "https://api.github.com/users/moshewe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/moshewe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-27T22:32:12Z",
        "updated_at": "2023-12-14T21:34:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI'm creating a `llm` and `embed_model` **_without_** setting the OpenAI environment variables for security reasons. \r\nI've passed in the `llm` constructor parameter to `UnstructuredElementNodeParser`. I get the message: `Could not load OpenAIEmbedding.` Looking deeper into the code I found that `UnstructuredElementNodeParser` creates an ad-hoc service context without the `embed_model` parameter, which I've also thought about passing in to its constructor but that isn't possible.\r\n\r\nI think it's good practice to allow the parser to use given llm and embed models rather than force it to recreate these objects. WDYT?\n\n### Version\n\n0.8.5.post2\n\n### Steps to Reproduce\n\n```python\r\nllm = AzureOpenAI(engine=\"query-engine-model\",\r\n                  mode=\"gpt-35-turbo\",\r\n                  temperature=0.0,\r\n                  embedding_llm=embedding_llm,\r\n                  api_key=get_openai_api_key(),\r\n                  api_base=openai.api_base,\r\n                  api_type=openai.api_type,\r\n                  api_version=\"2023-03-15-preview\")\r\n\r\nnode_parser = UnstructuredElementNodeParser(llm=llm)\r\nraw_nodes = node_parser.get_nodes_from_documents([Document(text=str(pf.getvalue()), metadata={\r\n    \"filename\": pf.name,\r\n    \"extension\": pf.type\r\n}) for pf in pdf_files])\r\nbase_nodes, node_mappings = node_parser.get_base_nodes_and_mappings(raw_nodes)\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\nFile \"/Users/user/my_project/my_script.py\", line 54, in with_unstructured\r\n    raw_nodes = node_parser.get_nodes_from_documents([Document(text=str(pf.getvalue()), metadata={\r\nFile \"/Users/user/Library/Caches/pypoetry/virtualenvs/my-venv/lib/python3.11/site-packages/llama_index/node_parser/unstructured_element.py\", line 290, in get_nodes_from_documents\r\n    nodes = self.get_nodes_from_node(document)\r\nFile \"/Users/user/Library/Caches/pypoetry/virtualenvs/my-venv/lib/python3.11/site-packages/llama_index/node_parser/unstructured_element.py\", line 264, in get_nodes_from_node\r\n    extract_table_summaries(table_elements, self.llm, self.summary_query_str)\r\nFile \"/Users/user/Library/Caches/pypoetry/virtualenvs/my-venv/lib/python3.11/site-packages/llama_index/node_parser/unstructured_element.py\", line 113, in extract_table_summaries\r\n    service_context = ServiceContext.from_defaults(llm=llm)\r\nFile \"/Users/user/Library/Caches/pypoetry/virtualenvs/my-venv/lib/python3.11/site-packages/llama_index/indices/service_context.py\", line 163, in from_defaults\r\n    embed_model = resolve_embed_model(embed_model)\r\nFile \"/Users/user/Library/Caches/pypoetry/virtualenvs/my-venv/lib/python3.11/site-packages/llama_index/embeddings/utils.py\", line 43, in resolve_embed_model\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8536/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8536/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8535",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8535/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8535/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8535/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8535",
        "id": 1966164611,
        "node_id": "I_kwDOIWuq5851MUqD",
        "number": 8535,
        "title": "[Question]: Multi xlsx (excel) Pandas Query Engine",
        "user": {
            "login": "muratali016",
            "id": 77502485,
            "node_id": "MDQ6VXNlcjc3NTAyNDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/77502485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/muratali016",
            "html_url": "https://github.com/muratali016",
            "followers_url": "https://api.github.com/users/muratali016/followers",
            "following_url": "https://api.github.com/users/muratali016/following{/other_user}",
            "gists_url": "https://api.github.com/users/muratali016/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/muratali016/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/muratali016/subscriptions",
            "organizations_url": "https://api.github.com/users/muratali016/orgs",
            "repos_url": "https://api.github.com/users/muratali016/repos",
            "events_url": "https://api.github.com/users/muratali016/events{/privacy}",
            "received_events_url": "https://api.github.com/users/muratali016/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-27T20:39:12Z",
        "updated_at": "2023-10-29T21:47:03Z",
        "closed_at": "2023-10-29T21:47:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nhas anyone created before multi-query engine for Excel files, basically excel version xlsx files for this app: https://gpt-index.readthedocs.io/en/stable/examples/agent/multi_document_agents.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8535/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8535/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8534",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8534/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8534/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8534/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8534",
        "id": 1965987543,
        "node_id": "PR_kwDOIWuq585d_3GJ",
        "number": 8534,
        "title": "Fixing broken link for FAQs",
        "user": {
            "login": "anoopshrma",
            "id": 26565263,
            "node_id": "MDQ6VXNlcjI2NTY1MjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/26565263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anoopshrma",
            "html_url": "https://github.com/anoopshrma",
            "followers_url": "https://api.github.com/users/anoopshrma/followers",
            "following_url": "https://api.github.com/users/anoopshrma/following{/other_user}",
            "gists_url": "https://api.github.com/users/anoopshrma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anoopshrma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anoopshrma/subscriptions",
            "organizations_url": "https://api.github.com/users/anoopshrma/orgs",
            "repos_url": "https://api.github.com/users/anoopshrma/repos",
            "events_url": "https://api.github.com/users/anoopshrma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anoopshrma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-27T18:14:20Z",
        "updated_at": "2023-10-29T18:11:01Z",
        "closed_at": "2023-10-29T18:11:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8534",
            "html_url": "https://github.com/run-llama/llama_index/pull/8534",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8534.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8534.patch",
            "merged_at": "2023-10-29T18:11:01Z"
        },
        "body": "# Description\r\n\r\nAfter doc revamp, Some of the FAQs link got broken. Fixed those in this PR\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8534/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8534/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8533",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8533/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8533/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8533/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8533",
        "id": 1965910651,
        "node_id": "I_kwDOIWuq5851LWp7",
        "number": 8533,
        "title": "[Bug]: Cannot query Nebula Graph index. Found 'PromptTemplate' instead of string.",
        "user": {
            "login": "derOlek",
            "id": 45106657,
            "node_id": "MDQ6VXNlcjQ1MTA2NjU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/45106657?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derOlek",
            "html_url": "https://github.com/derOlek",
            "followers_url": "https://api.github.com/users/derOlek/followers",
            "following_url": "https://api.github.com/users/derOlek/following{/other_user}",
            "gists_url": "https://api.github.com/users/derOlek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derOlek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derOlek/subscriptions",
            "organizations_url": "https://api.github.com/users/derOlek/orgs",
            "repos_url": "https://api.github.com/users/derOlek/repos",
            "events_url": "https://api.github.com/users/derOlek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derOlek/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-27T17:18:57Z",
        "updated_at": "2023-10-29T21:38:59Z",
        "closed_at": "2023-10-29T21:38:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen running a Llama model locally and trying to query a nebulagraph based knowledge graph index the following error is thrown:\r\n\r\n> ValueError: Argument `prompt` is expected to be a string. Instead found <class 'llama_index.prompts.base.PromptTemplate'>. If you want to run the LLM on multiple prompts, use `generate` instead.\r\n\r\nI am running nebulagraph inside a local docker container. The llama_index version is 0.8.53.post3.\r\nBelow you can find the code to reproduce this issue.\r\n\r\nIn addition to that I noticed that no data is written to nebulagraph. The space that is given just stays empty. But thats not the problem here ;)\n\n### Version\n\n0.8.53.post3\n\n### Steps to Reproduce\n\nBelow is the code I use:\r\n```\r\nos.environ[\"NEBULA_USER\"] = \"root\"\r\nos.environ[\"NEBULA_PASSWORD\"] = \"nebula\" # default is \"nebula\r\nos.environ[\"NEBULA_ADDRESS\"] = \"127.0.0.1:9669\" # assumed we have NebulaGraph installed locally\r\n\r\ndef loadData():\r\n    WikipediaReader = download_loader(\"WikipediaReader\")\r\n    loader = WikipediaReader()\r\n    documents = loader.load_data(pages=['Guardians of the Galaxy Vol. 3'], auto_suggest=False)\r\n\r\n    index = KnowledgeGraphIndex.from_documents(\r\n        documents,\r\n        storage_context=storage_context,\r\n        max_triplets_per_chunk=2,\r\n        service_context=service_context,\r\n        space_name=space_name,\r\n        edge_types=edge_types,\r\n        rel_prop_names=rel_prop_names,\r\n        tags=tags,\r\n        include_embeddings=True,\r\n    )\r\n\r\n    return index\r\n    \r\n\r\nif __name__ == \"__main__\":\r\n    #Models\r\n    embedding_llm  = HuggingFaceEmbeddings(model_name=\"sentence-transformers/all-mpnet-base-v2\")\r\n    embed_model = LangchainEmbedding(embedding_llm)\r\n\r\n    space_name = \"test\"\r\n    edge_types, rel_prop_names = [\"relationship\"], [\"relationship\"] # default, could be omit if create from an empty kg\r\n    tags = [\"entity\"] # default, could be omit if create from an empty kg\r\n    graph_store = NebulaGraphStore(space_name=space_name, edge_types=edge_types, rel_prop_names=rel_prop_names, tags=tags)\r\n    storage_context = StorageContext.from_defaults(graph_store=graph_store)\r\n\r\n    llm_predictor = LlamaCpp(model_path=\"C:/Wizard-Vicuna-13B-Uncensored.gguf.bin\", n_threads=4, n_gpu_layers=-1, temperature=0, verbose=True, n_ctx=2048)\r\n\r\n    service_context = ServiceContext.from_defaults(\r\n        llm_predictor=llm_predictor,\r\n        embed_model=embedding_llm\r\n    )\r\n    set_global_service_context(service_context)\r\n\r\n    index = loadData()\r\n\r\n    query_engine = index.as_query_engine(\r\n        include_text=True, \r\n        response_mode=\"tree_summarize\",\r\n        embedding_mode='hybrid',\r\n        similarity_top_k=5\r\n    )\r\n    response = query_engine.query(\"Tell me about Starlord\") #CRASHES HERE\r\n    print(response)\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\nTraceback (most recent call last):\r\n  File \"C:\\nebula-test.py\", line 117, in <module>\r\n    response = query_engine.query(\"Tell me about Starlord\")\r\n  File \"C:\\Users\\Ole\\anaconda3\\envs\\aitest\\lib\\site-packages\\llama_index\\indices\\query\\base.py\", line 32, in query\r\n    return self._query(str_or_query_bundle)\r\n    nodes = self.retrieve(query_bundle)\r\n  File \"C:\\Users\\Ole\\anaconda3\\envs\\aitest\\lib\\site-packages\\llama_index\\query_engine\\retriever_query_engine.py\", line 128, in retrieve\r\n    nodes = self._retriever.retrieve(query_bundle)\r\n  File \"C:\\Users\\Ole\\anaconda3\\envs\\aitest\\lib\\site-packages\\llama_index\\indices\\base_retriever.py\", line 34, in retrieve\r\n    return self._retrieve(str_or_query_bundle)\r\n  File \"C:\\Users\\Ole\\anaconda3\\envs\\aitest\\lib\\site-packages\\llama_index\\indices\\knowledge_graph\\retrievers.py\", line 772, in _retrieve\r\n  File \"C:\\Users\\Ole\\anaconda3\\envs\\aitest\\lib\\site-packages\\llama_index\\indices\\knowledge_graph\\retrievers.py\", line 711, in _retrieve_keyword\r\n    entities = self._get_entities(query_bundle.query_str)\r\n  File \"C:\\Users\\Ole\\anaconda3\\envs\\aitest\\lib\\site-packages\\llama_index\\indices\\knowledge_graph\\retrievers.py\", line 576, in _get_entities\r\n    entities = self._process_entities(\r\n  File \"C:\\Users\\Ole\\anaconda3\\envs\\aitest\\lib\\site-packages\\llama_index\\indices\\knowledge_graph\\retrievers.py\", line 507, in _process_entities\r\n    response = self._service_context.llm_predictor.predict(\r\n  File \"C:\\Users\\Ole\\anaconda3\\envs\\aitest\\lib\\site-packages\\langchain\\llms\\base.py\", line 910, in predict\r\n    return self(text, stop=_stop, **kwargs)\r\n  File \"C:\\Users\\Ole\\anaconda3\\envs\\aitest\\lib\\site-packages\\langchain\\llms\\base.py\", line 864, in __call__\r\n    raise ValueError(\r\nValueError: Argument `prompt` is expected to be a string. Instead found <class 'llama_index.prompts.base.PromptTemplate'>. If you want to run the LLM on multiple prompts, use `generate` instead.\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8533/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8533/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8532",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8532/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8532/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8532/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8532",
        "id": 1965892341,
        "node_id": "PR_kwDOIWuq585d_iHl",
        "number": 8532,
        "title": "Docs error correction.",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-27T17:07:02Z",
        "updated_at": "2023-10-27T17:15:39Z",
        "closed_at": "2023-10-27T17:15:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8532",
            "html_url": "https://github.com/run-llama/llama_index/pull/8532",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8532.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8532.patch",
            "merged_at": "2023-10-27T17:15:39Z"
        },
        "body": "# Description\r\n\r\nThis PR corrects the unnecessary visibility of 'Download Data' and 'Load Data' in certain areas of documentation.\r\n\r\n![image](https://github.com/run-llama/llama_index/assets/12198101/9c9db03b-cc27-49f6-950d-c4995999be7b)\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8532/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8532/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8531",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8531/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8531/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8531/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8531",
        "id": 1965866169,
        "node_id": "PR_kwDOIWuq585d_cXe",
        "number": 8531,
        "title": ":bug: fixed async add",
        "user": {
            "login": "jordanparker6",
            "id": 29700471,
            "node_id": "MDQ6VXNlcjI5NzAwNDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29700471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordanparker6",
            "html_url": "https://github.com/jordanparker6",
            "followers_url": "https://api.github.com/users/jordanparker6/followers",
            "following_url": "https://api.github.com/users/jordanparker6/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordanparker6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordanparker6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordanparker6/subscriptions",
            "organizations_url": "https://api.github.com/users/jordanparker6/orgs",
            "repos_url": "https://api.github.com/users/jordanparker6/repos",
            "events_url": "https://api.github.com/users/jordanparker6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordanparker6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-27T16:47:23Z",
        "updated_at": "2023-10-27T22:08:55Z",
        "closed_at": "2023-10-27T22:08:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8531",
            "html_url": "https://github.com/run-llama/llama_index/pull/8531",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8531.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8531.patch",
            "merged_at": "2023-10-27T22:08:55Z"
        },
        "body": "# Description\r\n\r\nThe async method of the `VectorStoreIndex` is not leveraging the `async_add` functionality.\r\n\r\nIn the case of the PGVectorStore this can be a noticeable performance improvement.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n-  I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8531/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8531/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8530",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8530/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8530/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8530/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8530",
        "id": 1965779880,
        "node_id": "PR_kwDOIWuq585d_Ji3",
        "number": 8530,
        "title": "Fix #7765: Fix exceed context length error",
        "user": {
            "login": "rchan26",
            "id": 44200705,
            "node_id": "MDQ6VXNlcjQ0MjAwNzA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/44200705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rchan26",
            "html_url": "https://github.com/rchan26",
            "followers_url": "https://api.github.com/users/rchan26/followers",
            "following_url": "https://api.github.com/users/rchan26/following{/other_user}",
            "gists_url": "https://api.github.com/users/rchan26/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rchan26/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rchan26/subscriptions",
            "organizations_url": "https://api.github.com/users/rchan26/orgs",
            "repos_url": "https://api.github.com/users/rchan26/repos",
            "events_url": "https://api.github.com/users/rchan26/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rchan26/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-27T15:44:15Z",
        "updated_at": "2023-11-01T05:50:27Z",
        "closed_at": "2023-11-01T05:50:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8530",
            "html_url": "https://github.com/run-llama/llama_index/pull/8530",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8530.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8530.patch",
            "merged_at": "2023-11-01T05:50:26Z"
        },
        "body": "# Description\r\n\r\nI was getting errors of exceeding my context window (see #7765) after a few messages and after some discussion, it seemed like the `ChatMemoryBuffer` is meant to guard against this and it does actually start to forget some history after a while. But a problem will occur if the system prompt (in the prefix-messages) is quite long and in addition to the chat history, we can actually get an error regarding exceeding the context window.\r\n\r\nI should also add that the `messages_to_prompts` always expect that we have alternating `user` and `assistant` interactions and hence I wrote in a line so that when we are forgetting chat history, we delete pairs of messages so we still have these alternating messages. It's also possible to get errors if we forget chat history but we have the chat history starting with `assistant` messages in the chat history.\r\n\r\nIn this PR, I made some changes to the `ChatMemoryBuffer.get()` method by allowing you to pass in an `initial_token_count` argument which represents a kind of amount of context window to keep available and this gets added to each time we assess the token count of the chat history.\r\n\r\nI have made changes to the `context` and `simple` chat engines where we first compute the number of tokens in the prefix-messages and pass that into the `ChatMemoryBuffer.get()` method and this ensures that we do not have a resulting `all_messages` which exceeds the length.\r\n\r\nHappy to add some tests if feel necessary.\r\n\r\nFixes #7765 (this is currently closed, but I think it's still an open issue actually - see https://github.com/run-llama/llama_index/issues/7765#issuecomment-1783084918)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8530/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8530/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8529",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8529/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8529/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8529/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8529",
        "id": 1965720705,
        "node_id": "PR_kwDOIWuq585d-8sy",
        "number": 8529,
        "title": "[Bug] Patch Clarifai classes",
        "user": {
            "login": "isaac-chung",
            "id": 48971969,
            "node_id": "MDQ6VXNlcjQ4OTcxOTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/48971969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isaac-chung",
            "html_url": "https://github.com/isaac-chung",
            "followers_url": "https://api.github.com/users/isaac-chung/followers",
            "following_url": "https://api.github.com/users/isaac-chung/following{/other_user}",
            "gists_url": "https://api.github.com/users/isaac-chung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/isaac-chung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/isaac-chung/subscriptions",
            "organizations_url": "https://api.github.com/users/isaac-chung/orgs",
            "repos_url": "https://api.github.com/users/isaac-chung/repos",
            "events_url": "https://api.github.com/users/isaac-chung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/isaac-chung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-27T15:08:06Z",
        "updated_at": "2023-10-30T08:51:04Z",
        "closed_at": "2023-10-30T06:13:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8529",
            "html_url": "https://github.com/run-llama/llama_index/pull/8529",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8529.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8529.patch",
            "merged_at": "2023-10-30T06:13:45Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\n\ud83d\udc49 Running the example notebook as is will encounter this error.\r\n![image](https://github.com/run-llama/llama_index/assets/48971969/bdcb92cb-59e6-44c2-aee0-e0b85ecfcbf7)\r\nThis is caused by the parameter `model_name` being None when it's passed into `super.__init__()`.\r\n\r\n\ud83d\udd27 The fix here is to assign the parameter to the model ID if it is instantiated by model url, and move the check later.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8529/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8529/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8528",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8528/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8528/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8528/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8528",
        "id": 1965471790,
        "node_id": "PR_kwDOIWuq585d-GBb",
        "number": 8528,
        "title": "fix retries for bedrock llm",
        "user": {
            "login": "neil-botelho",
            "id": 116251564,
            "node_id": "U_kgDOBu3brA",
            "avatar_url": "https://avatars.githubusercontent.com/u/116251564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neil-botelho",
            "html_url": "https://github.com/neil-botelho",
            "followers_url": "https://api.github.com/users/neil-botelho/followers",
            "following_url": "https://api.github.com/users/neil-botelho/following{/other_user}",
            "gists_url": "https://api.github.com/users/neil-botelho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neil-botelho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neil-botelho/subscriptions",
            "organizations_url": "https://api.github.com/users/neil-botelho/orgs",
            "repos_url": "https://api.github.com/users/neil-botelho/repos",
            "events_url": "https://api.github.com/users/neil-botelho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neil-botelho/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-27T12:54:53Z",
        "updated_at": "2023-10-30T06:15:58Z",
        "closed_at": "2023-10-30T06:15:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8528",
            "html_url": "https://github.com/run-llama/llama_index/pull/8528",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8528.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8528.patch",
            "merged_at": "2023-10-30T06:15:57Z"
        },
        "body": "# Description\r\nThe retry creation decorator was previously unreachable due to an early return. Additionally, deprecated bedrock exceptions were being used in the retry decorator. This PR fixes both\r\n\r\n\r\n# Type of Change\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8528/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8527",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8527/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8527/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8527/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8527",
        "id": 1965455764,
        "node_id": "I_kwDOIWuq5851JnmU",
        "number": 8527,
        "title": "[Bug]: ValueError: Job ftjob-q9473swriULcraETTpC4HbPg does not have a finetuned model id ready yet.",
        "user": {
            "login": "BadrinathMJ",
            "id": 99330540,
            "node_id": "U_kgDOBeup7A",
            "avatar_url": "https://avatars.githubusercontent.com/u/99330540?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BadrinathMJ",
            "html_url": "https://github.com/BadrinathMJ",
            "followers_url": "https://api.github.com/users/BadrinathMJ/followers",
            "following_url": "https://api.github.com/users/BadrinathMJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/BadrinathMJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BadrinathMJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BadrinathMJ/subscriptions",
            "organizations_url": "https://api.github.com/users/BadrinathMJ/orgs",
            "repos_url": "https://api.github.com/users/BadrinathMJ/repos",
            "events_url": "https://api.github.com/users/BadrinathMJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BadrinathMJ/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-27T12:45:18Z",
        "updated_at": "2023-10-30T08:59:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nWhen I tried to use PDF other than mentioned in documentation. It is throwing ValueError: Job ftjob-q9473swriULcraETTpC4HbPg does not have a finetuned model id ready yet. I have referred this documentation link \r\nhttps://gpt-index.readthedocs.io/en/latest/examples/finetuning/knowledge/finetune_knowledge.html#fine-tuning-to-memorize-knowledge.\r\n\r\n### Version\r\n\r\n0.8.50\r\n\r\n### Steps to Reproduce\r\n\r\n`fp = open(\"data/qa_pairs_train.jsonl\", \"r\")\r\nout_fp = open(\"data/qa_pairs_openai.jsonl\", \"w\")\r\n# TODO: try with different system prompts\r\nsystem_prompt = {\r\n    \"role\": \"system\",\r\n    \"content\": (\r\n        \"You are a helpful assistant helping to answer questions about the\"\r\n        \" Llama 2 paper.\"\r\n    ),\r\n}\r\nfor line in fp:\r\n    qa_pair = json.loads(line)\r\n    user_prompt = {\"role\": \"user\", \"content\": qa_pair[\"query\"]}\r\n    assistant_prompt = {\"role\": \"assistant\", \"content\": qa_pair[\"response\"]}\r\n    out_dict = {\r\n        \"messages\": [system_prompt, user_prompt, assistant_prompt],\r\n    }\r\n    out_fp.write(json.dumps(out_dict) + \"\\n\")\r\nfrom llama_index.finetuning import OpenAIFinetuneEngine\r\n\r\nfinetune_engine = OpenAIFinetuneEngine(\r\n    \"gpt-3.5-turbo\",\r\n    \"data/qa_pairs_openai.jsonl\",\r\n    # start_job_id=\"<start-job-id>\"  # if you have an existing job, can specify id here\r\n)\r\n\r\nfinetune_engine.finetune()\r\n`\r\n\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n----> [1](vscode-notebook-cell:/d%3A/Data_Llama2/FineTuning_with_OpenAI/fine_tuning_gpt3.5_turbo2.ipynb#X45sZmlsZQ%3D%3D?line=0) ft_model = finetune_engine.get_finetuned_model()\r\n\r\nFile [d:\\Users\\Mayur1\\envs\\llama\\lib\\site-packages\\llama_index\\finetuning\\openai\\base.py:112](file:///D:/Users/Mayur1/envs/llama/lib/site-packages/llama_index/finetuning/openai/base.py:112), in OpenAIFinetuneEngine.get_finetuned_model(self, **model_kwargs)\r\n    109 model_id = current_job[\"fine_tuned_model\"]\r\n    111 if model_id is None:\r\n--> 112     raise ValueError(\r\n    113         f\"Job {job_id} does not have a finetuned model id ready yet.\"\r\n    114     )\r\n    115 if status != \"succeeded\":\r\n    116     raise ValueError(f\"Job {job_id} has status {status}, cannot get model\")\r\n\r\nValueError: Job ftjob-q9473swriULcraETTpC4HbPg does not have a finetuned model id ready yet.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8527/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8527/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8526",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8526/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8526/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8526/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8526",
        "id": 1965308122,
        "node_id": "PR_kwDOIWuq585d9h6j",
        "number": 8526,
        "title": "fix: testing instruction in `CONTRIBUTING.md`",
        "user": {
            "login": "david20571015",
            "id": 51911434,
            "node_id": "MDQ6VXNlcjUxOTExNDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david20571015",
            "html_url": "https://github.com/david20571015",
            "followers_url": "https://api.github.com/users/david20571015/followers",
            "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
            "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
            "organizations_url": "https://api.github.com/users/david20571015/orgs",
            "repos_url": "https://api.github.com/users/david20571015/repos",
            "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david20571015/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-27T11:18:29Z",
        "updated_at": "2023-10-27T15:56:57Z",
        "closed_at": "2023-10-27T15:40:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8526",
            "html_url": "https://github.com/run-llama/llama_index/pull/8526",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8526.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8526.patch",
            "merged_at": "2023-10-27T15:40:52Z"
        },
        "body": "# Description\r\n\r\nFixes #8508 (cause by #8501)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8526/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8526/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8525",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8525/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8525/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8525/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8525",
        "id": 1965250408,
        "node_id": "PR_kwDOIWuq585d9VUO",
        "number": 8525,
        "title": "Update pull request template with google colab support inclusion",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-27T10:41:04Z",
        "updated_at": "2023-10-28T17:12:48Z",
        "closed_at": "2023-10-28T17:12:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8525",
            "html_url": "https://github.com/run-llama/llama_index/pull/8525",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8525.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8525.patch",
            "merged_at": "2023-10-28T17:12:47Z"
        },
        "body": "# Description\r\n\r\nAdded Google colab support as a suggested checklist in the pull request template.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8525/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8525/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8524",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8524",
        "id": 1965127817,
        "node_id": "I_kwDOIWuq5851IXiJ",
        "number": 8524,
        "title": "[Question]: Why are meaningless words automatically filled in before the prompt?",
        "user": {
            "login": "yixuantt",
            "id": 102734371,
            "node_id": "U_kgDOBh-aIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/102734371?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yixuantt",
            "html_url": "https://github.com/yixuantt",
            "followers_url": "https://api.github.com/users/yixuantt/followers",
            "following_url": "https://api.github.com/users/yixuantt/following{/other_user}",
            "gists_url": "https://api.github.com/users/yixuantt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yixuantt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yixuantt/subscriptions",
            "organizations_url": "https://api.github.com/users/yixuantt/orgs",
            "repos_url": "https://api.github.com/users/yixuantt/repos",
            "events_url": "https://api.github.com/users/yixuantt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yixuantt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-27T09:28:28Z",
        "updated_at": "2023-10-27T09:44:30Z",
        "closed_at": "2023-10-27T09:42:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHere is my custom prompt.\r\n```\r\nqa_template = (\r\n    \"Below is an instruction that describes a task, paired with further context. \"\r\n    \"Write a response that appropriately completes the request.\\n\\n\"\r\n    \"Instruction:\\n{query_str}\\n\\n Input:\\n{context_str}\\n\\n Response:\"\r\n)\r\n\r\nrefine_template_str = (\r\n    \"Below is an instruction that describes a task, paired with further context. \"\r\n    \"Write a response that appropriately completes the request.\\n\\n\"\r\n    \"Instruction:\\n{query_str}\\n\\n Input:\\n{context_str}\\n\\n Response:\"\r\n)\r\nrefine_template = PromptTemplate(refine_template_str)\r\nqa_template = PromptTemplate(qa_template)\r\n```\r\n\r\nAnd here is the generated prompt: \r\n```\r\nA chat between a curious human and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the human's questions.\\n### Human: Got any creative ideas for a 10 year old\u2019s birthday?\\n### Assistant: Of course! Here are some creative ideas fora 10-year-old's birthday party:\\n1. Treasure Hunt: Organize a treasure hunt in your backyard or nearby park. Create clues and riddles for the kids to solve, leading them to hidden treasures and surprises.\\n2. Science Party: Plan a science-themed party wherekids can engage in fun and interactive experiments. You can set up different stations with activities like making slime, erupting volcanoes, or creating simple chemical reactions.\\n3. Outdoor Movie Night: Set up a backyard movie night with a projector and alarge screen or white sheet. Create a cozy seating area with blankets and pillows, and serve popcorn and snacks while the kids enjoy a favorite movie under the stars.\\n4. DIY Crafts Party: Arrange a craft party where kids can unleash their creativity. Provide a variety of craft supplies like beads, paints, and fabrics, and let them create their own unique masterpieces to take home asparty favors.\\n5. Sports Olympics: Host a mini Olympics event with various sports and games. Set up different stations for activities like sack races, relay races, basketball shooting, and obstacle courses. Give out medals or certificates to the participants.\\n6. Cooking Party: Have a cooking-themed party where the kids can prepare their own mini pizzas, cupcakes, or cookies. Providetoppings, frosting, and decorating supplies, and let them get hands-on in the kitchen.\\n7. Superhero Training Camp: Create a superhero-themed party where the kids can engage in fun training activities. Set up an obstacle course, have them design their own superhero capes or masks, and organize superhero-themed games and challenges.\\n8. Outdoor Adventure: Plan an outdoor adventure party at a local park or nature reserve. Arrange activities like hiking, nature scavenger hunts, or a picnic with games. Encourage exploration and appreciation for the outdoors.\\nRemember to tailor the activities to the birthday child's interests and preferences. Have a great celebration!\\n### Human: ors.\\nRemember to tailor the activities to the birthday child's interests and preferences. Have a great celebration!\\n### Human: Below is an instruction that describes a task, paired with further context. Write a response that appropriately completes the request.\\n\\nInstruction:\\nSummarize the text....\r\n\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8523",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8523",
        "id": 1965041323,
        "node_id": "I_kwDOIWuq5851ICar",
        "number": 8523,
        "title": "[Bug][Retriever]: ValueError: You must provide either query embeddings or query texts, but not both",
        "user": {
            "login": "vincentteyssier",
            "id": 16136533,
            "node_id": "MDQ6VXNlcjE2MTM2NTMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/16136533?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vincentteyssier",
            "html_url": "https://github.com/vincentteyssier",
            "followers_url": "https://api.github.com/users/vincentteyssier/followers",
            "following_url": "https://api.github.com/users/vincentteyssier/following{/other_user}",
            "gists_url": "https://api.github.com/users/vincentteyssier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vincentteyssier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vincentteyssier/subscriptions",
            "organizations_url": "https://api.github.com/users/vincentteyssier/orgs",
            "repos_url": "https://api.github.com/users/vincentteyssier/repos",
            "events_url": "https://api.github.com/users/vincentteyssier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vincentteyssier/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-10-27T08:36:49Z",
        "updated_at": "2023-11-08T09:07:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nchromadb==0.4.14\r\nllama_index==0.8.45.post1\r\n\r\n```\r\nimport chromadb\r\nfrom chromadb.config import Settings\r\nfrom llama_index.vector_stores import ChromaVectorStore\r\n...\r\n\r\ndb = chromadb.PersistentClient(path=\"./chroma_db\", settings=Settings(anonymized_telemetry=False))\r\nchroma_collection = db.get_or_create_collection(\"cc\")\r\nvector_store= ChromaVectorStore(chroma_collection=chroma_collection)\r\n\r\nres = vector_store.query(\r\n        VectorStoreQuery(\r\n            query_embedding=None, \r\n            similarity_top_k=2, \r\n            doc_ids=None, \r\n            node_ids=None, \r\n            query_str='', \r\n            output_fields=None, \r\n            embedding_field=None, \r\n            mode=VectorStoreQueryMode.DEFAULT, \r\n            alpha=None, \r\n            filters=MetadataFilters(filters=[ExactMatchFilter(key='location', value='France')]), \r\n            mmr_threshold=None, \r\n            sparse_top_k=None\r\n        )\r\n    )\r\n```\r\n\r\nFor info this is the standard query generated by the autoretriever function:\r\n```\r\nretriever = VectorIndexAutoRetriever(index, vector_store_info=vector_store_info)\r\nresponse = retriever.retrieve(input)\r\n```\r\n\r\nI try to send that vectorstorequery to Chroma but it fails with the following.\r\nI've tried adding text in the query_str field, or remove most of the fields including removing query_embedding, but nothing works and I get the following error:\r\n\r\n_Error:\r\n\"  File \"//venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 200, in query\r\n    raise ValueError(\r\nValueError: You must provide either query embeddings or query texts, but not both\"_\r\n\r\n### Version\r\n\r\n0.8.45.post1\r\n\r\n### Steps to Reproduce\r\n\r\nRun code above\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n_Error:\r\n\"  File \"//venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 200, in query\r\n    raise ValueError(\r\nValueError: You must provide either query embeddings or query texts, but not both\"_\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8522",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8522/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8522/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8522/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8522",
        "id": 1964894925,
        "node_id": "I_kwDOIWuq5851HerN",
        "number": 8522,
        "title": "[Question]: \u8bf7\u95ee\u9488\u5bf9\u5386\u53f2\u6570\u636e\u6211\u8be5\u5982\u4f55\u5feb\u901f\u7684\u751f\u6210\u6458\u8981\u548c\u5173\u952e\u8bcd\uff0c\u4ee5\u4fbf\u6211\u540e\u7eed\u80fd\u589e\u91cf\u5904\u7406",
        "user": {
            "login": "rzechen",
            "id": 24729413,
            "node_id": "MDQ6VXNlcjI0NzI5NDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24729413?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rzechen",
            "html_url": "https://github.com/rzechen",
            "followers_url": "https://api.github.com/users/rzechen/followers",
            "following_url": "https://api.github.com/users/rzechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/rzechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rzechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rzechen/subscriptions",
            "organizations_url": "https://api.github.com/users/rzechen/orgs",
            "repos_url": "https://api.github.com/users/rzechen/repos",
            "events_url": "https://api.github.com/users/rzechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rzechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-27T07:02:06Z",
        "updated_at": "2023-10-27T07:11:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n\u751f\u6210\u5411\u91cf\u5b58\u50a8\u6548\u7387\u8fd8\u7b97\u53ef\u4ee5\uff0c\u5386\u53f2\u6570\u636e\u751f\u6210\u6458\u8981\u548c\u5173\u952e\u8bcd\uff0c\u975e\u5e38\u975e\u5e38\u6162\uff0c\u6211\u7684\u5386\u53f2\u6570\u636e\u5927\u6982\u67093w\u6761\u6570\u636e",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8522/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8522/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8521",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8521/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8521/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8521/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8521",
        "id": 1964849304,
        "node_id": "PR_kwDOIWuq585d7-km",
        "number": 8521,
        "title": "Fix : VectorStore\u2019s QueryResult always returns saved Node as TextNode",
        "user": {
            "login": "jacepark12",
            "id": 11798004,
            "node_id": "MDQ6VXNlcjExNzk4MDA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11798004?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacepark12",
            "html_url": "https://github.com/jacepark12",
            "followers_url": "https://api.github.com/users/jacepark12/followers",
            "following_url": "https://api.github.com/users/jacepark12/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacepark12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacepark12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacepark12/subscriptions",
            "organizations_url": "https://api.github.com/users/jacepark12/orgs",
            "repos_url": "https://api.github.com/users/jacepark12/repos",
            "events_url": "https://api.github.com/users/jacepark12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacepark12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-27T06:24:59Z",
        "updated_at": "2023-10-30T06:29:08Z",
        "closed_at": "2023-10-30T06:29:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8521",
            "html_url": "https://github.com/run-llama/llama_index/pull/8521",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8521.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8521.patch",
            "merged_at": "2023-10-30T06:29:07Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nThe Problem:\r\n* Currently, postgres vector store always returns nodes as `TextNode`. When an IndexNode is added to the vector store, although the IndexNode is stored as raw JSON successfully, it is always returned as a `TextNode`.\r\n* While I have identified this problem using postgres vector store, I assume other vector stores behave similarly, as the function from `vector_stores.utils` consistently returns `TextNode`.\r\n* This problem limits the use of the vector store when implementing advanced RAG strategies, such as handling tabular data with `RecursiveRetriever` or using `UnstructuredElementNodeParser`, as it returns both TextNode and `IndexNode`.\r\n\r\nThe FIX:\r\n* When saving a node to the vector store, save the node type as `_node_type` along with `_node_content`.\r\n* If `_node_type` exists, check `_node_type` and return the corresponding Node object.\r\n\r\nFixes #8240 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8521/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8521/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8520",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8520/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8520/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8520/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8520",
        "id": 1964792960,
        "node_id": "I_kwDOIWuq5851HFyA",
        "number": 8520,
        "title": "[Bug]: IndexError: list index out of range",
        "user": {
            "login": "BadrinathMJ",
            "id": 99330540,
            "node_id": "U_kgDOBeup7A",
            "avatar_url": "https://avatars.githubusercontent.com/u/99330540?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BadrinathMJ",
            "html_url": "https://github.com/BadrinathMJ",
            "followers_url": "https://api.github.com/users/BadrinathMJ/followers",
            "following_url": "https://api.github.com/users/BadrinathMJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/BadrinathMJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BadrinathMJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BadrinathMJ/subscriptions",
            "organizations_url": "https://api.github.com/users/BadrinathMJ/orgs",
            "repos_url": "https://api.github.com/users/BadrinathMJ/repos",
            "events_url": "https://api.github.com/users/BadrinathMJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BadrinathMJ/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-27T05:27:19Z",
        "updated_at": "2023-10-29T21:51:56Z",
        "closed_at": "2023-10-29T21:51:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhile loading pdf document using SimpleDirectoryReader it throws IndexError: list index out of range for some of the pdf documents. It works some pdf documents and not working for few of the documents.\r\n\r\nfrom llama_index import SimpleDirectoryReader,ServiceContext\r\nfrom llama_index.llms import OpenAI\r\n\r\nfrom llama_index.evaluation import DatasetGenerator\r\n\r\n\r\ndocuments = SimpleDirectoryReader(input_files = ['../data/judgement3.pdf']).load_data()\r\n\r\n#shffle documents\r\nimport random\r\n\r\nrandom.seed(42)\r\nrandom.shuffle(documents)\r\n\r\ngpt_35_context = ServiceContext.from_defaults(llm=OpenAI(model=\"gpt-3.5-turbo\", temperature=0))\n\n### Version\n\n0.8.50\n\n### Steps to Reproduce\n\n1. Load the necessary dependencies \r\n!pip install llama-index pypdf sentence-transformers ragas\r\n2. Run the following code snippet with trial no. of different pdf documents. It will throw the IndexError\r\n\r\n`from llama_index import SimpleDirectoryReader,ServiceContext\r\nfrom llama_index.llms import OpenAI\r\n\r\nfrom llama_index.evaluation import DatasetGenerator\r\n\r\n\r\ndocuments = SimpleDirectoryReader(input_files = ['../data/judgement3.pdf']).load_data()\r\n\r\n#shffle documents\r\nimport random\r\n\r\nrandom.seed(42)\r\nrandom.shuffle(documents)\r\n\r\ngpt_35_context = ServiceContext.from_defaults(llm=OpenAI(model=\"gpt-3.5-turbo\", temperature=0))`\n\n### Relevant Logs/Tracbacks\n\n```shell\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\nd:\\Data_Llama2\\FineTuning_with_OpenAI\\fine_tuning_gpt3.5_turbo1.ipynb Cell 4 line 7\r\n      2 from llama_index.llms import OpenAI\r\n      4 from llama_index.evaluation import DatasetGenerator\r\n----> 7 documents = SimpleDirectoryReader(input_files = ['D:\\Data_Llama2\\FineTuning_with_OpenAI\\data\\judgement3.pdf']).load_data()\r\n      9 #shffle documents\r\n     10 import random\r\n\r\nFile d:\\Users\\Mayur1\\envs\\llama\\lib\\site-packages\\llama_index\\readers\\file\\base.py:204, in SimpleDirectoryReader.load_data(self)\r\n    202     self.file_extractor[file_suffix] = reader_cls()\r\n    203 reader = self.file_extractor[file_suffix]\r\n--> 204 docs = reader.load_data(input_file, extra_info=metadata)\r\n    206 # iterate over docs if needed\r\n    207 if self.filename_as_id:\r\n\r\nFile d:\\Users\\Mayur1\\envs\\llama\\lib\\site-packages\\llama_index\\readers\\file\\docs_reader.py:39, in PDFReader.load_data(self, file, extra_info)\r\n     36 docs = []\r\n     37 for page in range(num_pages):\r\n     38     # Extract the text from the page\r\n---> 39     page_text = pdf.pages[page].extract_text()\r\n     40     page_label = pdf.page_labels[page]\r\n     42     metadata = {\"page_label\": page_label, \"file_name\": file.name}\r\n\r\nFile d:\\Users\\Mayur1\\envs\\llama\\lib\\site-packages\\pypdf\\_page.py:2268, in PageObject.extract_text(self, Tj_sep, TJ_sep, orientations, space_width, visitor_operand_before, visitor_operand_after, visitor_text, *args)\r\n...\r\n--> 480     if words[3] != b\"put\":\r\n    481         continue\r\n    482     try:\r\n\r\nIndexError: list index out of range\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8520/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8520/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8519",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8519/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8519/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8519/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8519",
        "id": 1964766152,
        "node_id": "PR_kwDOIWuq585d7svJ",
        "number": 8519,
        "title": "Add import LongLLMLinguaPostprocessor  for LongLLMLingua.ipynb",
        "user": {
            "login": "giaosudau",
            "id": 539238,
            "node_id": "MDQ6VXNlcjUzOTIzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/539238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giaosudau",
            "html_url": "https://github.com/giaosudau",
            "followers_url": "https://api.github.com/users/giaosudau/followers",
            "following_url": "https://api.github.com/users/giaosudau/following{/other_user}",
            "gists_url": "https://api.github.com/users/giaosudau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giaosudau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giaosudau/subscriptions",
            "organizations_url": "https://api.github.com/users/giaosudau/orgs",
            "repos_url": "https://api.github.com/users/giaosudau/repos",
            "events_url": "https://api.github.com/users/giaosudau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giaosudau/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-27T04:55:16Z",
        "updated_at": "2023-10-27T07:39:57Z",
        "closed_at": "2023-10-27T07:03:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8519",
            "html_url": "https://github.com/run-llama/llama_index/pull/8519",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8519.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8519.patch",
            "merged_at": "2023-10-27T07:03:38Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue) **NameError: name 'LongLLMLinguaPostprocessor' is not defined**\r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8519/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8519/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8518",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8518/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8518/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8518/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8518",
        "id": 1964510001,
        "node_id": "PR_kwDOIWuq585d62Xw",
        "number": 8518,
        "title": "fix: add the needed CondenseQuestionChatEngine import in the usage_pa\u2026",
        "user": {
            "login": "praharshbhatt",
            "id": 30700808,
            "node_id": "MDQ6VXNlcjMwNzAwODA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/30700808?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/praharshbhatt",
            "html_url": "https://github.com/praharshbhatt",
            "followers_url": "https://api.github.com/users/praharshbhatt/followers",
            "following_url": "https://api.github.com/users/praharshbhatt/following{/other_user}",
            "gists_url": "https://api.github.com/users/praharshbhatt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/praharshbhatt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/praharshbhatt/subscriptions",
            "organizations_url": "https://api.github.com/users/praharshbhatt/orgs",
            "repos_url": "https://api.github.com/users/praharshbhatt/repos",
            "events_url": "https://api.github.com/users/praharshbhatt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/praharshbhatt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-26T23:19:51Z",
        "updated_at": "2023-10-27T15:29:30Z",
        "closed_at": "2023-10-27T15:29:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8518",
            "html_url": "https://github.com/run-llama/llama_index/pull/8518",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8518.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8518.patch",
            "merged_at": "2023-10-27T15:29:29Z"
        },
        "body": "\u2026ttern docs\r\n\r\n# Description\r\nadd `from llama_index.chat_engine.condense_question import CondenseQuestionChatEngine`, as it is needed to run the given example.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8518/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8518/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8517",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8517/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8517/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8517/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8517",
        "id": 1964496851,
        "node_id": "I_kwDOIWuq5851F9fT",
        "number": 8517,
        "title": "[Bug]: custom prompt not working for sql query as expected , it's not able to pick the instructed column ",
        "user": {
            "login": "akashkumar398",
            "id": 24894328,
            "node_id": "MDQ6VXNlcjI0ODk0MzI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24894328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akashkumar398",
            "html_url": "https://github.com/akashkumar398",
            "followers_url": "https://api.github.com/users/akashkumar398/followers",
            "following_url": "https://api.github.com/users/akashkumar398/following{/other_user}",
            "gists_url": "https://api.github.com/users/akashkumar398/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akashkumar398/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akashkumar398/subscriptions",
            "organizations_url": "https://api.github.com/users/akashkumar398/orgs",
            "repos_url": "https://api.github.com/users/akashkumar398/repos",
            "events_url": "https://api.github.com/users/akashkumar398/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akashkumar398/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-26T23:01:51Z",
        "updated_at": "2023-10-29T22:47:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen formulating a query, the SQL query encounters difficulties in comprehending the requested column from the prompt\r\n\r\nselecting non relevant column \n\n### Version\n\nlatest \n\n### Steps to Reproduce\n\nllm = OpenAI(temperature=0.1, model=\"gpt-3.5-turbo\")\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n  llm=llm,callback_manager=callback_manager\r\n)\r\n\r\nfrom llama_index.indices.struct_store.sql_query import NLSQLTableQueryEngine\r\n\r\nquery_engine = NLSQLTableQueryEngine(\r\n    sql_database=sql_database,\r\n    service_context=service_context\r\n)\r\n\r\n\r\ncustom_prompt = \"\"\"\r\nfollow the instructions if needed:\r\n    When given an inquiry of id, select the 'status' column\"\r\n\"\"\"\r\n\r\n\r\ntoken_counter.reset_counts()\r\nquery_str = \"What is the inqiry of id 1234?\"\r\nresponse = query_engine.query(custom_prompt + \" \" + query_str)\r\nprint(response.response)\r\nprint('token_counter:',token_counter.total_llm_token_count)\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8517/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8517/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8516",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8516/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8516/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8516/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8516",
        "id": 1964471989,
        "node_id": "I_kwDOIWuq5851F3a1",
        "number": 8516,
        "title": "How is DataGenerator working ?",
        "user": {
            "login": "snassimr",
            "id": 6830626,
            "node_id": "MDQ6VXNlcjY4MzA2MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6830626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snassimr",
            "html_url": "https://github.com/snassimr",
            "followers_url": "https://api.github.com/users/snassimr/followers",
            "following_url": "https://api.github.com/users/snassimr/following{/other_user}",
            "gists_url": "https://api.github.com/users/snassimr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snassimr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snassimr/subscriptions",
            "organizations_url": "https://api.github.com/users/snassimr/orgs",
            "repos_url": "https://api.github.com/users/snassimr/repos",
            "events_url": "https://api.github.com/users/snassimr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snassimr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-26T22:39:33Z",
        "updated_at": "2023-10-27T19:36:17Z",
        "closed_at": "2023-10-27T19:36:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi ,\r\n\r\nI wonder what all sub-tools are used by DataGenerator and should be defined in ServiceContext ?\r\n\r\nFor example , I saw this snippet below and looks like it's possible to define custom llm \r\n\r\ndocuments = SimpleDirectoryReader('./data').load_data()\r\nfrom llama_index.evaluation import DatasetGenerator\r\ndata_generator = DatasetGenerator.from_documents(documents, service_context=service_context)\r\neval_questions = data_generator.generate_questions_from_nodes()\r\n\r\nBut ServiceContext can contain other sub-definitions : SimpleNodeParser, Embed Model and etc.\r\n\r\nHow I know what should be define for DataGenerator ? Any reference is more than welcome.\r\n\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8516/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8516/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8515",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8515/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8515/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8515/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8515",
        "id": 1964460188,
        "node_id": "PR_kwDOIWuq585d6rgr",
        "number": 8515,
        "title": "[version] bump to 0.8.53.post3",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-26T22:27:59Z",
        "updated_at": "2023-10-30T03:30:43Z",
        "closed_at": "2023-10-30T03:30:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8515",
            "html_url": "https://github.com/run-llama/llama_index/pull/8515",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8515.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8515.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8515/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8515/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8514",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8514/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8514/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8514/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8514",
        "id": 1964448580,
        "node_id": "I_kwDOIWuq5851FxtE",
        "number": 8514,
        "title": "[Question]: What are the different reranking modes available while using multiple retrievers",
        "user": {
            "login": "amitguptadumka",
            "id": 39477047,
            "node_id": "MDQ6VXNlcjM5NDc3MDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/39477047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitguptadumka",
            "html_url": "https://github.com/amitguptadumka",
            "followers_url": "https://api.github.com/users/amitguptadumka/followers",
            "following_url": "https://api.github.com/users/amitguptadumka/following{/other_user}",
            "gists_url": "https://api.github.com/users/amitguptadumka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amitguptadumka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amitguptadumka/subscriptions",
            "organizations_url": "https://api.github.com/users/amitguptadumka/orgs",
            "repos_url": "https://api.github.com/users/amitguptadumka/repos",
            "events_url": "https://api.github.com/users/amitguptadumka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amitguptadumka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-26T22:17:54Z",
        "updated_at": "2023-10-30T18:03:13Z",
        "closed_at": "2023-10-30T18:03:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am using QueryFusionRetriever to combine lexical+semantic search. I am using ElasticSearch vector db to store the embeddings.\r\nI see in the  QueryFusionRetriever there is a mode parameters, i just found in the documentation around 'reciprocal_rerank'.\r\nwhat other modes are supported, can we have those with explanations for reference? \r\nAlso while using reciprocal rerank the score are very low, how to read these scores? any guide would be helpful.\r\n\r\nretriever = QueryFusionRetriever(\r\n    [vector_retriever, bm25_retriever],\r\n    similarity_top_k=3,\r\n    num_queries=1,  # set this to 1 to disable query generation\r\n    mode=\"reciprocal_rerank\",\r\n    use_async=True,\r\n    verbose=False,\r\n) ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8514/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8514/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8513",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8513/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8513/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8513/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8513",
        "id": 1964443733,
        "node_id": "PR_kwDOIWuq585d6n8s",
        "number": 8513,
        "title": "Bumps version to 0.8.53.post2 to get redirect fix",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-26T22:14:35Z",
        "updated_at": "2023-10-26T22:20:58Z",
        "closed_at": "2023-10-26T22:20:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8513",
            "html_url": "https://github.com/run-llama/llama_index/pull/8513",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8513.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8513.patch",
            "merged_at": "2023-10-26T22:20:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8513/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8513/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8512",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8512/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8512/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8512/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8512",
        "id": 1964426112,
        "node_id": "PR_kwDOIWuq585d6kMx",
        "number": 8512,
        "title": "refactor: use try-catch instead of explicit checking",
        "user": {
            "login": "david20571015",
            "id": 51911434,
            "node_id": "MDQ6VXNlcjUxOTExNDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david20571015",
            "html_url": "https://github.com/david20571015",
            "followers_url": "https://api.github.com/users/david20571015/followers",
            "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
            "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
            "organizations_url": "https://api.github.com/users/david20571015/orgs",
            "repos_url": "https://api.github.com/users/david20571015/repos",
            "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david20571015/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-26T21:57:37Z",
        "updated_at": "2023-10-30T10:11:01Z",
        "closed_at": "2023-10-30T06:29:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8512",
            "html_url": "https://github.com/run-llama/llama_index/pull/8512",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8512.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8512.patch",
            "merged_at": "2023-10-30T06:29:53Z"
        },
        "body": "# Description\r\n\r\nHandle missing fields by try-catch to increase the readability.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8512/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8512/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8511",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8511",
        "id": 1964409000,
        "node_id": "I_kwDOIWuq5851FoCo",
        "number": 8511,
        "title": "[Bug]: Not able to use BM25Retriever with ElasticSearch Vector DB",
        "user": {
            "login": "amitguptadumka",
            "id": 39477047,
            "node_id": "MDQ6VXNlcjM5NDc3MDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/39477047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitguptadumka",
            "html_url": "https://github.com/amitguptadumka",
            "followers_url": "https://api.github.com/users/amitguptadumka/followers",
            "following_url": "https://api.github.com/users/amitguptadumka/following{/other_user}",
            "gists_url": "https://api.github.com/users/amitguptadumka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amitguptadumka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amitguptadumka/subscriptions",
            "organizations_url": "https://api.github.com/users/amitguptadumka/orgs",
            "repos_url": "https://api.github.com/users/amitguptadumka/repos",
            "events_url": "https://api.github.com/users/amitguptadumka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amitguptadumka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-10-26T21:40:38Z",
        "updated_at": "2023-12-05T21:45:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nHi,\r\nBM25 retriever works fine if i store the embeddings in local or Faiss vector db. But when i am storing it in ES vector db it starts giving below error:\r\n\r\nfrom llama_index.retrievers import BM25Retriever\r\nbm25_retriever = BM25Retriever.from_defaults(docstore=index_ins_es.docstore, similarity_top_k=3)\r\n\r\n![image](https://github.com/run-llama/llama_index/assets/39477047/5069400e-7683-484a-a09f-5af38330dcb9)\r\n\r\nHow to fix this please?\n\n### Version\n\n8.48\n\n### Steps to Reproduce\n\nfrom llama_index.retrievers import BM25Retriever\r\nbm25_retriever = BM25Retriever.from_defaults(docstore=index_ins_es.docstore, similarity_top_k=3)\r\nwith ElasticSearch vector DB\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8510",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8510/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8510/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8510/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8510",
        "id": 1964401209,
        "node_id": "I_kwDOIWuq5851FmI5",
        "number": 8510,
        "title": "[Bug]: Top_k score issue with ElasticSearch Vector DB",
        "user": {
            "login": "amitguptadumka",
            "id": 39477047,
            "node_id": "MDQ6VXNlcjM5NDc3MDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/39477047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitguptadumka",
            "html_url": "https://github.com/amitguptadumka",
            "followers_url": "https://api.github.com/users/amitguptadumka/followers",
            "following_url": "https://api.github.com/users/amitguptadumka/following{/other_user}",
            "gists_url": "https://api.github.com/users/amitguptadumka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amitguptadumka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amitguptadumka/subscriptions",
            "organizations_url": "https://api.github.com/users/amitguptadumka/orgs",
            "repos_url": "https://api.github.com/users/amitguptadumka/repos",
            "events_url": "https://api.github.com/users/amitguptadumka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amitguptadumka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-26T21:33:50Z",
        "updated_at": "2023-10-29T23:26:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nHi,\r\nI have a set of documents for which i have created embeddings and stored it in ElasticSearch vector db.\r\nNow when i am loading the index from ES and retrieving the top_k for a query i am always getting the score as 1.00 or .99 which is very high. I compared exact same replica storing in different vector DB like Faiss etc. The retrieved docs are same but score vary, i get reasonable score in Faiss like .7 etc. But not sure whats wrong with ElasticSearch it always gives ~1.0 score for top k docs. Any idea how to fix the score with ES?\r\n\r\n\r\nstorage_context_ins_es = StorageContext.from_defaults(vector_store=vector_store_ins)\r\nindex_ins_es = VectorStoreIndex.from_vector_store(\r\n    vector_store=vector_store_ins,\r\n    storage_context=storage_context_ins_es,\r\n    service_context=service_context_ins_es\r\n    )\r\ntop_k=3 #for top hit\r\n##ES retriever\r\nretriever = index_ins_es.as_retriever(similarity_top_k=top_k)\r\nnodes_with_scores = retriever.retrieve(\"xyz\")\r\n\r\n![image](https://github.com/run-llama/llama_index/assets/39477047/ec10d156-bb92-40fe-b25b-37f5ed6a4dcb)\r\n\r\n\n\n### Version\n\n8.48\n\n### Steps to Reproduce\n\nattached code snippet above.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8510/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8510/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8509",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8509/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8509/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8509/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8509",
        "id": 1964391283,
        "node_id": "PR_kwDOIWuq585d6ckk",
        "number": 8509,
        "title": "Lazy data loading for `readers`",
        "user": {
            "login": "david20571015",
            "id": 51911434,
            "node_id": "MDQ6VXNlcjUxOTExNDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david20571015",
            "html_url": "https://github.com/david20571015",
            "followers_url": "https://api.github.com/users/david20571015/followers",
            "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
            "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
            "organizations_url": "https://api.github.com/users/david20571015/orgs",
            "repos_url": "https://api.github.com/users/david20571015/repos",
            "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david20571015/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-26T21:24:48Z",
        "updated_at": "2023-10-30T10:11:09Z",
        "closed_at": "2023-10-30T06:45:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8509",
            "html_url": "https://github.com/run-llama/llama_index/pull/8509",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8509.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8509.patch",
            "merged_at": "2023-10-30T06:45:03Z"
        },
        "body": "# Description\r\n\r\nAdd `BaseReader.lazy_load_data`. For further details, refer to the discussion in issue #8454.\r\nPlease notify me if there are any documents that need to be modified.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8509/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8509/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8508",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8508/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8508/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8508/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8508",
        "id": 1964354166,
        "node_id": "I_kwDOIWuq5851Fap2",
        "number": 8508,
        "title": "[Documentation]: test dependencies for developers",
        "user": {
            "login": "david20571015",
            "id": 51911434,
            "node_id": "MDQ6VXNlcjUxOTExNDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david20571015",
            "html_url": "https://github.com/david20571015",
            "followers_url": "https://api.github.com/users/david20571015/followers",
            "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
            "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
            "organizations_url": "https://api.github.com/users/david20571015/orgs",
            "repos_url": "https://api.github.com/users/david20571015/repos",
            "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david20571015/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-26T20:53:49Z",
        "updated_at": "2023-10-30T17:40:12Z",
        "closed_at": "2023-10-30T17:40:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\n`data_requirements.txt` was removed in #8501, but the instructions in the CONTRIBUTING.md#testing still have developers to install it.\n\n### Documentation Link\n\nhttps://github.com/run-llama/llama_index/blob/main/CONTRIBUTING.md#testing",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8508/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8508/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8507",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8507/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8507/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8507/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8507",
        "id": 1964346306,
        "node_id": "PR_kwDOIWuq585d6Sxz",
        "number": 8507,
        "title": "Initialize MultiModal Retrieval using LlamaIndex",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-10-26T20:47:19Z",
        "updated_at": "2023-10-27T19:45:29Z",
        "closed_at": "2023-10-27T19:45:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8507",
            "html_url": "https://github.com/run-llama/llama_index/pull/8507",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8507.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8507.patch",
            "merged_at": "2023-10-27T19:45:28Z"
        },
        "body": "# Description\r\n\r\nMulti-Modal Retrieval for text and images\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8507/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8507/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8506",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8506/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8506/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8506/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8506",
        "id": 1964311558,
        "node_id": "I_kwDOIWuq5851FQQG",
        "number": 8506,
        "title": "[Bug]: Type for output_cls in BaseSynthesizer.__init__() should be Optional[Type[BaseModel]]",
        "user": {
            "login": "pikalaw",
            "id": 144591,
            "node_id": "MDQ6VXNlcjE0NDU5MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/144591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pikalaw",
            "html_url": "https://github.com/pikalaw",
            "followers_url": "https://api.github.com/users/pikalaw/followers",
            "following_url": "https://api.github.com/users/pikalaw/following{/other_user}",
            "gists_url": "https://api.github.com/users/pikalaw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pikalaw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pikalaw/subscriptions",
            "organizations_url": "https://api.github.com/users/pikalaw/orgs",
            "repos_url": "https://api.github.com/users/pikalaw/repos",
            "events_url": "https://api.github.com/users/pikalaw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pikalaw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-26T20:20:32Z",
        "updated_at": "2023-10-29T23:30:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nIn [llama_index/response_synthesizers/base.py](https://github.com/run-llama/llama_index/blob/main/llama_index/response_synthesizers/base.py#L41), the argument `output_cls` is currently typed as `BaseModel`:\r\n\r\n```python\r\n    def __init__(\r\n        self,\r\n        service_context: Optional[ServiceContext] = None,\r\n        streaming: bool = False,\r\n        output_cls: BaseModel = None,\r\n    ) -> None:\r\n```\r\n\r\nI think it should be `Optional[Type[BaseModel]]` instead:\r\n\r\n```python\r\n    def __init__(\r\n        self,\r\n        service_context: Optional[ServiceContext] = None,\r\n        streaming: bool = False,\r\n        output_cls: Optional[Type[BaseModel]] = None,\r\n) -> None:\r\n```\r\n\r\nTo make the type checker happy, [line 123](https://github.com/run-llama/llama_index/blob/main/llama_index/response_synthesizers/base.py#L123) should be changed from:\r\n\r\n```python\r\n        if isinstance(response_str, self._output_cls):\r\n```\r\n\r\nto\r\n\r\n```python\r\n        if self._output_cls is not None and isinstance(response_str, self._output_cls):\r\n```\r\n\r\n\r\n### Version\r\n\r\n0.8.48\r\n\r\n### Steps to Reproduce\r\n\r\nI wrote this code:\r\n\r\n```python\r\nclass SynthesizedResponse(BaseModel):\r\n    answer: str\r\n    attributed_passages: List[str]\r\n    answerability_probability: float\r\n\r\n\r\nclass MyTextSynthesizer(BaseSynthesizer):\r\n    def __init__(self, **kwargs: Any):\r\n        super().__init__(output_cls=SynthesizedResponse, **kwargs)\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8506/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8506/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8505",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8505/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8505/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8505/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8505",
        "id": 1964286742,
        "node_id": "PR_kwDOIWuq585d6F9h",
        "number": 8505,
        "title": "Redirects must be to /en/stable I guess",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-26T20:02:38Z",
        "updated_at": "2023-10-26T20:09:07Z",
        "closed_at": "2023-10-26T20:09:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8505",
            "html_url": "https://github.com/run-llama/llama_index/pull/8505",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8505.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8505.patch",
            "merged_at": "2023-10-26T20:09:06Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8505/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8505/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8504",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8504/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8504/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8504/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8504",
        "id": 1964261949,
        "node_id": "I_kwDOIWuq5851FEI9",
        "number": 8504,
        "title": "[Question]: Non Ascii characters when using persist on storage_context",
        "user": {
            "login": "meeffe",
            "id": 94453502,
            "node_id": "U_kgDOBaE-_g",
            "avatar_url": "https://avatars.githubusercontent.com/u/94453502?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/meeffe",
            "html_url": "https://github.com/meeffe",
            "followers_url": "https://api.github.com/users/meeffe/followers",
            "following_url": "https://api.github.com/users/meeffe/following{/other_user}",
            "gists_url": "https://api.github.com/users/meeffe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/meeffe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/meeffe/subscriptions",
            "organizations_url": "https://api.github.com/users/meeffe/orgs",
            "repos_url": "https://api.github.com/users/meeffe/repos",
            "events_url": "https://api.github.com/users/meeffe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/meeffe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-26T19:45:15Z",
        "updated_at": "2023-10-27T07:09:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nWhen using:\r\n\r\n index.storage_context.persist(\"index.json\")\r\n\r\nI got non ascii characters inside json file which I believe is not right (I use polish language here in this example)\r\n\r\n```\r\n\"hash\": \"421462d8b34df9b8b9ba901c2e2666e2180e378aa9d752ad3aad980e7b41b9eb\",\r\n        \"text\": \"Przegl\\u0105d praktyk rynkowych pokazuje, \\u017ce odst\\u0105pienie od wykupu, w szczeg\\u00f3lno\\u015bci, gdy zosta\\u0142a wybrana opcja maksymalna, mo\\u017ce u.\",\r\n        \"start_char_idx\": null,\r\n        \"end_char_idx\": null,\r\n        \"text_template\": \"{metadata_str}\\n\\n{content}\",\r\n        \"metadata_template\": \"{key}: {value}\",\r\n        \"metadata_seperator\": \"\\n\"\r\n      },\r\n```\r\n\r\nSomething like ensure_ascii when writing to json would be helpful here. Or don't I know something?\r\n\r\nFull code:\r\n\r\n```\r\ndef construct_index(directory_path):\r\n    max_input_size = 4096\r\n    num_outputs = 512  # by\u0142o 500\r\n    max_chunk_overlap = 1\r\n    chunk_size_limit = 600\r\n    prompt_helper = PromptHelper(\r\n        max_input_size,\r\n        num_outputs,\r\n        max_chunk_overlap,\r\n        chunk_size_limit=chunk_size_limit,\r\n    )\r\n\r\n    llm_predictor = LLMPredictor(\r\n        llm=openai(temperature=0.7, model_name=\"gpt-4.0613\", max_tokens=num_outputs)\r\n    )\r\n    # print model_name:\r\n    documents = SimpleDirectoryReader(directory_path, num_files_limit=1).load_data()\r\n    index = GPTVectorStoreIndex.from_documents(\r\n        documents, llm_predictor=llm_predictor, prompt_helper=prompt_helper\r\n    )\r\n    index.storage_context.persist(\"index.json\")\r\n\r\n    return index\r\n```\r\n\r\n\r\nHow to fix this non ascii characters here when using  index.storage_context.persist(\"index.json\") ?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8504/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8504/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8503",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8503/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8503/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8503/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8503",
        "id": 1964165382,
        "node_id": "PR_kwDOIWuq585d5q_T",
        "number": 8503,
        "title": "[version] bump version to 0.8.53",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-26T18:47:47Z",
        "updated_at": "2023-10-26T19:29:41Z",
        "closed_at": "2023-10-26T19:29:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8503",
            "html_url": "https://github.com/run-llama/llama_index/pull/8503",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8503.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8503.patch",
            "merged_at": "2023-10-26T19:29:41Z"
        },
        "body": "new docs",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8503/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8503/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8502",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8502/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8502/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8502/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8502",
        "id": 1964157650,
        "node_id": "I_kwDOIWuq5851EqrS",
        "number": 8502,
        "title": "[Feature Request]: Self-RAG support (NEW TECHNIQUE)",
        "user": {
            "login": "casper-hansen",
            "id": 27340033,
            "node_id": "MDQ6VXNlcjI3MzQwMDMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/27340033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/casper-hansen",
            "html_url": "https://github.com/casper-hansen",
            "followers_url": "https://api.github.com/users/casper-hansen/followers",
            "following_url": "https://api.github.com/users/casper-hansen/following{/other_user}",
            "gists_url": "https://api.github.com/users/casper-hansen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/casper-hansen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/casper-hansen/subscriptions",
            "organizations_url": "https://api.github.com/users/casper-hansen/orgs",
            "repos_url": "https://api.github.com/users/casper-hansen/repos",
            "events_url": "https://api.github.com/users/casper-hansen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/casper-hansen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-26T18:44:18Z",
        "updated_at": "2023-10-26T20:05:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nSelf-RAG is a new open-source technique (MIT license) that implements:\r\n1. **Adaptive retrieval via retrieval tokens:** allows you to fine-tune LLMs to output `[Retrieval]` tokens mid-generation to indicate when to perform retrieval. It has been empirically shown to improve open-source models to match ChatGPT level of performance in RAG tasks.\r\n2. **Critique tokens:**\r\n    - w_rel (default 1.0): This variable controls the emphasis on relevance during beam search.\r\n    - w_sup (default 1.0): This variable controls the emphasis on support from the document during beam search.\r\n    - w_use (default 0.5): This variable controls the emphasis on overall quality during beam search.\r\n\r\nRequirements:\r\n- make it compatible with vLLM for inference such that any fine-tuned Self-RAG model can be deployed in a framework with PagedAttention implemented.\r\n- able to query vector database\r\n\r\nWebsite: https://selfrag.github.io/\r\nModel: https://huggingface.co/selfrag/selfrag_llama2_7b\r\nCode: https://github.com/AkariAsai/self-rag\r\n\r\n![image](https://github.com/run-llama/llama_index/assets/27340033/9911d86d-e44e-49b1-95ef-87f3b9a9e0e6)\r\n![image](https://github.com/run-llama/llama_index/assets/27340033/b262766c-2318-431c-9714-a0738ad66fc4)\r\n\r\n\r\n### Reason\r\n\r\n_No response_\r\n\r\n### Value of Feature\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8502/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8502/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8501",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8501/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8501/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8501/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8501",
        "id": 1964151588,
        "node_id": "PR_kwDOIWuq585d5n2g",
        "number": 8501,
        "title": "Removed `requirements.txt` and `data_requirements.txt`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-26T18:41:33Z",
        "updated_at": "2023-10-26T19:39:44Z",
        "closed_at": "2023-10-26T19:39:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8501",
            "html_url": "https://github.com/run-llama/llama_index/pull/8501",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8501.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8501.patch",
            "merged_at": "2023-10-26T19:39:43Z"
        },
        "body": "# Description\r\n\r\nhttps://github.com/run-llama/llama_index/pull/8049 migrated us to `poetry`. It has now been a few weeks and multiple releases, now time to deprecate the requirements files.\r\n\r\nThis PR streamlines the repo, removing duplicated representations that can cause confusion.\r\n\r\n## Type of Change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8501/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8501/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8500",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8500/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8500/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8500/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8500",
        "id": 1964060708,
        "node_id": "PR_kwDOIWuq585d5ThO",
        "number": 8500,
        "title": "Docs refactor",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-26T17:51:34Z",
        "updated_at": "2023-10-26T18:27:19Z",
        "closed_at": "2023-10-26T18:27:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8500",
            "html_url": "https://github.com/run-llama/llama_index/pull/8500",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8500.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8500.patch",
            "merged_at": "2023-10-26T18:27:18Z"
        },
        "body": "# Description\r\n\r\nAn overhaul of the docs organization, adding a big new \"understanding\" section.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8500/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8500/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8499",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8499/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8499/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8499/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8499",
        "id": 1963929026,
        "node_id": "I_kwDOIWuq5851Dy3C",
        "number": 8499,
        "title": "[Question]: Metadata question for file readers (docx, pdf, txt)",
        "user": {
            "login": "utility-aagrawal",
            "id": 140737044,
            "node_id": "U_kgDOCGN6FA",
            "avatar_url": "https://avatars.githubusercontent.com/u/140737044?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/utility-aagrawal",
            "html_url": "https://github.com/utility-aagrawal",
            "followers_url": "https://api.github.com/users/utility-aagrawal/followers",
            "following_url": "https://api.github.com/users/utility-aagrawal/following{/other_user}",
            "gists_url": "https://api.github.com/users/utility-aagrawal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/utility-aagrawal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/utility-aagrawal/subscriptions",
            "organizations_url": "https://api.github.com/users/utility-aagrawal/orgs",
            "repos_url": "https://api.github.com/users/utility-aagrawal/repos",
            "events_url": "https://api.github.com/users/utility-aagrawal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/utility-aagrawal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-26T16:29:17Z",
        "updated_at": "2023-10-26T17:44:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi,\r\n\r\nI am building a RAG pipeline over a set of the documents. For now, I am only allowing pdf, docx and txt files. I am using the SimpleDirectoryReader to load the files. By default, pdfs have file name and page label as metadata. docx have just file name. txts have no metadata. I want all 3 file types to have consistent metadata.\r\n\r\nAfter some research, I realized it's not easy/possible to get page labels for .txt and .docx files. I still want docx and txts to have file names in metadata. pdfs can have default file name and page label in metadata. What's the best way to achieve it without having to make changes in readers/file/base.py or readers/file/docs_reader.py? \r\n\r\nThanks!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8499/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8499/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8498",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8498/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8498/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8498/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8498",
        "id": 1963916182,
        "node_id": "I_kwDOIWuq5851DvuW",
        "number": 8498,
        "title": "[Question]: How can we load the already existing index and extract metadata and text from the loaded index ",
        "user": {
            "login": "ashokrayapati",
            "id": 47033120,
            "node_id": "MDQ6VXNlcjQ3MDMzMTIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/47033120?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashokrayapati",
            "html_url": "https://github.com/ashokrayapati",
            "followers_url": "https://api.github.com/users/ashokrayapati/followers",
            "following_url": "https://api.github.com/users/ashokrayapati/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashokrayapati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashokrayapati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashokrayapati/subscriptions",
            "organizations_url": "https://api.github.com/users/ashokrayapati/orgs",
            "repos_url": "https://api.github.com/users/ashokrayapati/repos",
            "events_url": "https://api.github.com/users/ashokrayapati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashokrayapati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-26T16:21:11Z",
        "updated_at": "2023-10-26T17:00:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHow can we load the already existing index and extract metadata and text from the loaded index ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8498/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8498/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8497",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8497/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8497/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8497/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8497",
        "id": 1963875018,
        "node_id": "PR_kwDOIWuq585d4q4q",
        "number": 8497,
        "title": "[version] bump version to 0.8.53",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-26T15:55:34Z",
        "updated_at": "2023-10-26T17:53:38Z",
        "closed_at": "2023-10-26T17:53:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8497",
            "html_url": "https://github.com/run-llama/llama_index/pull/8497",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8497.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8497.patch",
            "merged_at": "2023-10-26T17:53:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8497/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8497/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8496",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8496/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8496/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8496/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8496",
        "id": 1963861351,
        "node_id": "I_kwDOIWuq5851DiVn",
        "number": 8496,
        "title": "[Question]: How do I populate a Weaviate instance with the content of a locally persisted vector store?",
        "user": {
            "login": "nmaoez",
            "id": 34936364,
            "node_id": "MDQ6VXNlcjM0OTM2MzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/34936364?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nmaoez",
            "html_url": "https://github.com/nmaoez",
            "followers_url": "https://api.github.com/users/nmaoez/followers",
            "following_url": "https://api.github.com/users/nmaoez/following{/other_user}",
            "gists_url": "https://api.github.com/users/nmaoez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nmaoez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nmaoez/subscriptions",
            "organizations_url": "https://api.github.com/users/nmaoez/orgs",
            "repos_url": "https://api.github.com/users/nmaoez/repos",
            "events_url": "https://api.github.com/users/nmaoez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nmaoez/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-26T15:47:20Z",
        "updated_at": "2023-10-27T05:12:22Z",
        "closed_at": "2023-10-27T05:01:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello everyone!\r\n\r\nI am trying to reuse a locally persisted store and upload/copy it into a running weaviate instance. What I currently did was to load the local `DocumentStore` and use `VectorStoreIndex.from_documents()` to populate the Weaviate instance but this would mean that the embeddings will be recreated (but the embeddings already exist locally!):\r\n\r\n```python\r\nfrom llama_index import VectorStoreIndex, Document\r\nimport weaviate\r\n\r\nindex = VectorStoreIndex.from_documents(\r\n    [Document(text=doc.get_text(), metadata=doc.metadata) for doc in list(SimpleDocumentStore.from_persist_dir(persist_dir=\"./db\").docs.values())],\r\n    storage_context=StorageContext.from_defaults(\r\n        vector_store=WeaviateVectorStore(\r\n            weaviate_client=weaviate.Client(\r\n                url=\"http://localhost:8080\",\r\n                additional_headers={\r\n                    \"X-OpenAI-Api-Key\": os.environ[\"OPENAI_API_KEY\"]\r\n                }\r\n            ),\r\n            index_name=\"my_index\",\r\n        ),\r\n    ),\r\n)\r\n```\r\n\r\nIs there a chance to directly push the local previously created store it into Weaviate?\r\n\r\n**Context:** We commit small persisted stores into version control and want to push those into a running vector store provider for production.\r\n\r\nAny idea? Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8496/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8496/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8495",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8495/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8495/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8495/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8495",
        "id": 1963859709,
        "node_id": "I_kwDOIWuq5851Dh79",
        "number": 8495,
        "title": "[Question]: About \"custom_query_engines\"",
        "user": {
            "login": "SCUT-ChenBD",
            "id": 49072146,
            "node_id": "MDQ6VXNlcjQ5MDcyMTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/49072146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SCUT-ChenBD",
            "html_url": "https://github.com/SCUT-ChenBD",
            "followers_url": "https://api.github.com/users/SCUT-ChenBD/followers",
            "following_url": "https://api.github.com/users/SCUT-ChenBD/following{/other_user}",
            "gists_url": "https://api.github.com/users/SCUT-ChenBD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SCUT-ChenBD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SCUT-ChenBD/subscriptions",
            "organizations_url": "https://api.github.com/users/SCUT-ChenBD/orgs",
            "repos_url": "https://api.github.com/users/SCUT-ChenBD/repos",
            "events_url": "https://api.github.com/users/SCUT-ChenBD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SCUT-ChenBD/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-26T15:46:24Z",
        "updated_at": "2023-10-26T16:25:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nif I use \"graph = load_graph_from_storage(storage_context, root_id=root_id)\" to load the Index form my disk. How to set the \"response_mode=\"tree_summarize\"\" in the graph. When I load the graph from disk, I don't have the index about \"essay_index\"(in the picture)\r\n\r\n![Rj7S501P4wJum4Jdcj0N0mJbQt9EBZHvb-42QSZkJWg](https://github.com/run-llama/llama_index/assets/49072146/c373bf88-8c88-4ace-9cd7-34c0740f1669)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8495/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8495/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8494",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8494/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8494/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8494/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8494",
        "id": 1963748410,
        "node_id": "PR_kwDOIWuq585d4POR",
        "number": 8494,
        "title": "Added examples to store index and composable graph",
        "user": {
            "login": "sumitsahoo",
            "id": 6181114,
            "node_id": "MDQ6VXNlcjYxODExMTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6181114?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sumitsahoo",
            "html_url": "https://github.com/sumitsahoo",
            "followers_url": "https://api.github.com/users/sumitsahoo/followers",
            "following_url": "https://api.github.com/users/sumitsahoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/sumitsahoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sumitsahoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sumitsahoo/subscriptions",
            "organizations_url": "https://api.github.com/users/sumitsahoo/orgs",
            "repos_url": "https://api.github.com/users/sumitsahoo/repos",
            "events_url": "https://api.github.com/users/sumitsahoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sumitsahoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-26T14:47:50Z",
        "updated_at": "2023-10-29T13:40:01Z",
        "closed_at": "2023-10-29T13:40:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8494",
            "html_url": "https://github.com/run-llama/llama_index/pull/8494",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8494.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8494.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nAdded examples to store index and composable graph. It was really hard to find examples before.\r\n\r\nFixes # (issue)\r\nNA\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I added code sample which I tested and works\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8494/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8494/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8493",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8493/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8493/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8493/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8493",
        "id": 1963727101,
        "node_id": "PR_kwDOIWuq585d4Kiz",
        "number": 8493,
        "title": "Fix trulens notebook link",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-26T14:37:27Z",
        "updated_at": "2023-10-26T14:44:59Z",
        "closed_at": "2023-10-26T14:44:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8493",
            "html_url": "https://github.com/run-llama/llama_index/pull/8493",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8493.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8493.patch",
            "merged_at": "2023-10-26T14:44:58Z"
        },
        "body": "# Description\r\n\r\nLlamaIndex Trulens starter notebook link has been changed. This PR fixes it.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8493/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8493/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8492",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8492/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8492/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8492/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8492",
        "id": 1963636273,
        "node_id": "I_kwDOIWuq5851CrYx",
        "number": 8492,
        "title": "[Bug]: Retry query engine does not work with Auto query engine",
        "user": {
            "login": "Sawaiz8",
            "id": 97668778,
            "node_id": "U_kgDOBdJOqg",
            "avatar_url": "https://avatars.githubusercontent.com/u/97668778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sawaiz8",
            "html_url": "https://github.com/Sawaiz8",
            "followers_url": "https://api.github.com/users/Sawaiz8/followers",
            "following_url": "https://api.github.com/users/Sawaiz8/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sawaiz8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sawaiz8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sawaiz8/subscriptions",
            "organizations_url": "https://api.github.com/users/Sawaiz8/orgs",
            "repos_url": "https://api.github.com/users/Sawaiz8/repos",
            "events_url": "https://api.github.com/users/Sawaiz8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sawaiz8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-26T13:54:24Z",
        "updated_at": "2023-10-29T23:41:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen I try to wrapper my Sql autovector engine class with the retry query engine. I get the following error:\r\n**Traceback (most recent call last):\r\n  File \"/home/sawaiz/Documents/Lab/Hamza Projects/Secure-GPT/Initial code/query_engine.py\", line 649, in <module>\r\n    RESPONSE = eng.query(\r\n  File \"/home/sawaiz/Documents/Lab/Hamza Projects/Secure-GPT/Initial code/query_engine.py\", line 333, in query\r\n    return str(self.query_engine.query(query))\r\n  File \"/home/sawaiz/anaconda3/envs/llamaindex/lib/python3.9/site-packages/llama_index/indices/query/base.py\", line 32, in query\r\n    return self._query(str_or_query_bundle)\r\n  File \"/home/sawaiz/anaconda3/envs/llamaindex/lib/python3.9/site-packages/llama_index/query_engine/sql_join_query_engine.py\", line 314, in _query\r\n    if result.ind == 0:\r\n  File \"/home/sawaiz/anaconda3/envs/llamaindex/lib/python3.9/site-packages/llama_index/selectors/types.py\", line 27, in ind\r\n    raise ValueError(\r\nValueError: There are 2 selections, please use .inds.**\r\n\r\nI want to retry for querying because I am not the right answer in my query with the database:\r\n![image](https://github.com/run-llama/llama_index/assets/97668778/fbb5c157-b995-41a3-8203-8c6434a44a2f)\r\n\r\n\r\n\n\n### Version\n\n0.8.51\n\n### Steps to Reproduce\n\nUse the Auto Query engine and just wrapp it with router query engine at the end. \r\nI am using the following function to wrap it:\r\n\r\n    def _router(self, autoQueryEngine):\r\n        query_response_evaluator = RelevancyEvaluator()\r\n        retry_query_engine = RetryQueryEngine(\r\n            autoQueryEngine, query_response_evaluator\r\n        )\r\n        return retry_query_engine\r\n\r\nWhy does it not work?\r\n\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8492/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8492/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8491",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8491/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8491/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8491/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8491",
        "id": 1963033608,
        "node_id": "I_kwDOIWuq5851AYQI",
        "number": 8491,
        "title": "[Question]: Read_timeout for OpenAi",
        "user": {
            "login": "olbychos",
            "id": 61119565,
            "node_id": "MDQ6VXNlcjYxMTE5NTY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/61119565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olbychos",
            "html_url": "https://github.com/olbychos",
            "followers_url": "https://api.github.com/users/olbychos/followers",
            "following_url": "https://api.github.com/users/olbychos/following{/other_user}",
            "gists_url": "https://api.github.com/users/olbychos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olbychos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olbychos/subscriptions",
            "organizations_url": "https://api.github.com/users/olbychos/orgs",
            "repos_url": "https://api.github.com/users/olbychos/repos",
            "events_url": "https://api.github.com/users/olbychos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olbychos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-26T08:55:50Z",
        "updated_at": "2023-10-26T09:11:04Z",
        "closed_at": "2023-10-26T09:11:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am sequentially submitting 120 questions to OpenAI. The rate limit is 1 million tokens per minute, and the request limit is 10,000 requests per minute.\r\n\r\nAfter reaching around 50 or 60 questions, the process halts and produces an error:\r\n\r\n`\"Retrying llama_index.llms.openai_utils.completion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised Timeout: Request timed out: HTTPSConnectionPool(host='api.openai.com', port=443): Read timed out. (read timeout=600).\"`\r\n\r\nHow can I reduce the timeout or explore potential solutions to this issue?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8491/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8491/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8490",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8490/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8490/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8490/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8490",
        "id": 1962904533,
        "node_id": "I_kwDOIWuq5850_4vV",
        "number": 8490,
        "title": "[Question]: How to use pre-defined knowledge graph?",
        "user": {
            "login": "jungwooooo",
            "id": 88812230,
            "node_id": "MDQ6VXNlcjg4ODEyMjMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/88812230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jungwooooo",
            "html_url": "https://github.com/jungwooooo",
            "followers_url": "https://api.github.com/users/jungwooooo/followers",
            "following_url": "https://api.github.com/users/jungwooooo/following{/other_user}",
            "gists_url": "https://api.github.com/users/jungwooooo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jungwooooo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jungwooooo/subscriptions",
            "organizations_url": "https://api.github.com/users/jungwooooo/orgs",
            "repos_url": "https://api.github.com/users/jungwooooo/repos",
            "events_url": "https://api.github.com/users/jungwooooo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jungwooooo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-26T07:39:23Z",
        "updated_at": "2023-10-26T08:28:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi llama_index team.\r\nI have a question about KnowledgeGraphQueryEngine.\r\nI already read and do some tutorials.\r\nI want to use pre-defined my own neo4j knowledge graph but i confused how to use it.\r\nHow to index and query my pre-defined knowledge graph ?\r\nThank you.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8490/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8490/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8489",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8489/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8489/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8489/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8489",
        "id": 1962897909,
        "node_id": "PR_kwDOIWuq585d1Tvr",
        "number": 8489,
        "title": "add prompt template variable mapping",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-26T07:34:57Z",
        "updated_at": "2023-10-27T04:31:09Z",
        "closed_at": "2023-10-27T04:31:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8489",
            "html_url": "https://github.com/run-llama/llama_index/pull/8489",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8489.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8489.patch",
            "merged_at": "2023-10-27T04:31:08Z"
        },
        "body": "# Description\r\n\r\nAllows users to specify prompts with other template variable keys, but define a mapping from the \"expected\" template var names to the var names they actually have in the prompt.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8489/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8489/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8488",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8488/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8488/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8488/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8488",
        "id": 1962856692,
        "node_id": "I_kwDOIWuq5850_tD0",
        "number": 8488,
        "title": "How can I select specific documents for question-answering after completing the vectorization (embedding) of all documents?[Question]: ",
        "user": {
            "login": "FreeRotate",
            "id": 29228920,
            "node_id": "MDQ6VXNlcjI5MjI4OTIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/29228920?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FreeRotate",
            "html_url": "https://github.com/FreeRotate",
            "followers_url": "https://api.github.com/users/FreeRotate/followers",
            "following_url": "https://api.github.com/users/FreeRotate/following{/other_user}",
            "gists_url": "https://api.github.com/users/FreeRotate/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FreeRotate/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FreeRotate/subscriptions",
            "organizations_url": "https://api.github.com/users/FreeRotate/orgs",
            "repos_url": "https://api.github.com/users/FreeRotate/repos",
            "events_url": "https://api.github.com/users/FreeRotate/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FreeRotate/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-26T07:09:47Z",
        "updated_at": "2023-10-26T07:54:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHow can I select specific documents for question-answering after completing the vectorization (embedding) of all documents?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8488/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8488/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8487",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8487/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8487/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8487/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8487",
        "id": 1962751321,
        "node_id": "PR_kwDOIWuq585d0z-W",
        "number": 8487,
        "title": "Allow configuration of service context and storage context in managed index",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-26T05:49:23Z",
        "updated_at": "2023-10-26T06:17:06Z",
        "closed_at": "2023-10-26T06:17:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8487",
            "html_url": "https://github.com/run-llama/llama_index/pull/8487",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8487.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8487.patch",
            "merged_at": "2023-10-26T06:17:05Z"
        },
        "body": "# Description\r\nAllow configuration of service context and storage context in managed index\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8487/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8487/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8486",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8486/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8486/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8486/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8486",
        "id": 1962745430,
        "node_id": "PR_kwDOIWuq585d0ytS",
        "number": 8486,
        "title": "Added default file_metadata to get basic metadata that many postprocessor use",
        "user": {
            "login": "azurewtl",
            "id": 5175672,
            "node_id": "MDQ6VXNlcjUxNzU2NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5175672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azurewtl",
            "html_url": "https://github.com/azurewtl",
            "followers_url": "https://api.github.com/users/azurewtl/followers",
            "following_url": "https://api.github.com/users/azurewtl/following{/other_user}",
            "gists_url": "https://api.github.com/users/azurewtl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azurewtl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azurewtl/subscriptions",
            "organizations_url": "https://api.github.com/users/azurewtl/orgs",
            "repos_url": "https://api.github.com/users/azurewtl/repos",
            "events_url": "https://api.github.com/users/azurewtl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azurewtl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-26T05:43:04Z",
        "updated_at": "2023-10-30T06:43:06Z",
        "closed_at": "2023-10-30T06:43:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8486",
            "html_url": "https://github.com/run-llama/llama_index/pull/8486",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8486.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8486.patch",
            "merged_at": "2023-10-30T06:43:05Z"
        },
        "body": "# Description\r\n\r\n- minor import error fixed\r\n- added default file_metadata to get basic metadata that many postprocessor use\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8486/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8486/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8485",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8485/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8485/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8485/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8485",
        "id": 1962740373,
        "node_id": "PR_kwDOIWuq585d0xnw",
        "number": 8485,
        "title": "Add longllmlingua",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-26T05:37:33Z",
        "updated_at": "2023-10-26T15:51:23Z",
        "closed_at": "2023-10-26T15:51:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8485",
            "html_url": "https://github.com/run-llama/llama_index/pull/8485",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8485.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8485.patch",
            "merged_at": "2023-10-26T15:51:22Z"
        },
        "body": "Add LongLLMLingua as a prompt compressor, in the form of a node postprocessor ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8485/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8485/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8484",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8484/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8484/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8484/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8484",
        "id": 1962706949,
        "node_id": "PR_kwDOIWuq585d0qcp",
        "number": 8484,
        "title": "[version] bump version to 0.8.51.post1",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-26T04:59:40Z",
        "updated_at": "2023-10-26T05:29:10Z",
        "closed_at": "2023-10-26T05:29:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8484",
            "html_url": "https://github.com/run-llama/llama_index/pull/8484",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8484.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8484.patch",
            "merged_at": "2023-10-26T05:29:09Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8484/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8484/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8483",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8483/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8483/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8483/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8483",
        "id": 1962532447,
        "node_id": "PR_kwDOIWuq585d0Ftw",
        "number": 8483,
        "title": "patch: add selected result to response metadata for router query engines, fix bug",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-26T01:12:15Z",
        "updated_at": "2023-10-26T03:03:46Z",
        "closed_at": "2023-10-26T03:03:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8483",
            "html_url": "https://github.com/run-llama/llama_index/pull/8483",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8483.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8483.patch",
            "merged_at": "2023-10-26T03:03:45Z"
        },
        "body": "also fix bug in pydanticmultiselector not implementing the new prompt interface",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8483/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8483/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8482",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8482/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8482/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8482/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8482",
        "id": 1962483220,
        "node_id": "I_kwDOIWuq5850-R4U",
        "number": 8482,
        "title": "Open source aalternative for OpenAIAgent",
        "user": {
            "login": "snassimr",
            "id": 6830626,
            "node_id": "MDQ6VXNlcjY4MzA2MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6830626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snassimr",
            "html_url": "https://github.com/snassimr",
            "followers_url": "https://api.github.com/users/snassimr/followers",
            "following_url": "https://api.github.com/users/snassimr/following{/other_user}",
            "gists_url": "https://api.github.com/users/snassimr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snassimr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snassimr/subscriptions",
            "organizations_url": "https://api.github.com/users/snassimr/orgs",
            "repos_url": "https://api.github.com/users/snassimr/repos",
            "events_url": "https://api.github.com/users/snassimr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snassimr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-26T00:09:24Z",
        "updated_at": "2023-10-27T19:03:18Z",
        "closed_at": "2023-10-26T05:38:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nHello ,\r\n\r\nI have code some pipeline that contain the code : \r\n\r\n`\r\nfunction_llm = OpenAI(model = 'gpt-3.5-turbo-16k')\r\n\r\nagent = OpenAIAgent.from_tools(\r\n    query_engine_tools,\r\n    llm=function_llm,\r\n    verbose=True, \r\n)\r\n`\r\n\r\nI guess OpenAI in function_llm can be rerplaced by HuggingFaceLLM\r\n\r\nAny open source alternative for OpenAIAgent ?\r\n\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8482/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8482/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8481",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8481/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8481/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8481/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8481",
        "id": 1962428376,
        "node_id": "PR_kwDOIWuq585dzvMl",
        "number": 8481,
        "title": "add llama2 benchmarks",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-25T23:05:39Z",
        "updated_at": "2023-10-25T23:52:36Z",
        "closed_at": "2023-10-25T23:52:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8481",
            "html_url": "https://github.com/run-llama/llama_index/pull/8481",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8481.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8481.patch",
            "merged_at": "2023-10-25T23:52:35Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8481/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8481/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8480",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8480/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8480/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8480/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8480",
        "id": 1962339754,
        "node_id": "I_kwDOIWuq58509u2q",
        "number": 8480,
        "title": "[Bug]: VectorStoreIndex as chat engine doesn't return sources",
        "user": {
            "login": "bllchmbrs",
            "id": 1642503,
            "node_id": "MDQ6VXNlcjE2NDI1MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1642503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bllchmbrs",
            "html_url": "https://github.com/bllchmbrs",
            "followers_url": "https://api.github.com/users/bllchmbrs/followers",
            "following_url": "https://api.github.com/users/bllchmbrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/bllchmbrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bllchmbrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bllchmbrs/subscriptions",
            "organizations_url": "https://api.github.com/users/bllchmbrs/orgs",
            "repos_url": "https://api.github.com/users/bllchmbrs/repos",
            "events_url": "https://api.github.com/users/bllchmbrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bllchmbrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-25T22:18:24Z",
        "updated_at": "2023-10-27T17:32:18Z",
        "closed_at": "2023-10-27T17:32:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\n\r\n### Expectation\r\nWhen using `index.as_chat_engine().chat` my **expectation** is that `response.sources` would include sources.\r\n\r\nIf I use `index.as_query_engine().query` I can see sources, no problem.\r\n\r\n### Actual result\r\n\r\nNo sources are present.\r\n\r\nReproduction is below.\r\n\r\n### Version\r\n\r\n0.8.50\r\n\r\n### Steps to Reproduce\r\n\r\n\r\n```py\r\nimport llama_index\r\nllama_index.__version__\r\n\r\nfrom llama_index import Document\r\nfrom llama_index import VectorStoreIndex, ServiceContext, set_global_service_context\r\nfrom llama_index.llms import OpenAI\r\nfrom llama_index.embeddings import OpenAIEmbedding\r\nfrom llama_index import (\r\n    SimpleDirectoryReader,\r\n    load_index_from_storage,\r\n    VectorStoreIndex,\r\n    StorageContext,\r\n)\r\n\r\nembed_model = OpenAIEmbedding()\r\nllm = OpenAI(model=\"gpt-4\")\r\n\r\nservice_context = ServiceContext.from_defaults(llm=llm, embed_model=embed_model)\r\nset_global_service_context(service_context)\r\n\r\ncorpus_of_documents = [\r\n    \"Take a leisurely walk in the park and enjoy the fresh air.\",\r\n    \"Visit a local museum and discover something new.\",\r\n    \"Attend a live music concert and feel the rhythm.\",\r\n    \"Go for a hike and admire the natural scenery.\",\r\n    \"Have a picnic with friends and share some laughs.\",\r\n    \"Explore a new cuisine by dining at an ethnic restaurant.\",\r\n    \"Take a yoga class and stretch your body and mind.\",\r\n    \"Join a local sports league and enjoy some friendly competition.\",\r\n    \"Attend a workshop or lecture on a topic you're interested in.\",\r\n    \"Visit an amusement park and ride the roller coasters.\"\r\n]\r\ndocuments = [Document(text=t) for t in corpus_of_documents]\r\n\r\nfrom llama_index import VectorStoreIndex\r\nindex = VectorStoreIndex.from_documents(\r\n    documents, show_progress=True\r\n)\r\n\r\nresponse = index.as_chat_engine().chat(\"Should I hike?\")\r\nprint(response.response) # doesn't seem to refer to the documents\r\nprint(response.sources) # == [], it's empty, but it shouldn't. Not clear to me whether or not it's actually querying the documents.\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8480/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8480/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8479",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8479/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8479/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8479/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8479",
        "id": 1962076546,
        "node_id": "PR_kwDOIWuq585dygsS",
        "number": 8479,
        "title": "[version] bump version to 0.8.51",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-25T19:22:54Z",
        "updated_at": "2023-10-25T19:34:09Z",
        "closed_at": "2023-10-25T19:34:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8479",
            "html_url": "https://github.com/run-llama/llama_index/pull/8479",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8479.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8479.patch",
            "merged_at": "2023-10-25T19:34:08Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8479/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8479/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]