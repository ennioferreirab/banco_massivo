[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5725",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5725/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5725/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5725/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5725",
        "id": 1741652313,
        "node_id": "I_kwDOIPDwls5nz4FZ",
        "number": 5725,
        "title": "FAISS load_local() file path issue. ",
        "user": {
            "login": "nithinjp1997",
            "id": 61446944,
            "node_id": "MDQ6VXNlcjYxNDQ2OTQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61446944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nithinjp1997",
            "html_url": "https://github.com/nithinjp1997",
            "followers_url": "https://api.github.com/users/nithinjp1997/followers",
            "following_url": "https://api.github.com/users/nithinjp1997/following{/other_user}",
            "gists_url": "https://api.github.com/users/nithinjp1997/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nithinjp1997/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nithinjp1997/subscriptions",
            "organizations_url": "https://api.github.com/users/nithinjp1997/orgs",
            "repos_url": "https://api.github.com/users/nithinjp1997/repos",
            "events_url": "https://api.github.com/users/nithinjp1997/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nithinjp1997/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-05T12:15:19Z",
        "updated_at": "2023-07-23T03:01:24Z",
        "closed_at": "2023-07-12T04:30:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain Version : [0.0.190]\r\nPython Version : 3.10.7\r\nOS : Windows 10\n\n### Who can help?\n\n@eyurtsev @hwchase17 \r\n\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nError: RuntimeError: Error in __cdecl faiss::FileIOReader::FileIOReader(const char *) at D:\\a\\faiss-wheels\\faiss-wheels\\faiss\\faiss\\impl\\io.cpp:68: Error: 'f' failed: could not open **D:\\Question Answer Generative AI\\Langchain\\index_files\\ThinkPalm\u263a\\en\\index.faiss** for reading: Invalid argument\r\n\r\nTry creating a file path :  D:\\Question Answer Generative AI\\Langchain\\index_files\\ThinkPalm\\1\\en \r\nmainly some folder name with just a number, then try to load that file path using faiss.load_local(). The path created after passing string path to Path(path) class is causing some issue. \n\n### Expected behavior\n\nIssue: The actual file path is : D:\\Question Answer Generative AI\\Langchain\\index_files\\ThinkPalm\\1\\en \r\nFile Path created by PurePath : *D:\\Question Answer Generative AI\\Langchain\\index_files\\ThinkPalm@\\en\\index.faiss",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5725/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5725/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5724",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5724/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5724/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5724/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5724",
        "id": 1741461098,
        "node_id": "I_kwDOIPDwls5nzJZq",
        "number": 5724,
        "title": "Issue: Getting total_tokens for each chain in sequential chains",
        "user": {
            "login": "gskrypka",
            "id": 30527068,
            "node_id": "MDQ6VXNlcjMwNTI3MDY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/30527068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gskrypka",
            "html_url": "https://github.com/gskrypka",
            "followers_url": "https://api.github.com/users/gskrypka/followers",
            "following_url": "https://api.github.com/users/gskrypka/following{/other_user}",
            "gists_url": "https://api.github.com/users/gskrypka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gskrypka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gskrypka/subscriptions",
            "organizations_url": "https://api.github.com/users/gskrypka/orgs",
            "repos_url": "https://api.github.com/users/gskrypka/repos",
            "events_url": "https://api.github.com/users/gskrypka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gskrypka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-05T10:20:30Z",
        "updated_at": "2023-12-03T16:06:51Z",
        "closed_at": "2023-12-03T16:06:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHello guys,\r\n\r\nI'm wondering how can I get total_tokens for each chain in sequential chain. I'm working on optimisation of sequential chains and want to check how much does each step cost. Unfortunately get_openai_callback returns total_tokens for the whole sequential chain rather then each one.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5724/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5724/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5723",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5723/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5723/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5723/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5723",
        "id": 1741458138,
        "node_id": "I_kwDOIPDwls5nzIra",
        "number": 5723,
        "title": "postprocessors append - Langchain and Nemoguardrails",
        "user": {
            "login": "Harikantipudi",
            "id": 53897496,
            "node_id": "MDQ6VXNlcjUzODk3NDk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/53897496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Harikantipudi",
            "html_url": "https://github.com/Harikantipudi",
            "followers_url": "https://api.github.com/users/Harikantipudi/followers",
            "following_url": "https://api.github.com/users/Harikantipudi/following{/other_user}",
            "gists_url": "https://api.github.com/users/Harikantipudi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Harikantipudi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Harikantipudi/subscriptions",
            "organizations_url": "https://api.github.com/users/Harikantipudi/orgs",
            "repos_url": "https://api.github.com/users/Harikantipudi/repos",
            "events_url": "https://api.github.com/users/Harikantipudi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Harikantipudi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-05T10:18:32Z",
        "updated_at": "2023-09-11T16:58:12Z",
        "closed_at": "2023-09-11T16:58:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am trying to generate a chain from langchain and append it to the configuration within nemoguard rails.  I am getting error message LLMChain' object has no attribute 'postprocessors\r\n\r\nI am on Langchain version 0.0.167 and nemoguardrails 0.2.0 . Nemoguard rails  0.2.0 is compatible only with the langchain version 0.0.167 and i guess postprocessor is on the latest langchain version \r\n\r\nCan you please check on this and provide a solution\r\n\r\nrails = LLMRails(llm=llm, config=rails_config)\r\ntitle_chain.postprocessors.append(rails)\r\nscript_chain.postprocessors.append(rails)\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5723/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5723/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5722",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5722/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5722/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5722/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5722",
        "id": 1741438633,
        "node_id": "I_kwDOIPDwls5nzD6p",
        "number": 5722,
        "title": "DOC: How to install from source?",
        "user": {
            "login": "sagar-spkt",
            "id": 22609549,
            "node_id": "MDQ6VXNlcjIyNjA5NTQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/22609549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sagar-spkt",
            "html_url": "https://github.com/sagar-spkt",
            "followers_url": "https://api.github.com/users/sagar-spkt/followers",
            "following_url": "https://api.github.com/users/sagar-spkt/following{/other_user}",
            "gists_url": "https://api.github.com/users/sagar-spkt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sagar-spkt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sagar-spkt/subscriptions",
            "organizations_url": "https://api.github.com/users/sagar-spkt/orgs",
            "repos_url": "https://api.github.com/users/sagar-spkt/repos",
            "events_url": "https://api.github.com/users/sagar-spkt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sagar-spkt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-05T10:06:50Z",
        "updated_at": "2023-11-10T16:09:02Z",
        "closed_at": "2023-11-10T16:09:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nI might've not noticed but I didn't see anywhere in the document instructions to install langchain from source so developers can work/test latest updates.the \n\n### Idea or request for content:\n\nAdd setup instructions from the source in the installation section in README.md.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5722/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5722/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5721",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5721/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5721/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5721/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5721",
        "id": 1741408702,
        "node_id": "PR_kwDOIPDwls5SLMci",
        "number": 5721,
        "title": "Update reX Exp  & Added method to return the type of the parser",
        "user": {
            "login": "albinjosep",
            "id": 66529363,
            "node_id": "MDQ6VXNlcjY2NTI5MzYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/66529363?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/albinjosep",
            "html_url": "https://github.com/albinjosep",
            "followers_url": "https://api.github.com/users/albinjosep/followers",
            "following_url": "https://api.github.com/users/albinjosep/following{/other_user}",
            "gists_url": "https://api.github.com/users/albinjosep/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/albinjosep/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/albinjosep/subscriptions",
            "organizations_url": "https://api.github.com/users/albinjosep/orgs",
            "repos_url": "https://api.github.com/users/albinjosep/repos",
            "events_url": "https://api.github.com/users/albinjosep/events{/privacy}",
            "received_events_url": "https://api.github.com/users/albinjosep/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5463330795,
                "node_id": "LA_kwDOIPDwls8AAAABRaPP6w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20test",
                "name": "needs test",
                "color": "E99695",
                "default": false,
                "description": "PR needs to be updated with tests"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-05T09:51:27Z",
        "updated_at": "2023-11-07T04:15:37Z",
        "closed_at": "2023-11-07T04:15:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5721",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5721",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5721.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5721.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5721/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5720",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5720/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5720/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5720/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5720",
        "id": 1741397634,
        "node_id": "I_kwDOIPDwls5ny56C",
        "number": 5720,
        "title": "AttributeError: 'GPT4All' object has no attribute 'model_type' (langchain 0.0.190)",
        "user": {
            "login": "christoph-daehne",
            "id": 5363485,
            "node_id": "MDQ6VXNlcjUzNjM0ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5363485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christoph-daehne",
            "html_url": "https://github.com/christoph-daehne",
            "followers_url": "https://api.github.com/users/christoph-daehne/followers",
            "following_url": "https://api.github.com/users/christoph-daehne/following{/other_user}",
            "gists_url": "https://api.github.com/users/christoph-daehne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christoph-daehne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christoph-daehne/subscriptions",
            "organizations_url": "https://api.github.com/users/christoph-daehne/orgs",
            "repos_url": "https://api.github.com/users/christoph-daehne/repos",
            "events_url": "https://api.github.com/users/christoph-daehne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christoph-daehne/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-05T09:44:08Z",
        "updated_at": "2023-06-06T07:30:11Z",
        "closed_at": "2023-06-05T19:45:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nHi, this is related to #5651 but (on my machine ;) ) the issue is still there.\r\n\r\n## Versions\r\n\r\n* Intel Mac with latest OSX\r\n* Python 3.11.2\r\n* langchain 0.0.190, includes fix for #5651 \r\n* ggml-mpt-7b-instruct.bin, downloaded at June 5th from https://gpt4all.io/models/ggml-mpt-7b-instruct.bin\r\n\r\n### Who can help?\r\n\r\n@pakcheera @bwv988 First of all: thanks for the report and the fix :). Did this issues disappear on you machines?\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\n## Error message\r\n\r\n```shell\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /Users/christoph/src/sandstorm-labs/development-tools/ai-support-chat/gpt4all/chat.py:30 in      \u2502\r\n\u2502 <module>                                                                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   27 \u2502   model_name=\"all-mpnet-base-v2\")                                                         \u2502\r\n\u2502   28                                                                                             \u2502\r\n\u2502   29 # see https://gpt4all.io/models/ggml-mpt-7b-instruct.bin                                    \u2502\r\n\u2502 \u2771 30 llm = GPT4All(                                                                              \u2502\r\n\u2502   31 \u2502   model=\"./ggml-mpt-7b-instruct.bin\",                                                     \u2502\r\n\u2502   32 \u2502   #backend='gptj',                                                                        \u2502\r\n\u2502   33 \u2502   top_p=0.5,                                                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 in pydantic.main.BaseModel.__init__:339                                                          \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 in pydantic.main.validate_model:1102                                                             \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/christoph/src/sandstorm-labs/development-tools/ai-support-chat/gpt4all/venv/lib/python3.1 \u2502\r\n\u2502 1/site-packages/langchain/llms/gpt4all.py:156 in validate_environment                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   153 \u2502   \u2502   if values[\"n_threads\"] is not None:                                                \u2502\r\n\u2502   154 \u2502   \u2502   \u2502   # set n_threads                                                                \u2502\r\n\u2502   155 \u2502   \u2502   \u2502   values[\"client\"].model.set_thread_count(values[\"n_threads\"])                   \u2502\r\n\u2502 \u2771 156 \u2502   \u2502   values[\"backend\"] = values[\"client\"].model_type                                    \u2502\r\n\u2502   157 \u2502   \u2502                                                                                      \u2502\r\n\u2502   158 \u2502   \u2502   return values                                                                      \u2502\r\n\u2502   159                                                                                            \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n```\r\n\r\nAs you can see in _gpt4all.py:156_ contains the changed from the fix of #5651\r\n\r\n## Code\r\n\r\n```python\r\nfrom langchain.llms import GPT4All\r\n\r\n# see https://gpt4all.io/models/ggml-mpt-7b-instruct.bin\r\nllm = GPT4All(\r\n    model=\"./ggml-mpt-7b-instruct.bin\",\r\n    #backend='gptj',\r\n    top_p=0.5,\r\n    top_k=0,\r\n    temp=0.1,\r\n    repeat_penalty=0.8,\r\n    n_threads=12,\r\n    n_batch=16,\r\n    n_ctx=2048)\r\n```\r\nFYI I am following [this example in a blog post](https://dev.to/akshayballal/beyond-openai-harnessing-open-source-models-to-create-your-personalized-ai-companion-1npb).\r\n\r\n### Expected behavior\r\n\r\nI expect an instance of _GPT4All_ instead of a stacktrace.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5720/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5720/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5719",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5719/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5719/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5719/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5719",
        "id": 1741393169,
        "node_id": "PR_kwDOIPDwls5SLJEw",
        "number": 5719,
        "title": "use tenacity to retry in cohere llm as it is done for openai llms",
        "user": {
            "login": "sagar-spkt",
            "id": 22609549,
            "node_id": "MDQ6VXNlcjIyNjA5NTQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/22609549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sagar-spkt",
            "html_url": "https://github.com/sagar-spkt",
            "followers_url": "https://api.github.com/users/sagar-spkt/followers",
            "following_url": "https://api.github.com/users/sagar-spkt/following{/other_user}",
            "gists_url": "https://api.github.com/users/sagar-spkt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sagar-spkt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sagar-spkt/subscriptions",
            "organizations_url": "https://api.github.com/users/sagar-spkt/orgs",
            "repos_url": "https://api.github.com/users/sagar-spkt/repos",
            "events_url": "https://api.github.com/users/sagar-spkt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sagar-spkt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T09:41:32Z",
        "updated_at": "2023-06-05T23:23:23Z",
        "closed_at": "2023-06-05T23:23:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5719",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5719",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5719.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5719.patch",
            "merged_at": "2023-06-05T23:23:22Z"
        },
        "body": "A minor update to retry Cohore API call in case of errors using tenacity as it is done for OpenAI LLMs.\r\n\r\n#### Who can review?\r\n\r\n@hwchase17, @agola11 \r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5719/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5719/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5718",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5718/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5718/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5718/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5718",
        "id": 1741384351,
        "node_id": "PR_kwDOIPDwls5SLHKW",
        "number": 5718,
        "title": "fixing gpt4all.py to use get_model_from_type instead of model_type",
        "user": {
            "login": "arulbenjaminchandru",
            "id": 3948944,
            "node_id": "MDQ6VXNlcjM5NDg5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3948944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arulbenjaminchandru",
            "html_url": "https://github.com/arulbenjaminchandru",
            "followers_url": "https://api.github.com/users/arulbenjaminchandru/followers",
            "following_url": "https://api.github.com/users/arulbenjaminchandru/following{/other_user}",
            "gists_url": "https://api.github.com/users/arulbenjaminchandru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arulbenjaminchandru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arulbenjaminchandru/subscriptions",
            "organizations_url": "https://api.github.com/users/arulbenjaminchandru/orgs",
            "repos_url": "https://api.github.com/users/arulbenjaminchandru/repos",
            "events_url": "https://api.github.com/users/arulbenjaminchandru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arulbenjaminchandru/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-05T09:36:05Z",
        "updated_at": "2023-06-05T21:39:58Z",
        "closed_at": "2023-06-05T21:39:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5718",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5718",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5718.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5718.patch",
            "merged_at": null
        },
        "body": "This  is to fix the error :   File \"\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\llms\\gpt4all.py\", line 156, in validate_environment\r\n    values[\"backend\"] = values[\"client\"].model_type\r\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: 'GPT4All' object has no attribute 'model_type'\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5718/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5718/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5717",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5717/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5717/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5717/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5717",
        "id": 1741315782,
        "node_id": "I_kwDOIPDwls5nyl7G",
        "number": 5717,
        "title": "Regular Expression Fails to Match Newline-Starting Action Inputs",
        "user": {
            "login": "dpoulopoulos",
            "id": 12573705,
            "node_id": "MDQ6VXNlcjEyNTczNzA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12573705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dpoulopoulos",
            "html_url": "https://github.com/dpoulopoulos",
            "followers_url": "https://api.github.com/users/dpoulopoulos/followers",
            "following_url": "https://api.github.com/users/dpoulopoulos/following{/other_user}",
            "gists_url": "https://api.github.com/users/dpoulopoulos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dpoulopoulos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dpoulopoulos/subscriptions",
            "organizations_url": "https://api.github.com/users/dpoulopoulos/orgs",
            "repos_url": "https://api.github.com/users/dpoulopoulos/repos",
            "events_url": "https://api.github.com/users/dpoulopoulos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dpoulopoulos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-05T08:59:46Z",
        "updated_at": "2023-11-01T16:06:55Z",
        "closed_at": "2023-11-01T16:06:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version: `0.0.189`\r\nOS: Ubuntu `22.04.2`\r\nPython version: `3.10.7`\r\n\n\n### Who can help?\n\n@vowelparrot\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nReproducing this issue can be challenging as it hinges on the action input generated by the LLM. Nevertheless, the issue occurs when using an agent of type `CONVERSATIONAL_REACT_DESCRIPTION`. The agent's output parser attempts to [extract](https://github.com/hwchase17/langchain/blob/d0d89d39efb5f292f72e70973f3b70c4ca095047/langchain/agents/conversational/output_parser.py#L21) both the tool's name that the agent needs to utilize for its task and the input to that tool based on the LLM prediction.\r\n\r\nIn order to accomplish this, the agent's output parser employs the following regular expression on the LLM prediction: `Action: (.*?)[\\n]*Action Input: (.*)`. This expression divides the LLM prediction into two components: i) the tool that needs to be utilized (Action) and ii) the tool's input (Action Input).\r\n\r\nHowever, the action input generated by an LLM is an arbitrary string. Hence, if the action input initiates with a newline character, the regular expression's search operation fails to find a match, resulting in the action input defaulting to an empty string. This issue stems from the fact that the `.` character in the regular expression doesn't match newline characters by default. Consequently, `(.*)` stops at the end of the line it started on.\r\n\r\nThis behavior aligns with the default functionality of the Python `re` library. To rectify this corner case, we must include the [`re.S`](https://docs.python.org/3/library/re.html#:~:text=in%20version%203.11.-,re.S,-%C2%B6) flag in the `re.search()` method. This will allow the `.` special character to match any character, including a newline.\r\n\r\n> re.S\r\n> re.DOTALL\r\n> Make the '.' special character match any character at all, including a newline; without this flag, '.' will match anything except a newline. Corresponds to the inline flag (?s).\n\n### Expected behavior\n\nThe `re.search()` method correctly matches the action input section of the LLM prediction and sets it to the relevant string, even if it starts with the new line character.\r\n\r\nI am prepared to open a new Pull Request (PR) to address this issue. The change involves modifying the following [line](https://github.com/hwchase17/langchain/blob/d0d89d39efb5f292f72e70973f3b70c4ca095047/langchain/agents/conversational/output_parser.py#L21):\r\n\r\nFrom:\r\n\r\n```python\r\n\r\nmatch = re.search(regex, text)\r\n```\r\n\r\nTo:\r\n\r\n```python\r\n\r\nmatch = re.search(regex, text, re.S)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5717/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5717/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5716",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5716/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5716/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5716/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5716",
        "id": 1741199998,
        "node_id": "PR_kwDOIPDwls5SKeqC",
        "number": 5716,
        "title": "Support chat history persistence in AutoGPT",
        "user": {
            "login": "alonroth",
            "id": 3149539,
            "node_id": "MDQ6VXNlcjMxNDk1Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3149539?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alonroth",
            "html_url": "https://github.com/alonroth",
            "followers_url": "https://api.github.com/users/alonroth/followers",
            "following_url": "https://api.github.com/users/alonroth/following{/other_user}",
            "gists_url": "https://api.github.com/users/alonroth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alonroth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alonroth/subscriptions",
            "organizations_url": "https://api.github.com/users/alonroth/orgs",
            "repos_url": "https://api.github.com/users/alonroth/repos",
            "events_url": "https://api.github.com/users/alonroth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alonroth/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-05T07:59:34Z",
        "updated_at": "2023-06-16T00:49:04Z",
        "closed_at": "2023-06-16T00:49:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5716",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5716",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5716.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5716.patch",
            "merged_at": "2023-06-16T00:49:03Z"
        },
        "body": "**Short Description**\r\nAdded a new argument to AutoGPT class which allows to persist the chat history to a file.\r\n\r\n**Changes**\r\n1. Removed the `self.full_message_history: List[BaseMessage] = []`\r\n2. Replaced it with `chat_history_memory` which can take any subclasses of `BaseChatMessageHistory`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5716/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5716/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5715",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5715/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5715/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5715/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5715",
        "id": 1741158539,
        "node_id": "PR_kwDOIPDwls5SKVzp",
        "number": 5715,
        "title": "feat: issue-5712 add sleep tool",
        "user": {
            "login": "whysage",
            "id": 67018871,
            "node_id": "MDQ6VXNlcjY3MDE4ODcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/67018871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/whysage",
            "html_url": "https://github.com/whysage",
            "followers_url": "https://api.github.com/users/whysage/followers",
            "following_url": "https://api.github.com/users/whysage/following{/other_user}",
            "gists_url": "https://api.github.com/users/whysage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/whysage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/whysage/subscriptions",
            "organizations_url": "https://api.github.com/users/whysage/orgs",
            "repos_url": "https://api.github.com/users/whysage/repos",
            "events_url": "https://api.github.com/users/whysage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/whysage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-05T07:31:54Z",
        "updated_at": "2023-06-07T16:39:02Z",
        "closed_at": "2023-06-07T16:39:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5715",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5715",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5715.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5715.patch",
            "merged_at": "2023-06-07T16:39:02Z"
        },
        "body": "Fixes # 5712 added sleep tool\r\n\r\n\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\n\r\n@vowelparrot \r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5715/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5715/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5714",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5714/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5714/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5714/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5714",
        "id": 1741133007,
        "node_id": "I_kwDOIPDwls5nx5TP",
        "number": 5714,
        "title": "NotEnoughElementsException",
        "user": {
            "login": "mnask",
            "id": 3390840,
            "node_id": "MDQ6VXNlcjMzOTA4NDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3390840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mnask",
            "html_url": "https://github.com/mnask",
            "followers_url": "https://api.github.com/users/mnask/followers",
            "following_url": "https://api.github.com/users/mnask/following{/other_user}",
            "gists_url": "https://api.github.com/users/mnask/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mnask/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mnask/subscriptions",
            "organizations_url": "https://api.github.com/users/mnask/orgs",
            "repos_url": "https://api.github.com/users/mnask/repos",
            "events_url": "https://api.github.com/users/mnask/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mnask/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-05T07:13:18Z",
        "updated_at": "2023-10-06T16:07:55Z",
        "closed_at": "2023-10-06T16:07:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "im getting this error \r\n\r\nAttributeError: module 'chromadb.errors' has no attribute 'NotEnoughElementsException'\r\n\r\n\r\nhere my code \r\n\r\n```\r\npersist_directory = 'vectorstore'\r\nembeddings = OpenAIEmbeddings()\r\nvectorstore = Chroma(persist_directory=persist_directory, embedding_function=embeddings)\r\nchat_history = []\r\nvectorstore.add_texts([\"text text text\"])\r\nllm = ChatOpenAI(temperature=0.2)\r\n\r\nqa = ConversationalRetrievalChain.from_llm(\r\n    llm,\r\n    vectorstore.as_retriever(),\r\n)  \r\n```\r\n\r\n\r\ndoes it mean my vectorstore is damaged ?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5714/reactions",
            "total_count": 6,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 6
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5714/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5713",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5713/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5713/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5713/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5713",
        "id": 1741095321,
        "node_id": "I_kwDOIPDwls5nxwGZ",
        "number": 5713,
        "title": "Inference parameters for Bedrock titan models not working",
        "user": {
            "login": "aarora79",
            "id": 14024481,
            "node_id": "MDQ6VXNlcjE0MDI0NDgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/14024481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aarora79",
            "html_url": "https://github.com/aarora79",
            "followers_url": "https://api.github.com/users/aarora79/followers",
            "following_url": "https://api.github.com/users/aarora79/following{/other_user}",
            "gists_url": "https://api.github.com/users/aarora79/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aarora79/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aarora79/subscriptions",
            "organizations_url": "https://api.github.com/users/aarora79/orgs",
            "repos_url": "https://api.github.com/users/aarora79/repos",
            "events_url": "https://api.github.com/users/aarora79/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aarora79/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-06-05T06:48:57Z",
        "updated_at": "2023-08-16T16:31:01Z",
        "closed_at": "2023-06-08T21:16:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version 0.0.190\r\nPython 3.9\n\n### Who can help?\n\n@seanpmorgan @3coins \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nTried the following to provide the `temperature` and `maxTokenCount` parameters when using the `Bedrock` class for the `amazon.titan-tg1-large` model.\r\n\r\n```\r\nimport boto3\r\nimport botocore\r\nfrom langchain.chains import LLMChain\r\nfrom langchain.llms.bedrock import Bedrock\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.embeddings import BedrockEmbeddings\r\n\r\nprompt = PromptTemplate(\r\n    input_variables=[\"text\"],\r\n    template=\"{text}\",\r\n)\r\n\r\nllm = Bedrock(model_id=\"amazon.titan-tg1-large\")\r\nllmchain = LLMChain(llm=llm, prompt=prompt)\r\n\r\nllm.model_kwargs = {'temperature': 0.3, \"maxTokenCount\": 512}\r\n\r\ntext = \"Write a blog explaining Generative AI in ELI5 style.\"\r\nresponse = llmchain.run(text=text)\r\nprint(f\"prompt={text}\\n\\nresponse={response}\")\r\n```\r\n\r\nThis results in the following exception\r\n```\r\nValueError: Error raised by bedrock service: An error occurred (ValidationException) when calling the InvokeModel operation: The provided inference configurations are invalid\r\n```\r\n\r\nThis happens because https://github.com/hwchase17/langchain/blob/d0d89d39efb5f292f72e70973f3b70c4ca095047/langchain/llms/bedrock.py#L20 passes these params as key value pairs rather than putting them in the `textgenerationConfig` structure as the Titan model expects them to be,\r\n\r\nThe proposed fix is as follows:\r\n```\r\n def prepare_input(\r\n        cls, provider: str, prompt: str, model_kwargs: Dict[str, Any]\r\n    ) -> Dict[str, Any]:\r\n     input_body = {**model_kwargs}\r\n     if provider == \"anthropic\" or provider == \"ai21\":\r\n         input_body[\"prompt\"] = prompt\r\n     elif provider == \"amazon\":\r\n          input_body = dict()\r\n          input_body[\"inputText\"] = prompt\r\n          input_body[\"textGenerationConfig] = {**model_kwargs}           \r\n      else:\r\n          input_body[\"inputText\"] = prompt\r\n\r\n    if provider == \"anthropic\" and \"max_tokens_to_sample\" not in input_body:\r\n        input_body[\"max_tokens_to_sample\"] = 50\r\n\r\n    return input_body\r\n``` \r\n\r\n\r\n```\n\n### Expected behavior\n\nSupport the inference config parameters.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5713/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5713/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5712",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5712/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5712/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5712/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5712",
        "id": 1741086318,
        "node_id": "I_kwDOIPDwls5nxt5u",
        "number": 5712,
        "title": "Create sleep tool",
        "user": {
            "login": "whysage",
            "id": 67018871,
            "node_id": "MDQ6VXNlcjY3MDE4ODcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/67018871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/whysage",
            "html_url": "https://github.com/whysage",
            "followers_url": "https://api.github.com/users/whysage/followers",
            "following_url": "https://api.github.com/users/whysage/following{/other_user}",
            "gists_url": "https://api.github.com/users/whysage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/whysage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/whysage/subscriptions",
            "organizations_url": "https://api.github.com/users/whysage/orgs",
            "repos_url": "https://api.github.com/users/whysage/repos",
            "events_url": "https://api.github.com/users/whysage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/whysage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-05T06:40:46Z",
        "updated_at": "2023-09-05T05:32:01Z",
        "closed_at": "2023-09-05T05:30:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCreate sleep tool\n\n### Motivation\n\nSome external processes require time to be done. So agent need to just wait\n\n### Your contribution\n\nI'll do it and create pull request",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5712/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5712/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5711",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5711/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5711/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5711/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5711",
        "id": 1741023442,
        "node_id": "PR_kwDOIPDwls5SJ4tA",
        "number": 5711,
        "title": "Update test_base.py",
        "user": {
            "login": "albinjosep",
            "id": 66529363,
            "node_id": "MDQ6VXNlcjY2NTI5MzYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/66529363?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/albinjosep",
            "html_url": "https://github.com/albinjosep",
            "followers_url": "https://api.github.com/users/albinjosep/followers",
            "following_url": "https://api.github.com/users/albinjosep/following{/other_user}",
            "gists_url": "https://api.github.com/users/albinjosep/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/albinjosep/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/albinjosep/subscriptions",
            "organizations_url": "https://api.github.com/users/albinjosep/orgs",
            "repos_url": "https://api.github.com/users/albinjosep/repos",
            "events_url": "https://api.github.com/users/albinjosep/events{/privacy}",
            "received_events_url": "https://api.github.com/users/albinjosep/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-05T05:57:00Z",
        "updated_at": "2023-11-07T04:16:10Z",
        "closed_at": "2023-11-07T04:16:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5711",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5711",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5711.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5711.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5711/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5711/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5710",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5710/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5710/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5710/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5710",
        "id": 1740992217,
        "node_id": "I_kwDOIPDwls5nxW7Z",
        "number": 5710,
        "title": "DOC: tracing documentation \"404 Not Found\"",
        "user": {
            "login": "ROMEEZHOU",
            "id": 72342196,
            "node_id": "MDQ6VXNlcjcyMzQyMTk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/72342196?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ROMEEZHOU",
            "html_url": "https://github.com/ROMEEZHOU",
            "followers_url": "https://api.github.com/users/ROMEEZHOU/followers",
            "following_url": "https://api.github.com/users/ROMEEZHOU/following{/other_user}",
            "gists_url": "https://api.github.com/users/ROMEEZHOU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ROMEEZHOU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ROMEEZHOU/subscriptions",
            "organizations_url": "https://api.github.com/users/ROMEEZHOU/orgs",
            "repos_url": "https://api.github.com/users/ROMEEZHOU/repos",
            "events_url": "https://api.github.com/users/ROMEEZHOU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ROMEEZHOU/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-05T05:27:47Z",
        "updated_at": "2023-09-11T16:58:18Z",
        "closed_at": "2023-09-11T16:58:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nI am trying to view the documentation about tracing via Use Cases --> Evaluation --> Question Answering Benchmarking: State of the Union Address --> \"See [here](https://langchain.readthedocs.io/en/latest/tracing.html) for an explanation of what tracing is and how to set it up\", but the link shows \"404 Not Found\"\r\n<img width=\"1247\" alt=\"Screen Shot 2023-06-05 at 13 26 52\" src=\"https://github.com/hwchase17/langchain/assets/72342196/35ea922e-e9ca-4e97-ba8f-304a79474771\">\r\n\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5710/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5710/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5709",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5709/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5709/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5709/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5709",
        "id": 1740936061,
        "node_id": "I_kwDOIPDwls5nxJN9",
        "number": 5709,
        "title": "Issue: get intermediate df from create_pandas_dataframe_agent",
        "user": {
            "login": "raywgs",
            "id": 128401657,
            "node_id": "U_kgDOB6dA-Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/128401657?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raywgs",
            "html_url": "https://github.com/raywgs",
            "followers_url": "https://api.github.com/users/raywgs/followers",
            "following_url": "https://api.github.com/users/raywgs/following{/other_user}",
            "gists_url": "https://api.github.com/users/raywgs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raywgs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raywgs/subscriptions",
            "organizations_url": "https://api.github.com/users/raywgs/orgs",
            "repos_url": "https://api.github.com/users/raywgs/repos",
            "events_url": "https://api.github.com/users/raywgs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raywgs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-05T04:25:03Z",
        "updated_at": "2023-09-11T16:58:22Z",
        "closed_at": "2023-09-11T16:58:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi,\r\n\r\nI was wondering if there is any way of getting the pandas dataframe during the execution of create_pandas_dataframe_agent.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5709/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5709/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5708",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5708/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5708/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5708/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5708",
        "id": 1740884970,
        "node_id": "PR_kwDOIPDwls5SJZxc",
        "number": 5708,
        "title": "feat: :sparkles: Added a LLM callback to store LLM IO in-memory",
        "user": {
            "login": "vempaliakhil96",
            "id": 24319338,
            "node_id": "MDQ6VXNlcjI0MzE5MzM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24319338?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vempaliakhil96",
            "html_url": "https://github.com/vempaliakhil96",
            "followers_url": "https://api.github.com/users/vempaliakhil96/followers",
            "following_url": "https://api.github.com/users/vempaliakhil96/following{/other_user}",
            "gists_url": "https://api.github.com/users/vempaliakhil96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vempaliakhil96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vempaliakhil96/subscriptions",
            "organizations_url": "https://api.github.com/users/vempaliakhil96/orgs",
            "repos_url": "https://api.github.com/users/vempaliakhil96/repos",
            "events_url": "https://api.github.com/users/vempaliakhil96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vempaliakhil96/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T03:56:16Z",
        "updated_at": "2023-06-09T15:54:35Z",
        "closed_at": "2023-06-09T15:54:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5708",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5708",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5708.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5708.patch",
            "merged_at": null
        },
        "body": "This can be useful if we want an interface to store LLM's output to some DB. I have created a very basic callback class, please guide me on how we can make it better and more extensible. Also if something like this already exists, please guide me I am very interested in how we can log these LLM inputs-outputs to a DB so that we can use the back as example prompts\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5708/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5708/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5707",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5707/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5707/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5707/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5707",
        "id": 1740854796,
        "node_id": "I_kwDOIPDwls5nw1YM",
        "number": 5707,
        "title": "ValueError: Not a valid json with Directory Loader function",
        "user": {
            "login": "evaagustine",
            "id": 55236663,
            "node_id": "MDQ6VXNlcjU1MjM2NjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/55236663?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evaagustine",
            "html_url": "https://github.com/evaagustine",
            "followers_url": "https://api.github.com/users/evaagustine/followers",
            "following_url": "https://api.github.com/users/evaagustine/following{/other_user}",
            "gists_url": "https://api.github.com/users/evaagustine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evaagustine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evaagustine/subscriptions",
            "organizations_url": "https://api.github.com/users/evaagustine/orgs",
            "repos_url": "https://api.github.com/users/evaagustine/repos",
            "events_url": "https://api.github.com/users/evaagustine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evaagustine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-05T03:32:38Z",
        "updated_at": "2023-07-27T11:11:34Z",
        "closed_at": "2023-06-12T02:53:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, I load a folder with txt file and using Directory Loader. It keeps show this error\r\n\r\n> File \"/Users/mekari/test-venv/lib/python3.8/site-packages/unstructured/partition/json.py\", line 45, in partition_json\r\n>     raise ValueError(\"Not a valid json\")\r\n> ValueError: Not a valid json\r\n\r\nWhen I tried with just 10 txt file before, it was fine. Now I loaded around hundred files it shows that error. After searched, probably caused by one of the documents is not valid when parsing it to json. But I struggle to track which document caused the error. Maybe any ways to do it? Here is my code\r\n\r\n> def construct_document(directory_path, persists_directory):\r\n>   loader = DirectoryLoader(directory_path, glob=\"**/*.txt\")\r\n>   documents = loader.load()\r\n>   text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\n>   texts = text_splitter.split_documents(documents)\r\n>   embeddings = OpenAIEmbeddings(openai_api_key=os.environ[\"OPENAI_API_KEY\"])\r\n>   vectordb = Chroma.from_documents(texts, embeddings, \r\n>                                   persist_directory=persists_directory)\r\n>   vectordb.persist()\r\n>   return embeddings\r\n\r\nThank you",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5707/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5707/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5706",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5706/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5706/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5706/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5706",
        "id": 1740788181,
        "node_id": "I_kwDOIPDwls5nwlHV",
        "number": 5706,
        "title": "JSON Agent fails when top level of input json is List object.",
        "user": {
            "login": "nai-kon",
            "id": 25865392,
            "node_id": "MDQ6VXNlcjI1ODY1Mzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/25865392?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nai-kon",
            "html_url": "https://github.com/nai-kon",
            "followers_url": "https://api.github.com/users/nai-kon/followers",
            "following_url": "https://api.github.com/users/nai-kon/following{/other_user}",
            "gists_url": "https://api.github.com/users/nai-kon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nai-kon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nai-kon/subscriptions",
            "organizations_url": "https://api.github.com/users/nai-kon/orgs",
            "repos_url": "https://api.github.com/users/nai-kon/repos",
            "events_url": "https://api.github.com/users/nai-kon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nai-kon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-05T02:45:49Z",
        "updated_at": "2023-10-26T09:08:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nJsonSpec() failes to init when top level of json is List.\r\nIt seems the JsonSpec only supports a top level dict object. \r\n\r\nWe can avoid the error by adding a dummy key to the list, but is this an intended limitation?\r\n\r\ntest.json\r\n```json\r\n[\r\n  {\"name\": \"Mark\", \"age\":16},\r\n  {\"name\": \"Gates\", \"age\":63}\r\n]\r\n```\r\n\r\nCode:\r\n```python\r\nimport pathlib\r\nfrom langchain.agents.agent_toolkits import JsonToolkit\r\nfrom langchain.tools.json.tool import JsonSpec\r\nfrom langchain.agents import create_json_agent\r\nfrom langchain.llms import OpenAI\r\n\r\njson_spec = JsonSpec.from_file(pathlib.Path(\"test.json\"))\r\njson_toolkit = JsonToolkit(spec=json_spec)\r\nagent = create_json_agent(OpenAI(), json_toolkit, verbose=True)\r\n```\r\n\r\nError:\r\n```\r\nTraceback (most recent call last):\r\n    json_spec = JsonSpec.from_file(pathlib.Path(\"test.json\"))\r\n  File \"/usr/local/lib/python3.10/dist-packages/langchain/tools/json/tool.py\", line 40, in from_file\r\n    return cls(dict_=dict_)\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for JsonSpec\r\ndict_\r\n  value is not a valid dict (type=type_error.dict)\r\n  ```\r\n  \r\nVersions\r\n * Python 3.10.6\r\n * langchain  0.0.186\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5706/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5706/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5705",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5705/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5705/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5705/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5705",
        "id": 1740785445,
        "node_id": "PR_kwDOIPDwls5SJDBV",
        "number": 5705,
        "title": "[Draft] Add initial draft of document manager",
        "user": {
            "login": "aravindsrinivasan",
            "id": 22220618,
            "node_id": "MDQ6VXNlcjIyMjIwNjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22220618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aravindsrinivasan",
            "html_url": "https://github.com/aravindsrinivasan",
            "followers_url": "https://api.github.com/users/aravindsrinivasan/followers",
            "following_url": "https://api.github.com/users/aravindsrinivasan/following{/other_user}",
            "gists_url": "https://api.github.com/users/aravindsrinivasan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aravindsrinivasan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aravindsrinivasan/subscriptions",
            "organizations_url": "https://api.github.com/users/aravindsrinivasan/orgs",
            "repos_url": "https://api.github.com/users/aravindsrinivasan/repos",
            "events_url": "https://api.github.com/users/aravindsrinivasan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aravindsrinivasan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-05T02:41:19Z",
        "updated_at": "2023-09-15T02:57:36Z",
        "closed_at": "2023-09-15T02:57:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5705",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5705",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5705.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5705.patch",
            "merged_at": null
        },
        "body": "Adding very initial rough draft of the document manger.\r\n\r\nOn a high level it supports the following operations:\r\n- Add\r\n- Update\r\n- UpdateTruncate\r\n\r\n`Update` and `UpdateTruncate` differ in that `UpdateTruncate` deletes the set of documents that are not present in the new set of documents passed in. `Update` only updates the existing documents. \r\n\r\nThe document manager currently returns the a list of operations that need to be performed by the user on the vector store. This can be integrated into the existing vector store interface by adding a new method in `VectorStore` that applies add, update and delete operations.\r\n\r\nAn example script is included in the changes which is an example of the interface. It is also runnable, and proves the correctness of the document manager.\r\n\r\n@hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5705/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5704",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5704/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5704/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5704/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5704",
        "id": 1740785386,
        "node_id": "PR_kwDOIPDwls5SJDAn",
        "number": 5704,
        "title": "bump version to 190",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T02:41:12Z",
        "updated_at": "2023-06-05T03:04:52Z",
        "closed_at": "2023-06-05T03:04:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5704",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5704",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5704.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5704.patch",
            "merged_at": "2023-06-05T03:04:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5704/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5704/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5703",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5703/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5703/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5703/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5703",
        "id": 1740736800,
        "node_id": "PR_kwDOIPDwls5SI4aV",
        "number": 5703,
        "title": "feat: Support for `Tigris` Vector Database for vector search",
        "user": {
            "login": "adilansari",
            "id": 2469198,
            "node_id": "MDQ6VXNlcjI0NjkxOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2469198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adilansari",
            "html_url": "https://github.com/adilansari",
            "followers_url": "https://api.github.com/users/adilansari/followers",
            "following_url": "https://api.github.com/users/adilansari/following{/other_user}",
            "gists_url": "https://api.github.com/users/adilansari/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adilansari/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adilansari/subscriptions",
            "organizations_url": "https://api.github.com/users/adilansari/orgs",
            "repos_url": "https://api.github.com/users/adilansari/repos",
            "events_url": "https://api.github.com/users/adilansari/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adilansari/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-05T01:41:34Z",
        "updated_at": "2023-06-06T03:39:17Z",
        "closed_at": "2023-06-06T03:39:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5703",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5703",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5703.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5703.patch",
            "merged_at": "2023-06-06T03:39:16Z"
        },
        "body": "### Changes\r\n- New vector store integration - [Tigris](https://tigrisdata.com)\r\n- Adds [tigrisdb](https://pypi.org/project/tigrisdb/) optional dependency\r\n- Example notebook demonstrating usage\r\n\r\nFixes #5535 \r\nCloses tigrisdata/tigris-client-python#40\r\n\r\n#### Twitter handles\r\nWe'd love a shoutout on our [@TigrisData](https://twitter.com/TigrisData) and [@adilansari](https://twitter.com/adilansari) twitter handles\r\n\r\n#### Who can review?\r\n@dev2049 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5703/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5702",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5702/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5702/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5702/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5702",
        "id": 1740690391,
        "node_id": "I_kwDOIPDwls5nwNPX",
        "number": 5702,
        "title": "Support mailman in document loader",
        "user": {
            "login": "TommyLike",
            "id": 5671225,
            "node_id": "MDQ6VXNlcjU2NzEyMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5671225?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TommyLike",
            "html_url": "https://github.com/TommyLike",
            "followers_url": "https://api.github.com/users/TommyLike/followers",
            "following_url": "https://api.github.com/users/TommyLike/following{/other_user}",
            "gists_url": "https://api.github.com/users/TommyLike/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TommyLike/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TommyLike/subscriptions",
            "organizations_url": "https://api.github.com/users/TommyLike/orgs",
            "repos_url": "https://api.github.com/users/TommyLike/repos",
            "events_url": "https://api.github.com/users/TommyLike/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TommyLike/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-05T00:41:41Z",
        "updated_at": "2023-09-11T16:58:27Z",
        "closed_at": "2023-09-11T16:58:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIt would be great if mailman could be supported in document loader, reference: https://list.org/\n\n### Motivation\n\nFor the purpose of digesting content in mailman and quering.\n\n### Your contribution\n\nNot sure.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5702/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5702/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5700",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5700/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5700/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5700/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5700",
        "id": 1740659389,
        "node_id": "I_kwDOIPDwls5nwFq9",
        "number": 5700,
        "title": "DOC: Type hint mismatch indicating that chain.apply should return Dict[str, str] instead of Dict[str, Any]",
        "user": {
            "login": "KennethEnevoldsen",
            "id": 23721977,
            "node_id": "MDQ6VXNlcjIzNzIxOTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/23721977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KennethEnevoldsen",
            "html_url": "https://github.com/KennethEnevoldsen",
            "followers_url": "https://api.github.com/users/KennethEnevoldsen/followers",
            "following_url": "https://api.github.com/users/KennethEnevoldsen/following{/other_user}",
            "gists_url": "https://api.github.com/users/KennethEnevoldsen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KennethEnevoldsen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KennethEnevoldsen/subscriptions",
            "organizations_url": "https://api.github.com/users/KennethEnevoldsen/orgs",
            "repos_url": "https://api.github.com/users/KennethEnevoldsen/repos",
            "events_url": "https://api.github.com/users/KennethEnevoldsen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KennethEnevoldsen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-04T23:31:01Z",
        "updated_at": "2023-09-15T22:13:02Z",
        "closed_at": "2023-09-04T07:59:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nNot sure if this is actually a documentation error, but at least the error is in the code's typehints in `langchain.chain.base.py`, where:\r\n\r\n```\r\n    def __call__(\r\n        self,\r\n        inputs: Union[Dict[str, Any], Any],\r\n        return_only_outputs: bool = False,\r\n        callbacks: Callbacks = None,\r\n    ) -> Dict[str, Any]:\r\n```\r\nindicates that it returns a dict with Any values while the .apply is specified as follows:\r\n\r\n```\r\n    def apply(\r\n        self, input_list: List[Dict[str, Any]], callbacks: Callbacks = None\r\n    ) -> List[Dict[str, str]]:\r\n        \"\"\"Call the chain on all inputs in the list.\"\"\"\r\n        return [self(inputs, callbacks=callbacks) for inputs in input_list]\r\n```\r\n\r\nThis seems to be a consistent error also applying to e.g. `.run`.\r\n\r\nLangchain version:\r\n0.0.187\n\n### Idea or request for content:\n\nChange the type hints to consistently be dict[str, Any]. This however, will open up the output space considerably.\r\n\r\nIf desired I can open PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5700/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5700/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5699",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5699/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5699/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5699/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5699",
        "id": 1740645238,
        "node_id": "I_kwDOIPDwls5nwCN2",
        "number": 5699,
        "title": "Sitemap filters not working due to lack of stripping whitespace and newlines",
        "user": {
            "login": "ShelbyJenkins",
            "id": 47464908,
            "node_id": "MDQ6VXNlcjQ3NDY0OTA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47464908?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShelbyJenkins",
            "html_url": "https://github.com/ShelbyJenkins",
            "followers_url": "https://api.github.com/users/ShelbyJenkins/followers",
            "following_url": "https://api.github.com/users/ShelbyJenkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShelbyJenkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShelbyJenkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShelbyJenkins/subscriptions",
            "organizations_url": "https://api.github.com/users/ShelbyJenkins/orgs",
            "repos_url": "https://api.github.com/users/ShelbyJenkins/repos",
            "events_url": "https://api.github.com/users/ShelbyJenkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShelbyJenkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-04T22:49:54Z",
        "updated_at": "2023-06-05T23:33:57Z",
        "closed_at": "2023-06-05T23:33:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "https://github.com/hwchase17/langchain/blob/8d9e9e013ccfe72d839dcfa37a3f17c340a47a88/langchain/document_loaders/sitemap.py#L83\r\n\r\nif\r\n```\r\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\r\n    <url>\r\n        <loc>\r\n            https://tatum.com/\r\n        </loc>\r\n        <xhtml:link rel=\"alternate\" hreflang=\"x-default\" href=\"https://tatum.com/\"/>\r\n    </url>\r\n```\r\nthen\r\n` re.match(r, loc.text) for r in self.filter_urls` \r\n\r\nComparison to filter here will be comparing against a value that includes those whitespaces and newlines.\r\n\r\nWhat worked for me:\r\n\r\n``` def parse_sitemap(self, soup: Any) -> List[dict]:\r\n        \"\"\"Parse sitemap xml and load into a list of dicts.\"\"\"\r\n        els = []\r\n        for url in soup.find_all(\"url\"):\r\n            loc = url.find(\"loc\")\r\n            if not loc:\r\n                continue\r\n            loc_text = loc.text.strip()\r\n            if self.filter_urls and not any(\r\n                re.match(r, loc_text) for r in self.filter_urls\r\n            ):\r\n                continue```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5699/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5699/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5697",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5697/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5697/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5697/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5697",
        "id": 1740613739,
        "node_id": "I_kwDOIPDwls5nv6hr",
        "number": 5697,
        "title": "DOC: Update Helicone docs to include requirement for API key",
        "user": {
            "login": "alexkreidler",
            "id": 11166947,
            "node_id": "MDQ6VXNlcjExMTY2OTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/11166947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexkreidler",
            "html_url": "https://github.com/alexkreidler",
            "followers_url": "https://api.github.com/users/alexkreidler/followers",
            "following_url": "https://api.github.com/users/alexkreidler/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexkreidler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexkreidler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexkreidler/subscriptions",
            "organizations_url": "https://api.github.com/users/alexkreidler/orgs",
            "repos_url": "https://api.github.com/users/alexkreidler/repos",
            "events_url": "https://api.github.com/users/alexkreidler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexkreidler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-04T21:30:25Z",
        "updated_at": "2023-09-10T16:07:47Z",
        "closed_at": "2023-09-10T16:07:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nCurrently the [Helicone integration docs](https://python.langchain.com/en/latest/integrations/helicone.html) don't include the fact that an [API key now must be used by passing this header](https://docs.helicone.ai/quickstart/integrate-in-one-minute):\r\n```\r\nHelicone-Auth: Bearer $HELICONE_API_KEY\r\n```\n\n### Idea or request for content:\n\nAdd this to the docs.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5697/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5697/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5696",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5696/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5696/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5696/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5696",
        "id": 1740608937,
        "node_id": "PR_kwDOIPDwls5SIdXA",
        "number": 5696,
        "title": "Add metadata filter capability to similarity search functions for Supabase",
        "user": {
            "login": "benharris2510",
            "id": 45742646,
            "node_id": "MDQ6VXNlcjQ1NzQyNjQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/45742646?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benharris2510",
            "html_url": "https://github.com/benharris2510",
            "followers_url": "https://api.github.com/users/benharris2510/followers",
            "following_url": "https://api.github.com/users/benharris2510/following{/other_user}",
            "gists_url": "https://api.github.com/users/benharris2510/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benharris2510/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benharris2510/subscriptions",
            "organizations_url": "https://api.github.com/users/benharris2510/orgs",
            "repos_url": "https://api.github.com/users/benharris2510/repos",
            "events_url": "https://api.github.com/users/benharris2510/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benharris2510/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-04T21:16:22Z",
        "updated_at": "2023-08-11T22:51:33Z",
        "closed_at": "2023-08-11T22:51:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5696",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5696",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5696.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5696.patch",
            "merged_at": null
        },
        "body": "\r\nTitle:\r\nAdd metadata filtering capabilities to similarity search functions\r\n\r\nDescription:\r\n\r\nThis PR enhances the functionality of the similarity search methods in our codebase. Specifically, we now support optional metadata-based filtering in our search functions.\r\n\r\nDetails:\r\n\r\nThe affected functions include:\r\n\r\nsimilarity_search\r\nsimilarity_search_by_vector\r\nsimilarity_search_with_relevance_scores\r\nsimilarity_search_by_vector_with_relevance_scores\r\nsimilarity_search_by_vector_returning_embeddings\r\nFor each of these functions, a new filter argument has been added. This argument accepts a dictionary that specifies metadata fields and their desired values.\r\n\r\nWhen the filter dictionary is provided, the search functions will return documents that not only match the query based on similarity but also satisfy the metadata criteria defined by the filter.\r\n\r\nImpact:\r\n\r\nThis change provides greater flexibility for users when conducting similarity searches. They can now refine their search results based on specific metadata properties, leading to more accurate and targeted results.\r\n\r\nTests:\r\n\r\nTesting will involve invoking the modified functions with various filter criteria and verifying the returned documents meet both the similarity and metadata filter criteria.\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049 may be interested",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5696/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5696/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5695",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5695/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5695/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5695/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5695",
        "id": 1740601368,
        "node_id": "PR_kwDOIPDwls5SIboq",
        "number": 5695,
        "title": "Use client from LCP-SDK",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-04T21:08:32Z",
        "updated_at": "2023-06-06T13:51:06Z",
        "closed_at": "2023-06-06T13:51:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5695",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5695",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5695.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5695.patch",
            "merged_at": "2023-06-06T13:51:05Z"
        },
        "body": "- Remove the client implementation (this breaks backwards compatibility for existing testers. I could keep the stub in that file if we want, but not many people are using it yet\r\n- Add SDK as dependency\r\n- Update the 'run_on_dataset' method to be a function that optionally accepts a client as an argument\r\n- Remove the langchain plus server implementation (you get it for free with the SDK now)\r\n\r\nWe could make the SDK optional  for now, but the plan is to use w/in the tracer so it would likely become a hard dependency at some point. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5695/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5695/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5694",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5694/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5694/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5694/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5694",
        "id": 1740574477,
        "node_id": "PR_kwDOIPDwls5SIXLc",
        "number": 5694,
        "title": "Add session-based context storage to VectorStoreRetrieverMemory",
        "user": {
            "login": "asidapara",
            "id": 8473417,
            "node_id": "MDQ6VXNlcjg0NzM0MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8473417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asidapara",
            "html_url": "https://github.com/asidapara",
            "followers_url": "https://api.github.com/users/asidapara/followers",
            "following_url": "https://api.github.com/users/asidapara/following{/other_user}",
            "gists_url": "https://api.github.com/users/asidapara/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asidapara/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asidapara/subscriptions",
            "organizations_url": "https://api.github.com/users/asidapara/orgs",
            "repos_url": "https://api.github.com/users/asidapara/repos",
            "events_url": "https://api.github.com/users/asidapara/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asidapara/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-04T20:34:41Z",
        "updated_at": "2023-08-11T22:49:44Z",
        "closed_at": "2023-08-11T22:49:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5694",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5694",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5694.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5694.patch",
            "merged_at": null
        },
        "body": "### Title: Add Session-Based Context Storage to SessionVectorStoreRetrieverMemory\r\n\r\n#### Description:\r\n\r\nThis PR introduces a new feature to the `SessionVectorStoreRetrieverMemory` class that allows developers to store and retrieve the history of a particular chat session. It proposes a new class, `SessionVectorStoreRetrieverMemory`, which extends `VectorStoreRetrieverMemory` and adds a `session_id` field. \r\n\r\nThe key changes include:\r\n\r\n- The addition of a `session_id` field, which will be used to uniquely identify a chat session. This will allow us to store and retrieve the history of a particular session.\r\n\r\n- Modifying the `_form_documents` method to attach the `session_id` to each document created. This means that each document in our vector store will now include information about the session it belongs to.\r\n\r\nThis feature requires the `VectorStoreRetriever` to support metadata filtering. For instance, you can create a retriever that filters on the `session_id` field as follows:\r\n\r\n```python\r\nimport uuid\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.memory import SessionVectorStoreRetrieverMemory\r\n\r\n# generate a random session id\r\nsession_id = uuid.uuid4().hex\r\n\r\nembedding_fn = OpenAIEmbeddings()\r\n\r\nvec_store = Pinecone.from_existing_index(PINECONE_INDEX, embedding_fn, text_key=\"chat_memory\")\r\n\r\n# include session_id as param in retriever and memory object\r\nretriever = vec_store.as_retriever(search_kwargs={'k': 1, 'filter': {'session_id': session_id}})\r\nmemory = SessionVectorStoreRetrieverMemory(retriever=retriever, session_id=session_id)  \r\n\r\nmemory.save_context({\"input\": \"My favorite food is pizza\"}, {\"output\": \"thats good to know\"})\r\nmemory.save_context({\"input\": \"My favorite sport is soccer\"}, {\"output\": \"...\"})\r\nmemory.save_context({\"input\": \"I don't the Celtics\"}, {\"output\": \"ok\"}) \r\n\r\nprint(memory.load_memory_variables({\"prompt\": \"what sport should i watch?\"})[\"history\"])\r\n\r\n\r\n```\r\nThis will ensure that only documents with the specified session_id are returned when a query is made.\r\n\r\nThe rationale behind these changes is to enable a finer granularity of data retrieval. Currently, the SessionVectorStoreRetrieverMemory class retrieves relevant documents based on a query without considering the context of a chat session. By adding the session_id, we can retrieve documents that are not only relevant to the query but also belong to the same chat session. This makes it possible to have more context-aware conversations and could improve the quality of our chatbot's responses, while maintaining privacy between sessions of different users.\r\n\r\nThe change is backward-compatible and does not affect the existing functionality of the SessionVectorStoreRetrieverMemory class. Developers can choose to use the session-based version or the original version depending on their needs.\r\n\r\nContributor: Adi Sidapara (Github: @asidapara, Twitter: @AdiSidapara)\r\n\r\nCould you review? @hwchase17 @dev2049 Thanks in advance!\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5694/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5694/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5693",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5693/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5693/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5693/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5693",
        "id": 1740534738,
        "node_id": "PR_kwDOIPDwls5SIO6Z",
        "number": 5693,
        "title": "Fix serialization issue with W&B",
        "user": {
            "login": "jjzhuo",
            "id": 134809928,
            "node_id": "U_kgDOCAkJSA",
            "avatar_url": "https://avatars.githubusercontent.com/u/134809928?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jjzhuo",
            "html_url": "https://github.com/jjzhuo",
            "followers_url": "https://api.github.com/users/jjzhuo/followers",
            "following_url": "https://api.github.com/users/jjzhuo/following{/other_user}",
            "gists_url": "https://api.github.com/users/jjzhuo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jjzhuo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jjzhuo/subscriptions",
            "organizations_url": "https://api.github.com/users/jjzhuo/orgs",
            "repos_url": "https://api.github.com/users/jjzhuo/repos",
            "events_url": "https://api.github.com/users/jjzhuo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jjzhuo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-04T19:02:35Z",
        "updated_at": "2023-06-08T03:44:59Z",
        "closed_at": "2023-06-08T03:44:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5693",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5693",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5693.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5693.patch",
            "merged_at": "2023-06-08T03:44:59Z"
        },
        "body": "The chain input_documents are not displaying properly in W&B, due to serialization issue:\r\n\r\n<img width=\"1164\" alt=\"Screenshot 2023-06-04 at 11 58 26 AM\" src=\"https://github.com/hwchase17/langchain/assets/134809928/f31f14f6-0935-4cca-9913-6760cd40eadf\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5693/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5693/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5692",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5692/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5692/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5692/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5692",
        "id": 1740513843,
        "node_id": "PR_kwDOIPDwls5SIKj6",
        "number": 5692,
        "title": "feat: make YoutubeLoader support multi language transcript",
        "user": {
            "login": "RaflyLesmana3003",
            "id": 42396310,
            "node_id": "MDQ6VXNlcjQyMzk2MzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/42396310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RaflyLesmana3003",
            "html_url": "https://github.com/RaflyLesmana3003",
            "followers_url": "https://api.github.com/users/RaflyLesmana3003/followers",
            "following_url": "https://api.github.com/users/RaflyLesmana3003/following{/other_user}",
            "gists_url": "https://api.github.com/users/RaflyLesmana3003/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RaflyLesmana3003/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RaflyLesmana3003/subscriptions",
            "organizations_url": "https://api.github.com/users/RaflyLesmana3003/orgs",
            "repos_url": "https://api.github.com/users/RaflyLesmana3003/repos",
            "events_url": "https://api.github.com/users/RaflyLesmana3003/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RaflyLesmana3003/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-04T18:10:55Z",
        "updated_at": "2023-11-17T21:56:50Z",
        "closed_at": "2023-06-05T23:25:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5692",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5692",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5692.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5692.patch",
            "merged_at": "2023-06-05T23:25:37Z"
        },
        "body": "Adding support multi language transcript for YoutubeLoader.\r\n\r\n#### Example\r\n<img width=\"1033\" alt=\"Screenshot 2023-06-05 at 01 10 31\" src=\"https://github.com/hwchase17/langchain/assets/42396310/34b99e7e-4e19-4946-85fe-20c3bde04007\">\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n@eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5692/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5692/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5691",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5691/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5691/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5691/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5691",
        "id": 1740480164,
        "node_id": "I_kwDOIPDwls5nvZ6k",
        "number": 5691,
        "title": "prompt template not reset when reinstantiating SQLDatabase object",
        "user": {
            "login": "phiweger",
            "id": 3918306,
            "node_id": "MDQ6VXNlcjM5MTgzMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3918306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phiweger",
            "html_url": "https://github.com/phiweger",
            "followers_url": "https://api.github.com/users/phiweger/followers",
            "following_url": "https://api.github.com/users/phiweger/following{/other_user}",
            "gists_url": "https://api.github.com/users/phiweger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phiweger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phiweger/subscriptions",
            "organizations_url": "https://api.github.com/users/phiweger/orgs",
            "repos_url": "https://api.github.com/users/phiweger/repos",
            "events_url": "https://api.github.com/users/phiweger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phiweger/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-04T17:06:40Z",
        "updated_at": "2023-09-10T16:07:54Z",
        "closed_at": "2023-09-10T16:07:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npython 3.8, langchain 0.0.187\n\n### Who can help?\n\n@hwchase17 @vowelparrot \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom langchain import SQLDatabase, SQLDatabaseChain\r\nrom langchain.llms.openai import OpenAI\r\n\r\ndb_fp = 'test.db'\r\ndb = SQLDatabase.from_uri(f\"sqlite:///{db_fp}\")\r\nllm = OpenAI(temperature=0, max_tokens=1000)\r\ndb_chain = SQLDatabaseChain.from_llm(llm, db, verbose=True)\r\n\r\n# reading default prompt\r\ndb_chain.llm_chain.prompt.template\r\n# set to sth else\r\ndb_chain.llm_chain.prompt.template = 0\r\n# do something, prompt not good, so want to reset\r\ndb_chain = SQLDatabaseChain.from_llm(llm, db, verbose=True)\r\ndb_chain.llm_chain.prompt.template\r\n# BUG: returns 0, but should be default\r\n```\n\n### Expected behavior\n\nshould reinstantiate SQL chain object, but state from template reassignment is kept",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5691/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5691/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5689",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5689/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5689/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5689/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5689",
        "id": 1740448094,
        "node_id": "I_kwDOIPDwls5nvSFe",
        "number": 5689,
        "title": "support local GPU server without runhouse !!!",
        "user": {
            "login": "htang2012",
            "id": 2213339,
            "node_id": "MDQ6VXNlcjIyMTMzMzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2213339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/htang2012",
            "html_url": "https://github.com/htang2012",
            "followers_url": "https://api.github.com/users/htang2012/followers",
            "following_url": "https://api.github.com/users/htang2012/following{/other_user}",
            "gists_url": "https://api.github.com/users/htang2012/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/htang2012/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/htang2012/subscriptions",
            "organizations_url": "https://api.github.com/users/htang2012/orgs",
            "repos_url": "https://api.github.com/users/htang2012/repos",
            "events_url": "https://api.github.com/users/htang2012/events{/privacy}",
            "received_events_url": "https://api.github.com/users/htang2012/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-04T15:56:15Z",
        "updated_at": "2023-12-13T16:09:13Z",
        "closed_at": "2023-12-13T16:09:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nHi guys, can we just launch SelfHostedEmbedding without runhouse, as a matter of fact, runhouse its self is still in the early development stage and has some issues, why does langchain depends on it for selfhosted instead of call cuda directly?\r\n\r\nfor example:\r\n\r\ndevice = torch.device('cuda')\r\n\r\nembeddings = SelfHostedEmbeddings(\r\n    model_load_fn=get_pipeline, \r\n    hardware=device,\r\n    model_reqs=[\"./\", \"torch\", \"transformers\"],\r\n    inference_fn=inference_fn\r\n)\r\n\r\n\r\n### Motivation\r\n\r\nuse GPU local server directly instead of through runhouse.\r\n\r\n### Your contribution\r\n\r\n*",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5689/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5689/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5688",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5688/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5688/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5688/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5688",
        "id": 1740440619,
        "node_id": "PR_kwDOIPDwls5SH7GG",
        "number": 5688,
        "title": "Add Support for Hugging Face Question Answering Models",
        "user": {
            "login": "Veluchs",
            "id": 135350576,
            "node_id": "U_kgDOCBFJMA",
            "avatar_url": "https://avatars.githubusercontent.com/u/135350576?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Veluchs",
            "html_url": "https://github.com/Veluchs",
            "followers_url": "https://api.github.com/users/Veluchs/followers",
            "following_url": "https://api.github.com/users/Veluchs/following{/other_user}",
            "gists_url": "https://api.github.com/users/Veluchs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Veluchs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Veluchs/subscriptions",
            "organizations_url": "https://api.github.com/users/Veluchs/orgs",
            "repos_url": "https://api.github.com/users/Veluchs/repos",
            "events_url": "https://api.github.com/users/Veluchs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Veluchs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-04T15:44:22Z",
        "updated_at": "2023-09-22T16:32:44Z",
        "closed_at": "2023-09-22T16:32:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5688",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5688",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5688.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5688.patch",
            "merged_at": null
        },
        "body": "Working on Adding HuggingFace Question Answering Model support to Langchain  #5660 \r\n\r\nFirst Commit is just a proof on concept, that simply adds the functionality to the HuggingFacePipeline Class and its _call method.\r\nThis implementation is however in conflict with its Base Classes, since Q&A Models require an additional input (at least before the input gets tokenized).\r\n \r\nSince this is about adding new models it might be of interest to you:\r\n  - @hwchase17\r\n  - @agola11\r\n\r\nI'm not sure if it's best to modify the base classes to add the support for an additional argument (the question / context), or to add a new class for question answering models.\r\nI am happy to discuss the best way forward / your ideas.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5688/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5688/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5687",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5687/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5687/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5687/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5687",
        "id": 1740414084,
        "node_id": "PR_kwDOIPDwls5SH1kV",
        "number": 5687,
        "title": "add awadb vectorstore",
        "user": {
            "login": "ljeagle",
            "id": 15918167,
            "node_id": "MDQ6VXNlcjE1OTE4MTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15918167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ljeagle",
            "html_url": "https://github.com/ljeagle",
            "followers_url": "https://api.github.com/users/ljeagle/followers",
            "following_url": "https://api.github.com/users/ljeagle/following{/other_user}",
            "gists_url": "https://api.github.com/users/ljeagle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ljeagle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ljeagle/subscriptions",
            "organizations_url": "https://api.github.com/users/ljeagle/orgs",
            "repos_url": "https://api.github.com/users/ljeagle/repos",
            "events_url": "https://api.github.com/users/ljeagle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ljeagle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-04T14:48:30Z",
        "updated_at": "2023-06-08T01:17:17Z",
        "closed_at": "2023-06-08T01:17:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5687",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5687",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5687.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5687.patch",
            "merged_at": null
        },
        "body": "@dev2049 Add a new vectorstore-AwaDB\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5687/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5687/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5686",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5686/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5686/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5686/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5686",
        "id": 1740345883,
        "node_id": "PR_kwDOIPDwls5SHnP4",
        "number": 5686,
        "title": "testing chain generics",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-04T12:24:50Z",
        "updated_at": "2023-08-11T18:31:25Z",
        "closed_at": "2023-08-11T18:31:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5686",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5686",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5686.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5686.patch",
            "merged_at": null
        },
        "body": "Testing using generics in a few places to see what breaks/improves\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5686/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5686/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5684",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5684/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5684/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5684/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5684",
        "id": 1740317450,
        "node_id": "I_kwDOIPDwls5nuyMK",
        "number": 5684,
        "title": "ValueError: fix_text not implemented for this agent.",
        "user": {
            "login": "zhouliang-yu",
            "id": 80083546,
            "node_id": "MDQ6VXNlcjgwMDgzNTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/80083546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhouliang-yu",
            "html_url": "https://github.com/zhouliang-yu",
            "followers_url": "https://api.github.com/users/zhouliang-yu/followers",
            "following_url": "https://api.github.com/users/zhouliang-yu/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhouliang-yu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhouliang-yu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhouliang-yu/subscriptions",
            "organizations_url": "https://api.github.com/users/zhouliang-yu/orgs",
            "repos_url": "https://api.github.com/users/zhouliang-yu/repos",
            "events_url": "https://api.github.com/users/zhouliang-yu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhouliang-yu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-04T11:25:01Z",
        "updated_at": "2023-06-15T02:25:14Z",
        "closed_at": "2023-06-15T02:25:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.100\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nHey, I am working on a Toolformer Agent similar to ReAct.\r\nThe prompts given to the agent is a few-shot prompt with tool usage.\r\nAn example can be seen on this website:\r\n\r\nhttps://tsmatz.wordpress.com/2023/03/07/react-with-openai-gpt-and-langchain/#comments \r\n\r\nI can define the agent without any bugs:\r\n```python\r\nSUFFIX = \"\"\"\\nQuestion: {input}\r\n{agent_scratchpad}\"\"\"\r\n\r\nTEST_PROMPT = PromptTemplate.from_examples(\r\n  EXAMPLES, SUFFIX, [\"input\", \"agent_scratchpad\"]\r\n)\r\n\r\nclass ReActTestAgent(Agent):\r\n  @classmethod\r\n  def create_prompt(cls, tools: Sequence[BaseTool]) -> BasePromptTemplate:\r\n    return TEST_PROMPT\r\n\r\n  @classmethod\r\n  def _validate_tools(cls, tools: Sequence[BaseTool]) -> None:\r\n    if len(tools) != 4:\r\n      raise ValueError(\"The number of tools is invalid.\")\r\n    tool_names = {tool.name for tool in tools}\r\n    if tool_names != {\"GetInvoice\", \"Diff\", \"Total\", \"python_repl\"}:\r\n      raise ValueError(\"The name of tools is invalid.\")\r\n\r\n  @property\r\n  def _agent_type(self) -> str:\r\n    return \"react-test\"\r\n\r\n  @property\r\n  def finish_tool_name(self) -> str:\r\n    return \"Finish\"\r\n\r\n  @property\r\n  def observation_prefix(self) -> str:\r\n    return f\"Observation : \"\r\n\r\n  @property\r\n  def llm_prefix(self) -> str:\r\n    return f\"Thought : \"\r\n\r\n  # This method is called by framework to parse text\r\n  def _extract_tool_and_input(self, text: str) -> Optional[Tuple[str, str]]:\r\n    action_prefix = f\"Action : \"\r\n    if not text.split(\"\\n\")[1].startswith(action_prefix):\r\n      return None\r\n    action_block = text.split(\"\\n\")[1]\r\n\r\n    action_str = action_block[len(action_prefix) :]\r\n    re_matches = re.search(r\"(.*?)\\[(.*?)\\]\", action_str)\r\n    if re_matches is None:\r\n      raise ValueError(f\"Could not parse action directive: {action_str}\")\r\n    return re_matches.group(1), re_matches.group(2)\r\n\r\n##########\r\n# run agent\r\n##########\r\n\r\n# llm = AzureOpenAI(\r\n#   deployment_name=\"davinci003-deploy\",\r\n#   model_name=\"text-davinci-003\",\r\n#   temperature=0,\r\n# )\r\nllm = OpenAI(temperature=0, model_name=\"gpt-3.5-turbo\")\r\n\r\nagent = ReActTestAgent.from_llm_and_tools(\r\n  llm,\r\n  tools,\r\n)\r\nagent_executor = AgentExecutor.from_agent_and_tools(\r\n  agent=agent,\r\n  tools=tools,\r\n  verbose=True,\r\n)\r\n```\r\nbut When I give instruction to the agent \r\n```python\r\nquestion = \"hi\"\r\nagent_executor.run(question)\r\n```\r\nEven the simplest one \"hi\" will return me the error saying: **ValueError: fix_text not implemented for this agent.**\r\nSo my question is Why did this error emerge? How to avoid the error?\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nThe expected output should be similar to the few-shot prompts",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5684/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5684/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5683",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5683/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5683/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5683/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5683",
        "id": 1740316838,
        "node_id": "I_kwDOIPDwls5nuyCm",
        "number": 5683,
        "title": "Index not found when trying to use ChromaDB instead of FAISS in the AutoGPT example",
        "user": {
            "login": "ibagur",
            "id": 2979615,
            "node_id": "MDQ6VXNlcjI5Nzk2MTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2979615?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibagur",
            "html_url": "https://github.com/ibagur",
            "followers_url": "https://api.github.com/users/ibagur/followers",
            "following_url": "https://api.github.com/users/ibagur/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibagur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibagur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibagur/subscriptions",
            "organizations_url": "https://api.github.com/users/ibagur/orgs",
            "repos_url": "https://api.github.com/users/ibagur/repos",
            "events_url": "https://api.github.com/users/ibagur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibagur/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-04T11:23:19Z",
        "updated_at": "2023-11-09T16:11:30Z",
        "closed_at": "2023-11-09T16:11:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython 3.10.10 (virtual env) on macos 11.7.6\r\n\r\nlangchain               0.0.187\r\nduckdb                  0.7.1\r\nduckduckgo-search       3.7.1\r\nchromadb                0.3.21\r\ntiktoken                0.3.3\r\ntorch                   2.0.0\n\n### Who can help?\n\n@hwchase17 @eyur\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nDear community,\r\n\r\n I am now playing a bit with the AutoGPT example notebook found in the Langchain documentation, in which I already replaced the search tool for `DuckDuckGoSearchRun()` instead `SerpAPIWrapper()`. So far this works seamlessly. I am now trying to use ChromaDB as vectorstore (in persistent mode), instead of FAISS..however I cannot find how to properly initialize Chroma in this case. I have seen plenty of examples with ChromaDB for documents and/or specific web-page contents, using the `loader` class and then the `Chroma.from_documents()` method. But in the AutoGPT example, they actually use FAISS in the following way, just initializing as an empty vectorstore with fixed embedding size:\r\n```\r\n# Define your embedding model\r\nembeddings_model = OpenAIEmbeddings()\r\n# Initialize the vectorstore as empty\r\nimport faiss\r\nFAISS()\r\nembedding_size = 1536\r\nindex = faiss.IndexFlatL2(embedding_size)\r\nvectorstore = FAISS(embeddings_model.embed_query, index, InMemoryDocstore({}), {})\r\n```\r\nI have tried the following approach without success (after creating the `chroma` subdirectory). Apparently both `chroma-collections.parquet` and `chroma-embeddings.parquet` are created, and I get the confirmation message `Using embedded DuckDB with persistence: data will be stored in: chroma`, but when doing `agent.run([\"[here goes my query\"])`, I get the error `NoIndexException: Index not found, please create an instance before querying`. The code I have used in order to create the Chroma vectorstore is:\r\n\r\n```\r\npersist_directory = \"chroma\"\r\nembeddings_model = OpenAIEmbeddings()\r\n\r\nchroma_client = chromadb.Client(\r\n            settings=chromadb.config.Settings(\r\n                chroma_db_impl=\"duckdb+parquet\",\r\n                persist_directory=persist_directory,\r\n            )\r\n        )\r\n\r\nvectorstore = Chroma(persist_directory=persist_directory, embedding_function=embeddings_model, client=chroma_client, collection_metadata={})\r\nvectorstore.persist()\r\n```\r\n\r\nI also cannot find how to replicate the same approach used with FAISS, i.e. initializing as an empty store with a given `embedding_size` (1536 in this case).\r\n\r\nAny suggestions, or maybe I am overdoing things? It was just a matter of playing that particular example but using a different vectorstore, so to get familiar with the use of Indexes and so.\r\n\r\nMany thanks!\n\n### Expected behavior\n\nBeing able to reproduce the [AutoGPT Tutorial](https://python.langchain.com/en/latest/use_cases/autonomous_agents/autogpt.html) , making use of LangChain primitives but using ChromaDB (in persistent mode) instead of FAISS",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5683/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5683/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5681",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5681/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5681/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5681/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5681",
        "id": 1740259602,
        "node_id": "PR_kwDOIPDwls5SHU6v",
        "number": 5681,
        "title": "Added Dependencies Status, Open issues and releases badges in Readme.md",
        "user": {
            "login": "nuhmanpk",
            "id": 62880706,
            "node_id": "MDQ6VXNlcjYyODgwNzA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/62880706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nuhmanpk",
            "html_url": "https://github.com/nuhmanpk",
            "followers_url": "https://api.github.com/users/nuhmanpk/followers",
            "following_url": "https://api.github.com/users/nuhmanpk/following{/other_user}",
            "gists_url": "https://api.github.com/users/nuhmanpk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nuhmanpk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nuhmanpk/subscriptions",
            "organizations_url": "https://api.github.com/users/nuhmanpk/orgs",
            "repos_url": "https://api.github.com/users/nuhmanpk/repos",
            "events_url": "https://api.github.com/users/nuhmanpk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nuhmanpk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-04T09:23:39Z",
        "updated_at": "2023-06-04T21:30:53Z",
        "closed_at": "2023-06-04T21:30:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5681",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5681",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5681.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5681.patch",
            "merged_at": "2023-06-04T21:30:53Z"
        },
        "body": "[![Dependency Status](https://img.shields.io/librariesio/github/hwchase17/langchain)](https://libraries.io/github/hwchase17/langchain)\r\n[![Open Issues](https://img.shields.io/github/issues-raw/hwchase17/langchain)](https://github.com/hwchase17/langchain/issues)\r\n[![Release Notes](https://img.shields.io/github/release/hwchase17/langchain)](https://github.com/hwchase17/langchain/releases)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5681/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5681/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5680",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5680/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5680/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5680/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5680",
        "id": 1740240211,
        "node_id": "PR_kwDOIPDwls5SHQyI",
        "number": 5680,
        "title": "Add args_schema to google_places tool",
        "user": {
            "login": "georgelroberts",
            "id": 7758824,
            "node_id": "MDQ6VXNlcjc3NTg4MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7758824?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/georgelroberts",
            "html_url": "https://github.com/georgelroberts",
            "followers_url": "https://api.github.com/users/georgelroberts/followers",
            "following_url": "https://api.github.com/users/georgelroberts/following{/other_user}",
            "gists_url": "https://api.github.com/users/georgelroberts/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/georgelroberts/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/georgelroberts/subscriptions",
            "organizations_url": "https://api.github.com/users/georgelroberts/orgs",
            "repos_url": "https://api.github.com/users/georgelroberts/repos",
            "events_url": "https://api.github.com/users/georgelroberts/events{/privacy}",
            "received_events_url": "https://api.github.com/users/georgelroberts/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-04T08:41:43Z",
        "updated_at": "2023-06-04T21:28:47Z",
        "closed_at": "2023-06-04T21:28:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5680",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5680",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5680.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5680.patch",
            "merged_at": "2023-06-04T21:28:47Z"
        },
        "body": "Tiny change to actually add the args_schema to the tool.\r\n\r\n@vowelparrot\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5680/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5680/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5679",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5679/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5679/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5679/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5679",
        "id": 1740217158,
        "node_id": "I_kwDOIPDwls5nuZtG",
        "number": 5679,
        "title": "the first paragraph of code in the quick start can not run in jupyter",
        "user": {
            "login": "wwx0727",
            "id": 114320010,
            "node_id": "U_kgDOBtBiig",
            "avatar_url": "https://avatars.githubusercontent.com/u/114320010?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wwx0727",
            "html_url": "https://github.com/wwx0727",
            "followers_url": "https://api.github.com/users/wwx0727/followers",
            "following_url": "https://api.github.com/users/wwx0727/following{/other_user}",
            "gists_url": "https://api.github.com/users/wwx0727/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wwx0727/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wwx0727/subscriptions",
            "organizations_url": "https://api.github.com/users/wwx0727/orgs",
            "repos_url": "https://api.github.com/users/wwx0727/repos",
            "events_url": "https://api.github.com/users/wwx0727/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wwx0727/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-04T07:53:47Z",
        "updated_at": "2023-09-15T16:08:52Z",
        "closed_at": "2023-09-15T16:08:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi everyone, \r\nI am a beginner of Python and I can not run the first part of the code \r\n![1685862362254](https://github.com/hwchase17/langchain/assets/114320010/0cd40666-fc4a-431d-8c45-5a2fa3956921)\r\n\r\nbut those code is supposed to output feetful of fun\r\n![image](https://github.com/hwchase17/langchain/assets/114320010/439335dc-d3de-4f7d-8e8d-a859f8601750)\r\n\r\nIs there anybody who knows why? \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nset the environment variable with openai API key and then run the code in the picture\n\n### Expected behavior\n\nit supposed to output something  OR  why is this problem? what should I add into the code?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5679/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5679/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5678",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5678/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5678/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5678/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5678",
        "id": 1740191702,
        "node_id": "I_kwDOIPDwls5nuTfW",
        "number": 5678,
        "title": "option to limit response length",
        "user": {
            "login": "pbxqdown",
            "id": 6386150,
            "node_id": "MDQ6VXNlcjYzODYxNTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6386150?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pbxqdown",
            "html_url": "https://github.com/pbxqdown",
            "followers_url": "https://api.github.com/users/pbxqdown/followers",
            "following_url": "https://api.github.com/users/pbxqdown/following{/other_user}",
            "gists_url": "https://api.github.com/users/pbxqdown/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pbxqdown/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pbxqdown/subscriptions",
            "organizations_url": "https://api.github.com/users/pbxqdown/orgs",
            "repos_url": "https://api.github.com/users/pbxqdown/repos",
            "events_url": "https://api.github.com/users/pbxqdown/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pbxqdown/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-04T06:57:45Z",
        "updated_at": "2023-12-09T16:01:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nProvide an option to limit response length.\r\n\r\n\n\n### Motivation\n\nDevelopers sometimes would like to reduce answer length to reduce API usage cost.\r\n\r\n\n\n### Your contribution\n\nCan we implement the feature by customizing user's prompt in framework(e.g. append \"answer in 50 words\" to the prompt).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5678/reactions",
            "total_count": 4,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5678/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5677",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5677/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5677/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5677/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5677",
        "id": 1740101001,
        "node_id": "PR_kwDOIPDwls5SGycB",
        "number": 5677,
        "title": "Improve the recursive text splitting algorithm to minimize the number of chunks",
        "user": {
            "login": "jjzhuo",
            "id": 134809928,
            "node_id": "U_kgDOCAkJSA",
            "avatar_url": "https://avatars.githubusercontent.com/u/134809928?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jjzhuo",
            "html_url": "https://github.com/jjzhuo",
            "followers_url": "https://api.github.com/users/jjzhuo/followers",
            "following_url": "https://api.github.com/users/jjzhuo/following{/other_user}",
            "gists_url": "https://api.github.com/users/jjzhuo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jjzhuo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jjzhuo/subscriptions",
            "organizations_url": "https://api.github.com/users/jjzhuo/orgs",
            "repos_url": "https://api.github.com/users/jjzhuo/repos",
            "events_url": "https://api.github.com/users/jjzhuo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jjzhuo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-04T03:29:50Z",
        "updated_at": "2023-08-11T22:54:21Z",
        "closed_at": "2023-08-11T22:54:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5677",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5677",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5677.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5677.patch",
            "merged_at": null
        },
        "body": "I notice `RecursiveCharacterTextSplitter` often produce chunks that are much smaller than the specified chunk_size. \r\n\r\nThe problem happens because we merge the `_good_splits` and add it to the `final_chunks` as soon as we encounter a large next chunk. We can improve chunk space utilization by putting `splits` in a stack, so that during iteration we can further split the next chunk and push the smaller chunks into the stack. \r\n\r\n@hwchase17  What do you think about this approach?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5677/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5677/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5676",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5676/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5676/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5676/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5676",
        "id": 1740066187,
        "node_id": "PR_kwDOIPDwls5SGqr1",
        "number": 5676,
        "title": "sqlalchemy MovedIn20Warning declarative_base DEPRICATION fix ",
        "user": {
            "login": "kaahila",
            "id": 73160695,
            "node_id": "MDQ6VXNlcjczMTYwNjk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/73160695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kaahila",
            "html_url": "https://github.com/kaahila",
            "followers_url": "https://api.github.com/users/kaahila/followers",
            "following_url": "https://api.github.com/users/kaahila/following{/other_user}",
            "gists_url": "https://api.github.com/users/kaahila/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kaahila/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kaahila/subscriptions",
            "organizations_url": "https://api.github.com/users/kaahila/orgs",
            "repos_url": "https://api.github.com/users/kaahila/repos",
            "events_url": "https://api.github.com/users/kaahila/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kaahila/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-04T02:12:11Z",
        "updated_at": "2023-06-04T23:52:53Z",
        "closed_at": "2023-06-04T23:52:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5676",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5676",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5676.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5676.patch",
            "merged_at": "2023-06-04T23:52:52Z"
        },
        "body": "fix for the sqlalchemy deprecated declarative_base import :\r\n\r\n```\r\nMovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\r\n  Base = declarative_base()  # type: Any\r\n```\r\n\r\nImport is wrapped in an try catch Block to fallback to the old import if needed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5676/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5676/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5675",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5675/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5675/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5675/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5675",
        "id": 1740020366,
        "node_id": "PR_kwDOIPDwls5SGgeZ",
        "number": 5675,
        "title": "Fix code issue",
        "user": {
            "login": "realjustinwu",
            "id": 3467850,
            "node_id": "MDQ6VXNlcjM0Njc4NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3467850?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/realjustinwu",
            "html_url": "https://github.com/realjustinwu",
            "followers_url": "https://api.github.com/users/realjustinwu/followers",
            "following_url": "https://api.github.com/users/realjustinwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/realjustinwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/realjustinwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/realjustinwu/subscriptions",
            "organizations_url": "https://api.github.com/users/realjustinwu/orgs",
            "repos_url": "https://api.github.com/users/realjustinwu/repos",
            "events_url": "https://api.github.com/users/realjustinwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/realjustinwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-04T00:33:02Z",
        "updated_at": "2023-06-04T06:54:22Z",
        "closed_at": "2023-06-04T06:54:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5675",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5675",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5675.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5675.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes code issue\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5675/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5675/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5674",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5674/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5674/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5674/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5674",
        "id": 1740016416,
        "node_id": "PR_kwDOIPDwls5SGfmf",
        "number": 5674,
        "title": "Feature: Allows for structured output parser to parse lists of json objects ",
        "user": {
            "login": "pa-t",
            "id": 7401524,
            "node_id": "MDQ6VXNlcjc0MDE1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7401524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pa-t",
            "html_url": "https://github.com/pa-t",
            "followers_url": "https://api.github.com/users/pa-t/followers",
            "following_url": "https://api.github.com/users/pa-t/following{/other_user}",
            "gists_url": "https://api.github.com/users/pa-t/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pa-t/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pa-t/subscriptions",
            "organizations_url": "https://api.github.com/users/pa-t/orgs",
            "repos_url": "https://api.github.com/users/pa-t/repos",
            "events_url": "https://api.github.com/users/pa-t/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pa-t/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-04T00:25:32Z",
        "updated_at": "2023-11-07T04:16:21Z",
        "closed_at": "2023-11-07T04:16:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5674",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5674",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5674.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5674.patch",
            "merged_at": null
        },
        "body": "# Description\r\nEnables structured output parser to parse lists of json objects\r\n\r\nPrior it would throw an error when parsing a list of json objects about missing keys. Now it evaluates if the parsed json object is a list then uses a difference in the set of keys from each record in the json list and the set of original expected keys.\r\n\r\nThis allows for the `StructuredOutputParser` to parse multiple objects of the same schema at once\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n@hwchase17\r\n@eyurtsev\r\n@vowelparrot",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5674/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5674/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5673",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5673/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5673/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5673/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5673",
        "id": 1740001734,
        "node_id": "PR_kwDOIPDwls5SGcU7",
        "number": 5673,
        "title": "top_k and top_p transposed in vertexai",
        "user": {
            "login": "mheguy-stingray",
            "id": 126018082,
            "node_id": "U_kgDOB4LiIg",
            "avatar_url": "https://avatars.githubusercontent.com/u/126018082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mheguy-stingray",
            "html_url": "https://github.com/mheguy-stingray",
            "followers_url": "https://api.github.com/users/mheguy-stingray/followers",
            "following_url": "https://api.github.com/users/mheguy-stingray/following{/other_user}",
            "gists_url": "https://api.github.com/users/mheguy-stingray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mheguy-stingray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mheguy-stingray/subscriptions",
            "organizations_url": "https://api.github.com/users/mheguy-stingray/orgs",
            "repos_url": "https://api.github.com/users/mheguy-stingray/repos",
            "events_url": "https://api.github.com/users/mheguy-stingray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mheguy-stingray/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-03T23:56:00Z",
        "updated_at": "2023-06-06T15:36:20Z",
        "closed_at": "2023-06-04T23:59:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5673",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5673",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5673.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5673.patch",
            "merged_at": "2023-06-04T23:59:54Z"
        },
        "body": "Fix transposed properties in vertexai model\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5673/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5673/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5672",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5672/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5672/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5672/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5672",
        "id": 1740001200,
        "node_id": "PR_kwDOIPDwls5SGcM-",
        "number": 5672,
        "title": "Harrison/neo4j lint",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T23:55:01Z",
        "updated_at": "2023-06-04T00:01:31Z",
        "closed_at": "2023-06-04T00:01:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5672",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5672",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5672.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5672.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5672/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5671",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5671/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5671/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5671/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5671",
        "id": 1740000692,
        "node_id": "PR_kwDOIPDwls5SGcGO",
        "number": 5671,
        "title": "SQL agent : Improved prompt engineering prevents agent guessing database column names.",
        "user": {
            "login": "willsmithorg",
            "id": 907059,
            "node_id": "MDQ6VXNlcjkwNzA1OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/907059?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/willsmithorg",
            "html_url": "https://github.com/willsmithorg",
            "followers_url": "https://api.github.com/users/willsmithorg/followers",
            "following_url": "https://api.github.com/users/willsmithorg/following{/other_user}",
            "gists_url": "https://api.github.com/users/willsmithorg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/willsmithorg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/willsmithorg/subscriptions",
            "organizations_url": "https://api.github.com/users/willsmithorg/orgs",
            "repos_url": "https://api.github.com/users/willsmithorg/repos",
            "events_url": "https://api.github.com/users/willsmithorg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/willsmithorg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T23:52:36Z",
        "updated_at": "2023-06-04T21:39:00Z",
        "closed_at": "2023-06-04T21:39:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5671",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5671",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5671.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5671.patch",
            "merged_at": "2023-06-04T21:39:00Z"
        },
        "body": "@vowelparrot:\r\n\r\nMinor change to the SQL agent:\r\n\r\nTells agent to introspect the schema of the most relevant tables, I found this to dramatically decrease the chance that the agent wastes times guessing column names.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5671/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5671/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5670",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5670/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5670/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5670/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5670",
        "id": 1739996533,
        "node_id": "I_kwDOIPDwls5ntj11",
        "number": 5670,
        "title": "UnstructuredURLLoader hangs on some URLs",
        "user": {
            "login": "jawMeister",
            "id": 8699414,
            "node_id": "MDQ6VXNlcjg2OTk0MTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8699414?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jawMeister",
            "html_url": "https://github.com/jawMeister",
            "followers_url": "https://api.github.com/users/jawMeister/followers",
            "following_url": "https://api.github.com/users/jawMeister/following{/other_user}",
            "gists_url": "https://api.github.com/users/jawMeister/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jawMeister/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jawMeister/subscriptions",
            "organizations_url": "https://api.github.com/users/jawMeister/orgs",
            "repos_url": "https://api.github.com/users/jawMeister/repos",
            "events_url": "https://api.github.com/users/jawMeister/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jawMeister/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-03T23:46:59Z",
        "updated_at": "2023-09-13T16:07:07Z",
        "closed_at": "2023-09-13T16:07:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython 3.10.6\r\n\r\nWin 11 WSL running:\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 22.04.2 LTS\r\nRelease:        22.04\r\nCodename:       jammy\r\n\r\nAMD 5950x CPU w/128GB mem\r\n\r\nPython packages installed:\r\n\r\nPackage                 Version\r\n----------------------- -----------\r\naiohttp                 3.8.4\r\naiosignal               1.3.1\r\naltair                  4.2.2\r\nanyio                   3.7.0\r\nappdirs                 1.4.4\r\nargilla                 1.8.0\r\nasttokens               2.2.1\r\nasync-timeout           4.0.2\r\nattrs                   23.1.0\r\nbackcall                0.2.0\r\nbackoff                 2.2.1\r\nbeautifulsoup4          4.12.2\r\nblinker                 1.6.2\r\ncachetools              5.3.0\r\ncertifi                 2023.5.7\r\ncffi                    1.15.1\r\nchardet                 5.1.0\r\ncharset-normalizer      3.1.0\r\nclick                   8.1.3\r\ncomm                    0.1.3\r\ncommonmark              0.9.1\r\ncontourpy               1.0.7\r\ncryptography            40.0.2\r\ncvxpy                   1.3.1\r\ncycler                  0.11.0\r\ndataclasses-json        0.5.7\r\ndebugpy                 1.6.7\r\ndecorator               5.1.1\r\nDeprecated              1.2.14\r\necos                    2.0.12\r\nempyrical               0.5.5\r\nentrypoints             0.4\r\net-xmlfile              1.1.0\r\nexceptiongroup          1.1.1\r\nexecuting               1.2.0\r\nfastjsonschema          2.17.1\r\nfonttools               4.39.4\r\nfredapi                 0.5.0\r\nfrozendict              2.3.8\r\nfrozenlist              1.3.3\r\ngitdb                   4.0.10\r\nGitPython               3.1.31\r\ngreenlet                2.0.2\r\nh11                     0.14.0\r\nhtml5lib                1.1\r\nhttpcore                0.16.3\r\nhttpx                   0.23.3\r\nidna                    3.4\r\nimportlib-metadata      6.6.0\r\ninflection              0.5.1\r\ninstall                 1.3.5\r\nipykernel               6.23.1\r\nipython                 8.13.2\r\njedi                    0.18.2\r\nJinja2                  3.1.2\r\njoblib                  1.2.0\r\njsonschema              4.17.3\r\njupyter_client          8.2.0\r\njupyter_core            5.3.0\r\nkaleido                 0.2.1\r\nkiwisolver              1.4.4\r\nlangchain               0.0.174\r\nlxml                    4.9.2\r\nMarkdown                3.4.3\r\nmarkdown-it-py          2.2.0\r\nMarkupSafe              2.1.2\r\nmarshmallow             3.19.0\r\nmarshmallow-enum        1.5.1\r\nmatplotlib              3.7.1\r\nmatplotlib-inline       0.1.6\r\nmdurl                   0.1.2\r\nmonotonic               1.6\r\nmore-itertools          9.1.0\r\nmsg-parser              1.2.0\r\nmultidict               6.0.4\r\nmultitasking            0.0.11\r\nmypy-extensions         1.0.0\r\nNasdaq-Data-Link        1.0.4\r\nnbformat                5.9.0\r\nnest-asyncio            1.5.6\r\nnltk                    3.8.1\r\nnumexpr                 2.8.4\r\nnumpy                   1.23.5\r\nolefile                 0.46\r\nopenai                  0.27.7\r\nopenapi-schema-pydantic 1.2.4\r\nopenpyxl                3.1.2\r\nosqp                    0.6.2.post9\r\npackaging               23.1\r\npandas                  1.5.3\r\npandas-datareader       0.10.0\r\nparso                   0.8.3\r\npdf2image               1.16.3\r\npdfminer.six            20221105\r\npexpect                 4.8.0\r\npickleshare             0.7.5\r\nPillow                  9.5.0\r\npip                     22.0.2\r\nplatformdirs            3.5.1\r\nplotly                  5.14.1\r\nprompt-toolkit          3.0.38\r\nprotobuf                3.20.3\r\npsutil                  5.9.5\r\nptyprocess              0.7.0\r\npure-eval               0.2.2\r\npyarrow                 12.0.0\r\npycparser               2.21\r\npydantic                1.10.7\r\npydeck                  0.8.1b0\r\npyfolio                 0.9.2\r\nPygments                2.15.1\r\nPympler                 1.0.1\r\npypandoc                1.11\r\npyparsing               3.0.9\r\npyportfolioopt          1.5.5\r\npyrsistent              0.19.3\r\npytesseract             0.3.10\r\npython-dateutil         2.8.2\r\npython-docx             0.8.11\r\npython-dotenv           1.0.0\r\npython-magic            0.4.27\r\npython-pptx             0.6.21\r\npytz                    2023.3\r\nPyYAML                  6.0\r\npyzmq                   25.1.0\r\nqdldl                   0.1.7\r\nQuandl                  3.7.0\r\nregex                   2023.5.5\r\nrequests                2.30.0\r\nrfc3986                 1.5.0\r\nrich                    13.0.1\r\nscikit-learn            1.2.2\r\nscipy                   1.10.1\r\nscs                     3.2.3\r\nseaborn                 0.12.2\r\nsetuptools              67.7.2\r\nsix                     1.16.0\r\nsmmap                   5.0.0\r\nsniffio                 1.3.0\r\nsoupsieve               2.4.1\r\nSQLAlchemy              2.0.14\r\nstack-data              0.6.2\r\nstqdm                   0.0.5\r\nstreamlit               1.22.0\r\nta                      0.10.2\r\nTA-Lib                  0.4.26\r\ntabulate                0.9.0\r\ntenacity                8.2.2\r\nthreadpoolctl           3.1.0\r\ntiktoken                0.4.0\r\ntoml                    0.10.2\r\ntoolz                   0.12.0\r\ntornado                 6.3.2\r\ntqdm                    4.65.0\r\ntraitlets               5.9.0\r\ntyper                   0.9.0\r\ntyping_extensions       4.5.0\r\ntyping-inspect          0.8.0\r\ntzdata                  2023.3\r\ntzlocal                 5.0.1\r\nunstructured            0.7.1\r\nurllib3                 2.0.2\r\nvalidators              0.20.0\r\nwatchdog                3.0.0\r\nwcwidth                 0.2.6\r\nwebencodings            0.5.1\r\nwikipedia               1.4.0\r\nwrapt                   1.14.1\r\nxlrd                    2.0.1\r\nXlsxWriter              3.1.2\r\nyarl                    1.9.2\r\nyfinance                0.2.18\r\nzipp                    3.15.0\n\n### Who can help?\n\n@MthwRobinson\r\n\r\nhttps://github.com/hwchase17/langchain/commits?author=MthwRobinson\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nurl = \"https://www.nasdaq.com/articles/apple-denies-surveillance-claims-made-by-russias-fsb\"\r\n\r\nloader = UnstructuredURLLoader(urls=[url], continue_on_failure=False)\r\ndata = loader.load()\r\n\r\nstopping the process shows this stack:\r\n\r\n---------------------------------------------------------------------------\r\nKeyboardInterrupt                         Traceback (most recent call last)\r\nCell In[2], line 4\r\n      1 url = \"https://www.nasdaq.com/articles/apple-denies-surveillance-claims-made-by-russias-fsb\"\r\n      3 loader = UnstructuredURLLoader(urls=[url], continue_on_failure=False)\r\n----> 4 data = loader.load()\r\n\r\nFile [~/development/public/portfolio-analysis-app/.venv/lib/python3.10/site-packages/langchain/document_loaders/url.py:90](https://vscode-remote+wsl-002bubuntu.vscode-resource.vscode-cdn.net/home/jaws/development/public/portfolio-analysis-app/notebooks/~/development/public/portfolio-analysis-app/.venv/lib/python3.10/site-packages/langchain/document_loaders/url.py:90), in UnstructuredURLLoader.load(self)\r\n     88 if self.__is_non_html_available():\r\n     89     if self.__is_headers_available_for_non_html():\r\n---> 90         elements = partition(\r\n     91             url=url, headers=self.headers, **self.unstructured_kwargs\r\n     92         )\r\n     93     else:\r\n     94         elements = partition(url=url, **self.unstructured_kwargs)\r\n\r\nFile [~/development/public/portfolio-analysis-app/.venv/lib/python3.10/site-packages/unstructured/partition/auto.py:96](https://vscode-remote+wsl-002bubuntu.vscode-resource.vscode-cdn.net/home/jaws/development/public/portfolio-analysis-app/notebooks/~/development/public/portfolio-analysis-app/.venv/lib/python3.10/site-packages/unstructured/partition/auto.py:96), in partition(filename, content_type, file, file_filename, url, include_page_breaks, strategy, encoding, paragraph_grouper, headers, ssl_verify, ocr_languages, pdf_infer_table_structure, xml_keep_tags)\r\n     93 exactly_one(file=file, filename=filename, url=url)\r\n     95 if url is not None:\r\n---> 96     file, filetype = file_and_type_from_url(\r\n     97         url=url,\r\n     98         content_type=content_type,\r\n     99         headers=headers,\r\n    100         ssl_verify=ssl_verify,\r\n    101     )\r\n...\r\n-> 1130         return self._sslobj.read(len, buffer)\r\n   1131     else:\r\n   1132         return self._sslobj.read(len)\r\n\r\nKeyboardInterrupt:\n\n### Expected behavior\n\nexpect that it does not hang",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5670/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5670/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5669",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5669/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5669/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5669/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5669",
        "id": 1739993500,
        "node_id": "PR_kwDOIPDwls5SGabs",
        "number": 5669,
        "title": "[rfc] add cleanup method in callback handler",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T23:41:55Z",
        "updated_at": "2023-06-06T17:07:34Z",
        "closed_at": "2023-06-06T17:07:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5669",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5669",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5669.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5669.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5669/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5669/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5668",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5668/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5668/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5668/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5668",
        "id": 1739989456,
        "node_id": "PR_kwDOIPDwls5SGZh1",
        "number": 5668,
        "title": "Fix transposed properties",
        "user": {
            "login": "mheguy-stingray",
            "id": 126018082,
            "node_id": "U_kgDOB4LiIg",
            "avatar_url": "https://avatars.githubusercontent.com/u/126018082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mheguy-stingray",
            "html_url": "https://github.com/mheguy-stingray",
            "followers_url": "https://api.github.com/users/mheguy-stingray/followers",
            "following_url": "https://api.github.com/users/mheguy-stingray/following{/other_user}",
            "gists_url": "https://api.github.com/users/mheguy-stingray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mheguy-stingray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mheguy-stingray/subscriptions",
            "organizations_url": "https://api.github.com/users/mheguy-stingray/orgs",
            "repos_url": "https://api.github.com/users/mheguy-stingray/repos",
            "events_url": "https://api.github.com/users/mheguy-stingray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mheguy-stingray/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T23:32:54Z",
        "updated_at": "2023-06-03T23:53:14Z",
        "closed_at": "2023-06-03T23:48:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5668",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5668",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5668.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5668.patch",
            "merged_at": null
        },
        "body": "~Args given to ChatVertexAI were not being transmitted to the google library.~\r\nIn the course of writing the unit test, I found that top_k and top_p were transposed.\r\n~The unit tests uses pytest's monkeypatch because I could not get mock.patch to work (I'm not used to using it, the Python doc, and gpt4 were all unhelpful, sorry).~\r\n~If you would like to rewrite the monkeypatch using patch: by all means. I would love to see how it's done!~\r\n~If you would like me to rewrite the patch with monkeypatch (for consistency) I would be happy to do that.~\r\n\r\n~Fixes #5667~\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n@hwchase17\r\n@agola11\r\n\r\nThanks for the amazing work you've all done on this project. I've been using it every day for months and I'm incredibly impressed!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5668/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5667",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5667/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5667/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5667/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5667",
        "id": 1739986947,
        "node_id": "I_kwDOIPDwls5nthgD",
        "number": 5667,
        "title": "Model settings (temp, max tokens, topk, topp) ignored with vertexai",
        "user": {
            "login": "mheguy-stingray",
            "id": 126018082,
            "node_id": "U_kgDOB4LiIg",
            "avatar_url": "https://avatars.githubusercontent.com/u/126018082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mheguy-stingray",
            "html_url": "https://github.com/mheguy-stingray",
            "followers_url": "https://api.github.com/users/mheguy-stingray/followers",
            "following_url": "https://api.github.com/users/mheguy-stingray/following{/other_user}",
            "gists_url": "https://api.github.com/users/mheguy-stingray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mheguy-stingray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mheguy-stingray/subscriptions",
            "organizations_url": "https://api.github.com/users/mheguy-stingray/orgs",
            "repos_url": "https://api.github.com/users/mheguy-stingray/repos",
            "events_url": "https://api.github.com/users/mheguy-stingray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mheguy-stingray/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-03T23:26:24Z",
        "updated_at": "2023-06-03T23:50:17Z",
        "closed_at": "2023-06-03T23:50:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain-0.0.189, windows, python 3.11.3\n\n### Who can help?\n\nWill submit PR to resolve.\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nWhen calling ConversationChain.predict with VertexAI, the settings to the LLM are overriden.\r\n\r\nTo repro, run the following (adapted from tests.integration_tests.chat_models.test_vertexai.test_vertexai_single_call) :\r\n```python\r\nfrom langchain.chat_models import ChatVertexAI\r\nfrom langchain.schema import (\r\n    HumanMessage,\r\n)\r\n\r\nmodel = ChatVertexAI(\r\n    temperature=1,\r\n    max_output_tokens=1,\r\n    top_p=1,\r\n    top_k=1,\r\n)\r\nmessage = HumanMessage(content=\"Tell me everything you know about science.\")\r\nresponse = model([message])\r\nassert len(response.content) < 50\r\n```\n\n### Expected behavior\n\nExpected: the assertion should be true if only 1 token was sent back. Allowing for mistakes in the LLM, I set very generous threshold of 50 characters.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5667/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5667/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5666",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5666/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5666/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5666/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5666",
        "id": 1739953737,
        "node_id": "PR_kwDOIPDwls5SGRlQ",
        "number": 5666,
        "title": "support returning run info for llms, chat models and chains",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T22:17:37Z",
        "updated_at": "2023-06-06T17:07:48Z",
        "closed_at": "2023-06-06T17:07:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5666",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5666",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5666.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5666.patch",
            "merged_at": "2023-06-06T17:07:47Z"
        },
        "body": "returning the run id is important for accessing the run later on",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5666/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5666/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5665",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5665/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5665/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5665/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5665",
        "id": 1739931119,
        "node_id": "PR_kwDOIPDwls5SGMff",
        "number": 5665,
        "title": "Harrison/update azure nb",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T21:37:30Z",
        "updated_at": "2023-06-03T23:25:09Z",
        "closed_at": "2023-06-03T23:25:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5665",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5665",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5665.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5665.patch",
            "merged_at": "2023-06-03T23:25:08Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5665/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5665/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5664",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5664/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5664/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5664/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5664",
        "id": 1739929394,
        "node_id": "PR_kwDOIPDwls5SGMGq",
        "number": 5664,
        "title": "Harrison/pubmed integration",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T21:34:23Z",
        "updated_at": "2023-06-03T23:25:30Z",
        "closed_at": "2023-06-03T23:25:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5664",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5664",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5664.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5664.patch",
            "merged_at": "2023-06-03T23:25:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5664/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5664/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5661",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5661/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5661/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5661/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5661",
        "id": 1739751232,
        "node_id": "PR_kwDOIPDwls5SFjFs",
        "number": 5661,
        "title": "Add aviary support",
        "user": {
            "login": "waleedkadous",
            "id": 2716496,
            "node_id": "MDQ6VXNlcjI3MTY0OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2716496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/waleedkadous",
            "html_url": "https://github.com/waleedkadous",
            "followers_url": "https://api.github.com/users/waleedkadous/followers",
            "following_url": "https://api.github.com/users/waleedkadous/following{/other_user}",
            "gists_url": "https://api.github.com/users/waleedkadous/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/waleedkadous/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/waleedkadous/subscriptions",
            "organizations_url": "https://api.github.com/users/waleedkadous/orgs",
            "repos_url": "https://api.github.com/users/waleedkadous/repos",
            "events_url": "https://api.github.com/users/waleedkadous/events{/privacy}",
            "received_events_url": "https://api.github.com/users/waleedkadous/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899415699,
                "node_id": "LA_kwDOIPDwls8AAAABJAcmkw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/llms",
                "name": "llms",
                "color": "7CDBB2",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-03T18:20:14Z",
        "updated_at": "2023-06-05T23:28:43Z",
        "closed_at": "2023-06-05T23:28:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5661",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5661",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5661.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5661.patch",
            "merged_at": "2023-06-05T23:28:42Z"
        },
        "body": "Aviary is an open source toolkit for evaluating and deploying open source LLMs. You can find out more about it on [http://github.com/ray-project/aviary). You can try it out at [http://aviary.anyscale.com](aviary.anyscale.com). \r\n\r\nThis code adds support for Aviary in LangChain. To minimize dependencies, it connects directly to the HTTP endpoint. \r\n\r\nThe current implementation is not accelerated and uses the default implementation of `predict` and `generate`. \r\n\r\nIt includes a test and a simple example. \r\n\r\n@hwchase17 and @agola11 could you have a look at this? \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5661/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5661/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5660",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5660/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5660/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5660/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5660",
        "id": 1739715128,
        "node_id": "I_kwDOIPDwls5nsfI4",
        "number": 5660,
        "title": "Support for Hugging Face Question Answering Models",
        "user": {
            "login": "Veluchs",
            "id": 135350576,
            "node_id": "U_kgDOCBFJMA",
            "avatar_url": "https://avatars.githubusercontent.com/u/135350576?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Veluchs",
            "html_url": "https://github.com/Veluchs",
            "followers_url": "https://api.github.com/users/Veluchs/followers",
            "following_url": "https://api.github.com/users/Veluchs/following{/other_user}",
            "gists_url": "https://api.github.com/users/Veluchs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Veluchs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Veluchs/subscriptions",
            "organizations_url": "https://api.github.com/users/Veluchs/orgs",
            "repos_url": "https://api.github.com/users/Veluchs/repos",
            "events_url": "https://api.github.com/users/Veluchs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Veluchs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-03T17:54:22Z",
        "updated_at": "2023-09-10T16:08:08Z",
        "closed_at": "2023-09-10T16:08:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nSupport for Hugging Face's Question Answering Models would be great.\n\n### Motivation\n\nIt would allow for the construction of extractive Question Answering Pipelines, making use of the vast amount of open Q&A Models on Hugging Face.\n\n### Your contribution\n\nI would be happy to tackle the implementation and submitt a PR. Have you thought about integrating this already?\r\nIf so, I'm open for a discussion on the best way to to this. (New Class vs extending 'HuggingFacePipeline').",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5660/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5660/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5659",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5659/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5659/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5659/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5659",
        "id": 1739669511,
        "node_id": "PR_kwDOIPDwls5SFQcg",
        "number": 5659,
        "title": "Created fix for 5475",
        "user": {
            "login": "rajib76",
            "id": 16340036,
            "node_id": "MDQ6VXNlcjE2MzQwMDM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16340036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rajib76",
            "html_url": "https://github.com/rajib76",
            "followers_url": "https://api.github.com/users/rajib76/followers",
            "following_url": "https://api.github.com/users/rajib76/following{/other_user}",
            "gists_url": "https://api.github.com/users/rajib76/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rajib76/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rajib76/subscriptions",
            "organizations_url": "https://api.github.com/users/rajib76/orgs",
            "repos_url": "https://api.github.com/users/rajib76/repos",
            "events_url": "https://api.github.com/users/rajib76/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rajib76/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T16:41:59Z",
        "updated_at": "2023-06-03T23:47:53Z",
        "closed_at": "2023-06-03T23:47:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5659",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5659",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5659.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5659.patch",
            "merged_at": "2023-06-03T23:47:52Z"
        },
        "body": "Created fix for 5475\r\nCurrently in PGvector, we do not have any function that returns the instance of an existing store. The from_documents always adds embeddings and then returns the store. This fix is to add a function that will return the instance of an existing store\r\n\r\nAlso changed the jupyter example for PGVector to show the example of using the function\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # 5475\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n@dev2049\r\n@hwchase17 \r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5659/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5659/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5658",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5658/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5658/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5658/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5658",
        "id": 1739633584,
        "node_id": "I_kwDOIPDwls5nsLOw",
        "number": 5658,
        "title": "DOC: Annotation error in the CAMELAgent helper class",
        "user": {
            "login": "shvjds",
            "id": 7003969,
            "node_id": "MDQ6VXNlcjcwMDM5Njk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7003969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shvjds",
            "html_url": "https://github.com/shvjds",
            "followers_url": "https://api.github.com/users/shvjds/followers",
            "following_url": "https://api.github.com/users/shvjds/following{/other_user}",
            "gists_url": "https://api.github.com/users/shvjds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shvjds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shvjds/subscriptions",
            "organizations_url": "https://api.github.com/users/shvjds/orgs",
            "repos_url": "https://api.github.com/users/shvjds/repos",
            "events_url": "https://api.github.com/users/shvjds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shvjds/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-03T15:44:03Z",
        "updated_at": "2023-09-10T16:08:13Z",
        "closed_at": "2023-09-10T16:08:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\n**Severity:** Minor\r\n\r\n**Where:** \r\nUse Cases -> Agent Simulations -> Simulations with two agents -> CAMEL\r\n\r\nDirect link:\r\n[CAMEL Role-Playing Autonomous Cooperative Agents](https://python.langchain.com/en/latest/use_cases/agent_simulations/camel_role_playing.html)\r\n\r\n**What:**\r\nIn the code of the CAMELAgent, the reset_method has the wrong type annotation.\r\n\r\nShould be:\r\n\r\n```python\r\n\r\ndef reset(self) -> List[BaseMessage]:\r\n    self.init_messages()\r\n    return self.stored_messages\r\n\r\n```\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5658/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5658/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5657",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5657/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5657/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5657/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5657",
        "id": 1739618330,
        "node_id": "PR_kwDOIPDwls5SFFPd",
        "number": 5657,
        "title": "This fixes issue #5651 - GPT4All wrapper loading issue",
        "user": {
            "login": "bwv988",
            "id": 2035075,
            "node_id": "MDQ6VXNlcjIwMzUwNzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2035075?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bwv988",
            "html_url": "https://github.com/bwv988",
            "followers_url": "https://api.github.com/users/bwv988/followers",
            "following_url": "https://api.github.com/users/bwv988/following{/other_user}",
            "gists_url": "https://api.github.com/users/bwv988/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bwv988/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bwv988/subscriptions",
            "organizations_url": "https://api.github.com/users/bwv988/orgs",
            "repos_url": "https://api.github.com/users/bwv988/repos",
            "events_url": "https://api.github.com/users/bwv988/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bwv988/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T15:20:57Z",
        "updated_at": "2023-06-04T14:21:17Z",
        "closed_at": "2023-06-04T14:21:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5657",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5657",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5657.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5657.patch",
            "merged_at": "2023-06-04T14:21:17Z"
        },
        "body": "Fixes #5651 \r\n\r\nSmall typo in wrapper code. Note the `model_type` parameter is currently unused by GPT4All.\r\n\r\nhttps://github.com/hwchase17/langchain/issues/5651\r\n\r\n#### Who can review?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5657/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5657/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5656",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5656/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5656/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5656/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5656",
        "id": 1739566153,
        "node_id": "I_kwDOIPDwls5nr6xJ",
        "number": 5656,
        "title": "Issue: When using agent_chain.run to query documents, I want to return both the LLM answer and Source documents, however agent_chain.run only allows for exactly 1 output",
        "user": {
            "login": "ShinySylveonn",
            "id": 131572339,
            "node_id": "U_kgDOB9eicw",
            "avatar_url": "https://avatars.githubusercontent.com/u/131572339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShinySylveonn",
            "html_url": "https://github.com/ShinySylveonn",
            "followers_url": "https://api.github.com/users/ShinySylveonn/followers",
            "following_url": "https://api.github.com/users/ShinySylveonn/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShinySylveonn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShinySylveonn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShinySylveonn/subscriptions",
            "organizations_url": "https://api.github.com/users/ShinySylveonn/orgs",
            "repos_url": "https://api.github.com/users/ShinySylveonn/repos",
            "events_url": "https://api.github.com/users/ShinySylveonn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShinySylveonn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-03T13:58:57Z",
        "updated_at": "2023-09-25T16:06:26Z",
        "closed_at": "2023-09-25T16:06:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nagent_chain.run does not allow for more than a single output, when calling RetrievalQA.from_chain_type directly with the same query it has no issues returning multiple outputs, however agent_chain is where all of my custom tools and configurations are.\r\n\r\nagent_chain.run in my code at the moment refers to AgentExecutor.from_agents_and_tools\r\n\r\nIs there a current workaround for this or is there a strong reason why .run can only support a single output?\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5656/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5656/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5655",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5655/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5655/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5655/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5655",
        "id": 1739559797,
        "node_id": "PR_kwDOIPDwls5SE4XZ",
        "number": 5655,
        "title": "Support similarity_score_threshold retrieval with Chroma",
        "user": {
            "login": "jiayao",
            "id": 74058,
            "node_id": "MDQ6VXNlcjc0MDU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/74058?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiayao",
            "html_url": "https://github.com/jiayao",
            "followers_url": "https://api.github.com/users/jiayao/followers",
            "following_url": "https://api.github.com/users/jiayao/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiayao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiayao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiayao/subscriptions",
            "organizations_url": "https://api.github.com/users/jiayao/orgs",
            "repos_url": "https://api.github.com/users/jiayao/repos",
            "events_url": "https://api.github.com/users/jiayao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiayao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-03T13:51:54Z",
        "updated_at": "2023-06-06T19:13:13Z",
        "closed_at": "2023-06-03T23:57:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5655",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5655",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5655.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5655.patch",
            "merged_at": "2023-06-03T23:57:01Z"
        },
        "body": "Fixes https://github.com/hwchase17/langchain/issues/5067\r\n\r\nVerified the following code now works correctly:\r\n```\r\ndb = Chroma(persist_directory=index_directory(index_name), embedding_function=embeddings)\r\nretriever = db.as_retriever(search_type=\"similarity_score_threshold\", search_kwargs={\"score_threshold\": 0.4})\r\ndocs = retriever.get_relevant_documents(query)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5655/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5655/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5654",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5654/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5654/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5654/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5654",
        "id": 1739458786,
        "node_id": "PR_kwDOIPDwls5SEhkv",
        "number": 5654,
        "title": "New features and tests for MW Dump Loader",
        "user": {
            "login": "Gordon-BP",
            "id": 77560236,
            "node_id": "MDQ6VXNlcjc3NTYwMjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/77560236?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gordon-BP",
            "html_url": "https://github.com/Gordon-BP",
            "followers_url": "https://api.github.com/users/Gordon-BP/followers",
            "following_url": "https://api.github.com/users/Gordon-BP/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gordon-BP/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gordon-BP/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gordon-BP/subscriptions",
            "organizations_url": "https://api.github.com/users/Gordon-BP/orgs",
            "repos_url": "https://api.github.com/users/Gordon-BP/repos",
            "events_url": "https://api.github.com/users/Gordon-BP/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gordon-BP/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-03T11:44:58Z",
        "updated_at": "2023-06-08T10:19:24Z",
        "closed_at": "2023-06-08T10:19:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5654",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5654",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5654.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5654.patch",
            "merged_at": null
        },
        "body": "Adds new paramerters for to the MWDumpLoader class:\n* **skip_redirecst** (_bool_) Tells the loader to skip articles that redirect to other articles. `False` by default.\n* **stop_on_error** (_bool_) Tells the parser to skip any page that causes a parse error. `True` by default.\n* **namespaces** (_List[int]_) Tells the parser which namespaces to parse. Contains namespaces from -2 to 15 by default.\n\nDefault values are chosen to preserve backwards compatability.\n\nSample dump XML and tests are also included!\n\n \nTagging people for checks / review:\n  - @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5654/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5654/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5653",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5653/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5653/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5653/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5653",
        "id": 1739405104,
        "node_id": "PR_kwDOIPDwls5SEVJQ",
        "number": 5653,
        "title": "Extend `langchain.callbacks` documentation",
        "user": {
            "login": "alvarobartt",
            "id": 36760800,
            "node_id": "MDQ6VXNlcjM2NzYwODAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/36760800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alvarobartt",
            "html_url": "https://github.com/alvarobartt",
            "followers_url": "https://api.github.com/users/alvarobartt/followers",
            "following_url": "https://api.github.com/users/alvarobartt/following{/other_user}",
            "gists_url": "https://api.github.com/users/alvarobartt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alvarobartt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alvarobartt/subscriptions",
            "organizations_url": "https://api.github.com/users/alvarobartt/orgs",
            "repos_url": "https://api.github.com/users/alvarobartt/repos",
            "events_url": "https://api.github.com/users/alvarobartt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alvarobartt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-03T10:50:18Z",
        "updated_at": "2023-06-19T07:43:19Z",
        "closed_at": "2023-06-19T07:43:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5653",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5653",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5653.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5653.patch",
            "merged_at": null
        },
        "body": "Hi to whoever is reading this! \ud83e\udd17\r\n\r\n# What's in this PR?\r\n\r\nAs of the recent addition of `ArgillaCallbackHandler` in the `master` branch of `LangChain`, merged by @dev2049 (but maybe also relevant to @agola11 since it's callback-related), @davidberenstein1957 and @dvsrepo noticed that the `Callbacks -> How to guides -> Argilla` page was missing, so I've extended the `langchain.callbacks` documentation a little bit to include the \"How to guides\" to also allow any other callback integration to live there, and add the missing API Reference for the callbacks.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5653/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5653/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5652",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5652/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5652/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5652/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5652",
        "id": 1739397734,
        "node_id": "PR_kwDOIPDwls5SETdQ",
        "number": 5652,
        "title": "SVM-based SKLearnVectorStore and filtering options for SKLearnVectorStores",
        "user": {
            "login": "mbrner",
            "id": 12487634,
            "node_id": "MDQ6VXNlcjEyNDg3NjM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12487634?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbrner",
            "html_url": "https://github.com/mbrner",
            "followers_url": "https://api.github.com/users/mbrner/followers",
            "following_url": "https://api.github.com/users/mbrner/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbrner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbrner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbrner/subscriptions",
            "organizations_url": "https://api.github.com/users/mbrner/orgs",
            "repos_url": "https://api.github.com/users/mbrner/repos",
            "events_url": "https://api.github.com/users/mbrner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbrner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-03T10:42:56Z",
        "updated_at": "2023-11-07T04:16:40Z",
        "closed_at": "2023-11-07T04:16:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5652",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5652",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5652.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5652.patch",
            "merged_at": null
        },
        "body": "In this PR I have made two additions to `SKLearnVectorStore`\r\n\r\n## SVM based VectorStore: \r\n\r\nInstead of kNN, an SVM can be used for the retrieval step. This \"trick\" recently got some attention due to [this tweet](https://twitter.com/karpathy/status/1647025230546886658?s=2). The tweet also discusses possible advantages (better retrieval quality) and disadvantages (slower than kNN).\r\n\r\nFor the implementation, I split the `SKLearnVectorStore` class and created an abstract class `SKLearnVectorStoreBase` for which `_similarity_index_search_with_score` needs to be implemented. This abstract class is used to implement a kNN- and SVM-based vector store.\r\n\r\n## Filtering\r\n\r\nBoth the kNN and SVM vector stores can now be used with metadata filters. The filters are either strings, where a `==` comparison is performed, or a callable that is called with the value of the metadata entry and should return a bool. When using filters, the retrieval algorithm must always be retrained, which slows down the retrieval step in the case of kNN.\r\n\r\n\r\nEdit: I think  @dev2049 is the maintainer for this part of the code.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5652/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5652/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5651",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5651/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5651/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5651/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5651",
        "id": 1739392895,
        "node_id": "I_kwDOIPDwls5nrQd_",
        "number": 5651,
        "title": "AttributeError: 'LLModel' object has no attribute 'model_type' (gpt4all)",
        "user": {
            "login": "pakcheera",
            "id": 72345015,
            "node_id": "MDQ6VXNlcjcyMzQ1MDE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/72345015?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pakcheera",
            "html_url": "https://github.com/pakcheera",
            "followers_url": "https://api.github.com/users/pakcheera/followers",
            "following_url": "https://api.github.com/users/pakcheera/following{/other_user}",
            "gists_url": "https://api.github.com/users/pakcheera/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pakcheera/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pakcheera/subscriptions",
            "organizations_url": "https://api.github.com/users/pakcheera/orgs",
            "repos_url": "https://api.github.com/users/pakcheera/repos",
            "events_url": "https://api.github.com/users/pakcheera/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pakcheera/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-03T10:37:42Z",
        "updated_at": "2023-06-16T14:29:32Z",
        "closed_at": "2023-06-04T14:21:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nrun on docker image with python:3.11.3-bullseye in MAC m1\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nMy docker image \r\n```\r\n\r\nFROM python:3.11.3-bullseye\r\nWORKDIR /src\r\nCOPY src /src\r\n\r\nRUN python -m pip install --upgrade pip\r\nRUN apt-get update -y\r\nRUN apt install cmake -y\r\nRUN git clone --recurse-submodules https://github.com/nomic-ai/gpt4all \r\nRUN cd gpt4all/gpt4all-backend/ && mkdir build && cd build && cmake .. && cmake --build . --parallel\r\nRUN cd gpt4all/gpt4all-bindings/python && pip3 install -e .\r\nRUN pip install -r requirements.txt\r\nRUN chmod +x app/start_app.sh\r\nEXPOSE 8501\r\nENTRYPOINT [\"/bin/bash\"]\r\nCMD [\"app/start_app.sh\"]\r\n```\r\n\r\n\r\nwhere star_app.sh is run python file that have this line\r\n\r\n`llm = GPT4All(model=llm_path, backend='gptj', verbose=True, streaming=True, n_threads=os.cpu_count(),temp=temp)`\r\n\r\nllm_path is path of gpt4all model\r\n\r\n### Expected behavior\r\n\r\nGot this error when try to use gpt4all\r\n\r\n```\r\nAttributeError: 'LLModel' object has no attribute 'model_type'\r\nTraceback:\r\nFile \"/src/app/utils.py\", line 20, in get_chain\r\n    llm = GPT4All(model=llm_path, backend='gptj', verbose=True, streaming=True, n_threads=os.cpu_count(),temp=temp)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"/usr/local/lib/python3.11/site-packages/pydantic/main.py\", line 339, in __init__\r\n    values, fields_set, validation_error = validate_model(__pydantic_self__.__class__, data)\r\n                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"/usr/local/lib/python3.11/site-packages/pydantic/main.py\", line 1102, in validate_model\r\n    values = validator(cls_, values)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"/usr/local/lib/python3.11/site-packages/langchain/llms/gpt4all.py\", line 156, in validate_environment\r\n    values[\"backend\"] = values[\"client\"].model.model_type\r\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5651/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5651/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5650",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5650/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5650/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5650/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5650",
        "id": 1739328748,
        "node_id": "PR_kwDOIPDwls5SEDgx",
        "number": 5650,
        "title": "Clickhouse based Vector Store",
        "user": {
            "login": "haoch",
            "id": 1282617,
            "node_id": "MDQ6VXNlcjEyODI2MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1282617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haoch",
            "html_url": "https://github.com/haoch",
            "followers_url": "https://api.github.com/users/haoch/followers",
            "following_url": "https://api.github.com/users/haoch/following{/other_user}",
            "gists_url": "https://api.github.com/users/haoch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haoch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haoch/subscriptions",
            "organizations_url": "https://api.github.com/users/haoch/orgs",
            "repos_url": "https://api.github.com/users/haoch/repos",
            "events_url": "https://api.github.com/users/haoch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haoch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-03T09:47:42Z",
        "updated_at": "2023-06-08T03:46:45Z",
        "closed_at": "2023-06-05T20:32:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5650",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5650",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5650.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5650.patch",
            "merged_at": "2023-06-05T20:32:05Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n#### Description\r\n\r\nThis PR is mainly to integrate open source version of ClickHouse as Vector Store as it is easy for both local development and adoption of LangChain for enterprises who already have large scale clickhouse deployment.\r\n\r\nClickHouse is a open source real-time OLAP database with full SQL support and a wide range of functions to assist users in writing analytical queries. Some of these functions and data structures perform distance operations between vectors, [enabling ClickHouse to be used as a vector database](https://clickhouse.com/blog/vector-search-clickhouse-p1).  Recently added ClickHouse capabilities like [Approximate Nearest Neighbour (ANN) indices](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/annindexes) support faster approximate matching of vectors and provide a promising development aimed to further enhance the vector matching capabilities of ClickHouse. \r\n\r\nIn LangChain, some ClickHouse based commercial variant vector stores like [Chroma](https://github.com/hwchase17/langchain/blob/master/langchain/vectorstores/chroma.py) and [MyScale](https://github.com/hwchase17/langchain/blob/master/langchain/vectorstores/myscale.py), etc are already integrated, but for some enterprises with large scale Clickhouse clusters deployment, it will be more straightforward to upgrade existing clickhouse infra instead of moving to another similar vector store solution, so we believe it's a valid requirement to integrate open source version of ClickHouse as vector store.\r\n\r\nAs `clickhouse-connect` is already included by other integrations, this PR won't include any new dependencies. \r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. Added a test for the integration:  https://github.com/haoch/langchain/blob/clickhouse/tests/integration_tests/vectorstores/test_clickhouse.py\r\n2. Added an example notebook and document showing its use: \r\n   * Notebook: https://github.com/haoch/langchain/blob/clickhouse/docs/modules/indexes/vectorstores/examples/clickhouse.ipynb\r\n   * Doc: https://github.com/haoch/langchain/blob/clickhouse/docs/integrations/clickhouse.md\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n1. Added a test for the integration:  https://github.com/haoch/langchain/blob/clickhouse/tests/integration_tests/vectorstores/test_clickhouse.py\r\n2. Added an example notebook and document showing its use: \r\n   * Notebook: https://github.com/haoch/langchain/blob/clickhouse/docs/modules/indexes/vectorstores/examples/clickhouse.ipynb\r\n   * Doc: https://github.com/haoch/langchain/blob/clickhouse/docs/integrations/clickhouse.md\r\n\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n \r\n@hwchase17 @dev2049 Could you please help review?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5650/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5650/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5649",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5649/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5649/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5649/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5649",
        "id": 1739319648,
        "node_id": "PR_kwDOIPDwls5SEBb_",
        "number": 5649,
        "title": "This is a fix for #5475",
        "user": {
            "login": "rajib76",
            "id": 16340036,
            "node_id": "MDQ6VXNlcjE2MzQwMDM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16340036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rajib76",
            "html_url": "https://github.com/rajib76",
            "followers_url": "https://api.github.com/users/rajib76/followers",
            "following_url": "https://api.github.com/users/rajib76/following{/other_user}",
            "gists_url": "https://api.github.com/users/rajib76/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rajib76/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rajib76/subscriptions",
            "organizations_url": "https://api.github.com/users/rajib76/orgs",
            "repos_url": "https://api.github.com/users/rajib76/repos",
            "events_url": "https://api.github.com/users/rajib76/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rajib76/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-03T09:35:24Z",
        "updated_at": "2023-06-03T16:06:54Z",
        "closed_at": "2023-06-03T16:06:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5649",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5649",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5649.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5649.patch",
            "merged_at": null
        },
        "body": "<!--\r\nCurrently in PGVector, the from_documents method will add the embeddings and then return the instance of the store. We should have a method that just returns the store object without inserting embeddings, This is useful when I already have a loaded vector store and I just need the instance of the store. It will be like the below code without the store.add_texts\r\n\r\nstore = cls(\r\n            connection_string=connection_string,\r\n            collection_name=collection_name,\r\n            embedding_function=embedding,\r\n            distance_strategy=distance_strategy,\r\n            pre_delete_collection=pre_delete_collection,\r\n        )\r\n\r\n        store.add_texts(texts=texts, metadatas=metadatas, ids=ids, **kwargs)\r\n        return store\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # 5475\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\n@hwchase17\r\n@dev2049\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5649/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5649/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5648",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5648/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5648/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5648/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5648",
        "id": 1739315605,
        "node_id": "I_kwDOIPDwls5nq9mV",
        "number": 5648,
        "title": "Bug in langchain.llms.Modal which raised ValueError(\"LangChain requires 'prompt' key in response.\")",
        "user": {
            "login": "limcheekin",
            "id": 88172,
            "node_id": "MDQ6VXNlcjg4MTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/88172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/limcheekin",
            "html_url": "https://github.com/limcheekin",
            "followers_url": "https://api.github.com/users/limcheekin/followers",
            "following_url": "https://api.github.com/users/limcheekin/following{/other_user}",
            "gists_url": "https://api.github.com/users/limcheekin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/limcheekin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/limcheekin/subscriptions",
            "organizations_url": "https://api.github.com/users/limcheekin/orgs",
            "repos_url": "https://api.github.com/users/limcheekin/repos",
            "events_url": "https://api.github.com/users/limcheekin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/limcheekin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-03T09:27:01Z",
        "updated_at": "2023-12-13T16:09:23Z",
        "closed_at": "2023-12-13T16:09:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain: 0.0.189\r\nPlatform: Ubuntu 22.04.2 LTS\r\nPython: 3.10.10\r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n@agola11\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nYou can re-produce the error using the notebook at https://python.langchain.com/en/latest/modules/models/llms/integrations/modal.html\r\n\r\nThe following is the response json from my Modal endpoint:\r\n```javascript\r\n{'prompt': 'Artificial Intelligence (AI) is the study of artificial intelligence. Artificial intelligence is the study of artificial intelligence. So, the final answer is AI.'}\r\n```\r\nIt still raise the ValueError(\"LangChain requires 'prompt' key in response.\").\r\n\r\nAfter look into the code, I think there is a bug at https://github.com/hwchase17/langchain/blob/master/langchain/llms/modal.py#L90, the correct syntax should be:\r\n```python\r\nif \"prompt\" in response.json():\r\n```\r\n\r\n### Expected behavior\r\n\r\nNo value error should be raised if the response json format is correct.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5648/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5648/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5647",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5647/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5647/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5647/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5647",
        "id": 1739243294,
        "node_id": "I_kwDOIPDwls5nqr8e",
        "number": 5647,
        "title": "Trying to load an external model Llama-30B-Supercot results in below error",
        "user": {
            "login": "zubair-ahmed-ai",
            "id": 66907171,
            "node_id": "MDQ6VXNlcjY2OTA3MTcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/66907171?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zubair-ahmed-ai",
            "html_url": "https://github.com/zubair-ahmed-ai",
            "followers_url": "https://api.github.com/users/zubair-ahmed-ai/followers",
            "following_url": "https://api.github.com/users/zubair-ahmed-ai/following{/other_user}",
            "gists_url": "https://api.github.com/users/zubair-ahmed-ai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zubair-ahmed-ai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zubair-ahmed-ai/subscriptions",
            "organizations_url": "https://api.github.com/users/zubair-ahmed-ai/orgs",
            "repos_url": "https://api.github.com/users/zubair-ahmed-ai/repos",
            "events_url": "https://api.github.com/users/zubair-ahmed-ai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zubair-ahmed-ai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-03T07:13:52Z",
        "updated_at": "2023-06-03T08:05:47Z",
        "closed_at": "2023-06-03T08:05:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version 0.0.179\r\nUbuntu 20.4\r\n\n\n### Who can help?\n\n@hwchase17 @agola11 @vowelparrot \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nTrying to load Llama-30b-supercot this way results in below error, what is the correct way to load a model with additional configuration like given below?\r\n\r\n```\r\nmodel_name = 'ausboss/llama-30b-supercot'\r\nquantization_config = BitsAndBytesConfig(llm_int8_enable_fp32_cpu_offload=True)\r\nmodel = AutoModelForCausalLM.from_pretrained(model_name,\r\n    torch_dtype=torch.float16, device_map='auto', load_in_8bit=True,quantization_config=quantization_config)\r\n\r\ntokenizer = AutoTokenizer.from_pretrained(model_name)\r\n  \r\ninstruct_pipeline = pipeline(\"text-generation\", model=model, tokenizer=tokenizer, torch_dtype=torch.bfloat16, trust_remote_code=True, device_map=\"auto\", \r\n                            return_full_text=True, max_new_tokens=200, top_p=0.95, top_k=50, eos_token_id=tokenizer.eos_token_id)\r\n\r\ntemplate = \"\"\"Below is an instruction that describes a task. Write a response that appropriately completes the request.\r\n \r\n  Instruction: \r\n  You are an experienced in this solution and your job is to help providing the best answer related to this. \r\n  Use only information in the following paragraphs to answer the question at the end, do not repeat sentences in your answer. Explain the answer with reference to these paragraphs. If you don't know, say that you do not know.\r\n \r\n  {context}\r\n \r\n  Question: {question}\r\n \r\n  Response:\r\n  \"\"\"\r\nprompt = PromptTemplate(input_variables=['context', 'question'], template=template)\r\n \r\nreturn load_qa_chain(llm=instruct_pipeline, chain_type=\"map_reduce\", prompt=prompt, verbose=False)\r\n```\r\n\r\nResults in this error\r\n\r\n```\r\n\u2502 /home/ubuntu/lambda_labs/llama-supercot/Search_faiss_llama_30B_supercot.py:59 in build_qa_chain  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    56   \"\"\"                                                                                      \u2502\r\n\u2502    57   prompt = PromptTemplate(input_variables=['context', 'question'], template=template)      \u2502\r\n\u2502    58                                                                                            \u2502\r\n\u2502 \u2771  59   return load_qa_chain(llm=instruct_pipeline, chain_type=\"map_reduce\", prompt=prompt, ve   \u2502\r\n\u2502    60                                                                                            \u2502\r\n\u2502    61 # Building the chain will load Dolly and can take several minutes depending on the model   \u2502\r\n\u2502    62 qa_chain = build_qa_chain()                                                                \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/ubuntu/miniconda/lib/python3.10/site-packages/langchain/chains/question_answering/__init__ \u2502\r\n\u2502 .py:218 in load_qa_chain                                                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   215 \u2502   \u2502   \u2502   f\"Got unsupported chain type: {chain_type}. \"                                  \u2502\r\n\u2502   216 \u2502   \u2502   \u2502   f\"Should be one of {loader_mapping.keys()}\"                                    \u2502\r\n\u2502   217 \u2502   \u2502   )                                                                                  \u2502\r\n\u2502 \u2771 218 \u2502   return loader_mapping[chain_type](                                                     \u2502\r\n\u2502   219 \u2502   \u2502   llm, verbose=verbose, callback_manager=callback_manager, **kwargs                  \u2502\r\n\u2502   220 \u2502   )                                                                                      \u2502\r\n\u2502   221                                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/ubuntu/miniconda/lib/python3.10/site-packages/langchain/chains/question_answering/__init__ \u2502\r\n\u2502 .py:95 in _load_map_reduce_chain                                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    92 \u2502   _combine_prompt = (                                                                    \u2502\r\n\u2502    93 \u2502   \u2502   combine_prompt or map_reduce_prompt.COMBINE_PROMPT_SELECTOR.get_prompt(llm)        \u2502\r\n\u2502    94 \u2502   )                                                                                      \u2502\r\n\u2502 \u2771  95 \u2502   map_chain = LLMChain(                                                                  \u2502\r\n\u2502    96 \u2502   \u2502   llm=llm,                                                                           \u2502\r\n\u2502    97 \u2502   \u2502   prompt=_question_prompt,                                                           \u2502\r\n\u2502    98 \u2502   \u2502   verbose=verbose,                                                                   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/ubuntu/lambda_labs/llama-supercot/pydantic/main.py:341 in pydantic.main.BaseModel.__init__ \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 [Errno 2] No such file or directory: '/home/ubuntu/lambda_labs/llama-supercot/pydantic/main.py'  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nValidationError: 1 validation error for LLMChain\r\nllm\r\n  value is not a valid dict (type=type_error.dict)\r\n```\n\n### Expected behavior\n\nA model should load for Q&A with documents",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5647/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5647/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5646",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5646/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5646/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5646/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5646",
        "id": 1739169594,
        "node_id": "PR_kwDOIPDwls5SDgWE",
        "number": 5646,
        "title": "fix: correct momento chat history notebook typo and title",
        "user": {
            "login": "malandis",
            "id": 3690240,
            "node_id": "MDQ6VXNlcjM2OTAyNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3690240?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malandis",
            "html_url": "https://github.com/malandis",
            "followers_url": "https://api.github.com/users/malandis/followers",
            "following_url": "https://api.github.com/users/malandis/following{/other_user}",
            "gists_url": "https://api.github.com/users/malandis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malandis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malandis/subscriptions",
            "organizations_url": "https://api.github.com/users/malandis/orgs",
            "repos_url": "https://api.github.com/users/malandis/repos",
            "events_url": "https://api.github.com/users/malandis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malandis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T05:00:29Z",
        "updated_at": "2023-06-03T23:39:27Z",
        "closed_at": "2023-06-03T23:39:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5646",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5646",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5646.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5646.patch",
            "merged_at": "2023-06-03T23:39:27Z"
        },
        "body": "This PR corrects a minor typo in the Momento chat message history notebook and also expands the title from \"Momento\" to \"Momento Chat History\", inline with other chat history storage providers.\r\n\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\ncc @dev2049 who reviewed the original integration\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5646/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5646/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5645",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5645/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5645/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5645/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5645",
        "id": 1739157088,
        "node_id": "I_kwDOIPDwls5nqW5g",
        "number": 5645,
        "title": "I want ssh tunnel support in SQLDatabaseChain",
        "user": {
            "login": "hukuhuku-matsuo",
            "id": 64072754,
            "node_id": "MDQ6VXNlcjY0MDcyNzU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/64072754?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hukuhuku-matsuo",
            "html_url": "https://github.com/hukuhuku-matsuo",
            "followers_url": "https://api.github.com/users/hukuhuku-matsuo/followers",
            "following_url": "https://api.github.com/users/hukuhuku-matsuo/following{/other_user}",
            "gists_url": "https://api.github.com/users/hukuhuku-matsuo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hukuhuku-matsuo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hukuhuku-matsuo/subscriptions",
            "organizations_url": "https://api.github.com/users/hukuhuku-matsuo/orgs",
            "repos_url": "https://api.github.com/users/hukuhuku-matsuo/repos",
            "events_url": "https://api.github.com/users/hukuhuku-matsuo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hukuhuku-matsuo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-03T04:43:36Z",
        "updated_at": "2023-09-14T16:06:47Z",
        "closed_at": "2023-09-14T16:06:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nDue to security reasons, it is not always possible to connect directly to the DB. I want SQLDatabaseChain to support ssh tunnel because I have to connect to a specific kind of stepping stone server before I can connect to the DB.\r\n\r\nIf there is already a way to accomplish this, I apologize.\n\n### Motivation\n\nI want to use llm with all our own data to create an innovative experience, and SQLDatabaseChain makes that possible.\n\n### Your contribution\n\nI can contribute with testing. I do not yet have a good understanding of langchain's source code structure and inner workings, so coding contributions would not be appropriate.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5645/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5645/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5642",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5642/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5642/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5642/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5642",
        "id": 1739087949,
        "node_id": "I_kwDOIPDwls5nqGBN",
        "number": 5642,
        "title": "RetrievalQAWithSourcesChain provides unreliable sources",
        "user": {
            "login": "startakovsky",
            "id": 689723,
            "node_id": "MDQ6VXNlcjY4OTcyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/689723?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/startakovsky",
            "html_url": "https://github.com/startakovsky",
            "followers_url": "https://api.github.com/users/startakovsky/followers",
            "following_url": "https://api.github.com/users/startakovsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/startakovsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/startakovsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/startakovsky/subscriptions",
            "organizations_url": "https://api.github.com/users/startakovsky/orgs",
            "repos_url": "https://api.github.com/users/startakovsky/repos",
            "events_url": "https://api.github.com/users/startakovsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/startakovsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-03T02:45:24Z",
        "updated_at": "2023-09-18T16:09:24Z",
        "closed_at": "2023-09-18T16:09:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\n## System Info\r\n - `langchain.__version__` is `0.0.184`\r\n - Python 3.11\r\n - Mac OS Ventura 13.3.1(a)\n\n### Who can help?\n\n@hwchase17\r\n\r\n## Summary\r\n\r\nThe **sources** component of the output of `RetrievalQAWithSourcesChain` is not providing transparency into what documents the retriever returns, it is instead some output that the llm contrives.\r\n\r\n## Motivation\r\n\r\nFrom my perspective, the primary advantage of having visibility into sources is to allow the system to provide transparency into the documents that were retrieved in assisting the language model to generate its answer. Only after being confused for quite a while and inspecting the code did I realize that the sources were just being conjured up. \r\n\r\n## Advice\r\n\r\nI think it is important to ensure that people know about this, as maybe this isn't a bug and is more [documentation](https://python.langchain.com/en/latest/modules/chains/index_examples/vector_db_qa_with_sources.html)-related, though I think the [docstring](https://github.com/hwchase17/langchain/blob/9a7488a5ce65aaf727464f02a10811719b517f11/langchain/chains/qa_with_sources/retrieval.py#L13) should be updated as well. \r\n\r\n### Notes\r\n\r\n#### Document Retrieval Works very well.\r\n\r\nIt's worth noting that in this toy example, the combination of `FAISS` vector store and the `OpenAIEmbeddings` embeddings model are doing very reasonably, and are deterministic.\r\n\r\n#### Recommendation\r\n\r\nAdd caveats\u00a0everywhere. Frankly, I would never trust using this chain. I literally had an example the other day where it wrongly made up a source and a wikipedia url that had absolutely nothing to do with the documents retrieved. I could supply this example as it is a way better illustration of how this chain will hallucinate sources because they are generated by the LLM, but it's just a little bit more involved than this smaller example.\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n## Demonstrative Example\r\n\r\nHere's the simplest example I could come up with: \r\n\r\n### 1. Instantiate a `vectorstore` with 7 documents displayed below.\r\n```python\r\n>>> from langchain.vectorstores import FAISS\r\n>>> from langchain.embeddings import OpenAIEmbeddings\r\n>>> from langchain.llms import OpenAI\r\n>>> from langchain.chains import RetrievalQAWithSourcesChain\r\n\r\n>>> chars = ['a', 'b', 'c', 'd', '1', '2', '3']\r\n>>> texts = [4*c for c in chars]\r\n>>> metadatas = [{'title': c, 'source': f'source_{c}'} for c in chars]\r\n\r\n>>> vs = FAISS.from_texts(texts, embedding=OpenAIEmbeddings(), metadatas=metadatas)\r\n>>> retriever = vs.as_retriever(search_kwargs=dict(k=5))\r\n>>> vs.docstore._dict\r\n```\r\n\r\n    {'0ec43ce4-6753-4dac-b72a-6cf9decb290e': Document(page_content='aaaa', metadata={'title': 'a', 'source': 'source_a'}),\r\n     '54baed0b-690a-4ffc-bb1e-707eed7da5a1': Document(page_content='bbbb', metadata={'title': 'b', 'source': 'source_b'}),\r\n     '85b834fa-14e1-4b20-9912-fa63fb7f0e50': Document(page_content='cccc', metadata={'title': 'c', 'source': 'source_c'}),\r\n     '06c0cfd0-21a2-4e0c-9c2e-dd624b5164fe': Document(page_content='dddd', metadata={'title': 'd', 'source': 'source_d'}),\r\n     '94d6444f-96cd-4d88-8973-c3c0b9bf0c78': Document(page_content='1111', metadata={'title': '1', 'source': 'source_1'}),\r\n     'ec04b042-a4eb-4570-9ee9-a2a0bd66a82e': Document(page_content='2222', metadata={'title': '2', 'source': 'source_2'}),\r\n     '0031d3fc-f291-481e-a12a-9cc6ed9761e0': Document(page_content='3333', metadata={'title': '3', 'source': 'source_3'})}\r\n\r\n\r\n### 2. Instantiate a `RetrievalQAWithSourcesChain`\r\n\r\nThe `return_source_documents` is set to `True` so that we can inspect the actual sources retrieved.\r\n\r\n```python\r\n>>> qa_sources = RetrievalQAWithSourcesChain.from_chain_type(\r\n    OpenAI(), \r\n    retriever=retriever, \r\n    return_source_documents=True\r\n)\r\n```\r\n\r\n### 3. Example Question\r\n\r\nThings look sort of fine, meaning 5 documents are retrieved by the `retriever`, but the model only lists only a single source. \r\n\r\n```python\r\nqa_sources('what is the first lower-case letter of the alphabet?')\r\n```\r\n\r\n    {'question': 'what is the first lower-case letter of the alphabet?',\r\n     'answer': ' The first lower-case letter of the alphabet is \"a\".\\n',\r\n     'sources': 'source_a',\r\n     'source_documents': [Document(page_content='bbbb', metadata={'title': 'b', 'source': 'source_b'}),\r\n      Document(page_content='aaaa', metadata={'title': 'a', 'source': 'source_a'}),\r\n      Document(page_content='cccc', metadata={'title': 'c', 'source': 'source_c'}),\r\n      Document(page_content='dddd', metadata={'title': 'd', 'source': 'source_d'}),\r\n      Document(page_content='1111', metadata={'title': '1', 'source': 'source_1'})]}\r\n\r\n\r\n### 4. Second Example Question containing the First Question.\r\n\r\nThis is not what I would expect, considering that this question contains the previous question, and that the vector store did supply the document with `{'source': 'source_a'}`, but for some reason (i.e. the internals of the output of `OpenAI()` ) in this response from the chain, there are zero sources listed.\r\n\r\n```python\r\n>>> qa_sources('what is the one and only first lower-case letter and number of the alphabet and whole number system?')\r\n```\r\n\r\n    {'question': 'what is the one and only first lower-case letter and number of the alphabet and whole number system?',\r\n     'answer': ' The one and only first lower-case letter and number of the alphabet and whole number system is \"a1\".\\n',\r\n     'sources': 'N/A',\r\n     'source_documents': [Document(page_content='1111', metadata={'title': '1', 'source': 'source_1'}),\r\n      Document(page_content='bbbb', metadata={'title': 'b', 'source': 'source_b'}),\r\n      Document(page_content='aaaa', metadata={'title': 'a', 'source': 'source_a'}),\r\n      Document(page_content='2222', metadata={'title': '2', 'source': 'source_2'}),\r\n      Document(page_content='cccc', metadata={'title': 'c', 'source': 'source_c'})]}\r\n\n\n### Expected behavior\n\nI am not sure. We need a warning, perhaps, every time this chain is used, or some strongly worded documentation for our developers.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5642/reactions",
            "total_count": 13,
            "+1": 13,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5642/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5641",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5641/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5641/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5641/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5641",
        "id": 1739058450,
        "node_id": "PR_kwDOIPDwls5SDHka",
        "number": 5641,
        "title": "Add knn and query search field options to ElasticKnnSearch",
        "user": {
            "login": "jeffvestal",
            "id": 53237856,
            "node_id": "MDQ6VXNlcjUzMjM3ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/53237856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffvestal",
            "html_url": "https://github.com/jeffvestal",
            "followers_url": "https://api.github.com/users/jeffvestal/followers",
            "following_url": "https://api.github.com/users/jeffvestal/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffvestal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffvestal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffvestal/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffvestal/orgs",
            "repos_url": "https://api.github.com/users/jeffvestal/repos",
            "events_url": "https://api.github.com/users/jeffvestal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffvestal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T02:01:32Z",
        "updated_at": "2023-06-08T03:19:14Z",
        "closed_at": "2023-06-08T03:19:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5641",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5641",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5641.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5641.patch",
            "merged_at": "2023-06-08T03:19:14Z"
        },
        "body": "in the `ElasticKnnSearch` class added 2 arguments that were not exposed properly\r\n\r\n`knn_search` added:\r\n- `vector_query_field: Optional[str] = 'vector'`\r\n-- vector_query_field: Field name to use in knn search if not default 'vector'\r\n\r\n`knn_hybrid_search` added:\r\n- `vector_query_field: Optional[str] = 'vector'`\r\n-- vector_query_field: Field name to use in knn search if not default 'vector'\r\n- `query_field: Optional[str] = 'text'`\r\n-- query_field: Field name to use in search if not default 'text'\r\n\r\n\r\n\r\nFixes # https://github.com/hwchase17/langchain/issues/5633\r\n\r\n\r\ncc: @dev2049 @hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5641/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5641/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5640",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5640/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5640/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5640/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5640",
        "id": 1738953863,
        "node_id": "PR_kwDOIPDwls5SCwVf",
        "number": 5640,
        "title": "Replace exec with wasm_exec",
        "user": {
            "login": "Jflick58",
            "id": 22459070,
            "node_id": "MDQ6VXNlcjIyNDU5MDcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/22459070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jflick58",
            "html_url": "https://github.com/Jflick58",
            "followers_url": "https://api.github.com/users/Jflick58/followers",
            "following_url": "https://api.github.com/users/Jflick58/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jflick58/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jflick58/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jflick58/subscriptions",
            "organizations_url": "https://api.github.com/users/Jflick58/orgs",
            "repos_url": "https://api.github.com/users/Jflick58/repos",
            "events_url": "https://api.github.com/users/Jflick58/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jflick58/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-06-02T23:47:47Z",
        "updated_at": "2023-11-01T23:18:46Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5640",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5640",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5640.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5640.patch",
            "merged_at": null
        },
        "body": "This replaces the usage of the insecure `exec` function with a more secure library called [wasm_exec](https://github.com/Jflick58/wasm_exec) TL;DR: Use `chroot` jails, `wasmtime` and a standalone Python3.11 WASM interpreter to safely execute arbitrary code\r\n\r\nSome questions before I officially submit this pr:\r\n\r\n- **How critical is it that we support the execution of code containing 3rd-party dependencies?** The team behind the wasm interpreter I vendor with the library is working on porting `numpy` along with some of the c libs needed to enable broader package support. \r\n       \r\n  - *If it is critical, then how critical is it to support Python versions below 3.11?* Right now the interpreter does support the use of an existing venv for accessing installed 3rd party deps, but the interpreter is only distributed in 3.11 which means I would either a) have to only support 3.11 b) have a 3rd split in the PythonRepl code base (base, AST, Wasm) or b) try to write some hacky and unpythonic code to try to dynamically create a new 3.11-based venv off of the currently active Python environment. \r\n\r\n   - *If it is not critical* then is it okay if I refactor the test cases to avoid the tests containing `numpy` and `pandas` code? Should we also update the docs to reflect that limitation?\r\n\r\nI also strongly welcome feedback on the wasm_exec library if there are implementation ideas that make it more functional. \r\n\r\nFixes #1026 \r\nFixes #5294 \r\nFixes #5388 \r\nFixes https://nvd.nist.gov/vuln/detail/CVE-2023-29374\r\n\r\n#### Who can review?\r\n\r\n  - @hwchase17 \r\n  - @vowelparrot\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5640/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5640/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5639",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5639/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5639/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5639/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5639",
        "id": 1738951281,
        "node_id": "PR_kwDOIPDwls5SCvxA",
        "number": 5639,
        "title": "Retitles Bedrock doc to appear in correct alphabetical order in site nav",
        "user": {
            "login": "JasonWeill",
            "id": 93281816,
            "node_id": "U_kgDOBY9eGA",
            "avatar_url": "https://avatars.githubusercontent.com/u/93281816?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JasonWeill",
            "html_url": "https://github.com/JasonWeill",
            "followers_url": "https://api.github.com/users/JasonWeill/followers",
            "following_url": "https://api.github.com/users/JasonWeill/following{/other_user}",
            "gists_url": "https://api.github.com/users/JasonWeill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JasonWeill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JasonWeill/subscriptions",
            "organizations_url": "https://api.github.com/users/JasonWeill/orgs",
            "repos_url": "https://api.github.com/users/JasonWeill/repos",
            "events_url": "https://api.github.com/users/JasonWeill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JasonWeill/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T23:42:02Z",
        "updated_at": "2023-06-04T21:39:25Z",
        "closed_at": "2023-06-04T21:39:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5639",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5639",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5639.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5639.patch",
            "merged_at": "2023-06-04T21:39:25Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes #5638. Retitles \"Amazon Bedrock\" page to \"Bedrock\" so that the Integrations section of the left nav is properly sorted in alphabetical order.\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5639/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5639/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5638",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5638/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5638/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5638/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5638",
        "id": 1738950805,
        "node_id": "I_kwDOIPDwls5npkiV",
        "number": 5638,
        "title": "DOC: \"Amazon Bedrock\" is not sorted in Integrations section of nav",
        "user": {
            "login": "JasonWeill",
            "id": 93281816,
            "node_id": "U_kgDOBY9eGA",
            "avatar_url": "https://avatars.githubusercontent.com/u/93281816?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JasonWeill",
            "html_url": "https://github.com/JasonWeill",
            "followers_url": "https://api.github.com/users/JasonWeill/followers",
            "following_url": "https://api.github.com/users/JasonWeill/following{/other_user}",
            "gists_url": "https://api.github.com/users/JasonWeill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JasonWeill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JasonWeill/subscriptions",
            "organizations_url": "https://api.github.com/users/JasonWeill/orgs",
            "repos_url": "https://api.github.com/users/JasonWeill/repos",
            "events_url": "https://api.github.com/users/JasonWeill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JasonWeill/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-02T23:41:12Z",
        "updated_at": "2023-06-04T21:39:26Z",
        "closed_at": "2023-06-04T21:39:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nIn the left nav of the docs, \"Amazon Bedrock\" is alphabetized after \"Beam integration for langchain\" and before \"Cerebrium AI\", not with the rest of the A-named integrations.\r\n\r\n<img width=\"254\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/93281816/20836ca0-3946-4614-8b44-4dcf67e27f7e\">\r\n\n\n### Idea or request for content:\n\nRetitle the page to \"Bedrock\" so that its URL remains unchanged and the nav is properly sorted.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5638/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5638/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5637",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5637/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5637/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5637/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5637",
        "id": 1738933116,
        "node_id": "PR_kwDOIPDwls5SCr6S",
        "number": 5637,
        "title": "handle single arg to and/or",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T23:10:00Z",
        "updated_at": "2023-06-03T22:18:48Z",
        "closed_at": "2023-06-03T22:18:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5637",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5637",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5637.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5637.patch",
            "merged_at": "2023-06-03T22:18:47Z"
        },
        "body": "@ryderwishart @eyurtsev thoughts on handling this in the parser itself? related to #5570",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5637/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5637/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5636",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5636/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5636/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5636/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5636",
        "id": 1738805530,
        "node_id": "PR_kwDOIPDwls5SCQNr",
        "number": 5636,
        "title": "fix import issue",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T20:42:39Z",
        "updated_at": "2023-06-02T22:13:15Z",
        "closed_at": "2023-06-02T21:58:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5636",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5636",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5636.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5636.patch",
            "merged_at": "2023-06-02T21:58:41Z"
        },
        "body": "# fix for the import issue\r\n\r\nAdded document loader classes from [`figma`, `iugu`, `onedrive_file`] to `document_loaders/__inti__.py` imports\r\nAlso sorted `__all__`\r\n\r\nFixed #5623 issue\r\n\r\n#### Who can review?\r\n\r\n@eyurtsev\r\n\r\n  \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5636/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5636/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5635",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5635/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5635/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5635/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5635",
        "id": 1738789780,
        "node_id": "PR_kwDOIPDwls5SCMzE",
        "number": 5635,
        "title": "In memory audio blob loading and splitting",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-02T20:29:00Z",
        "updated_at": "2023-06-07T04:08:25Z",
        "closed_at": "2023-06-07T04:08:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5635",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5635",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5635.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5635.patch",
            "merged_at": null
        },
        "body": "This PR creates a `BaseBlobSplitter` and a `BaseBlobTransformer`, which can be used to split and transform blobs. It creates an instance of the `BaseBlobTransformer` called `YoutubeToAudioTransformer`, which can be used to download a YouTube URL to audio. In addition, it creates an instance of `BaseBlobSplitter` called `AudioSplitter`, which can be used to split an audio file into smaller blobs. Both are useful for an end-to-end workflow that combines (1) YouTube link to Audio, (2) Audio to Audio splits, and (3) then use `OpenAIWhisperParser` [here](https://github.com/hwchase17/langchain/pull/5580) to create `Documents` from the splits. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5635/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5635/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5633",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5633/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5633/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5633/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5633",
        "id": 1738770687,
        "node_id": "I_kwDOIPDwls5no4j_",
        "number": 5633,
        "title": "Allow query field to be passed in ElasticKnnSearch.knnSearch",
        "user": {
            "login": "jeffvestal",
            "id": 53237856,
            "node_id": "MDQ6VXNlcjUzMjM3ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/53237856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffvestal",
            "html_url": "https://github.com/jeffvestal",
            "followers_url": "https://api.github.com/users/jeffvestal/followers",
            "following_url": "https://api.github.com/users/jeffvestal/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffvestal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffvestal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffvestal/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffvestal/orgs",
            "repos_url": "https://api.github.com/users/jeffvestal/repos",
            "events_url": "https://api.github.com/users/jeffvestal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffvestal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-02T20:16:03Z",
        "updated_at": "2023-09-10T16:08:24Z",
        "closed_at": "2023-09-10T16:08:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nThe [_default_knn_query](https://github.com/jeffvestal/langchain/blob/10f34bf62e2d53f0b1a7b15ba21c2328b64862cd/langchain/vectorstores/elastic_vector_search.py#L402) takes `field` arg to specify the field to use when performing knn and hybrid search.\r\n\r\nboth [knn_search](https://github.com/jeffvestal/langchain/blob/10f34bf62e2d53f0b1a7b15ba21c2328b64862cd/langchain/vectorstores/elastic_vector_search.py#L475) and [hybrid_search](https://github.com/jeffvestal/langchain/blob/10f34bf62e2d53f0b1a7b15ba21c2328b64862cd/langchain/vectorstores/elastic_vector_search.py#L537) need to allow that to be passed in as an arg and pass it to `_default_knn_query`\r\n\r\n\r\nI'll make the update\r\n\r\ncc: @hw\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nTry to search a field other than `vector`, can't do it \n\n### Expected behavior\n\nPass a `qeuery_field` value to search over a different field name other than the default `vector`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5633/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5633/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5632",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5632/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5632/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5632/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5632",
        "id": 1738765329,
        "node_id": "PR_kwDOIPDwls5SCHWd",
        "number": 5632,
        "title": "Update MongoDBChatMessageHistory to create an index on SessionId",
        "user": {
            "login": "ldesousa-stf",
            "id": 104941391,
            "node_id": "U_kgDOBkFHTw",
            "avatar_url": "https://avatars.githubusercontent.com/u/104941391?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ldesousa-stf",
            "html_url": "https://github.com/ldesousa-stf",
            "followers_url": "https://api.github.com/users/ldesousa-stf/followers",
            "following_url": "https://api.github.com/users/ldesousa-stf/following{/other_user}",
            "gists_url": "https://api.github.com/users/ldesousa-stf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ldesousa-stf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ldesousa-stf/subscriptions",
            "organizations_url": "https://api.github.com/users/ldesousa-stf/orgs",
            "repos_url": "https://api.github.com/users/ldesousa-stf/repos",
            "events_url": "https://api.github.com/users/ldesousa-stf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ldesousa-stf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T20:12:25Z",
        "updated_at": "2023-06-04T23:46:24Z",
        "closed_at": "2023-06-04T21:39:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5632",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5632",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5632.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5632.patch",
            "merged_at": "2023-06-04T21:39:56Z"
        },
        "body": "All the queries to the database are done based on the SessionId property, this will optimize how Mongo retrieves all messages from a session\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5632/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5632/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5631",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5631/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5631/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5631/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5631",
        "id": 1738736481,
        "node_id": "I_kwDOIPDwls5nowNh",
        "number": 5631,
        "title": "Make embedding object optional for ElasticKnnSearch",
        "user": {
            "login": "jeffvestal",
            "id": 53237856,
            "node_id": "MDQ6VXNlcjUzMjM3ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/53237856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffvestal",
            "html_url": "https://github.com/jeffvestal",
            "followers_url": "https://api.github.com/users/jeffvestal/followers",
            "following_url": "https://api.github.com/users/jeffvestal/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffvestal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffvestal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffvestal/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffvestal/orgs",
            "repos_url": "https://api.github.com/users/jeffvestal/repos",
            "events_url": "https://api.github.com/users/jeffvestal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffvestal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T19:52:37Z",
        "updated_at": "2023-09-10T16:08:28Z",
        "closed_at": "2023-09-10T16:08:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nMake `embedding` an [optional arg](https://github.com/jeffvestal/langchain/blob/10f34bf62e2d53f0b1a7b15ba21c2328b64862cd/langchain/vectorstores/elastic_vector_search.py#L332) when creating `ElasticKnnSearch` class\n\n### Motivation\n\nIf a user is only going to run knn/hybrid search AND use the `query_vector_builder` having an embedding object is not needed as ES will generate the embedding during search\r\n\r\n\n\n### Your contribution\n\nI will make the changes",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5631/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5631/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5630",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5630/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5630/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5630/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5630",
        "id": 1738661160,
        "node_id": "I_kwDOIPDwls5nod0o",
        "number": 5630,
        "title": "ConversationalRetrievalChain unable to use ConversationBufferMemory when return_source_documents=True",
        "user": {
            "login": "rob-rowe",
            "id": 12414695,
            "node_id": "MDQ6VXNlcjEyNDE0Njk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12414695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rob-rowe",
            "html_url": "https://github.com/rob-rowe",
            "followers_url": "https://api.github.com/users/rob-rowe/followers",
            "following_url": "https://api.github.com/users/rob-rowe/following{/other_user}",
            "gists_url": "https://api.github.com/users/rob-rowe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rob-rowe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rob-rowe/subscriptions",
            "organizations_url": "https://api.github.com/users/rob-rowe/orgs",
            "repos_url": "https://api.github.com/users/rob-rowe/repos",
            "events_url": "https://api.github.com/users/rob-rowe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rob-rowe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-06-02T18:54:26Z",
        "updated_at": "2023-11-09T16:13:41Z",
        "closed_at": "2023-11-09T16:13:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain 0.0.188\r\nPython 3.8\r\n\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\nqa = ConversationalRetrievalChain.from_llm(OpenAI(temperature =0), vectorstore.as_retriever(), memory=memory, return_source_documents=True)\r\nqa({\"question\": query})\r\n#ValueError\" One output key expected, got dict_keys(['answer', 'source_documents'])\r\n\r\nqa = ConversationalRetrievalChain.from_llm(OpenAI(temperature =0), vectorstore.as_retriever(), return_source_documents=True)\r\nqa({\"question\": query, \"chat_history\": []})\r\n#...(runs as expected)\r\n\r\n\n\n### Expected behavior\n\nConversationalRetrievalChain does not work with ConversationBufferMemory and return_source_documents=True.   \r\n\r\nValueError: One output key expected, got dict_keys(['answer', 'source_documents']) ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5630/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5630/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5629",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5629/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5629/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5629/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5629",
        "id": 1738644074,
        "node_id": "PR_kwDOIPDwls5SBsgl",
        "number": 5629,
        "title": "Fix bedrock llm boto3 client instantiation",
        "user": {
            "login": "seanpmorgan",
            "id": 18154355,
            "node_id": "MDQ6VXNlcjE4MTU0MzU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/18154355?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanpmorgan",
            "html_url": "https://github.com/seanpmorgan",
            "followers_url": "https://api.github.com/users/seanpmorgan/followers",
            "following_url": "https://api.github.com/users/seanpmorgan/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanpmorgan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanpmorgan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanpmorgan/subscriptions",
            "organizations_url": "https://api.github.com/users/seanpmorgan/orgs",
            "repos_url": "https://api.github.com/users/seanpmorgan/repos",
            "events_url": "https://api.github.com/users/seanpmorgan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanpmorgan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-02T18:40:00Z",
        "updated_at": "2023-06-02T19:06:47Z",
        "closed_at": "2023-06-02T19:04:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5629",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5629",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5629.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5629.patch",
            "merged_at": "2023-06-02T19:04:50Z"
        },
        "body": "Same issue as https://github.com/hwchase17/langchain/pull/5574",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5629/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5629/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5628",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5628/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5628/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5628/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5628",
        "id": 1738627556,
        "node_id": "PR_kwDOIPDwls5SBo2I",
        "number": 5628,
        "title": "Change Anthropic LLM and Chat to be LangFlow friendly",
        "user": {
            "login": "jimwhite",
            "id": 890972,
            "node_id": "MDQ6VXNlcjg5MDk3Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/890972?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jimwhite",
            "html_url": "https://github.com/jimwhite",
            "followers_url": "https://api.github.com/users/jimwhite/followers",
            "following_url": "https://api.github.com/users/jimwhite/following{/other_user}",
            "gists_url": "https://api.github.com/users/jimwhite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jimwhite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jimwhite/subscriptions",
            "organizations_url": "https://api.github.com/users/jimwhite/orgs",
            "repos_url": "https://api.github.com/users/jimwhite/repos",
            "events_url": "https://api.github.com/users/jimwhite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jimwhite/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-02T18:28:04Z",
        "updated_at": "2023-09-18T04:23:48Z",
        "closed_at": "2023-09-18T04:19:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5628",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5628",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5628.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5628.patch",
            "merged_at": null
        },
        "body": "Change the Anthropic LLM and Chat classes to use model_name and default parameters the same way others do like OpenAI, Cohere, etc.  Added an alias for model to model_name for backwards compatibility.  By following the common pattern this will enable the Anthropic PR I'm working on for LangFlow (https://github.com/jimwhite/langflow/tree/anthropic) to work as expected.\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5628/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5628/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5627",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5627/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5627/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5627/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5627",
        "id": 1738622995,
        "node_id": "I_kwDOIPDwls5noUgT",
        "number": 5627,
        "title": "DOC: repetitive parts in Modules pages",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-02T18:24:00Z",
        "updated_at": "2023-06-04T01:43:06Z",
        "closed_at": "2023-06-04T01:43:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nPages in Modules: Models, Prompts, Memory, ... \r\nThey all have repeated parts. See a picture. \r\n\r\n![image](https://github.com/hwchase17/langchain/assets/2256422/05514908-87b5-453a-9795-8304612f42bf)\r\n\r\n\r\n### Idea or request for content:\r\nThe whole \"Go Deeper\" section can be removed and instead, the links from removed items added to the above items. For example \"Prompt Templates\" link is added to the \"LLM Prompt Templates\" in the above text. Etc.\r\nThis significantly decreases the size of the page and improves user experience. No more repetitive items.\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5627/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5627/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5626",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5626/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5626/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5626/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5626",
        "id": 1738606123,
        "node_id": "PR_kwDOIPDwls5SBkIP",
        "number": 5626,
        "title": "Cjcjameson/rebase 4203 dev2049/pgvector size fix",
        "user": {
            "login": "cjcjameson",
            "id": 6885889,
            "node_id": "MDQ6VXNlcjY4ODU4ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6885889?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjcjameson",
            "html_url": "https://github.com/cjcjameson",
            "followers_url": "https://api.github.com/users/cjcjameson/followers",
            "following_url": "https://api.github.com/users/cjcjameson/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjcjameson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjcjameson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjcjameson/subscriptions",
            "organizations_url": "https://api.github.com/users/cjcjameson/orgs",
            "repos_url": "https://api.github.com/users/cjcjameson/repos",
            "events_url": "https://api.github.com/users/cjcjameson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjcjameson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T18:10:02Z",
        "updated_at": "2023-09-22T16:01:35Z",
        "closed_at": "2023-09-22T16:01:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5626",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5626",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5626.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5626.patch",
            "merged_at": null
        },
        "body": "#4203 fixes #3660 and #2219 but it's 4 weeks stale and I had other issues so I'm trying to rebasing it. Maybe that will pass CI better and maybe it will \"just work\"\r\n\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5626/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5626/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5625",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5625/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5625/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5625/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5625",
        "id": 1738601116,
        "node_id": "PR_kwDOIPDwls5SBi_u",
        "number": 5625,
        "title": "fix markdown text splitter horizontal lines",
        "user": {
            "login": "IlyaMichlin",
            "id": 1222232,
            "node_id": "MDQ6VXNlcjEyMjIyMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1222232?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IlyaMichlin",
            "html_url": "https://github.com/IlyaMichlin",
            "followers_url": "https://api.github.com/users/IlyaMichlin/followers",
            "following_url": "https://api.github.com/users/IlyaMichlin/following{/other_user}",
            "gists_url": "https://api.github.com/users/IlyaMichlin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IlyaMichlin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IlyaMichlin/subscriptions",
            "organizations_url": "https://api.github.com/users/IlyaMichlin/orgs",
            "repos_url": "https://api.github.com/users/IlyaMichlin/repos",
            "events_url": "https://api.github.com/users/IlyaMichlin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IlyaMichlin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-02T18:06:25Z",
        "updated_at": "2023-06-05T23:40:27Z",
        "closed_at": "2023-06-05T23:40:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5625",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5625",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5625.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5625.patch",
            "merged_at": "2023-06-05T23:40:27Z"
        },
        "body": "Fixes #5614 \r\n\r\n#### Issue\r\n\r\nThe `***` combination produces an exception when used as a seperator in `re.split`. Instead `\\*\\*\\*` should be used for regex exprations.\r\n\r\n#### Who can review?\r\n\r\n@eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5625/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5625/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5624",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5624/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5624/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5624/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5624",
        "id": 1738587548,
        "node_id": "PR_kwDOIPDwls5SBf_L",
        "number": 5624,
        "title": "Refactor SQL dialect prompts to eliminate code duplication.",
        "user": {
            "login": "himalayahall",
            "id": 90348181,
            "node_id": "MDQ6VXNlcjkwMzQ4MTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/90348181?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/himalayahall",
            "html_url": "https://github.com/himalayahall",
            "followers_url": "https://api.github.com/users/himalayahall/followers",
            "following_url": "https://api.github.com/users/himalayahall/following{/other_user}",
            "gists_url": "https://api.github.com/users/himalayahall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/himalayahall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/himalayahall/subscriptions",
            "organizations_url": "https://api.github.com/users/himalayahall/orgs",
            "repos_url": "https://api.github.com/users/himalayahall/repos",
            "events_url": "https://api.github.com/users/himalayahall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/himalayahall/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-02T17:55:22Z",
        "updated_at": "2023-11-07T04:20:15Z",
        "closed_at": "2023-11-07T04:20:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5624",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5624",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5624.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5624.patch",
            "merged_at": null
        },
        "body": "Refactored code to eliminate multiple copies of the query prompt (prompt per dialect). Now, there is a single copy of the prompt and all placeholders are encapsulated in **SqlQueryDialect** enumeration class. This should make it much easier and less error to add new SQL dialects and/or extend prompt template (e.g. adding new hints for the LLM). Code changes have been formatted, linted, and tested.\r\n\r\n#### Who can review?\r\n@hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5624/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5624/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5623",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5623/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5623/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5623/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5623",
        "id": 1738498708,
        "node_id": "I_kwDOIPDwls5nn2KU",
        "number": 5623,
        "title": "cannot import name 'FigmaFileLoader'",
        "user": {
            "login": "davidvesp",
            "id": 100422627,
            "node_id": "U_kgDOBfxT4w",
            "avatar_url": "https://avatars.githubusercontent.com/u/100422627?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidvesp",
            "html_url": "https://github.com/davidvesp",
            "followers_url": "https://api.github.com/users/davidvesp/followers",
            "following_url": "https://api.github.com/users/davidvesp/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidvesp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidvesp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidvesp/subscriptions",
            "organizations_url": "https://api.github.com/users/davidvesp/orgs",
            "repos_url": "https://api.github.com/users/davidvesp/repos",
            "events_url": "https://api.github.com/users/davidvesp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidvesp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T16:39:41Z",
        "updated_at": "2023-06-03T01:48:51Z",
        "closed_at": "2023-06-02T21:58:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.189\r\nos:windows11\r\npython=3.10.11\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.document_loaders import FigmaFileLoader\n\n### Expected behavior\n\nexpected:\r\nload the module\r\n\r\nerror:\r\nImportError: cannot import name 'FigmaFileLoader' from 'langchain.document_loaders' (C:\\Users\\xxx\\AppData\\Local\\miniconda3\\envs\\xxx\\lib\\site-packages\\langchain\\document_loaders\\__init__.py)\r\n\r\ncomments:\r\nchecked the langchain\\document_loaders\\__init__.py and there is no reference to FigmaFileLoader\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5623/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5623/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5622",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5622/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5622/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5622/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5622",
        "id": 1738473740,
        "node_id": "I_kwDOIPDwls5nnwEM",
        "number": 5622,
        "title": "DOC: can't execute the code of Async API for Chain",
        "user": {
            "login": "liuyingduo",
            "id": 56947550,
            "node_id": "MDQ6VXNlcjU2OTQ3NTUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/56947550?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liuyingduo",
            "html_url": "https://github.com/liuyingduo",
            "followers_url": "https://api.github.com/users/liuyingduo/followers",
            "following_url": "https://api.github.com/users/liuyingduo/following{/other_user}",
            "gists_url": "https://api.github.com/users/liuyingduo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liuyingduo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liuyingduo/subscriptions",
            "organizations_url": "https://api.github.com/users/liuyingduo/orgs",
            "repos_url": "https://api.github.com/users/liuyingduo/repos",
            "events_url": "https://api.github.com/users/liuyingduo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liuyingduo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T16:16:48Z",
        "updated_at": "2023-09-10T16:08:33Z",
        "closed_at": "2023-09-10T16:08:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\n![image](https://github.com/hwchase17/langchain/assets/56947550/418be26f-62e3-4719-bfc8-a81c89b1845f)\r\n\n\n### Idea or request for content:\n\nThe program is stuck and will not return",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5622/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5622/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5621",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5621/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5621/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5621/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5621",
        "id": 1738437991,
        "node_id": "PR_kwDOIPDwls5SA_a-",
        "number": 5621,
        "title": "Dev2049/add argilla callback",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-02T15:51:47Z",
        "updated_at": "2023-06-02T16:05:08Z",
        "closed_at": "2023-06-02T16:05:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5621",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5621",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5621.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5621.patch",
            "merged_at": "2023-06-02T16:05:07Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5621/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5621/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5620",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5620/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5620/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5620/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5620",
        "id": 1738425416,
        "node_id": "PR_kwDOIPDwls5SA8u-",
        "number": 5620,
        "title": "bump 189",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-02T15:41:43Z",
        "updated_at": "2023-06-02T16:09:24Z",
        "closed_at": "2023-06-02T16:09:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5620",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5620",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5620.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5620.patch",
            "merged_at": "2023-06-02T16:09:23Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5620/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5620/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5619",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5619/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5619/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5619/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5619",
        "id": 1738284161,
        "node_id": "PR_kwDOIPDwls5SAdvh",
        "number": 5619,
        "title": "Added SingleStoreDB Vector Store",
        "user": {
            "login": "volodymyr-memsql",
            "id": 57520563,
            "node_id": "MDQ6VXNlcjU3NTIwNTYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/57520563?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/volodymyr-memsql",
            "html_url": "https://github.com/volodymyr-memsql",
            "followers_url": "https://api.github.com/users/volodymyr-memsql/followers",
            "following_url": "https://api.github.com/users/volodymyr-memsql/following{/other_user}",
            "gists_url": "https://api.github.com/users/volodymyr-memsql/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/volodymyr-memsql/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/volodymyr-memsql/subscriptions",
            "organizations_url": "https://api.github.com/users/volodymyr-memsql/orgs",
            "repos_url": "https://api.github.com/users/volodymyr-memsql/repos",
            "events_url": "https://api.github.com/users/volodymyr-memsql/events{/privacy}",
            "received_events_url": "https://api.github.com/users/volodymyr-memsql/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T14:13:59Z",
        "updated_at": "2023-06-16T11:19:48Z",
        "closed_at": "2023-06-08T03:45:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5619",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5619",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5619.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5619.patch",
            "merged_at": "2023-06-08T03:45:33Z"
        },
        "body": "- Added `SingleStoreDB` vector store, which is a wrapper over the SingleStore DB database, that can be used as a vector storage and has an efficient similarity search. \r\n- Added integration tests for the vector store\r\n- Added jupyter notebook with the example\r\n\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5619/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5619/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5618",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5618/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5618/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5618/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5618",
        "id": 1738262804,
        "node_id": "PR_kwDOIPDwls5SAZAu",
        "number": 5618,
        "title": "[RFC] Run Evaluator Chains",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-02T14:01:39Z",
        "updated_at": "2023-06-05T22:58:27Z",
        "closed_at": "2023-06-05T20:01:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5618",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5618",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5618.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5618.patch",
            "merged_at": null
        },
        "body": "Will try to land https://github.com/hwchase17/langchain/pull/5750 first\r\nPros:\r\n- Fits many but not all feedback applications.\r\n- Maintains a flexible base with configurable implementations.\r\n- Doesn't implement THAT many new classes for the core logic\r\n\r\nCons:\r\n- doesn't handle pairwise/group evals\r\n- trajectory evals are a bit hacky ( you have to remember to turn on when tracing rather than building it from the run object)\r\n- possibly too opinionated by forcing an input mapper and output parser?\r\n- Doesn't (yet) allow easy composability of the reasoning step (most do COT built in)\r\n- Most of the scores are binary - no nuance or more advanced logic. Doesn't (yet) decouple the scoring logic from the core of the prompt\r\n- Not sure if the creation functions are actually much better than creating a child and making a complicated constructor\r\n\r\nExample making 5 different evaluators:\r\n\r\n<img width=\"971\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/130414180/901d8d78-5dee-4f43-acd6-7b0589182cb7\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5618/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5618/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5617",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5617/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5617/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5617/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5617",
        "id": 1738248458,
        "node_id": "PR_kwDOIPDwls5SAV4_",
        "number": 5617,
        "title": "feat: add `UnstructuredExcelLoader` for `.xlsx` and `.xls` files",
        "user": {
            "login": "MthwRobinson",
            "id": 1635179,
            "node_id": "MDQ6VXNlcjE2MzUxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1635179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MthwRobinson",
            "html_url": "https://github.com/MthwRobinson",
            "followers_url": "https://api.github.com/users/MthwRobinson/followers",
            "following_url": "https://api.github.com/users/MthwRobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/MthwRobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MthwRobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MthwRobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/MthwRobinson/orgs",
            "repos_url": "https://api.github.com/users/MthwRobinson/repos",
            "events_url": "https://api.github.com/users/MthwRobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MthwRobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-02T13:52:44Z",
        "updated_at": "2023-06-03T19:44:13Z",
        "closed_at": "2023-06-03T19:44:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5617",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5617",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5617.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5617.patch",
            "merged_at": "2023-06-03T19:44:12Z"
        },
        "body": "# Unstructured Excel Loader\r\n\r\nAdds an `UnstructuredExcelLoader` class for `.xlsx` and `.xls` files. Works with `unstructured>=0.6.7`. A plain text representation of the Excel file will be available under the `page_content` attribute in the doc. If you use the loader in `\"elements\"` mode, an HTML representation of the Excel file will be available under the `text_as_html` metadata key. Each sheet in the Excel document is its own document.\r\n\r\n### Testing\r\n\r\n```python\r\nfrom langchain.document_loaders import UnstructuredExcelLoader\r\n\r\nloader = UnstructuredExcelLoader(\r\n    \"example_data/stanley-cups.xlsx\",\r\n    mode=\"elements\"\r\n)\r\ndocs = loader.load()\r\n```\r\n\r\n## Who can review?\r\n\r\n@hwchase17\r\n@eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5617/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5617/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5616",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5616/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5616/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5616/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5616",
        "id": 1738132767,
        "node_id": "PR_kwDOIPDwls5R_8mK",
        "number": 5616,
        "title": "Rm Template Title",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-02T12:40:39Z",
        "updated_at": "2023-06-02T13:54:57Z",
        "closed_at": "2023-06-02T13:54:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5616",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5616",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5616.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5616.patch",
            "merged_at": "2023-06-02T13:54:56Z"
        },
        "body": "Remove the redundant title from the PR template\r\n\r\n#### Before submitting\r\n\r\n\r\n\r\n#### Who can review?\r\n\r\n@dev2049 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5616/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5616/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]