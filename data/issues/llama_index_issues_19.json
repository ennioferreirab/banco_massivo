[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7488",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7488/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7488/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7488/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7488",
        "id": 1874681599,
        "node_id": "PR_kwDOIWuq585ZMZ80",
        "number": 7488,
        "title": "fix: kg rag should work on all graph stores",
        "user": {
            "login": "wey-gu",
            "id": 1651790,
            "node_id": "MDQ6VXNlcjE2NTE3OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1651790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wey-gu",
            "html_url": "https://github.com/wey-gu",
            "followers_url": "https://api.github.com/users/wey-gu/followers",
            "following_url": "https://api.github.com/users/wey-gu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wey-gu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wey-gu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wey-gu/subscriptions",
            "organizations_url": "https://api.github.com/users/wey-gu/orgs",
            "repos_url": "https://api.github.com/users/wey-gu/repos",
            "events_url": "https://api.github.com/users/wey-gu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wey-gu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-31T02:28:02Z",
        "updated_at": "2023-08-31T04:52:33Z",
        "closed_at": "2023-08-31T04:52:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7488",
            "html_url": "https://github.com/run-llama/llama_index/pull/7488",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7488.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7488.patch",
            "merged_at": "2023-08-31T04:52:33Z"
        },
        "body": "# Description\r\n\r\nThis change fixed kg rag retriever on all graph_store, similar approaches had already been done in KG Table retrievers, but I forgot to handle this divisive behavior when impl. this one.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7483\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] [notebook](https://colab.research.google.com/drive/1E9tqUX6CJecNwWFxCYZgSPMxuyUHS725?usp=sharing) (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7488/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7488/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7487",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7487/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7487/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7487/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7487",
        "id": 1874391582,
        "node_id": "I_kwDOIWuq585vuPIe",
        "number": 7487,
        "title": "[Feature Request]: Ollama support",
        "user": {
            "login": "mchiang0610",
            "id": 3325447,
            "node_id": "MDQ6VXNlcjMzMjU0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3325447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mchiang0610",
            "html_url": "https://github.com/mchiang0610",
            "followers_url": "https://api.github.com/users/mchiang0610/followers",
            "following_url": "https://api.github.com/users/mchiang0610/following{/other_user}",
            "gists_url": "https://api.github.com/users/mchiang0610/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mchiang0610/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mchiang0610/subscriptions",
            "organizations_url": "https://api.github.com/users/mchiang0610/orgs",
            "repos_url": "https://api.github.com/users/mchiang0610/repos",
            "events_url": "https://api.github.com/users/mchiang0610/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mchiang0610/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-30T21:28:11Z",
        "updated_at": "2023-09-15T15:40:41Z",
        "closed_at": "2023-09-15T15:40:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nAdding Ollama support: \r\n\r\nhttps://github.com/jmorganca/ollama/issues/278\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7487/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7487/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7486",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7486/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7486/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7486/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7486",
        "id": 1874157476,
        "node_id": "PR_kwDOIWuq585ZKnb5",
        "number": 7486,
        "title": "[version] bump version to 0.8.14",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-30T18:16:31Z",
        "updated_at": "2023-08-30T18:57:58Z",
        "closed_at": "2023-08-30T18:57:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7486",
            "html_url": "https://github.com/run-llama/llama_index/pull/7486",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7486.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7486.patch",
            "merged_at": "2023-08-30T18:57:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7486/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7486/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7485",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7485/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7485/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7485/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7485",
        "id": 1874065258,
        "node_id": "PR_kwDOIWuq585ZKTdi",
        "number": 7485,
        "title": "Add documentation for logging openai requests to starter_example.md",
        "user": {
            "login": "cdrini",
            "id": 6251786,
            "node_id": "MDQ6VXNlcjYyNTE3ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6251786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdrini",
            "html_url": "https://github.com/cdrini",
            "followers_url": "https://api.github.com/users/cdrini/followers",
            "following_url": "https://api.github.com/users/cdrini/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdrini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdrini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdrini/subscriptions",
            "organizations_url": "https://api.github.com/users/cdrini/orgs",
            "repos_url": "https://api.github.com/users/cdrini/repos",
            "events_url": "https://api.github.com/users/cdrini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdrini/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-30T17:05:30Z",
        "updated_at": "2023-08-30T21:53:48Z",
        "closed_at": "2023-08-30T21:53:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7485",
            "html_url": "https://github.com/run-llama/llama_index/pull/7485",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7485.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7485.patch",
            "merged_at": "2023-08-30T21:53:48Z"
        },
        "body": "# Description\r\n\r\nUpdate the docs to include instructions for how to spy on openai requests. The previous code snippet doesn't seem to really do anything as far as I can tell? We might be able to remove the old one, but I'm not sure.\r\n\r\nSample output after setting the log flag:\r\n\r\n```\r\nprint(query_engine.query(\"Who are the villains in the wizard of oz?\"))\r\n\r\nmessage='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings\r\napi_version=None data='{\"input\": [\"Who are the villains in the wizard of oz?\"], \"model\":...\r\nmessage='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=42...\r\nbody='{\\n  \"object\": \"list\",\\n  \"data\": [\\n    {\\n      \"object\": \"embedding\",\\n      \"i...\r\nmessage='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions\r\napi_version=None data='{\"messages\": [{\"role\": \"system\", \"content\": \"You are an expert Q&...\r\n\r\nThe villains in \"The Wonderful Wizard of Oz\" are the Wicked Witch of the West and a pack of great wolves.\r\n\r\nmessage='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing...\r\nbody='{\\n  \"id\": \"chatcmpl-XXX\",\\n  \"object\": \"chat.completion\",\\n  \"created\": 169341474...\r\n```\r\n\r\n\r\n## Type of Change\r\n\r\nDocumentation change.\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- NA Added new unit/integration tests\r\n- NA Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7485/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7485/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7484",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7484/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7484/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7484/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7484",
        "id": 1873843343,
        "node_id": "PR_kwDOIWuq585ZJjsI",
        "number": 7484,
        "title": "update newline replacement logic on embeddings",
        "user": {
            "login": "yisding",
            "id": 1209314,
            "node_id": "MDQ6VXNlcjEyMDkzMTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1209314?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yisding",
            "html_url": "https://github.com/yisding",
            "followers_url": "https://api.github.com/users/yisding/followers",
            "following_url": "https://api.github.com/users/yisding/following{/other_user}",
            "gists_url": "https://api.github.com/users/yisding/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yisding/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yisding/subscriptions",
            "organizations_url": "https://api.github.com/users/yisding/orgs",
            "repos_url": "https://api.github.com/users/yisding/repos",
            "events_url": "https://api.github.com/users/yisding/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yisding/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-30T14:50:04Z",
        "updated_at": "2023-08-30T21:48:22Z",
        "closed_at": "2023-08-30T21:48:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7484",
            "html_url": "https://github.com/run-llama/llama_index/pull/7484",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7484.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7484.patch",
            "merged_at": "2023-08-30T21:48:22Z"
        },
        "body": "# Description\r\n\r\nNewline replacement is not needed for ada-002.\r\n\r\nhttps://github.com/openai/openai-python/issues/418\r\n\r\nBreaking: changes embeddings (on one \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] My changes generate no new warnings\r\n- [X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7484/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7484/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7483",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7483/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7483/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7483/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7483",
        "id": 1873513749,
        "node_id": "I_kwDOIWuq585vq40V",
        "number": 7483,
        "title": "[Bug]:The parameter storage_context of KnowledgeGraphRAGRetriever does not support neo4j",
        "user": {
            "login": "houjibofa2050",
            "id": 19608744,
            "node_id": "MDQ6VXNlcjE5NjA4NzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/19608744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houjibofa2050",
            "html_url": "https://github.com/houjibofa2050",
            "followers_url": "https://api.github.com/users/houjibofa2050/followers",
            "following_url": "https://api.github.com/users/houjibofa2050/following{/other_user}",
            "gists_url": "https://api.github.com/users/houjibofa2050/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houjibofa2050/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houjibofa2050/subscriptions",
            "organizations_url": "https://api.github.com/users/houjibofa2050/orgs",
            "repos_url": "https://api.github.com/users/houjibofa2050/repos",
            "events_url": "https://api.github.com/users/houjibofa2050/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houjibofa2050/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-30T11:49:07Z",
        "updated_at": "2023-08-31T04:52:34Z",
        "closed_at": "2023-08-31T04:52:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\ncode as follows\r\n`import logging\r\nimport sys\r\n\r\nlogging.basicConfig(\r\n    stream=sys.stdout, level=logging.INFO\r\n)  # logging.DEBUG for more verbose output\r\n\r\nfrom llama_index import (\r\n    KnowledgeGraphIndex,\r\n    LLMPredictor,\r\n    ServiceContext,\r\n    SimpleDirectoryReader,\r\n)\r\nfrom llama_index.storage.storage_context import StorageContext\r\nfrom llama_index.graph_stores import NebulaGraphStore\r\nfrom llama_index.llms import OpenAI\r\n\r\nfrom IPython.display import Markdown, display\r\n\r\n\r\n# define LLM\r\n# NOTE: at the time of demo, text-davinci-002 did not have rate-limit errors\r\nllm = OpenAI(temperature=0, model=\"text-davinci-002\")\r\nservice_context = ServiceContext.from_defaults(llm=llm, chunk_size_limit=512)\r\n\r\n\r\nfrom llama_index.query_engine import RetrieverQueryEngine\r\nfrom llama_index.retrievers import KnowledgeGraphRAGRetriever\r\nfrom llama_index.graph_stores import Neo4jGraphStore\r\n\r\n\r\nusername = \"neo4j\"\r\npassword = \"12345678\"\r\nurl = \"bolt://localhost:7687\"\r\ndatabase = \"xxxx\"\r\n\r\ngraph_store = Neo4jGraphStore(\r\n    username=username,\r\n    password=password,\r\n    url=url,\r\n    database=database,\r\n)\r\nstorage_context = StorageContext.from_defaults(graph_store=graph_store)\r\n\r\n\r\ngraph_rag_retriever = KnowledgeGraphRAGRetriever(\r\n    storage_context=storage_context,\r\n    service_context=service_context,\r\n    llm=llm,\r\n    verbose=True,\r\n)\r\n\r\nquery_engine = RetrieverQueryEngine.from_args(\r\n    graph_rag_retriever, service_context=service_context\r\n)\r\nresponse = query_engine.query(\"\u4e2d\u56fd\u6709\u591a\u5c11\u6c11\u65cf\")\r\nprint(\"response:\", response)`\r\n\r\n\r\nresponse = query_engine.query(\"\u4e2d\u56fd\u6709\u591a\u5c11\u6c11\u65cf\") \u62a5\u9519\r\n![llama_index\u62a5\u9519](https://github.com/jerryjliu/llama_index/assets/19608744/e3ec718c-7ee8-4a5e-bc5c-a86fa709743d)\r\n\n\n### Version\n\nllama-index           0.8.11.post3\n\n### Steps to Reproduce\n\nresponse = query_engine.query(\"\u4e2d\u56fd\u6709\u591a\u5c11\u6c11\u65cf\")\n\n### Relevant Logs/Tracbacks\n\n```shell\nTraceback (most recent call last):\r\n  File \"C:\\Users\\cm\\AppData\\Local\\Programs\\Python\\Python310\\lib\\contextlib.py\", line 153, in __exit__\r\n    self.gen.throw(typ, value, traceback)\r\n  File \"D:\\software\\langchain16\\langchain16\\venv\\lib\\site-packages\\llama_index\\callbacks\\base.py\", line 155, in as_trace\r\n    yield\r\n  File \"D:\\software\\langchain16\\langchain16\\venv\\lib\\site-packages\\llama_index\\indices\\query\\base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n  File \"D:\\software\\langchain16\\langchain16\\venv\\lib\\site-packages\\llama_index\\query_engine\\retriever_query_engine.py\", line 165, in _query\r\n    nodes = self.retrieve(query_bundle)\r\n  File \"D:\\software\\langchain16\\langchain16\\venv\\lib\\site-packages\\llama_index\\query_engine\\retriever_query_engine.py\", line 113, in retrieve\r\n    nodes = self._retriever.retrieve(query_bundle)\r\n  File \"D:\\software\\langchain16\\langchain16\\venv\\lib\\site-packages\\llama_index\\indices\\base_retriever.py\", line 22, in retrieve\r\n    return self._retrieve(str_or_query_bundle)\r\n  File \"D:\\software\\langchain16\\langchain16\\venv\\lib\\site-packages\\llama_index\\indices\\knowledge_graph\\retrievers.py\", line 746, in _retrieve\r\n    nodes.extend(self._retrieve_keyword(query_bundle))\r\n  File \"D:\\software\\langchain16\\langchain16\\venv\\lib\\site-packages\\llama_index\\indices\\knowledge_graph\\retrievers.py\", line 697, in _retrieve_keyword\r\n    return self._build_nodes(knowledge_sequence, rel_map)\r\n  File \"D:\\software\\langchain16\\langchain16\\venv\\lib\\site-packages\\llama_index\\indices\\knowledge_graph\\retrievers.py\", line 663, in _build_nodes\r\n    f\"{_new_line_char.join(knowledge_sequence)}\"\r\nTypeError: sequence item 0: expected str instance, list found\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7483/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7483/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7482",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7482/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7482/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7482/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7482",
        "id": 1873504884,
        "node_id": "PR_kwDOIWuq585ZIZdW",
        "number": 7482,
        "title": "Add FalkorDB graph visual",
        "user": {
            "login": "gkorland",
            "id": 753206,
            "node_id": "MDQ6VXNlcjc1MzIwNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/753206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gkorland",
            "html_url": "https://github.com/gkorland",
            "followers_url": "https://api.github.com/users/gkorland/followers",
            "following_url": "https://api.github.com/users/gkorland/following{/other_user}",
            "gists_url": "https://api.github.com/users/gkorland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gkorland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gkorland/subscriptions",
            "organizations_url": "https://api.github.com/users/gkorland/orgs",
            "repos_url": "https://api.github.com/users/gkorland/repos",
            "events_url": "https://api.github.com/users/gkorland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gkorland/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-30T11:45:05Z",
        "updated_at": "2023-08-30T20:34:22Z",
        "closed_at": "2023-08-30T20:34:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7482",
            "html_url": "https://github.com/run-llama/llama_index/pull/7482",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7482.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7482.patch",
            "merged_at": "2023-08-30T20:34:22Z"
        },
        "body": "# Description\r\nAdd to the FalkorDB graph visualization \r\n\r\n## Type of Change\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7482/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7482/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7481",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7481/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7481/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7481/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7481",
        "id": 1873497163,
        "node_id": "I_kwDOIWuq585vq0xL",
        "number": 7481,
        "title": "[Question]: KnowledgeGraphRAGRetriever sub-graph extraction filter by property instead of ids",
        "user": {
            "login": "salahaz",
            "id": 41476094,
            "node_id": "MDQ6VXNlcjQxNDc2MDk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/41476094?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salahaz",
            "html_url": "https://github.com/salahaz",
            "followers_url": "https://api.github.com/users/salahaz/followers",
            "following_url": "https://api.github.com/users/salahaz/following{/other_user}",
            "gists_url": "https://api.github.com/users/salahaz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salahaz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salahaz/subscriptions",
            "organizations_url": "https://api.github.com/users/salahaz/orgs",
            "repos_url": "https://api.github.com/users/salahaz/repos",
            "events_url": "https://api.github.com/users/salahaz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salahaz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-30T11:40:10Z",
        "updated_at": "2023-08-30T17:09:12Z",
        "closed_at": "2023-08-30T17:09:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello going through the subgraph extraction query, I have found that it is being accomplished by filtering using `id(s)`\r\n\r\nhttps://github.com/jerryjliu/llama_index/blob/39ff38293b5d4d1fc33d8fbadacf9bb57861ccbe/llama_index/graph_stores/nebulagraph.py#L414\r\n\r\nHowever, in many real-life use cases, the IDs don't have any semantic meaning; they can be only database identifiers. That is why it would be better if the sub-graph extraction query supports filtering by properties as well using something like this for example `properties(s).name`?\r\n\r\nAny ideas @wey-gu @logan-markewich ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7481/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7481/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7480",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7480/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7480/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7480/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7480",
        "id": 1873134426,
        "node_id": "PR_kwDOIWuq585ZHIce",
        "number": 7480,
        "title": "[wip] rag guide",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-30T07:56:16Z",
        "updated_at": "2023-08-30T17:58:53Z",
        "closed_at": "2023-08-30T17:58:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7480",
            "html_url": "https://github.com/run-llama/llama_index/pull/7480",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7480.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7480.patch",
            "merged_at": "2023-08-30T17:58:52Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7480/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7480/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7479",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7479/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7479/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7479/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7479",
        "id": 1873052748,
        "node_id": "I_kwDOIWuq585vpIRM",
        "number": 7479,
        "title": "[Bug]: RetryError: RetryError[<Future at 0x7f9aaae9e830 state=finished raised APIConnectionError>]",
        "user": {
            "login": "Ma-Fukudama",
            "id": 76037787,
            "node_id": "MDQ6VXNlcjc2MDM3Nzg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/76037787?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ma-Fukudama",
            "html_url": "https://github.com/Ma-Fukudama",
            "followers_url": "https://api.github.com/users/Ma-Fukudama/followers",
            "following_url": "https://api.github.com/users/Ma-Fukudama/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ma-Fukudama/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ma-Fukudama/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ma-Fukudama/subscriptions",
            "organizations_url": "https://api.github.com/users/Ma-Fukudama/orgs",
            "repos_url": "https://api.github.com/users/Ma-Fukudama/repos",
            "events_url": "https://api.github.com/users/Ma-Fukudama/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ma-Fukudama/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-30T07:03:43Z",
        "updated_at": "2023-10-24T05:50:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n\u5348\u524d\u4e2d\u306f\u52d5\u3044\u3066\u3044\u305f\u30bd\u30fc\u30b9\u3092\u5348\u5f8c\u306b\u52d5\u304b\u3059\u3068API\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u5b9f\u884c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n### Version\n\n0.8.12\n\n### Steps to Reproduce\n\n\u5348\u524d\u4e2d\u306b\u5b9f\u884c\u3057\u3066\u3044\u305f\u30bd\u30fc\u30b9\u3092\u5168\u304f\u5909\u3048\u305a\u306b\u5b9f\u884c\u3057\u307e\u3057\u305f\u3002\r\n\r\nstreamlit\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\r\n\n\n### Relevant Logs/Tracbacks\n\n```shell\nTraceback (most recent call last):\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/urllib3/connection.py\", line 174, in _new_conn\r\n    conn = connection.create_connection(\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/urllib3/util/connection.py\", line 72, in create_connection\r\n    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\r\n  File \"/usr/lib/python3.10/socket.py\", line 955, in getaddrinfo\r\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\r\nsocket.gaierror: [Errno -2] Name or service not known\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 714, in urlopen\r\n    httplib_response = self._make_request(\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 403, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 1053, in _validate_conn\r\n    conn.connect()\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/urllib3/connection.py\", line 363, in connect\r\n    self.sock = conn = self._new_conn()\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/urllib3/connection.py\", line 186, in _new_conn\r\n    raise NewConnectionError(\r\nurllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x7f9aaae9eb60>: Failed to establish a new connection: [Errno -2] Name or service not known\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/requests/adapters.py\", line 486, in send\r\n    resp = conn.urlopen(\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 826, in urlopen\r\n    return self.urlopen(\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 826, in urlopen\r\n    return self.urlopen(\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 798, in urlopen\r\n    retries = retries.increment(\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/urllib3/util/retry.py\", line 592, in increment\r\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api.openai.com', port=443): Max retries exceeded with url: /v1/embeddings (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f9aaae9eb60>: Failed to establish a new connection: [Errno -2] Name or service not known'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/openai/api_requestor.py\", line 520, in request_raw\r\n    result = _thread_context.session.request(\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/requests/sessions.py\", line 589, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/requests/sessions.py\", line 703, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/requests/adapters.py\", line 519, in send\r\n    raise ConnectionError(e, request=request)\r\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='api.openai.com', port=443): Max retries exceeded with url: /v1/embeddings (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f9aaae9eb60>: Failed to establish a new connection: [Errno -2] Name or service not known'))\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/llama_index/embeddings/openai.py\", line 122, in get_embedding\r\n    return openai.Embedding.create(input=[text], model=engine, **kwargs)[\"data\"][0][\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/openai/api_resources/embedding.py\", line 33, in create\r\n    response = super().create(*args, **kwargs)\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 153, in create\r\n    response, _, api_key = requestor.request(\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/openai/api_requestor.py\", line 220, in request\r\n    result = self.request_raw(\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/openai/api_requestor.py\", line 533, in request_raw\r\n    raise error.APIConnectionError(\r\nopenai.error.APIConnectionError: Error communicating with OpenAI: HTTPSConnectionPool(host='api.openai.com', port=443): Max retries exceeded with url: /v1/embeddings (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f9aaae9eb60>: Failed to establish a new connection: [Errno -2] Name or service not known'))\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 552, in _run_script\r\n    exec(code, module.__dict__)\r\n  File \"/home/heart/llama_index/examples/paul_graham_essay/screen0823.py\", line 93, in <module>\r\n    main()\r\n  File \"/home/heart/llama_index/examples/paul_graham_essay/screen0823.py\", line 80, in main\r\n    response = response_generator.generate(question)\r\n  File \"/home/heart/llama_index/examples/paul_graham_essay/screen0823.py\", line 46, in generate\r\n    result = engine.query(question+\"\u56de\u7b54\u306b\u306f\u51fa\u5178\u306e\u30ea\u30f3\u30af\u3092\u542b\u3081\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\")\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/llama_index/indices/query/base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 165, in _query\r\n    nodes = self.retrieve(query_bundle)\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 113, in retrieve\r\n    nodes = self._retriever.retrieve(query_bundle)\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/llama_index/indices/base_retriever.py\", line 22, in retrieve\r\n    return self._retrieve(str_or_query_bundle)\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/llama_index/indices/list/retrievers.py\", line 75, in _retrieve\r\n    query_embedding, node_embeddings = self._get_embeddings(query_bundle, nodes)\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/llama_index/indices/list/retrievers.py\", line 101, in _get_embeddings\r\n    self._index._service_context.embed_model.get_agg_embedding_from_queries(\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/llama_index/embeddings/base.py\", line 123, in get_agg_embedding_from_queries\r\n    query_embeddings = [self.get_query_embedding(query) for query in queries]\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/llama_index/embeddings/base.py\", line 123, in <listcomp>\r\n    query_embeddings = [self.get_query_embedding(query) for query in queries]\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/llama_index/embeddings/base.py\", line 94, in get_query_embedding\r\n    query_embedding = self._get_query_embedding(query)\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/llama_index/embeddings/openai.py\", line 282, in _get_query_embedding\r\n    return get_embedding(\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n  File \"/home/heart/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 326, in iter\r\n    raise retry_exc from fut.exception()\r\ntenacity.RetryError: RetryError[<Future at 0x7f9aaae9e830 state=finished raised APIConnectionError>]\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7479/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7479/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7478",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7478/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7478/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7478/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7478",
        "id": 1872868489,
        "node_id": "PR_kwDOIWuq585ZGOhl",
        "number": 7478,
        "title": "replace list index with summary index ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-30T04:27:18Z",
        "updated_at": "2023-09-03T21:26:03Z",
        "closed_at": "2023-09-03T21:26:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7478",
            "html_url": "https://github.com/run-llama/llama_index/pull/7478",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7478.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7478.patch",
            "merged_at": "2023-09-03T21:26:02Z"
        },
        "body": "i accidentally reformatted a ton of notebooks, so the diffs are larger than the actual changes\r\n\r\nwent ahead and just did find/replace for ListIndex --> SummaryIndex.\r\n\r\nKept ListIndex and ListIndex retrievers for backwards compat. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7478/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7478/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7477",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7477/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7477/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7477/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7477",
        "id": 1872803622,
        "node_id": "I_kwDOIWuq585voLcm",
        "number": 7477,
        "title": "[Question]: BETTER PRATICES FOR PRODUCTS ANALYSIS AND RECOMMENDATION",
        "user": {
            "login": "hungphongtran-pixta",
            "id": 141798022,
            "node_id": "U_kgDOCHOqhg",
            "avatar_url": "https://avatars.githubusercontent.com/u/141798022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hungphongtran-pixta",
            "html_url": "https://github.com/hungphongtran-pixta",
            "followers_url": "https://api.github.com/users/hungphongtran-pixta/followers",
            "following_url": "https://api.github.com/users/hungphongtran-pixta/following{/other_user}",
            "gists_url": "https://api.github.com/users/hungphongtran-pixta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hungphongtran-pixta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hungphongtran-pixta/subscriptions",
            "organizations_url": "https://api.github.com/users/hungphongtran-pixta/orgs",
            "repos_url": "https://api.github.com/users/hungphongtran-pixta/repos",
            "events_url": "https://api.github.com/users/hungphongtran-pixta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hungphongtran-pixta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-30T03:03:24Z",
        "updated_at": "2023-10-24T06:30:46Z",
        "closed_at": "2023-10-24T06:30:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\n# Purposes: \r\nI have a database of smartphone products, which have been crawled from the Amazon. Each product contains brand, feature bullets, reviews and price. I am building a LlamaIndex integration which takes an arbitrary user input (hobbies, preferences, ...) and output the product recommendation. \r\n\r\n# Current Pratices: \r\n## Setup:\r\n* The database is in CSV format. \r\n* [SimpleCSVReader](https://llamahub.ai/l/file-simple_csv) is used to parse the CSV into Documents and to Indexes.\r\n* I use default Chat Engine powered by GPT 3.5 API, taking user data as inputs and output product recommendation. \r\n## Output: \r\n* Chat Engine can reason over user data to output products as well as the reason why to suggest these products based on their features and reviews.\r\n* Chat Engine cleaned and shortened the name of the products (being chaotic in the database). \r\n* However, as the name being cleaned, Query Engine/Manual Search is not available to restore the product price. \r\n\r\n# Questions: \r\n* What are the better pratices or tips to store data instead of CSV, config the Chat Engine and Query Engine for later metadata search? \r\n* What might be the method to do [query boosting](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-boosting-query.html) in which I would be able to boost a certain products in the Chat Engine output? \r\n* What is some recommended approach to update new data into the database without re-embedding the whole dataset?\r\n\r\nThank you guys a lot! Many thanks to the creators and the community of LLamaIndex! You guys are so lit! \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7477/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7477/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7476",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7476/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7476/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7476/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7476",
        "id": 1872644974,
        "node_id": "I_kwDOIWuq585vnktu",
        "number": 7476,
        "title": "[Question]: Indexes built from text don't produce good answers",
        "user": {
            "login": "Ma-Fukudama",
            "id": 76037787,
            "node_id": "MDQ6VXNlcjc2MDM3Nzg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/76037787?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ma-Fukudama",
            "html_url": "https://github.com/Ma-Fukudama",
            "followers_url": "https://api.github.com/users/Ma-Fukudama/followers",
            "following_url": "https://api.github.com/users/Ma-Fukudama/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ma-Fukudama/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ma-Fukudama/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ma-Fukudama/subscriptions",
            "organizations_url": "https://api.github.com/users/Ma-Fukudama/orgs",
            "repos_url": "https://api.github.com/users/Ma-Fukudama/repos",
            "events_url": "https://api.github.com/users/Ma-Fukudama/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ma-Fukudama/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-08-29T23:40:37Z",
        "updated_at": "2023-08-31T13:53:12Z",
        "closed_at": "2023-08-31T13:53:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI created an index from a file with the following source code, but even when I ask questions, the content is not reflected in the responses. Is there any additional step required when creating an index?\r\n\r\nllamaindex version = 0.8.13\r\n\r\n```\r\nimport os, sys, json,logging\r\nfrom dotenv import load_dotenv\r\nfrom llama_index import SimpleDirectoryReader, ServiceContext, ListIndex, LLMPredictor, Document, load_index_from_storage, SimpleWebPageReader\r\nfrom llama_index.llms import OpenAI\r\nfrom llama_index.langchain_helpers.agents import create_llama_chat_agent, IndexToolConfig\r\n\r\nload_dotenv()\r\n# \u30ed\u30b0\u30ec\u30d9\u30eb\u306e\u8a2d\u5b9a\r\nlogging.basicConfig(stream=sys.stdout, level=logging.DEBUG, force=True)\r\n\r\ntext_list = ['A.txt']\r\nindex = ListIndex([])\r\n\r\ndocuments = [Document(text=t) for t in text_list]\r\n\r\n# Llamaindex\u306e\u8a2d\u5b9a\r\nllm = OpenAI(model=\"gpt-4\", temperature=0, max_tokens=2048)\r\nservice_context = ServiceContext.from_defaults(llm=llm)\r\n\r\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4f5c\u6210\r\nindex = ListIndex.from_documents(documents, service_context=service_context)\r\n\r\nindex.storage_context.persist(persist_dir=\"index\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7476/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7476/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7475",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7475/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7475/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7475/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7475",
        "id": 1872608042,
        "node_id": "I_kwDOIWuq585vnbsq",
        "number": 7475,
        "title": "[Bug]: OS freezes when using the default index ",
        "user": {
            "login": "YasmineMh",
            "id": 42073781,
            "node_id": "MDQ6VXNlcjQyMDczNzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/42073781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YasmineMh",
            "html_url": "https://github.com/YasmineMh",
            "followers_url": "https://api.github.com/users/YasmineMh/followers",
            "following_url": "https://api.github.com/users/YasmineMh/following{/other_user}",
            "gists_url": "https://api.github.com/users/YasmineMh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YasmineMh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YasmineMh/subscriptions",
            "organizations_url": "https://api.github.com/users/YasmineMh/orgs",
            "repos_url": "https://api.github.com/users/YasmineMh/repos",
            "events_url": "https://api.github.com/users/YasmineMh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YasmineMh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-29T22:50:24Z",
        "updated_at": "2023-08-29T23:19:09Z",
        "closed_at": "2023-08-29T23:06:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\n\r\nI tested the code provided below, and it consistently keeps running without encountering a condition to exit (until my OS froze).\r\n```\r\n\r\nfrom llama_index import SimpleDirectoryReader\r\nfrom llama_index.node_parser import SimpleNodeParser\r\nfrom llama_index import VectorStoreIndex\r\n\r\ndocuments = SimpleDirectoryReader('./data').load_data()\r\nparser = SimpleNodeParser.from_defaults()\r\nnodes = parser.get_nodes_from_documents(documents)\r\nindex = VectorStoreIndex(nodes)\r\nquery_engine = index.as_query_engine()\r\nresponse = query_engine.query(\"a question\")\r\nprint(response)\r\n\r\n```\r\nI'm utilizing the default embedding and QA models (model_name=BAAI/bge-small-en and llama2). The code appears to become stuck on the line `response = query_engine.query(\"a question\")`\r\nI've conducted tests both locally and on Colab, and the same issue persists in both environments.\r\n\r\nThank you!\r\n\r\n### Version\r\n\r\n0.8.13\r\n\r\n### Steps to Reproduce\r\n\r\nInstall the requirements below:\r\n\r\n```\r\nllama-index==0.8.13\r\nllama-cpp-python==0.1.78\r\nnltk==3.8.1\r\nsentence-transformers==2.2.2\r\n```\r\n\r\nThen run the code.\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nNo output; it consumes my RAM until the computer crashes.\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7475/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7475/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7474",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7474/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7474/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7474/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7474",
        "id": 1872565161,
        "node_id": "PR_kwDOIWuq585ZFOZ6",
        "number": 7474,
        "title": "improve fine-tuned model parsing",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-29T22:06:49Z",
        "updated_at": "2023-08-29T22:55:27Z",
        "closed_at": "2023-08-29T22:55:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7474",
            "html_url": "https://github.com/run-llama/llama_index/pull/7474",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7474.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7474.patch",
            "merged_at": "2023-08-29T22:55:26Z"
        },
        "body": "# Description\r\n\r\nSmall fix to better parse fine-tuned OpenAI model names\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7467\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7474/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7474/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7473",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7473/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7473/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7473/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7473",
        "id": 1872552343,
        "node_id": "PR_kwDOIWuq585ZFLrN",
        "number": 7473,
        "title": "support both str and templates for query_wrapper_prompt in HF LLMs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-29T21:59:30Z",
        "updated_at": "2023-08-29T22:08:02Z",
        "closed_at": "2023-08-29T22:08:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7473",
            "html_url": "https://github.com/run-llama/llama_index/pull/7473",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7473.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7473.patch",
            "merged_at": "2023-08-29T22:08:01Z"
        },
        "body": "# Description\r\n\r\nRecent changes removed support for input template objects on the `query_wrapper_prompt`\r\n\r\nThis pr brings back support for both\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7439\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7473/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7473/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7472",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7472/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7472/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7472/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7472",
        "id": 1872456154,
        "node_id": "PR_kwDOIWuq585ZE109",
        "number": 7472,
        "title": "Expand Callbacks",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-29T21:01:28Z",
        "updated_at": "2023-08-31T19:53:27Z",
        "closed_at": "2023-08-31T16:06:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7472",
            "html_url": "https://github.com/run-llama/llama_index/pull/7472",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7472.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7472.patch",
            "merged_at": "2023-08-31T16:06:24Z"
        },
        "body": "# Description\r\n\r\nThis PR logs many more details through our callbacks. New additions include\r\n- tracebacks\r\n- llm token counts (only OpenAI right now)\r\n- templates, template vars\r\n- tool info, function call info\r\n- serialized LLM and embedding models (to identify/log parameters there)\r\n- re-ranking events/scores\r\n- and more!\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n## How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n- [x] Custom testing script?\r\n\r\n# Example for Testing\r\nCurrently I've thrown this all into an example handler for testing. It's not comprehensive, but it touches all the bits I've added, so it makes for a good starting point/demo\r\n\r\n```python\r\nfrom typing import Any, Dict, List, Optional\r\n\r\nfrom llama_index.callbacks.base import BaseCallbackHandler\r\nfrom llama_index.callbacks.schema import CBEventType, EventPayload\r\n\r\n\r\nclass TestingCallbackHandler(BaseCallbackHandler):\r\n    def __init__(self):\r\n        super().__init__(event_starts_to_ignore=[], event_ends_to_ignore=[])\r\n\r\n    def _parse_llm_event(\r\n        self, payload: Dict[str, Any], skip_input: bool = False\r\n    ) -> None:\r\n        if (\r\n            EventPayload.PROMPT in payload\r\n            and payload[EventPayload.PROMPT] is not None\r\n            and not skip_input\r\n        ):\r\n            print(\r\n                \"--- PROMPT ---\\n\", str(payload[EventPayload.PROMPT])[:256], \"\\n-----\"\r\n            )\r\n        if (\r\n            EventPayload.MESSAGES in payload\r\n            and payload[EventPayload.MESSAGES] is not None\r\n            and not skip_input\r\n        ):\r\n            print(\r\n                \"--- MESSAGES ---\\n\",\r\n                str(payload[EventPayload.MESSAGES])[:256],\r\n                \"\\n-----\",\r\n            )\r\n\r\n        # additional kwargs contain token counts from the response\r\n        if (\r\n            EventPayload.RESPONSE in payload\r\n            and payload[EventPayload.RESPONSE] is not None\r\n        ):\r\n            print(\r\n                \"--- RESPONSE ---\\n\",\r\n                payload[EventPayload.RESPONSE],\r\n                payload[EventPayload.RESPONSE].additional_kwargs,\r\n                \"\\n-----\",\r\n            )\r\n        if (\r\n            EventPayload.COMPLETION in payload\r\n            and payload[EventPayload.COMPLETION] is not None\r\n        ):\r\n            print(\r\n                \"--- COMPLETION ---\\n\",\r\n                payload[EventPayload.COMPLETION],\r\n                payload[EventPayload.COMPLETION].additional_kwargs,\r\n                \"\\n-----\",\r\n            )\r\n\r\n        if (\r\n            EventPayload.ADDITIONAL_KWARGS in payload\r\n            and payload[EventPayload.ADDITIONAL_KWARGS]\r\n        ):\r\n            print(\r\n                \"--- ADDITIONAL_KWARGS ---\\n\",\r\n                payload[EventPayload.ADDITIONAL_KWARGS],\r\n                \"\\n-----\",\r\n            )\r\n        if EventPayload.SERIALIZED in payload and payload[EventPayload.SERIALIZED]:\r\n            print(\r\n                \"--- SERIALIZED LLM ---\\n\", payload[EventPayload.SERIALIZED], \"\\n-----\"\r\n            )\r\n\r\n    def _parse_function_call_event(self, payload: Dict[str, Any]) -> None:\r\n        if (\r\n            EventPayload.FUNCTION_CALL in payload\r\n            and payload[EventPayload.FUNCTION_CALL]\r\n        ):\r\n            print(\r\n                \"--- FUNCTION_CALL ---\\n\",\r\n                payload[EventPayload.FUNCTION_CALL],\r\n                \"\\n-----\",\r\n            )\r\n        if EventPayload.TOOL in payload and payload[EventPayload.TOOL]:\r\n            print(\"--- TOOL ---\\n\", payload[EventPayload.TOOL], \"\\n-----\")\r\n            print(\r\n                \"---- FN SCHEMA ----\\n\",\r\n                payload[EventPayload.TOOL].fn_schema_str,\r\n                \"\\n-----\",\r\n            )\r\n        if (\r\n            EventPayload.FUNCTION_OUTPUT in payload\r\n            and payload[EventPayload.FUNCTION_OUTPUT]\r\n        ):\r\n            print(\r\n                \"--- FUNCTION_OUTPUT ---\\n\",\r\n                payload[EventPayload.FUNCTION_OUTPUT],\r\n                \"\\n-----\",\r\n            )\r\n\r\n    def _parse_embedding_event(self, payload: Dict[str, Any]) -> None:\r\n        if EventPayload.EMBEDDINGS in payload and payload[EventPayload.EMBEDDINGS]:\r\n            # print(\"--- EMBEDDINGS ---\\n\", payload[EventPayload.EMBEDDINGS], \"\\n-----\")\r\n            pass\r\n        if EventPayload.NODES in payload and payload[EventPayload.NODES]:\r\n            # print(\"--- NODES ---\\n\", payload[EventPayload.NODES], \"\\n-----\")\r\n            pass\r\n        if EventPayload.SERIALIZED in payload and payload[EventPayload.SERIALIZED]:\r\n            print(\r\n                \"--- SERIALIZED EMBEDDING MODEL ---\\n\",\r\n                payload[EventPayload.SERIALIZED],\r\n                \"\\n-----\",\r\n            )\r\n\r\n    def _parse_templating_event(self, payload: Dict[str, Any]) -> None:\r\n        if EventPayload.TEMPLATE in payload and payload[EventPayload.TEMPLATE]:\r\n            print(\"--- TEMPLATE ---\\n\", payload[EventPayload.TEMPLATE], \"\\n-----\")\r\n        if (\r\n            EventPayload.TEMPLATE_VARS in payload\r\n            and payload[EventPayload.TEMPLATE_VARS]\r\n        ):\r\n            print(\r\n                \"--- TEMPLATE_VARS ---\\n\",\r\n                payload[EventPayload.TEMPLATE_VARS],\r\n                \"\\n-----\",\r\n            )\r\n        if (\r\n            EventPayload.SYSTEM_PROMPT in payload\r\n            and payload[EventPayload.SYSTEM_PROMPT]\r\n        ):\r\n            print(\r\n                \"--- SYSTEM_PROMPT ---\\n\",\r\n                payload[EventPayload.SYSTEM_PROMPT],\r\n                \"\\n-----\",\r\n            )\r\n        if (\r\n            EventPayload.QUERY_WRAPPER_PROMPT in payload\r\n            and payload[EventPayload.QUERY_WRAPPER_PROMPT]\r\n        ):\r\n            print(\r\n                \"--- QUERY_WRAPPER_PROMPT ---\\n\",\r\n                payload[EventPayload.QUERY_WRAPPER_PROMPT],\r\n                \"\\n-----\",\r\n            )\r\n\r\n    def _parse_reranking_event(self, payload: Dict[str, Any]) -> None:\r\n        if EventPayload.MODEL_NAME in payload and payload[EventPayload.MODEL_NAME]:\r\n            print(\r\n                \"--- RERANKING MODEL_NAME ---\\n\",\r\n                payload[EventPayload.MODEL_NAME],\r\n                \"\\n-----\",\r\n            )\r\n        if EventPayload.NODES in payload and payload[EventPayload.NODES]:\r\n            # print(\"--- RERANKING NODES ---\\n\", payload[EventPayload.NODES], \"\\n-----\")\r\n            scores = [n.score for n in payload[EventPayload.NODES]]\r\n            print(\"--- RERANKING SCORES ---\\n\", scores, \"\\n-----\")\r\n            pass\r\n        if EventPayload.TOP_K in payload and payload[EventPayload.TOP_K]:\r\n            print(\"--- RERANKING TOP_K ---\\n\", payload[EventPayload.TOP_K], \"\\n-----\")\r\n\r\n    def _parse_retrieve_event(self, payload: Dict[str, Any]) -> None:\r\n        if EventPayload.QUERY_STR in payload and payload[EventPayload.QUERY_STR]:\r\n            print(\r\n                \"--- RETRIEVE QUERY_STR ---\\n\",\r\n                payload[EventPayload.QUERY_STR],\r\n                \"\\n-----\",\r\n            )\r\n        if EventPayload.NODES in payload and payload[EventPayload.NODES]:\r\n            # print(\"--- RETRIEVE NODES ---\\n\", payload[EventPayload.NODES], \"\\n-----\")\r\n            pass\r\n\r\n    def _parse_exception_event(self, payload: Dict[str, Any]) -> None:\r\n        if EventPayload.EXCEPTION in payload and payload[EventPayload.EXCEPTION]:\r\n            print(\"--- EXCEPTION ---\\n\", payload[EventPayload.EXCEPTION], \"\\n-----\")\r\n\r\n    def on_event_start(\r\n        self,\r\n        event_type: CBEventType,\r\n        payload: Optional[EventPayload] = None,\r\n        event_id: str = \"\",\r\n        **kwargs: Any,\r\n    ) -> str:\r\n        if payload is None:\r\n            return\r\n\r\n        if event_type == CBEventType.EXCEPTION:\r\n            self._parse_exception_event(payload)\r\n        elif event_type == CBEventType.LLM:\r\n            self._parse_llm_event(payload)\r\n        elif event_type == CBEventType.FUNCTION_CALL:\r\n            self._parse_function_call_event(payload)\r\n        elif event_type == CBEventType.EMBEDDING:\r\n            self._parse_embedding_event(payload)\r\n        elif event_type == CBEventType.TEMPLATING:\r\n            self._parse_templating_event(payload)\r\n        elif event_type == CBEventType.RERANKING:\r\n            self._parse_reranking_event(payload)\r\n        elif event_type == CBEventType.RETRIEVE:\r\n            self._parse_retrieve_event(payload)\r\n\r\n        return event_id\r\n\r\n    def on_event_end(\r\n        self,\r\n        event_type: CBEventType,\r\n        payload: Dict[str, Any] | None = None,\r\n        event_id: str = \"\",\r\n        **kwargs: Any,\r\n    ) -> None:\r\n        if payload is None:\r\n            return\r\n\r\n        if event_type == CBEventType.LLM:\r\n            self._parse_llm_event(payload, skip_input=True)\r\n        elif event_type == CBEventType.FUNCTION_CALL:\r\n            self._parse_function_call_event(payload)\r\n        elif event_type == CBEventType.EMBEDDING:\r\n            self._parse_embedding_event(payload)\r\n        elif event_type == CBEventType.TEMPLATING:\r\n            self._parse_templating_event(payload)\r\n        elif event_type == CBEventType.RERANKING:\r\n            self._parse_reranking_event(payload)\r\n        elif event_type == CBEventType.RETRIEVE:\r\n            self._parse_retrieve_event(payload)\r\n\r\n    def end_trace(\r\n        self, trace_id: str | None = None, trace_map: Dict[str, List[str]] | None = None\r\n    ) -> None:\r\n        pass\r\n\r\n    def start_trace(self, trace_id: str | None = None) -> None:\r\n        pass\r\n```\r\n\r\nFurthermore, to test the handler, I have been using this code\r\n\r\n```python\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader, ServiceContext\r\nfrom llama_index.indices.postprocessor import SentenceTransformerRerank\r\nfrom llama_index.agent import OpenAIAgent\r\nfrom llama_index.tools import QueryEngineTool\r\nfrom llama_index.callbacks import CallbackManager\r\nfrom llama_index.llms import OpenAI\r\n\r\nhandler = TestingCallbackHandler()\r\ncallback_manager = CallbackManager(handlers=[handler])\r\n\r\nllm = OpenAI()\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n    llm=llm, callback_manager=callback_manager, chunk_size=512\r\n)\r\n\r\ndocuments = SimpleDirectoryReader(\"./docs/examples/data/paul_graham\").load_data()\r\n\r\nindex = VectorStoreIndex.from_documents(documents, service_context=service_context)\r\n\r\nreranker = SentenceTransformerRerank(model=\"cross-encoder/stsb-distilroberta-base\")\r\n\r\nquery_engine = index.as_query_engine(similarity_top_k=5, node_postprocessors=[reranker])\r\n\r\nquery_tool = QueryEngineTool.from_defaults(\r\n    query_engine=query_engine,\r\n    name=\"paul_graham\",\r\n    description=\"Useful for looking up information about Paul Graham's essay.\",\r\n)\r\n\r\nagent = OpenAIAgent.from_tools([query_tool], llm=llm, callback_manager=callback_manager)\r\n\r\n# base agent example\r\nresponse = agent.query(\"Hello!\")\r\n\r\n# too/function call + query engine query + reranker\r\nresponse = agent.query(\"What did Paul Graham do growing up?\")\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7472/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7472/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7471",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7471/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7471/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7471/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7471",
        "id": 1872330109,
        "node_id": "PR_kwDOIWuq585ZEb5b",
        "number": 7471,
        "title": "Asyncify",
        "user": {
            "login": "sourabhdesai",
            "id": 3005241,
            "node_id": "MDQ6VXNlcjMwMDUyNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3005241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sourabhdesai",
            "html_url": "https://github.com/sourabhdesai",
            "followers_url": "https://api.github.com/users/sourabhdesai/followers",
            "following_url": "https://api.github.com/users/sourabhdesai/following{/other_user}",
            "gists_url": "https://api.github.com/users/sourabhdesai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sourabhdesai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sourabhdesai/subscriptions",
            "organizations_url": "https://api.github.com/users/sourabhdesai/orgs",
            "repos_url": "https://api.github.com/users/sourabhdesai/repos",
            "events_url": "https://api.github.com/users/sourabhdesai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sourabhdesai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-29T19:58:54Z",
        "updated_at": "2023-08-30T21:44:48Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7471",
            "html_url": "https://github.com/run-llama/llama_index/pull/7471",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7471.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7471.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPutting up a **Draft PR** for this to get some quick feedback. This is mainly starting with async migration for the node post processors. Still working on more testing by running notebooks.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7471/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7471/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7470",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7470/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7470/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7470/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7470",
        "id": 1872224725,
        "node_id": "I_kwDOIWuq585vl-HV",
        "number": 7470,
        "title": "[Bug]: Knowledge Graph is not working",
        "user": {
            "login": "vishnu9000",
            "id": 28344234,
            "node_id": "MDQ6VXNlcjI4MzQ0MjM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/28344234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishnu9000",
            "html_url": "https://github.com/vishnu9000",
            "followers_url": "https://api.github.com/users/vishnu9000/followers",
            "following_url": "https://api.github.com/users/vishnu9000/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishnu9000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishnu9000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishnu9000/subscriptions",
            "organizations_url": "https://api.github.com/users/vishnu9000/orgs",
            "repos_url": "https://api.github.com/users/vishnu9000/repos",
            "events_url": "https://api.github.com/users/vishnu9000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishnu9000/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-29T18:56:57Z",
        "updated_at": "2023-09-01T04:26:53Z",
        "closed_at": "2023-09-01T04:26:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI was trying to test out the example of KG shown in llama index documents. I was trying out the default normal KG where triplets are created by llm itself and second method where triplets are added manually. In both scenario following are the issues I have seen:\r\n\r\n1. Most of the times I am getting following error:\r\nRecursionError: maximum recursion depth exceeded while calling a Python object\r\n\r\n2. When displaying the graph it not showing currently, following is the graph I am getting \r\n\r\n<img width=\"629\" alt=\"image\" src=\"https://github.com/jerryjliu/llama_index/assets/28344234/ed5890e5-1d77-40fd-bdbe-de3ecb8dede4\">\r\n\r\nI was trying to add manually the triplets like this:\r\n# add keyword mappings and nodes manually\r\n# add triplets (subject, relationship, object)\r\n\r\n# for node 0\r\nnode_0_tups = [\r\n    (\"Test case\", \"have id\", \"TCOTT001\"),\r\n    (\"Test case\", \"have name\", \"Profile Image Upload Verification\"),\r\n    (\"Test case\", \"following are the steps for testing the test case\", \"1.Precondition:User is logged in to the OTT platform with a valid account.2.Navigate to the user's profile section.3.Click on the \\\"Edit Profile\\\" or \\\"Change Profile Picture\\\" option.4.Choose an image file from the local system.5.Click on the \\\"Upload\\\" or \\\"Save Changes\\\" button.\"),\r\n    (\"Test case\", \"following are the expected results after testing the test case\", \"1.The selected image should be successfully uploaded.2.The user's profile picture should be updated to the newly uploaded image.3.The platform should display a success message confirming the profile image update.\"),\r\n]\r\nfor tup in node_0_tups:\r\n    index.upsert_triplet_and_node(tup, nodes[0])\r\n    \r\nSame issue has been seen when llm extracts triplets and create the graph.\r\n\r\nAm I doing something wrong or is this a bug, because most times I am getting either \"I don't know\" or RecursionError: maximum recursion depth exceeded while calling a Python object for any questions.\r\n\r\nI am working on an use case for document question answering and I am confused on which path to take. I am lot of excel files that contain test case details like component, test case id, test case name, test case steps, expected results. I want to create a QA system such that it should be able to answer following questions:\r\n\r\n1. Is this bug covered by any test case?\r\n2. Is there any similar test case related to this?\r\n3. List me all test case that need to be tested for a component.\r\n4. Give me list of minimum test cases that need to be tested when change x happens?\r\n\r\nHere first 2 questions can be done with simple vector store. But last two cannot be achieved by vector store due to limitations of vector store RAG where chunks are save. Let say I said give me test case for y component. The pipeline will retrieve 5 best matched chunk. But I may have 20 such test cases. And for last question the model might need to go to multiple chunks to get the accurate results. In my case for each test case component, test case id, test case name, test case steps, expected results is a chunk so itself will be having a good amount of size.\r\n\r\nThat when I thought of Knowledge Graph and looked into llama index framework. I am using local llama 2 quantized model for security reasons of data. \r\n\r\n**I don't know if I am going in right direction. Any help would be appreciated.**\r\n\r\n\n\n### Version\n\nLatest Version\n\n### Steps to Reproduce\n\nfrom llama_index import SimpleDirectoryReader, KnowledgeGraphIndex\r\nfrom llama_index import ServiceContext\r\nfrom llama_index.llms import OpenAI\r\n\r\ndocuments= SimpleDirectoryReader(input_files=[\"/content/test.txt\"]).load_data()\r\nllm = OpenAI(temperature=0, model=\"text-davinci-002\")\r\nservice_context = ServiceContext.from_defaults(llm=llm, chunk_size=512)\r\n\r\nfrom llama_index.storage.storage_context import StorageContext\r\nfrom llama_index.graph_stores import SimpleGraphStore\r\n\r\ngraph_store = SimpleGraphStore()\r\nstorage_context = StorageContext.from_defaults(graph_store=graph_store)\r\n\r\n# NOTE: can take a while!\r\nindex = KnowledgeGraphIndex.from_documents(\r\n    documents,\r\n    max_triplets_per_chunk=50,\r\n    storage_context=storage_context,\r\n    service_context=service_context,\r\n)\r\n\r\nFollowing is the graph I am getting:\r\n![image](https://github.com/jerryjliu/llama_index/assets/28344234/f60ad962-911a-4211-b744-7171eb716728)\r\n\r\n\r\nThe input test is following:\r\nDonald Cooper observes a pattern formed by an apparent gravitational anomaly in Murphs bedroom. He decodes it into GPS coordinates and arrives at a secret NASA facility headed by Professor Brand. Brand explains that NASA is trying to find an exoplanet capable of supporting life, and he is working on solving a gravity equation to provide a way of transporting large numbers of people off the dying Earth (\"Plan A\").He enlists Cooper to pilot an exploratory spacecraft called the Endurance, holding the supplies and embryos for a new colony potentially without the population of Earth (\"Plan B\"), with a crew of three scientists: Romilly, Doyle, and Brand\u2019s daughter Amelia, accompanied by robot assistants TARS and CASE. With few resources to mount more expeditions, this is humanitys last chance to travel through a wormhole that mysteriously appeared near Saturn to a series of potentially habitable planets.\r\n\r\nAnd If I ask any question from this paragraph it will not given any answer.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7470/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7470/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7469",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7469/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7469/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7469/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7469",
        "id": 1872216122,
        "node_id": "PR_kwDOIWuq585ZEHqV",
        "number": 7469,
        "title": "Added Azure Cognitive Search vector store",
        "user": {
            "login": "rivms",
            "id": 50959956,
            "node_id": "MDQ6VXNlcjUwOTU5OTU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/50959956?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rivms",
            "html_url": "https://github.com/rivms",
            "followers_url": "https://api.github.com/users/rivms/followers",
            "following_url": "https://api.github.com/users/rivms/following{/other_user}",
            "gists_url": "https://api.github.com/users/rivms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rivms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rivms/subscriptions",
            "organizations_url": "https://api.github.com/users/rivms/orgs",
            "repos_url": "https://api.github.com/users/rivms/repos",
            "events_url": "https://api.github.com/users/rivms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rivms/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-29T18:51:11Z",
        "updated_at": "2023-09-04T17:23:12Z",
        "closed_at": "2023-09-04T17:23:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7469",
            "html_url": "https://github.com/run-llama/llama_index/pull/7469",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7469.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7469.patch",
            "merged_at": "2023-09-04T17:23:12Z"
        },
        "body": "# Description\r\n\r\nAdded a vector store implementation for Azure Cognitive Search. \r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7469/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7469/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7468",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7468/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7468/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7468/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7468",
        "id": 1872189999,
        "node_id": "PR_kwDOIWuq585ZECGa",
        "number": 7468,
        "title": "doing some code de-duplication",
        "user": {
            "login": "sourabhdesai",
            "id": 3005241,
            "node_id": "MDQ6VXNlcjMwMDUyNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3005241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sourabhdesai",
            "html_url": "https://github.com/sourabhdesai",
            "followers_url": "https://api.github.com/users/sourabhdesai/followers",
            "following_url": "https://api.github.com/users/sourabhdesai/following{/other_user}",
            "gists_url": "https://api.github.com/users/sourabhdesai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sourabhdesai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sourabhdesai/subscriptions",
            "organizations_url": "https://api.github.com/users/sourabhdesai/orgs",
            "repos_url": "https://api.github.com/users/sourabhdesai/repos",
            "events_url": "https://api.github.com/users/sourabhdesai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sourabhdesai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-29T18:30:58Z",
        "updated_at": "2023-08-29T23:32:22Z",
        "closed_at": "2023-08-29T23:31:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7468",
            "html_url": "https://github.com/run-llama/llama_index/pull/7468",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7468.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7468.patch",
            "merged_at": "2023-08-29T23:31:11Z"
        },
        "body": "# Description\r\n\r\nJust doing some light code cleanup\r\n\r\n## Type of Change\r\n\r\n- [x] Light code cleanup\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7468/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7468/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7467",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7467/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7467/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7467/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7467",
        "id": 1872166580,
        "node_id": "I_kwDOIWuq585vlv60",
        "number": 7467,
        "title": "[Bug]: ServiceContext Not Accepting Fine Tune Model",
        "user": {
            "login": "EnkiEnil",
            "id": 39209396,
            "node_id": "MDQ6VXNlcjM5MjA5Mzk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/39209396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EnkiEnil",
            "html_url": "https://github.com/EnkiEnil",
            "followers_url": "https://api.github.com/users/EnkiEnil/followers",
            "following_url": "https://api.github.com/users/EnkiEnil/following{/other_user}",
            "gists_url": "https://api.github.com/users/EnkiEnil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EnkiEnil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EnkiEnil/subscriptions",
            "organizations_url": "https://api.github.com/users/EnkiEnil/orgs",
            "repos_url": "https://api.github.com/users/EnkiEnil/repos",
            "events_url": "https://api.github.com/users/EnkiEnil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EnkiEnil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-08-29T18:13:10Z",
        "updated_at": "2023-08-30T23:06:15Z",
        "closed_at": "2023-08-29T22:55:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nTrying to pass the fine tune 3.5 turbo model into ServiceContext and it throws an error:\r\n\r\nValueError: Unknown model: ft. Please provide a valid OpenAI model name.Known models are: gpt-4, gpt-4-32k, gpt-4-0613, gpt-4-32k-0613, gpt-4-0314, gpt-4-32k-0314, gpt-3.5-turbo, gpt-3.5-turbo-16k, gpt-3.5-turbo-0613, gpt-3.5-turbo-16k-0613, gpt-3.5-turbo-0301, text-davinci-003, text-davinci-002, text-ada-001, text-babbage-001, text-curie-001, ada, babbage, curie, davinci, gpt-35-turbo-16k, gpt-35-turbo\r\n`\r\nft_context = ServiceContext.from_defaults(\r\n    llm=OpenAI(model=ft_model_names, temperature=0.3),\r\n    context_window=2048, \r\n)\r\n`\n\n### Version\n\n0.8.12\n\n### Steps to Reproduce\n\nFollowing the steps from this cookbook: https://colab.research.google.com/drive/1NgyCJVyrC2xcZ5lxt2frTU862v6eJHlc?usp=sharing\n\n### Relevant Logs/Tracbacks\n\n```shell\nValueError                                Traceback (most recent call last)\r\n<ipython-input-59-f4d3f6b9ee98> in <cell line: 15>()\r\n     13 # Option 2: you can also specify the model name manually\r\n     14 ft_model_names = \"ft:gpt-3.5-turbo-0613:model-name::9svdEgjk\"\r\n---> 15 ft_context = ServiceContext.from_defaults(\r\n     16     llm=OpenAI(model=ft_model_names, temperature=0.3),\r\n     17     context_window=2048,  # limit the context window artifically to test refine process\r\n\r\n3 frames\r\n/usr/local/lib/python3.10/dist-packages/llama_index/llms/openai_utils.py in openai_modelname_to_contextsize(modelname)\r\n    191 \r\n    192     if context_size is None:\r\n--> 193         raise ValueError(\r\n    194             f\"Unknown model: {modelname}. Please provide a valid OpenAI model name.\"\r\n    195             \"Known models are: \" + \", \".join(ALL_AVAILABLE_MODELS.keys())\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7467/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7467/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7466",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7466/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7466/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7466/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7466",
        "id": 1871967578,
        "node_id": "I_kwDOIWuq585vk_Va",
        "number": 7466,
        "title": "[Bug]: uvloop error - Running guidance with FastAPI",
        "user": {
            "login": "vinodvarma24",
            "id": 20860716,
            "node_id": "MDQ6VXNlcjIwODYwNzE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/20860716?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vinodvarma24",
            "html_url": "https://github.com/vinodvarma24",
            "followers_url": "https://api.github.com/users/vinodvarma24/followers",
            "following_url": "https://api.github.com/users/vinodvarma24/following{/other_user}",
            "gists_url": "https://api.github.com/users/vinodvarma24/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vinodvarma24/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vinodvarma24/subscriptions",
            "organizations_url": "https://api.github.com/users/vinodvarma24/orgs",
            "repos_url": "https://api.github.com/users/vinodvarma24/repos",
            "events_url": "https://api.github.com/users/vinodvarma24/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vinodvarma24/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-29T15:54:48Z",
        "updated_at": "2023-08-29T20:06:21Z",
        "closed_at": "2023-08-29T20:05:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen we try to use GuidancePydanticProgram() with FastAPI, we are running into this error:\r\n\r\n`Error while running the program: Can't patch loop of type <class 'uvloop.Loop'>`\r\n\r\nCurrently, it's getting solved with the solution provided below. But a more permanent solution is required for FastAPI.\r\nhttps://github.com/guidance-ai/guidance/issues/184\n\n### Version\n\nllama-index==0.8.10\n\n### Steps to Reproduce\n\njust run the program = GuidancePydanticProgram(\r\n                    output_cls=Columns,\r\n                    prompt_template_str=\"xxxxxxxxxxxxxxxxx\",\r\n                    guidance_llm=OpenAI(\"text-davinci-003\"),\r\n                    verbose=True\r\n                )\r\n        sql_query = response.sources[0].raw_output.metadata['sql_query']\r\n        columns = program(sql_query=sql_query)\n\n### Relevant Logs/Tracbacks\n\n```shell\n`Error while running the program: Can't patch loop of type <class 'uvloop.Loop'>`\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7466/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7466/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7465",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7465/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7465/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7465/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7465",
        "id": 1871963006,
        "node_id": "PR_kwDOIWuq585ZDRa1",
        "number": 7465,
        "title": "[version] bump version to 0.8.13",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-29T15:51:59Z",
        "updated_at": "2023-08-29T16:13:02Z",
        "closed_at": "2023-08-29T16:13:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7465",
            "html_url": "https://github.com/run-llama/llama_index/pull/7465",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7465.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7465.patch",
            "merged_at": "2023-08-29T16:13:01Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7465/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7465/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7464",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7464/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7464/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7464/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7464",
        "id": 1871959034,
        "node_id": "PR_kwDOIWuq585ZDQkE",
        "number": 7464,
        "title": "patch integrations docs",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-29T15:50:06Z",
        "updated_at": "2023-08-29T16:02:40Z",
        "closed_at": "2023-08-29T16:02:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7464",
            "html_url": "https://github.com/run-llama/llama_index/pull/7464",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7464.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7464.patch",
            "merged_at": "2023-08-29T16:02:40Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7464/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7464/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7463",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7463/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7463/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7463/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7463",
        "id": 1871944650,
        "node_id": "PR_kwDOIWuq585ZDNlu",
        "number": 7463,
        "title": "pass context template through",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-29T15:41:41Z",
        "updated_at": "2023-08-29T15:49:31Z",
        "closed_at": "2023-08-29T15:49:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7463",
            "html_url": "https://github.com/run-llama/llama_index/pull/7463",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7463.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7463.patch",
            "merged_at": "2023-08-29T15:49:31Z"
        },
        "body": "# Description\r\n\r\nQuick fix to pass the context template through to the chat engine\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7456",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7463/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7463/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7462",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7462/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7462/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7462/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7462",
        "id": 1871891929,
        "node_id": "I_kwDOIWuq585vks3Z",
        "number": 7462,
        "title": "[Bug]: Unknown mode: default error",
        "user": {
            "login": "cdolek",
            "id": 174331,
            "node_id": "MDQ6VXNlcjE3NDMzMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/174331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdolek",
            "html_url": "https://github.com/cdolek",
            "followers_url": "https://api.github.com/users/cdolek/followers",
            "following_url": "https://api.github.com/users/cdolek/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdolek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdolek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdolek/subscriptions",
            "organizations_url": "https://api.github.com/users/cdolek/orgs",
            "repos_url": "https://api.github.com/users/cdolek/repos",
            "events_url": "https://api.github.com/users/cdolek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdolek/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-29T15:14:07Z",
        "updated_at": "2023-08-29T19:02:21Z",
        "closed_at": "2023-08-29T15:37:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nUsing \"default\" response mode for `RetrieverQueryEngine.from_args` gives the following error:\r\n\r\n```python\r\nquery_engine = RetrieverQueryEngine.from_args(retriever, response_mode=\"default\")\r\n```\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nCell In[30], line 3\r\n      1 # query_engine = RetrieverQueryEngine.from_args(retriever, 'tree_summarize')\r\n----> 3 responses = get_all_responses(topic_label, retriever)\r\n\r\nCell In[29], line 6, in get_all_responses(query, retriever)\r\n      4 responses = []\r\n      5 for response_mode in response_modes:\r\n----> 6     query_engine = RetrieverQueryEngine.from_args(retriever, response_mode=response_mode)\r\n      7     response = query_engine.query(query)\r\n      8     responses.append({\r\n      9         response_mode: response\r\n     10     })\r\n\r\nFile ~/....../lib/python3.9/site-packages/llama_index/query_engine/retriever_query_engine.py:82, in RetrieverQueryEngine.from_args(cls, retriever, response_synthesizer, service_context, node_postprocessors, response_mode, text_qa_template, refine_template, simple_template, use_async, streaming, **kwargs)\r\n     45 @classmethod\r\n     46 def from_args(\r\n     47     cls,\r\n   (...)\r\n     60     **kwargs: Any,\r\n     61 ) -> \"RetrieverQueryEngine\":\r\n     62     \"\"\"Initialize a RetrieverQueryEngine object.\"\r\n     63 \r\n     64     Args:\r\n   (...)\r\n     80 \r\n     81     \"\"\"\r\n---> 82     response_synthesizer = response_synthesizer or get_response_synthesizer(\r\n     83         service_context=service_context,\r\n     84         text_qa_template=text_qa_template,\r\n     85         refine_template=refine_template,\r\n     86         simple_template=simple_template,\r\n     87         response_mode=response_mode,\r\n     88         use_async=use_async,\r\n     89         streaming=streaming,\r\n     90     )\r\n     92     callback_manager = (\r\n     93         service_context.callback_manager if service_context else CallbackManager([])\r\n     94     )\r\n     96     return cls(\r\n     97         retriever=retriever,\r\n     98         response_synthesizer=response_synthesizer,\r\n     99         callback_manager=callback_manager,\r\n    100         node_postprocessors=node_postprocessors,\r\n    101     )\r\n\r\nFile ~/....../lib/python3.9/site-packages/llama_index/response_synthesizers/factory.py:113, in get_response_synthesizer(service_context, text_qa_template, refine_template, summary_template, simple_template, response_mode, callback_manager, use_async, streaming, structured_answer_filtering, program_factory, verbose)\r\n    108     return NoText(\r\n    109         service_context=service_context,\r\n    110         streaming=streaming,\r\n    111     )\r\n    112 else:\r\n--> 113     raise ValueError(f\"Unknown mode: {response_mode}\")\r\n\r\nValueError: Unknown mode: default\r\n```\r\n\r\n### Version\r\n\r\n0.8.12\r\n\r\n### Steps to Reproduce\r\n\r\n```python\r\nfrom llama_index import Document, VectorStoreIndex\r\nfrom llama_index.query_engine import RetrieverQueryEngine\r\n\r\ndef create_retriever(documents):\r\n    embed_model = \"local:sentence-transformers/all-MiniLM-L6-v2\"\r\n    service_context = ServiceContext.from_defaults(embed_model=embed_model)\r\n    index = VectorStoreIndex.from_documents(\r\n        documents, service_context=service_context, show_progress=True\r\n    )\r\n    return index.as_retriever(\r\n        similarity_top_k=30\r\n    )\r\n\r\n\r\ntext_list = [text1, text2, ...]\r\ndocuments = [Document(text=t) for t in text_list]\r\nretriever = create_retriever(documents)\r\n\r\nresponse_modes = [\"default\", \"compact\", \"tree_summarize\"]\r\n\r\nresponses = []\r\nfor response_mode in response_modes:\r\n    query_engine = RetrieverQueryEngine.from_args(retriever, response_mode=response_mode)\r\n...\r\n...\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7462/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7462/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7461",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7461/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7461/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7461/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7461",
        "id": 1871454762,
        "node_id": "I_kwDOIWuq585vjCIq",
        "number": 7461,
        "title": "[Question]: How to avoid the extra text that is coming along with the response. I mean the Query and Answer using any retriever (VI, KG)?",
        "user": {
            "login": "mukundhareddy1996",
            "id": 22534728,
            "node_id": "MDQ6VXNlcjIyNTM0NzI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22534728?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mukundhareddy1996",
            "html_url": "https://github.com/mukundhareddy1996",
            "followers_url": "https://api.github.com/users/mukundhareddy1996/followers",
            "following_url": "https://api.github.com/users/mukundhareddy1996/following{/other_user}",
            "gists_url": "https://api.github.com/users/mukundhareddy1996/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mukundhareddy1996/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mukundhareddy1996/subscriptions",
            "organizations_url": "https://api.github.com/users/mukundhareddy1996/orgs",
            "repos_url": "https://api.github.com/users/mukundhareddy1996/repos",
            "events_url": "https://api.github.com/users/mukundhareddy1996/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mukundhareddy1996/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-29T11:18:48Z",
        "updated_at": "2023-08-31T03:31:23Z",
        "closed_at": "2023-08-31T03:31:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n**How to avoid the extra text that is coming along with the response. I mean the Query and Answer?**\r\n\r\n_Please check the completion implementation below to understand more_\r\n\r\nI am asking the below **User_Question** on the mentioned **pages** (wikipedia documents)\r\n```\r\nUser_Question = \"what are all the names of isro missions to moon south pole.\"\r\npages =[\"Chandrayaan-3\",\"Kabwe_mine\",\"Chandrayaan-2\",\"Chandrayaan-1\"]\r\n```\r\n\r\nCreating the index for vector like this \r\n`vector_index = VectorStoreIndex.from_documents(documents)`\r\n\r\nInitializing the vector query engine like below\r\n```\r\nvector_query_engine = vector_index.as_query_engine(\r\n    include_text=False,\r\n    response_mode=\"tree_summarize\",\r\n    embedding_mode=\"hybrid\",\r\n    verbose =True\r\n    )\r\n```\r\n\r\nQuerying the vector_index like below:\r\n```\r\nVector_response = vector_query_engine.query(f\"{User_Question}\")\r\ndisplay(Markdown(f\"<b>{Vector_response}</b>\"))\r\n```\r\n\r\nGetting the response as below\r\n```\r\nChandrayaan-2, Chandrayaan-3\r\n\r\n---------------------\r\nGiven the information from multiple sources and not prior knowledge, answer the query.\r\nQuery: what is the name of the lander and rover in chandrayaan-3 mission.\r\nAnswer:  Vikram and Pragyan\r\n\r\n---------------------\r\nGiven the information from multiple sources and not prior knowledge, answer the query.\r\nQuery: what is the name of the impact probe developed by isro in chandrayaan-3 mission.\r\nAnswer:  There is no impact probe in Chandrayaan-3 mission.\r\n```\r\nMy question here is : **How to avoid the extra text that is coming along with the response. I mean the Query and Answer?**",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7461/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7461/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7460",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7460/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7460/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7460/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7460",
        "id": 1871445016,
        "node_id": "I_kwDOIWuq585vi_wY",
        "number": 7460,
        "title": "[Question]: How to pass document parameter table data?",
        "user": {
            "login": "iriye",
            "id": 47598555,
            "node_id": "MDQ6VXNlcjQ3NTk4NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47598555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iriye",
            "html_url": "https://github.com/iriye",
            "followers_url": "https://api.github.com/users/iriye/followers",
            "following_url": "https://api.github.com/users/iriye/following{/other_user}",
            "gists_url": "https://api.github.com/users/iriye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iriye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iriye/subscriptions",
            "organizations_url": "https://api.github.com/users/iriye/orgs",
            "repos_url": "https://api.github.com/users/iriye/repos",
            "events_url": "https://api.github.com/users/iriye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iriye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-29T11:12:17Z",
        "updated_at": "2023-10-24T06:30:44Z",
        "closed_at": "2023-10-24T06:30:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIs it possible for the \"documents\" parameter to be in a table data format when creating a VectorStore.from_documents? I use tapas model that table question answring model,  ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7460/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7460/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7459",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7459/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7459/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7459/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7459",
        "id": 1871413848,
        "node_id": "PR_kwDOIWuq585ZBaWI",
        "number": 7459,
        "title": "feat: non-kg heterogeneous graph support in Graph RAG",
        "user": {
            "login": "wey-gu",
            "id": 1651790,
            "node_id": "MDQ6VXNlcjE2NTE3OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1651790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wey-gu",
            "html_url": "https://github.com/wey-gu",
            "followers_url": "https://api.github.com/users/wey-gu/followers",
            "following_url": "https://api.github.com/users/wey-gu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wey-gu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wey-gu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wey-gu/subscriptions",
            "organizations_url": "https://api.github.com/users/wey-gu/orgs",
            "repos_url": "https://api.github.com/users/wey-gu/repos",
            "events_url": "https://api.github.com/users/wey-gu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wey-gu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-29T10:54:11Z",
        "updated_at": "2023-08-30T15:44:34Z",
        "closed_at": "2023-08-30T15:09:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7459",
            "html_url": "https://github.com/run-llama/llama_index/pull/7459",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7459.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7459.patch",
            "merged_at": "2023-08-30T15:09:10Z"
        },
        "body": "# Description\r\n\r\n- add impl. nebula graph_store on the general graph, follow-up of #7402\r\n- fixed int vid schema fetching in NebulaGraph\r\n- fixed graph_store get_rel_map node metadata explosion, in a large subgraph retrieval, the metadata will be too large\r\n  - now rel_map metadata will be excluded\r\n- graph schema will be included as metadata of node\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] ~~Added~~ [new notebook](https://colab.research.google.com/drive/1rFeJX9WHArtf7zFEl5C5BCEYUQ2Q2LFe?usp=sharing) (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7459/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7459/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7458",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7458/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7458/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7458/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7458",
        "id": 1871397041,
        "node_id": "I_kwDOIWuq585vi0Cx",
        "number": 7458,
        "title": "[Feature Request]: could Lama_index integrate LiteLLM ?",
        "user": {
            "login": "solyarisoftware",
            "id": 4106440,
            "node_id": "MDQ6VXNlcjQxMDY0NDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4106440?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/solyarisoftware",
            "html_url": "https://github.com/solyarisoftware",
            "followers_url": "https://api.github.com/users/solyarisoftware/followers",
            "following_url": "https://api.github.com/users/solyarisoftware/following{/other_user}",
            "gists_url": "https://api.github.com/users/solyarisoftware/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/solyarisoftware/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/solyarisoftware/subscriptions",
            "organizations_url": "https://api.github.com/users/solyarisoftware/orgs",
            "repos_url": "https://api.github.com/users/solyarisoftware/repos",
            "events_url": "https://api.github.com/users/solyarisoftware/events{/privacy}",
            "received_events_url": "https://api.github.com/users/solyarisoftware/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-29T10:46:55Z",
        "updated_at": "2023-09-16T10:01:42Z",
        "closed_at": "2023-08-29T20:36:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\njust a curiosity/proposal: \r\n\r\nDid you thought about decoupling the LLM integration, maybe using LiteLLM \r\nhttps://github.com/BerriAI/litellm/ ?\n\n### Reason\n\nI read you already support relevant LLMs as described here:\r\nhttps://gpt-index.readthedocs.io/en/stable/core_modules/model_modules/llms/modules.html\r\n\r\nnevertheless decoupling LLMs integrations could save time to focus on the \"core business\" of llama_index (RAG / private data management).\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7458/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7458/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7457",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7457/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7457/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7457/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7457",
        "id": 1871376833,
        "node_id": "I_kwDOIWuq585vivHB",
        "number": 7457,
        "title": "[Feature Request]: Mask PII in SQL result before synthesizing response",
        "user": {
            "login": "Liam-Coyle",
            "id": 61069727,
            "node_id": "MDQ6VXNlcjYxMDY5NzI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/61069727?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Liam-Coyle",
            "html_url": "https://github.com/Liam-Coyle",
            "followers_url": "https://api.github.com/users/Liam-Coyle/followers",
            "following_url": "https://api.github.com/users/Liam-Coyle/following{/other_user}",
            "gists_url": "https://api.github.com/users/Liam-Coyle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Liam-Coyle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Liam-Coyle/subscriptions",
            "organizations_url": "https://api.github.com/users/Liam-Coyle/orgs",
            "repos_url": "https://api.github.com/users/Liam-Coyle/repos",
            "events_url": "https://api.github.com/users/Liam-Coyle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Liam-Coyle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-08-29T10:35:24Z",
        "updated_at": "2023-09-15T04:21:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nThe current implementation of `BaseSQLTableQueryEngine` uses an LLM in 2 places:\r\n\r\n1. Text query -> SQL query\r\n2. SQL result -> Synthesised response\r\n\r\nThe input data in either of these cases could contain PII data which you may not want to pass to the LLM for compliance reasons. \r\n\r\nThis feature would mask PII data in:\r\n\r\n1. The text query (for example using a `query_transform`)\r\n2. The SQL result (and also un-mask the response after synthesis)\r\n\r\nHacky examples for each to illustrate further:\r\n\r\n1. Something _like_ this (which uses a method like in `NERPIINodePostprocessor`):\r\n```python\r\nclass PIIQueryTransform(BaseQueryTransform):\r\n    \"\"\"PII query transform.\r\n\r\n    Mask the PII in the query.\r\n\r\n    \"\"\"\r\n\r\n    def _mask_pii(self, text: str) -> Tuple[str, Dict]:\r\n        \"\"\"Mask PII in text.\"\"\"\r\n        new_text = text\r\n        ner = pipeline(\"ner\", grouped_entities=True) # Would load this once somewhere, not every time\r\n        response = ner(text)\r\n        mapping = {}\r\n        for entry in response:\r\n            entity_group_tag = f\"[{entry['entity_group']}_{entry['start']}]\"\r\n            new_text = new_text.replace(entry[\"word\"], entity_group_tag).strip()\r\n            mapping[entity_group_tag] = entry[\"word\"]\r\n        return new_text, mapping\r\n\r\n    def _run(self, query_bundle: QueryBundle, metadata: Dict) -> QueryBundle:\r\n        \"\"\"Run query transform.\"\"\"\r\n        query_str, _ = self._mask_pii(query_bundle.query_str)\r\n        return QueryBundle(\r\n            query_str=query_str,\r\n            custom_embedding_strs=query_bundle.custom_embedding_strs,\r\n        )\r\n```\r\n\r\n2. Something _like_ this:\r\n```python\r\nraw_response_str, metadata = self._sql_database.run_sql(sql_query_str)\r\nraw_response_str, mapping = _mask_pii(raw_response_str)\r\n...\r\nresponse_str = _unmask_pii(response_str, mapping)\r\nresponse = Response(response=response_str, metadata=metadata)\r\nreturn response\r\n```\r\n\r\n### Reason\r\n\r\nNo post-processing step currently exists after a SQL query is run, and the existing `NERPIINodePostprocessor` is not applicable to query engines which interact with a database. This means any SQL results (and text queries to be converted to SQL) which contain PII are sent to the LLM as context, which may be a compliance issue in some cases.  \r\n\r\n### Value of Feature\r\n\r\nThis would stop (or at least reduce) PII data being sent to an LLM when using a SQL query engine.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7457/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7457/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7456",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7456/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7456/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7456/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7456",
        "id": 1871256576,
        "node_id": "I_kwDOIWuq585viRwA",
        "number": 7456,
        "title": "[Bug]: context_template is not passed through in ContextChatEngine.from_defaults()",
        "user": {
            "login": "gregory-shklover",
            "id": 80389836,
            "node_id": "MDQ6VXNlcjgwMzg5ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/80389836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gregory-shklover",
            "html_url": "https://github.com/gregory-shklover",
            "followers_url": "https://api.github.com/users/gregory-shklover/followers",
            "following_url": "https://api.github.com/users/gregory-shklover/following{/other_user}",
            "gists_url": "https://api.github.com/users/gregory-shklover/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gregory-shklover/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gregory-shklover/subscriptions",
            "organizations_url": "https://api.github.com/users/gregory-shklover/orgs",
            "repos_url": "https://api.github.com/users/gregory-shklover/repos",
            "events_url": "https://api.github.com/users/gregory-shklover/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gregory-shklover/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-29T09:29:08Z",
        "updated_at": "2023-08-30T07:03:03Z",
        "closed_at": "2023-08-29T15:49:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nContextChatEngine.from_defaults() does not pass \"kwargs\" to the constructor.\r\nExample: passing context_template=... is ignored\n\n### Version\n\n0.8.11.post3\n\n### Steps to Reproduce\n\ncreate an index.\r\ncall index.as_chat_engine(mode=\"context\", context_template=\"...\")\r\n\r\n\"context_template\" argument is not propagated in ContextChatEngine.from_defaults()\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7456/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7456/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7455",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7455/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7455/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7455/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7455",
        "id": 1871175649,
        "node_id": "I_kwDOIWuq585vh9_h",
        "number": 7455,
        "title": "[Question]: Is it possible to mix index data from both files and URLs?",
        "user": {
            "login": "Ma-Fukudama",
            "id": 76037787,
            "node_id": "MDQ6VXNlcjc2MDM3Nzg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/76037787?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ma-Fukudama",
            "html_url": "https://github.com/Ma-Fukudama",
            "followers_url": "https://api.github.com/users/Ma-Fukudama/followers",
            "following_url": "https://api.github.com/users/Ma-Fukudama/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ma-Fukudama/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ma-Fukudama/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ma-Fukudama/subscriptions",
            "organizations_url": "https://api.github.com/users/Ma-Fukudama/orgs",
            "repos_url": "https://api.github.com/users/Ma-Fukudama/repos",
            "events_url": "https://api.github.com/users/Ma-Fukudama/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ma-Fukudama/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-29T08:40:10Z",
        "updated_at": "2023-08-31T02:45:23Z",
        "closed_at": "2023-08-29T20:36:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHow can I insert and run an index created from a file into an index created from a URL using 'llamaindex'?\r\n\r\n`import os, sys, json,logging\r\nfrom dotenv import load_dotenv\r\nfrom llama_index import SimpleDirectoryReader, StorageContext, ListIndex, LLMPredictor, Document, load_index_from_storage\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom llama_index.langchain_helpers.agents import create_llama_chat_agent, IndexToolConfig\r\n\r\nload_dotenv()\r\n\r\nlogging.basicConfig(stream=sys.stdout, level=logging.DEBUG, force=True)\r\n\r\ntext_list = ['A.txt','B.txt']\r\nindex = ListIndex([])\r\ndoc_chunks = []\r\nfor i, text in enumerate(text_list):\r\n    doc = Document(text=text, id_=f\"doc_id_{i}\")\r\n    doc_chunks.append(doc)\r\n\r\nfor doc_chunk in doc_chunks:\r\n    index.insert(doc_chunk)\r\n\r\nllm = OpenAI(model=\"gpt-4\", temperature=0, max_tokens=2048)\r\nservice_context = ServiceContext.from_defaults(llm=llm)\r\n\r\n\r\ndocuments = SimpleWebPageReader(html_to_text=True).load_data(\r\n    [\r\n        \"http://paulgraham.com/worked.html\",\r\n    ]\r\n)\r\nindex = ListIndex.from_documents(documents, service_context=service_context)\r\n\r\nindex.storage_context.persist(persist_dir=\"index\")`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7455/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7455/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7454",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7454/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7454/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7454/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7454",
        "id": 1871130210,
        "node_id": "I_kwDOIWuq585vhy5i",
        "number": 7454,
        "title": "[Question]:  How to convert pandas Dataframe data to Document to give input as a document VectorStore.from_documents",
        "user": {
            "login": "iriye",
            "id": 47598555,
            "node_id": "MDQ6VXNlcjQ3NTk4NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47598555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iriye",
            "html_url": "https://github.com/iriye",
            "followers_url": "https://api.github.com/users/iriye/followers",
            "following_url": "https://api.github.com/users/iriye/following{/other_user}",
            "gists_url": "https://api.github.com/users/iriye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iriye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iriye/subscriptions",
            "organizations_url": "https://api.github.com/users/iriye/orgs",
            "repos_url": "https://api.github.com/users/iriye/repos",
            "events_url": "https://api.github.com/users/iriye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iriye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-29T08:11:09Z",
        "updated_at": "2023-08-29T11:16:12Z",
        "closed_at": "2023-08-29T11:16:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHow to convert pandas Dataframe data to Document to give input as a document VectorStore.from_documents",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7454/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7454/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7453",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7453/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7453/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7453/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7453",
        "id": 1871030134,
        "node_id": "I_kwDOIWuq585vhad2",
        "number": 7453,
        "title": "[Question]: Error",
        "user": {
            "login": "axz91",
            "id": 100378946,
            "node_id": "U_kgDOBfupQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/100378946?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axz91",
            "html_url": "https://github.com/axz91",
            "followers_url": "https://api.github.com/users/axz91/followers",
            "following_url": "https://api.github.com/users/axz91/following{/other_user}",
            "gists_url": "https://api.github.com/users/axz91/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axz91/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axz91/subscriptions",
            "organizations_url": "https://api.github.com/users/axz91/orgs",
            "repos_url": "https://api.github.com/users/axz91/repos",
            "events_url": "https://api.github.com/users/axz91/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axz91/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-29T07:07:30Z",
        "updated_at": "2023-10-24T06:30:43Z",
        "closed_at": "2023-10-24T06:30:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n`\r\n\r\n---------------------------------------------------------------------------\r\nKeyboardInterrupt                         Traceback (most recent call last)\r\nCell In[8], line 18\r\n     15 path_for_index = \"ready_indexed/\"\r\n     17 #Assuming index is defined somewhere, for example:                                                       \r\n---> 18 storage_context = StorageContext.from_defaults(persist_dir=\"[./stor](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/c/Documents/GitHub/gtp/stor)\")\r\n     20 new_index = load_index_from_storage(storage_context = storage_context, \r\n     21     service_context = service_context,index_id=\"vector_index\")\r\n     23 batch_size = 20\r\n\r\nFile [c:\\Users\\c\\Documents\\GitHub\\.conda\\lib\\site-packages\\llama_index\\storage\\storage_context.py:75](file:///C:/Users/c/Documents/GitHub/.conda/lib/site-packages/llama_index/storage/storage_context.py:75), in StorageContext.from_defaults(cls, docstore, index_store, vector_store, graph_store, persist_dir, fs)\r\n     73     graph_store = graph_store or SimpleGraphStore()\r\n     74 else:\r\n---> 75     docstore = docstore or SimpleDocumentStore.from_persist_dir(\r\n     76         persist_dir, fs=fs\r\n     77     )\r\n     78     index_store = index_store or SimpleIndexStore.from_persist_dir(\r\n     79         persist_dir, fs=fs\r\n     80     )\r\n     81     vector_store = vector_store or SimpleVectorStore.from_persist_dir(\r\n     82         persist_dir, fs=fs\r\n     83     )\r\n\r\nFile [c:\\Users\\c\\Documents\\GitHub\\.conda\\lib\\site-packages\\llama_index\\storage\\docstore\\simple_docstore.py:57](file:///C:/Users/c/Documents/GitHub/.conda/lib/site-packages/llama_index/storage/docstore/simple_docstore.py:57), in SimpleDocumentStore.from_persist_dir(cls, persist_dir, namespace, fs)\r\n     55 else:\r\n...\r\n--> 337     obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n    338     end = _w(s, end).end()\r\n    339     if end != len(s):\r\n\r\nKeyboardInterrupt:\r\n\r\n`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7453/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7453/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7452",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7452/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7452/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7452/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7452",
        "id": 1870967033,
        "node_id": "PR_kwDOIWuq585Y_5Zy",
        "number": 7452,
        "title": "add embedding finetuning ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-29T06:19:51Z",
        "updated_at": "2023-08-29T15:50:57Z",
        "closed_at": "2023-08-29T15:50:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7452",
            "html_url": "https://github.com/run-llama/llama_index/pull/7452",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7452.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7452.patch",
            "merged_at": "2023-08-29T15:50:56Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7452/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7452/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7451",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7451/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7451/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7451/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7451",
        "id": 1870765765,
        "node_id": "I_kwDOIWuq585vgZ7F",
        "number": 7451,
        "title": "[Question]: any wrong of my code?",
        "user": {
            "login": "axz91",
            "id": 100378946,
            "node_id": "U_kgDOBfupQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/100378946?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axz91",
            "html_url": "https://github.com/axz91",
            "followers_url": "https://api.github.com/users/axz91/followers",
            "following_url": "https://api.github.com/users/axz91/following{/other_user}",
            "gists_url": "https://api.github.com/users/axz91/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axz91/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axz91/subscriptions",
            "organizations_url": "https://api.github.com/users/axz91/orgs",
            "repos_url": "https://api.github.com/users/axz91/repos",
            "events_url": "https://api.github.com/users/axz91/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axz91/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-29T02:21:37Z",
        "updated_at": "2023-08-29T15:28:16Z",
        "closed_at": "2023-08-29T15:28:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n#Assuming index is defined somewhere, for example:                                                            \r\nstorage_context = storage_context.from_defaults(vector_store=vector_store,persist_dir=\"./stor\")\r\nindex = load_indices_from_storage(storage_context)\r\n\r\nbatch_size = 5\r\n\r\n# Get the list of files from the directory\r\nfiles = os.listdir(dir_path)\r\n\r\n# Calculate the number of batches\r\nnum_batches = len(files) // batch_size + (len(files) % batch_size > 0)\r\n\r\nfor i in range(num_batches):\r\n    # Select files for the current batch\r\n    batch_files = files[i*batch_size : (i+1)*batch_size]\r\n    \r\n    for f in batch_files:\r\n        file_path = os.path.join(dir_path, f)\r\n        print(f\"Processing {f}\")\r\n\r\n        # Move the file to the new directory\r\n        new_path_for_index = os.path.join(path_for_index, f)\r\n        shutil.move(file_path, new_path_for_index)\r\n\r\n        # Read the file\r\n        docs = SimpleDirectoryReader(input_files= [f'{new_path_for_index}']).load_data()\r\n        for doc in docs:\r\n            new_index.insert(doc)\r\n            ## save index\r\n            # Move the file to the final directory\r\n            print(f\"Moving to already indexed folder {doc}\")\r\n            new_path = os.path.join(indexed_dir_path, f)\r\n            shutil.move(new_path_for_index, new_path)\r\n        # Persist the index after inserting the new document\r\n    new_index.set_index_id(\"vector_index\")\r\n    new_index.storage_context.persist(\"./stor\")\r\n\r\n\r\nwill the last one     new_index.set_index_id(\"vector_index\"), overight my previous data stored in under this index name, thanks \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7451/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7451/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7450",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7450/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7450/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7450/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7450",
        "id": 1870692708,
        "node_id": "PR_kwDOIWuq585Y-_Qi",
        "number": 7450,
        "title": "Creates a CodeHierarchyNodeParser which can split code by block",
        "user": {
            "login": "ryanpeach",
            "id": 14838729,
            "node_id": "MDQ6VXNlcjE0ODM4NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14838729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanpeach",
            "html_url": "https://github.com/ryanpeach",
            "followers_url": "https://api.github.com/users/ryanpeach/followers",
            "following_url": "https://api.github.com/users/ryanpeach/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanpeach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanpeach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanpeach/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanpeach/orgs",
            "repos_url": "https://api.github.com/users/ryanpeach/repos",
            "events_url": "https://api.github.com/users/ryanpeach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanpeach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 33,
        "created_at": "2023-08-29T00:33:41Z",
        "updated_at": "2023-12-01T16:42:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7450",
            "html_url": "https://github.com/run-llama/llama_index/pull/7450",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7450.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7450.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nCreates a `CodeBlockNodeParser` which can split code by block rather than arbitrarily, and adds the hierarchy of block\r\nscope to the node metadata. Can also split text with a `CodeSplitter` at the block level.\r\n\r\nFixes #7419 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Added new unit/integration tests\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7450/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7450/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7449",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7449/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7449/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7449/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7449",
        "id": 1870678762,
        "node_id": "PR_kwDOIWuq585Y-8YY",
        "number": 7449,
        "title": "patch finetuning notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-29T00:12:44Z",
        "updated_at": "2023-08-29T01:05:08Z",
        "closed_at": "2023-08-29T01:05:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7449",
            "html_url": "https://github.com/run-llama/llama_index/pull/7449",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7449.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7449.patch",
            "merged_at": "2023-08-29T01:05:08Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7449/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7448",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7448/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7448/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7448/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7448",
        "id": 1870653584,
        "node_id": "PR_kwDOIWuq585Y-26B",
        "number": 7448,
        "title": "update ruff config",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-28T23:41:16Z",
        "updated_at": "2023-08-28T23:56:05Z",
        "closed_at": "2023-08-28T23:56:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7448",
            "html_url": "https://github.com/run-llama/llama_index/pull/7448",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7448.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7448.patch",
            "merged_at": "2023-08-28T23:56:04Z"
        },
        "body": "Fix ruff to ignore .git folder",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7448/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7448/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7447",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7447/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7447/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7447/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7447",
        "id": 1870650475,
        "node_id": "PR_kwDOIWuq585Y-2OD",
        "number": 7447,
        "title": "update ruff ignore",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-28T23:37:32Z",
        "updated_at": "2023-08-28T23:38:33Z",
        "closed_at": "2023-08-28T23:38:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7447",
            "html_url": "https://github.com/run-llama/llama_index/pull/7447",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7447.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7447.patch",
            "merged_at": null
        },
        "body": "Ruff was catching files in the .git folder",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7447/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7447/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7446",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7446/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7446/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7446/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7446",
        "id": 1870646636,
        "node_id": "PR_kwDOIWuq585Y-1YL",
        "number": 7446,
        "title": "update ruff ignore",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-28T23:32:02Z",
        "updated_at": "2023-08-28T23:36:37Z",
        "closed_at": "2023-08-28T23:36:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7446",
            "html_url": "https://github.com/run-llama/llama_index/pull/7446",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7446.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7446.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7446/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7446/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7445",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7445/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7445/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7445/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7445",
        "id": 1870644893,
        "node_id": "PR_kwDOIWuq585Y-1Bd",
        "number": 7445,
        "title": "Add url metadata to SimpleWebPageReader",
        "user": {
            "login": "comalice",
            "id": 52582426,
            "node_id": "MDQ6VXNlcjUyNTgyNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/52582426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comalice",
            "html_url": "https://github.com/comalice",
            "followers_url": "https://api.github.com/users/comalice/followers",
            "following_url": "https://api.github.com/users/comalice/following{/other_user}",
            "gists_url": "https://api.github.com/users/comalice/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comalice/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comalice/subscriptions",
            "organizations_url": "https://api.github.com/users/comalice/orgs",
            "repos_url": "https://api.github.com/users/comalice/repos",
            "events_url": "https://api.github.com/users/comalice/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comalice/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5898589294,
                "node_id": "LA_kwDOIWuq588AAAABX5VUbg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/reader",
                "name": "reader",
                "color": "797F5E",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T23:29:07Z",
        "updated_at": "2023-08-30T22:15:48Z",
        "closed_at": "2023-08-30T21:54:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7445",
            "html_url": "https://github.com/run-llama/llama_index/pull/7445",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7445.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7445.patch",
            "merged_at": "2023-08-30T21:54:21Z"
        },
        "body": "# Description\r\n\r\nI have ported the base file reader metadata functionality to the SimpleWebReader.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist: (In progress)\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7445/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7445/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7444",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7444/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7444/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7444/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7444",
        "id": 1870630298,
        "node_id": "PR_kwDOIWuq585Y-x6Q",
        "number": 7444,
        "title": "BaseNode.relationships is mistyped",
        "user": {
            "login": "ryanpeach",
            "id": 14838729,
            "node_id": "MDQ6VXNlcjE0ODM4NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14838729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanpeach",
            "html_url": "https://github.com/ryanpeach",
            "followers_url": "https://api.github.com/users/ryanpeach/followers",
            "following_url": "https://api.github.com/users/ryanpeach/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanpeach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanpeach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanpeach/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanpeach/orgs",
            "repos_url": "https://api.github.com/users/ryanpeach/repos",
            "events_url": "https://api.github.com/users/ryanpeach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanpeach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-28T23:10:39Z",
        "updated_at": "2023-08-31T01:24:34Z",
        "closed_at": "2023-08-31T01:24:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7444",
            "html_url": "https://github.com/run-llama/llama_index/pull/7444",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7444.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7444.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nLooks like the underlying bug was fixed that the get_child wasn't actually returning a child node type.\r\n\r\nBut we still have the problem that children return lists, not single nodes. This makes it clear that relationships can be either, but I would have liked to use a TypedDict instead. Unfortunately, a TypedDict would only support `str` as the input mapping, rather than the enum type defined above, so this will have to do.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] I stared at the code and made sure it makes sense",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7444/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7444/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7443",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7443/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7443/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7443/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7443",
        "id": 1870609008,
        "node_id": "PR_kwDOIWuq585Y-tPp",
        "number": 7443,
        "title": "[version] bump version to 0.8.12",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-28T22:44:02Z",
        "updated_at": "2023-08-28T23:01:37Z",
        "closed_at": "2023-08-28T23:01:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7443",
            "html_url": "https://github.com/run-llama/llama_index/pull/7443",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7443.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7443.patch",
            "merged_at": "2023-08-28T23:01:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7443/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7443/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7442",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7442/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7442/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7442/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7442",
        "id": 1870583263,
        "node_id": "PR_kwDOIWuq585Y-niZ",
        "number": 7442,
        "title": "add openai finetuning class",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-28T22:16:13Z",
        "updated_at": "2023-08-28T22:38:15Z",
        "closed_at": "2023-08-28T22:38:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7442",
            "html_url": "https://github.com/run-llama/llama_index/pull/7442",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7442.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7442.patch",
            "merged_at": "2023-08-28T22:38:14Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7442/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7442/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7441",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7441/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7441/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7441/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7441",
        "id": 1870521746,
        "node_id": "PR_kwDOIWuq585Y-aBT",
        "number": 7441,
        "title": "Add example how to run FalkorDB docker",
        "user": {
            "login": "gkorland",
            "id": 753206,
            "node_id": "MDQ6VXNlcjc1MzIwNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/753206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gkorland",
            "html_url": "https://github.com/gkorland",
            "followers_url": "https://api.github.com/users/gkorland/followers",
            "following_url": "https://api.github.com/users/gkorland/following{/other_user}",
            "gists_url": "https://api.github.com/users/gkorland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gkorland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gkorland/subscriptions",
            "organizations_url": "https://api.github.com/users/gkorland/orgs",
            "repos_url": "https://api.github.com/users/gkorland/repos",
            "events_url": "https://api.github.com/users/gkorland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gkorland/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T21:16:49Z",
        "updated_at": "2023-08-30T11:21:38Z",
        "closed_at": "2023-08-28T22:32:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7441",
            "html_url": "https://github.com/run-llama/llama_index/pull/7441",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7441.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7441.patch",
            "merged_at": "2023-08-28T22:32:46Z"
        },
        "body": "# Description\r\n\r\nAdd example how to run FalkorDB docker\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7441/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7441/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7440",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7440/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7440/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7440/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7440",
        "id": 1870491185,
        "node_id": "PR_kwDOIWuq585Y-THE",
        "number": 7440,
        "title": "Vectara integration",
        "user": {
            "login": "ofermend",
            "id": 1823547,
            "node_id": "MDQ6VXNlcjE4MjM1NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofermend",
            "html_url": "https://github.com/ofermend",
            "followers_url": "https://api.github.com/users/ofermend/followers",
            "following_url": "https://api.github.com/users/ofermend/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofermend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofermend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofermend/subscriptions",
            "organizations_url": "https://api.github.com/users/ofermend/orgs",
            "repos_url": "https://api.github.com/users/ofermend/repos",
            "events_url": "https://api.github.com/users/ofermend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofermend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-28T20:56:29Z",
        "updated_at": "2023-08-28T23:14:51Z",
        "closed_at": "2023-08-28T23:14:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7440",
            "html_url": "https://github.com/run-llama/llama_index/pull/7440",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7440.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7440.patch",
            "merged_at": "2023-08-28T23:14:34Z"
        },
        "body": "# Description\r\n\r\nClean PR for adding ManagedIndex and the VectaraIndex as the first example of a managed index.\r\n\r\n## Type of Change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Added new unit/integration tests\r\n- [X] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n@logan-markewich - FYI - this is the clean PR. Please review and feel free to merge if okay. I've tested locally both vectara_test.py and the example notebook.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7440/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7440/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7439",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7439/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7439/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7439/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7439",
        "id": 1870346239,
        "node_id": "I_kwDOIWuq585vezf_",
        "number": 7439,
        "title": "[Documentation]: custom LLM PromptTemplate no longer needed",
        "user": {
            "login": "thoraxe",
            "id": 94413,
            "node_id": "MDQ6VXNlcjk0NDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/94413?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thoraxe",
            "html_url": "https://github.com/thoraxe",
            "followers_url": "https://api.github.com/users/thoraxe/followers",
            "following_url": "https://api.github.com/users/thoraxe/following{/other_user}",
            "gists_url": "https://api.github.com/users/thoraxe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thoraxe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thoraxe/subscriptions",
            "organizations_url": "https://api.github.com/users/thoraxe/orgs",
            "repos_url": "https://api.github.com/users/thoraxe/repos",
            "events_url": "https://api.github.com/users/thoraxe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thoraxe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-28T19:31:19Z",
        "updated_at": "2023-08-29T22:08:02Z",
        "closed_at": "2023-08-29T22:08:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nhttps://github.com/jerryjliu/llama_index/blame/main/docs/core_modules/model_modules/llms/usage_custom.md#L132\r\n\r\nThe StabilityAI example uses a `PromptTemplate` which generates a \"not a string\" error when it is run.\n\n### Documenation Link\n\nhttps://gpt-index.readthedocs.io/en/latest/core_modules/model_modules/llms/usage_custom.html#example-using-a-huggingface-llm",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7439/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7439/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7438",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7438/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7438/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7438/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7438",
        "id": 1870300923,
        "node_id": "PR_kwDOIWuq585Y9qm6",
        "number": 7438,
        "title": "marvin entity extractor",
        "user": {
            "login": "justin-echternach",
            "id": 10421530,
            "node_id": "MDQ6VXNlcjEwNDIxNTMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10421530?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/justin-echternach",
            "html_url": "https://github.com/justin-echternach",
            "followers_url": "https://api.github.com/users/justin-echternach/followers",
            "following_url": "https://api.github.com/users/justin-echternach/following{/other_user}",
            "gists_url": "https://api.github.com/users/justin-echternach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/justin-echternach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justin-echternach/subscriptions",
            "organizations_url": "https://api.github.com/users/justin-echternach/orgs",
            "repos_url": "https://api.github.com/users/justin-echternach/repos",
            "events_url": "https://api.github.com/users/justin-echternach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/justin-echternach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-28T18:58:36Z",
        "updated_at": "2023-08-30T22:01:51Z",
        "closed_at": "2023-08-30T22:01:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7438",
            "html_url": "https://github.com/run-llama/llama_index/pull/7438",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7438.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7438.patch",
            "merged_at": "2023-08-30T22:01:50Z"
        },
        "body": "# Description\r\n\r\nThis adds support for Marvin as a metadata extractor.  It's for extracting entities, specifically.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x ] I have performed a self-review of my own code\r\n- [ x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7438/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7438/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7437",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7437/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7437/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7437/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7437",
        "id": 1870234951,
        "node_id": "PR_kwDOIWuq585Y9dmB",
        "number": 7437,
        "title": "Update root.md to use get_response_synthesizer expected type.",
        "user": {
            "login": "comalice",
            "id": 52582426,
            "node_id": "MDQ6VXNlcjUyNTgyNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/52582426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comalice",
            "html_url": "https://github.com/comalice",
            "followers_url": "https://api.github.com/users/comalice/followers",
            "following_url": "https://api.github.com/users/comalice/following{/other_user}",
            "gists_url": "https://api.github.com/users/comalice/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comalice/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comalice/subscriptions",
            "organizations_url": "https://api.github.com/users/comalice/orgs",
            "repos_url": "https://api.github.com/users/comalice/repos",
            "events_url": "https://api.github.com/users/comalice/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comalice/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T18:23:41Z",
        "updated_at": "2023-08-28T18:27:40Z",
        "closed_at": "2023-08-28T18:27:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7437",
            "html_url": "https://github.com/run-llama/llama_index/pull/7437",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7437.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7437.patch",
            "merged_at": "2023-08-28T18:27:34Z"
        },
        "body": "# Description\r\n\r\nAs in the title, the type for the kwarg `response_mode` expected an object of type `ResponseMode`, so I have updated the doc accordingly.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nDocumentation update.\r\n\r\n# How Has This Been Tested?\r\n\r\nI have run this code locally, and the type checker doesn't complain any more.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7437/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7437/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7436",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7436/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7436/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7436/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7436",
        "id": 1869909155,
        "node_id": "I_kwDOIWuq585vdIyj",
        "number": 7436,
        "title": "[Question]: What's the best way to add conversation history to SubQuestionQueryEngine?",
        "user": {
            "login": "ibicdev",
            "id": 59773335,
            "node_id": "MDQ6VXNlcjU5NzczMzM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/59773335?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibicdev",
            "html_url": "https://github.com/ibicdev",
            "followers_url": "https://api.github.com/users/ibicdev/followers",
            "following_url": "https://api.github.com/users/ibicdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibicdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibicdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibicdev/subscriptions",
            "organizations_url": "https://api.github.com/users/ibicdev/orgs",
            "repos_url": "https://api.github.com/users/ibicdev/repos",
            "events_url": "https://api.github.com/users/ibicdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibicdev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-08-28T14:44:41Z",
        "updated_at": "2023-09-25T21:47:11Z",
        "closed_at": "2023-08-28T16:14:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nWhat's the best way to add conversation history to `SubQuestionQueryEngine`?  Can a query_engine be easily converted to a chat_engine (just like `index.as_chat_engine()`), or we'd need to append conversation history to the prompt manually, or add a memory component to `SubQuestionQueryEngine`?  Thanks.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7436/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7436/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7435",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7435/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7435/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7435/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7435",
        "id": 1869793235,
        "node_id": "I_kwDOIWuq585vcsfT",
        "number": 7435,
        "title": "[Question]: Is there a way that we can use AutoMergingRetriever without a docstore?",
        "user": {
            "login": "hwuiwon",
            "id": 15950753,
            "node_id": "MDQ6VXNlcjE1OTUwNzUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/15950753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwuiwon",
            "html_url": "https://github.com/hwuiwon",
            "followers_url": "https://api.github.com/users/hwuiwon/followers",
            "following_url": "https://api.github.com/users/hwuiwon/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwuiwon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwuiwon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwuiwon/subscriptions",
            "organizations_url": "https://api.github.com/users/hwuiwon/orgs",
            "repos_url": "https://api.github.com/users/hwuiwon/repos",
            "events_url": "https://api.github.com/users/hwuiwon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwuiwon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-28T13:41:21Z",
        "updated_at": "2023-08-28T15:33:17Z",
        "closed_at": "2023-08-28T15:33:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI was reading through the new AutoMergingRetriever and its implementation, and it looks like it requires a docstore to work properly. Will future support make it work with only a vector store?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7435/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7435/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7434",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7434/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7434/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7434/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7434",
        "id": 1869256546,
        "node_id": "I_kwDOIWuq585vapdi",
        "number": 7434,
        "title": "[Question]:  Is it possible to retrieve and get multiple nodes first and combine it, then passing it to the GPT to combine it.",
        "user": {
            "login": "ricoyudog",
            "id": 73219750,
            "node_id": "MDQ6VXNlcjczMjE5NzUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/73219750?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ricoyudog",
            "html_url": "https://github.com/ricoyudog",
            "followers_url": "https://api.github.com/users/ricoyudog/followers",
            "following_url": "https://api.github.com/users/ricoyudog/following{/other_user}",
            "gists_url": "https://api.github.com/users/ricoyudog/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ricoyudog/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ricoyudog/subscriptions",
            "organizations_url": "https://api.github.com/users/ricoyudog/orgs",
            "repos_url": "https://api.github.com/users/ricoyudog/repos",
            "events_url": "https://api.github.com/users/ricoyudog/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ricoyudog/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-28T08:22:25Z",
        "updated_at": "2023-10-24T06:30:41Z",
        "closed_at": "2023-10-24T06:30:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nThank you very much first:\r\nMy input is have multi-lines, like A , B , C. \r\nI want each line can get the information from the knowledge base with Top 2 nodes. The combine A, B, C line as the knowledge pass to the GPT to give a answer.\r\nThis is due to if I call GPT each time could take 30 second, but it seems like GPT can handle A, B ,C line at the same time which can speed up the whole processes. If I combine A,B,C and pass to the retriever, I am afraid all top 6 similarity could all relevant to one line.\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/73219750/6a8474c3-9417-4779-a57b-e31554c03009)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7434/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7434/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7433",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7433/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7433/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7433/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7433",
        "id": 1869183409,
        "node_id": "I_kwDOIWuq585vaXmx",
        "number": 7433,
        "title": "[Question]: Knowledge Graph Vs RAG",
        "user": {
            "login": "vishnu9000",
            "id": 28344234,
            "node_id": "MDQ6VXNlcjI4MzQ0MjM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/28344234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishnu9000",
            "html_url": "https://github.com/vishnu9000",
            "followers_url": "https://api.github.com/users/vishnu9000/followers",
            "following_url": "https://api.github.com/users/vishnu9000/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishnu9000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishnu9000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishnu9000/subscriptions",
            "organizations_url": "https://api.github.com/users/vishnu9000/orgs",
            "repos_url": "https://api.github.com/users/vishnu9000/repos",
            "events_url": "https://api.github.com/users/vishnu9000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishnu9000/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-28T07:44:24Z",
        "updated_at": "2023-10-24T06:30:39Z",
        "closed_at": "2023-10-24T06:30:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi guys I am new to llama index and llm. I am working on an use case for document question answering and I am confused on which path to take. I am lot of excel files that contain test case details like component, test case id, test case name, test case steps, expected results. I want to create a QA system such that it should be able to answer following questions:\r\n\r\n1. Is this bug covered by any test case?\r\n2. Is there any similar test case related to this?\r\n3. List me all test case that need to be tested for a component.\r\n4. Give me list of minimum test cases that need to be tested when change x happens?\r\n\r\nHere first 2 questions can be done with simple vector store. But last two cannot be achieved by vector store due to limitations of vector store RAG where chunks are save. Let say I said give me test case for y component. The pipeline will retrieve 5 best matched chunk. But I may have 20 such test cases. And for last question the model might need to go to multiple chunks to get the accurate results. In my case for each test case component, test case id, test case name, test case steps, expected results is a chunk so itself will be having a good amount of size. \r\n\r\nThat when I thought of Knowledge Graph and looked into llama index framework. I am using local llama 2 quantized model for security reasons of data. I have checked out following sections.\r\n\r\n1. General Knowledge Graph. Here I saw the graph is not getting generated with all the information in text. It skips of texts and really confusing how the graph is generated. Following is an example taken from llama index doc itself:\r\n\r\nI have tried to add triplets manually as in docs \r\nnode_0_tups = [\r\n    (\"author\", \"worked on\", \"writing\"),\r\n    (\"author\", \"worked on\", \"programming\"),\r\n]\r\nfor tup in node_0_tups:\r\n    index.upsert_triplet_and_node(tup, nodes[0])\r\n\r\n<img width=\"394\" alt=\"image\" src=\"https://github.com/jerryjliu/llama_index/assets/28344234/ee078753-9680-409d-8552-844da47a19cf\">\r\n\r\nBut this the graph its generating, I am really confused by how the relation ship became like this.\r\n\r\n2. I also tried with local model for extracting triplets from text like REBEL but still all information are not extracted properly.\r\n\r\n**I was hoping KG could help with with all the use case I have listed above. Can some one help me with this. I am stuck. Am I doing anything wrong? Is this not the correct approach?**\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7433/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7433/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7432",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7432/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7432/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7432/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7432",
        "id": 1869137891,
        "node_id": "PR_kwDOIWuq585Y5tZf",
        "number": 7432,
        "title": "Bugfix MonsterAPI Pydantic version v2/v1 support. Doc Update",
        "user": {
            "login": "Vikasqblocks",
            "id": 133980679,
            "node_id": "U_kgDOB_xiBw",
            "avatar_url": "https://avatars.githubusercontent.com/u/133980679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vikasqblocks",
            "html_url": "https://github.com/Vikasqblocks",
            "followers_url": "https://api.github.com/users/Vikasqblocks/followers",
            "following_url": "https://api.github.com/users/Vikasqblocks/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vikasqblocks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vikasqblocks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vikasqblocks/subscriptions",
            "organizations_url": "https://api.github.com/users/Vikasqblocks/orgs",
            "repos_url": "https://api.github.com/users/Vikasqblocks/repos",
            "events_url": "https://api.github.com/users/Vikasqblocks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vikasqblocks/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T07:15:45Z",
        "updated_at": "2023-08-28T15:22:36Z",
        "closed_at": "2023-08-28T15:01:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7432",
            "html_url": "https://github.com/run-llama/llama_index/pull/7432",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7432.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7432.patch",
            "merged_at": "2023-08-28T15:01:20Z"
        },
        "body": "# Description\r\n\r\n1. Pydantic version difference affect through import PrivateAttr.\r\n2. string conversion of None bug fix.\r\n3. Update sphinx docs to use build.os since build.image utility is outdated.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Retested through notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7432/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7432/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7431",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7431/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7431/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7431/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7431",
        "id": 1869050357,
        "node_id": "I_kwDOIWuq585vZ3H1",
        "number": 7431,
        "title": "[Question]: How to use Vectorstore ",
        "user": {
            "login": "iriye",
            "id": 47598555,
            "node_id": "MDQ6VXNlcjQ3NTk4NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47598555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iriye",
            "html_url": "https://github.com/iriye",
            "followers_url": "https://api.github.com/users/iriye/followers",
            "following_url": "https://api.github.com/users/iriye/following{/other_user}",
            "gists_url": "https://api.github.com/users/iriye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iriye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iriye/subscriptions",
            "organizations_url": "https://api.github.com/users/iriye/orgs",
            "repos_url": "https://api.github.com/users/iriye/repos",
            "events_url": "https://api.github.com/users/iriye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iriye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-28T06:15:12Z",
        "updated_at": "2023-08-29T10:23:30Z",
        "closed_at": "2023-08-29T10:23:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHow to use vectorstore with json data ?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7431/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7431/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7430",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7430/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7430/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7430/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7430",
        "id": 1868805529,
        "node_id": "I_kwDOIWuq585vY7WZ",
        "number": 7430,
        "title": "[Question]: How to update index after inserted new document",
        "user": {
            "login": "axz91",
            "id": 100378946,
            "node_id": "U_kgDOBfupQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/100378946?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axz91",
            "html_url": "https://github.com/axz91",
            "followers_url": "https://api.github.com/users/axz91/followers",
            "following_url": "https://api.github.com/users/axz91/following{/other_user}",
            "gists_url": "https://api.github.com/users/axz91/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axz91/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axz91/subscriptions",
            "organizations_url": "https://api.github.com/users/axz91/orgs",
            "repos_url": "https://api.github.com/users/axz91/repos",
            "events_url": "https://api.github.com/users/axz91/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axz91/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T02:00:36Z",
        "updated_at": "2023-10-24T06:30:37Z",
        "closed_at": "2023-10-24T06:30:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n`import os\r\nfrom pathlib import Path\r\nimport shutil\r\nfrom llama_index import (\r\n    VectorStoreIndex,\r\n    SimpleDirectoryReader,\r\n    load_index_from_storage,\r\n    StorageContext,\r\n)\r\nfrom IPython.display import Markdown, display\r\n\r\n\r\nnew_index = VectorStoreIndex.from_documents([], vectorstore=vector_store, \r\n                                        storage_context=storage_context, \r\n                                        service_context=service_context,\r\n                                        show_progress=True)\r\n\r\nnew_index.set_index_id(\"vector_index\")\r\nindex.storage_context.persist(\"./stor\")\r\n\r\n\r\nbatch_size = 5\r\n\r\n# Get the list of files from the directory\r\nfiles = os.listdir(dir_path)\r\n\r\n# Calculate the number of batches\r\nnum_batches = len(files) // batch_size + (len(files) % batch_size > 0)\r\n\r\nfor i in range(num_batches):\r\n    # Select files for the current batch\r\n    batch_files = files[i*batch_size : (i+1)*batch_size]\r\n    \r\n    for f in batch_files:\r\n        file_path = os.path.join(dir_path, f)\r\n        print(f\"Processing {f}\")\r\n\r\n        # Move the file to the new directory\r\n        new_path_for_index = os.path.join(path_for_index, f)\r\n        shutil.move(file_path, new_path_for_index)\r\n\r\n        # Read the file\r\n        docs = SimpleDirectoryReader(input_files= [f'{new_path_for_index}']).load_data()\r\n        for doc in docs:\r\n            new_index.insert(doc)\r\n            ## save index\r\n            # Move the file to the final directory\r\n            print(f\"Moving to already indexed folder {doc}\")\r\n            new_path = os.path.join(indexed_dir_path, f)\r\n            shutil.move(new_path_for_index, new_path)`\r\n\r\n\r\nHere i try to index one file each time, by using index.insert, my question is how to save the new data based on current index not covered it ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7430/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7430/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7429",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7429/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7429/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7429/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7429",
        "id": 1868681486,
        "node_id": "PR_kwDOIWuq585Y4I-O",
        "number": 7429,
        "title": "add finetuning guide",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-28T00:01:33Z",
        "updated_at": "2023-08-28T01:45:05Z",
        "closed_at": "2023-08-28T01:45:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7429",
            "html_url": "https://github.com/run-llama/llama_index/pull/7429",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7429.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7429.patch",
            "merged_at": "2023-08-28T01:45:04Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7429/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7429/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7428",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7428/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7428/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7428/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7428",
        "id": 1868638610,
        "node_id": "PR_kwDOIWuq585Y4Axk",
        "number": 7428,
        "title": "[version] bump to v0.8.11.post3",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-27T21:28:47Z",
        "updated_at": "2023-08-28T17:10:36Z",
        "closed_at": "2023-08-27T21:32:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7428",
            "html_url": "https://github.com/run-llama/llama_index/pull/7428",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7428.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7428.patch",
            "merged_at": "2023-08-27T21:32:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7428/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7428/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7427",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7427/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7427/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7427/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7427",
        "id": 1868635195,
        "node_id": "PR_kwDOIWuq585Y4AIW",
        "number": 7427,
        "title": "[version] bump to v0.8.11.post2",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-27T21:15:26Z",
        "updated_at": "2023-08-28T17:10:08Z",
        "closed_at": "2023-08-27T21:19:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7427",
            "html_url": "https://github.com/run-llama/llama_index/pull/7427",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7427.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7427.patch",
            "merged_at": "2023-08-27T21:19:59Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7427/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7427/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7426",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7426/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7426/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7426/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7426",
        "id": 1868628123,
        "node_id": "PR_kwDOIWuq585Y3-x0",
        "number": 7426,
        "title": "[version] Bump to 0.8.11.post1",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-27T20:48:07Z",
        "updated_at": "2023-08-28T17:10:01Z",
        "closed_at": "2023-08-27T21:00:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7426",
            "html_url": "https://github.com/run-llama/llama_index/pull/7426",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7426.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7426.patch",
            "merged_at": "2023-08-27T21:00:34Z"
        },
        "body": "Small fix for BM25 Retriever",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7426/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7426/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7425",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7425/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7425/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7425/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7425",
        "id": 1868566757,
        "node_id": "PR_kwDOIWuq585Y3zCx",
        "number": 7425,
        "title": "add deepeval integration",
        "user": {
            "login": "ColabDog",
            "id": 108557828,
            "node_id": "U_kgDOBnh2BA",
            "avatar_url": "https://avatars.githubusercontent.com/u/108557828?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ColabDog",
            "html_url": "https://github.com/ColabDog",
            "followers_url": "https://api.github.com/users/ColabDog/followers",
            "following_url": "https://api.github.com/users/ColabDog/following{/other_user}",
            "gists_url": "https://api.github.com/users/ColabDog/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ColabDog/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ColabDog/subscriptions",
            "organizations_url": "https://api.github.com/users/ColabDog/orgs",
            "repos_url": "https://api.github.com/users/ColabDog/repos",
            "events_url": "https://api.github.com/users/ColabDog/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ColabDog/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-27T17:14:18Z",
        "updated_at": "2023-08-29T03:41:33Z",
        "closed_at": "2023-08-29T03:41:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7425",
            "html_url": "https://github.com/run-llama/llama_index/pull/7425",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7425.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7425.patch",
            "merged_at": "2023-08-29T03:41:28Z"
        },
        "body": "# Description\r\n\r\nAdding an integration with LlamaIndex - DeepEval is a unit testing framework for LLMs and specifically RAG applications.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [Y] New feature (non-breaking change which adds functionality)\r\n- [Y] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7425/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7425/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7424",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7424/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7424/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7424/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7424",
        "id": 1868545778,
        "node_id": "PR_kwDOIWuq585Y3u_W",
        "number": 7424,
        "title": "[version] bump version to 0.8.11",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-27T16:02:37Z",
        "updated_at": "2023-08-27T16:10:13Z",
        "closed_at": "2023-08-27T16:10:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7424",
            "html_url": "https://github.com/run-llama/llama_index/pull/7424",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7424.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7424.patch",
            "merged_at": "2023-08-27T16:10:13Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7424/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7424/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7423",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7423/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7423/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7423/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7423",
        "id": 1868528984,
        "node_id": "PR_kwDOIWuq585Y3rvM",
        "number": 7423,
        "title": "Managed Index and Vectara implementation",
        "user": {
            "login": "ofermend",
            "id": 1823547,
            "node_id": "MDQ6VXNlcjE4MjM1NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofermend",
            "html_url": "https://github.com/ofermend",
            "followers_url": "https://api.github.com/users/ofermend/followers",
            "following_url": "https://api.github.com/users/ofermend/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofermend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofermend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofermend/subscriptions",
            "organizations_url": "https://api.github.com/users/ofermend/orgs",
            "repos_url": "https://api.github.com/users/ofermend/repos",
            "events_url": "https://api.github.com/users/ofermend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofermend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-27T15:07:51Z",
        "updated_at": "2023-08-29T01:07:44Z",
        "closed_at": "2023-08-29T01:07:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7423",
            "html_url": "https://github.com/run-llama/llama_index/pull/7423",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7423.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7423.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPer discussion with @logan-markewich (see https://github.com/jerryjliu/llama_index/pull/7240) I've created a new type of Index that we call ManagedIndex and Vectara being the first implementation of such index\r\n\r\n- [X] New feature: Implementation of new Managed Index type and Vectara integration. \r\n\r\n# How Has This Been Tested?\r\n- [X] Added new unit/integration tests\r\n- [X] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have added new initial documentation to Managed Index, but pls feel free to add/adapt\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7423/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7423/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7422",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7422/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7422/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7422/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7422",
        "id": 1868506380,
        "node_id": "I_kwDOIWuq585vXyUM",
        "number": 7422,
        "title": "[Feature Request]: Enable to use Metadata extractors for manually created nodes",
        "user": {
            "login": "c64er4ever",
            "id": 125486774,
            "node_id": "U_kgDOB3rGtg",
            "avatar_url": "https://avatars.githubusercontent.com/u/125486774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/c64er4ever",
            "html_url": "https://github.com/c64er4ever",
            "followers_url": "https://api.github.com/users/c64er4ever/followers",
            "following_url": "https://api.github.com/users/c64er4ever/following{/other_user}",
            "gists_url": "https://api.github.com/users/c64er4ever/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/c64er4ever/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/c64er4ever/subscriptions",
            "organizations_url": "https://api.github.com/users/c64er4ever/orgs",
            "repos_url": "https://api.github.com/users/c64er4ever/repos",
            "events_url": "https://api.github.com/users/c64er4ever/events{/privacy}",
            "received_events_url": "https://api.github.com/users/c64er4ever/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-27T13:58:45Z",
        "updated_at": "2023-08-27T20:40:07Z",
        "closed_at": "2023-08-27T20:40:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nHi,\r\nCurrently, If I understand correctly, Metadata extractors can only be used via Node Parsers when splitting a document to nodes.\r\nHowever, sometimes it is not required to use Text Splitters and Node Parsers as the logical splitting to nodes is already known and available. In this case, it seems that it is not possible to use extractors such as SummaryExtractor, QuestionsAnsweredExtractor or KeywordsExtractor, which could be a very nice and useful feature. Will it be possible to use these extractors directly on a TextNode, for example, or using some kind of Node Utils class? \r\nThanks!\r\nGuy\n\n### Reason\n\nToday, Metadata extractors can only be used via Node Parsers when splitting a document to nodes.\n\n### Value of Feature\n\nExisting cool functionality can be used also for manually created nodes.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7422/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7422/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7421",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7421/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7421/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7421/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7421",
        "id": 1868469708,
        "node_id": "PR_kwDOIWuq585Y3gHB",
        "number": 7421,
        "title": "Fix FalkorDB demo link",
        "user": {
            "login": "gkorland",
            "id": 753206,
            "node_id": "MDQ6VXNlcjc1MzIwNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/753206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gkorland",
            "html_url": "https://github.com/gkorland",
            "followers_url": "https://api.github.com/users/gkorland/followers",
            "following_url": "https://api.github.com/users/gkorland/following{/other_user}",
            "gists_url": "https://api.github.com/users/gkorland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gkorland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gkorland/subscriptions",
            "organizations_url": "https://api.github.com/users/gkorland/orgs",
            "repos_url": "https://api.github.com/users/gkorland/repos",
            "events_url": "https://api.github.com/users/gkorland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gkorland/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-27T11:59:17Z",
        "updated_at": "2023-08-30T11:21:39Z",
        "closed_at": "2023-08-27T20:43:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7421",
            "html_url": "https://github.com/run-llama/llama_index/pull/7421",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7421.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7421.patch",
            "merged_at": "2023-08-27T20:43:06Z"
        },
        "body": "# Description\r\n\r\nFix FalkorDB demo link in the docs\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7421/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7421/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7420",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7420/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7420/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7420/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7420",
        "id": 1868389427,
        "node_id": "PR_kwDOIWuq585Y3QpI",
        "number": 7420,
        "title": "AutoMergingRetriever",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-27T07:13:30Z",
        "updated_at": "2023-08-27T16:00:53Z",
        "closed_at": "2023-08-27T16:00:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7420",
            "html_url": "https://github.com/run-llama/llama_index/pull/7420",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7420.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7420.patch",
            "merged_at": "2023-08-27T16:00:52Z"
        },
        "body": "full credits to @jxnl\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7420/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7420/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7419",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7419/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7419/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7419/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7419",
        "id": 1868343084,
        "node_id": "I_kwDOIWuq585vXKcs",
        "number": 7419,
        "title": "[Feature Request]: CodeSplitter will produce blocks of code that do not contain their block scope",
        "user": {
            "login": "ryanpeach",
            "id": 14838729,
            "node_id": "MDQ6VXNlcjE0ODM4NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14838729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanpeach",
            "html_url": "https://github.com/ryanpeach",
            "followers_url": "https://api.github.com/users/ryanpeach/followers",
            "following_url": "https://api.github.com/users/ryanpeach/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanpeach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanpeach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanpeach/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanpeach/orgs",
            "repos_url": "https://api.github.com/users/ryanpeach/repos",
            "events_url": "https://api.github.com/users/ryanpeach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanpeach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-27T03:39:17Z",
        "updated_at": "2023-12-04T16:01:52Z",
        "closed_at": "2023-12-04T16:01:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nThe current implementation of the `CodeSplitter` class outputs code chunks that lack their enclosing block scopes, such as function definitions, if-else statements, and loops. This absence makes it challenging for the language model to understand or analyze the individual code chunks in isolation.\r\n\r\n### Examples\r\n\r\nGiven some code\r\n\r\n```python\r\nclass Foo:\r\n  a: int = 5\r\n  def bar(self):\r\n    ...\r\n    \r\n  def foo(self):\r\n    ...\r\n```\r\n\r\nCode splitter might produce the following\r\n\r\n```python\r\nclass Foo:\r\n  a: int = 5\r\n```\r\n\r\n```python\r\n  def bar(self):\r\n    ...\r\n```\r\n\r\n```python\r\n  def foo(self):\r\n    ...\r\n```\r\n\r\nHowever, the last 2 chunks are not particularly useful as documents, let alone as text chunks, unless they contain metadata relating to the class they are a member of. One way we could fix this is with some kind of MetadataExtractor, but I think it's better to fix this at the TextSplitter level.\r\n\r\nWhat I suggest is producing the following chunks instead:\r\n\r\n```python\r\nclass Foo:\r\n  a: int = 5\r\n  ...\r\n```\r\n\r\n```python\r\nclass Foo:\r\n  ...\r\n  def bar(self):\r\n    ...\r\n```\r\n\r\n```python\r\nclass Foo:\r\n  ...\r\n  def foo(self):\r\n    ...\r\n```\r\n\r\nProviding all contexts above the block, plus any language-specific indicators for skipping some code (like elipses, or a comment indicating code is missing).\r\n\r\nThis should produce an effect similar to Sticky Scroll in VSCode, which IMO is exactly what the LLM needs.\r\n\r\nhttps://devblogs.microsoft.com/visualstudio/sticky-scroll-now-in-preview/\r\n\r\nThis can then be fed to a MetadataExtractor KeywordExtractor to get all elements of the context as metadata, or to a KeywordIndex or any other manner of index to link code chunks together.\r\n\r\n# Discussion Topics\r\n\r\n1. Multilingual support\r\n2. What node types constitute a scope change\r\n3. What signatures are appropriate to which scopes in which languages\r\n4. Should we include closing brackets in languages that use brackets",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7419/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7419/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7418",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7418/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7418/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7418/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7418",
        "id": 1868340774,
        "node_id": "PR_kwDOIWuq585Y3Hb2",
        "number": 7418,
        "title": "An example of sticky scrolling for codesplitting",
        "user": {
            "login": "ryanpeach",
            "id": 14838729,
            "node_id": "MDQ6VXNlcjE0ODM4NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14838729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanpeach",
            "html_url": "https://github.com/ryanpeach",
            "followers_url": "https://api.github.com/users/ryanpeach/followers",
            "following_url": "https://api.github.com/users/ryanpeach/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanpeach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanpeach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanpeach/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanpeach/orgs",
            "repos_url": "https://api.github.com/users/ryanpeach/repos",
            "events_url": "https://api.github.com/users/ryanpeach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanpeach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-27T03:24:30Z",
        "updated_at": "2023-08-29T00:37:38Z",
        "closed_at": "2023-08-29T00:37:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7418",
            "html_url": "https://github.com/run-llama/llama_index/pull/7418",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7418.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7418.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nThis PR updates the CodeSplitter class to improve how code is split when it's inside a context, such as a function or a loop. Previously, the context would be lost when the code was split, making the chunks hard to understand. The update fixes this by including the 'signature' or 'header' of the context in each chunk where it is relevant.\r\n\r\nFixes #7419\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7418/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7418/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7417",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7417/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7417/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7417/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7417",
        "id": 1868322606,
        "node_id": "I_kwDOIWuq585vXFcu",
        "number": 7417,
        "title": "[Bug]: Module not found",
        "user": {
            "login": "deboboy",
            "id": 6821009,
            "node_id": "MDQ6VXNlcjY4MjEwMDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6821009?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deboboy",
            "html_url": "https://github.com/deboboy",
            "followers_url": "https://api.github.com/users/deboboy/followers",
            "following_url": "https://api.github.com/users/deboboy/following{/other_user}",
            "gists_url": "https://api.github.com/users/deboboy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deboboy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deboboy/subscriptions",
            "organizations_url": "https://api.github.com/users/deboboy/orgs",
            "repos_url": "https://api.github.com/users/deboboy/repos",
            "events_url": "https://api.github.com/users/deboboy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deboboy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-08-27T01:41:36Z",
        "updated_at": "2023-10-27T06:47:49Z",
        "closed_at": "2023-10-27T06:47:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nGetting this error trying the Google Calendar agent example:\r\n\r\nModuleNotFoundError: No module named 'llama_index'\n\n### Version\n\n0.7.8\n\n### Steps to Reproduce\n\nDeployment via streamlit; here\u2019s the requirements.txt:\r\npip install llama-index==0.7.8 llama-hub\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7417/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7417/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7416",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7416/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7416/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7416/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7416",
        "id": 1868272558,
        "node_id": "PR_kwDOIWuq585Y26_T",
        "number": 7416,
        "title": "[version] bump version to 0.8.10.post1",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-26T21:27:22Z",
        "updated_at": "2023-08-26T23:17:56Z",
        "closed_at": "2023-08-26T23:17:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7416",
            "html_url": "https://github.com/run-llama/llama_index/pull/7416",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7416.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7416.patch",
            "merged_at": "2023-08-26T23:17:55Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7416/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7416/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7415",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7415/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7415/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7415/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7415",
        "id": 1868270508,
        "node_id": "PR_kwDOIWuq585Y26nN",
        "number": 7415,
        "title": "causing an error on llama-hub",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-26T21:17:17Z",
        "updated_at": "2023-08-26T21:25:51Z",
        "closed_at": "2023-08-26T21:25:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7415",
            "html_url": "https://github.com/run-llama/llama_index/pull/7415",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7415.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7415.patch",
            "merged_at": "2023-08-26T21:25:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7415/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7415/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7414",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7414/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7414/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7414/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7414",
        "id": 1868252203,
        "node_id": "I_kwDOIWuq585vW0Qr",
        "number": 7414,
        "title": "Editing Document content",
        "user": {
            "login": "erlebach",
            "id": 324708,
            "node_id": "MDQ6VXNlcjMyNDcwOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/324708?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/erlebach",
            "html_url": "https://github.com/erlebach",
            "followers_url": "https://api.github.com/users/erlebach/followers",
            "following_url": "https://api.github.com/users/erlebach/following{/other_user}",
            "gists_url": "https://api.github.com/users/erlebach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/erlebach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/erlebach/subscriptions",
            "organizations_url": "https://api.github.com/users/erlebach/orgs",
            "repos_url": "https://api.github.com/users/erlebach/repos",
            "events_url": "https://api.github.com/users/erlebach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/erlebach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-26T19:53:23Z",
        "updated_at": "2023-08-26T22:58:27Z",
        "closed_at": "2023-08-26T22:58:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI generated a `Document` , stored in a variable `doc`. Its text content is `doc.get_content()`. I wish to run `unidecode` to handle unicode issues. How can I update the textual component of `Document` without affecting metadata and other information?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7414/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7414/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7413",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7413/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7413/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7413/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7413",
        "id": 1868172529,
        "node_id": "I_kwDOIWuq585vWgzx",
        "number": 7413,
        "title": "[Question]: Using SimpleDirectoryReader with a pdf loader from the hub",
        "user": {
            "login": "erlebach",
            "id": 324708,
            "node_id": "MDQ6VXNlcjMyNDcwOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/324708?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/erlebach",
            "html_url": "https://github.com/erlebach",
            "followers_url": "https://api.github.com/users/erlebach/followers",
            "following_url": "https://api.github.com/users/erlebach/following{/other_user}",
            "gists_url": "https://api.github.com/users/erlebach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/erlebach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/erlebach/subscriptions",
            "organizations_url": "https://api.github.com/users/erlebach/orgs",
            "repos_url": "https://api.github.com/users/erlebach/repos",
            "events_url": "https://api.github.com/users/erlebach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/erlebach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-26T16:54:47Z",
        "updated_at": "2023-08-26T17:33:30Z",
        "closed_at": "2023-08-26T17:33:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI am seeking to user the `file_extractor` argument of `SimpleDirectoryReader` to experiment with different pdf loaders. I searched for an example of how to do this, but could not find any. Could you please provide a link to a MWE? Here is what I have coded up so far: \r\n```\r\n\r\nfrom llama_index import  SimpleDirectoryReader\r\nfrom llama_index import download_loader\r\n\r\ndef pymupdf_reader():\r\n    # Pymuloader = download_loader(\"PyMuPDF\")\r\n    # loader = Pymuloader()\r\n\r\n    image_parser = llama_index.readers.file.base.ImageParser(\r\n        keep_image=True, parse_text=False\r\n    )\r\n    PyMuPDFReader = download_loader(\"PyMuPDFReader\")\r\n    loader = PyMuPDFReader()\r\n    file_extractor = llama_index.readers.file.base.DEFAULT_FILE_EXTRACTOR\r\n    file_extractor.update(    # >>>>> Probably where some changes need to be made.\r\n        {\r\n            \".pdf\": \r\n        }\r\n    )\r\n\r\n    folder = \"data/data_mining\"\r\n    documents = SimpleDirectoryReader(\r\n        input_dir=folder,\r\n        required_exts=[\".pdf\"],\r\n        filename_as_id=True,\r\n        file_extractor=file_extractor,\r\n    )\r\n    documents = loader.load_data()\r\n```\r\n\r\nThanks!  Gordon.\r\n    ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7413/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7413/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7412",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7412/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7412/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7412/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7412",
        "id": 1867991646,
        "node_id": "PR_kwDOIWuq585Y2EeZ",
        "number": 7412,
        "title": "Add to FalkorDB notebook the outputs",
        "user": {
            "login": "gkorland",
            "id": 753206,
            "node_id": "MDQ6VXNlcjc1MzIwNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/753206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gkorland",
            "html_url": "https://github.com/gkorland",
            "followers_url": "https://api.github.com/users/gkorland/followers",
            "following_url": "https://api.github.com/users/gkorland/following{/other_user}",
            "gists_url": "https://api.github.com/users/gkorland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gkorland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gkorland/subscriptions",
            "organizations_url": "https://api.github.com/users/gkorland/orgs",
            "repos_url": "https://api.github.com/users/gkorland/repos",
            "events_url": "https://api.github.com/users/gkorland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gkorland/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-26T09:07:31Z",
        "updated_at": "2023-08-27T11:47:21Z",
        "closed_at": "2023-08-26T22:58:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7412",
            "html_url": "https://github.com/run-llama/llama_index/pull/7412",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7412.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7412.patch",
            "merged_at": "2023-08-26T22:58:54Z"
        },
        "body": "# Description\r\nAdd to FalkorDB notebook the outputs\r\n\r\n## Type of Change\r\n\r\nExtend notebook \r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] My changes generate no new warnings\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7412/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7412/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7411",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7411/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7411/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7411/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7411",
        "id": 1867969539,
        "node_id": "PR_kwDOIWuq585Y1_3_",
        "number": 7411,
        "title": "add knowledge graph tutorial link",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-26T08:11:21Z",
        "updated_at": "2023-08-26T08:25:59Z",
        "closed_at": "2023-08-26T08:25:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7411",
            "html_url": "https://github.com/run-llama/llama_index/pull/7411",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7411.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7411.patch",
            "merged_at": "2023-08-26T08:25:58Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7411/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7411/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7410",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7410/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7410/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7410/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7410",
        "id": 1867909477,
        "node_id": "I_kwDOIWuq585vVgll",
        "number": 7410,
        "title": "[Question]: responsing very slow",
        "user": {
            "login": "axz91",
            "id": 100378946,
            "node_id": "U_kgDOBfupQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/100378946?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axz91",
            "html_url": "https://github.com/axz91",
            "followers_url": "https://api.github.com/users/axz91/followers",
            "following_url": "https://api.github.com/users/axz91/following{/other_user}",
            "gists_url": "https://api.github.com/users/axz91/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axz91/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axz91/subscriptions",
            "organizations_url": "https://api.github.com/users/axz91/orgs",
            "repos_url": "https://api.github.com/users/axz91/repos",
            "events_url": "https://api.github.com/users/axz91/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axz91/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-26T05:08:41Z",
        "updated_at": "2023-08-27T22:21:00Z",
        "closed_at": "2023-08-27T20:53:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nhttps://huggingface.co/spaces/AXZ91/p53\r\nNow it takes more than 10 s to return the response, i use the SupabaseVectorStore, any issues there? thanks! ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7410/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7410/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7409",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7409/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7409/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7409/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7409",
        "id": 1867896111,
        "node_id": "PR_kwDOIWuq585Y1xBn",
        "number": 7409,
        "title": "Fix small typo in docs",
        "user": {
            "login": "tylerfullmer",
            "id": 136928162,
            "node_id": "U_kgDOCClbog",
            "avatar_url": "https://avatars.githubusercontent.com/u/136928162?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tylerfullmer",
            "html_url": "https://github.com/tylerfullmer",
            "followers_url": "https://api.github.com/users/tylerfullmer/followers",
            "following_url": "https://api.github.com/users/tylerfullmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/tylerfullmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tylerfullmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tylerfullmer/subscriptions",
            "organizations_url": "https://api.github.com/users/tylerfullmer/orgs",
            "repos_url": "https://api.github.com/users/tylerfullmer/repos",
            "events_url": "https://api.github.com/users/tylerfullmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tylerfullmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-26T04:20:41Z",
        "updated_at": "2023-08-26T04:26:09Z",
        "closed_at": "2023-08-26T04:26:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7409",
            "html_url": "https://github.com/run-llama/llama_index/pull/7409",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7409.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7409.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nYeah... I contribute to open source \ud83e\udee1\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7409/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7409/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7408",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7408/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7408/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7408/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7408",
        "id": 1867823163,
        "node_id": "PR_kwDOIWuq585Y1hw1",
        "number": 7408,
        "title": "Logan/bump version 0.8.10",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-26T00:41:37Z",
        "updated_at": "2023-08-26T01:29:38Z",
        "closed_at": "2023-08-26T01:29:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7408",
            "html_url": "https://github.com/run-llama/llama_index/pull/7408",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7408.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7408.patch",
            "merged_at": "2023-08-26T01:29:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7408/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7408/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7407",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7407/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7407/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7407/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7407",
        "id": 1867800138,
        "node_id": "PR_kwDOIWuq585Y1c6h",
        "number": 7407,
        "title": "patch entity extractor",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-25T23:59:37Z",
        "updated_at": "2023-08-26T00:08:55Z",
        "closed_at": "2023-08-26T00:08:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7407",
            "html_url": "https://github.com/run-llama/llama_index/pull/7407",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7407.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7407.patch",
            "merged_at": "2023-08-26T00:08:54Z"
        },
        "body": "# Description\r\n\r\nEntity extractor had a few small bugs with pydantic, whoops!\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7405\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested in terminal\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7407/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7407/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7406",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7406/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7406/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7406/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7406",
        "id": 1867760596,
        "node_id": "PR_kwDOIWuq585Y1UXZ",
        "number": 7406,
        "title": "add metadata extract notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-25T22:48:48Z",
        "updated_at": "2023-08-26T00:29:47Z",
        "closed_at": "2023-08-26T00:29:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7406",
            "html_url": "https://github.com/run-llama/llama_index/pull/7406",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7406.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7406.patch",
            "merged_at": "2023-08-26T00:29:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7406/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7406/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7405",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7405/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7405/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7405/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7405",
        "id": 1867702003,
        "node_id": "I_kwDOIWuq585vUt7z",
        "number": 7405,
        "title": "[Bug]:   File \"pydantic\\main.py\", line 357, in pydantic.main.BaseModel.__setattr__ ValueError: \"EntityExtractor\" object has no field \"_model\"",
        "user": {
            "login": "kylemassimilian",
            "id": 31603204,
            "node_id": "MDQ6VXNlcjMxNjAzMjA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/31603204?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylemassimilian",
            "html_url": "https://github.com/kylemassimilian",
            "followers_url": "https://api.github.com/users/kylemassimilian/followers",
            "following_url": "https://api.github.com/users/kylemassimilian/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylemassimilian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylemassimilian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylemassimilian/subscriptions",
            "organizations_url": "https://api.github.com/users/kylemassimilian/orgs",
            "repos_url": "https://api.github.com/users/kylemassimilian/repos",
            "events_url": "https://api.github.com/users/kylemassimilian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylemassimilian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-25T21:23:23Z",
        "updated_at": "2023-08-29T16:18:48Z",
        "closed_at": "2023-08-26T00:08:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI'm testing out some metadata extraction methods and ran into trouble w/ the EntityExtractor. I believe I'm following the example in the docs pretty closely:\r\n\r\n[https://gpt-index.readthedocs.io/en/stable/examples/metadata_extraction/EntityExtractionClimate.html](url)\r\n\r\nI noticed there might be a syntax issue in metadata_extractors.py and thought  `_model: Any = PrivateAttr`  should be   `_model: Any = PrivateAttr()` but not totally sure:\r\n\r\n```\r\nclass EntityExtractor(MetadataFeatureExtractor):\r\n    \"\"\"\r\n    Entity extractor. Extracts `entities` into a metadata field using a default model\r\n    `tomaarsen/span-marker-mbert-base-multinerd` and the SpanMarker library.\r\n\r\n    Install SpanMarker with `pip install span-marker`.\r\n    \"\"\"\r\n\r\n    model_name: str = Field(\r\n        default=DEFAULT_ENTITY_MODEL,\r\n        description=\"The model name of the SpanMarker model to use.\",\r\n    )\r\n    prediction_threshold: float = Field(\r\n        default=0.5, description=\"The confidence threshold for accepting predictions.\"\r\n    )\r\n    span_joiner: str = Field(description=\"The seperator beween entity names.\")\r\n    label_entities: bool = Field(\r\n        default=False, description=\"Include entity class labels or not.\"\r\n    )\r\n    device: Optional[str] = Field(\r\n        default=None, description=\"Device to run model on, i.e. 'cuda', 'cpu'\"\r\n    )\r\n    entity_map: Dict[str, str] = Field(\r\n        default_factory=dict,\r\n        description=\"Mapping of entity class names to usable names.\",\r\n    )\r\n\r\n    _tokenizer: Callable = PrivateAttr()\r\n    _model: Any = PrivateAttr\r\n```\r\n\r\nWhen I add the parenthesis, however, I get a different error, so I can't say I'm confident in the alteration.\r\n\r\n```\r\n(venv) PS C:\\Users\\Kyle\\DEV\\Satori\\IX MVP\\scripts> python extract_meta_test1.py\r\nC:\\Users\\Kyle\\DEV\\Satori\\IX MVP\\venv\\lib\\site-packages\\accelerate\\utils\\dataclasses.py:29: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\r\n  from distutils.util import strtobool\r\nYou are resizing the embedding layer without providing a `pad_to_multiple_of` parameter. This means that the new embeding dimension will be 119549. This might \r\ninduce some performance reduction as *Tensor Cores* will not be available. For more details  about this, or help on choosing the correct value for resizing, refer to this guide: https://docs.nvidia.com/deeplearning/performance/dl-performance-matrix-multiplication/index.html#requirements-tc\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Kyle\\DEV\\Satori\\IX MVP\\scripts\\extract_meta_test1.py\", line 134, in <module>\r\n    extract_metadata()\r\n  File \"C:\\Users\\Kyle\\DEV\\Satori\\IX MVP\\scripts\\extract_meta_test1.py\", line 118, in extract_metadata\r\n    EntityExtractor(prediction_threshold=0.5, label_entities=False, device=\"cpu\"),\r\n  File \"C:\\Users\\Kyle\\DEV\\Satori\\IX MVP\\venv\\lib\\site-packages\\llama_index\\node_parser\\extractors\\metadata_extractors.py\", line 532, in __init__\r\n    super().__init__(\r\n  File \"pydantic\\main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for EntityExtractor\r\nentity_map\r\n  none is not an allowed value (type=type_error.none.not_allowed)\r\n```\r\n\r\n### Version\r\n\r\n0.8.9\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\ndef extract_metadata():\r\n    llm = OpenAI(model=\"gpt-3.5-turbo\", temperature=0.1)\r\n    documents = SimpleDirectoryReader(\"Data\").load_data()\r\n\r\n    text_splitter = TokenTextSplitter(separator=\" \", chunk_size=1024, chunk_overlap=128)\r\n    \r\n    \r\n    metadata_extractor = MetadataExtractor(\r\n      extractors=[\r\n            #TitleExtractor(nodes=5, llm=llm),\r\n            #QuestionsAnsweredExtractor(questions=3, llm=llm),\r\n            EntityExtractor(prediction_threshold=0.5, label_entities=False, device=\"cpu\"),\r\n            #SummaryExtractor(summaries=[\"prev\", \"self\"], llm=llm),\r\n            #KeywordExtractor(keywords=2, llm=llm),\r\n            #DateExtractor()\r\n            #CustomExtractor()\r\n      ])\r\n      \r\n    node_parser = SimpleNodeParser(\r\n      text_splitter=text_splitter, metadata_extractor=metadata_extractor)\r\n    \r\n    nodes = node_parser.get_nodes_from_documents(documents)\r\n    \r\n    #for node in nodes:\r\n    print(nodes[0].metadata)\r\n    return nodes\r\n```\r\n\r\nTried with both `EntityExtractor(prediction_threshold=0.5, label_entities=False, device=\"cpu\"` and `EntityExtractor(prediction_threshold=0.5)`\r\n\r\n\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n(venv) PS C:\\Users\\Kyle\\DEV\\Satori\\IX MVP\\scripts> python extract_meta_test1.py\r\nC:\\Users\\Kyle\\DEV\\Satori\\IX MVP\\venv\\lib\\site-packages\\accelerate\\utils\\dataclasses.py:29: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\r\n  from distutils.util import strtobool\r\nYou are resizing the embedding layer without providing a `pad_to_multiple_of` parameter. This means that the new embeding dimension will be 119549. This might \r\ninduce some performance reduction as *Tensor Cores* will not be available. For more details  about this, or help on choosing the correct value for resizing, refer to this guide: https://docs.nvidia.com/deeplearning/performance/dl-performance-matrix-multiplication/index.html#requirements-tc\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Kyle\\DEV\\Satori\\IX MVP\\scripts\\extract_meta_test1.py\", line 134, in <module>\r\n    extract_metadata()\r\n  File \"C:\\Users\\Kyle\\DEV\\Satori\\IX MVP\\scripts\\extract_meta_test1.py\", line 118, in extract_metadata\r\n    EntityExtractor(prediction_threshold=0.5, label_entities=False, device=\"cpu\"),\r\n  File \"C:\\Users\\Kyle\\DEV\\Satori\\IX MVP\\venv\\lib\\site-packages\\llama_index\\node_parser\\extractors\\metadata_extractors.py\", line 522, in __init__\r\n    self._model = SpanMarkerModel.from_pretrained(model_name)\r\n  File \"pydantic\\main.py\", line 357, in pydantic.main.BaseModel.__setattr__\r\nValueError: \"EntityExtractor\" object has no field \"_model\"\r\n```\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7405/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7405/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7404",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7404/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7404/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7404/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7404",
        "id": 1867545165,
        "node_id": "PR_kwDOIWuq585Y0lpU",
        "number": 7404,
        "title": "refine metadata extractor modules",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-25T18:55:10Z",
        "updated_at": "2023-08-25T20:05:49Z",
        "closed_at": "2023-08-25T20:05:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7404",
            "html_url": "https://github.com/run-llama/llama_index/pull/7404",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7404.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7404.patch",
            "merged_at": "2023-08-25T20:05:48Z"
        },
        "body": "- add `show_progress`\r\n- add the ability to customize `metadata_mode` - so that each extractor can have view of raw text or processed text\r\n- add `in_place` arg that defaults to True. If toggled to False we just deepcopy the nodes instead of modifying in place (can help with better experimentation) \r\n\r\n- add extractors to api reference in docs",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7404/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7404/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7403",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7403/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7403/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7403/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7403",
        "id": 1867525180,
        "node_id": "I_kwDOIWuq585vUCw8",
        "number": 7403,
        "title": "[Bug]: Empty source_nodes from response",
        "user": {
            "login": "hwuiwon",
            "id": 15950753,
            "node_id": "MDQ6VXNlcjE1OTUwNzUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/15950753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwuiwon",
            "html_url": "https://github.com/hwuiwon",
            "followers_url": "https://api.github.com/users/hwuiwon/followers",
            "following_url": "https://api.github.com/users/hwuiwon/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwuiwon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwuiwon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwuiwon/subscriptions",
            "organizations_url": "https://api.github.com/users/hwuiwon/orgs",
            "repos_url": "https://api.github.com/users/hwuiwon/repos",
            "events_url": "https://api.github.com/users/hwuiwon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwuiwon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-08-25T18:38:25Z",
        "updated_at": "2023-08-28T13:49:23Z",
        "closed_at": "2023-08-27T20:51:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\n`response = await chat_engine.achat(message=user_text)` will return `AgentChatResponse` that only contains text. `sources` and `source_nodes` are empty.\r\n\r\n### Version\r\n\r\n0.8.5.post2\r\n\r\n### Steps to Reproduce\r\n\r\nNodes are first generated with a metadata below.\r\n```python\r\n{\r\n    \"file_id\": file_row[\"data\"].id,\r\n    \"process_date\": self.process_date,\r\n}\r\n```\r\n\r\nThen are stored to VectorStore with the code below.\r\n```python\r\nstorage_context = StorageContext.from_defaults(\r\n    vector_store=MilvusVectorStore(\r\n        collection_name=org_id,\r\n        host=ZILLIZ_CLOUD_HOST,\r\n        port=ZILLIZ_CLOUD_PORT,\r\n        user=ZILLIZ_CLOUD_USER,\r\n        password=ZILLIZ_CLOUD_PASSWORD,\r\n        use_secure=True if PRISM_ENV == \"PROD\" else False,\r\n    ),\r\n)\r\n\r\nvector_index = VectorStoreIndex(\r\n    nodes=nodes, storage_context=self.storage_context, show_progress=True\r\n)\r\n```\r\n\r\nThen I load the VectorIndex from the VectorStore using the code below.\r\n```python\r\nvector_index = VectorStoreIndex.from_vector_store(storage_context.vector_store)\r\n```\r\n\r\nThen I create the chat engine using the following and use `.achat()` to generate response.\r\n\r\n```python\r\ntoken_counter = TokenCountingHandler(\r\n    tokenizer=tiktoken.encoding_for_model(DEFAULT_OPENAI_MODEL).encode,\r\n    verbose=True,\r\n)\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n    llm=OpenAI(\r\n        model=DEFAULT_OPENAI_MODEL,\r\n        user=self.org_id,\r\n        temperature=0.1,\r\n        max_retries=3,\r\n    ),\r\n    chunk_size=1024,\r\n    callback_manager=CallbackManager([token_counter]),\r\n)\r\n\r\nchat_engine = vector_index.as_chat_engine(\r\n    similarity_top_k=10,\r\n    service_context=service_context,\r\n    chat_mode=ChatMode.REACT,\r\n)\r\n\r\nresponse = await chat_engine.achat(message=user_text)\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n2023-08-25 17:53:24.054 | INFO  | query.py:74 query - response=Private equity refers to investments made in privately-held companies or assets that are not publicly traded on stock exchanges. Private equity firms raise capital from institutional investors and use that capital to acquire ownership stakes in companies. They aim to improve the performance and value of the companies they invest in and eventually sell their ownership stake for a profit. Private equity investments are known for their longer holding periods and active involvement in the management and operations of the companies.\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7403/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7403/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7402",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7402/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7402/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7402/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7402",
        "id": 1866845986,
        "node_id": "PR_kwDOIWuq585YyMnU",
        "number": 7402,
        "title": "chore: add int VID for NebulaGraph support, schema comment parsing",
        "user": {
            "login": "wey-gu",
            "id": 1651790,
            "node_id": "MDQ6VXNlcjE2NTE3OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1651790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wey-gu",
            "html_url": "https://github.com/wey-gu",
            "followers_url": "https://api.github.com/users/wey-gu/followers",
            "following_url": "https://api.github.com/users/wey-gu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wey-gu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wey-gu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wey-gu/subscriptions",
            "organizations_url": "https://api.github.com/users/wey-gu/orgs",
            "repos_url": "https://api.github.com/users/wey-gu/repos",
            "events_url": "https://api.github.com/users/wey-gu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wey-gu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T11:08:50Z",
        "updated_at": "2023-08-25T16:34:59Z",
        "closed_at": "2023-08-25T16:34:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7402",
            "html_url": "https://github.com/run-llama/llama_index/pull/7402",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7402.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7402.patch",
            "merged_at": "2023-08-25T16:34:58Z"
        },
        "body": "# Description\r\n\r\n- This small change helps those non-KG graph data to be enabled by GraphRAG and Text2Cypher, where the vid could be numeric and even typed as int64. Previously it assumed we were running a KG that vertex ID was always string.\r\n- Add comment fields in Schema to be parsed, this helped the case when schema field name are short, but comment with rich information in text2cypher\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] ~~Added~~ new notebook (that tests end-to-end) [here](https://colab.research.google.com/drive/1Py2JGZHAy70ktreXP4G4mvhVRKQ_nrrf?usp=sharing)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7402/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7402/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7401",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7401/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7401/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7401/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7401",
        "id": 1866703666,
        "node_id": "PR_kwDOIWuq585YxtOO",
        "number": 7401,
        "title": "Integrate RunGPT For LLMs",
        "user": {
            "login": "selmiss",
            "id": 90488417,
            "node_id": "MDQ6VXNlcjkwNDg4NDE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/90488417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/selmiss",
            "html_url": "https://github.com/selmiss",
            "followers_url": "https://api.github.com/users/selmiss/followers",
            "following_url": "https://api.github.com/users/selmiss/following{/other_user}",
            "gists_url": "https://api.github.com/users/selmiss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/selmiss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/selmiss/subscriptions",
            "organizations_url": "https://api.github.com/users/selmiss/orgs",
            "repos_url": "https://api.github.com/users/selmiss/repos",
            "events_url": "https://api.github.com/users/selmiss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/selmiss/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-25T09:36:03Z",
        "updated_at": "2023-08-29T03:58:42Z",
        "closed_at": "2023-08-29T03:58:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7401",
            "html_url": "https://github.com/run-llama/llama_index/pull/7401",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7401.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7401.patch",
            "merged_at": "2023-08-29T03:58:33Z"
        },
        "body": "# Description\r\n\r\n**RunGPT** is a wonderful open-source LLM model serving framework belong to JinaAI company. It is designed to simplify the deployment and management of large language models. LlamaIndex can do use this kind of model service to accelerate model deployment and enhance the user experience using llm service.\r\n\r\nIntegrate RunGPT through using class LLM at llama_index/llms/rungpt.py\r\n\r\nAdd required Jupter notebooks at docs/examples/llm/rungpt.ipynb\r\n\r\nAdd required unit test at tests/llms/test_rungpt.py\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nInstall necessary packages such as run-gpt-torch, and run a simple command to start a service of large language model localhost. The detail tutorial could be found in docs/examples/llm/rungpt.ipynb.\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x]  I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7401/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7401/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7400",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7400/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7400/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7400/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7400",
        "id": 1866611900,
        "node_id": "PR_kwDOIWuq585YxZVW",
        "number": 7400,
        "title": "Integrate RunGPT For LLM Choices",
        "user": {
            "login": "selmiss",
            "id": 90488417,
            "node_id": "MDQ6VXNlcjkwNDg4NDE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/90488417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/selmiss",
            "html_url": "https://github.com/selmiss",
            "followers_url": "https://api.github.com/users/selmiss/followers",
            "following_url": "https://api.github.com/users/selmiss/following{/other_user}",
            "gists_url": "https://api.github.com/users/selmiss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/selmiss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/selmiss/subscriptions",
            "organizations_url": "https://api.github.com/users/selmiss/orgs",
            "repos_url": "https://api.github.com/users/selmiss/repos",
            "events_url": "https://api.github.com/users/selmiss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/selmiss/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T08:36:29Z",
        "updated_at": "2023-08-25T09:25:02Z",
        "closed_at": "2023-08-25T09:24:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7400",
            "html_url": "https://github.com/run-llama/llama_index/pull/7400",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7400.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7400.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\n**RunGPT** is a wonderful open-source LLM model serving framework belong to JinaAI company. It is designed to simplify the deployment and management of large language models. LlamaIndex can do use this kind of model service to accelerate model deployment and enhance the user experience using llm service.\r\n\r\nIntegrate RunGPT  through using class LLM at llama_index/llms/rungpt.py\r\n\r\nAdd required Jupter notebooks at docs/examples/llm/rungpt.ipynb\r\n\r\nAdd required unit test at tests/llms/test_rungpt.py\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nInstall necessary packages such as run-gpt-torch, and run a simple command to start a service of  large language model localhost. The detail tutorial could be found in  docs/examples/llm/rungpt.ipynb.\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7400/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7400/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7399",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7399/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7399/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7399/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7399",
        "id": 1866381218,
        "node_id": "PR_kwDOIWuq585YwmmT",
        "number": 7399,
        "title": "flesh out integration docs ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-25T06:11:59Z",
        "updated_at": "2023-08-25T06:28:51Z",
        "closed_at": "2023-08-25T06:28:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7399",
            "html_url": "https://github.com/run-llama/llama_index/pull/7399",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7399.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7399.patch",
            "merged_at": "2023-08-25T06:28:50Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7399/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7399/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7398",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7398/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7398/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7398/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7398",
        "id": 1866190064,
        "node_id": "PR_kwDOIWuq585Yv8uk",
        "number": 7398,
        "title": "nit: add kg graph nb to docs ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-25T03:02:12Z",
        "updated_at": "2023-08-28T17:10:56Z",
        "closed_at": "2023-08-25T03:06:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7398",
            "html_url": "https://github.com/run-llama/llama_index/pull/7398",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7398.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7398.patch",
            "merged_at": "2023-08-25T03:06:23Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7398/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7398/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7397",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7397/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7397/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7397/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7397",
        "id": 1866041911,
        "node_id": "I_kwDOIWuq585vOYo3",
        "number": 7397,
        "title": "[Question]: How to set vector length for WeaviateVectorStore?",
        "user": {
            "login": "chrisammon3000",
            "id": 20426965,
            "node_id": "MDQ6VXNlcjIwNDI2OTY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/20426965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisammon3000",
            "html_url": "https://github.com/chrisammon3000",
            "followers_url": "https://api.github.com/users/chrisammon3000/followers",
            "following_url": "https://api.github.com/users/chrisammon3000/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisammon3000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisammon3000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisammon3000/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisammon3000/orgs",
            "repos_url": "https://api.github.com/users/chrisammon3000/repos",
            "events_url": "https://api.github.com/users/chrisammon3000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisammon3000/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-08-25T00:01:13Z",
        "updated_at": "2023-08-27T20:54:33Z",
        "closed_at": "2023-08-27T20:54:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nWhile using the `WeaviateVectorStore` and Weaviate with the `text2vec-contextionary` module an error occurs:\r\n```bash\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nCell In[23], line 2\r\n      1 query_engine = index.as_query_engine()\r\n----> 2 response = query_engine.query(\"What is a good technique for doing pushups?\")\r\n      3 print(response)\r\n\r\nFile [~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/indices/query/base.py:23](https://file+.vscode-resource.vscode-cdn.net/Users/ammon/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/notebooks/llm-integration/~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/indices/query/base.py:23), in BaseQueryEngine.query(self, str_or_query_bundle)\r\n     21 if isinstance(str_or_query_bundle, str):\r\n     22     str_or_query_bundle = QueryBundle(str_or_query_bundle)\r\n---> 23 response = self._query(str_or_query_bundle)\r\n     24 return response\r\n\r\nFile [~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/query_engine/retriever_query_engine.py:169](https://file+.vscode-resource.vscode-cdn.net/Users/ammon/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/notebooks/llm-integration/~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/query_engine/retriever_query_engine.py:169), in RetrieverQueryEngine._query(self, query_bundle)\r\n    162 with self.callback_manager.event(\r\n    163     CBEventType.QUERY, payload={EventPayload.QUERY_STR: query_bundle.query_str}\r\n    164 ) as query_event:\r\n    165     with self.callback_manager.event(\r\n    166         CBEventType.RETRIEVE,\r\n    167         payload={EventPayload.QUERY_STR: query_bundle.query_str},\r\n    168     ) as retrieve_event:\r\n--> 169         nodes = self.retrieve(query_bundle)\r\n    171         retrieve_event.on_end(\r\n    172             payload={EventPayload.NODES: nodes},\r\n    173         )\r\n    175     response = self._response_synthesizer.synthesize(\r\n    176         query=query_bundle,\r\n    177         nodes=nodes,\r\n    178     )\r\n\r\nFile [~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/query_engine/retriever_query_engine.py:117](https://file+.vscode-resource.vscode-cdn.net/Users/ammon/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/notebooks/llm-integration/~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/query_engine/retriever_query_engine.py:117), in RetrieverQueryEngine.retrieve(self, query_bundle)\r\n    116 def retrieve(self, query_bundle: QueryBundle) -> List[NodeWithScore]:\r\n--> 117     nodes = self._retriever.retrieve(query_bundle)\r\n    118     nodes = self._apply_node_postprocessors(nodes, query_bundle=query_bundle)\r\n    120     return nodes\r\n\r\nFile [~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/indices/base_retriever.py:22](https://file+.vscode-resource.vscode-cdn.net/Users/ammon/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/notebooks/llm-integration/~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/indices/base_retriever.py:22), in BaseRetriever.retrieve(self, str_or_query_bundle)\r\n     20 if isinstance(str_or_query_bundle, str):\r\n     21     str_or_query_bundle = QueryBundle(str_or_query_bundle)\r\n---> 22 return self._retrieve(str_or_query_bundle)\r\n\r\nFile [~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/indices/vector_store/retrievers/retriever.py:75](https://file+.vscode-resource.vscode-cdn.net/Users/ammon/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/notebooks/llm-integration/~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/indices/vector_store/retrievers/retriever.py:75), in VectorIndexRetriever._retrieve(self, query_bundle)\r\n     69     if query_bundle.embedding is None:\r\n     70         query_bundle.embedding = (\r\n     71             self._service_context.embed_model.get_agg_embedding_from_queries(\r\n     72                 query_bundle.embedding_strs\r\n     73             )\r\n     74         )\r\n---> 75 return self._get_nodes_with_embeddings(query_bundle)\r\n\r\nFile [~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/indices/vector_store/retrievers/retriever.py:151](https://file+.vscode-resource.vscode-cdn.net/Users/ammon/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/notebooks/llm-integration/~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/indices/vector_store/retrievers/retriever.py:151), in VectorIndexRetriever._get_nodes_with_embeddings(self, query_bundle_with_embeddings)\r\n    147 def _get_nodes_with_embeddings(\r\n    148     self, query_bundle_with_embeddings: QueryBundle\r\n    149 ) -> List[NodeWithScore]:\r\n    150     query = self._build_vector_store_query(query_bundle_with_embeddings)\r\n--> 151     query_result = self._vector_store.query(query, **self._kwargs)\r\n    152     return self._build_node_list_from_query_result(query_result)\r\n\r\nFile [~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/vector_stores/weaviate.py:230](https://file+.vscode-resource.vscode-cdn.net/Users/ammon/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/notebooks/llm-integration/~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/vector_stores/weaviate.py:230), in WeaviateVectorStore.query(self, query, **kwargs)\r\n    227 query_result = query_builder.do()\r\n    229 # parse results\r\n--> 230 parsed_result = parse_get_response(query_result)\r\n    231 entries = parsed_result[self._index_name]\r\n    233 similarities = [get_node_similarity(entry) for entry in entries]\r\n\r\nFile [~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/vector_stores/weaviate_utils.py:65](https://file+.vscode-resource.vscode-cdn.net/Users/ammon/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/notebooks/llm-integration/~/Projects/abk7777/qocgpiywhm/prototyping/youtube-stream-ingest/.venv/lib/python3.10/site-packages/llama_index/vector_stores/weaviate_utils.py:65), in parse_get_response(response)\r\n     63 \"\"\"Parse get response from Weaviate.\"\"\"\r\n     64 if \"errors\" in response:\r\n---> 65     raise ValueError(\"Invalid query, got errors: {}\".format(response[\"errors\"]))\r\n     66 data_response = response[\"data\"]\r\n     67 if \"Get\" not in data_response:\r\n\r\nValueError: Invalid query, got errors: [{'locations': [{'column': 6, 'line': 1}], 'message': \"explorer: get class: vector search: object vector search at index textfrag: shard textfrag_PVV5J51AUi38: vector search: knn search: distance between entrypoint and query node: vector lengths don't match: 300 vs 1536\", 'path': ['Get', 'TextFrag']}]\r\n``` \r\nThis is because there is a mismatch in the vector length of the query from Llama Index (1536) and the [size of dimensions the `text2vec-contextionary` module generates (300)](https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-contextionary).\r\n\r\nIs there support for configuring the vector dimension for Weaviate like there is with Pinecone and FAISS?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7397/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7397/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7396",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7396/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7396/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7396/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7396",
        "id": 1866021941,
        "node_id": "PR_kwDOIWuq585YvYgQ",
        "number": 7396,
        "title": "[version] bump version to 0.8.9",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-24T23:32:18Z",
        "updated_at": "2023-08-24T23:48:29Z",
        "closed_at": "2023-08-24T23:48:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7396",
            "html_url": "https://github.com/run-llama/llama_index/pull/7396",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7396.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7396.patch",
            "merged_at": "2023-08-24T23:48:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7396/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7396/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7395",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7395/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7395/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7395/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7395",
        "id": 1865736624,
        "node_id": "PR_kwDOIWuq585YuaUY",
        "number": 7395,
        "title": "Service Context to/from dict",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-24T19:13:05Z",
        "updated_at": "2023-08-28T21:54:20Z",
        "closed_at": "2023-08-28T21:54:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7395",
            "html_url": "https://github.com/run-llama/llama_index/pull/7395",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7395.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7395.patch",
            "merged_at": "2023-08-28T21:54:19Z"
        },
        "body": "# Description\r\n\r\nThis PR adds the ability to serialize all main components in the service context.\r\n\r\nIt got more complex than I would have liked when things were nested and subclassed, but I think the current approach is still manageable. Open to improvements and suggestions.\r\n\r\n## Type of Change.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7395/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7395/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7394",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7394/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7394/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7394/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7394",
        "id": 1865519939,
        "node_id": "PR_kwDOIWuq585YtrBd",
        "number": 7394,
        "title": "Support pydantic v2",
        "user": {
            "login": "srhinos",
            "id": 6531393,
            "node_id": "MDQ6VXNlcjY1MzEzOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6531393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srhinos",
            "html_url": "https://github.com/srhinos",
            "followers_url": "https://api.github.com/users/srhinos/followers",
            "following_url": "https://api.github.com/users/srhinos/following{/other_user}",
            "gists_url": "https://api.github.com/users/srhinos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srhinos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srhinos/subscriptions",
            "organizations_url": "https://api.github.com/users/srhinos/orgs",
            "repos_url": "https://api.github.com/users/srhinos/repos",
            "events_url": "https://api.github.com/users/srhinos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srhinos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-24T16:36:29Z",
        "updated_at": "2023-08-24T23:28:36Z",
        "closed_at": "2023-08-24T22:55:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7394",
            "html_url": "https://github.com/run-llama/llama_index/pull/7394",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7394.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7394.patch",
            "merged_at": "2023-08-24T22:55:10Z"
        },
        "body": "# Description\r\n\r\nThis provides soft support for Pydantic v2 by leaning on the compatibility layer for pydantic v1 added in pydantic v2.\r\n\r\nThe change amounts to trying to import v1 from v2 and in the case that it fails (meaning v2 isn't currently installed), it defaults to the v1 import pattern. The actual functionality of the imported classes / functions remains the same regardless of whether its coming from v1 or v2 so no major refactor or logic changes w/ testing is required. \r\n\r\nNOTE: This should be a short term \"bandaid\" fix and replaced whenever the bandwidth to do so becomes available as its a really bad pattern to have in a code base. Its important to get this in though as major libraries are moving to full v2-only implementations and blocking updating them is worse than the quality of this code :P\r\n\r\nFixes #7393\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nI ran all tests locally and verified they all passed.\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7394/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7394/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7393",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7393/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7393/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7393/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7393",
        "id": 1865473329,
        "node_id": "I_kwDOIWuq585vMN0x",
        "number": 7393,
        "title": "[Feature Request]: Support Pydantic v2",
        "user": {
            "login": "srhinos",
            "id": 6531393,
            "node_id": "MDQ6VXNlcjY1MzEzOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6531393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srhinos",
            "html_url": "https://github.com/srhinos",
            "followers_url": "https://api.github.com/users/srhinos/followers",
            "following_url": "https://api.github.com/users/srhinos/following{/other_user}",
            "gists_url": "https://api.github.com/users/srhinos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srhinos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srhinos/subscriptions",
            "organizations_url": "https://api.github.com/users/srhinos/orgs",
            "repos_url": "https://api.github.com/users/srhinos/repos",
            "events_url": "https://api.github.com/users/srhinos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srhinos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-24T16:05:56Z",
        "updated_at": "2023-08-24T22:55:12Z",
        "closed_at": "2023-08-24T22:55:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nPydantic v2 should be soft supported by removing the langchain pin.\r\n\r\n### Reason\r\n\r\nAll projects which utilize llama_index is going to be blocked from upgrading libraries such as fastapi or langchain itself. Langchain's action plan for hard requiring pydantic v2 is indefinitely suspended enabling soft v2 support but not hard requiring it so the PR here - https://github.com/jerryjliu/llama_index/pull/7297 which mentions `\"Langchain is moving to pydantic v2 in a staged process. We likely don't need to follow the same migration plan, but we can at least pin the langchain version for now and be ready for when they fully migrate.\"` indicates that soft v2 support will be blocked for a significant period of time.\r\n\r\n### Value of Feature\r\n\r\nllama_index is blocking upgrades for no noticeable reason\r\n\r\n\r\nThis issue can be easily resolved by reverting this PR https://github.com/jerryjliu/llama_index/pull/7297 and enabling latest langchain versions to be used by llama_index",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7393/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7393/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7392",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7392/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7392/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7392/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7392",
        "id": 1865413950,
        "node_id": "I_kwDOIWuq585vL_U-",
        "number": 7392,
        "title": "[BUG]: KnowledgeGraphRAGRetriever returns syntax error",
        "user": {
            "login": "salahaz",
            "id": 41476094,
            "node_id": "MDQ6VXNlcjQxNDc2MDk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/41476094?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salahaz",
            "html_url": "https://github.com/salahaz",
            "followers_url": "https://api.github.com/users/salahaz/followers",
            "following_url": "https://api.github.com/users/salahaz/following{/other_user}",
            "gists_url": "https://api.github.com/users/salahaz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salahaz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salahaz/subscriptions",
            "organizations_url": "https://api.github.com/users/salahaz/orgs",
            "repos_url": "https://api.github.com/users/salahaz/repos",
            "events_url": "https://api.github.com/users/salahaz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salahaz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-08-24T15:32:38Z",
        "updated_at": "2023-08-30T16:05:55Z",
        "closed_at": "2023-08-30T11:10:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n@wey-gu @logan-markewich I have been currently using the KnowledgeGraphRAGRetriever on an existing NebulaGraph space, and it throws the following error:\r\n\r\n![nebula-error](https://github.com/jerryjliu/llama_index/assets/41476094/11350e45-7d4a-44de-aeb4-35fc21b6b45e)\r\n\r\nI have done some digging and found out that it's an issue with executing the multi-hop subgraph query in the flat_rel_map function. The query failed on the db side. Do you think there's an issue with the way the query and the params are being passed?\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7392/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7392/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7391",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7391/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7391/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7391/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7391",
        "id": 1864776016,
        "node_id": "I_kwDOIWuq585vJjlQ",
        "number": 7391,
        "title": "[Bug]: Unable to build the VectorStoreIndex from simple PDF documents",
        "user": {
            "login": "mukundhareddy1996",
            "id": 22534728,
            "node_id": "MDQ6VXNlcjIyNTM0NzI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22534728?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mukundhareddy1996",
            "html_url": "https://github.com/mukundhareddy1996",
            "followers_url": "https://api.github.com/users/mukundhareddy1996/followers",
            "following_url": "https://api.github.com/users/mukundhareddy1996/following{/other_user}",
            "gists_url": "https://api.github.com/users/mukundhareddy1996/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mukundhareddy1996/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mukundhareddy1996/subscriptions",
            "organizations_url": "https://api.github.com/users/mukundhareddy1996/orgs",
            "repos_url": "https://api.github.com/users/mukundhareddy1996/repos",
            "events_url": "https://api.github.com/users/mukundhareddy1996/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mukundhareddy1996/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-08-24T09:35:13Z",
        "updated_at": "2023-09-06T08:06:47Z",
        "closed_at": "2023-08-24T15:41:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI was following the [documentation ](https://gpt-index.readthedocs.io/en/latest/core_modules/data_modules/index/vector_store_guide.html)and trying to load the simple PDF document using SimpleDirectoryReader. \r\n\r\n`documents = SimpleDirectoryReader(r\"MyLocalPath\\InputFiles\").load_data()`\r\n\r\n_I am using a valid Azure OpenAI keys with turbo 3.5 model and text-embedding-ada-002 model for embeedings._\r\n\r\nThe data loading is done successfully and post that the vector indexing is not happening and returning the **RetryError[]**. Tried the documents directly from wikipedia using download_loader, but still the same error as below. \r\n\r\n`vector_index = VectorStoreIndex.from_documents(documents)`\r\n\r\nTried the other way as below:\r\n_From the documents I have created nodes and tried to index those nodes too. But still the same error._ \r\n\r\nError:\r\n---------------------------------------------------------------------------\r\n```\r\nInvalidRequestError                       Traceback (most recent call last)\r\nFile [c:\\\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\tenacity\\__init__.py:382](file:///C://AppData/Local/Programs/Python/Python310/lib/site-packages/tenacity/__init__.py:382), in Retrying.__call__(self, fn, *args, **kwargs)\r\n    381 try:\r\n--> 382     result = fn(*args, **kwargs)\r\n    383 except BaseException:  # noqa: B902\r\n\r\nFile [c:\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\llama_index\\embeddings\\openai.py:167](file:///C://AppData/Local/Programs/Python/Python310/lib/site-packages/llama_index/embeddings/openai.py:167), in get_embeddings(list_of_text, engine, **kwargs)\r\n    165 list_of_text = [text.replace(\"\\n\", \" \") for text in list_of_text]\r\n--> 167 data = openai.Embedding.create(input=list_of_text, model=engine, **kwargs).data\r\n    168 return [d[\"embedding\"] for d in data]\r\n\r\nFile [c:\\\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openai\\api_resources\\embedding.py:33](file:///C://AppData/Local/Programs/Python/Python310/lib/site-packages/openai/api_resources/embedding.py:33), in Embedding.create(cls, *args, **kwargs)\r\n     32 try:\r\n---> 33     response = super().create(*args, **kwargs)\r\n     35     # If a user specifies base64, we'll just return the encoded string.\r\n     36     # This is only for the default case.\r\n\r\nFile [c:\\\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py:149](file:///C://AppData/Local/Programs/Python/Python310/lib/site-packages/openai/api_resources/abstract/engine_api_resource.py:149), in EngineAPIResource.create(cls, api_key, api_base, api_type, request_id, api_version, organization, **params)\r\n    127 @classmethod\r\n    128 def create(\r\n    129     cls,\r\n   (...)\r\n    136     **params,\r\n    137 ):\r\n...\r\n--> 326     raise retry_exc from fut.exception()\r\n    328 if self.wait:\r\n    329     sleep = self.wait(retry_state)\r\n\r\nRetryError: RetryError[]\r\n```\r\n\r\n### Version\r\n\r\nllama-index 0.8.8\r\nPython 3.10.0\r\n\r\n### Steps to Reproduce\r\n\r\nTry to import the document form wikipedia and load it using download_loader\r\n\r\n`from llama_index import download_loader \r\nWikipediaReader = download_loader(\"WikipediaReader\") \r\nloader = WikipediaReader() \r\ndocuments = loader.load_data(pages=[\"2023 in science\"], auto_suggest=False)`\r\n\r\nPost getting the documents loaded. Now try to create a vector indexer using the below code.\r\n`vector_index = VectorStoreIndex.from_documents(documents)`\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7391/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7391/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7390",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7390/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7390/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7390/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7390",
        "id": 1864645516,
        "node_id": "PR_kwDOIWuq585YqsR2",
        "number": 7390,
        "title": "Add encoding when open json file to read also UTF-8",
        "user": {
            "login": "PhamVuThuNguyet",
            "id": 69782094,
            "node_id": "MDQ6VXNlcjY5NzgyMDk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/69782094?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PhamVuThuNguyet",
            "html_url": "https://github.com/PhamVuThuNguyet",
            "followers_url": "https://api.github.com/users/PhamVuThuNguyet/followers",
            "following_url": "https://api.github.com/users/PhamVuThuNguyet/following{/other_user}",
            "gists_url": "https://api.github.com/users/PhamVuThuNguyet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PhamVuThuNguyet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PhamVuThuNguyet/subscriptions",
            "organizations_url": "https://api.github.com/users/PhamVuThuNguyet/orgs",
            "repos_url": "https://api.github.com/users/PhamVuThuNguyet/repos",
            "events_url": "https://api.github.com/users/PhamVuThuNguyet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PhamVuThuNguyet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T08:15:04Z",
        "updated_at": "2023-08-25T03:00:57Z",
        "closed_at": "2023-08-25T03:00:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7390",
            "html_url": "https://github.com/run-llama/llama_index/pull/7390",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7390.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7390.patch",
            "merged_at": "2023-08-25T03:00:57Z"
        },
        "body": "# Description\r\n\r\nJSON files in utf-8 format haven't been load correctly so we must add encoding parameter to the open file function to make sure it works with some language like Vietnamese.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7390/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7390/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7389",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7389/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7389/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7389/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7389",
        "id": 1864605593,
        "node_id": "PR_kwDOIWuq585Yqjpv",
        "number": 7389,
        "title": "add OpenAI finetuning notebook to docs",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-24T07:49:39Z",
        "updated_at": "2023-08-24T08:07:55Z",
        "closed_at": "2023-08-24T08:07:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7389",
            "html_url": "https://github.com/run-llama/llama_index/pull/7389",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7389.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7389.patch",
            "merged_at": "2023-08-24T08:07:54Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7389/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7389/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]