[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4608",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4608/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4608/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4608/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4608",
        "id": 1736125522,
        "node_id": "I_kwDOIWuq585neyxS",
        "number": 4608,
        "title": "JSONDecodeError: Extra data when using DatabaseReader",
        "user": {
            "login": "mykytamykhailenko",
            "id": 110097066,
            "node_id": "U_kgDOBo_yqg",
            "avatar_url": "https://avatars.githubusercontent.com/u/110097066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mykytamykhailenko",
            "html_url": "https://github.com/mykytamykhailenko",
            "followers_url": "https://api.github.com/users/mykytamykhailenko/followers",
            "following_url": "https://api.github.com/users/mykytamykhailenko/following{/other_user}",
            "gists_url": "https://api.github.com/users/mykytamykhailenko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mykytamykhailenko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mykytamykhailenko/subscriptions",
            "organizations_url": "https://api.github.com/users/mykytamykhailenko/orgs",
            "repos_url": "https://api.github.com/users/mykytamykhailenko/repos",
            "events_url": "https://api.github.com/users/mykytamykhailenko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mykytamykhailenko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-01T11:43:15Z",
        "updated_at": "2023-06-01T11:49:53Z",
        "closed_at": "2023-06-01T11:49:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This is the link to [the notebook](https://colab.research.google.com/drive/1-C6cvNJRdF9opEUM-g9DIfMzXLu-JLl5?usp=sharing).\r\nFor some reason, when I try to read from bigquery, it throws this exception.\r\nI have tried updating and downgrading the version, but it didn't help\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4608/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4608/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4600",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4600/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4600/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4600/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4600",
        "id": 1736020207,
        "node_id": "PR_kwDOIWuq585R4six",
        "number": 4600,
        "title": "add Tair as vector store",
        "user": {
            "login": "seth-hg",
            "id": 848849,
            "node_id": "MDQ6VXNlcjg0ODg0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/848849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seth-hg",
            "html_url": "https://github.com/seth-hg",
            "followers_url": "https://api.github.com/users/seth-hg/followers",
            "following_url": "https://api.github.com/users/seth-hg/following{/other_user}",
            "gists_url": "https://api.github.com/users/seth-hg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seth-hg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seth-hg/subscriptions",
            "organizations_url": "https://api.github.com/users/seth-hg/orgs",
            "repos_url": "https://api.github.com/users/seth-hg/repos",
            "events_url": "https://api.github.com/users/seth-hg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seth-hg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-01T10:43:07Z",
        "updated_at": "2023-06-07T05:07:18Z",
        "closed_at": "2023-06-07T05:07:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4600",
            "html_url": "https://github.com/run-llama/llama_index/pull/4600",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4600.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4600.patch",
            "merged_at": "2023-06-07T05:07:18Z"
        },
        "body": "Hi all,\r\n\r\nThis PR adds a TairVectorStore which is backed by the Tair in-memory database. Tair is a Redis-compatible cloud native database developed by Alibaba Cloud. It can also be [used as a vector database](https://www.alibabacloud.com/help/en/tair/latest/tairvector). I think this could be useful.\r\n\r\nExample notebook and unit tests are also included.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4600/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4600/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4597",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4597/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4597/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4597/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4597",
        "id": 1735850028,
        "node_id": "I_kwDOIWuq585ndvgs",
        "number": 4597,
        "title": "PrevNextNodePostprocessor does not returns a list of nodes sorted by prev next extra order",
        "user": {
            "login": "fabiofumarola",
            "id": 1550672,
            "node_id": "MDQ6VXNlcjE1NTA2NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1550672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fabiofumarola",
            "html_url": "https://github.com/fabiofumarola",
            "followers_url": "https://api.github.com/users/fabiofumarola/followers",
            "following_url": "https://api.github.com/users/fabiofumarola/following{/other_user}",
            "gists_url": "https://api.github.com/users/fabiofumarola/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fabiofumarola/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fabiofumarola/subscriptions",
            "organizations_url": "https://api.github.com/users/fabiofumarola/orgs",
            "repos_url": "https://api.github.com/users/fabiofumarola/repos",
            "events_url": "https://api.github.com/users/fabiofumarola/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fabiofumarola/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-01T09:13:42Z",
        "updated_at": "2023-07-22T02:27:49Z",
        "closed_at": "2023-07-22T02:27:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "When you split a document into nodes and want to respond to queries over the document by adding the `PrevNextNodePostprocessor` processor I want that the nodes returned are sorted by prev-next relationaship. If this constraint is not satisfied I could change completely the sense of nodes given as input for my prompt.\r\n\r\nI have found with @DrLux that the results are not sorted. Let me add an example to replicate the bug.\r\n\r\n```\r\n# %%\r\n%load_ext autoreload\r\n%autoreload 2\r\n\r\n# %%\r\nfrom pathlib import Path\r\nfrom dotenv import load_dotenv\r\nload_dotenv()\r\n\r\n# %%\r\nimport os\r\nimport openai\r\nimport tiktoken\r\nfrom langchain.llms import AzureOpenAI\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom llama_index.node_parser import SimpleNodeParser\r\nfrom llama_index.langchain_helpers.text_splitter import TokenTextSplitter\r\nfrom llama_index import GPTVectorStoreIndex\r\nfrom llama_index import LangchainEmbedding, LLMPredictor, ServiceContext, PromptHelper\r\nfrom llama_index.data_structs.node import Node, DocumentRelationship\r\nfrom llama_index.indices.postprocessor import PrevNextNodePostprocessor\r\n\r\n# %% [markdown]\r\n# # Verify that the nodes after post processing are sorted\r\n\r\n# %%\r\nnode_1 = Node(text=\"1\")\r\nnode_2 = Node(text=\"2\")\r\nnode_3 = Node(text=\"3\")\r\n\r\n# %%\r\nnode_1.relationships[DocumentRelationship.NEXT] = node_2.get_doc_id()\r\nnode_2.relationships[DocumentRelationship.PREVIOUS] = node_1.get_doc_id()\r\nnode_2.relationships[DocumentRelationship.NEXT] = node_3.get_doc_id()\r\nnode_3.relationships[DocumentRelationship.PREVIOUS] = node_2.get_doc_id()\r\n\r\n# %%\r\nnodes = [node_1, node_2, node_3]\r\n\r\n# %%\r\nLoad the needed stuff to create the index\r\n\r\n# %%\r\ngen_deploy_model_name = os.environ[\"OPENAI_GENERATOR_MODEL\"]\r\nemb_deploy_model_name = os.environ['OPENAI_EMBEDDING_MODEL']\r\n\r\n# %%\r\nllm = AzureOpenAI(\r\n    deployment_name=gen_deploy_model_name, \r\n    model_name=gen_deploy_model_name, \r\n    model_kwargs={\r\n        \"api_key\": openai.api_key,\r\n        \"api_base\": openai.api_base,\r\n        \"api_type\": openai.api_type,\r\n        \"api_version\": openai.api_version,\r\n    })\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\n# %%\r\nembedding_llm = LangchainEmbedding(OpenAIEmbeddings(\r\n    deployment=emb_deploy_model_name,\r\n    model=emb_deploy_model_name,\r\n    chunk_size=1\r\n))\r\n\r\n# %%\r\ntokenizer=tiktoken.encoding_for_model('text-davinci-003')\r\n\r\nprompt_helper = PromptHelper(\r\n    max_input_size=4096,\r\n    num_output=256,\r\n    max_chunk_overlap=20,\r\n    tokenizer=tokenizer.encode\r\n)\r\n\r\nnode_parser = SimpleNodeParser(\r\n    text_splitter=TokenTextSplitter(tokenizer=tokenizer.encode, chunk_size=500, chunk_overlap=20))\r\n\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n    llm_predictor=llm_predictor,\r\n    embed_model=embedding_llm,\r\n    prompt_helper=prompt_helper,\r\n    node_parser=node_parser\r\n)\r\n\r\n# %%\r\nindex = GPTVectorStoreIndex(nodes, service_context=service_context)\r\n\r\n# %%\r\nproc = PrevNextNodePostprocessor(docstore=index.docstore, mode='both', num_nodes=1, service_context=service_context)\r\n\r\n# %%\r\nquery_engine = index.as_query_engine(response_mode='no_text')\r\n\r\n# %% [markdown]\r\n# Taking only the node with 2 as text\r\n\r\n# %%\r\nnodes = query_engine.query(\"2\").source_nodes[:1]\r\nnodes\r\n# True\r\n[NodeWithScore(node=Node(text='2', doc_id='15eb1482-feb4-4656-b790-b5840236682b', embedding=None, doc_hash='dd12ed5768edc4485f722a20bc5fbcd293da6b27d67abc98efad69596faf7cf2', extra_info=None, node_info={'_node_type': <NodeType.TEXT: '1'>}, relationships={<DocumentRelationship.PREVIOUS: '2'>: '9e7774b7-91e9-4d37-8bff-e928e0185f3d', <DocumentRelationship.NEXT: '3'>: '0ea3ac5e-9cab-4bda-9080-c5f61a227e74'}), score=1.0000000000000002)]\r\n\r\n# %%\r\nnew_nodes = proc.postprocess_nodes(nodes)\r\n\r\n# %%\r\nnew_nodes\r\n# [NodeWithScore(node=Node(text='3', doc_id='0ea3ac5e-9cab-4bda-9080-c5f61a227e74', embedding=None, doc_hash='7202d555efff5fa969e86ff45ccec1d4100de1ffec02f00d97ed2e4ad9f8b050', extra_info=None, node_info={'_node_type': <NodeType.TEXT: '1'>}, relationships={<DocumentRelationship.PREVIOUS: '2'>: '15eb1482-feb4-4656-b790-b5840236682b'}), score=None),\r\n NodeWithScore(node=Node(text='2', doc_id='15eb1482-feb4-4656-b790-b5840236682b', embedding=None, doc_hash='dd12ed5768edc4485f722a20bc5fbcd293da6b27d67abc98efad69596faf7cf2', extra_info=None, node_info={'_node_type': <NodeType.TEXT: '1'>}, relationships={<DocumentRelationship.PREVIOUS: '2'>: '9e7774b7-91e9-4d37-8bff-e928e0185f3d', <DocumentRelationship.NEXT: '3'>: '0ea3ac5e-9cab-4bda-9080-c5f61a227e74'}), score=1.0000000000000002),\r\n NodeWithScore(node=Node(text='1', doc_id='9e7774b7-91e9-4d37-8bff-e928e0185f3d', embedding=None, doc_hash='045a81f14958c314a7f79d4c784ae8781a28c84c5d4500b1a1144b059281ee1f', extra_info=None, node_info={'_node_type': <NodeType.TEXT: '1'>}, relationships={<DocumentRelationship.NEXT: '3'>: '15eb1482-feb4-4656-b790-b5840236682b'}), score=None)]\r\n\r\n# %% [markdown]\r\n# Nodes are not sorted with respect to the chunk order\r\n\r\n```\r\n\r\nFrom the code above we can see that the nodes are not sorted in the right order.\r\nThis problem is related to the fact that after adding the extra nodes the result nodes are sorted with respect the `doc_id`  as show [here](https://github.com/jerryjliu/llama_index/blob/main/llama_index/indices/postprocessor/node.py#L194)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4597/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4597/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4595",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4595/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4595/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4595/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4595",
        "id": 1735701790,
        "node_id": "PR_kwDOIWuq585R3m7G",
        "number": 4595,
        "title": "Add JSON Path based Query Engine",
        "user": {
            "login": "sourabhdesai",
            "id": 3005241,
            "node_id": "MDQ6VXNlcjMwMDUyNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3005241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sourabhdesai",
            "html_url": "https://github.com/sourabhdesai",
            "followers_url": "https://api.github.com/users/sourabhdesai/followers",
            "following_url": "https://api.github.com/users/sourabhdesai/following{/other_user}",
            "gists_url": "https://api.github.com/users/sourabhdesai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sourabhdesai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sourabhdesai/subscriptions",
            "organizations_url": "https://api.github.com/users/sourabhdesai/orgs",
            "repos_url": "https://api.github.com/users/sourabhdesai/repos",
            "events_url": "https://api.github.com/users/sourabhdesai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sourabhdesai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-01T07:48:37Z",
        "updated_at": "2023-06-04T23:05:45Z",
        "closed_at": "2023-06-04T21:09:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4595",
            "html_url": "https://github.com/run-llama/llama_index/pull/4595",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4595.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4595.patch",
            "merged_at": "2023-06-04T21:09:49Z"
        },
        "body": "Putting up a PR for the implementation so far of a JSON Path based query index for arbitrary JSON objects. Let me know what you think of this approach and implementation of it!\r\n\r\nThe user needs to supply both the JSON value and the JSON schema.\r\n\r\nFuture improvements:\r\n- Consider workarounds for when the entire JSON schema doesn't fit in the context window\r\n- Try to figure out a way to include embedding based vector search as part of this\r\n  - One idea that was discussed is replacing the parts of the JSON Path query where it is filtering for objects within a list with a semantic search over those objects instead.\r\n- Consider giving the user the option/capability to have an LLM generate a JSON schema from a given sample JSON\r\n- A way to store the JSON besides just having it in memory\r\n  - Currently, this is the same as `GPTPandasIndex` which just stores the given input dataframe as a private instance variable.\r\n- This would be the third use case so far that involves taking a dataset, a schema for that dataset, and then operating the index by converting the user query into a structured query based on the supplied schema. We may want to do this again at some point for something like GraphQL APIs for example. Perhaps we can consider making a generic abstraction for these kinds of use cases? My implementation here is already very similar to that of `GPTPandasIndex` but since I hadn't delved into this codebase too much before I was hesitant to [architecture astronaut](https://www.joelonsoftware.com/2008/05/01/architecture-astronauts-take-over/) this too much.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4595/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4595/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4594",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4594/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4594/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4594/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4594",
        "id": 1735681359,
        "node_id": "I_kwDOIWuq585ndGVP",
        "number": 4594,
        "title": "json.decoder.JSONDecodeError: Invalid \\uXXXX escape",
        "user": {
            "login": "kashif-khann",
            "id": 59335119,
            "node_id": "MDQ6VXNlcjU5MzM1MTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/59335119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kashif-khann",
            "html_url": "https://github.com/kashif-khann",
            "followers_url": "https://api.github.com/users/kashif-khann/followers",
            "following_url": "https://api.github.com/users/kashif-khann/following{/other_user}",
            "gists_url": "https://api.github.com/users/kashif-khann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kashif-khann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kashif-khann/subscriptions",
            "organizations_url": "https://api.github.com/users/kashif-khann/orgs",
            "repos_url": "https://api.github.com/users/kashif-khann/repos",
            "events_url": "https://api.github.com/users/kashif-khann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kashif-khann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-01T07:36:19Z",
        "updated_at": "2023-06-19T03:13:59Z",
        "closed_at": "2023-06-06T06:09:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "getting this error when calling llama_index classes like SimpleNodeParser() and GPTVectorStoreIndex()\r\nI upgraded llama_index but still same issue\r\n\r\n![k1](https://github.com/jerryjliu/llama_index/assets/59335119/35de01bb-27e3-4823-83f4-6bee4c750c1a)\r\n\r\n\r\n\r\n![k2](https://github.com/jerryjliu/llama_index/assets/59335119/9dda5741-438b-4443-b604-a129bd75199d)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4594/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4594/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4592",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4592/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4592/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4592/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4592",
        "id": 1735549462,
        "node_id": "I_kwDOIWuq585ncmIW",
        "number": 4592,
        "title": "TypeError: PromptHelper.__init__() got multiple values for argument 'chunk_overlap_ratio'",
        "user": {
            "login": "Ash121205",
            "id": 78997375,
            "node_id": "MDQ6VXNlcjc4OTk3Mzc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/78997375?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ash121205",
            "html_url": "https://github.com/Ash121205",
            "followers_url": "https://api.github.com/users/Ash121205/followers",
            "following_url": "https://api.github.com/users/Ash121205/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ash121205/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ash121205/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ash121205/subscriptions",
            "organizations_url": "https://api.github.com/users/Ash121205/orgs",
            "repos_url": "https://api.github.com/users/Ash121205/repos",
            "events_url": "https://api.github.com/users/Ash121205/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ash121205/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-01T06:11:02Z",
        "updated_at": "2023-06-02T08:03:24Z",
        "closed_at": "2023-06-02T08:03:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "While executing the following code: \r\n```\r\n'''\r\nmax_input_size = 4096\r\n  # set number of output tokens\r\n  num_outputs = 256\r\n  # set maximum chunk overlap\r\n  max_chunk_overlap = 20\r\n  # set chunk size limit\r\n  chunk_size_limit = 600\r\n\r\n  prompt_helper = PromptHelper(max_input_size, num_outputs, max_chunk_overlap, chunk_size_limit=chunk_size_limit)\r\n'''\r\n```\r\nI got this error: \r\n```\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n[<ipython-input-27-5c80f3f054d6>](https://localhost:8080/#) in <cell line: 1>()\r\n----> 1 index = construct_index(\"/content/\")\r\n\r\n[<ipython-input-26-a8a031c3b535>](https://localhost:8080/#) in construct_index(directory_path)\r\n      9   chunk_size_limit = 600\r\n     10 \r\n---> 11   prompt_helper = PromptHelper(max_input_size, num_outputs, max_chunk_overlap, chunk_size_limit=chunk_size_limit, chunk_overlap_ratio=0.5)\r\n     12 \r\n     13   # define LLM\r\n\r\nTypeError: PromptHelper.__init__() got multiple values for argument 'chunk_overlap_ratio'\r\n```\r\n\r\nPlease tell me what am i doing wrong.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4592/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4592/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4590",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4590/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4590/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4590/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4590",
        "id": 1735465044,
        "node_id": "I_kwDOIWuq585ncRhU",
        "number": 4590,
        "title": "Different Number of token count when reading file from local drive and same files reading from google drive while using vectorstore index",
        "user": {
            "login": "vishalp-simplecrm",
            "id": 115548851,
            "node_id": "U_kgDOBuMisw",
            "avatar_url": "https://avatars.githubusercontent.com/u/115548851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishalp-simplecrm",
            "html_url": "https://github.com/vishalp-simplecrm",
            "followers_url": "https://api.github.com/users/vishalp-simplecrm/followers",
            "following_url": "https://api.github.com/users/vishalp-simplecrm/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishalp-simplecrm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishalp-simplecrm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishalp-simplecrm/subscriptions",
            "organizations_url": "https://api.github.com/users/vishalp-simplecrm/orgs",
            "repos_url": "https://api.github.com/users/vishalp-simplecrm/repos",
            "events_url": "https://api.github.com/users/vishalp-simplecrm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishalp-simplecrm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-01T05:06:43Z",
        "updated_at": "2023-09-10T16:57:17Z",
        "closed_at": "2023-09-10T16:57:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Different Number of token count when reading file from local drive and same files reading from google drive while using vectorstore index\r\n\r\nLet me give some background \r\n\r\nI am having 5 documents for which  I am creating index using vector store index for this I have tried 2 ways\r\n\r\n1 Reading Document from google drive\r\nObservation : Creation of index takes too much time and also lot many money used close to $14\r\n2 Reading from local system folder\r\nObservation: This is fast and also it takes less money as token are less which is not even $1 \r\n\r\n# please Justify this\r\n\r\n# Reference code (reading from google drive)\r\nlogging.basicConfig(stream=sys.stdout, level=logging.INFO)\r\nlogging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\r\nlogging.getLogger('flask_cors').level = logging.DEBUG\r\n\r\n\r\nos.environ['OPENAI_API_KEY'] = 'my api key'\r\n\r\ndef authorize_gdocs():\r\n    google_oauth2_scopes = [\r\n        \"https://www.googleapis.com/auth/drive.readonly\",\r\n        \"https://www.googleapis.com/auth/documents.readonly\"\r\n    ]\r\n    cred = None\r\n    if os.path.exists(\"token.pickle\"):\r\n        with open(\"token.pickle\", 'rb') as token:\r\n            cred = pickle.load(token)\r\n    if not cred or not cred.valid:\r\n        if cred and cred.expired and cred.refresh_token:\r\n            cred.refresh(Request())\r\n        else:\r\n            flow = InstalledAppFlow.from_client_secrets_file(\"client_secrets.json\", google_oauth2_scopes)\r\n            cred = flow.run_local_server(port=0)\r\n        with open(\"token.pickle\", 'wb') as token:\r\n            pickle.dump(cred, token)\r\n\r\nauthorize_gdocs()\r\n#Drive_loader\r\nGoogleDriveReader = download_loader('GoogleDriveReader')\r\nfolder_id = '1LFa04mF3U300ttoej-EkWcT35sHHDZJL'\r\nloader = GoogleDriveReader()\r\ndocuments = loader.load_data(folder_id=folder_id)\r\n\r\n\r\n\r\n\r\nllm = ChatOpenAI(\r\n  temperature=0, \r\n  model_name=\"gpt-3.5-turbo\",\r\n#   frequency_penalty = 0.5,\r\n  max_tokens=500,\r\n  streaming=True,\r\n)\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\nprompt_helper = PromptHelper(\r\n    max_input_size = 3500, \r\n    num_output = 500, \r\n    max_chunk_overlap = 20, \r\n    chunk_size_limit = 700\r\n)\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\n\r\nindex = GPTVectorStoreIndex.from_documents(documents, service_context=service_context )\r\n\r\n#persisting index\r\nindex.storage_context.persist('C:\\\\Users\\\\Lenovo\\\\Desktop\\\\DocumentBot\\\\storage')\r\n\r\n# rebuild storage context\r\nstorage_context = StorageContext.from_defaults(persist_dir=\"./storage\")\r\n# load index\r\nindex = load_index_from_storage(storage_context,service_context=service_context)\r\n\r\n\r\n\r\n# Flask App Code\r\napp = Flask(__name__)\r\n\r\n@app.route('/')\r\n@cross_origin()\r\ndef home():\r\n    return render_template('index.html')\r\n\r\n\r\n@app.route('/query', methods=['POST'])\r\n@cross_origin()\r\ndef query():\r\n    query_engine = index.as_query_engine(similarity_top_k=3, streaming=True)\r\n    prompt = request.json\r\n    # prompt['prompt'] += \" Give in html format\"\r\n    print('prompt given issss:',prompt)\r\n    response_stream = query_engine.query(prompt['prompt']) \r\n    # response_stream.print_response_stream()\r\n    def generate_response():\r\n        for text in response_stream.response_gen:\r\n                yield  f\"data: {text}\\n\\n\" \r\n                # print(text)\r\n    return Response(stream_with_context(generate_response()), mimetype='text/event-stream')\r\n    \r\n    \r\n    \r\n # Reference code while reading file from local system \r\nllm = ChatOpenAI(\r\n  temperature=0, \r\n  model_name=\"gpt-3.5-turbo\",\r\n  max_tokens=500,\r\n  streaming=True,\r\n)\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\nprompt_helper = PromptHelper(\r\n    max_input_size = 3500, \r\n    num_output = 500, \r\n    max_chunk_overlap = 20, \r\n    chunk_size_limit = 700\r\n)\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\ndocuments = SimpleDirectoryReader('./demoDoc/').load_data()\r\nindex = GPTVectorStoreIndex.from_documents(documents, service_context=service_context )\r\nindex.storage_context.persist('./storage/')\r\nstorage_context = StorageContext.from_defaults(persist_dir='./storage/')\r\nindex = load_index_from_storage(storage_context,service_context=service_context)\r\nquery_engine = index.as_query_engine(similarity_top_k=3, streaming=True)\r\nprompt=input(\"ask here:\")\r\nresponse_stream = query_engine.query(prompt)\r\nresponse_stream.print_response_stream()\r\n\r\n \r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4590/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4590/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4581",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4581/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4581/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4581/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4581",
        "id": 1735421445,
        "node_id": "I_kwDOIWuq585ncG4F",
        "number": 4581,
        "title": "AttributeError: 'GPTVectorStoreIndex' object has no attribute 'save_to_disk'",
        "user": {
            "login": "Ash121205",
            "id": 78997375,
            "node_id": "MDQ6VXNlcjc4OTk3Mzc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/78997375?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ash121205",
            "html_url": "https://github.com/Ash121205",
            "followers_url": "https://api.github.com/users/Ash121205/followers",
            "following_url": "https://api.github.com/users/Ash121205/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ash121205/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ash121205/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ash121205/subscriptions",
            "organizations_url": "https://api.github.com/users/Ash121205/orgs",
            "repos_url": "https://api.github.com/users/Ash121205/repos",
            "events_url": "https://api.github.com/users/Ash121205/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ash121205/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-01T04:27:37Z",
        "updated_at": "2023-06-06T04:37:04Z",
        "closed_at": "2023-06-06T04:37:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "While executing the following line in a function:\r\n\r\n  index.save_to_disk('index.json')\r\n  \r\nI am getting this following error: \r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n[<ipython-input-28-58e004f2ed5f>](https://localhost:8080/#) in <cell line: 1>()\r\n----> 1 index = construct_index(\"/content/drive/MyDrive/\")\r\n\r\n[<ipython-input-22-d7468a517225>](https://localhost:8080/#) in construct_index(directory_path)\r\n     19   index = GPTVectorStoreIndex.from_documents(documents, service_context=service_context)\r\n     20 \r\n---> 21   index.save_to_disk('index.json')\r\n     22 \r\n     23   return index\r\n\r\nAttributeError: 'GPTVectorStoreIndex' object has no attribute 'save_to_disk'",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4581/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4581/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4575",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4575/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4575/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4575/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4575",
        "id": 1735291385,
        "node_id": "PR_kwDOIWuq585R2Nb7",
        "number": 4575,
        "title": "[version] bump version to 0.6.16.post1",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-01T01:50:40Z",
        "updated_at": "2023-06-01T01:51:32Z",
        "closed_at": "2023-06-01T01:51:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4575",
            "html_url": "https://github.com/run-llama/llama_index/pull/4575",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4575.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4575.patch",
            "merged_at": "2023-06-01T01:51:31Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4575/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4575/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4573",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4573/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4573/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4573/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4573",
        "id": 1735279220,
        "node_id": "PR_kwDOIWuq585R2K3W",
        "number": 4573,
        "title": "Misc for SubQuestionQueryEngine",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-01T01:32:07Z",
        "updated_at": "2023-06-01T01:46:41Z",
        "closed_at": "2023-06-01T01:46:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4573",
            "html_url": "https://github.com/run-llama/llama_index/pull/4573",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4573.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4573.patch",
            "merged_at": "2023-06-01T01:46:40Z"
        },
        "body": "### Summary\r\n* Fix bug where `use_async` config wasn't properly hooked up\r\n* Expose configuration for `ServiceContext`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4573/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4573/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4567",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4567/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4567/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4567/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4567",
        "id": 1735203322,
        "node_id": "PR_kwDOIWuq585R17NM",
        "number": 4567,
        "title": "[version] bump versino to 0.6.16",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-01T00:04:05Z",
        "updated_at": "2023-06-01T00:11:39Z",
        "closed_at": "2023-06-01T00:11:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4567",
            "html_url": "https://github.com/run-llama/llama_index/pull/4567",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4567.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4567.patch",
            "merged_at": "2023-06-01T00:11:38Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4567/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4567/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4554",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4554/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4554/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4554/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4554",
        "id": 1734931621,
        "node_id": "I_kwDOIWuq585naPSl",
        "number": 4554,
        "title": "Query execution is happening on CPU, even if model is loaded on GPU",
        "user": {
            "login": "suraj-gade",
            "id": 112926867,
            "node_id": "U_kgDOBrsgkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/112926867?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suraj-gade",
            "html_url": "https://github.com/suraj-gade",
            "followers_url": "https://api.github.com/users/suraj-gade/followers",
            "following_url": "https://api.github.com/users/suraj-gade/following{/other_user}",
            "gists_url": "https://api.github.com/users/suraj-gade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suraj-gade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suraj-gade/subscriptions",
            "organizations_url": "https://api.github.com/users/suraj-gade/orgs",
            "repos_url": "https://api.github.com/users/suraj-gade/repos",
            "events_url": "https://api.github.com/users/suraj-gade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suraj-gade/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-31T20:05:27Z",
        "updated_at": "2023-07-22T02:29:22Z",
        "closed_at": "2023-07-22T02:29:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n\r\nI am building a chatbot using LLM like fastchat-t5-3b-v1.0 and want to reduce my inference time.\r\n\r\nI am loading the entire model on GPU, using device_map parameter, and making use of hugging face pipeline agent for querying the LLM model. Also specifying the device=0 ( which is the 1st rank GPU) for hugging face pipeline as well.\r\nI am monitoring the GPU and CPU usage throughout the entire execution, and I can see that though my model is on GPU, at the time of querying the model, it makes use of CPU.\r\nThe spike in CPU usage shows that query execution is happening on CPU.\r\n\r\nBelow is the code that I am using to do inference on Fastchat LLM.\r\n\r\n```\r\nfrom llama_index import SimpleDirectoryReader, GPTVectorStoreIndex, PromptHelper, LLMPredictor\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom llama_index import LangchainEmbedding, ServiceContext\r\nfrom transformers import T5Tokenizer, T5ForConditionalGeneration\r\nfrom accelerate import init_empty_weights, infer_auto_device_map\r\n\r\nmodel_name = 'lmsys/fastchat-t5-3b-v1.0'\r\n\r\nconfig = T5Config.from_pretrained(model_name )\r\nwith init_empty_weights():\r\n    model_layer = T5ForConditionalGeneration(config=config)\r\n\r\ndevice_map = infer_auto_device_map(model_layer, max_memory={0: \"12GiB\",1: \"12GiB\", \"cpu\": \"0GiB\"}, no_split_module_classes=[\"T5Block\"])\r\n\r\n# the value for is : device_map = {'': 0}. i.e loading model in 1st GPU\r\n\r\nmodel = T5ForConditionalGeneration.from_pretrained(model_name, torch_dtype=torch.float16, device_map=device_map, offload_folder=\"offload\", offload_state_dict=True)\r\n\r\ntokenizer = T5Tokenizer.from_pretrained(model_name)\r\n\r\nfrom transformers import pipeline\r\n\r\npipe = pipeline(\r\n    \"text2text-generation\", model=model, tokenizer=tokenizer, device= 0,\r\n    max_length=1536, temperature=0, top_p = 1, num_beams=1, early_stopping=False\r\n)\r\n\r\nfrom langchain.llms import HuggingFacePipeline\r\nllm = HuggingFacePipeline(pipeline=pipe)\r\n\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings())\r\n\r\n# set maximum input size\r\nmax_input_size = 2048\r\n# set number of output tokens\r\nnum_outputs = 512\r\n# set maximum chunk overlap\r\nmax_chunk_overlap = 20\r\n# set chunk size limit\r\nchunk_size_limit = 300\r\nprompt_helper = PromptHelper(max_input_size, num_outputs, max_chunk_overlap)\r\n\r\nservice_context = ServiceContext.from_defaults(embed_model=embed_model, llm_predictor=LLMPredictor(llm), prompt_helper=prompt_helper, chunk_size_limit=chunk_size_limit)\r\n\r\n# build index\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\n\r\nnew_index = GPTVectorStoreIndex.from_documents(documents, service_context=service_context)\r\n\r\nquery_engine = new_index.as_query_engine(\r\n    verbose=True,\r\n    similarity_top_k=2\r\n)\r\n\r\nresponse = query_engine.query(\"sample query question?\")\r\n```\r\n\r\nHere the \u201cdata\u201d folder has my full input text in pdf format, and am using the GPTVectoreStoreIndex and hugging face pipeline to build the index on that and fetch the relevant chunk to generate the prompt with context and query the FastChat model as shown in the code.\r\n\r\nPlease have a look, and let me know if this is the expected behaviour.\r\nhow can I make use of GPU for query execution as well? to reduce the inference response time.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4554/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4554/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4550",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4550/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4550/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4550/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4550",
        "id": 1734739499,
        "node_id": "PR_kwDOIWuq585R0VQE",
        "number": 4550,
        "title": "fix hyde link",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T18:07:33Z",
        "updated_at": "2023-08-28T17:10:43Z",
        "closed_at": "2023-05-31T18:12:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4550",
            "html_url": "https://github.com/run-llama/llama_index/pull/4550",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4550.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4550.patch",
            "merged_at": "2023-05-31T18:12:10Z"
        },
        "body": "Link to hyde notebook is broken in docs",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4550/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4550/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4533",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4533/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4533/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4533/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4533",
        "id": 1734686053,
        "node_id": "PR_kwDOIWuq585R0JUE",
        "number": 4533,
        "title": "Improve Document Ingest UX",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-31T17:35:45Z",
        "updated_at": "2023-08-28T17:10:14Z",
        "closed_at": "2023-06-02T04:03:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4533",
            "html_url": "https://github.com/run-llama/llama_index/pull/4533",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4533.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4533.patch",
            "merged_at": "2023-06-02T04:03:25Z"
        },
        "body": "This PR fixes quite a few things\r\n- `refresh()` and `update()` now work (and use `Document` objects as input)\r\n- `delete()` works, and takes NODE doc_ids as input\r\n- added `delete_ref_doc()` which takes a REF_DOC_ID as input, and deletes all nodes associated with it\r\n- added optional kwarg to delete nodes from docstore (set it to false though, because if you share nodes across indexes this can cause problems \ud83e\udd14)\r\n- added functionality to the docstore to track ref_doc info. For every node inserted, we keep track of which ref_doc_id that node belongs to + it's extra info\r\n- aligned all `_delete()` implementations to delete NODE doc_ids (some did, some didn't). As you can see, the terminology is starting to get a little wacky, But I want to avoid breaking changes right now\r\n\r\n\r\nTodo:\r\n- [x] Add a page to the docs? Not sure where yet\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4533/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4533/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4514",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4514/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4514/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4514/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4514",
        "id": 1734408223,
        "node_id": "I_kwDOIWuq585nYPgf",
        "number": 4514,
        "title": "RFC: Best practices documentation",
        "user": {
            "login": "EmanuelCampos",
            "id": 16262455,
            "node_id": "MDQ6VXNlcjE2MjYyNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16262455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EmanuelCampos",
            "html_url": "https://github.com/EmanuelCampos",
            "followers_url": "https://api.github.com/users/EmanuelCampos/followers",
            "following_url": "https://api.github.com/users/EmanuelCampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/EmanuelCampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EmanuelCampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EmanuelCampos/subscriptions",
            "organizations_url": "https://api.github.com/users/EmanuelCampos/orgs",
            "repos_url": "https://api.github.com/users/EmanuelCampos/repos",
            "events_url": "https://api.github.com/users/EmanuelCampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EmanuelCampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-31T14:49:39Z",
        "updated_at": "2023-06-07T19:54:43Z",
        "closed_at": "2023-06-07T19:54:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Can be interesting to add a best practices documentation page, on the top of the documentation, because there's a lot of ways to do things and currently it's not enough clear.\r\n\r\nwhat about start by adding some anchors like:\r\n\r\nUnderstanding costs:\r\n- [Cost Analysis](https://gpt-index.readthedocs.io/en/latest/how_to/analysis/cost_analysis.html)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4514/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4514/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4505",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4505/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4505/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4505/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4505",
        "id": 1734264685,
        "node_id": "PR_kwDOIWuq585RytMh",
        "number": 4505,
        "title": "Update to use get_usable_table_names from LC SQLDatabase wrapper",
        "user": {
            "login": "bborn",
            "id": 3760,
            "node_id": "MDQ6VXNlcjM3NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3760?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bborn",
            "html_url": "https://github.com/bborn",
            "followers_url": "https://api.github.com/users/bborn/followers",
            "following_url": "https://api.github.com/users/bborn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bborn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bborn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bborn/subscriptions",
            "organizations_url": "https://api.github.com/users/bborn/orgs",
            "repos_url": "https://api.github.com/users/bborn/repos",
            "events_url": "https://api.github.com/users/bborn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bborn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T13:43:11Z",
        "updated_at": "2023-05-31T15:13:29Z",
        "closed_at": "2023-05-31T15:13:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4505",
            "html_url": "https://github.com/run-llama/llama_index/pull/4505",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4505.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4505.patch",
            "merged_at": "2023-05-31T15:13:28Z"
        },
        "body": "`get_table_names` is deprecated because it doesn't respect the `ignore_tables` and `include_tables` params. Update to use `get_usable_table_names` instead.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4505/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4505/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4452",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4452/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4452/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4452/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4452",
        "id": 1733460709,
        "node_id": "PR_kwDOIWuq585Rv9Zf",
        "number": 4452,
        "title": "fix typo namespace and format the code",
        "user": {
            "login": "yaoyaowd",
            "id": 1124835,
            "node_id": "MDQ6VXNlcjExMjQ4MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1124835?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yaoyaowd",
            "html_url": "https://github.com/yaoyaowd",
            "followers_url": "https://api.github.com/users/yaoyaowd/followers",
            "following_url": "https://api.github.com/users/yaoyaowd/following{/other_user}",
            "gists_url": "https://api.github.com/users/yaoyaowd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yaoyaowd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yaoyaowd/subscriptions",
            "organizations_url": "https://api.github.com/users/yaoyaowd/orgs",
            "repos_url": "https://api.github.com/users/yaoyaowd/repos",
            "events_url": "https://api.github.com/users/yaoyaowd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yaoyaowd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-31T06:14:15Z",
        "updated_at": "2023-05-31T16:52:39Z",
        "closed_at": "2023-05-31T16:52:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4452",
            "html_url": "https://github.com/run-llama/llama_index/pull/4452",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4452.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4452.patch",
            "merged_at": "2023-05-31T16:52:39Z"
        },
        "body": "### Changes\r\n* Change `name_space` to `namespace` in `SimpleDocumentStore`.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4452/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4452/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4450",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4450/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4450/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4450/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4450",
        "id": 1733422780,
        "node_id": "I_kwDOIWuq585nUe68",
        "number": 4450,
        "title": "VectorIndexRetriever  with llama to retreive documents ",
        "user": {
            "login": "abdoelsayed2016",
            "id": 27821589,
            "node_id": "MDQ6VXNlcjI3ODIxNTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/27821589?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abdoelsayed2016",
            "html_url": "https://github.com/abdoelsayed2016",
            "followers_url": "https://api.github.com/users/abdoelsayed2016/followers",
            "following_url": "https://api.github.com/users/abdoelsayed2016/following{/other_user}",
            "gists_url": "https://api.github.com/users/abdoelsayed2016/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abdoelsayed2016/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abdoelsayed2016/subscriptions",
            "organizations_url": "https://api.github.com/users/abdoelsayed2016/orgs",
            "repos_url": "https://api.github.com/users/abdoelsayed2016/repos",
            "events_url": "https://api.github.com/users/abdoelsayed2016/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abdoelsayed2016/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-05-31T05:39:05Z",
        "updated_at": "2023-07-20T16:22:28Z",
        "closed_at": "2023-06-06T21:19:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello \r\nI am trying to use Llama with VectorIndexRetriever to retrieve documents, not generate the answer, but when I print the response, I find it \r\n```\r\nAnswer: The answer is:\r\n\r\n\\begin{blockquote}\r\n\r\n Wilhelm Conrad Roentgen\r\n\\end{blockquote}\r\n\r\n```\r\n```\r\nimport os\r\nos.environ['OPENAI_API_KEY'] = \"\"\r\nfrom llama_index.retrievers import BaseRetriever, VectorIndexRetriever, KeywordTableSimpleRetriever\r\nfrom llama_index import ResponseSynthesizer\r\nfrom llama_index.indices.postprocessor import SimilarityPostprocessor\r\n\r\nfrom llama_index.query_engine import RetrieverQueryEngine\r\nfrom llama_index import LLMPredictor,  download_loader, GPTListIndex, ServiceContext, PromptHelper, LangchainEmbedding, GPTVectorStoreIndex\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom llama_index.embeddings.openai import OpenAIEmbedding\r\nfrom llama_index.llm_predictor import HuggingFaceLLMPredictor\r\nfrom langchain import OpenAI\r\nimport torch\r\nfrom llama_index import SimpleDirectoryReader\r\nfrom llama_index import Document\r\nfrom langchain.llms import HuggingFacePipeline\r\nfrom transformers import pipeline\r\n\r\n\r\n\r\ntext_list = ['The first Nobel Prize in Physics was awarded in 1901 to Wilhelm Conrad R\\u00f6ntgen \\\"for his discovery of the remarkable rays subsequently named after him\\\".',\r\n'The Nobel Prize in Physics is a yearly award given by the Royal Swedish Academy of Sciences for those who have made the most outstanding contributions for mankind in the field of physics. It is one of the five Nobel Prizes established by the 1895 will of Alfred Nobel, which are awarded for outstanding contributions in chemistry, physiology or medicine, literature, and physics. These prizes are awarded in Stockholm, Sweden. The first Nobel Prize in Physics was awarded to Wilhelm R\\u00f6ntgen in 1901.',\r\n'The next Deadpool movie is set to be released on June 1, 2018.'\r\n]#\r\n\r\nmodel_name= \"yahma/llama-7b-hf\"\r\ntokenizer_name=\"yahma/llama-7b-hf\"\r\npipe = pipeline(\r\n     model=model_name, tokenizer=tokenizer_name,\r\n    max_length=1024, temperature=0, top_p = 1,no_repeat_ngram_size=4, early_stopping=True\r\n)\r\n\r\ndocuments = [Document(t) for t in text_list]\r\n\r\nprint(\"HuggingFaceLLMPredictor\")\r\n\r\nllm = HuggingFacePipeline(pipeline=pipe)\r\n\r\n\"\"\"HuggingFaceLLMPredictor(\r\n    max_input_size=4096, \r\n    max_new_tokens=256,\r\n    temperature=0.7,\r\n    do_sample=False,\r\n    tokenizer_name=\"yahma/llama-7b-hf\",\r\n    model_name=\"yahma/llama-7b-hf\",\r\n    device_map=\"auto\",\r\n    stopping_ids=[50278, 50279, 50277, 1, 0],\r\n    tokenizer_kwargs={\"max_length\": 4096},\r\n    # uncomment this if using CUDA to reduce memory usage\r\n    # model_kwargs={\"torch_dtype\": torch.float16}\r\n)\"\"\"\r\n\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings())\r\n\r\n\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\n# define prompt helper\r\n# set maximum input size\r\nmax_input_size = 4096\r\n# set number of output tokens\r\nnum_output = 2048\r\n# set maximum chunk overlap\r\nmax_chunk_overlap = 10\r\n# set chunk size limit\r\nchunk_size_limit = 1024\r\n\r\n\r\nprompt_helper = PromptHelper(max_input_size, num_output, max_chunk_overlap, chunk_size_limit=chunk_size_limit)\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper,\r\n                                               embed_model=embed_model)\r\nindex = GPTVectorStoreIndex.from_documents(\r\n        documents, service_context=service_context\r\n    )\r\nindex.storage_context.persist(persist_dir=\"./storage2\")\r\n\r\n    # configure retriever\r\nretriever = VectorIndexRetriever(\r\n        service_context=service_context,\r\n        index=index,\r\n        similarity_top_k=1,\r\n\r\n    )\r\n    # configure response synthesizer\r\nresponse_synthesizer = ResponseSynthesizer.from_args(\r\n        service_context=service_context,\r\n        node_postprocessors=[\r\n            SimilarityPostprocessor(similarity_cutoff=0.7)\r\n        ]\r\n    )\r\n    # retriever = index.as_retriever(retriever_mode='default')\r\n\r\n    # assemble query engine\r\nquery_engine = RetrieverQueryEngine(\r\n        retriever=retriever,\r\n        response_synthesizer=response_synthesizer,\r\n    )\r\nresponse = query_engine.query(\"who got the first nobel prize in physics\")\r\nprint(response)\r\n```\r\n\r\nhow can i make it to retrieve the document from the list of documents in the above example i gave only 3 documents as example",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4450/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4450/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4449",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4449/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4449/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4449/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4449",
        "id": 1733399497,
        "node_id": "I_kwDOIWuq585nUZPJ",
        "number": 4449,
        "title": "getting error raise JsonDecodeError(\"Extra data\", s, end) with llama_index 0.6.9",
        "user": {
            "login": "siddhant01",
            "id": 31789669,
            "node_id": "MDQ6VXNlcjMxNzg5NjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/31789669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/siddhant01",
            "html_url": "https://github.com/siddhant01",
            "followers_url": "https://api.github.com/users/siddhant01/followers",
            "following_url": "https://api.github.com/users/siddhant01/following{/other_user}",
            "gists_url": "https://api.github.com/users/siddhant01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/siddhant01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/siddhant01/subscriptions",
            "organizations_url": "https://api.github.com/users/siddhant01/orgs",
            "repos_url": "https://api.github.com/users/siddhant01/repos",
            "events_url": "https://api.github.com/users/siddhant01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/siddhant01/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-31T05:10:19Z",
        "updated_at": "2023-09-10T16:57:22Z",
        "closed_at": "2023-09-10T16:57:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "we are facing an issue with llama_index.download_loader all of a sudden with llama_index 0.6.9\r\n\r\n![Screenshot 2023-05-31 at 10 25 17 AM](https://github.com/jerryjliu/llama_index/assets/31789669/6dd5aeac-d6fc-453d-96d6-db310e5753ba)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4449/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4444",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4444/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4444/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4444/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4444",
        "id": 1733249749,
        "node_id": "PR_kwDOIWuq585RvQV3",
        "number": 4444,
        "title": "Adjust OpenSearch document fields",
        "user": {
            "login": "drakejwong",
            "id": 40375132,
            "node_id": "MDQ6VXNlcjQwMzc1MTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/40375132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/drakejwong",
            "html_url": "https://github.com/drakejwong",
            "followers_url": "https://api.github.com/users/drakejwong/followers",
            "following_url": "https://api.github.com/users/drakejwong/following{/other_user}",
            "gists_url": "https://api.github.com/users/drakejwong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/drakejwong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/drakejwong/subscriptions",
            "organizations_url": "https://api.github.com/users/drakejwong/orgs",
            "repos_url": "https://api.github.com/users/drakejwong/repos",
            "events_url": "https://api.github.com/users/drakejwong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/drakejwong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-31T01:45:35Z",
        "updated_at": "2023-05-31T07:47:51Z",
        "closed_at": "2023-05-31T07:14:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4444",
            "html_url": "https://github.com/run-llama/llama_index/pull/4444",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4444.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4444.patch",
            "merged_at": "2023-05-31T07:14:02Z"
        },
        "body": "### Added\r\n* Store `extra_info`, `node_info`, and `relationships` as fields on the OpenSearch document.\r\n  * There are [helper methods](https://github.com/jerryjliu/llama_index/blob/8c40ecbb74fc1d74e9ee278422e34fa4185904d8/llama_index/vector_stores/utils.py) to transform node metadata to and from a serialized string, but the expected usage pattern for OpenSearch is storing the nested JSON data directly. In case users would want to interact with the OpenSearch documents directly, it's best to avoid serialization here.\r\n\r\n### Changed\r\n* For `extra_info`, parse the retrieved OpenSearch document fields rather than dumping `_source`.\r\n  * We will now insert `extra_info` into a dedicated field on the OpenSearch document, and will pull it back out directly during retrieval.\r\n  * This should fix https://github.com/jerryjliu/llama_index/issues/3788. Before, we naively dumped `_source` which included the embedding, failing the validation for a flat metadata dict.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4444/reactions",
            "total_count": 4,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4444/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4438",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4438/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4438/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4438/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4438",
        "id": 1733193981,
        "node_id": "PR_kwDOIWuq585RvFDl",
        "number": 4438,
        "title": "[version] bump version to 0.6.15",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T00:21:32Z",
        "updated_at": "2023-05-31T00:24:52Z",
        "closed_at": "2023-05-31T00:24:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4438",
            "html_url": "https://github.com/run-llama/llama_index/pull/4438",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4438.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4438.patch",
            "merged_at": "2023-05-31T00:24:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4438/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4438/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4374",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4374/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4374/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4374/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4374",
        "id": 1732777084,
        "node_id": "I_kwDOIWuq585nSBR8",
        "number": 4374,
        "title": "If not found context, search directly in openai",
        "user": {
            "login": "NaelsonAccountDrive",
            "id": 122898249,
            "node_id": "U_kgDOB1NHSQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/122898249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NaelsonAccountDrive",
            "html_url": "https://github.com/NaelsonAccountDrive",
            "followers_url": "https://api.github.com/users/NaelsonAccountDrive/followers",
            "following_url": "https://api.github.com/users/NaelsonAccountDrive/following{/other_user}",
            "gists_url": "https://api.github.com/users/NaelsonAccountDrive/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NaelsonAccountDrive/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NaelsonAccountDrive/subscriptions",
            "organizations_url": "https://api.github.com/users/NaelsonAccountDrive/orgs",
            "repos_url": "https://api.github.com/users/NaelsonAccountDrive/repos",
            "events_url": "https://api.github.com/users/NaelsonAccountDrive/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NaelsonAccountDrive/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-30T18:38:56Z",
        "updated_at": "2023-07-22T02:30:25Z",
        "closed_at": "2023-07-22T02:30:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "like see over title, i have a dataset with some text, but if dont found i need enable to search GPT. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4374/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4374/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4362",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4362/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4362/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4362/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4362",
        "id": 1732561807,
        "node_id": "I_kwDOIWuq585nRMuP",
        "number": 4362,
        "title": "Index wiped when application closes despite being told to persist (save to disk) according to the documentation ",
        "user": {
            "login": "JViggiani",
            "id": 41336980,
            "node_id": "MDQ6VXNlcjQxMzM2OTgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/41336980?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JViggiani",
            "html_url": "https://github.com/JViggiani",
            "followers_url": "https://api.github.com/users/JViggiani/followers",
            "following_url": "https://api.github.com/users/JViggiani/following{/other_user}",
            "gists_url": "https://api.github.com/users/JViggiani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JViggiani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JViggiani/subscriptions",
            "organizations_url": "https://api.github.com/users/JViggiani/orgs",
            "repos_url": "https://api.github.com/users/JViggiani/repos",
            "events_url": "https://api.github.com/users/JViggiani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JViggiani/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-30T16:04:49Z",
        "updated_at": "2023-06-11T07:27:03Z",
        "closed_at": "2023-06-11T07:27:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Here is my script:\r\n\r\n```\r\nfrom llama_index import SimpleDirectoryReader, GPTListIndex, GPTVectorStoreIndex, LLMPredictor, PromptHelper, ResponseSynthesizer, StorageContext, load_index_from_storage, ServiceContext\r\nfrom llama_index.retrievers import VectorIndexRetriever\r\nfrom llama_index.query_engine import RetrieverQueryEngine\r\nfrom llama_index.indices.postprocessor import SimilarityPostprocessor\r\nfrom llama_index.indices.response.type import ResponseMode\r\n\r\nfrom langchain.chat_models import ChatOpenAI\r\nimport gradio as gr\r\nimport sys\r\nimport os\r\nfrom dotenv import load_dotenv\r\n\r\nload_dotenv()\r\nopen_api_key = os.getenv(\"OPENAI_API_KEY\")\r\nprint(open_api_key)\r\n\r\ndocstore = \"data/docs\"\r\npersistdir = \"data/persist\"\r\n\r\n\r\n# def load_or_construct_index():\r\n#     if os.path.exists(indexstore):\r\n#         return load_index()\r\n#     else:\r\n#         return construct_index()\r\n\r\ndef construct_index():\r\n    max_input_size = 4096\r\n    num_outputs = 512\r\n    max_chunk_overlap = 20\r\n    chunk_size_limit = 600\r\n\r\n    prompt_helper = PromptHelper(max_input_size, num_outputs, max_chunk_overlap, chunk_size_limit=chunk_size_limit)\r\n\r\n    llm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0.8, model_name=\"gpt-3.5-turbo\", max_tokens=num_outputs))\r\n    service_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\n\r\n    documents = SimpleDirectoryReader(docstore).load_data()\r\n\r\n    # index = GPTVectorStoreIndex(documents, llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\n    index = GPTVectorStoreIndex.from_documents(\r\n        documents, service_context=service_context\r\n    )\r\n\r\n    index.storage_context.persist(persist_dir=persistdir)\r\n\r\n    return index\r\n\r\ndef load_index():\r\n    storage_context = StorageContext.from_defaults()\r\n    storage_context.persist(persist_dir=persistdir)\r\n    index = load_index_from_storage(storage_context)\r\n    return index\r\n\r\n# index = construct_index()\r\nindex = load_index()\r\n\r\n# configure retriever\r\nretriever = VectorIndexRetriever(\r\n    index=index, \r\n    similarity_top_k=15,\r\n)\r\n\r\n# configure response synthesizer\r\nresponse_synthesizer = ResponseSynthesizer.from_args(\r\n    node_postprocessors=[\r\n        SimilarityPostprocessor(similarity_cutoff=0.7)\r\n    ]\r\n)\r\n\r\n# assemble query engine\r\nquery_engine = RetrieverQueryEngine(\r\n    retriever=retriever,\r\n    response_synthesizer=response_synthesizer,\r\n    response_mode=ResponseMode.TREE_SUMMARIZE,\r\n)\r\n\r\n\r\ndef chatbot(input_text):\r\n    response = query_engine.query(input_text)\r\n    return f'{response.response}\\nSources:\\n{response.get_formatted_sources()}'\r\n\r\niface = gr.Interface(fn=chatbot,\r\n                     inputs=gr.components.Textbox(lines=7, label=\"Enter your text\"),\r\n                     outputs=\"text\",\r\n                     title=\"Custom-trained AI Chatbot\")\r\n\r\niface.launch(share=True)\r\n```\r\n\r\nI ran this after quite a long indexing session, and a docstore, index_store and vector_store set of json files were indeed created and populated. \r\n\r\nHowever, I ctrl+c'd my cmd run because of a now-fixed (I think) bug, and upon close, my json files got wiped! This is rather irritating as it's cost me about $10. \r\n\r\nThe documentation is rather sparse here, and it only says that a single function should be called: https://gpt-index.readthedocs.io/en/latest/how_to/storage/save_load.html\r\n\r\nI believe that I am doing this on the line: `index.storage_context.persist(persist_dir=persistdir)`\r\n\r\nThe documentation has nothing to say about when this ought to be called. Am I doing something wrong here, and is it covered by the current documentation?\r\n\r\nAgain I should stress that the index was indeed written to disk, but that upon application shutdown it was wiped. Now I have three empty json files left on disk. \r\n\r\nCheers!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4362/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4362/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4348",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4348/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4348/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4348/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4348",
        "id": 1732243768,
        "node_id": "I_kwDOIWuq585nP_E4",
        "number": 4348,
        "title": "How deeplake to load a stored file into the index",
        "user": {
            "login": "mintisan",
            "id": 9136049,
            "node_id": "MDQ6VXNlcjkxMzYwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9136049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintisan",
            "html_url": "https://github.com/mintisan",
            "followers_url": "https://api.github.com/users/mintisan/followers",
            "following_url": "https://api.github.com/users/mintisan/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintisan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintisan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintisan/subscriptions",
            "organizations_url": "https://api.github.com/users/mintisan/orgs",
            "repos_url": "https://api.github.com/users/mintisan/repos",
            "events_url": "https://api.github.com/users/mintisan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintisan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-30T13:10:18Z",
        "updated_at": "2023-06-02T02:03:54Z",
        "closed_at": "2023-06-02T02:03:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Here is the code for saving and loading. \r\n\r\n```\r\nif not os.path.exists(\"./storage_deeplake\"):\r\n    print(\"generate storage context\")\r\n    vector_store = DeepLakeVectorStore(dataset_path=\"storage_deeplake\", overwrite=True)\r\n    storage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n    index = GPTVectorStoreIndex.from_documents(documents, storage_context=storage_context)\r\n    index.storage_context.persist(persist_dir=\"./storage_deeplake\")\r\nelse:\r\n    # load index from disk\r\n    print(\"load index from disk\")\r\n    vector_store = DeepLakeVectorStore(dataset_path=\"storage_deeplake\")\r\n    storage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n    index = load_index_from_storage(storage_context=storage_context)\r\n\r\n```\r\n\r\nSaving works fine, but loading prompts the following error:\r\n\r\n```\r\nLoading all indices.\r\nTraceback (most recent call last):\r\n  File \"/Users/mintisan/anaconda3/lib/python3.10/site-packages/humbug/report.py\", line 540, in _hook\r\n    self.error_report(error=exception_instance, tags=tags, publish=publish)\r\n  File \"/Users/mintisan/anaconda3/lib/python3.10/site-packages/humbug/report.py\", line 274, in error_report\r\n    traceback.format_exception(\r\nTypeError: format_exception() got an unexpected keyword argument 'etype'\r\n\r\nOriginal exception was:\r\nTraceback (most recent call last):\r\n  File \"/Users/mintisan/Workspaces/streamlit_chatbot/llamaindex_example23_deeplake.py\", line 62, in <module>\r\n    index = load_index_from_storage(storage_context=storage_context)\r\n  File \"/Users/mintisan/anaconda3/lib/python3.10/site-packages/llama_index/indices/loading.py\", line 36, in load_index_from_storage\r\n    raise ValueError(\r\nValueError: No index in storage context, check if you specified the right persist_dir.\r\n\r\nProcess finished with exit code 1\r\n```\r\n\r\nI didn't see the generation of `vector_store.json` file, and I don't know how to do it.\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/9136049/970c1d07-88f8-4771-9c06-28fe50e11f4e)\r\n\r\nI did not see this operation in the relevant documents. Could anyone please advise on how to proceed?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4348/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4348/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4342",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4342/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4342/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4342/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4342",
        "id": 1732051169,
        "node_id": "PR_kwDOIWuq585RrLST",
        "number": 4342,
        "title": "Docs/cn 0.6.14",
        "user": {
            "login": "stephenzhao",
            "id": 1239329,
            "node_id": "MDQ6VXNlcjEyMzkzMjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1239329?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stephenzhao",
            "html_url": "https://github.com/stephenzhao",
            "followers_url": "https://api.github.com/users/stephenzhao/followers",
            "following_url": "https://api.github.com/users/stephenzhao/following{/other_user}",
            "gists_url": "https://api.github.com/users/stephenzhao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stephenzhao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stephenzhao/subscriptions",
            "organizations_url": "https://api.github.com/users/stephenzhao/orgs",
            "repos_url": "https://api.github.com/users/stephenzhao/repos",
            "events_url": "https://api.github.com/users/stephenzhao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stephenzhao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T11:20:48Z",
        "updated_at": "2023-05-30T11:21:09Z",
        "closed_at": "2023-05-30T11:21:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4342",
            "html_url": "https://github.com/run-llama/llama_index/pull/4342",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4342.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4342.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4342/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4342/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4341",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4341/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4341/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4341/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4341",
        "id": 1732047326,
        "node_id": "I_kwDOIWuq585nPPHe",
        "number": 4341,
        "title": "TypeError: Instance and class checks can only be used with @runtime_checkable protocols",
        "user": {
            "login": "diogofouto",
            "id": 26695606,
            "node_id": "MDQ6VXNlcjI2Njk1NjA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/26695606?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/diogofouto",
            "html_url": "https://github.com/diogofouto",
            "followers_url": "https://api.github.com/users/diogofouto/followers",
            "following_url": "https://api.github.com/users/diogofouto/following{/other_user}",
            "gists_url": "https://api.github.com/users/diogofouto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/diogofouto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/diogofouto/subscriptions",
            "organizations_url": "https://api.github.com/users/diogofouto/orgs",
            "repos_url": "https://api.github.com/users/diogofouto/repos",
            "events_url": "https://api.github.com/users/diogofouto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/diogofouto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-30T11:18:02Z",
        "updated_at": "2023-05-31T15:33:47Z",
        "closed_at": "2023-05-31T15:33:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Traceback (most recent call last):\r\n  File \"/Users/diogofouto/Documents/MEIC-A/Tese/llama_playground/main.py\", line 3, in <module>\r\n    from llama_index import (\r\n  File \"/Users/diogofouto/Documents/MEIC-A/Tese/llama_playground/llama_index/__init__.py\", line 18, in <module>\r\n    from llama_index.indices.common.struct_store.base import SQLDocumentContextBuilder\r\n  File \"/Users/diogofouto/Documents/MEIC-A/Tese/llama_playground/llama_index/indices/__init__.py\", line 4, in <module>\r\n    from llama_index.indices.keyword_table.base import GPTKeywordTableIndex\r\n  File \"/Users/diogofouto/Documents/MEIC-A/Tese/llama_playground/llama_index/indices/keyword_table/__init__.py\", line 4, in <module>\r\n    from llama_index.indices.keyword_table.base import GPTKeywordTableIndex\r\n  File \"/Users/diogofouto/Documents/MEIC-A/Tese/llama_playground/llama_index/indices/keyword_table/base.py\", line 18, in <module>\r\n    from llama_index.indices.base import BaseGPTIndex\r\n  File \"/Users/diogofouto/Documents/MEIC-A/Tese/llama_playground/llama_index/indices/base.py\", line 8, in <module>\r\n    from llama_index.indices.base_retriever import BaseRetriever\r\n  File \"/Users/diogofouto/Documents/MEIC-A/Tese/llama_playground/llama_index/indices/base_retriever.py\", line 5, in <module>\r\n    from llama_index.indices.query.schema import QueryBundle, QueryType\r\n  File \"/Users/diogofouto/Documents/MEIC-A/Tese/llama_playground/llama_index/indices/query/__init__.py\", line 3, in <module>\r\n    from llama_index.indices.query.response_synthesis import ResponseSynthesizer\r\n  File \"/Users/diogofouto/Documents/MEIC-A/Tese/llama_playground/llama_index/indices/query/response_synthesis.py\", line 5, in <module>\r\n    from llama_index.indices.postprocessor.types import BaseNodePostprocessor\r\n  File \"/Users/diogofouto/Documents/MEIC-A/Tese/llama_playground/llama_index/indices/postprocessor/__init__.py\", line 4, in <module>\r\n    from llama_index.indices.postprocessor.node import (\r\n  File \"/Users/diogofouto/Documents/MEIC-A/Tese/llama_playground/llama_index/indices/postprocessor/node.py\", line 236, in <module>\r\n    class AutoPrevNextNodePostprocessor(BasePydanticNodePostprocessor):\r\n  File \"pydantic/main.py\", line 197, in pydantic.main.ModelMetaclass.__new__\r\n  File \"pydantic/fields.py\", line 506, in pydantic.fields.ModelField.infer\r\n  File \"pydantic/fields.py\", line 436, in pydantic.fields.ModelField.__init__\r\n  File \"pydantic/fields.py\", line 557, in pydantic.fields.ModelField.prepare\r\n  File \"pydantic/fields.py\", line 831, in pydantic.fields.ModelField.populate_validators\r\n  File \"pydantic/validators.py\", line 725, in find_validators\r\n  File \"pydantic/dataclasses.py\", line 478, in make_dataclass_validator\r\n    value = f'{default_name}()'\r\n  File \"pydantic/dataclasses.py\", line 231, in pydantic.dataclasses.dataclass\r\n    repr_running = set()\r\n  File \"pydantic/dataclasses.py\", line 224, in pydantic.dataclasses.dataclass.wrap\r\n    _MODULE_IDENTIFIER_RE = re.compile(r'^(?:\\s*(\\w+)\\s*\\.)?\\s*(\\w+)')\r\n  File \"pydantic/dataclasses.py\", line 347, in pydantic.dataclasses._add_pydantic_validation_attributes\r\n    self.init = init\r\n  File \"pydantic/dataclasses.py\", line 400, in pydantic.dataclasses.create_pydantic_model_from_dataclass\r\n    \r\n  File \"pydantic/main.py\", line 1026, in pydantic.main.create_model\r\n  File \"pydantic/main.py\", line 197, in pydantic.main.ModelMetaclass.__new__\r\n  File \"pydantic/fields.py\", line 506, in pydantic.fields.ModelField.infer\r\n  File \"pydantic/fields.py\", line 436, in pydantic.fields.ModelField.__init__\r\n  File \"pydantic/fields.py\", line 552, in pydantic.fields.ModelField.prepare\r\n  File \"pydantic/fields.py\", line 639, in pydantic.fields.ModelField._type_analysis\r\n  File \"/opt/homebrew/Caskroom/miniforge/base/envs/ai/lib/python3.11/typing.py\", line 1979, in __instancecheck__\r\n    raise TypeError(\"Instance and class checks can only be used with\"\r\nTypeError: Instance and class checks can only be used with @runtime_checkable protocols",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4341/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4341/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4298",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4298/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4298/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4298/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4298",
        "id": 1731780352,
        "node_id": "PR_kwDOIWuq585RqQWB",
        "number": 4298,
        "title": "MongoDB Reader: Added metadata functionality",
        "user": {
            "login": "giurul",
            "id": 130969240,
            "node_id": "U_kgDOB85umA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130969240?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giurul",
            "html_url": "https://github.com/giurul",
            "followers_url": "https://api.github.com/users/giurul/followers",
            "following_url": "https://api.github.com/users/giurul/following{/other_user}",
            "gists_url": "https://api.github.com/users/giurul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giurul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giurul/subscriptions",
            "organizations_url": "https://api.github.com/users/giurul/orgs",
            "repos_url": "https://api.github.com/users/giurul/repos",
            "events_url": "https://api.github.com/users/giurul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giurul/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T08:32:51Z",
        "updated_at": "2023-06-21T07:09:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4298",
            "html_url": "https://github.com/run-llama/llama_index/pull/4298",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4298.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4298.patch",
            "merged_at": null
        },
        "body": "You can now include other fields from mongodb to have metadata information in the generated documents. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4298/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4298/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4279",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4279/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4279/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4279/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4279",
        "id": 1731667047,
        "node_id": "I_kwDOIWuq585nNyRn",
        "number": 4279,
        "title": "HuggingFaceLLMPredictor",
        "user": {
            "login": "SergeyIcool",
            "id": 22932280,
            "node_id": "MDQ6VXNlcjIyOTMyMjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/22932280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergeyIcool",
            "html_url": "https://github.com/SergeyIcool",
            "followers_url": "https://api.github.com/users/SergeyIcool/followers",
            "following_url": "https://api.github.com/users/SergeyIcool/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergeyIcool/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergeyIcool/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergeyIcool/subscriptions",
            "organizations_url": "https://api.github.com/users/SergeyIcool/orgs",
            "repos_url": "https://api.github.com/users/SergeyIcool/repos",
            "events_url": "https://api.github.com/users/SergeyIcool/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergeyIcool/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-30T07:18:13Z",
        "updated_at": "2023-07-23T03:13:43Z",
        "closed_at": "2023-07-23T03:13:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Thank you for your work!\r\nI use HuggingFaceLLMPredictor to combine llama-index with llama-ai. In this case, the model gives the wrong answer. But when I replaced llama-ai with openAI everything worked correctly. Please tell me what is my problem?\r\nMaybe there are other ways to combine llama-index with llama-ai?\r\n\r\nllama-index - 0.6.10.post1\r\nlangchain - 0.0.179\r\ntransformers - 4.27.0.dev0\r\n![2023-05-30_10-09](https://github.com/jerryjliu/llama_index/assets/22932280/01004466-eb60-4ba1-9f64-c5bd9e5fc21a)\r\n\r\n\r\n```\r\nimport os\r\nos.environ['OPENAI_API_KEY'] = \"\"\r\n\r\nfrom llama_index import LLMPredictor, download_loader, GPTListIndex, ServiceContext, PromptHelper, LangchainEmbedding, GPTVectorStoreIndex\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom llama_index.embeddings.openai import OpenAIEmbedding\r\nfrom llama_index.llm_predictor import HuggingFaceLLMPredictor\r\nfrom langchain import OpenAI\r\nimport torch\r\nfrom llama_index import SimpleDirectoryReader\r\n\r\nprint(\"SimpleDirectoryReader\")\r\nSimpleDirectoryReader = download_loader(\"SimpleDirectoryReader\")\r\nloader = SimpleDirectoryReader('/projects/llama_local/data/', recursive=True, exclude_hidden=True)\r\ndocuments = loader.load_data()\r\n\r\nprint(\"HuggingFaceLLMPredictor\")\r\nllm_predictor = HuggingFaceLLMPredictor(\r\n    max_input_size=2048, \r\n    max_new_tokens=256,\r\n    temperature=0,\r\n    do_sample=False, \r\n    tokenizer_name=\"huggyllama/llama-7b\",\r\n    model_name=\"huggyllama/llama-7b\",\r\n    device_map=\"auto\",\r\n    tokenizer_kwargs={\"max_length\": 2048},\r\n    # uncomment this if using CUDA to reduce memory usage\r\n    model_kwargs={\"torch_dtype\": torch.float16}\r\n)\r\n\r\n# llm_predictor = LLMPredictor(llm=OpenAI(temperature=0, model_name=\"text-davinci-003\"))\r\n\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings())\r\n![2023-05-30_10-09](https://github.com/jerryjliu/llama_index/assets/22932280/d877c79a-6412-42ee-9bfd-d416d2a46061)\r\n\r\nprint(\"ServiceContext\")\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, chunk_size_limit=512, embed_model=embed_model)\r\nprint(\"GPTListIndex\")\r\ncur_index = GPTVectorStoreIndex.from_documents(\r\n    documents, \r\n    service_context=service_context,\r\n)\r\n\r\nprint(\"as_query_engine\")\r\nquery_engine = cur_index.as_query_engine(\r\n    # service_context=service_context,\r\n    # similarity_top_k=3,\r\n    # retriever_mode=\"embedding\", \r\n    verbose=True,\r\n)\r\n\r\nprint(\"query\")\r\nresponse = query_engine.query(\r\n    \"What do you know about ScienceOpen?\", \r\n)\r\n\r\nprint(\"response\")\r\nprint(response)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4279/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4279/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4277",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4277/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4277/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4277/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4277",
        "id": 1731648085,
        "node_id": "PR_kwDOIWuq585Rp0AU",
        "number": 4277,
        "title": "Clean up prompt helper ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-30T07:05:44Z",
        "updated_at": "2023-05-31T06:32:04Z",
        "closed_at": "2023-05-31T06:32:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4277",
            "html_url": "https://github.com/run-llama/llama_index/pull/4277",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4277.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4277.patch",
            "merged_at": "2023-05-31T06:32:03Z"
        },
        "body": "I introduced breaking API changes (mostly param naming), as it was pretty difficult/confusing to do so without proper renaming etc.\r\n \r\n### Notable changes\r\n* Change `PromptHelper` to be configured via `chunk_overlap_ratio` and `chunk_size_limit`\r\n* Change `ServiceContext` to only pass `chunk_size` to node parser, and NOT configure `chunk_size_limit` for the `PromptHelper`\r\n> It's not clear to me why users may want to set a `chunk_size_limit` on `PromptHelper`. AFAIK the whole point of `PromptHelper` is to automatically set chunk size to maximally pack context window given desired number of chunks.\r\n* Set `DEFAULT_CHUNK_OVERLAP` to be much smaller at `20`\r\n> This makes it less likely that users encounter the issue of setting too small of a chunk size for node parser. And it's no clear to me that we need high chunk overlap, especially if we have good text splitters.\r\n\r\n### Other changes\r\n* Broad refactor in `PromptHelper` to improve code quality\r\n\r\n### Todos\r\n- [x] Fix unit-tests\r\n- [x] Fix notebooks and docs ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4277/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4260",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4260/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4260/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4260/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4260",
        "id": 1731494318,
        "node_id": "PR_kwDOIWuq585RpSpV",
        "number": 4260,
        "title": "update download_loader for llama-hub changes",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T04:42:13Z",
        "updated_at": "2023-05-31T00:20:57Z",
        "closed_at": "2023-05-31T00:20:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4260",
            "html_url": "https://github.com/run-llama/llama_index/pull/4260",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4260.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4260.patch",
            "merged_at": "2023-05-31T00:20:56Z"
        },
        "body": "in preparation for this PR https://github.com/emptycrown/llama-hub/pull/301",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4260/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4260/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4248",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4248/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4248/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4248/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4248",
        "id": 1731358763,
        "node_id": "PR_kwDOIWuq585Ro2VN",
        "number": 4248,
        "title": "add Psychic reader to llama_index",
        "user": {
            "login": "jasonwcfan",
            "id": 14931371,
            "node_id": "MDQ6VXNlcjE0OTMxMzcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/14931371?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasonwcfan",
            "html_url": "https://github.com/jasonwcfan",
            "followers_url": "https://api.github.com/users/jasonwcfan/followers",
            "following_url": "https://api.github.com/users/jasonwcfan/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasonwcfan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasonwcfan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasonwcfan/subscriptions",
            "organizations_url": "https://api.github.com/users/jasonwcfan/orgs",
            "repos_url": "https://api.github.com/users/jasonwcfan/repos",
            "events_url": "https://api.github.com/users/jasonwcfan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasonwcfan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-30T00:54:08Z",
        "updated_at": "2023-05-31T07:02:10Z",
        "closed_at": "2023-05-31T07:02:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4248",
            "html_url": "https://github.com/run-llama/llama_index/pull/4248",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4248.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4248.patch",
            "merged_at": "2023-05-31T07:02:10Z"
        },
        "body": "Adding a new Reader to LlamaIndex.\r\n\r\nPsychic: https://github.com/psychic-api/psychic\r\nPsychic docs: https://docs.psychic.dev/introduction\r\n\r\nPsychic is an open source tool that makes it easy to set up auth + data syncs with a variety of SaaS data sources, normalize data as standard HTML, and convert this data to LlamaIndex-compatible Documents.\r\n\r\nReason for adding it as a LlamaIndex Reader rather than a LlamaHub data loader:\r\n* Psychic is an aggregator of data sources, not a single data source unlike other LlamaHub loaders.\r\n* The `download_loader` pattern doesn't work well for some Psychic users who want to avoid having a dependency on a network call to github",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4248/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4247",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4247/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4247/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4247/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4247",
        "id": 1731358260,
        "node_id": "PR_kwDOIWuq585Ro2Pq",
        "number": 4247,
        "title": "Added functionality for initializing directly from triplets",
        "user": {
            "login": "NicholasHoffs",
            "id": 6625099,
            "node_id": "MDQ6VXNlcjY2MjUwOTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6625099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NicholasHoffs",
            "html_url": "https://github.com/NicholasHoffs",
            "followers_url": "https://api.github.com/users/NicholasHoffs/followers",
            "following_url": "https://api.github.com/users/NicholasHoffs/following{/other_user}",
            "gists_url": "https://api.github.com/users/NicholasHoffs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NicholasHoffs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NicholasHoffs/subscriptions",
            "organizations_url": "https://api.github.com/users/NicholasHoffs/orgs",
            "repos_url": "https://api.github.com/users/NicholasHoffs/repos",
            "events_url": "https://api.github.com/users/NicholasHoffs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NicholasHoffs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-30T00:52:57Z",
        "updated_at": "2023-06-08T20:10:53Z",
        "closed_at": "2023-06-08T20:10:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4247",
            "html_url": "https://github.com/run-llama/llama_index/pull/4247",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4247.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4247.patch",
            "merged_at": null
        },
        "body": "I needed functionality for initializing `GPTKnowledgeGraphIndex` using triplets. I could have made a workaround by initializing with an index_struct that has an empty Node in it, but this fix seemed necessary enough for a PR because adding manual triplets is a common way of initializing a knowledge graph before doing any automatic triplet extraction.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4247/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4247/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4246",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4246/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4246/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4246/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4246",
        "id": 1731356721,
        "node_id": "PR_kwDOIWuq585Ro178",
        "number": 4246,
        "title": "add agents guide",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T00:49:12Z",
        "updated_at": "2023-05-30T02:00:36Z",
        "closed_at": "2023-05-30T02:00:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4246",
            "html_url": "https://github.com/run-llama/llama_index/pull/4246",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4246.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4246.patch",
            "merged_at": "2023-05-30T02:00:35Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4246/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4246/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4238",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4238/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4238/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4238/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4238",
        "id": 1731331837,
        "node_id": "PR_kwDOIWuq585Row3G",
        "number": 4238,
        "title": "[version] bump version to 0.6.14",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T00:00:46Z",
        "updated_at": "2023-05-30T00:06:30Z",
        "closed_at": "2023-05-30T00:06:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4238",
            "html_url": "https://github.com/run-llama/llama_index/pull/4238",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4238.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4238.patch",
            "merged_at": "2023-05-30T00:06:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4238/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4238/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4231",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4231/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4231/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4231/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4231",
        "id": 1731234336,
        "node_id": "PR_kwDOIWuq585RocCz",
        "number": 4231,
        "title": "add extra_info docs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-29T21:03:06Z",
        "updated_at": "2023-08-28T17:10:37Z",
        "closed_at": "2023-05-29T21:42:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4231",
            "html_url": "https://github.com/run-llama/llama_index/pull/4231",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4231.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4231.patch",
            "merged_at": "2023-05-29T21:42:14Z"
        },
        "body": "This adds some basic docs for extra_info in the usage pattern section.\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/22285038/60c51e57-5114-4120-963b-3512cd6cd8e4)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4231/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4231/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4216",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4216/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4216/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4216/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4216",
        "id": 1731061369,
        "node_id": "PR_kwDOIWuq585Rn2-P",
        "number": 4216,
        "title": "Remove duplicate graph synthesize events",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-29T17:24:17Z",
        "updated_at": "2023-08-28T17:10:02Z",
        "closed_at": "2023-05-29T17:27:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4216",
            "html_url": "https://github.com/run-llama/llama_index/pull/4216",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4216.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4216.patch",
            "merged_at": "2023-05-29T17:27:33Z"
        },
        "body": "First observed in this PR: https://github.com/jerryjliu/llama_index/pull/3377\r\n\r\nThe synth event is in the response_synethsizer now, no need to duplicate it",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4216/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4216/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4196",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4196/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4196/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4196/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4196",
        "id": 1730850658,
        "node_id": "PR_kwDOIWuq585RnJCJ",
        "number": 4196,
        "title": "Bug fix for ignoring directories while parsing git repo",
        "user": {
            "login": "abhikhune",
            "id": 132149270,
            "node_id": "U_kgDOB-BwFg",
            "avatar_url": "https://avatars.githubusercontent.com/u/132149270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abhikhune",
            "html_url": "https://github.com/abhikhune",
            "followers_url": "https://api.github.com/users/abhikhune/followers",
            "following_url": "https://api.github.com/users/abhikhune/following{/other_user}",
            "gists_url": "https://api.github.com/users/abhikhune/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abhikhune/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abhikhune/subscriptions",
            "organizations_url": "https://api.github.com/users/abhikhune/orgs",
            "repos_url": "https://api.github.com/users/abhikhune/repos",
            "events_url": "https://api.github.com/users/abhikhune/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abhikhune/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-29T14:20:30Z",
        "updated_at": "2023-06-27T18:24:53Z",
        "closed_at": "2023-06-27T18:24:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4196",
            "html_url": "https://github.com/run-llama/llama_index/pull/4196",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4196.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4196.patch",
            "merged_at": "2023-06-27T18:24:52Z"
        },
        "body": "Fix for https://github.com/jerryjliu/llama_index/issues/3586\r\n\r\n\r\nHi, the code which checks to ignore the directories is using the file path, instead of the directory name. Changing it to the directory name fixes the issue.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4196/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4196/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4190",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4190/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4190/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4190/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4190",
        "id": 1730710072,
        "node_id": "I_kwDOIWuq585nKIo4",
        "number": 4190,
        "title": "ModuleNotFoundError: No module named 'llama_index.query_engine'",
        "user": {
            "login": "alonhartal",
            "id": 8341789,
            "node_id": "MDQ6VXNlcjgzNDE3ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8341789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alonhartal",
            "html_url": "https://github.com/alonhartal",
            "followers_url": "https://api.github.com/users/alonhartal/followers",
            "following_url": "https://api.github.com/users/alonhartal/following{/other_user}",
            "gists_url": "https://api.github.com/users/alonhartal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alonhartal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alonhartal/subscriptions",
            "organizations_url": "https://api.github.com/users/alonhartal/orgs",
            "repos_url": "https://api.github.com/users/alonhartal/repos",
            "events_url": "https://api.github.com/users/alonhartal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alonhartal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-29T12:51:09Z",
        "updated_at": "2023-12-12T20:26:27Z",
        "closed_at": "2023-05-30T14:56:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Using 0.6.13\r\n`from llama_index.query_engine import RetrieverQueryEngine`\r\n\r\ngetting ModuleNotFoundError: No module named 'llama_index.query_engine'",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4190/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4190/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4178",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4178/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4178/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4178/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4178",
        "id": 1730435098,
        "node_id": "I_kwDOIWuq585nJFga",
        "number": 4178,
        "title": "Make Flutter run with Streaming True",
        "user": {
            "login": "dinhan92",
            "id": 86275789,
            "node_id": "MDQ6VXNlcjg2Mjc1Nzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/86275789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dinhan92",
            "html_url": "https://github.com/dinhan92",
            "followers_url": "https://api.github.com/users/dinhan92/followers",
            "following_url": "https://api.github.com/users/dinhan92/following{/other_user}",
            "gists_url": "https://api.github.com/users/dinhan92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dinhan92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dinhan92/subscriptions",
            "organizations_url": "https://api.github.com/users/dinhan92/orgs",
            "repos_url": "https://api.github.com/users/dinhan92/repos",
            "events_url": "https://api.github.com/users/dinhan92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dinhan92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-29T09:41:17Z",
        "updated_at": "2023-06-02T04:23:21Z",
        "closed_at": "2023-06-02T04:23:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "So I have set Streaming==True and it run fine like chatGpt in Terminal. However, when I make it an api and try running on Flutter, the text only appears when all the response is finished. How do I make it generate word by word?\r\n@app.route('/api/chatbot', methods=['GET'])\r\ndef chatbot():\r\n    args = request.args\r\n    input_text = args.get('input')\r\n    \r\n    storage_context = StorageContext.from_defaults(persist_dir='./storage')\r\n    \r\n    index = load_index_from_storage(storage_context = storage_context,\r\n                                    # embed_model=embed_model, \r\n                                    service_context = service_context)\r\n    \r\n    query_engine = index.as_query_engine(\r\n        streaming=True,\r\n        \r\n    )\r\n\r\n    response = stream_with_context(query_engine.query(input_text).response_gen)\r\n    return response",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4178/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4178/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4177",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4177/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4177/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4177/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4177",
        "id": 1730123947,
        "node_id": "PR_kwDOIWuq585Rkpn5",
        "number": 4177,
        "title": "some document fixes",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-29T05:59:03Z",
        "updated_at": "2023-05-29T06:31:22Z",
        "closed_at": "2023-05-29T06:31:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4177",
            "html_url": "https://github.com/run-llama/llama_index/pull/4177",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4177.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4177.patch",
            "merged_at": "2023-05-29T06:31:21Z"
        },
        "body": "these fixes are mostly centered around the queries use cases page - also added some documentation to the SQL notebooks ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4177/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4177/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4176",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4176/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4176/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4176/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4176",
        "id": 1730035299,
        "node_id": "I_kwDOIWuq585nHj5j",
        "number": 4176,
        "title": "Am I wrong or gpt-turbo-3.5 is just limited?",
        "user": {
            "login": "dinhan92",
            "id": 86275789,
            "node_id": "MDQ6VXNlcjg2Mjc1Nzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/86275789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dinhan92",
            "html_url": "https://github.com/dinhan92",
            "followers_url": "https://api.github.com/users/dinhan92/followers",
            "following_url": "https://api.github.com/users/dinhan92/following{/other_user}",
            "gists_url": "https://api.github.com/users/dinhan92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dinhan92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dinhan92/subscriptions",
            "organizations_url": "https://api.github.com/users/dinhan92/orgs",
            "repos_url": "https://api.github.com/users/dinhan92/repos",
            "events_url": "https://api.github.com/users/dinhan92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dinhan92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 20,
        "created_at": "2023-05-29T04:39:22Z",
        "updated_at": "2023-06-16T02:30:08Z",
        "closed_at": "2023-06-16T02:30:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have a list of report files about agriculture (pdf files and each file is about one month (Jan, Feb, ..., Dec)) located in docs, now I just get chatgpt work with those files. However, when I have a question comparing statistics between November and May, the gpt says it does not find information. Is this a normal thing?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4176/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4176/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4175",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4175/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4175/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4175/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4175",
        "id": 1729988628,
        "node_id": "PR_kwDOIWuq585RkLlf",
        "number": 4175,
        "title": "Improve storage docs + other goodies",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-29T04:01:41Z",
        "updated_at": "2023-08-28T17:10:58Z",
        "closed_at": "2023-05-29T04:24:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4175",
            "html_url": "https://github.com/run-llama/llama_index/pull/4175",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4175.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4175.patch",
            "merged_at": "2023-05-29T04:24:13Z"
        },
        "body": "This PR does three things\r\n1. Improves docs around the storage context, adding more examples, links, and explanations\r\n2. Re-orders the vector store integrations page. The actual vector stores should come before the loaders (since people are probably more interested in integrating the actual vector store vs. loading data)\r\n3. Small nit change to the `CustomLLM` example to avoid memory issues due to pydantic ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4175/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4175/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4174",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4174/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4174/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4174/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4174",
        "id": 1729979544,
        "node_id": "PR_kwDOIWuq585RkJwB",
        "number": 4174,
        "title": "change twitter links ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-29T03:56:28Z",
        "updated_at": "2023-05-29T04:02:02Z",
        "closed_at": "2023-05-29T04:02:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4174",
            "html_url": "https://github.com/run-llama/llama_index/pull/4174",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4174.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4174.patch",
            "merged_at": "2023-05-29T04:02:01Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4174/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4174/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4173",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4173/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4173/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4173/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4173",
        "id": 1729959602,
        "node_id": "I_kwDOIWuq585nHRay",
        "number": 4173,
        "title": "GPTVectorStoreIndex throwing authentication error even when not using OpenAI",
        "user": {
            "login": "santoshs",
            "id": 144370,
            "node_id": "MDQ6VXNlcjE0NDM3MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/144370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/santoshs",
            "html_url": "https://github.com/santoshs",
            "followers_url": "https://api.github.com/users/santoshs/followers",
            "following_url": "https://api.github.com/users/santoshs/following{/other_user}",
            "gists_url": "https://api.github.com/users/santoshs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/santoshs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/santoshs/subscriptions",
            "organizations_url": "https://api.github.com/users/santoshs/orgs",
            "repos_url": "https://api.github.com/users/santoshs/repos",
            "events_url": "https://api.github.com/users/santoshs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/santoshs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-29T03:39:11Z",
        "updated_at": "2023-05-29T22:47:34Z",
        "closed_at": "2023-05-29T22:47:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Example code:\r\n\r\n```python\r\nclass LocalGPT4ALL(LLM):\r\n    \"\"\"Custom LocalOPT LLM model.\"\"\"\r\n\r\n    model_name = \"nomic-ai/GPT4All-13b-snoozy\"\r\n    pipeline = pipeline(\"text-generation\", model=model_name,\r\n                        device=\"cuda:0\",\r\n                        model_kwargs={\"torch_dtype\": torch.bfloat16})\r\n\r\n    def _call(self, prompt: str, stop=None) -> str:\r\n        \"\"\"Generate response for the given prompt.\"\"\"\r\n        response = self.pipeline(prompt, max_new_tokens=256)\r\n        return response[0][\"generated_text\"]\r\n\r\n    @property\r\n    def _identifying_params(self):\r\n        \"\"\"Return identifying parameters for the LLM.\"\"\"\r\n        return {\"name_of_model\": self.model_name}\r\n\r\n    @property\r\n    def _llm_type(self):\r\n        \"\"\"Return the type of LLM.\"\"\"\r\n        return \"custom\"\r\n\r\n\r\ndef create_index(config_data):\r\n    os.environ['OPENAI_API_KEY'] = 'random'\r\n    \"\"\"Create and load the GPTVectorStoreIndex.\"\"\"\r\n    llm = LLMPredictor(llm=LocalGPT4ALL())\r\n    service_context = ServiceContext.from_defaults(\r\n        llm_predictor=llm,\r\n        prompt_helper=initialize_prompt_helper\r\n    )\r\n\r\n    print(\"Creating index\")\r\n    documents = SimpleDirectoryReader(\r\n        os.path.expanduser(config_data['data_dir']),\r\n        recursive=True).load_data()\r\n    index = GPTVectorStoreIndex.from_documents(\r\n        documents\r\n    )\r\n    index.storage_context.persist(\r\n        persist_dir=os.path.expanduser(config_data['training_data_dir']))\r\n\r\n    return index\r\n\r\nindex = create_index(config_data)\r\n```\r\n\r\nRunning this throws:\r\n\r\n```\r\nLoading checkpoint shards: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 6/6 [00:18<00:00,  3.05s/it]\r\nCreating index\r\nToken indices sequence length is longer than the specified maximum sequence length for this model (1526 > 1024). Running this sequence through the model will result in indexing errors\r\nTraceback (most recent call last):\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/tenacity/__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/llama_index/embeddings/openai.py\", line 150, in get_embeddings\r\n    data = openai.Embedding.create(input=list_of_text, model=engine, **kwargs).data\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/openai/api_resources/embedding.py\", line 33, in create\r\n    response = super().create(*args, **kwargs)\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 153, in create\r\n    response, _, api_key = requestor.request(\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/openai/api_requestor.py\", line 230, in request\r\n    resp, got_stream = self._interpret_response(result, stream)\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/openai/api_requestor.py\", line 624, in _interpret_response\r\n    self._interpret_response_line(\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/openai/api_requestor.py\", line 687, in _interpret_response_line\r\n    raise self.handle_error_response(\r\nopenai.error.AuthenticationError: <empty message>\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 30, in <module>\r\n    main()\r\n  File \"main.py\", line 25, in main\r\n    create_index(config_data)\r\n  File \"/home/santosh/sample/chatbot/index.py\", line 54, in create_index\r\n    index = GPTVectorStoreIndex.from_documents(\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/llama_index/indices/base.py\", line 95, in from_documents\r\n    return cls(\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/llama_index/indices/vector_store/base.py\", line 44, in __init__\r\n    super().__init__(\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/llama_index/indices/base.py\", line 66, in __init__\r\n    index_struct = self.build_index_from_nodes(nodes)\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/llama_index/token_counter/token_counter.py\", line 78, in wrapped_llm_predict\r\n    f_return_val = f(_self, *args, **kwargs)\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/llama_index/indices/vector_store/base.py\", line 203, in build_index_from_nodes\r\n    return self._build_index_from_nodes(nodes)\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/llama_index/indices/vector_store/base.py\", line 192, in _build_index_from_nodes\r\n    self._add_nodes_to_index(index_struct, nodes)\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/llama_index/indices/vector_store/base.py\", line 168, in _add_nodes_to_index\r\n    embedding_results = self._get_node_embedding_results(nodes)\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/llama_index/indices/vector_store/base.py\", line 87, in _get_node_embedding_results\r\n    ) = self._service_context.embed_model.get_queued_text_embeddings()\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/llama_index/embeddings/base.py\", line 168, in get_queued_text_embeddings\r\n    embeddings = self._get_text_embeddings(cur_batch_texts)\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/llama_index/embeddings/openai.py\", line 267, in _get_text_embeddings\r\n    return get_embeddings(\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/tenacity/__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/tenacity/__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n  File \"/home/santosh/sample/venv/lib/python3.8/site-packages/tenacity/__init__.py\", line 326, in iter\r\n    raise retry_exc from fut.exception()\r\ntenacity.RetryError: RetryError[<Future at 0x7f7957f7a250 state=finished raised AuthenticationError>]\r\n```\r\n\r\nI expected that using another LLM shouldn't use OpenAI API calls.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4173/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4173/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4171",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4171/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4171/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4171/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4171",
        "id": 1729898266,
        "node_id": "PR_kwDOIWuq585Rj48F",
        "number": 4171,
        "title": "doc: Fix Storing Table Context within an Index",
        "user": {
            "login": "os1ma",
            "id": 39944763,
            "node_id": "MDQ6VXNlcjM5OTQ0NzYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/39944763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/os1ma",
            "html_url": "https://github.com/os1ma",
            "followers_url": "https://api.github.com/users/os1ma/followers",
            "following_url": "https://api.github.com/users/os1ma/following{/other_user}",
            "gists_url": "https://api.github.com/users/os1ma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/os1ma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/os1ma/subscriptions",
            "organizations_url": "https://api.github.com/users/os1ma/orgs",
            "repos_url": "https://api.github.com/users/os1ma/repos",
            "events_url": "https://api.github.com/users/os1ma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/os1ma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-29T02:37:25Z",
        "updated_at": "2023-05-29T20:53:45Z",
        "closed_at": "2023-05-29T20:53:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4171",
            "html_url": "https://github.com/run-llama/llama_index/pull/4171",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4171.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4171.patch",
            "merged_at": "2023-05-29T20:53:44Z"
        },
        "body": "Hello, \r\n\r\nWhile attempting to follow the example in the [Storing Table Context within an Index](https://gpt-index.readthedocs.io/en/latest/guides/tutorials/sql_guide.html#storing-table-context-within-an-index) section of the documentation, I encountered some errors. To help others avoid similar issues, I have proposed some amendments to the documentation. This amended implementation seems likely to correspond with the intent as described in the documentation.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4171/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4171/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4065",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4065/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4065/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4065/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4065",
        "id": 1729606019,
        "node_id": "PR_kwDOIWuq585Ri5ON",
        "number": 4065,
        "title": "Add global service context",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-28T18:30:05Z",
        "updated_at": "2023-08-28T17:10:57Z",
        "closed_at": "2023-05-29T03:25:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4065",
            "html_url": "https://github.com/run-llama/llama_index/pull/4065",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4065.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4065.patch",
            "merged_at": "2023-05-29T03:25:27Z"
        },
        "body": "This PR adds an initial implementation for a global service context. The new and improved service context will dynamically import `service_context` from the `.py` file defined under the `LLAMA_SERVICE_CONTEXT` env variable.\r\n\r\nThis design also allows users to config on top of their existing global defaults.\r\n\r\nThis implementation might be divisive, but here's my justification for two main components of the design\r\n\r\n1. Define the global service context existing API's\r\nRather than trying to decompose complex settings into a `yaml` format or similar, just let the user configure everything in python using the API they are already familiar with. This means we don't have to maintain a separate config file format, and also any LLMPredictor (including huggingface!) and embed model can be easily set the in global config \r\n\r\n2. Singleton pattern\r\nI don't see a way to do this without using a singleton pattern. While OpenAI/ChatOpenAI are quick to initialize, if the user configures a HuggingfaceLLMPredictor, we don't want to reload this every time `from_defaults()` is called, because that would be a major performance hit.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4065/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4065/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4035",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4035/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4035/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4035/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4035",
        "id": 1729557877,
        "node_id": "PR_kwDOIWuq585RivMT",
        "number": 4035,
        "title": "feat: vector store - use a heap vs naive sort",
        "user": {
            "login": "stillmatic",
            "id": 4743676,
            "node_id": "MDQ6VXNlcjQ3NDM2NzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4743676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stillmatic",
            "html_url": "https://github.com/stillmatic",
            "followers_url": "https://api.github.com/users/stillmatic/followers",
            "following_url": "https://api.github.com/users/stillmatic/following{/other_user}",
            "gists_url": "https://api.github.com/users/stillmatic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stillmatic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stillmatic/subscriptions",
            "organizations_url": "https://api.github.com/users/stillmatic/orgs",
            "repos_url": "https://api.github.com/users/stillmatic/repos",
            "events_url": "https://api.github.com/users/stillmatic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stillmatic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-28T16:38:09Z",
        "updated_at": "2023-05-29T15:13:38Z",
        "closed_at": "2023-05-29T15:04:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4035",
            "html_url": "https://github.com/run-llama/llama_index/pull/4035",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4035.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4035.patch",
            "merged_at": "2023-05-29T15:04:02Z"
        },
        "body": "where `k` = top k to return, `n` = total number of vectors\r\n\r\nbefore vs after\r\n- space: `O(n)` vs  `O(k)` \r\n- time: `O(n * log n)` vs  `O(n * logk)` \r\n\r\nshould be sizable improvement assuming `k << n`, true for all reasonable use cases.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4035/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4035/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4027",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4027/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4027/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4027/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4027",
        "id": 1729472744,
        "node_id": "I_kwDOIWuq585nFajo",
        "number": 4027,
        "title": "When you deploy flask in gunicorn's gevent working mode, the stream output is stuck until the access times out",
        "user": {
            "login": "MonsterZwj",
            "id": 90378340,
            "node_id": "MDQ6VXNlcjkwMzc4MzQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/90378340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MonsterZwj",
            "html_url": "https://github.com/MonsterZwj",
            "followers_url": "https://api.github.com/users/MonsterZwj/followers",
            "following_url": "https://api.github.com/users/MonsterZwj/following{/other_user}",
            "gists_url": "https://api.github.com/users/MonsterZwj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MonsterZwj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MonsterZwj/subscriptions",
            "organizations_url": "https://api.github.com/users/MonsterZwj/orgs",
            "repos_url": "https://api.github.com/users/MonsterZwj/repos",
            "events_url": "https://api.github.com/users/MonsterZwj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MonsterZwj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-28T13:36:36Z",
        "updated_at": "2023-06-06T05:06:33Z",
        "closed_at": "2023-06-06T05:06:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I've implemented the flask interface for getting stream data, but when I deployed my project with gunicorn's gevent pattern, I found that accessing the interface for getting stream data kept getting stuck until the interface timed out. Has anyone experienced the same problem\r\n\r\nHere is my code\r\ndef ask(pyPath, content, similarityTopK=2, similarityCutoff=0.7):\r\n    # @stream_with_context\r\n    def generate(text):\r\n        for res in text:\r\n            yield res\r\n    Token().get_token_text()\r\n    response = LlamaIndexAPI.query_index(\r\n        content=content,\r\n        index_file=os.path.join(app.config[\"INDEX_FILE\"], pyPath),\r\n        similarity_top_k=similarityTopK,\r\n        similarity_cutoff=similarityCutoff\r\n    )\r\n    if response is False:\r\n        raise APIException(StatusCode.ASK_FAILURE)\r\n    return Response(generate(response), content_type=\"text/event-stream\")",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4027/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4027/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4019",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4019/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4019/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4019/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4019",
        "id": 1729346308,
        "node_id": "PR_kwDOIWuq585RiCKq",
        "number": 4019,
        "title": "[version] bump version to 0.6.13",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-28T09:40:53Z",
        "updated_at": "2023-05-28T15:44:58Z",
        "closed_at": "2023-05-28T15:44:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4019",
            "html_url": "https://github.com/run-llama/llama_index/pull/4019",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4019.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4019.patch",
            "merged_at": "2023-05-28T15:44:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4019/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4019/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4013",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4013/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4013/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4013/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4013",
        "id": 1729272970,
        "node_id": "PR_kwDOIWuq585RhyCd",
        "number": 4013,
        "title": "add SQLAutoVectorQueryEngine ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-28T07:52:14Z",
        "updated_at": "2023-05-28T09:40:20Z",
        "closed_at": "2023-05-28T09:40:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4013",
            "html_url": "https://github.com/run-llama/llama_index/pull/4013",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4013.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4013.patch",
            "merged_at": "2023-05-28T09:40:19Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4013/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4013/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4011",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4011/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4011/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4011/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4011",
        "id": 1729251488,
        "node_id": "I_kwDOIWuq585nEkig",
        "number": 4011,
        "title": "More complex knowledge cannot be accurately replied to?",
        "user": {
            "login": "InfernalAzazel",
            "id": 40333954,
            "node_id": "MDQ6VXNlcjQwMzMzOTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/40333954?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/InfernalAzazel",
            "html_url": "https://github.com/InfernalAzazel",
            "followers_url": "https://api.github.com/users/InfernalAzazel/followers",
            "following_url": "https://api.github.com/users/InfernalAzazel/following{/other_user}",
            "gists_url": "https://api.github.com/users/InfernalAzazel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/InfernalAzazel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/InfernalAzazel/subscriptions",
            "organizations_url": "https://api.github.com/users/InfernalAzazel/orgs",
            "repos_url": "https://api.github.com/users/InfernalAzazel/repos",
            "events_url": "https://api.github.com/users/InfernalAzazel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/InfernalAzazel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-28T07:14:11Z",
        "updated_at": "2023-09-10T16:57:27Z",
        "closed_at": "2023-09-10T16:57:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "1. First of all, using only one article, it is indeed a very accurate response, as shown in the following figure\r\n![image](https://github.com/jerryjliu/llama_index/assets/40333954/533996c3-dbf0-4b97-b90a-063e7a553f4f)\r\n\r\n- Chapter 1 Knowledge\r\n\r\n```\r\n\u4e7e\u5366\u539f\u6587\r\n\u4e7e\u3002\u5143\uff0c\u4ea8\uff0c\u5229\uff0c\u8d1e\u3002\r\n\u8c61\u66f0\uff1a\u5929\u884c\u5065\uff0c\u541b\u5b50\u4ee5\u81ea\u5f3a\u4e0d\u606f\u3002\r\n\u521d\u4e5d\u723b\u8f9e\r\n\u521d\u4e5d\u3002\u6f5c\u9f99\u52ff\u7528\u3002\r\n\u4e5d\u4e8c\u723b\u8f9e\r\n\u4e5d\u4e8c\u3002\u89c1\u9f99\u5728\u7530\uff0c\u5229\u89c1\u5927\u4eba\u3002\r\n\u4e5d\u4e09\u723b\u8f9e\r\n\u4e5d\u4e09\u3002\u541b\u5b50\u7ec8\u65e5\u4e7e\u4e7e\uff0c\u5915\u60d5\u82e5\uff1b\u5389\uff0c\u65e0\u548e\u3002\r\n\u4e5d\u56db\u723b\u8f9e\r\n\u4e5d\u56db\u3002\u6216\u8dc3\u5728\u6e0a\uff0c\u65e0\u548e\u3002\r\n\u4e5d\u4e94\u723b\u8f9e\r\n\u4e5d\u4e94\u3002\u98de\u9f99\u5728\u5929\uff0c\u5229\u89c1\u5927\u4eba\u3002\r\n\u4e0a\u4e5d\u723b\u8f9e\r\n\u4e0a\u4e5d\u3002\u4ea2\u9f99\u6709\u6094\u3002\r\n```\r\n\r\n2. The following is a total of 64 articles from the entire book, each corresponding to a specific topic, with the same content format. However, at this point, the answers became very inaccurate\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/40333954/57a3eacc-44e3-455e-9c1a-923d7444fe5e)\r\n\r\n- The reason for this is that the format of each article is similar, for example, the content of Chapter 2 is as follows\r\n\r\n```\r\n\u592c\u5366\u539f\u6587\r\n\u592c\u3002\u626c\u4e8e\u738b\u5ead\uff0c\u5b5a\u53f7\uff0c\u6709\u5389\u3002\u544a\u81ea\u9091\uff0c\u4e0d\u5229\u5373\u620e\uff0c\u5229\u6709\u6538\u5f80\u3002\r\n\u521d\u4e5d\u723b\u8f9e\r\n\u521d\u4e5d\u3002\u58ee\u4e8e\u524d\u8dbe\uff0c\u5f80\u4e0d\u80dc\u4e3a\u548e\u3002\r\n\u4e5d\u4e8c\u723b\u8f9e\r\n\u4e5d\u4e8c\u3002\u60d5\u53f7\uff0c\u83ab\u591c\u6709\u620e\uff0c\u52ff\u6064\u3002\r\n\u4e5d\u4e09\u723b\u8f9e\r\n\u4e5d\u4e09\u3002\u58ee\u4e8e\u9804\uff0c\u6709\u51f6\u3002\u541b\u5b50\u592c\u592c\uff0c\u72ec\u884c\u9047\u96e8\uff0c\u82e5\u6fe1\u6709\u6120\uff0c\u65e0\u548e\u3002\r\n\u4e5d\u56db\u723b\u8f9e\r\n\u4e5d\u56db\u3002\u81c0\u65e0\u80a4\uff0c\u5176\u884c\u6b21\u4e14\u3002\u7275\u7f8a\u6094\u4ea1\uff0c\u95fb\u8a00\u4e0d\u4fe1\u3002\r\n\u4e5d\u4e94\u723b\u8f9e\r\n\u4e5d\u4e94\u3002\u82cb\u9646\u592c\u592c\uff0c\u4e2d\u884c\u65e0\u548e\u3002\r\n\u4e0a\u516d\u723b\u8f9e\r\n\u4e0a\u516d\u3002\u65e0\u53f7\uff0c\u7ec8\u6709\u51f6\u3002\r\n```\r\n3. The theme is unique, and the format of the content is also unique in this article. The question I entered was also very accurate with the theme and number, but I did not get the correct result I wanted\r\n\r\n\r\nDoes llama index have the knowledge to solve this classification relationship in a module? Or suggest",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4011/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4011/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3997",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3997/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3997/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3997/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3997",
        "id": 1729065642,
        "node_id": "PR_kwDOIWuq585RhEPt",
        "number": 3997,
        "title": "Introduce ChatEngine",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-28T01:17:39Z",
        "updated_at": "2023-05-29T09:02:29Z",
        "closed_at": "2023-05-29T09:02:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3997",
            "html_url": "https://github.com/run-llama/llama_index/pull/3997",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3997.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3997.patch",
            "merged_at": "2023-05-29T09:02:28Z"
        },
        "body": "### Summary\r\n* Introduce `ChatEngine` concept (which is basically a stateful version of `QueryEngine`) that exposes `chat`, `achat`, `rest` and a `chat_repl` (for ease of use in CLI and notebook)\r\n* Hooks into our main high-level API via `index.as_chat_engine(chat_mode=...)`, configurable via `ChatMode`\r\n* Create 3 basic `ChatEngine` implementations:\r\n   1. condense_question: first create a condensed question from chat history and user question, then pass condensed question into query engine\r\n   2. react: use react agent (based on LangChain)\r\n   3. simple: no retrieval augmentation, just chat with LLM\r\n * Initial demo notebooks \r\n\r\n### Additional changes\r\n- Minor cleanup in mock predict\r\n- Add optional to directly specify llm for service context, avoiding need to wrap in LLM predictor. \r\n\r\n### Todos\r\n- [x] Proper support for chat models (i.e. passing in messages instead of stuffing history as single human message): in simple and in react\r\n- [x] Refine docstrings & notebooks, add to documentation\r\n- [ ] ~Add more implementations, e.g. inspired by semantic kernel, transformers agent, etc.~ Deferred to future PR. \r\n\r\n### Notes\r\n- Our `LLMPredictor` abstraction limits our ability to properly interact with OpenAI chat API \r\n- We use a simplistic chat history representation for now. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3997/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3997/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3982",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3982/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3982/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3982/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3982",
        "id": 1728936026,
        "node_id": "PR_kwDOIWuq585RgnvU",
        "number": 3982,
        "title": "Added content arg to MarkdownReader",
        "user": {
            "login": "alondmnt",
            "id": 17462125,
            "node_id": "MDQ6VXNlcjE3NDYyMTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17462125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alondmnt",
            "html_url": "https://github.com/alondmnt",
            "followers_url": "https://api.github.com/users/alondmnt/followers",
            "following_url": "https://api.github.com/users/alondmnt/following{/other_user}",
            "gists_url": "https://api.github.com/users/alondmnt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alondmnt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alondmnt/subscriptions",
            "organizations_url": "https://api.github.com/users/alondmnt/orgs",
            "repos_url": "https://api.github.com/users/alondmnt/repos",
            "events_url": "https://api.github.com/users/alondmnt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alondmnt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-27T20:51:40Z",
        "updated_at": "2023-05-29T14:28:49Z",
        "closed_at": "2023-05-29T14:28:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3982",
            "html_url": "https://github.com/run-llama/llama_index/pull/3982",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3982.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3982.patch",
            "merged_at": null
        },
        "body": "The aim of this PR is to make `MarkdownReader` available to other readers that are Markdown-based, even if their content is not stored in plain text files.\r\n\r\nFor backward compatibility, the `file` arg was left as is (positional), but when `content` is provided it is ignored and the given content is parsed instead.\r\n\r\nUnrelated: I'm not sure why parse_tups() has the errors kwarg.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3982/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3982/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3976",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3976/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3976/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3976/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3976",
        "id": 1728919849,
        "node_id": "PR_kwDOIWuq585RgkSm",
        "number": 3976,
        "title": "fixed continue statement if parser can't be used",
        "user": {
            "login": "NicholasHoffs",
            "id": 6625099,
            "node_id": "MDQ6VXNlcjY2MjUwOTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6625099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NicholasHoffs",
            "html_url": "https://github.com/NicholasHoffs",
            "followers_url": "https://api.github.com/users/NicholasHoffs/followers",
            "following_url": "https://api.github.com/users/NicholasHoffs/following{/other_user}",
            "gists_url": "https://api.github.com/users/NicholasHoffs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NicholasHoffs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NicholasHoffs/subscriptions",
            "organizations_url": "https://api.github.com/users/NicholasHoffs/orgs",
            "repos_url": "https://api.github.com/users/NicholasHoffs/repos",
            "events_url": "https://api.github.com/users/NicholasHoffs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NicholasHoffs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-27T20:09:21Z",
        "updated_at": "2023-05-28T08:58:17Z",
        "closed_at": "2023-05-28T08:58:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3976",
            "html_url": "https://github.com/run-llama/llama_index/pull/3976",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3976.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3976.patch",
            "merged_at": "2023-05-28T08:58:17Z"
        },
        "body": "What is meant to happen is that if parser can't be used, the function will return the document as None. When it does this, it should skip to the next method to generate the document but, instead, it continues when document is None, breaking the loop. [Here on llama_hub](https://github.com/emptycrown/llama-hub/blob/main/loader_hub/github_repo/base.py#L383) it is written correctly but not on llama_index. This PR aligns with llama_hub.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3976/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3976/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3975",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3975/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3975/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3975/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3975",
        "id": 1728919646,
        "node_id": "I_kwDOIWuq585nDThe",
        "number": 3975,
        "title": "GitHubRepoLoader not the same as llamahub(which has the proper implementation)",
        "user": {
            "login": "NicholasHoffs",
            "id": 6625099,
            "node_id": "MDQ6VXNlcjY2MjUwOTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6625099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NicholasHoffs",
            "html_url": "https://github.com/NicholasHoffs",
            "followers_url": "https://api.github.com/users/NicholasHoffs/followers",
            "following_url": "https://api.github.com/users/NicholasHoffs/following{/other_user}",
            "gists_url": "https://api.github.com/users/NicholasHoffs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NicholasHoffs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NicholasHoffs/subscriptions",
            "organizations_url": "https://api.github.com/users/NicholasHoffs/orgs",
            "repos_url": "https://api.github.com/users/NicholasHoffs/repos",
            "events_url": "https://api.github.com/users/NicholasHoffs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NicholasHoffs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-27T20:08:27Z",
        "updated_at": "2023-05-27T20:09:43Z",
        "closed_at": "2023-05-27T20:09:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "What is meant to happen is that if parser can't be used, the function will return the document as None. When it does this, it should skip to the next method to generate the document but, instead, it continues when document is None, breaking the loop. [Here on llama_hub](https://github.com/emptycrown/llama-hub/blob/main/loader_hub/github_repo/base.py#L383) it is written correctly but not on llama_index. This PR aligns the githubrepoloader with llama_hub.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3975/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3975/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3973",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3973/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3973/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3973/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3973",
        "id": 1728910593,
        "node_id": "PR_kwDOIWuq585Rgijx",
        "number": 3973,
        "title": "Add Graphsignal integration doc",
        "user": {
            "login": "dmelikyan",
            "id": 1074088,
            "node_id": "MDQ6VXNlcjEwNzQwODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1074088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmelikyan",
            "html_url": "https://github.com/dmelikyan",
            "followers_url": "https://api.github.com/users/dmelikyan/followers",
            "following_url": "https://api.github.com/users/dmelikyan/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmelikyan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmelikyan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmelikyan/subscriptions",
            "organizations_url": "https://api.github.com/users/dmelikyan/orgs",
            "repos_url": "https://api.github.com/users/dmelikyan/repos",
            "events_url": "https://api.github.com/users/dmelikyan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmelikyan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-27T19:26:10Z",
        "updated_at": "2023-05-28T04:12:50Z",
        "closed_at": "2023-05-27T20:28:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3973",
            "html_url": "https://github.com/run-llama/llama_index/pull/3973",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3973.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3973.patch",
            "merged_at": "2023-05-27T20:28:50Z"
        },
        "body": "Adding Graphsignal integration doc to Integrations.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3973/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3973/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3964",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3964/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3964/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3964/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3964",
        "id": 1728849887,
        "node_id": "I_kwDOIWuq585nDCff",
        "number": 3964,
        "title": "\"no information provided\"  with custom service_context",
        "user": {
            "login": "shenyubao",
            "id": 1533087,
            "node_id": "MDQ6VXNlcjE1MzMwODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1533087?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shenyubao",
            "html_url": "https://github.com/shenyubao",
            "followers_url": "https://api.github.com/users/shenyubao/followers",
            "following_url": "https://api.github.com/users/shenyubao/following{/other_user}",
            "gists_url": "https://api.github.com/users/shenyubao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shenyubao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shenyubao/subscriptions",
            "organizations_url": "https://api.github.com/users/shenyubao/orgs",
            "repos_url": "https://api.github.com/users/shenyubao/repos",
            "events_url": "https://api.github.com/users/shenyubao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shenyubao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-27T17:24:28Z",
        "updated_at": "2023-07-22T02:30:52Z",
        "closed_at": "2023-07-22T02:30:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "llama_index version: 0.6.11 +0.6.12\r\nin streaming mode always get  \"There is no information provided in the context about .....\", Bug without Straming it works\r\n\r\nCode Without Streaming , It will get the right answer\r\n```python\r\n    storage_context = StorageContext.from_defaults(persist_dir=path)\r\n    index = load_index_from_storage(storage_context=storage_context)\r\n    query_engine = index.as_query_engine(streaming=False)\r\n    print(query_engine.query(question))\r\n```\r\n\r\n\r\nCode Without Streaming, it will get \"There is no information provided in the context about .....\"\r\n```python\r\n    storage_context = StorageContext.from_defaults(persist_dir=path)\r\n    index = load_index_from_storage(storage_context=storage_context)\r\n\r\n    llm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0.7, model_name=\"gpt-3.5-turbo\", streaming=True))\r\n    service_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, chunk_size_limit=512)\r\n    query_engine = index.as_query_engine(streaming=True, service_context=service_context)\r\n    response_stream = query_engine.query(question)\r\n    response_stream.print_response_stream()\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3964/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3955",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3955/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3955/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3955/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3955",
        "id": 1728803422,
        "node_id": "PR_kwDOIWuq585RgLdx",
        "number": 3955,
        "title": "[version] bump version to 0.6.12",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-27T15:55:14Z",
        "updated_at": "2023-05-27T15:58:18Z",
        "closed_at": "2023-05-27T15:58:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3955",
            "html_url": "https://github.com/run-llama/llama_index/pull/3955",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3955.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3955.patch",
            "merged_at": "2023-05-27T15:58:18Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3955/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3945",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3945/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3945/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3945/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3945",
        "id": 1728585362,
        "node_id": "I_kwDOIWuq585nCB6S",
        "number": 3945,
        "title": "The response take too long when get full response and get truncated when not",
        "user": {
            "login": "dinhan92",
            "id": 86275789,
            "node_id": "MDQ6VXNlcjg2Mjc1Nzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/86275789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dinhan92",
            "html_url": "https://github.com/dinhan92",
            "followers_url": "https://api.github.com/users/dinhan92/followers",
            "following_url": "https://api.github.com/users/dinhan92/following{/other_user}",
            "gists_url": "https://api.github.com/users/dinhan92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dinhan92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dinhan92/subscriptions",
            "organizations_url": "https://api.github.com/users/dinhan92/orgs",
            "repos_url": "https://api.github.com/users/dinhan92/repos",
            "events_url": "https://api.github.com/users/dinhan92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dinhan92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-27T09:14:39Z",
        "updated_at": "2023-10-17T16:04:49Z",
        "closed_at": "2023-10-17T16:04:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I want to ask about llama_index, I use Vietnamese, the response take too long (about 30 seconds) when get full response and get truncated when not:\r\n\r\n    from llama_index import SimpleDirectoryReader, ResponseSynthesizer, LangchainEmbedding, JSONReader, GPTListIndex, ServiceContext, GPTVectorStoreIndex, LLMPredictor, PromptHelper, SimpleMongoReader, StorageContext, load_index_from_storage\r\n    from langchain.chat_models import ChatOpenAI\r\n    import gradio as gr\r\n    import sys\r\n    import os\r\n    from pymongo import MongoClient\r\n    from llama_index.retrievers import VectorIndexRetriever\r\n    from llama_index.query_engine import RetrieverQueryEngine\r\n    from llama_index.indices.postprocessor import SimilarityPostprocessor\r\n    from llama_index.llm_predictor.chatgpt import ChatGPTLLMPredictor\r\n    \r\n    os.environ[\"OPENAI_API_KEY\"] = 'api-key'\r\n    \r\n    max_input_size = 4096\r\n    num_outputs = 512\r\n    max_chunk_overlap = 20\r\n    chunk_size_limit = 600\r\n    \r\n    prompt_helper = PromptHelper(max_input_size, num_outputs, max_chunk_overlap, chunk_size_limit=chunk_size_limit)\r\n    \r\n    llm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0.7, model_name=\"gpt-3.5-turbo\", max_tokens=num_outputs))\r\n    \r\n    service_context = ServiceContext.from_defaults(\r\n            llm_predictor = llm_predictor,\r\n            prompt_helper = prompt_helper)\r\n    \r\n    def construct_index(directory_path):\r\n        documents = SimpleDirectoryReader(directory_path).load_data()\r\n        index = GPTVectorStoreIndex.from_documents(documents, service_context=service_context)\r\n    \r\n        index.storage_context.persist(persist_dir='./storage')\r\n    \r\n        return index\r\n    \r\n    def chatbot(input_text):\r\n        # rebuild storage context\r\n        storage_context = StorageContext.from_defaults(persist_dir='./storage')\r\n        \r\n        # load index\r\n        index = load_index_from_storage(storage_context = storage_context, \r\n        service_context = service_context)\r\n    \r\n        # configure retriever\r\n        retriever = VectorIndexRetriever(\r\n            index=index, \r\n            similarity_top_k=2,\r\n        )\r\n        \r\n        # configure response synthesizer\r\n        response_synthesizer = ResponseSynthesizer.from_args(\r\n            node_postprocessors=[\r\n                SimilarityPostprocessor(similarity_cutoff=0.7)\r\n            ]\r\n        )\r\n        \r\n        # assemble query engine\r\n        query_engine = RetrieverQueryEngine(\r\n            retriever=retriever,\r\n            response_synthesizer=response_synthesizer,\r\n        )\r\n    \r\n        fullResponse = ''\r\n        while True:\r\n            resp = query_engine.query(input_text + '\\n\\n' + fullResponse)\r\n            if resp.response != \"Empty Response\":\r\n                fullResponse += resp.response\r\n            else:\r\n                break\r\n        return fullResponse\r\n    \r\n    iface = gr.Interface(fn=chatbot,\r\n                         inputs=gr.components.Textbox(lines=7, label=\"Enter your text\"),\r\n                         outputs=\"text\",\r\n                         title=\"Custom-trained AI Chatbot\")\r\n    \r\n    index = construct_index(\"docs\")\r\n    iface.launch(share=True)\r\n\r\nI have tried to find some errors here, but with no result. When I try the old version of gpt_index (llama_index) (0.4.24), it runs fine, however, I also want to use with Mongo. Can someone help me with this? Thanks a lot!!!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3945/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3945/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3944",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3944/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3944/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3944/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3944",
        "id": 1728498972,
        "node_id": "I_kwDOIWuq585nBs0c",
        "number": 3944,
        "title": "Unable to load a collection using ChromaReader",
        "user": {
            "login": "Saic93",
            "id": 131262849,
            "node_id": "U_kgDOB9LpgQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/131262849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Saic93",
            "html_url": "https://github.com/Saic93",
            "followers_url": "https://api.github.com/users/Saic93/followers",
            "following_url": "https://api.github.com/users/Saic93/following{/other_user}",
            "gists_url": "https://api.github.com/users/Saic93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Saic93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Saic93/subscriptions",
            "organizations_url": "https://api.github.com/users/Saic93/orgs",
            "repos_url": "https://api.github.com/users/Saic93/repos",
            "events_url": "https://api.github.com/users/Saic93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Saic93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-27T06:50:20Z",
        "updated_at": "2023-09-10T16:57:32Z",
        "closed_at": "2023-09-10T16:57:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This is my code to read the file from local collection\r\n```\r\nfrom llama_index.readers.chroma import ChromaReader\r\n\r\nindex = ChromaReader(collection_name=\"chroma_collection\",persist_directory=\"./data\")\r\n```\r\nthe error:\r\n````\r\nConnectionError: HTTPConnectionPool(host='localhost', port=8000): Max retries exceeded with url: \r\n/api/v1/collections/chroma_collection (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at \r\n0x00000136BD085550>: Failed to establish a new connection: [WinError 10061] No connection could be made because the\r\ntarget machine actively refused it'))\r\n````\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3944/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3942",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3942/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3942/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3942/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3942",
        "id": 1728440821,
        "node_id": "I_kwDOIWuq585nBen1",
        "number": 3942,
        "title": "Redis store \"saving and loading\" only describes saving",
        "user": {
            "login": "paralin",
            "id": 534887,
            "node_id": "MDQ6VXNlcjUzNDg4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/534887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paralin",
            "html_url": "https://github.com/paralin",
            "followers_url": "https://api.github.com/users/paralin/followers",
            "following_url": "https://api.github.com/users/paralin/following{/other_user}",
            "gists_url": "https://api.github.com/users/paralin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paralin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paralin/subscriptions",
            "organizations_url": "https://api.github.com/users/paralin/orgs",
            "repos_url": "https://api.github.com/users/paralin/repos",
            "events_url": "https://api.github.com/users/paralin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paralin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-27T03:58:27Z",
        "updated_at": "2023-07-20T12:11:11Z",
        "closed_at": "2023-06-11T07:24:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://gpt-index.readthedocs.io/en/latest/examples/vector_stores/RedisIndexDemo.html#saving-and-loading\r\n\r\nThis section describes saving with persist() but not loading the index back again later.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3942/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3942/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3941",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3941/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3941/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3941/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3941",
        "id": 1728436315,
        "node_id": "I_kwDOIWuq585nBdhb",
        "number": 3941,
        "title": "[Demo] Build Tree Index with a custom Summary Prompt, directly retrieve answer from root node",
        "user": {
            "login": "manaskrishnajaiswal",
            "id": 23204874,
            "node_id": "MDQ6VXNlcjIzMjA0ODc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/23204874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manaskrishnajaiswal",
            "html_url": "https://github.com/manaskrishnajaiswal",
            "followers_url": "https://api.github.com/users/manaskrishnajaiswal/followers",
            "following_url": "https://api.github.com/users/manaskrishnajaiswal/following{/other_user}",
            "gists_url": "https://api.github.com/users/manaskrishnajaiswal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manaskrishnajaiswal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manaskrishnajaiswal/subscriptions",
            "organizations_url": "https://api.github.com/users/manaskrishnajaiswal/orgs",
            "repos_url": "https://api.github.com/users/manaskrishnajaiswal/repos",
            "events_url": "https://api.github.com/users/manaskrishnajaiswal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manaskrishnajaiswal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-27T03:40:52Z",
        "updated_at": "2023-09-10T16:57:37Z",
        "closed_at": "2023-09-10T16:57:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "from llama_index import GPTTreeIndex, SimpleDirectoryReader, Prompt\r\nfrom llama_index import GPTTreeIndex, SimpleDirectoryReader, Prompt\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\n\u200b\r\n// Provide the actual context information\r\n// context_str = \"The author grew up in a small town and spent most of their time exploring nature and reading books.\"\r\nquery_str = \"What did the author do growing up?\"\r\nSUMMARY_PROMPT_TMPL = (\r\n    \"Context information is below. \\n\"\r\n    \"---------------------\\n\"\r\n    f\"{context_str}\"\r\n    \"\\n---------------------\\n\"\r\n    \"Given the context information and not prior knowledge, \"\r\n    f\"answer the question: {query_str}\\n\"\r\n)\r\n\u200b\r\nSUMMARY_PROMPT = Prompt(SUMMARY_PROMPT_TMPL)\r\nindex_with_query = GPTTreeIndex.from_documents(documents, summary_template=SUMMARY_PROMPT)\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\nCell In[25], line 15\r\n      5 query_str = \"What did the author do growing up?\"\r\n      6 SUMMARY_PROMPT_TMPL = (\r\n      7     \"Context information is below. \\n\"\r\n      8     \"---------------------\\n\"\r\n   (...)\r\n     12     f\"answer the question: {query_str}\\n\"\r\n     13 )\r\n---> 15 SUMMARY_PROMPT = Prompt(SUMMARY_PROMPT_TMPL)\r\n     16 index_with_query = GPTTreeIndex.from_documents(documents, summary_template=SUMMARY_PROMPT)\r\n\r\nFile D:\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\llama_index\\prompts\\base.py:56, in Prompt.__init__(self, template, langchain_prompt, langchain_prompt_selector, stop_token, output_parser, metadata, **prompt_kwargs)\r\n     52 # validate\r\n     53 tmpl_vars = {\r\n     54     v for _, v, _, _ in Formatter().parse(template) if v is not None\r\n     55 }\r\n---> 56 if tmpl_vars != set(self.input_variables):\r\n     57     raise ValueError(\r\n     58         f\"Invalid template: {template}, variables do not match the \"\r\n     59         f\"required input_variables: {self.input_variables}\"\r\n     60     )\r\n     62 self.prompt = LangchainPrompt(\r\n     63     input_variables=self.input_variables, template=template, **prompt_kwargs\r\n     64 )\r\n\r\nAttributeError: 'Prompt' object has no attribute 'input_variables'",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3941/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3940",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3940/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3940/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3940/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3940",
        "id": 1728353989,
        "node_id": "PR_kwDOIWuq585Rercw",
        "number": 3940,
        "title": "Set default LLM to use max token of -1 (i.e. unlimited output)",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-26T23:57:21Z",
        "updated_at": "2023-05-31T18:08:22Z",
        "closed_at": "2023-05-31T18:08:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3940",
            "html_url": "https://github.com/run-llama/llama_index/pull/3940",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3940.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3940.patch",
            "merged_at": "2023-05-31T18:08:21Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3940/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3940/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3939",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3939/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3939/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3939/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3939",
        "id": 1728345114,
        "node_id": "I_kwDOIWuq585nBHQa",
        "number": 3939,
        "title": "how to work around the issue of \"Azure OpenAI\u2019s content management policy\"",
        "user": {
            "login": "zyao-coursera",
            "id": 111776069,
            "node_id": "U_kgDOBqmRRQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/111776069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zyao-coursera",
            "html_url": "https://github.com/zyao-coursera",
            "followers_url": "https://api.github.com/users/zyao-coursera/followers",
            "following_url": "https://api.github.com/users/zyao-coursera/following{/other_user}",
            "gists_url": "https://api.github.com/users/zyao-coursera/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zyao-coursera/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zyao-coursera/subscriptions",
            "organizations_url": "https://api.github.com/users/zyao-coursera/orgs",
            "repos_url": "https://api.github.com/users/zyao-coursera/repos",
            "events_url": "https://api.github.com/users/zyao-coursera/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zyao-coursera/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-26T23:38:09Z",
        "updated_at": "2023-06-16T10:28:16Z",
        "closed_at": "2023-06-07T05:07:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello experts,\r\n\r\nI follow the guidance and use the Azure openAI LLM to try the examples. However I frequently encounter the issue of the  `InvalidRequestError: The response was filtered due to the prompt triggering Azure OpenAI\u2019s content management policy`. I wonder how can I work around it. Thanks.\r\n\r\n\r\n```\r\nInvalidRequestError                       Traceback (most recent call last)\r\n[<ipython-input-11-d4f430d92a36>](https://localhost:8080/#) in <cell line: 11>()\r\n      9 QA_PROMPT = QuestionAnswerPrompt(QA_PROMPT_TMPL)\r\n     10 query_engine = index.as_query_engine(text_qa_template=QA_PROMPT)\r\n---> 11 answer = query_engine.query(query)\r\n     12 \r\n     13 print(answer.get_formatted_sources())\r\n\r\n32 frames\r\n[/usr/local/lib/python3.10/dist-packages/openai/api_requestor.py](https://localhost:8080/#) in _interpret_response_line(self, rbody, rcode, rheaders, stream)\r\n    685         stream_error = stream and \"error\" in resp.data\r\n    686         if stream_error or not 200 <= rcode < 300:\r\n--> 687             raise self.handle_error_response(\r\n    688                 rbody, rcode, resp.data, rheaders, stream_error=stream_error\r\n    689             )\r\n\r\nInvalidRequestError: The response was filtered due to the prompt triggering Azure OpenAI\u2019s content management policy. Please modify your prompt and retry. To learn more about our content filtering policies please read our documentation: https://go.microsoft.com/fwlink/?linkid=2198766\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3939/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3938",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3938/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3938/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3938/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3938",
        "id": 1728069288,
        "node_id": "PR_kwDOIWuq585RduJi",
        "number": 3938,
        "title": "add NL output for SQL queries, add SQL router notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-26T18:32:20Z",
        "updated_at": "2023-05-27T05:35:10Z",
        "closed_at": "2023-05-27T05:35:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3938",
            "html_url": "https://github.com/run-llama/llama_index/pull/3938",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3938.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3938.patch",
            "merged_at": "2023-05-27T05:35:09Z"
        },
        "body": "- started working on a demo showing how you can route between structured data and unstructured data\r\n- realized that we might as well fix our natural language output too ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3938/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3938/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3934",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3934/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3934/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3934/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3934",
        "id": 1727986122,
        "node_id": "I_kwDOIWuq585m_vnK",
        "number": 3934,
        "title": "Querying a GPTKeywordTableIndex inside a Flask app returns None but works normally in a py file?",
        "user": {
            "login": "sw3554",
            "id": 119490136,
            "node_id": "U_kgDOBx9GWA",
            "avatar_url": "https://avatars.githubusercontent.com/u/119490136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sw3554",
            "html_url": "https://github.com/sw3554",
            "followers_url": "https://api.github.com/users/sw3554/followers",
            "following_url": "https://api.github.com/users/sw3554/following{/other_user}",
            "gists_url": "https://api.github.com/users/sw3554/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sw3554/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sw3554/subscriptions",
            "organizations_url": "https://api.github.com/users/sw3554/orgs",
            "repos_url": "https://api.github.com/users/sw3554/repos",
            "events_url": "https://api.github.com/users/sw3554/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sw3554/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-26T17:22:56Z",
        "updated_at": "2023-06-11T07:22:27Z",
        "closed_at": "2023-06-11T07:22:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello,\r\n\r\nI've been able to query a GPTKeywordTableIndex with a py file, including loading the index from disk and querying it, but when I put the functions in a Flask app it just returns None. I'm using the Paul Graham essay. \r\nVectorStoreIndex on the other hand works normally in a Flask app.\r\n\r\nAm I missing something? I have tried:\r\nBuilding a GPTKeywordTableIndex and querying it in the same py file-- this works:\r\n```\r\nfrom llama_index import GPTKeywordTableIndex, SimpleDirectoryReader\r\nimport os\r\nos.environ['OPENAI_API_KEY'] = \"XXX\"\r\n# build keyword index\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\nindex = GPTKeywordTableIndex.from_documents(documents)\r\nquery_engine = index.as_query_engine()\r\nindex.storage_context.persist()\r\n\r\nresponse = query_engine.query(\"What did the author do after his time at Y Combinator?\")\r\nprint(response)\r\n```\r\n\r\nLoading an index from disk and querying--this works:\r\n```\r\nfrom llama_index import (\r\n    StorageContext, \r\n    load_index_from_storage\r\n)\r\nimport os\r\nos.environ['OPENAI_API_KEY'] = \"XXX\"\r\n\r\nstorage_context = StorageContext.from_defaults(persist_dir=\"./storage\")\r\n# load index\r\nindex = load_index_from_storage(storage_context)\r\n\r\n#if index is None:\r\n#    print(\"Load index failed\")\r\n#else:\r\n#    print(\"Load index success\")\r\n\r\nquery_engine = index.as_query_engine()\r\nresponse = query_engine.query(\"What did the author do after his time at Y Combinator?\")\r\nprint(response)\r\n\r\n```\r\n\r\n\r\nMaking as few changes as possible to make it into a Flask app--when I go to '/' to check index, it says index has been loaded, but querying returns None. I don't get any other errors or warnings. I run the flask app using flask --app test_app run.\r\n```\r\nfrom llama_index import (\r\n    StorageContext, \r\n    load_index_from_storage\r\n)\r\nimport os\r\nfrom flask import Flask, request, jsonify, make_response\r\nfrom flask_cors import CORS\r\nos.environ['OPENAI_API_KEY'] = \"XXX\"\r\napp = Flask(__name__)\r\nCORS(app)\r\n\r\nstorage_context = StorageContext.from_defaults(persist_dir=\"./storage\")\r\n# load index\r\nindex = load_index_from_storage(storage_context)\r\nquery_engine = index.as_query_engine()\r\n\r\n#if index is None:\r\n#    print(\"Load index failed\")\r\n#else:\r\n#    print(\"Load index success\")\r\n\r\n@app.route('/')\r\ndef check_index():\r\n    global index\r\n    if index is None:\r\n        return \"Load index failed\"\r\n    else:\r\n        return \"Load index success\"\r\n\r\n@app.route(\"/query\", methods=[\"GET\"])\r\ndef query_app():\r\n    query_text = request.args.get(\"text\", None)\r\n    response = query_engine.query(query_text)\r\n    return str(response)\r\n\r\nif __name__=='__main__':\r\n    app.run(debug=True)\r\n```\r\n\r\nMany thanks if anyone can see what the problem is!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3934/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3931",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3931/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3931/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3931/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3931",
        "id": 1727808961,
        "node_id": "I_kwDOIWuq585m_EXB",
        "number": 3931,
        "title": "TypeError: 'method' object is not iterable'",
        "user": {
            "login": "VirajOke",
            "id": 96317904,
            "node_id": "U_kgDOBb2x0A",
            "avatar_url": "https://avatars.githubusercontent.com/u/96317904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VirajOke",
            "html_url": "https://github.com/VirajOke",
            "followers_url": "https://api.github.com/users/VirajOke/followers",
            "following_url": "https://api.github.com/users/VirajOke/following{/other_user}",
            "gists_url": "https://api.github.com/users/VirajOke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VirajOke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VirajOke/subscriptions",
            "organizations_url": "https://api.github.com/users/VirajOke/orgs",
            "repos_url": "https://api.github.com/users/VirajOke/repos",
            "events_url": "https://api.github.com/users/VirajOke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VirajOke/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-26T15:10:15Z",
        "updated_at": "2023-06-07T19:44:45Z",
        "closed_at": "2023-06-07T19:44:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Code snippet** \r\n```\r\nprompt = \"can you summarize the documents?\"\r\nquery_engine = index.as_query_engine()\r\nresponse = query_engine.query(prompt)\r\ndisplay(Markdown(f\"<b>{response}</b>\"))\r\n```\r\n`TypeError: 'method' object is not iterable`\r\n\r\nMy code was working fine with the previous querying structure. \r\ni.e. index.query(). \r\n\r\nThe new method raises the `method' object is not iterable` error. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3931/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3931/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3930",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3930/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3930/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3930/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3930",
        "id": 1727734703,
        "node_id": "PR_kwDOIWuq585Rclbd",
        "number": 3930,
        "title": "DocArray as a vectorstore",
        "user": {
            "login": "jupyterjazz",
            "id": 45267439,
            "node_id": "MDQ6VXNlcjQ1MjY3NDM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/45267439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jupyterjazz",
            "html_url": "https://github.com/jupyterjazz",
            "followers_url": "https://api.github.com/users/jupyterjazz/followers",
            "following_url": "https://api.github.com/users/jupyterjazz/following{/other_user}",
            "gists_url": "https://api.github.com/users/jupyterjazz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jupyterjazz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jupyterjazz/subscriptions",
            "organizations_url": "https://api.github.com/users/jupyterjazz/orgs",
            "repos_url": "https://api.github.com/users/jupyterjazz/repos",
            "events_url": "https://api.github.com/users/jupyterjazz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jupyterjazz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-26T14:25:03Z",
        "updated_at": "2023-06-06T21:03:48Z",
        "closed_at": "2023-06-06T21:03:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3930",
            "html_url": "https://github.com/run-llama/llama_index/pull/3930",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3930.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3930.patch",
            "merged_at": "2023-06-06T21:03:47Z"
        },
        "body": "Hey all,\r\nI'd like to add two new vectorstores using [docarray](https://docs.docarray.org/)\r\n\r\n## DocArrayInMemoryVectorStore\r\n[DocArrayInMemoryVectorStore](https://docs.docarray.org/user_guide/storing/index_in_memory/) is a document index that stores documents in memory. It is a great starting point for small datasets, where you may not want to launch a database server.\r\n\r\n## DocArrayHnswVectorStore\r\n[DocArrayHnswVectorStore](https://docs.docarray.org/user_guide/storing/index_hnswlib/) is a lightweight Document Index implementation that runs fully locally and is best suited for small- to medium-sized datasets. It stores vectors on disk in [hnswlib](https://github.com/nmslib/hnswlib), and stores all other data in [SQLite](https://www.sqlite.org/index.html).",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3930/reactions",
            "total_count": 6,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 3,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3930/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3929",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3929/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3929/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3929/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3929",
        "id": 1727634870,
        "node_id": "I_kwDOIWuq585m-Z22",
        "number": 3929,
        "title": "GPTVectorStoreIndex.from_documents stuck and slow",
        "user": {
            "login": "shravanv90",
            "id": 48054120,
            "node_id": "MDQ6VXNlcjQ4MDU0MTIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/48054120?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shravanv90",
            "html_url": "https://github.com/shravanv90",
            "followers_url": "https://api.github.com/users/shravanv90/followers",
            "following_url": "https://api.github.com/users/shravanv90/following{/other_user}",
            "gists_url": "https://api.github.com/users/shravanv90/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shravanv90/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shravanv90/subscriptions",
            "organizations_url": "https://api.github.com/users/shravanv90/orgs",
            "repos_url": "https://api.github.com/users/shravanv90/repos",
            "events_url": "https://api.github.com/users/shravanv90/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shravanv90/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-26T13:30:53Z",
        "updated_at": "2023-07-22T02:38:56Z",
        "closed_at": "2023-07-22T02:38:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am trying to index the documents `GPTVectorStoreIndex.from_documents(documents)`  using the github connector. It's a pretty small repo but The indexing seems stuck. Is there anyway to get the progress with logs? is there something else to check?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3929/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3929/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3928",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3928/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3928/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3928/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3928",
        "id": 1727590304,
        "node_id": "I_kwDOIWuq585m-O-g",
        "number": 3928,
        "title": "How to update vector store index/ inserting new documents to already created index  ",
        "user": {
            "login": "vishalp-simplecrm",
            "id": 115548851,
            "node_id": "U_kgDOBuMisw",
            "avatar_url": "https://avatars.githubusercontent.com/u/115548851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishalp-simplecrm",
            "html_url": "https://github.com/vishalp-simplecrm",
            "followers_url": "https://api.github.com/users/vishalp-simplecrm/followers",
            "following_url": "https://api.github.com/users/vishalp-simplecrm/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishalp-simplecrm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishalp-simplecrm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishalp-simplecrm/subscriptions",
            "organizations_url": "https://api.github.com/users/vishalp-simplecrm/orgs",
            "repos_url": "https://api.github.com/users/vishalp-simplecrm/repos",
            "events_url": "https://api.github.com/users/vishalp-simplecrm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishalp-simplecrm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-05-26T13:03:58Z",
        "updated_at": "2023-06-15T02:08:35Z",
        "closed_at": "2023-06-11T07:17:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In a google drive folder I have 7 docs for which I have created the vector store index\r\nusing\r\nGoogleDriveReader = download_loader('GoogleDriveReader')\r\nfolder_id = '1LFa04mF3U300ttoej-EkWcT35sHHDZJL'\r\nloader = GoogleDriveReader()\r\ndocuments = loader.load_data(folder_id=folder_id)\r\nindex = GPTVectorStoreIndex.from_documents(documents, service_context=service_context )\r\n\r\nNow in the same folder i have added some more documents ,\r\nhow I can update the index \r\nhow can I use index.insert(document) how it will identify new documents only  \r\n\r\nwhether it will create index from scratch or it will append new index into that previously created files.\r\n\r\nplease provide the details about this ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3928/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3928/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3927",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3927/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3927/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3927/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3927",
        "id": 1727529901,
        "node_id": "PR_kwDOIWuq585Rb47N",
        "number": 3927,
        "title": "a minor typo in indices/base.py ",
        "user": {
            "login": "ayulockin",
            "id": 31141479,
            "node_id": "MDQ6VXNlcjMxMTQxNDc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/31141479?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ayulockin",
            "html_url": "https://github.com/ayulockin",
            "followers_url": "https://api.github.com/users/ayulockin/followers",
            "following_url": "https://api.github.com/users/ayulockin/following{/other_user}",
            "gists_url": "https://api.github.com/users/ayulockin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ayulockin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ayulockin/subscriptions",
            "organizations_url": "https://api.github.com/users/ayulockin/orgs",
            "repos_url": "https://api.github.com/users/ayulockin/repos",
            "events_url": "https://api.github.com/users/ayulockin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ayulockin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-26T12:25:23Z",
        "updated_at": "2023-05-26T13:09:32Z",
        "closed_at": "2023-05-26T13:09:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3927",
            "html_url": "https://github.com/run-llama/llama_index/pull/3927",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3927.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3927.patch",
            "merged_at": "2023-05-26T13:09:32Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3927/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3927/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3926",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3926/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3926/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3926/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3926",
        "id": 1727336814,
        "node_id": "PR_kwDOIWuq585RbOHp",
        "number": 3926,
        "title": "FIX SimpleVectorStore delete method not deleting",
        "user": {
            "login": "elBarkey",
            "id": 6080684,
            "node_id": "MDQ6VXNlcjYwODA2ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6080684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elBarkey",
            "html_url": "https://github.com/elBarkey",
            "followers_url": "https://api.github.com/users/elBarkey/followers",
            "following_url": "https://api.github.com/users/elBarkey/following{/other_user}",
            "gists_url": "https://api.github.com/users/elBarkey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/elBarkey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/elBarkey/subscriptions",
            "organizations_url": "https://api.github.com/users/elBarkey/orgs",
            "repos_url": "https://api.github.com/users/elBarkey/repos",
            "events_url": "https://api.github.com/users/elBarkey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/elBarkey/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-26T10:21:30Z",
        "updated_at": "2023-06-02T18:29:24Z",
        "closed_at": "2023-06-02T18:29:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3926",
            "html_url": "https://github.com/run-llama/llama_index/pull/3926",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3926.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3926.patch",
            "merged_at": null
        },
        "body": "SimpleVectorStore delete method not deleting anything because text_ids_to_delete set never filled.\r\n\r\nFIX: #1286 ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3926/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3926/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3925",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3925/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3925/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3925/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3925",
        "id": 1727335224,
        "node_id": "I_kwDOIWuq585m9Qs4",
        "number": 3925,
        "title": "Response streaming, so that we are not just working from local data. ",
        "user": {
            "login": "benji56",
            "id": 98659243,
            "node_id": "U_kgDOBeFrqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98659243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benji56",
            "html_url": "https://github.com/benji56",
            "followers_url": "https://api.github.com/users/benji56/followers",
            "following_url": "https://api.github.com/users/benji56/following{/other_user}",
            "gists_url": "https://api.github.com/users/benji56/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benji56/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benji56/subscriptions",
            "organizations_url": "https://api.github.com/users/benji56/orgs",
            "repos_url": "https://api.github.com/users/benji56/repos",
            "events_url": "https://api.github.com/users/benji56/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benji56/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-26T10:20:19Z",
        "updated_at": "2023-07-22T02:32:21Z",
        "closed_at": "2023-07-22T02:32:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "am I correct that if I use the index in this way, the system works only from the local files? Is there a way to be able to respond even if no data is found on the disk (and stream at the same time?)\r\n\r\nOr if I'm the only one who doesn't know a setting, how can I determine how flexible the system should be to answer the question?\r\n\r\nindex = load_index_from_storage(storage_context, service_context=service_context)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3925/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3925/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3924",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3924/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3924/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3924/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3924",
        "id": 1727144032,
        "node_id": "PR_kwDOIWuq585RakYb",
        "number": 3924,
        "title": "Fix print_response_stream",
        "user": {
            "login": "tilleul",
            "id": 3061106,
            "node_id": "MDQ6VXNlcjMwNjExMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3061106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tilleul",
            "html_url": "https://github.com/tilleul",
            "followers_url": "https://api.github.com/users/tilleul/followers",
            "following_url": "https://api.github.com/users/tilleul/following{/other_user}",
            "gists_url": "https://api.github.com/users/tilleul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tilleul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tilleul/subscriptions",
            "organizations_url": "https://api.github.com/users/tilleul/orgs",
            "repos_url": "https://api.github.com/users/tilleul/repos",
            "events_url": "https://api.github.com/users/tilleul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tilleul/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-26T08:21:58Z",
        "updated_at": "2023-05-26T18:23:58Z",
        "closed_at": "2023-05-26T18:23:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3924",
            "html_url": "https://github.com/run-llama/llama_index/pull/3924",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3924.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3924.patch",
            "merged_at": "2023-05-26T18:23:57Z"
        },
        "body": "self.response_txt was not set properly when using print_response_stream()",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3924/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3924/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3921",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3921/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3921/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3921/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3921",
        "id": 1726700461,
        "node_id": "I_kwDOIWuq585m61ut",
        "number": 3921,
        "title": "\u6211\u60f3\u5b9e\u73b0\u8bfb\u53d6\u672c\u5730index\u4e4b\u540e\uff0c\u67e5\u8be2\u7684\u4e4b\u540e\u4ece\u672c\u5730index\u67e5\uff0c\u67e5\u5b8c\u6ca1\u6709\u7ed3\u679c\u7684\uff0c\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u72b6\u6001\uff0c\u6211\u6839\u636e\u72b6\u6001\u5224\u5b9a\uff0c\u518d\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\uff0c\u600e\u4e48\u5b9e\u73b0",
        "user": {
            "login": "120805481",
            "id": 14190313,
            "node_id": "MDQ6VXNlcjE0MTkwMzEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/14190313?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/120805481",
            "html_url": "https://github.com/120805481",
            "followers_url": "https://api.github.com/users/120805481/followers",
            "following_url": "https://api.github.com/users/120805481/following{/other_user}",
            "gists_url": "https://api.github.com/users/120805481/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/120805481/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/120805481/subscriptions",
            "organizations_url": "https://api.github.com/users/120805481/orgs",
            "repos_url": "https://api.github.com/users/120805481/repos",
            "events_url": "https://api.github.com/users/120805481/events{/privacy}",
            "received_events_url": "https://api.github.com/users/120805481/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-26T01:10:10Z",
        "updated_at": "2023-09-10T16:57:43Z",
        "closed_at": "2023-09-10T16:57:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\u6211\u60f3\u5b9e\u73b0\u8bfb\u53d6\u672c\u5730index\u4e4b\u540e\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u4ece\u672c\u5730index\u67e5\uff0c\u67e5\u5b8c\u6ca1\u6709\u7ed3\u679c\u7684\uff0c\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u72b6\u6001\uff0c\u6211\u6839\u636e\u72b6\u6001\u5224\u5b9a\uff0c\u518d\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\uff0c\u600e\u4e48\u5b9e\u73b0\u3002\r\n\u76ee\u524d\u597d\u50cf\u662f\u6574\u7406\u597d\u4e4b\u540e\u53d1\u7ed9openai\u3002\u6211\u60f3\u5b9e\u73b0\u89e3\u6790\u6587\u6863\u7684\u65f6\u5019\u7528openai\uff0c\u540e\u9762\u67e5\u8be2\u76f4\u63a5\u8d70\u672c\u5730\u7f13\u5b58",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3921/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3921/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3920",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3920/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3920/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3920/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3920",
        "id": 1726542711,
        "node_id": "I_kwDOIWuq585m6PN3",
        "number": 3920,
        "title": "Support for different LLM predictors when the index is loaded from the disk",
        "user": {
            "login": "chaofanqw",
            "id": 44720017,
            "node_id": "MDQ6VXNlcjQ0NzIwMDE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/44720017?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chaofanqw",
            "html_url": "https://github.com/chaofanqw",
            "followers_url": "https://api.github.com/users/chaofanqw/followers",
            "following_url": "https://api.github.com/users/chaofanqw/following{/other_user}",
            "gists_url": "https://api.github.com/users/chaofanqw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chaofanqw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chaofanqw/subscriptions",
            "organizations_url": "https://api.github.com/users/chaofanqw/orgs",
            "repos_url": "https://api.github.com/users/chaofanqw/repos",
            "events_url": "https://api.github.com/users/chaofanqw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chaofanqw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-25T22:02:49Z",
        "updated_at": "2023-05-26T10:19:15Z",
        "closed_at": "2023-05-26T04:12:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello,\r\n\r\nI'd like to extend my appreciation for developing such a great library. I'm curious to know if you've considered adding support for different LLM predictors when the index is loaded from the disk. As it stands, the system defaults directly to LLMPredictor() which leverages OpenAI(temperature=0, model_name=\"text-davinci-003\").\r\n\r\nTo facilitate the use of the ChatGPT predictor, I've tried integrating **kwargs into self._service_context = service_context or ServiceContext.from_defaults(**kwargs) in the base.py file. Moreover, I've included the LLM predictor in the load_index_from_storage() function like so: load_index_from_storage(storage_context=context, llm_predictor=LLMPredictor(llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\", streaming=True)))\r\n\r\nNevertheless, it would greatly enhance the library's functionality if there were built-in support for other LLMs when the index is loaded from the disk. Thank you for considering this suggestion.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3920/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3919",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3919/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3919/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3919/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3919",
        "id": 1726455423,
        "node_id": "I_kwDOIWuq585m555_",
        "number": 3919,
        "title": "Deprecated Properties for Streaming Response",
        "user": {
            "login": "mcmichaelau",
            "id": 89956667,
            "node_id": "MDQ6VXNlcjg5OTU2NjY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/89956667?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mcmichaelau",
            "html_url": "https://github.com/mcmichaelau",
            "followers_url": "https://api.github.com/users/mcmichaelau/followers",
            "following_url": "https://api.github.com/users/mcmichaelau/following{/other_user}",
            "gists_url": "https://api.github.com/users/mcmichaelau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mcmichaelau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mcmichaelau/subscriptions",
            "organizations_url": "https://api.github.com/users/mcmichaelau/orgs",
            "repos_url": "https://api.github.com/users/mcmichaelau/repos",
            "events_url": "https://api.github.com/users/mcmichaelau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mcmichaelau/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T20:35:05Z",
        "updated_at": "2023-06-06T05:10:39Z",
        "closed_at": "2023-06-06T05:10:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm not sure if this is a big deal or not, but ran into these warnings while using `.get_formatted_sources()` for a streaming response:\r\n\r\nUserWarning: .source_text is deprecated, use .node.get_text() instead\r\n  warnings.warn(\".source_text is deprecated, use .node.get_text() instead\")\r\nC:\\Users\\Austin.McMichael\\PycharmProjects\\llamaPractice\\venv\\lib\\site-packages\\llama_index\\data_structs\\node.py:171: UserWarning: .doc_id is deprecated, use .node.ref_doc_id instead\r\n  warnings.warn(\".doc_id is deprecated, use .node.ref_doc_id instead\")\r\n\r\nEasy changes in llama_index/response/schema.py took care of it -->\r\n\r\nOriginal: \r\n`    def get_formatted_sources(self, length: int = 100) -> str:\r\n        \"\"\"Get formatted sources text.\"\"\"\r\n        texts = []\r\n        for source_node in self.source_nodes:\r\n            fmt_text_chunk = truncate_text(source_node --->>>.source_text <<<---, length)\r\n            doc_id = source_node --->>> .doc_id <<<--- or \"None\"\r\n            source_text = f\"> Source (Doc id: {doc_id}): {fmt_text_chunk}\"\r\n            texts.append(source_text)\r\n        return \"\\n\\n\".join(texts)`\r\n\r\nModified:\r\n`    def get_formatted_sources(self, length: int = 100) -> str:\r\n        \"\"\"Get formatted sources text.\"\"\"\r\n        texts = []\r\n        for source_node in self.source_nodes:\r\n            fmt_text_chunk = truncate_text(source_node --->>> .node.get_text() <<<--- , length)\r\n            doc_id = source_node --->>> .node.ref_doc_id <<<--- or \"None\"\r\n            source_text = f\"> Source (Doc id: {doc_id}): {fmt_text_chunk}\"\r\n            texts.append(source_text)\r\n        return \"\\n\\n\".join(texts)`\r\n\r\nJust thought I would let you know",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3919/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3919/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3914",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3914/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3914/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3914/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3914",
        "id": 1726386051,
        "node_id": "I_kwDOIWuq585m5o-D",
        "number": 3914,
        "title": "Missing Node info when saving to Milvus",
        "user": {
            "login": "czhang-trinity",
            "id": 35928300,
            "node_id": "MDQ6VXNlcjM1OTI4MzAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/35928300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/czhang-trinity",
            "html_url": "https://github.com/czhang-trinity",
            "followers_url": "https://api.github.com/users/czhang-trinity/followers",
            "following_url": "https://api.github.com/users/czhang-trinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/czhang-trinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/czhang-trinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/czhang-trinity/subscriptions",
            "organizations_url": "https://api.github.com/users/czhang-trinity/orgs",
            "repos_url": "https://api.github.com/users/czhang-trinity/repos",
            "events_url": "https://api.github.com/users/czhang-trinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/czhang-trinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T19:35:55Z",
        "updated_at": "2023-07-22T02:33:01Z",
        "closed_at": "2023-07-22T02:33:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi Community, I think there is a bug on missing save the node info when trying save to milvus database. When the database try to save text, it called the node.get_text(). This only includes the node.extra_info not the node_info so when you try to query it and recompose it as the node, the node info is missing. Also want to know what is a better way to fix it(Putting the text and extra_info together does not like a good implementation since it is hard to separate when query it).",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3914/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3910",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3910/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3910/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3910/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3910",
        "id": 1726254931,
        "node_id": "PR_kwDOIWuq585RXjLi",
        "number": 3910,
        "title": "always user lower suffix in simple reader",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T17:59:09Z",
        "updated_at": "2023-08-28T17:10:46Z",
        "closed_at": "2023-05-25T19:08:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3910",
            "html_url": "https://github.com/run-llama/llama_index/pull/3910",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3910.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3910.patch",
            "merged_at": "2023-05-25T19:08:36Z"
        },
        "body": "https://github.com/jerryjliu/llama_index/issues/3908\r\n\r\nEasy fix I think!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3910/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3910/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3908",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3908/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3908/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3908/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3908",
        "id": 1726197191,
        "node_id": "I_kwDOIWuq585m463H",
        "number": 3908,
        "title": "SimpleDirectoryReader errors out when dealing with a PDF document containing an UPPERCASE extension",
        "user": {
            "login": "thedoor76",
            "id": 75886096,
            "node_id": "MDQ6VXNlcjc1ODg2MDk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/75886096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thedoor76",
            "html_url": "https://github.com/thedoor76",
            "followers_url": "https://api.github.com/users/thedoor76/followers",
            "following_url": "https://api.github.com/users/thedoor76/following{/other_user}",
            "gists_url": "https://api.github.com/users/thedoor76/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thedoor76/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thedoor76/subscriptions",
            "organizations_url": "https://api.github.com/users/thedoor76/orgs",
            "repos_url": "https://api.github.com/users/thedoor76/repos",
            "events_url": "https://api.github.com/users/thedoor76/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thedoor76/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T17:13:37Z",
        "updated_at": "2023-05-26T04:09:19Z",
        "closed_at": "2023-05-26T04:09:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have a directory of thousands of PDF documents, a handful of which have an uppercase extension of .PDF (instead of the typical lowercase .pdf extension).\r\n\r\nThis seems to trip the SimpleDirectoryReader. Relevant part of the error stack:\r\n```\r\n  File \"[removed]\\site-packages\\llama_index\\readers\\file\\base.py\", line 186, in load_data\r\n    reader_cls = DEFAULT_FILE_READER_CLS[input_file.suffix]\r\nKeyError: '.PDF'\r\n```\r\n\r\nAs a workaround, I have renamed the uppercase extensions to lowercase, and everything runs as expected.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3908/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3908/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3905",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3905/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3905/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3905/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3905",
        "id": 1726161510,
        "node_id": "I_kwDOIWuq585m4yJm",
        "number": 3905,
        "title": "Issue with nodes being selected for LLM",
        "user": {
            "login": "domleppard",
            "id": 32876906,
            "node_id": "MDQ6VXNlcjMyODc2OTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/32876906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/domleppard",
            "html_url": "https://github.com/domleppard",
            "followers_url": "https://api.github.com/users/domleppard/followers",
            "following_url": "https://api.github.com/users/domleppard/following{/other_user}",
            "gists_url": "https://api.github.com/users/domleppard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/domleppard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/domleppard/subscriptions",
            "organizations_url": "https://api.github.com/users/domleppard/orgs",
            "repos_url": "https://api.github.com/users/domleppard/repos",
            "events_url": "https://api.github.com/users/domleppard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/domleppard/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-25T16:47:05Z",
        "updated_at": "2023-07-22T02:33:18Z",
        "closed_at": "2023-07-22T02:33:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm new to Llama_Index. I'm following your basic usage pattern as described here:\r\n\r\nhttps://gpt-index.readthedocs.io/en/latest/guides/primer/usage_pattern.html\r\n\r\nI have just one external file that I am testing llama_index with - a CSV file (linked in this post ) that contains a list of employees, their manager, org unit and then information about the various skills and certifications the employee holds. This isn't real data.\r\n\r\nWhat i'm trying to do is query this data in natural language to ask questions like \"Show me a list of people who has skill X\" or \"Show me all the skills employee X has\".\r\n\r\nIn Python - The following code works fine for me and I get a valid response from the Open AI API:\r\n\r\nfrom llama_index import SimpleDirectoryReader\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\nindex = GPTVectorStoreIndex.from_documents(documents)\r\nquery_engine = index.as_query_engine()\r\nresponse = query_engine.query(\"Tell me what skills Ada Waters has?\")\r\nprint(response)\r\n\r\nThe issue I'm having is with achieving an satisfactory response from the LLM. For example the prompt im submitting asks for the skills Ada Waters has, who is an employee listed in the csv. However, when I query this, the response is completely wrong and/or says it cant find the employee.\r\n\r\nIt looks like the nodes that are returned from the GPTVectorStoreIndex and passed to the LLM don't seem to contain anything related to Ada Waters....\r\n\r\nCan someone help me understand what i'm doing wrong? Is there something wrong with the way i'm using Llama_Index, or an issue with the format of my raw data? or are LLM just not well suited to these type of tasks\r\n\r\nI've also tried importing this data in a TXT file in JSON format and have the same issue\r\n[Staff - skills list.csv](https://github.com/jerryjliu/llama_index/files/11567346/Staff.-.skills.list.csv)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3905/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3905/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3902",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3902/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3902/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3902/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3902",
        "id": 1726131654,
        "node_id": "PR_kwDOIWuq585RXIk8",
        "number": 3902,
        "title": "[version] bump version to 0.6.11",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T16:23:33Z",
        "updated_at": "2023-05-25T16:32:41Z",
        "closed_at": "2023-05-25T16:32:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3902",
            "html_url": "https://github.com/run-llama/llama_index/pull/3902",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3902.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3902.patch",
            "merged_at": "2023-05-25T16:32:40Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3902/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3902/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3898",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3898/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3898/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3898/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3898",
        "id": 1725693073,
        "node_id": "I_kwDOIWuq585m2_yR",
        "number": 3898,
        "title": "AzureOpenAI    llama-index 0.6.5  retriever",
        "user": {
            "login": "ColdTeaIsNotTooCold",
            "id": 39373374,
            "node_id": "MDQ6VXNlcjM5MzczMzc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/39373374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ColdTeaIsNotTooCold",
            "html_url": "https://github.com/ColdTeaIsNotTooCold",
            "followers_url": "https://api.github.com/users/ColdTeaIsNotTooCold/followers",
            "following_url": "https://api.github.com/users/ColdTeaIsNotTooCold/following{/other_user}",
            "gists_url": "https://api.github.com/users/ColdTeaIsNotTooCold/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ColdTeaIsNotTooCold/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ColdTeaIsNotTooCold/subscriptions",
            "organizations_url": "https://api.github.com/users/ColdTeaIsNotTooCold/orgs",
            "repos_url": "https://api.github.com/users/ColdTeaIsNotTooCold/repos",
            "events_url": "https://api.github.com/users/ColdTeaIsNotTooCold/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ColdTeaIsNotTooCold/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-25T12:06:46Z",
        "updated_at": "2023-07-05T00:11:18Z",
        "closed_at": "2023-07-05T00:11:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "There is no error when using azureOpenAI regular, but when using retriever, it will. You must provide an engine or deployment_id parameter to create a < class'openai. api_resources. Done. >\r\n\r\nrequests.txt\r\nlangchain               0.0.166\r\nllama-index             0.6.5\r\n\r\ncode\r\n\r\n``` python\r\nllm = AzureOpenAI(deployment_name=\"XXXXX\",\r\n                  model_name=\"XXXXX\",\r\n                  max_tokens=1024,\r\n                  model_kwargs={\r\n                      \"api_key\": openai.api_key,\r\n                      \"api_base\": openai.api_base,\r\n                      \"api_type\": openai.api_type,\r\n                      \"api_version\": openai.api_version,\r\n                  })\r\nembedding_llm = LangchainEmbedding(\r\n    OpenAIEmbeddings(\r\n        model=\"text-embedding-ada-002\",\r\n        deployment=\"xxx-embedding-ada\",\r\n        openai_api_key=openai.api_key,\r\n        openai_api_base=openai.api_base,\r\n        openai_api_type=openai.api_type,\r\n        openai_api_version=openai.api_version\r\n    ),\r\n    embed_batch_size=1,\r\n)\r\n# define LLM\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\n# define prompt helper\r\n# set maximum input size\r\nmax_input_size = 4096\r\n# set number of output tokens\r\nnum_output = 2048\r\n# set maximum chunk overlap\r\nmax_chunk_overlap = 10\r\n# set chunk size limit\r\nchunk_size_limit = 1024\r\n\r\ndocuments = SimpleDirectoryReader('data2').load_data()\r\n\r\nprompt_helper = PromptHelper(max_input_size, num_output, max_chunk_overlap, chunk_size_limit=chunk_size_limit)\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper,\r\n                                               embed_model=embedding_llm)\r\n    index = GPTVectorStoreIndex.from_documents(\r\n        documents, service_context=service_context\r\n    )\r\n    index.storage_context.persist(persist_dir=\"./storage2\")\r\n\r\n    # configure retriever\r\n    retriever = VectorIndexRetriever(\r\n        index=index,\r\n        similarity_top_k=1,\r\n\r\n    )\r\n    # configure response synthesizer\r\n    response_synthesizer = ResponseSynthesizer.from_args(\r\n        node_postprocessors=[\r\n            SimilarityPostprocessor(similarity_cutoff=0.7)\r\n        ]\r\n    )\r\n    # retriever = index.as_retriever(retriever_mode='default')\r\n\r\n    # assemble query engine\r\n    query_engine = RetrieverQueryEngine(\r\n        retriever=retriever,\r\n        response_synthesizer=response_synthesizer,\r\n    )\r\n    response = query_engine.query(query)\r\n    print(response)`\r\n\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3898/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3898/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3894",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3894/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3894/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3894/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3894",
        "id": 1725606851,
        "node_id": "I_kwDOIWuq585m2qvD",
        "number": 3894,
        "title": "SubQuestionQueryEngine raises an error   at line:  query_engine = self._query_engines[sub_q.tool_name] KeyError: ''",
        "user": {
            "login": "bespaloff",
            "id": 12160343,
            "node_id": "MDQ6VXNlcjEyMTYwMzQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/12160343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bespaloff",
            "html_url": "https://github.com/bespaloff",
            "followers_url": "https://api.github.com/users/bespaloff/followers",
            "following_url": "https://api.github.com/users/bespaloff/following{/other_user}",
            "gists_url": "https://api.github.com/users/bespaloff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bespaloff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bespaloff/subscriptions",
            "organizations_url": "https://api.github.com/users/bespaloff/orgs",
            "repos_url": "https://api.github.com/users/bespaloff/repos",
            "events_url": "https://api.github.com/users/bespaloff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bespaloff/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-25T11:09:58Z",
        "updated_at": "2023-07-22T02:39:54Z",
        "closed_at": "2023-07-22T02:39:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi! \r\nAs always thank you for amazing tool, really appreciate your passion. I have been playing with SubQuestionQueryEngine and after few iterations of self-asking it threw an error:\r\n\r\n```console\r\n  File \"somefolder/.venv/lib/python3.11/site-packages/llama_index/query_engine/sub_question_query_engine.py\", line 124, in aquery_subq\r\n    query_engine = self._query_engines[sub_q.tool_name]\r\n                   ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\r\nKeyError: ''\r\n```\r\nMy code when I am using this is basically copy paste from tutorial:\r\n```python\r\nvector_store = FaissVectorStore.from_persist_dir('./storage')\r\ndocstore=SimpleDocumentStore.from_persist_dir(persist_dir='./storage/')\r\nindex_store=SimpleIndexStore.from_persist_dir(persist_dir='./storage/')\r\nstorage_context = StorageContext.from_defaults(  vector_store=vector_store,index_store=index_store,docstore=docstore)\r\nindex = load_index_from_storage(storage_context=storage_context)\r\nllm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\" , request_timeout=120))\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, chunk_size_limit=2048)\r\nquery_engine = index.as_query_engine(\r\n    use_async=True, \r\n            similarity_top_k=1,\r\n            service_context=service_context,\r\n            verbose=True\r\n)\r\nquery_engine_tools = [\r\n    QueryEngineTool(\r\n\r\n        query_engine=query_engine, \r\n        metadata=ToolMetadata(name='pg_essay', description='UK rules for taxation, statuary test')\r\n    )\r\n]\r\nquery_engine_ = SubQuestionQueryEngine.from_defaults(query_engine_tools=query_engine_tools)\r\n\r\nquery = \"\\nMrs Baker, who has been UK resident for 5 years but ....\"\r\n\r\nresponse =  query_engine_.query(query)\r\n```\r\nI printed sub_q before the error and it looks like this:\r\n\r\n```console\r\nsub_question=\"What is Mrs Baker's UK employment income for 2021/22\" tool_name=''\r\nsub_question=\"What is Mrs Baker's foreign dividend income for 2021/22\" tool_name=''\r\nsub_question='Has Mrs Baker made any remittances to the UK' tool_name=''\r\n```\r\n\r\nSeems that it is a llm output that gives unidentified tool. Should prompt be improved to prevent this? Also could a \"human\" could be used to answer this question anyhow or how to loop back the questions itself, because the answer was mentioned there initially?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3894/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3890",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3890/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3890/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3890/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3890",
        "id": 1725343629,
        "node_id": "PR_kwDOIWuq585RUcre",
        "number": 3890,
        "title": "NONE",
        "user": {
            "login": "yezhem",
            "id": 17040545,
            "node_id": "MDQ6VXNlcjE3MDQwNTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17040545?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yezhem",
            "html_url": "https://github.com/yezhem",
            "followers_url": "https://api.github.com/users/yezhem/followers",
            "following_url": "https://api.github.com/users/yezhem/following{/other_user}",
            "gists_url": "https://api.github.com/users/yezhem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yezhem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yezhem/subscriptions",
            "organizations_url": "https://api.github.com/users/yezhem/orgs",
            "repos_url": "https://api.github.com/users/yezhem/repos",
            "events_url": "https://api.github.com/users/yezhem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yezhem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T08:30:37Z",
        "updated_at": "2023-05-25T08:41:38Z",
        "closed_at": "2023-05-25T08:32:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3890",
            "html_url": "https://github.com/run-llama/llama_index/pull/3890",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3890.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3890.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3890/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3890/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3887",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3887/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3887/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3887/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3887",
        "id": 1725182244,
        "node_id": "I_kwDOIWuq585m1DEk",
        "number": 3887,
        "title": "Save build graph without summaries",
        "user": {
            "login": "tapizquent",
            "id": 26445812,
            "node_id": "MDQ6VXNlcjI2NDQ1ODEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/26445812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tapizquent",
            "html_url": "https://github.com/tapizquent",
            "followers_url": "https://api.github.com/users/tapizquent/followers",
            "following_url": "https://api.github.com/users/tapizquent/following{/other_user}",
            "gists_url": "https://api.github.com/users/tapizquent/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tapizquent/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tapizquent/subscriptions",
            "organizations_url": "https://api.github.com/users/tapizquent/orgs",
            "repos_url": "https://api.github.com/users/tapizquent/repos",
            "events_url": "https://api.github.com/users/tapizquent/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tapizquent/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T06:38:19Z",
        "updated_at": "2023-09-10T16:57:48Z",
        "closed_at": "2023-09-10T16:57:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Some times having a large document can not be performant or beneficial. Saving a graph should allow you to save without having a summary.\r\n\r\nHow could we accomplish this?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3887/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3887/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3884",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3884/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3884/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3884/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3884",
        "id": 1725123961,
        "node_id": "I_kwDOIWuq585m0015",
        "number": 3884,
        "title": "Does the Tree Index perform any initial sorting of documents?",
        "user": {
            "login": "nathan-az",
            "id": 42650258,
            "node_id": "MDQ6VXNlcjQyNjUwMjU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/42650258?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathan-az",
            "html_url": "https://github.com/nathan-az",
            "followers_url": "https://api.github.com/users/nathan-az/followers",
            "following_url": "https://api.github.com/users/nathan-az/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathan-az/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathan-az/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathan-az/subscriptions",
            "organizations_url": "https://api.github.com/users/nathan-az/orgs",
            "repos_url": "https://api.github.com/users/nathan-az/repos",
            "events_url": "https://api.github.com/users/nathan-az/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathan-az/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T05:39:22Z",
        "updated_at": "2023-09-10T16:57:53Z",
        "closed_at": "2023-09-10T16:57:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "When constructing the Tree Index bottom-up, is there any sorting of documents performed to keep similar documents together at the leaves (i.e. prior to the initial chunking and indexing)?\r\n\r\nIt seems to me that there may be some benefit in similar documents sharing parents at higher depths (i.e. further down the tree).\r\n\r\nExtreme example: suppose we have identical documents in index `0` and `999` in a store with 1000 documents. Without any sorting, the identical sentiment in each document may propagate through the entire depth of the tree. On the other hand, if these documents were placed in the same initial chunk, the first summary result would capture their sentiments together.\r\n\r\nI expect this would produce denser summaries and more unique paths down the tree (potentially traversing more easily to relevant summaries?)\r\n\r\nI'm curious about:\r\n1. Whether any sort of intervention takes place during the initial chunking during tree indexing, or whether chunking and indexing is entirely dependent on the initial document order. I looked through the source code but couldn't find an obvious spot performing this functionality\r\n2. Whether my thought process makes some sense, or whether there is not really any benefit to providing an initial ordering of the documents, perhaps based on embedding similarity\r\n\r\nEDIT: I would be interested in attempting to contribute this, but want to confirm that it's not already in place, and whether there's agreement with my intuition that this may be helpful!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3884/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3884/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3883",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3883/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3883/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3883/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3883",
        "id": 1724944159,
        "node_id": "I_kwDOIWuq585m0I8f",
        "number": 3883,
        "title": "Illegal instruction (core dumped)",
        "user": {
            "login": "elderguardian16",
            "id": 134565985,
            "node_id": "U_kgDOCAVQYQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/134565985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elderguardian16",
            "html_url": "https://github.com/elderguardian16",
            "followers_url": "https://api.github.com/users/elderguardian16/followers",
            "following_url": "https://api.github.com/users/elderguardian16/following{/other_user}",
            "gists_url": "https://api.github.com/users/elderguardian16/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/elderguardian16/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/elderguardian16/subscriptions",
            "organizations_url": "https://api.github.com/users/elderguardian16/orgs",
            "repos_url": "https://api.github.com/users/elderguardian16/repos",
            "events_url": "https://api.github.com/users/elderguardian16/events{/privacy}",
            "received_events_url": "https://api.github.com/users/elderguardian16/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T01:30:02Z",
        "updated_at": "2023-05-26T23:53:49Z",
        "closed_at": "2023-05-26T23:53:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, i tried to install llamaindex on my pc but when i prompt import llama_index the python console crashes and give me back this error: Illegal instruction (core dumped). Some specs of my old pc that i use as a multi-purpose server:\r\n\r\n- SO: mint \"vera\" 21.1\r\n- RAM: 8gb \r\n- CPU: Intel Core DUO quad q6600\r\n- GPU: nvidia gt730 2gb \r\n- SSD kingdian 240\r\n\r\nI've tried installing older version of llamaindex but i haven't obtain nothing, i think that can be something that can it's correlated with cpu instruction but on the docs i haven't found anything on that. If someone knows a solution.... Thanks in advice.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3883/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3878",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3878/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3878/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3878/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3878",
        "id": 1724901332,
        "node_id": "PR_kwDOIWuq585RS--q",
        "number": 3878,
        "title": "Remove prompt subclasses",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T00:23:49Z",
        "updated_at": "2023-05-26T22:41:18Z",
        "closed_at": "2023-05-26T22:41:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3878",
            "html_url": "https://github.com/run-llama/llama_index/pull/3878",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3878.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3878.patch",
            "merged_at": "2023-05-26T22:41:17Z"
        },
        "body": "### Summary\r\n* Remove prompt subclasses e.g. `QuestionAnswerPrompt` (now aliased to `Prompt` for backward compatibility)\r\n* Benefits: \r\n  1) better UX - one less step in creating a new prompt, \r\n  2) make it possible to create other implementation of `Prompt` beyond langchain prompt e.g. `VellumPrompt` without conflicting with the existing class hierarchy (cc: https://github.com/jerryjliu/llama_index/pull/3726)\r\n* Revamp docs",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3878/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3878/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3876",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3876/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3876/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3876/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3876",
        "id": 1724846800,
        "node_id": "PR_kwDOIWuq585RSzKU",
        "number": 3876,
        "title": "add name of author",
        "user": {
            "login": "shmuel44",
            "id": 69422117,
            "node_id": "MDQ6VXNlcjY5NDIyMTE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69422117?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shmuel44",
            "html_url": "https://github.com/shmuel44",
            "followers_url": "https://api.github.com/users/shmuel44/followers",
            "following_url": "https://api.github.com/users/shmuel44/following{/other_user}",
            "gists_url": "https://api.github.com/users/shmuel44/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shmuel44/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shmuel44/subscriptions",
            "organizations_url": "https://api.github.com/users/shmuel44/orgs",
            "repos_url": "https://api.github.com/users/shmuel44/repos",
            "events_url": "https://api.github.com/users/shmuel44/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shmuel44/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T23:07:13Z",
        "updated_at": "2023-05-25T02:16:39Z",
        "closed_at": "2023-05-25T02:16:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3876",
            "html_url": "https://github.com/run-llama/llama_index/pull/3876",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3876.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3876.patch",
            "merged_at": "2023-05-25T02:16:39Z"
        },
        "body": "I saw on the [PyDigger](https://pydigger.com/pypi/gpt-index) site that there is no author name",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3876/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3876/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3873",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3873/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3873/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3873/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3873",
        "id": 1724811444,
        "node_id": "I_kwDOIWuq585mzoi0",
        "number": 3873,
        "title": "filename_as_doc_id ",
        "user": {
            "login": "elmegatan26",
            "id": 124077199,
            "node_id": "U_kgDOB2VEjw",
            "avatar_url": "https://avatars.githubusercontent.com/u/124077199?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elmegatan26",
            "html_url": "https://github.com/elmegatan26",
            "followers_url": "https://api.github.com/users/elmegatan26/followers",
            "following_url": "https://api.github.com/users/elmegatan26/following{/other_user}",
            "gists_url": "https://api.github.com/users/elmegatan26/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/elmegatan26/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/elmegatan26/subscriptions",
            "organizations_url": "https://api.github.com/users/elmegatan26/orgs",
            "repos_url": "https://api.github.com/users/elmegatan26/repos",
            "events_url": "https://api.github.com/users/elmegatan26/events{/privacy}",
            "received_events_url": "https://api.github.com/users/elmegatan26/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-24T22:19:07Z",
        "updated_at": "2023-05-26T23:51:47Z",
        "closed_at": "2023-05-26T23:51:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Finally upgraded to version 0.6 (tried with 0.6.8, 0.6.9 and 0.6.10) and having issues passing in file name as doc_id. For context, from the tutorial at https://gpt-index.readthedocs.io/en/latest/guides/tutorials/fullstack_app_guide.html\r\n\r\n` if request.form.get(\"filename_as_doc_id\", None) is not None:\r\n            manager.insert_into_index(filepath, doc_id=filename)`\r\n\r\nI am passing in the filename param as instructed but when reviewing all responses I'm am seeing the auto-generated doc_id. Is anyone having similar issue? ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3873/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3872",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3872/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3872/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3872/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3872",
        "id": 1724759935,
        "node_id": "PR_kwDOIWuq585RSgXT",
        "number": 3872,
        "title": "[version] bump version to 0.6.10.post1",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T21:26:06Z",
        "updated_at": "2023-05-24T21:32:27Z",
        "closed_at": "2023-05-24T21:32:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3872",
            "html_url": "https://github.com/run-llama/llama_index/pull/3872",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3872.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3872.patch",
            "merged_at": "2023-05-24T21:32:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3872/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3872/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3870",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3870/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3870/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3870/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3870",
        "id": 1724673160,
        "node_id": "I_kwDOIWuq585mzGyI",
        "number": 3870,
        "title": "how can get confidence score/level of response ",
        "user": {
            "login": "noke8868",
            "id": 15937904,
            "node_id": "MDQ6VXNlcjE1OTM3OTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/15937904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noke8868",
            "html_url": "https://github.com/noke8868",
            "followers_url": "https://api.github.com/users/noke8868/followers",
            "following_url": "https://api.github.com/users/noke8868/following{/other_user}",
            "gists_url": "https://api.github.com/users/noke8868/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noke8868/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noke8868/subscriptions",
            "organizations_url": "https://api.github.com/users/noke8868/orgs",
            "repos_url": "https://api.github.com/users/noke8868/repos",
            "events_url": "https://api.github.com/users/noke8868/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noke8868/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-24T20:13:32Z",
        "updated_at": "2023-05-25T17:43:48Z",
        "closed_at": "2023-05-25T17:43:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "for example \r\nquery_engine = index.as_query_engine()\r\nresponse = query_engine.query(\"What's the anwser to the question?\")\r\nis there any way to get confidence score/level of the response ?\r\nthank you",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3870/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3870/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3869",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3869/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3869/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3869/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3869",
        "id": 1724562484,
        "node_id": "I_kwDOIWuq585myrw0",
        "number": 3869,
        "title": "TypeError: Instance and class checks can only be used with @runtime_checkable protocols",
        "user": {
            "login": "94bb494nd41f",
            "id": 45361377,
            "node_id": "MDQ6VXNlcjQ1MzYxMzc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/45361377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/94bb494nd41f",
            "html_url": "https://github.com/94bb494nd41f",
            "followers_url": "https://api.github.com/users/94bb494nd41f/followers",
            "following_url": "https://api.github.com/users/94bb494nd41f/following{/other_user}",
            "gists_url": "https://api.github.com/users/94bb494nd41f/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/94bb494nd41f/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/94bb494nd41f/subscriptions",
            "organizations_url": "https://api.github.com/users/94bb494nd41f/orgs",
            "repos_url": "https://api.github.com/users/94bb494nd41f/repos",
            "events_url": "https://api.github.com/users/94bb494nd41f/events{/privacy}",
            "received_events_url": "https://api.github.com/users/94bb494nd41f/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-24T18:50:34Z",
        "updated_at": "2023-05-25T16:24:48Z",
        "closed_at": "2023-05-25T16:24:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "importing results in following crash:\r\n```\r\n(quanization) C:\\Users\\derdi\\local_llama>python\r\nPython 3.10.11 | packaged by Anaconda, Inc. | (main, Apr 20 2023, 18:56:50) [MSC v.1916 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import llama_index\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\derdi\\.conda\\envs\\quanization\\lib\\site-packages\\llama_index\\__init__.py\", line 18, in <module>\r\n    from llama_index.indices.common.struct_store.base import SQLDocumentContextBuilder\r\n  File \"C:\\Users\\derdi\\.conda\\envs\\quanization\\lib\\site-packages\\llama_index\\indices\\__init__.py\", line 4, in <module>\r\n    from llama_index.indices.keyword_table.base import GPTKeywordTableIndex\r\n  File \"C:\\Users\\derdi\\.conda\\envs\\quanization\\lib\\site-packages\\llama_index\\indices\\keyword_table\\__init__.py\", line 4, in <module>\r\n    from llama_index.indices.keyword_table.base import GPTKeywordTableIndex\r\n  File \"C:\\Users\\derdi\\.conda\\envs\\quanization\\lib\\site-packages\\llama_index\\indices\\keyword_table\\base.py\", line 18, in <module>\r\n    from llama_index.indices.base import BaseGPTIndex\r\n  File \"C:\\Users\\derdi\\.conda\\envs\\quanization\\lib\\site-packages\\llama_index\\indices\\base.py\", line 8, in <module>\r\n    from llama_index.indices.base_retriever import BaseRetriever\r\n  File \"C:\\Users\\derdi\\.conda\\envs\\quanization\\lib\\site-packages\\llama_index\\indices\\base_retriever.py\", line 5, in <module>\r\n    from llama_index.indices.query.schema import QueryBundle, QueryType\r\n  File \"C:\\Users\\derdi\\.conda\\envs\\quanization\\lib\\site-packages\\llama_index\\indices\\query\\__init__.py\", line 3, in <module>\r\n    from llama_index.indices.query.response_synthesis import ResponseSynthesizer\r\n  File \"C:\\Users\\derdi\\.conda\\envs\\quanization\\lib\\site-packages\\llama_index\\indices\\query\\response_synthesis.py\", line 5, in <module>\r\n    from llama_index.indices.postprocessor.types import BaseNodePostprocessor\r\n  File \"C:\\Users\\derdi\\.conda\\envs\\quanization\\lib\\site-packages\\llama_index\\indices\\postprocessor\\__init__.py\", line 4, in <module>\r\n    from llama_index.indices.postprocessor.node import (\r\n  File \"C:\\Users\\derdi\\.conda\\envs\\quanization\\lib\\site-packages\\llama_index\\indices\\postprocessor\\node.py\", line 236, in <module>\r\n    class AutoPrevNextNodePostprocessor(BasePydanticNodePostprocessor):\r\n  File \"pydantic\\main.py\", line 197, in pydantic.main.ModelMetaclass.__new__\r\n  File \"pydantic\\fields.py\", line 506, in pydantic.fields.ModelField.infer\r\n  File \"pydantic\\fields.py\", line 436, in pydantic.fields.ModelField.__init__\r\n  File \"pydantic\\fields.py\", line 557, in pydantic.fields.ModelField.prepare\r\n  File \"pydantic\\fields.py\", line 831, in pydantic.fields.ModelField.populate_validators\r\n  File \"pydantic\\validators.py\", line 725, in find_validators\r\n  File \"pydantic\\dataclasses.py\", line 478, in make_dataclass_validator\r\n    else:\r\n  File \"pydantic\\dataclasses.py\", line 231, in pydantic.dataclasses.dataclass\r\n\r\n  File \"pydantic\\dataclasses.py\", line 224, in pydantic.dataclasses.dataclass.wrap\r\n\r\n  File \"pydantic\\dataclasses.py\", line 347, in pydantic.dataclasses._add_pydantic_validation_attributes\r\n    self.repr = repr\r\n  File \"pydantic\\dataclasses.py\", line 400, in pydantic.dataclasses.create_pydantic_model_from_dataclass\r\n    def _tuple_str(obj_name, fields):\r\n  File \"pydantic\\main.py\", line 1026, in pydantic.main.create_model\r\n  File \"pydantic\\main.py\", line 197, in pydantic.main.ModelMetaclass.__new__\r\n  File \"pydantic\\fields.py\", line 506, in pydantic.fields.ModelField.infer\r\n  File \"pydantic\\fields.py\", line 436, in pydantic.fields.ModelField.__init__\r\n  File \"pydantic\\fields.py\", line 552, in pydantic.fields.ModelField.prepare\r\n  File \"pydantic\\fields.py\", line 639, in pydantic.fields.ModelField._type_analysis\r\n  File \"C:\\Users\\derdi\\.conda\\envs\\quanization\\lib\\typing.py\", line 1498, in __instancecheck__\r\n    raise TypeError(\"Instance and class checks can only be used with\"\r\nTypeError: Instance and class checks can only be used with @runtime_checkable protocols\r\n>>> \r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3869/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3869/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3858",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3858/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3858/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3858/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3858",
        "id": 1724189589,
        "node_id": "I_kwDOIWuq585mxQuV",
        "number": 3858,
        "title": "TypeError: Instance and class checks can only be used with @runtime_checkable protocols when importing LLMRerank",
        "user": {
            "login": "ninohdasilva",
            "id": 62058079,
            "node_id": "MDQ6VXNlcjYyMDU4MDc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/62058079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ninohdasilva",
            "html_url": "https://github.com/ninohdasilva",
            "followers_url": "https://api.github.com/users/ninohdasilva/followers",
            "following_url": "https://api.github.com/users/ninohdasilva/following{/other_user}",
            "gists_url": "https://api.github.com/users/ninohdasilva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ninohdasilva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ninohdasilva/subscriptions",
            "organizations_url": "https://api.github.com/users/ninohdasilva/orgs",
            "repos_url": "https://api.github.com/users/ninohdasilva/repos",
            "events_url": "https://api.github.com/users/ninohdasilva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ninohdasilva/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-24T14:53:06Z",
        "updated_at": "2023-05-25T07:50:21Z",
        "closed_at": "2023-05-25T07:50:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Same error as https://github.com/jerryjliu/llama_index/issues/3834#issue-1723217054, but this time when importing LLMRerank.\r\n\r\nPython version: 3.10.9\r\n\r\nInstalled llama_index from git after commit https://github.com/jerryjliu/llama_index/pull/3837.\r\nTried to apply the same fix of adding `@runtime_checkable` before the class definition, but does not work here since no class is a pydantic Protocol\r\n\r\nCommand:\r\n```from llama_index.indices.postprocessor import LLMRerank```\r\n\r\nOutput:\r\n```TypeError                                 Traceback (most recent call last)\r\nCell In[25], line 1\r\n----> 1 from llama_index.indices.postprocessor import LLMRerank\r\n\r\nFile [~...//lib/python3.10/site-packages/llama_index/indices/postprocessor/__init__.py:4)\r\n      1 \"\"\"Node PostProcessor module.\"\"\"\r\n----> 4 from llama_index.indices.postprocessor.node import (\r\n      5     SimilarityPostprocessor,\r\n      6     KeywordNodePostprocessor,\r\n      7     PrevNextNodePostprocessor,\r\n      8     AutoPrevNextNodePostprocessor,\r\n      9 )\r\n     10 from llama_index.indices.postprocessor.node_recency import (\r\n     11     FixedRecencyPostprocessor,\r\n     12     EmbeddingRecencyPostprocessor,\r\n     13     TimeWeightedPostprocessor,\r\n     14 )\r\n     15 from llama_index.indices.postprocessor.pii import (\r\n     16     PIINodePostprocessor,\r\n     17     NERPIINodePostprocessor,\r\n     18 )\r\n     ...\r\n     \r\n     in _ProtocolMeta.__instancecheck__(cls, instance)\r\n   1490 def __instancecheck__(cls, instance):\r\n   1491     # We need this method for situations where attributes are\r\n   1492     # assigned in __init__.\r\n   1493     if (\r\n   1494         getattr(cls, '_is_protocol', False) and\r\n   1495         not getattr(cls, '_is_runtime_protocol', False) and\r\n   1496         not _allow_reckless_class_checks(depth=2)\r\n   1497     ):\r\n-> 1498         raise TypeError(\"Instance and class checks can only be used with\"\r\n   1499                         \" @runtime_checkable protocols\")\r\n   1501     if ((not getattr(cls, '_is_protocol', False) or\r\n   1502             _is_callable_members_only(cls)) and\r\n   1503             issubclass(instance.__class__, cls)):\r\n   1504         return True\r\n\r\nTypeError: Instance and class checks can only be used with @runtime_checkable protocols",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3858/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3858/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3854",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3854/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3854/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3854/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3854",
        "id": 1723830316,
        "node_id": "I_kwDOIWuq585mv5As",
        "number": 3854,
        "title": "`document_exists` always returns False",
        "user": {
            "login": "cheerlessDreamer",
            "id": 67026384,
            "node_id": "MDQ6VXNlcjY3MDI2Mzg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/67026384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cheerlessDreamer",
            "html_url": "https://github.com/cheerlessDreamer",
            "followers_url": "https://api.github.com/users/cheerlessDreamer/followers",
            "following_url": "https://api.github.com/users/cheerlessDreamer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cheerlessDreamer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cheerlessDreamer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cheerlessDreamer/subscriptions",
            "organizations_url": "https://api.github.com/users/cheerlessDreamer/orgs",
            "repos_url": "https://api.github.com/users/cheerlessDreamer/repos",
            "events_url": "https://api.github.com/users/cheerlessDreamer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cheerlessDreamer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-24T12:05:01Z",
        "updated_at": "2023-06-07T13:50:37Z",
        "closed_at": "2023-06-07T09:57:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I have a very simple function below that builds an index with a single document, and then tests whether the `doc_id` provided exists in the index:\r\n\r\n```\r\ndef build_and_check_doc_id():\r\n    index = GPTVectorStoreIndex([])\r\n    document = Document(text=\"Here is some text\", doc_id=\"document_id\")\r\n    index.insert(document)\r\n\r\n    document_id_1 = \"document_id\"\r\n    document_id_2 = \"test\"\r\n    \r\n    print(index.docstore.document_exists(document_id_1)) # Should be True\r\n    print(index.docstore.document_exists(document_id_2)) # Should be False\r\n```\r\n\r\nBoth the print statements return False. I think that this is wrong. Could someone verify that I am correct in assuming that the first should be True, and the second False?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3854/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3854/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3847",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3847/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3847/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3847/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3847",
        "id": 1723516894,
        "node_id": "I_kwDOIWuq585musfe",
        "number": 3847,
        "title": "storage_context.persist() does not creates vector_index.json file",
        "user": {
            "login": "abhinavmishra590",
            "id": 5388037,
            "node_id": "MDQ6VXNlcjUzODgwMzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5388037?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abhinavmishra590",
            "html_url": "https://github.com/abhinavmishra590",
            "followers_url": "https://api.github.com/users/abhinavmishra590/followers",
            "following_url": "https://api.github.com/users/abhinavmishra590/following{/other_user}",
            "gists_url": "https://api.github.com/users/abhinavmishra590/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abhinavmishra590/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abhinavmishra590/subscriptions",
            "organizations_url": "https://api.github.com/users/abhinavmishra590/orgs",
            "repos_url": "https://api.github.com/users/abhinavmishra590/repos",
            "events_url": "https://api.github.com/users/abhinavmishra590/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abhinavmishra590/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-24T09:06:39Z",
        "updated_at": "2023-06-11T06:57:33Z",
        "closed_at": "2023-06-11T06:57:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am trying to persist index to storage after using ChromaDB collection. When I try to reload the index, it throws error `ValueError: No existing llama_index.vector_stores.simple found at ./storage_demo/vector_store.json, skipping load.`\r\n\r\nI notice that under persist dir it only has `doctstore.json` and `index_store.json`\r\n\r\nHere is my store code:\r\n\r\n```\r\nUnstructuredReader = download_loader(\"UnstructuredReader\")\r\n    loader = UnstructuredReader()\r\n    documents = loader.load_data(file=Path('./input/' + filename))\r\n\r\n    # create chroma vector store\r\n    vector_store = ChromaVectorStore(chroma_collection=chroma_collection)\r\n    storage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n    index = GPTVectorStoreIndex.from_documents(documents, storage_context=storage_context)\r\n\r\n    \r\n    # save index to remote blob storage\r\n    vector_index.set_index_id(\"vector_index\")\r\n    \r\n    index.storage_context.persist(persist_dir = './storage_demo')\r\n```\r\n\r\nHere is my code to reload:\r\n\r\n```\r\nsc = StorageContext.from_defaults(persist_dir='./storage_demo')\r\n    index2 = load_index_from_storage(sc,'vector_index')\r\n    query_engine = index2.as_query_engine()\r\n    response = query_engine.query(\"What did the author do growing up?\")\r\n    return response\r\n```\r\n\r\nMy Llamaindex version is `0.6.9` and my langchain version is `0.0.176`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3847/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3847/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3845",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3845/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3845/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3845/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/3845",
        "id": 1723454095,
        "node_id": "I_kwDOIWuq585mudKP",
        "number": 3845,
        "title": "Use the GPTPandasIndex as lower level indices of the ComposableGraph",
        "user": {
            "login": "lixl-st",
            "id": 101248619,
            "node_id": "U_kgDOBgjuaw",
            "avatar_url": "https://avatars.githubusercontent.com/u/101248619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lixl-st",
            "html_url": "https://github.com/lixl-st",
            "followers_url": "https://api.github.com/users/lixl-st/followers",
            "following_url": "https://api.github.com/users/lixl-st/following{/other_user}",
            "gists_url": "https://api.github.com/users/lixl-st/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lixl-st/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lixl-st/subscriptions",
            "organizations_url": "https://api.github.com/users/lixl-st/orgs",
            "repos_url": "https://api.github.com/users/lixl-st/repos",
            "events_url": "https://api.github.com/users/lixl-st/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lixl-st/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-24T08:29:51Z",
        "updated_at": "2023-09-10T16:57:58Z",
        "closed_at": "2023-09-10T16:57:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When I try to create a GPTPandasIndex for csv tables and GPTTreeIndex for text in ComposableGraph, it raises an error \"This query engine does not support retrieve, use query directly\" (Bug for GPTPandasIndex). If I set the recursive parameter to False in graph.as_query_engine(), the code can run but the performance for tree indices will decline sharply, which is absolutely not a good choice. I hope there is a fix for the GPTPandasIndex implementing the retrieve function. While this function itself is meaningless, it can make the code run smoothly.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3845/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3845/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3837",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3837/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3837/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3837/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3837",
        "id": 1723322604,
        "node_id": "PR_kwDOIWuq585RNmMS",
        "number": 3837,
        "title": "fix import error for python 3.10 ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T07:08:06Z",
        "updated_at": "2023-05-24T07:11:59Z",
        "closed_at": "2023-05-24T07:11:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3837",
            "html_url": "https://github.com/run-llama/llama_index/pull/3837",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3837.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3837.patch",
            "merged_at": "2023-05-24T07:11:58Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3837/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3837/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/3835",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/3835/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/3835/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/3835/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/3835",
        "id": 1723220831,
        "node_id": "PR_kwDOIWuq585RNP_X",
        "number": 3835,
        "title": "Callback Tracing",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-24T05:49:45Z",
        "updated_at": "2023-08-28T17:10:22Z",
        "closed_at": "2023-05-25T04:02:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/3835",
            "html_url": "https://github.com/run-llama/llama_index/pull/3835",
            "diff_url": "https://github.com/run-llama/llama_index/pull/3835.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/3835.patch",
            "merged_at": "2023-05-25T04:02:42Z"
        },
        "body": "A first stab at callback tracing. It seems to work super well, even for graphs. \r\n\r\nIs it a perfect implementation? Probably not yet, but ready to make it better \ud83d\udcaa\ud83c\udffb\r\n\r\nI've updated the example notebook as well, if you need a quick example!\r\n\r\nAlso, below is the trace from a graph query (it's kinda neat)\r\n![image](https://github.com/jerryjliu/llama_index/assets/22285038/c9a7bca9-21f8-476d-8956-be7990be610b)\r\n\r\nMy biggest critique to this approach is I'm pretty sure parallelism might break this (I.e if we allowed graphs to query subindexes in parallel). Since llama index doesn't support parallelism yet, this is a non-issue. But the only way to support that is I think something more like langchains design, but happy to hear other ideas! \ud83d\udca1 ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/3835/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/3835/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]