[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9878",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9878/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9878/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9878/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9878",
        "id": 1870492192,
        "node_id": "PR_kwDOIPDwls5Y-TVX",
        "number": 9878,
        "title": "Wfh/async tool",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T20:57:23Z",
        "updated_at": "2023-08-29T22:37:42Z",
        "closed_at": "2023-08-29T22:37:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9878",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9878",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9878.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9878.patch",
            "merged_at": "2023-08-29T22:37:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9878/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9878/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9877",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9877/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9877/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9877/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9877",
        "id": 1870481356,
        "node_id": "PR_kwDOIPDwls5Y-Q8-",
        "number": 9877,
        "title": "rfc: mem session",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-28T20:48:36Z",
        "updated_at": "2023-09-15T19:18:28Z",
        "closed_at": "2023-09-15T19:18:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9877",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9877",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9877.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9877.patch",
            "merged_at": null
        },
        "body": "not pretty but curious if folks think this approach has legs\r\n<img width=\"951\" alt=\"Screenshot 2023-08-28 at 1 47 32 PM\" src=\"https://github.com/langchain-ai/langchain/assets/22008038/0c634637-9c3a-4d58-8e37-420d16ffc888\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9877/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9877/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9876",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9876/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9876/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9876/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9876",
        "id": 1870444609,
        "node_id": "I_kwDOIPDwls5vfLhB",
        "number": 9876,
        "title": " How to send ConversationalRetrievalChain object as a response of api call in javascript",
        "user": {
            "login": "jemis140",
            "id": 28834808,
            "node_id": "MDQ6VXNlcjI4ODM0ODA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/28834808?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jemis140",
            "html_url": "https://github.com/jemis140",
            "followers_url": "https://api.github.com/users/jemis140/followers",
            "following_url": "https://api.github.com/users/jemis140/following{/other_user}",
            "gists_url": "https://api.github.com/users/jemis140/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jemis140/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jemis140/subscriptions",
            "organizations_url": "https://api.github.com/users/jemis140/orgs",
            "repos_url": "https://api.github.com/users/jemis140/repos",
            "events_url": "https://api.github.com/users/jemis140/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jemis140/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-28T20:20:12Z",
        "updated_at": "2023-12-04T16:04:38Z",
        "closed_at": "2023-12-04T16:04:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am using FastAPI which is written in Python to develop nlp tool where user can generate conversation chain by uploading pdf docs. Data extraction and Preprocessing logic written in backend API. I want to send a conversation chain object which is not JSON serializable. Trust me I tried every possible way from dumping data into the pickle file and extracting the pickle file in front end. nothing is working. because there is no npm package available to parse pickle data. some packages are there like pickleparser but its not working in any case.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9876/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9876/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9875",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9875/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9875/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9875/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9875",
        "id": 1870379297,
        "node_id": "PR_kwDOIPDwls5Y96Gg",
        "number": 9875,
        "title": "Updated notebook for comprehend moderation",
        "user": {
            "login": "3coins",
            "id": 289369,
            "node_id": "MDQ6VXNlcjI4OTM2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/289369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3coins",
            "html_url": "https://github.com/3coins",
            "followers_url": "https://api.github.com/users/3coins/followers",
            "following_url": "https://api.github.com/users/3coins/following{/other_user}",
            "gists_url": "https://api.github.com/users/3coins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3coins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3coins/subscriptions",
            "organizations_url": "https://api.github.com/users/3coins/orgs",
            "repos_url": "https://api.github.com/users/3coins/repos",
            "events_url": "https://api.github.com/users/3coins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3coins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T19:46:21Z",
        "updated_at": "2023-08-28T23:01:44Z",
        "closed_at": "2023-08-28T23:01:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9875",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9875",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9875.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9875.patch",
            "merged_at": "2023-08-28T23:01:44Z"
        },
        "body": "### Description\r\nUpdated the notebook for comprehend moderation.\r\n\r\ncc @baskaryan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9875/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9875/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9874",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9874/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9874/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9874/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9874",
        "id": 1870359406,
        "node_id": "PR_kwDOIPDwls5Y93IC",
        "number": 9874,
        "title": "Add instructions for GGUF",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T19:40:04Z",
        "updated_at": "2023-08-28T19:56:47Z",
        "closed_at": "2023-08-28T19:56:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9874",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9874",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9874.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9874.patch",
            "merged_at": "2023-08-28T19:56:46Z"
        },
        "body": "llama.cpp migrated to GGUF model format, and new releases (e.g., [here](https://huggingface.co/TheBloke)) now use GGUF.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9874/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9874/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9873",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9873/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9873/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9873/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9873",
        "id": 1870329658,
        "node_id": "PR_kwDOIPDwls5Y9wzy",
        "number": 9873,
        "title": "adding batching",
        "user": {
            "login": "mcantillon21",
            "id": 60069300,
            "node_id": "MDQ6VXNlcjYwMDY5MzAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/60069300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mcantillon21",
            "html_url": "https://github.com/mcantillon21",
            "followers_url": "https://api.github.com/users/mcantillon21/followers",
            "following_url": "https://api.github.com/users/mcantillon21/following{/other_user}",
            "gists_url": "https://api.github.com/users/mcantillon21/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mcantillon21/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mcantillon21/subscriptions",
            "organizations_url": "https://api.github.com/users/mcantillon21/orgs",
            "repos_url": "https://api.github.com/users/mcantillon21/repos",
            "events_url": "https://api.github.com/users/mcantillon21/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mcantillon21/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T19:20:01Z",
        "updated_at": "2023-09-04T17:53:04Z",
        "closed_at": "2023-09-04T17:53:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9873",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9873",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9873.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9873.patch",
            "merged_at": null
        },
        "body": "Had some trouble with Weaviate upserting and found myself doing this externally. It would be amazing if batch_size could be a param for all vectorstores. Maybe 100 is too low, but I've been using it and it works well. Would love thoughts!\r\n\r\n@baskaryan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9873/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9872",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9872/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9872/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9872/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9872",
        "id": 1870323443,
        "node_id": "I_kwDOIPDwls5vet7z",
        "number": 9872,
        "title": "MultiQueryRetriever (get_relevant_documents) raises TypeError: unhashable type: 'dict' with dic metadata",
        "user": {
            "login": "Pikauba",
            "id": 35943113,
            "node_id": "MDQ6VXNlcjM1OTQzMTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/35943113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Pikauba",
            "html_url": "https://github.com/Pikauba",
            "followers_url": "https://api.github.com/users/Pikauba/followers",
            "following_url": "https://api.github.com/users/Pikauba/following{/other_user}",
            "gists_url": "https://api.github.com/users/Pikauba/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Pikauba/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Pikauba/subscriptions",
            "organizations_url": "https://api.github.com/users/Pikauba/orgs",
            "repos_url": "https://api.github.com/users/Pikauba/repos",
            "events_url": "https://api.github.com/users/Pikauba/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Pikauba/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T19:15:25Z",
        "updated_at": "2023-12-04T16:04:43Z",
        "closed_at": "2023-12-04T16:04:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nMultiQueryRetriever will fail to call `_get_relevant_documents` if the Document objects have metadata which are dictionaries.\r\n\r\n```python\r\n    def _get_relevant_documents(\r\n        self,\r\n        query: str,\r\n        *,\r\n        run_manager: CallbackManagerForRetrieverRun,\r\n    ) -> List[Document]:\r\n        \"\"\"Get relevated documents given a user query.\r\n\r\n        Args:\r\n            question: user query\r\n\r\n        Returns:\r\n            Unique union of relevant documents from all generated queries\r\n        \"\"\"\r\n        queries = self.generate_queries(query, run_manager)\r\n        documents = self.retrieve_documents(queries, run_manager)\r\n        unique_documents = self.unique_union(documents)\r\n        return unique_documents\r\n```\r\n\r\n\r\nThe following error gets raised: TypeError: unhashable type: 'dict'\r\n\r\nAs we try to hash a dict as one of the keys in `unique_union`\r\n\r\nThis is mostly due to the mechanism in: \r\n\r\n```python\r\n    def unique_union(self, documents: List[Document]) -> List[Document]:\r\n        \"\"\"Get unique Documents.\r\n\r\n        Args:\r\n            documents: List of retrieved Documents\r\n\r\n        Returns:\r\n            List of unique retrieved Documents\r\n        \"\"\"\r\n        # Create a dictionary with page_content as keys to remove duplicates\r\n        # TODO: Add Document ID property (e.g., UUID)\r\n\r\n        unique_documents_dict = {\r\n            (doc.page_content, tuple(sorted(doc.metadata.items()))): doc\r\n            for doc in documents\r\n        }\r\n        unique_documents = list(unique_documents_dict.values())\r\n        return unique_documents\r\n```\r\n\r\nunique keys should be generated based on something else than the metadata in order to avoid this behavior.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRun the examples in the: [MultiQueryRetriever Documentation](https://python.langchain.com/docs/modules/data_connection/retrievers/MultiQueryRetriever)\r\n\r\nand use a vectordb which contains Documents that has dictionaries in its metadata.\r\n\n\n### Expected behavior\n\nTypeError: unhashable type: 'dict' will be raised.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9872/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9872/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9871",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9871/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9871/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9871/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9871",
        "id": 1870209939,
        "node_id": "PR_kwDOIPDwls5Y9YIG",
        "number": 9871,
        "title": "docs: `ainetwork` update",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T18:05:06Z",
        "updated_at": "2023-08-29T01:18:59Z",
        "closed_at": "2023-08-29T01:16:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9871",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9871",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9871.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9871.patch",
            "merged_at": "2023-08-29T01:16:23Z"
        },
        "body": "* Added links to the AI Network\r\n* Made title consistent to other tool kits\r\n* Added `integrations/providers/` integration card page\r\n* **No changes** in the example code!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9871/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9871/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9870",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9870/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9870/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9870/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9870",
        "id": 1870162648,
        "node_id": "PR_kwDOIPDwls5Y9N0P",
        "number": 9870,
        "title": "Add LLMonitor Callback Handler Integration - open-source observability & analytics",
        "user": {
            "login": "hughcrt",
            "id": 24587702,
            "node_id": "MDQ6VXNlcjI0NTg3NzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/24587702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hughcrt",
            "html_url": "https://github.com/hughcrt",
            "followers_url": "https://api.github.com/users/hughcrt/followers",
            "following_url": "https://api.github.com/users/hughcrt/following{/other_user}",
            "gists_url": "https://api.github.com/users/hughcrt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hughcrt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hughcrt/subscriptions",
            "organizations_url": "https://api.github.com/users/hughcrt/orgs",
            "repos_url": "https://api.github.com/users/hughcrt/repos",
            "events_url": "https://api.github.com/users/hughcrt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hughcrt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T17:29:23Z",
        "updated_at": "2023-08-29T22:49:02Z",
        "closed_at": "2023-08-29T22:49:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9870",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9870",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9870.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9870.patch",
            "merged_at": "2023-08-29T22:49:01Z"
        },
        "body": "Adds support for [llmonitor](https://llmonitor.com) callbacks.\r\n\r\nIt enables:\r\n- Requests tracking / logging / analytics\r\n- Error debugging\r\n- Cost analytics\r\n- User tracking\r\n\r\nLet me know if anythings neds to be changed for merge.\r\n\r\nThank you!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9870/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9870/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9869",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9869/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9869/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9869/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9869",
        "id": 1870136223,
        "node_id": "I_kwDOIPDwls5veAOf",
        "number": 9869,
        "title": "Langchain AutoLLM class",
        "user": {
            "login": "Anindyadeep",
            "id": 58508471,
            "node_id": "MDQ6VXNlcjU4NTA4NDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/58508471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Anindyadeep",
            "html_url": "https://github.com/Anindyadeep",
            "followers_url": "https://api.github.com/users/Anindyadeep/followers",
            "following_url": "https://api.github.com/users/Anindyadeep/following{/other_user}",
            "gists_url": "https://api.github.com/users/Anindyadeep/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Anindyadeep/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Anindyadeep/subscriptions",
            "organizations_url": "https://api.github.com/users/Anindyadeep/orgs",
            "repos_url": "https://api.github.com/users/Anindyadeep/repos",
            "events_url": "https://api.github.com/users/Anindyadeep/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Anindyadeep/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-28T17:10:05Z",
        "updated_at": "2023-12-06T17:43:45Z",
        "closed_at": "2023-12-06T17:43:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nWith more incoming of newer LLMs and LLM providers, either through APIs (like Open AI, Anthropic), or Local providers (like gpt4all, ctransformers, llama cpp etc). It becomes hard to keep track of and there is no uniform way os instantiating the LLM class.\r\n\r\nFor example:\r\n\r\n```python\r\nfrom langchain.llms.autollm import AutoLLM\r\n\r\nmodel = AutoLLM.from_path(provider_name=\"gpt4all\", model=\"orca-mini-3b.ggmlv3.q4_0.bin\")\r\nprint(model)\r\n```\r\n\r\nIn this example, I can simply just plug and play different providers and their different arguments that providers, by just instantiating one class. I took this inspiration from Hugging Face. \r\n\r\n### Motivation\r\n\r\nThe problem arises when we are doing quick prototyping. We have to import different llms for different usage. So why not have a common interface that can solve that? Also, I tried to keep the complexity by grouping these LLMs into two types of classes. \r\n\r\n```python\r\nlangchain.llms.AutoLLM.from_path\r\n```\r\nFor all the local LLM providers. And \r\n```\r\nlangchain.llms.AutoLLM.from_api\r\n```\r\nFor all the online cloud LLM providers. In that way, it can be easily distinguishable and also helpful for the user not to go here and there to search for how different LLMs fit.  \r\n\r\n### Your contribution\r\n\r\nI tried to come up with a very small prototype of the same. We can have a `utils.py` where we can keep these helper functions. Here is what the utils.py looks like\r\n\r\n```python\r\nimport importlib\r\n\r\nclass LLMRegistry:\r\n    llm_providers = {}\r\n\r\n    @classmethod\r\n    def register(cls, name, provider_class_name):\r\n        cls.llm_providers[name] = provider_class_name\r\n\r\n    @classmethod\r\n    def get_provider(self, name):\r\n        return self.llm_providers.get(name) \r\n\r\nclass LLMLazyLoad:\r\n    @staticmethod\r\n    def load_provider(provider_name, *args, **kwargs):\r\n        provider_class_name = LLMRegistry.get_provider(name=provider_name)\r\n        if provider_class_name:\r\n            module_name = f\"langchain.llms.{provider_name}\"\r\n            module = importlib.import_module(module_name)\r\n            provider_class = getattr(module, provider_class_name)\r\n            return provider_class(*args, **kwargs)\r\n        else:\r\n            raise ValueError(f\"Provider '{provider_name}' not found\")\r\n\r\n```\r\n\r\nNow here is the `autollm.py` Where I created a very simple AutoLLM class. I made it simple just for a simple prototype purpose. \r\n\r\n```python\r\nfrom langchain.llms.base import LLM\r\nfrom utils import LLMLazyLoad, LLMRegistry\r\n\r\nLLMRegistry.register(\"anthropic\", \"Anthropic\")\r\nLLMRegistry.register(\"ctransformers\", \"CTransformers\")\r\nLLMRegistry.register(\"gpt4all\", \"GPT4All\")\r\n\r\nclass AutoLLM:\r\n    @classmethod\r\n    def from_api(cls, api_provider_name, *args, **kwargs) -> LLM:\r\n        return LLMLazyLoad.load_provider(api_provider_name, *args, **kwargs)\r\n\r\n    @classmethod\r\n    def from_path(cls, provider_name, *args, **kwargs) -> LLM:\r\n        # return me the specific LLM instance \r\n        return LLMLazyLoad.load_provider(provider_name=provider_name, *args, **kwargs)\r\n```\r\n\r\nHere is the `main.py` file when we use the `AutoLLM` class. \r\n\r\n```python\r\nfrom autollm import AutoLLM\r\n\r\nmodel = AutoLLM.from_path(provider_name=\"gpt4all\", model=\"orca-mini-3b.ggmlv3.q4_0.bin\")\r\nprint(model)\r\n\r\n```\r\n\r\nAlso we can have a generic readme where we can provide all the basic info to load the local and cloud LLM providers. Here is what came in my mind. \r\n\r\n`Readme.md`\r\n\r\n### Langchain AutoLLM class \r\n\r\n#### `from_path`\r\n\r\nThe `from_path` is a class method that helps us to instantiate different local LLMs. Here are the list of local LLM providers and the required arguments for each of them\r\n\r\n#### GPT4All\r\n\r\nRequired arguments:\r\n\r\n    - `model`: This path where the model exists\r\n\r\nOptional arguments:\r\n\r\n    - verbose: Whether to stream or not\r\n    - callbacks: Streaming callbacks \r\n\r\nHere it is how we use with autollm class.\r\n\r\n```python\r\nfrom autollm import AutoLLM\r\n\r\nmodel = AutoLLM.from_path(provider_name=\"gpt4all\", model=\"orca-mini-3b.ggmlv3.q4_0.bin\")\r\nprint(model(\"Hello world\"))\r\n```\r\n\r\nFor more information please visit the langchain-gpt4all page. \r\n\r\n(Similarly, provide the basic info of usage for all the local/cloud providers). Well, of course, we might need a lot of improvements to provide the best user experience. However, do let me your thoughts on whether we can implement this or not.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9869/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9869/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9867",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9867/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9867/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9867/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9867",
        "id": 1870123837,
        "node_id": "PR_kwDOIPDwls5Y9FTo",
        "number": 9867,
        "title": "Add security warning to experimental `SQLDatabaseChain` class.",
        "user": {
            "login": "obi1kenobi",
            "id": 2348618,
            "node_id": "MDQ6VXNlcjIzNDg2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2348618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/obi1kenobi",
            "html_url": "https://github.com/obi1kenobi",
            "followers_url": "https://api.github.com/users/obi1kenobi/followers",
            "following_url": "https://api.github.com/users/obi1kenobi/following{/other_user}",
            "gists_url": "https://api.github.com/users/obi1kenobi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/obi1kenobi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/obi1kenobi/subscriptions",
            "organizations_url": "https://api.github.com/users/obi1kenobi/orgs",
            "repos_url": "https://api.github.com/users/obi1kenobi/repos",
            "events_url": "https://api.github.com/users/obi1kenobi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/obi1kenobi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T17:00:44Z",
        "updated_at": "2023-08-28T17:53:29Z",
        "closed_at": "2023-08-28T17:53:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9867",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9867",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9867.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9867.patch",
            "merged_at": "2023-08-28T17:53:27Z"
        },
        "body": "The most reliable way to not have a chain run an undesirable SQL command is to not give it database permissions to run that command. That way the database itself performs the rule enforcement, so it's much easier to configure and use properly than anything we could add in ourselves.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9867/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 1,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9867/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9866",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9866/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9866/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9866/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9866",
        "id": 1870123263,
        "node_id": "PR_kwDOIPDwls5Y9FLw",
        "number": 9866,
        "title": "LRU cache for import to avoid repetetive calls to huggingface",
        "user": {
            "login": "pascalwhoop",
            "id": 2284951,
            "node_id": "MDQ6VXNlcjIyODQ5NTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2284951?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pascalwhoop",
            "html_url": "https://github.com/pascalwhoop",
            "followers_url": "https://api.github.com/users/pascalwhoop/followers",
            "following_url": "https://api.github.com/users/pascalwhoop/following{/other_user}",
            "gists_url": "https://api.github.com/users/pascalwhoop/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pascalwhoop/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pascalwhoop/subscriptions",
            "organizations_url": "https://api.github.com/users/pascalwhoop/orgs",
            "repos_url": "https://api.github.com/users/pascalwhoop/repos",
            "events_url": "https://api.github.com/users/pascalwhoop/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pascalwhoop/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T17:00:20Z",
        "updated_at": "2023-09-03T22:33:38Z",
        "closed_at": "2023-09-03T22:33:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9866",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9866",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9866.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9866.patch",
            "merged_at": "2023-09-03T22:33:37Z"
        },
        "body": "# Description\r\nPerformance improvement to avoid repeated calls to huggingface when calling `RetrievalQAWithSourcesChain.from_chain_type`. By caching the call to the underlying transformers library, we avoid re-importing the library, instantiating the object and pulling data from huggingface. This significantly speeds up the chain (in our situation from 9 seconds to 3 seconds)\r\n\r\nWe noticed that our chain was spending a significant time pulling files from huggingface _on every LLM call_\r\n![Screenshot 2023-08-28 at 18 53 50](https://github.com/langchain-ai/langchain/assets/2284951/1f850740-b9aa-4ac2-8880-e85e04870e0e)\r\n![Screenshot 2023-08-28 at 18 54 00](https://github.com/langchain-ai/langchain/assets/2284951/a7024616-01ce-4d54-bfaf-162f2736a0aa)\r\n\r\n\r\nTwitter: @PascalBrokmeier\r\n\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9866/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9866/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9865",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9865/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9865/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9865/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9865",
        "id": 1869988229,
        "node_id": "I_kwDOIPDwls5vdcGF",
        "number": 9865,
        "title": "llama.cpp does not support AsyncCallbackHandler",
        "user": {
            "login": "zimmerling",
            "id": 47156896,
            "node_id": "MDQ6VXNlcjQ3MTU2ODk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/47156896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zimmerling",
            "html_url": "https://github.com/zimmerling",
            "followers_url": "https://api.github.com/users/zimmerling/followers",
            "following_url": "https://api.github.com/users/zimmerling/following{/other_user}",
            "gists_url": "https://api.github.com/users/zimmerling/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zimmerling/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zimmerling/subscriptions",
            "organizations_url": "https://api.github.com/users/zimmerling/orgs",
            "repos_url": "https://api.github.com/users/zimmerling/repos",
            "events_url": "https://api.github.com/users/zimmerling/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zimmerling/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-08-28T15:30:08Z",
        "updated_at": "2023-10-19T19:01:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npython:3.11.3\r\nlangchain: 0.0.274\r\ndist: arch\n\n### Who can help?\n\n```\r\nfastapi==0.103.0\r\nqdrant-client==1.4.0\r\nllama-cpp-python==0.1.72\r\n```\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [X] Async\n\n### Reproduction\n\nHey @agola11,\r\nI got this runtime warning: \r\n`python3.11/site-packages/langchain/llms/llamacpp.py:312: RuntimeWarning: coroutine 'AsyncCallbackManagerForLLMRun.on_llm_new_token' was never awaited`\r\n\r\nI try to stream over a websocket the generated tokens. When I try to add a `AsyncCallbackHandler` to manage this streaming and run `acall` the warning occurs and nothing is streamed out.\r\n\r\n\r\n\r\n\r\n```python\r\nclass StreamingLLMCallbackHandler(AsyncCallbackHandler):\r\n    def __init__(self, websocket: WebSocket):\r\n        super().__init__()\r\n        self.websocket = websocket\r\n\r\n    async def on_llm_new_token(self, token: str, **kwargs: Any) -> None:\r\n        resp = ChatResponse(sender=\"bot\", message=token, type=\"stream\")\r\n        await self.websocket.send_json(resp.dict())\r\n\r\n\r\nstream_manager = AsyncCallbackManager([StreamingLLMCallbackHandler(websocket)])\r\n\r\n\r\n\r\nllm = return LlamaCpp(\r\n                model_path=\"models/llama-2-7b-chat.ggmlv3.q2_K.bin\",\r\n                verbose=False,\r\n                n_gpu_layers=40,\r\n                n_batch=2048,\r\n                n_ctx=2048,\r\n                callback_manager=stream_manager\r\n            )\r\n\r\nqa_chain = RetrievalQA.from_chain_type(llm=llm,\r\n                                       chain_type='stuff',\r\n                                       retriever=vectordb.as_retriever(search_kwargs={'k': 4}),\r\n                                       return_source_documents=True,\r\n                                       chain_type_kwargs={'prompt': prompt}\r\n                                       )\r\n\r\noutput = await qa_chain.acall(\r\n                {\r\n                    'query': user_msg,\r\n                })\r\n```\r\n\r\n\r\n\n\n### Expected behavior\n\nThe expected behavior is that each token is streamed sequentially over the websocket.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9865/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9865/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9864",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9864/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9864/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9864/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9864",
        "id": 1869981254,
        "node_id": "PR_kwDOIPDwls5Y8mDl",
        "number": 9864,
        "title": "Add root run wrapping call to RunnableEach()",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T15:25:49Z",
        "updated_at": "2023-09-01T14:57:35Z",
        "closed_at": "2023-09-01T14:57:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9864",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9864",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9864.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9864.patch",
            "merged_at": "2023-09-01T14:57:34Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9864/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9864/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9863",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9863/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9863/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9863/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9863",
        "id": 1869933347,
        "node_id": "PR_kwDOIPDwls5Y8bkv",
        "number": 9863,
        "title": "Add data anonymizer",
        "user": {
            "login": "maks-operlejn-ds",
            "id": 142261444,
            "node_id": "U_kgDOCHq8xA",
            "avatar_url": "https://avatars.githubusercontent.com/u/142261444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maks-operlejn-ds",
            "html_url": "https://github.com/maks-operlejn-ds",
            "followers_url": "https://api.github.com/users/maks-operlejn-ds/followers",
            "following_url": "https://api.github.com/users/maks-operlejn-ds/following{/other_user}",
            "gists_url": "https://api.github.com/users/maks-operlejn-ds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maks-operlejn-ds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maks-operlejn-ds/subscriptions",
            "organizations_url": "https://api.github.com/users/maks-operlejn-ds/orgs",
            "repos_url": "https://api.github.com/users/maks-operlejn-ds/repos",
            "events_url": "https://api.github.com/users/maks-operlejn-ds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maks-operlejn-ds/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-28T14:58:07Z",
        "updated_at": "2023-08-30T17:39:45Z",
        "closed_at": "2023-08-30T17:39:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9863",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9863",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9863.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9863.patch",
            "merged_at": "2023-08-30T17:39:44Z"
        },
        "body": "### Description\r\n\r\nThe feature for anonymizing data has been implemented. In order to protect private data, such as when querying external APIs (OpenAI), it is worth pseudonymizing sensitive data to maintain full privacy.\r\n\r\nAnonynization consists of two steps:\r\n\r\n1. **Identification:** Identify all data fields that contain personally identifiable information (PII).\r\n2. **Replacement**: Replace all PIIs with pseudo values or codes that do not reveal any personal information about the individual but can be used for reference. We're not using regular encryption, because the language model won't be able to understand the meaning or context of the encrypted data.\r\n\r\nWe use *Microsoft Presidio* together with *Faker* framework for anonymization purposes because of the wide range of functionalities they provide. The full implementation is available in `PresidioAnonymizer`.\r\n\r\n### Future works\r\n\r\n- **deanonymization** - add the ability to reverse anonymization. For example, the workflow could look like this: `anonymize -> LLMChain -> deanonymize`. By doing this, we will retain anonymity in requests to, for example, OpenAI, and then be able restore the original data.\r\n- **instance anonymization** - at this point, each occurrence of PII is treated as a separate entity and separately anonymized. Therefore, two occurrences of the name John Doe in the text will be changed to two different names. It is therefore worth introducing support for full instance detection, so that repeated occurrences are treated as a single object.\r\n\r\n### Twitter handle\r\n@deepsense_ai / @MaksOpp",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9863/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9863/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9862",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9862/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9862/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9862/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9862",
        "id": 1869895228,
        "node_id": "I_kwDOIPDwls5vdFY8",
        "number": 9862,
        "title": "AWS Sagemaker JS Integration",
        "user": {
            "login": "maggarwal25",
            "id": 135863452,
            "node_id": "U_kgDOCBkcnA",
            "avatar_url": "https://avatars.githubusercontent.com/u/135863452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maggarwal25",
            "html_url": "https://github.com/maggarwal25",
            "followers_url": "https://api.github.com/users/maggarwal25/followers",
            "following_url": "https://api.github.com/users/maggarwal25/following{/other_user}",
            "gists_url": "https://api.github.com/users/maggarwal25/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maggarwal25/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maggarwal25/subscriptions",
            "organizations_url": "https://api.github.com/users/maggarwal25/orgs",
            "repos_url": "https://api.github.com/users/maggarwal25/repos",
            "events_url": "https://api.github.com/users/maggarwal25/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maggarwal25/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-28T14:37:00Z",
        "updated_at": "2023-10-08T02:34:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nJS LangChain\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\n@dosu-bot\r\n\r\nI got this error now with my code: ModelError: Received client error (424) from primary with message \"{\r\n\"code\":424,\r\n\"message\":\"prediction failure\",\r\n\"error\":\"Need to pass custom_attributes='accept_eula=true' as part of header. This means you have read and accept the end-user license agreement (EULA) of the model. EULA can be found in model card description or from https://ai.meta.com/res\r\n\r\n```\r\nconst { SageMakerLLMContentHandler, SageMakerEndpoint } = require(\"langchain/llms/sagemaker_endpoint\");\r\nconst AWS = require('aws-sdk');\r\n\r\nAWS.config.credentials = new AWS.SharedIniFileCredentials({ profile: 'profile' });\r\n\r\nclass HuggingFaceTextGenerationGPT2ContentHandler {\r\n  constructor(contentHandler) {\r\n    this.contentHandler = contentHandler;\r\n    this.contentType = \"application/json\";\r\n    this.accepts = \"application/json\";\r\n  }\r\n\r\n  async transformInput(prompt, modelKwargs) {\r\n    const inputString = JSON.stringify({\r\n      text_inputs: prompt,\r\n      ...modelKwargs,\r\n    });\r\n    return Buffer.from(inputString);\r\n  }\r\n\r\n  async transformOutput(output) {\r\n    const responseJson = JSON.parse(Buffer.from(output).toString(\"utf-8\"));\r\n    return responseJson.generated_texts[0];\r\n  }\r\n}\r\n\r\nconst contentHandler = new HuggingFaceTextGenerationGPT2ContentHandler(SageMakerLLMContentHandler);\r\n\r\nconst model = new SageMakerEndpoint({\r\n  endpointName: \"endpointName\",\r\n  modelKwargs: { temperature: 1e-10 },\r\n  contentHandler: contentHandler, // Pass the inner contentHandler\r\n  clientOptions: {\r\n    region: \"region\",\r\n    credentials: AWS.config.credentials,\r\n  },\r\n});\r\n\r\nasync function main() {\r\n  const res = await model.call(\"Hello, my name is \");\r\n  console.log({ res });\r\n}\r\n\r\nmain();\r\n\r\n\r\n```\r\n\r\nCan you show where to add the eula agreement acceptanced parameter\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nI expected it to pass, but it asked me to accept a EULA Agreement. I tried customized arguments but that didn't seem to solve hte issue either",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9862/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9861",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9861/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9861/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9861/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9861",
        "id": 1869866593,
        "node_id": "PR_kwDOIPDwls5Y8NFx",
        "number": 9861,
        "title": "Use unified Python setup steps for release workflow.",
        "user": {
            "login": "obi1kenobi",
            "id": 2348618,
            "node_id": "MDQ6VXNlcjIzNDg2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2348618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/obi1kenobi",
            "html_url": "https://github.com/obi1kenobi",
            "followers_url": "https://api.github.com/users/obi1kenobi/followers",
            "following_url": "https://api.github.com/users/obi1kenobi/following{/other_user}",
            "gists_url": "https://api.github.com/users/obi1kenobi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/obi1kenobi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/obi1kenobi/subscriptions",
            "organizations_url": "https://api.github.com/users/obi1kenobi/orgs",
            "repos_url": "https://api.github.com/users/obi1kenobi/repos",
            "events_url": "https://api.github.com/users/obi1kenobi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/obi1kenobi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T14:21:31Z",
        "updated_at": "2023-08-29T22:46:26Z",
        "closed_at": "2023-08-29T22:46:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9861",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9861",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9861.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9861.patch",
            "merged_at": "2023-08-29T22:46:25Z"
        },
        "body": "Using the same Python setup GitHub Action step as the lint and test workflows.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9861/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9860",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9860/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9860/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9860/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9860",
        "id": 1869860247,
        "node_id": "PR_kwDOIPDwls5Y8Lsb",
        "number": 9860,
        "title": "bump 275",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T14:18:14Z",
        "updated_at": "2023-08-28T14:27:08Z",
        "closed_at": "2023-08-28T14:27:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9860",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9860",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9860.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9860.patch",
            "merged_at": "2023-08-28T14:27:07Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9860/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9860/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9859",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9859/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9859/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9859/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9859",
        "id": 1869848818,
        "node_id": "PR_kwDOIPDwls5Y8JLh",
        "number": 9859,
        "title": "Pinecone upsert parallelization",
        "user": {
            "login": "StankoKuveljic",
            "id": 16047967,
            "node_id": "MDQ6VXNlcjE2MDQ3OTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16047967?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/StankoKuveljic",
            "html_url": "https://github.com/StankoKuveljic",
            "followers_url": "https://api.github.com/users/StankoKuveljic/followers",
            "following_url": "https://api.github.com/users/StankoKuveljic/following{/other_user}",
            "gists_url": "https://api.github.com/users/StankoKuveljic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/StankoKuveljic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/StankoKuveljic/subscriptions",
            "organizations_url": "https://api.github.com/users/StankoKuveljic/orgs",
            "repos_url": "https://api.github.com/users/StankoKuveljic/repos",
            "events_url": "https://api.github.com/users/StankoKuveljic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/StankoKuveljic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-28T14:11:52Z",
        "updated_at": "2023-09-11T07:21:22Z",
        "closed_at": "2023-09-03T22:37:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9859",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9859",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9859.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9859.patch",
            "merged_at": "2023-09-03T22:37:42Z"
        },
        "body": "Issue: closes #9855\r\n\r\n* consolidates `from_texts` and `add_texts` functions for pinecone upsert\r\n* adds two types of batching (one for embeddings and one for index upsert)\r\n* adds thread pool size when instantiating pinecone index\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9859/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9859/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9858",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9858/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9858/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9858/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9858",
        "id": 1869791388,
        "node_id": "PR_kwDOIPDwls5Y78oS",
        "number": 9858,
        "title": "fixed GoogleCloudEnterpriseSearchRetriever returning an empty array",
        "user": {
            "login": "lkuligin",
            "id": 11026406,
            "node_id": "MDQ6VXNlcjExMDI2NDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11026406?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lkuligin",
            "html_url": "https://github.com/lkuligin",
            "followers_url": "https://api.github.com/users/lkuligin/followers",
            "following_url": "https://api.github.com/users/lkuligin/following{/other_user}",
            "gists_url": "https://api.github.com/users/lkuligin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lkuligin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lkuligin/subscriptions",
            "organizations_url": "https://api.github.com/users/lkuligin/orgs",
            "repos_url": "https://api.github.com/users/lkuligin/repos",
            "events_url": "https://api.github.com/users/lkuligin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lkuligin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T13:40:21Z",
        "updated_at": "2023-08-30T00:49:48Z",
        "closed_at": "2023-08-30T00:49:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9858",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9858",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9858.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9858.patch",
            "merged_at": "2023-08-30T00:49:48Z"
        },
        "body": "`GoogleCloudEnterpriseSearchRetriever` returned an empty array of documents earlier, fixed",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9858/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9856",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9856/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9856/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9856/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9856",
        "id": 1869784815,
        "node_id": "PR_kwDOIPDwls5Y77M6",
        "number": 9856,
        "title": "Add Azure search custom fields test",
        "user": {
            "login": "NatanMish",
            "id": 55988916,
            "node_id": "MDQ6VXNlcjU1OTg4OTE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/55988916?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NatanMish",
            "html_url": "https://github.com/NatanMish",
            "followers_url": "https://api.github.com/users/NatanMish/followers",
            "following_url": "https://api.github.com/users/NatanMish/following{/other_user}",
            "gists_url": "https://api.github.com/users/NatanMish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NatanMish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NatanMish/subscriptions",
            "organizations_url": "https://api.github.com/users/NatanMish/orgs",
            "repos_url": "https://api.github.com/users/NatanMish/repos",
            "events_url": "https://api.github.com/users/NatanMish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NatanMish/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T13:36:35Z",
        "updated_at": "2023-09-27T18:09:47Z",
        "closed_at": "2023-09-27T18:09:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9856",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9856",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9856.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9856.patch",
            "merged_at": null
        },
        "body": "This PR adds an integration test for adding custom fields to the Azure Search integration, following issue #9765",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9856/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9855",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9855/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9855/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9855/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9855",
        "id": 1869736267,
        "node_id": "I_kwDOIPDwls5vcelL",
        "number": 9855,
        "title": "Support index upsert parallelization for pinecone",
        "user": {
            "login": "StankoKuveljic",
            "id": 16047967,
            "node_id": "MDQ6VXNlcjE2MDQ3OTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16047967?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/StankoKuveljic",
            "html_url": "https://github.com/StankoKuveljic",
            "followers_url": "https://api.github.com/users/StankoKuveljic/followers",
            "following_url": "https://api.github.com/users/StankoKuveljic/following{/other_user}",
            "gists_url": "https://api.github.com/users/StankoKuveljic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/StankoKuveljic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/StankoKuveljic/subscriptions",
            "organizations_url": "https://api.github.com/users/StankoKuveljic/orgs",
            "repos_url": "https://api.github.com/users/StankoKuveljic/repos",
            "events_url": "https://api.github.com/users/StankoKuveljic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/StankoKuveljic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T13:09:29Z",
        "updated_at": "2023-09-03T22:37:43Z",
        "closed_at": "2023-09-03T22:37:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWe can take advantage from pinecone parallel upsert (see example: https://docs.pinecone.io/docs/insert-data#sending-upserts-in-parallel)\r\n\r\nThis will require modification of the current `from_texts` pipeline to\r\n1. Create a batch (chunk) for doing embeddings (ie have a chunk size of 1000 for embeddings)\r\n2. Perform a parallel upsert to Pinecone index on that chunk\r\n\r\nThis way we are in control on 3 things:\r\n1. Thread pool for pinecone index\r\n2. Parametrize the batch size for embeddings (ie it helps to avoid rate limit for OpenAI embeddings)\r\n3. Parametrize the batch size for upsert (it helps to avoid throttling of pinecone API)\r\n\r\nAs a part of this ticket, we can consolidate the code between `add_texts` and `from_texts` as they are doing the similar thing.\n\n### Motivation\n\nThe function `from_text` and `add_text` for index upsert doesn't take advantage of parallelism especially when embeddings are calculated by HTTP calls (ie OpenAI embeddings). This makes the whole sequence inefficient from IO bound standpoint as the pipeline is following:\r\n1. Take a small batch ie 32/64 of documents\r\n2. Calculate embeddings --> WAIT\r\n3. Upsert a batch --> WAIT\r\n\r\nWe can benefit from either parallel upsert or we can utilize `asyncio`.\n\n### Your contribution\n\nI will do it.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9855/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9855/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9854",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9854/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9854/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9854/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9854",
        "id": 1869658676,
        "node_id": "I_kwDOIPDwls5vcLo0",
        "number": 9854,
        "title": "AttributeError: module 'langchain' has no attribute 'verbose'",
        "user": {
            "login": "urbanscribe",
            "id": 2935311,
            "node_id": "MDQ6VXNlcjI5MzUzMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2935311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/urbanscribe",
            "html_url": "https://github.com/urbanscribe",
            "followers_url": "https://api.github.com/users/urbanscribe/followers",
            "following_url": "https://api.github.com/users/urbanscribe/following{/other_user}",
            "gists_url": "https://api.github.com/users/urbanscribe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/urbanscribe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/urbanscribe/subscriptions",
            "organizations_url": "https://api.github.com/users/urbanscribe/orgs",
            "repos_url": "https://api.github.com/users/urbanscribe/repos",
            "events_url": "https://api.github.com/users/urbanscribe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/urbanscribe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2023-08-28T12:23:46Z",
        "updated_at": "2023-10-10T04:54:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n274\r\nMac M2\r\n\r\nthis error appears often and unexpectedly \r\nbut gets solved temporarily by running a force reinstall\r\n\r\n`pip install --upgrade --force-reinstall --no-deps --no-cache-dir langchain\r\n`\r\n\r\nfull error\r\n```\r\n2023-08-28 08:16:48.197 Uncaught app exception\r\nTraceback (most recent call last):\r\n  File \"/Users/user/Developer/newfilesystem/venv/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 552, in _run_script\r\n    exec(code, module.__dict__)\r\n  File \"/Users/user/Developer/newfilesystem/pages/chat.py\", line 104, in <module>\r\n    llm = ChatOpenAI(\r\n  File \"/Users/user/Developer/newfilesystem/venv/lib/python3.10/site-packages/langchain/load/serializable.py\", line 74, in __init__\r\n    super().__init__(**kwargs)\r\n  File \"pydantic/main.py\", line 339, in pydantic.main.BaseModel.__init__\r\n  File \"pydantic/main.py\", line 1066, in pydantic.main.validate_model\r\n  File \"pydantic/fields.py\", line 439, in pydantic.fields.ModelField.get_default\r\n  File \"/Users/user/Developer/newfilesystem/venv/lib/python3.10/site-packages/langchain/chat_models/base.py\", line 49, in _get_verbosity\r\n    return langchain.verbose\r\n```\r\n\r\nmain librairies in the project\r\nrequests streamlit pandas colorlog python-dotenv tqdm fastapi uvicorn\r\nlangchain openai tiktoken chromadb pypdf\r\ncolorlog logger docx2txt  \n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [X] Vector Stores / Retrievers\n- [X] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nintermittent - no pattern\n\n### Expected behavior\n\nresolution",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9854/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9854/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9853",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9853/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9853/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9853/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9853",
        "id": 1869623805,
        "node_id": "I_kwDOIPDwls5vcDH9",
        "number": 9853,
        "title": "Constraining the search using 'where_filter' in case of similarity_score_threshold for langchain Weaviate wrapper",
        "user": {
            "login": "amitmadahar",
            "id": 34081823,
            "node_id": "MDQ6VXNlcjM0MDgxODIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/34081823?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitmadahar",
            "html_url": "https://github.com/amitmadahar",
            "followers_url": "https://api.github.com/users/amitmadahar/followers",
            "following_url": "https://api.github.com/users/amitmadahar/following{/other_user}",
            "gists_url": "https://api.github.com/users/amitmadahar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amitmadahar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amitmadahar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitmadahar/orgs",
            "repos_url": "https://api.github.com/users/amitmadahar/repos",
            "events_url": "https://api.github.com/users/amitmadahar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amitmadahar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T12:02:19Z",
        "updated_at": "2023-12-04T16:04:53Z",
        "closed_at": "2023-12-04T16:04:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\nhttps://github.com/langchain-ai/langchain/blob/610f46d83aae6e1e25d76a0222b3158e2c4f7034/libs/langchain/langchain/vectorstores/weaviate.py\r\n\r\nIssue in Langchain Weaviate Wrapper.\r\nTrying to constraint the search in case of `similarity_score_threshold` ignoring the `where_filter ` filters in the langchain Weaviate wrapper. \r\n\r\n`where_filter` implementation is missing for `similarity_score_threshold`. \r\n\r\nThe issue is with `similarity_search_with_score` function. \r\n\r\nThe fix would be to add the following after line 346, the point after the query_obj is initialized.\r\n\r\n`        if kwargs.get(\"where_filter\"): \r\n            query_obj = query_obj.with_where(kwargs.get(\"where_filter\"))`\r\n\r\nThis would integrate the `where_filter` in constraints of the query if defined by the user.\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n@rohitgr7 \r\n@baskaryan \r\n@leo-gan \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\nhttps://github.com/langchain-ai/langchain/blob/610f46d83aae6e1e25d76a0222b3158e2c4f7034/libs/langchain/langchain/vectorstores/weaviate.py\r\n\r\nIssue in Langchain Weaviate Wrapper.\r\nTrying to constraint the search in case of `similarity_score_threshold` ignoring the `where_filter ` filters in the langchain Weaviate wrapper. \r\n\r\n`where_filter` implementation is missing for `similarity_score_threshold`. \r\n\r\n\r\n### Expected behavior\r\nhttps://github.com/langchain-ai/langchain/blob/610f46d83aae6e1e25d76a0222b3158e2c4f7034/libs/langchain/langchain/vectorstores/weaviate.py\r\n\r\nThe fix would be to add the following after line 346, the point after the query_obj is initialized.\r\n\r\n`        if kwargs.get(\"where_filter\"): \r\n            query_obj = query_obj.with_where(kwargs.get(\"where_filter\"))`\r\n\r\nThis would integrate the `where_filter` in constraints of the query if defined by the user.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9853/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9853/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9851",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9851/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9851/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9851/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9851",
        "id": 1869613874,
        "node_id": "PR_kwDOIPDwls5Y7Vu8",
        "number": 9851,
        "title": "Update only notebook",
        "user": {
            "login": "pprados",
            "id": 204694,
            "node_id": "MDQ6VXNlcjIwNDY5NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/204694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pprados",
            "html_url": "https://github.com/pprados",
            "followers_url": "https://api.github.com/users/pprados/followers",
            "following_url": "https://api.github.com/users/pprados/following{/other_user}",
            "gists_url": "https://api.github.com/users/pprados/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pprados/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pprados/subscriptions",
            "organizations_url": "https://api.github.com/users/pprados/orgs",
            "repos_url": "https://api.github.com/users/pprados/repos",
            "events_url": "https://api.github.com/users/pprados/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pprados/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-28T11:56:05Z",
        "updated_at": "2023-08-29T02:29:36Z",
        "closed_at": "2023-08-29T02:29:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9851",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9851",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9851.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9851.patch",
            "merged_at": "2023-08-29T02:29:36Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9851/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9851/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9850",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9850/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9850/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9850/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9850",
        "id": 1869583874,
        "node_id": "PR_kwDOIPDwls5Y7PGr",
        "number": 9850,
        "title": "Virtual column name for self-querying retrievers",
        "user": {
            "login": "mpskex",
            "id": 8456706,
            "node_id": "MDQ6VXNlcjg0NTY3MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8456706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mpskex",
            "html_url": "https://github.com/mpskex",
            "followers_url": "https://api.github.com/users/mpskex/followers",
            "following_url": "https://api.github.com/users/mpskex/following{/other_user}",
            "gists_url": "https://api.github.com/users/mpskex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mpskex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mpskex/subscriptions",
            "organizations_url": "https://api.github.com/users/mpskex/orgs",
            "repos_url": "https://api.github.com/users/mpskex/repos",
            "events_url": "https://api.github.com/users/mpskex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mpskex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714130,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rkg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XL",
                "name": "size:XL",
                "color": "D4C5F9",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-08-28T11:36:37Z",
        "updated_at": "2023-12-04T09:49:12Z",
        "closed_at": "2023-12-04T03:00:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9850",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9850",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9850.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9850.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n\r\nSelf query retrievers are powerful and it can be even stronger than before. Taking MyScale as an example, sometimes the user may add complex SQL function to a column name. So we add a `VirtualColumnName` for self-query retriever to reduce token usage with extra functionality.\r\n\r\n1. a function that dynamically creates function mapped column names, which becomes handy when the user want to compare between current time / location or other attributes along with a column.\r\n2. complex function call in plain string can now be replaced with a shorter nickname in prompt, which saves number of token for very long function names.\r\n3. refined the logic in MyScale translator to meet this standard.\r\n\r\nThis change will not affect other self query retrievers as it preserves the original plain string interface under comparison. The actual difference happens under `QueryTransformer` in `query_construct.parser` for `Lark` parser.\r\n\r\n`Comparator.attribute` can now be either a string or a `VirtualColumnName`. I have defined the default behaviour which stops the user to use `VirtualColumnName` under other vectorstores than MyScale.\r\n\r\nThis functionality will boost the self-query retrievers as a bridge between text and simple SQL query. And we believe this will help users to expand their usage to this retriever. Other SQL vector database is theoretically compatible to this new feature as well.\r\n\r\nHope you find this interesting.\r\n@hwchase17  @baskaryan \r\n\r\nOur contact on twitter: @MyScaleDB @mpsk_liu",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9850/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9849",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9849/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9849/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9849/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9849",
        "id": 1869575430,
        "node_id": "PR_kwDOIPDwls5Y7NPM",
        "number": 9849,
        "title": "Extend SQLChatMessageHistory",
        "user": {
            "login": "asai95",
            "id": 18037290,
            "node_id": "MDQ6VXNlcjE4MDM3Mjkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/18037290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asai95",
            "html_url": "https://github.com/asai95",
            "followers_url": "https://api.github.com/users/asai95/followers",
            "following_url": "https://api.github.com/users/asai95/following{/other_user}",
            "gists_url": "https://api.github.com/users/asai95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asai95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asai95/subscriptions",
            "organizations_url": "https://api.github.com/users/asai95/orgs",
            "repos_url": "https://api.github.com/users/asai95/repos",
            "events_url": "https://api.github.com/users/asai95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asai95/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T11:31:07Z",
        "updated_at": "2023-09-03T22:49:53Z",
        "closed_at": "2023-09-03T22:49:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9849",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9849",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9849.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9849.patch",
            "merged_at": "2023-09-03T22:49:53Z"
        },
        "body": "### Description\r\n\r\nThere is a really nice class for saving chat messages into a database - SQLChatMessageHistory.\r\nIt leverages SqlAlchemy to be compatible with any supported database (in contrast with PostgresChatMessageHistory, which is basically the same but is limited to Postgres).\r\n\r\nHowever, the class is not really customizable in terms of what you can store. I can imagine a lot of use cases, when one will need to save a message date, along with some additional metadata. \r\n\r\nTo solve this, I propose to extract the converting logic from BaseMessage to SQLAlchemy model (and vice versa) into a separate class - message converter. So instead of rewriting the whole SQLChatMessageHistory class, a user will only need to write a custom model and a simple mapping class, and pass its instance as a parameter.\r\n\r\nI also noticed that there is no documentation on this class, so I added that too, with an example of custom message converter.\r\n\r\n### Issue\r\n\r\nN/A\r\n\r\n### Dependencies\r\n\r\nN/A\r\n\r\n### Tag maintainer\r\n\r\nNot yet\r\n\r\n### Twitter handle\r\n\r\nN/A",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9849/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9849/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9848",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9848/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9848/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9848/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9848",
        "id": 1869572223,
        "node_id": "I_kwDOIPDwls5vb2h_",
        "number": 9848,
        "title": "How to connect MS-SQL with LANG-CHAIN",
        "user": {
            "login": "AnasKhan-25",
            "id": 110221695,
            "node_id": "U_kgDOBpHZfw",
            "avatar_url": "https://avatars.githubusercontent.com/u/110221695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AnasKhan-25",
            "html_url": "https://github.com/AnasKhan-25",
            "followers_url": "https://api.github.com/users/AnasKhan-25/followers",
            "following_url": "https://api.github.com/users/AnasKhan-25/following{/other_user}",
            "gists_url": "https://api.github.com/users/AnasKhan-25/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AnasKhan-25/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AnasKhan-25/subscriptions",
            "organizations_url": "https://api.github.com/users/AnasKhan-25/orgs",
            "repos_url": "https://api.github.com/users/AnasKhan-25/repos",
            "events_url": "https://api.github.com/users/AnasKhan-25/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AnasKhan-25/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-08-28T11:29:04Z",
        "updated_at": "2023-12-06T17:43:50Z",
        "closed_at": "2023-12-06T17:43:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\ndb = SQLDatabase.from_uri(\r\n\"mysql+pyodbc://Driver={SQL Server};Server=DESKTOP-17L7UI1\\SQLEXPRESS;Database=DociQDb;rusted_Connection=yes;\",)\r\n\r\nI am trying to connect to my microsoft sql server but this give me error \r\nsqlalchemy.exc.DBAPIError: (pyodbc.Error) ('IM010', '[IM010] [Microsoft][ODBC Driver Manager] Data source name too long (0) (SQLDriverConnect)')\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9848/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9846",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9846/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9846/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9846/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9846",
        "id": 1869507800,
        "node_id": "PR_kwDOIPDwls5Y6-Qt",
        "number": 9846,
        "title": "Vearch vectorstore",
        "user": {
            "login": "zhanghexian",
            "id": 96572405,
            "node_id": "U_kgDOBcGT9Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/96572405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhanghexian",
            "html_url": "https://github.com/zhanghexian",
            "followers_url": "https://api.github.com/users/zhanghexian/followers",
            "following_url": "https://api.github.com/users/zhanghexian/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhanghexian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhanghexian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhanghexian/subscriptions",
            "organizations_url": "https://api.github.com/users/zhanghexian/orgs",
            "repos_url": "https://api.github.com/users/zhanghexian/repos",
            "events_url": "https://api.github.com/users/zhanghexian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhanghexian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-28T10:46:59Z",
        "updated_at": "2023-09-09T00:07:37Z",
        "closed_at": "2023-09-08T23:51:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9846",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9846",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9846.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9846.patch",
            "merged_at": "2023-09-08T23:51:14Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9846/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9846/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9845",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9845/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9845/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9845/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9845",
        "id": 1869462629,
        "node_id": "PR_kwDOIPDwls5Y60KR",
        "number": 9845,
        "title": "Mazharsaif patch 1",
        "user": {
            "login": "mazharsaif",
            "id": 63152706,
            "node_id": "MDQ6VXNlcjYzMTUyNzA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/63152706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mazharsaif",
            "html_url": "https://github.com/mazharsaif",
            "followers_url": "https://api.github.com/users/mazharsaif/followers",
            "following_url": "https://api.github.com/users/mazharsaif/following{/other_user}",
            "gists_url": "https://api.github.com/users/mazharsaif/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mazharsaif/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mazharsaif/subscriptions",
            "organizations_url": "https://api.github.com/users/mazharsaif/orgs",
            "repos_url": "https://api.github.com/users/mazharsaif/repos",
            "events_url": "https://api.github.com/users/mazharsaif/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mazharsaif/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T10:20:50Z",
        "updated_at": "2023-08-29T03:14:15Z",
        "closed_at": "2023-08-29T02:30:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9845",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9845",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9845.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9845.patch",
            "merged_at": "2023-08-29T02:30:00Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\ndocs: Fix spelling mistakes in Etherscan.ipynb",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9845/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9845/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9844",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9844/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9844/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9844/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9844",
        "id": 1869381260,
        "node_id": "PR_kwDOIPDwls5Y6iYj",
        "number": 9844,
        "title": "Langchain ai master",
        "user": {
            "login": "Rai220",
            "id": 1329774,
            "node_id": "MDQ6VXNlcjEzMjk3NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1329774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Rai220",
            "html_url": "https://github.com/Rai220",
            "followers_url": "https://api.github.com/users/Rai220/followers",
            "following_url": "https://api.github.com/users/Rai220/following{/other_user}",
            "gists_url": "https://api.github.com/users/Rai220/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Rai220/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Rai220/subscriptions",
            "organizations_url": "https://api.github.com/users/Rai220/orgs",
            "repos_url": "https://api.github.com/users/Rai220/repos",
            "events_url": "https://api.github.com/users/Rai220/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Rai220/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T09:32:14Z",
        "updated_at": "2023-08-28T09:41:35Z",
        "closed_at": "2023-08-28T09:32:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9844",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9844",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9844.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9844.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9844/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9844/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9843",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9843/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9843/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9843/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9843",
        "id": 1869349364,
        "node_id": "I_kwDOIPDwls5vbAH0",
        "number": 9843,
        "title": "CharacterTextSplitter inconsistent/wrong output using regex pattern",
        "user": {
            "login": "mgvalverde",
            "id": 32850810,
            "node_id": "MDQ6VXNlcjMyODUwODEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/32850810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgvalverde",
            "html_url": "https://github.com/mgvalverde",
            "followers_url": "https://api.github.com/users/mgvalverde/followers",
            "following_url": "https://api.github.com/users/mgvalverde/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgvalverde/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgvalverde/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgvalverde/subscriptions",
            "organizations_url": "https://api.github.com/users/mgvalverde/orgs",
            "repos_url": "https://api.github.com/users/mgvalverde/repos",
            "events_url": "https://api.github.com/users/mgvalverde/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgvalverde/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T09:13:20Z",
        "updated_at": "2023-12-04T16:05:03Z",
        "closed_at": "2023-12-04T16:05:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version 0.0.259\r\nUbuntu 20.04\r\nPython 3.9.15\n\n### Who can help?\n\n@eyurtsev\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nUsing regex in the CharacterTextSplitter leads to a couple of unexpected behaviours. \r\n 1. When it merges the small chunks into larger chunks, it uses the separator, leading to outputs like those below (0, 2)\r\n 2. This could be arguable, and personally I don't think it's so problematic. The number of splits could be different depending on whether `keep_separator` is True or False. (0, 1)\r\n\r\n```python \r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nimport string\r\n\r\nchar_chunk = string.ascii_uppercase[:5] # ABCDE\r\ntext = \"\\n\\n\".join([f\"{k}\\n\\n{char_chunk}\" for k in range(4)])\r\n\r\nsplitter = CharacterTextSplitter(chunk_size=20, chunk_overlap=0, separator=\"\\n+[0-9]+\\n+\", is_separator_regex=True, keep_separator=False)\r\nres_0 = splitter.split_text(text)\r\nprint(res_0) # ['0\\n\\nABCDE', 'ABCDE\\n+[0-9]+\\n+ABCDE', 'ABCDE']\r\n\r\nsplitter = CharacterTextSplitter(chunk_size=20, chunk_overlap=0, separator=\"\\n+[0-9]+\\n+\", is_separator_regex=True, keep_separator=True)\r\nres_1 = splitter.split_text(text)\r\nprint(res_1) # ['0\\n\\nABCDE\\n\\n1\\n\\nABCDE', '2\\n\\nABCDE\\n\\n3\\n\\nABCDE']\r\n \r\nsplitter = CharacterTextSplitter(chunk_size=20, chunk_overlap=0, separator=\"\\n*[0-9]+\\n*\", is_separator_regex=True, keep_separator=False)\r\nres_2 = splitter.split_text(text)\r\nprint(res_2) # ['ABCDE\\n*[0-9]+\\n*ABCDE', 'ABCDE\\n*[0-9]+\\n*ABCDE']\r\n\r\nsplitter = CharacterTextSplitter(chunk_size=20, chunk_overlap=0, separator=\"\\n*[0-9]+\\n*\", is_separator_regex=True, keep_separator=True)\r\nres_3 = splitter.split_text(text)\r\nprint(res_3) # ['0\\n\\nABCDE\\n\\n1\\n\\nABCDE', '2\\n\\nABCDE\\n\\n3\\n\\nABCDE']\r\n\r\n```\n\n### Expected behavior\n\n1. Use the actual characters to merge the two chunks into a larger chunk instead of the regex sepatator. I.e:\r\n```python\r\n# ['0\\n\\nABCDE', 'ABCDE\\n\\n2\\n\\nABCDE', 'ABCDE']\r\n``` \r\n2. Consistency among the number of splits in both cases of `keep_separator`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9843/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9843/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9842",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9842/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9842/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9842/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9842",
        "id": 1869306384,
        "node_id": "I_kwDOIPDwls5va1oQ",
        "number": 9842,
        "title": "Being able to see model's responses when using verbose mode",
        "user": {
            "login": "kevin-guimard-ext",
            "id": 140074762,
            "node_id": "U_kgDOCFlfCg",
            "avatar_url": "https://avatars.githubusercontent.com/u/140074762?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevin-guimard-ext",
            "html_url": "https://github.com/kevin-guimard-ext",
            "followers_url": "https://api.github.com/users/kevin-guimard-ext/followers",
            "following_url": "https://api.github.com/users/kevin-guimard-ext/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevin-guimard-ext/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevin-guimard-ext/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevin-guimard-ext/subscriptions",
            "organizations_url": "https://api.github.com/users/kevin-guimard-ext/orgs",
            "repos_url": "https://api.github.com/users/kevin-guimard-ext/repos",
            "events_url": "https://api.github.com/users/kevin-guimard-ext/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevin-guimard-ext/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-28T08:47:43Z",
        "updated_at": "2023-12-04T16:05:09Z",
        "closed_at": "2023-12-04T16:05:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCurrently, when the _verbose_ attribute is set to True in the constructor of an _LLMChain_ object, only the input passed to the LLM is shown. It would be desirable to also see the raw output of the LLM before it is parsed.\n\n### Motivation\n\nSeeing both inputs and outputs of the LLM would help debug the chain. Exceptions often occur when an output parser is used and the parser throws an exception (because the LLM's output was not in the expected format). In that case one cannot see what the LLM's output was.\n\n### Your contribution\n\nI had a look at the code of LLMChain and it seems that a print (or a callback) could be added in the _call method, between the call to _generate_ and the call to _create_outputs_:\r\n```\r\n    def _call(\r\n        self,\r\n        inputs: Dict[str, Any],\r\n        run_manager: Optional[CallbackManagerForChainRun] = None,\r\n    ) -> Dict[str, str]:\r\n        response = self.generate([inputs], run_manager=run_manager)\r\n        # Add a print/callback here\r\n        return self.create_outputs(response)[0]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9842/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9842/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9841",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9841/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9841/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9841/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9841",
        "id": 1869160370,
        "node_id": "I_kwDOIPDwls5vaR-y",
        "number": 9841,
        "title": "VLLM: Can't instantiate abstract class VLLM with abstract method _agenerate",
        "user": {
            "login": "Yuval-Moshe",
            "id": 53703174,
            "node_id": "MDQ6VXNlcjUzNzAzMTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/53703174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yuval-Moshe",
            "html_url": "https://github.com/Yuval-Moshe",
            "followers_url": "https://api.github.com/users/Yuval-Moshe/followers",
            "following_url": "https://api.github.com/users/Yuval-Moshe/following{/other_user}",
            "gists_url": "https://api.github.com/users/Yuval-Moshe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Yuval-Moshe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Yuval-Moshe/subscriptions",
            "organizations_url": "https://api.github.com/users/Yuval-Moshe/orgs",
            "repos_url": "https://api.github.com/users/Yuval-Moshe/repos",
            "events_url": "https://api.github.com/users/Yuval-Moshe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Yuval-Moshe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T07:30:09Z",
        "updated_at": "2023-12-04T16:05:13Z",
        "closed_at": "2023-12-04T16:05:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n**langchain 0.0.274:**\r\nWhen trying to instantiate a VLLM object, I'm getting the following error:\r\n\r\n**TypeError: Can't instantiate abstract class VLLM with abstract method _agenerate**\r\n\r\nThis is the code I'm using which is 1-1 as the VLLM example on langchain documentation:\r\nhttps://python.langchain.com/docs/integrations/llms/vllm\r\n\r\n```\r\nfrom langchain.llms.vllm import VLLM\r\n\r\nvlmm = VLLM(model=\"mosaicml/mpt-7b\",\r\n           trust_remote_code=True,  # mandatory for hf models\r\n           max_new_tokens=128,\r\n           top_k=10,\r\n           top_p=0.95,\r\n           temperature=0.8,\r\n)\r\n```\r\n\r\nIt seems that the VLLM model is derived from the BaseLLM object, which has an abstract method of _agenerate, but is not providing an implementation for it. \r\n\r\nIn addition to that, you might notice that I used **from langchain.llms.vllm import VLLM** instead of from **langchain.llms import VLLM** as the documentation, that's because for from langchain.llms import VLLM I'm getting an \"cannot import name 'VLLM' from 'langchain.llms'\" error \r\n\r\nAny insights regarding this one? \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\ninstantiate a VLLM object just like in the official documentation: https://python.langchain.com/docs/integrations/llms/vllm\n\n### Expected behavior\n\nThe object should be created and load model successfully",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9841/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9841/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9840",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9840/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9840/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9840/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9840",
        "id": 1869119162,
        "node_id": "I_kwDOIPDwls5vaH66",
        "number": 9840,
        "title": "DOC: Generative Agents Page In JS/TS but not Python",
        "user": {
            "login": "alckasoc",
            "id": 58043265,
            "node_id": "MDQ6VXNlcjU4MDQzMjY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/58043265?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alckasoc",
            "html_url": "https://github.com/alckasoc",
            "followers_url": "https://api.github.com/users/alckasoc/followers",
            "following_url": "https://api.github.com/users/alckasoc/following{/other_user}",
            "gists_url": "https://api.github.com/users/alckasoc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alckasoc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alckasoc/subscriptions",
            "organizations_url": "https://api.github.com/users/alckasoc/orgs",
            "repos_url": "https://api.github.com/users/alckasoc/repos",
            "events_url": "https://api.github.com/users/alckasoc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alckasoc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T07:04:09Z",
        "updated_at": "2023-09-07T03:07:23Z",
        "closed_at": "2023-09-07T03:07:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nHow come there is a generative agents page https://js.langchain.com/docs/use_cases/agent_simulations/generative_agents in JS, but not one in python? I was reading this [blog post](https://blog.langchain.dev/agents-round/) and the links to the generative_agents page didn't work. \r\n\r\nI also noticed [`MemoryVectorStore`](https://js.langchain.com/docs/api/vectorstores_memory/classes/MemoryVectorStore#methods) exists in the JS/TS docs but not in the python [`vectorstores`](https://[api.python.langchain.com/en/latest/module-langchain.vectorstores](https://api.python.langchain.com/en/latest/module-langchain.vectorstores)) doc. Why is that?\r\n\r\nThanks.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9840/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9840/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9839",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9839/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9839/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9839/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9839",
        "id": 1869095141,
        "node_id": "I_kwDOIPDwls5vaCDl",
        "number": 9839,
        "title": "DOC: Add clarification to Modules/ModelsI/O/Prompts/Prompt Templates/Few-shot examples for chat models",
        "user": {
            "login": "alckasoc",
            "id": 58043265,
            "node_id": "MDQ6VXNlcjU4MDQzMjY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/58043265?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alckasoc",
            "html_url": "https://github.com/alckasoc",
            "followers_url": "https://api.github.com/users/alckasoc/followers",
            "following_url": "https://api.github.com/users/alckasoc/following{/other_user}",
            "gists_url": "https://api.github.com/users/alckasoc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alckasoc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alckasoc/subscriptions",
            "organizations_url": "https://api.github.com/users/alckasoc/orgs",
            "repos_url": "https://api.github.com/users/alckasoc/repos",
            "events_url": "https://api.github.com/users/alckasoc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alckasoc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T06:48:00Z",
        "updated_at": "2023-12-04T16:05:18Z",
        "closed_at": "2023-12-04T16:05:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nIn https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/few_shot_examples_chat under Dynamic few-shot prompting,\r\n\r\n```\r\nexample_selector = SemanticSimilarityExampleSelector(\r\n    vectorstore=vectorstore,\r\n    k=2,\r\n)\r\n\r\n# The prompt template will load examples by passing the input do the `select_examples` method\r\nexample_selector.select_examples({\"input\": \"horse\"})\r\n```\r\n\r\nDoes the key value \"input\" matter when calling select_examples? I was playing around with this and it doesn't seem to change the output. Maybe more clarification could be added to both `select_examples` in the API reference and in the doc examples.\r\n\r\n---\r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/58043265/b4f7642a-32e7-41e8-b0a5-65087d025591)\r\n\"instruct\" is misspelled.\r\n\r\n---\r\n\r\n```\r\nfrom langchain.prompts import (\r\n    FewShotChatMessagePromptTemplate,\r\n    ChatPromptTemplate,\r\n)\r\n\r\n# Define the few-shot prompt.\r\nfew_shot_prompt = FewShotChatMessagePromptTemplate(\r\n    # The input variables select the values to pass to the example_selector\r\n    input_variables=[\"input\"],\r\n    example_selector=example_selector,\r\n    # Define how each example will be formatted.\r\n    # In this case, each example will become 2 messages:\r\n    # 1 human, and 1 AI\r\n    example_prompt=ChatPromptTemplate.from_messages(\r\n        [(\"human\", \"{input}\"), (\"ai\", \"{output}\")]\r\n    ),\r\n)\r\n```\r\n\r\nAlso, is it possible to clarify `input_variables=[\"input\"]` a bit more and how this works downstream in the `final_prompt`? I toyed with it a bit and found it a lil confusing to understand.\r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/58043265/98504eec-f6c5-4908-81a2-7c6c68469270)\r\n_What I understood from playing around with the parameters._\r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/58043265/82e01f7b-e479-4d74-b762-abd6b12542e2)\r\n_What I found out later._\r\n\r\nEven after understanding how the variables worked here, I think a lot of the other cases weren't explained so I was still confused up till I started experimenting. Maybe more clarification can be added to this?\r\n\r\nThanks!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9839/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9839/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9838",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9838/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9838/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9838/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9838",
        "id": 1869008990,
        "node_id": "PR_kwDOIPDwls5Y5RiT",
        "number": 9838,
        "title": "New chain to allow for logical fallacy removal of model output",
        "user": {
            "login": "j-space-b",
            "id": 120141355,
            "node_id": "U_kgDOByk2Kw",
            "avatar_url": "https://avatars.githubusercontent.com/u/120141355?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-space-b",
            "html_url": "https://github.com/j-space-b",
            "followers_url": "https://api.github.com/users/j-space-b/followers",
            "following_url": "https://api.github.com/users/j-space-b/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-space-b/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-space-b/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-space-b/subscriptions",
            "organizations_url": "https://api.github.com/users/j-space-b/orgs",
            "repos_url": "https://api.github.com/users/j-space-b/repos",
            "events_url": "https://api.github.com/users/j-space-b/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-space-b/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T05:40:50Z",
        "updated_at": "2023-08-28T22:27:21Z",
        "closed_at": "2023-08-28T22:27:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9838",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9838",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9838.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9838.patch",
            "merged_at": null
        },
        "body": "Description: a new chain to test and remove logical fallacies from model output in a chain if found\r\nIssue: n/a\r\nDependencies: none\r\nTag maintainer: @hinthornw helped me in the past, not sure if this PR falls outside any maintainer area but feel free to maintain if so\r\nTwitter handle: not on twitter - tag my git handle if any shout out needed j-space-b\r\n\r\nNote: added documentation to docs/extras\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9838/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9838/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9837",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9837/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9837/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9837/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9837",
        "id": 1868979088,
        "node_id": "PR_kwDOIPDwls5Y5LGS",
        "number": 9837,
        "title": "add numbered list parser",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T05:09:33Z",
        "updated_at": "2023-09-03T22:55:32Z",
        "closed_at": "2023-09-03T22:55:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9837",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9837",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9837.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9837.patch",
            "merged_at": "2023-09-03T22:55:31Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9837/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9836",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9836/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9836/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9836/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9836",
        "id": 1868928602,
        "node_id": "PR_kwDOIPDwls5Y4_9P",
        "number": 9836,
        "title": "Logical fallacy removal",
        "user": {
            "login": "j-space-b",
            "id": 120141355,
            "node_id": "U_kgDOByk2Kw",
            "avatar_url": "https://avatars.githubusercontent.com/u/120141355?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-space-b",
            "html_url": "https://github.com/j-space-b",
            "followers_url": "https://api.github.com/users/j-space-b/followers",
            "following_url": "https://api.github.com/users/j-space-b/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-space-b/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-space-b/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-space-b/subscriptions",
            "organizations_url": "https://api.github.com/users/j-space-b/orgs",
            "repos_url": "https://api.github.com/users/j-space-b/repos",
            "events_url": "https://api.github.com/users/j-space-b/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-space-b/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T04:21:04Z",
        "updated_at": "2023-08-28T04:31:59Z",
        "closed_at": "2023-08-28T04:31:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9836",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9836",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9836.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9836.patch",
            "merged_at": null
        },
        "body": "Description:  a new chain to output logical fallacies from model in a chain\r\nIssue: fixes no existing issue other than this not yet existing \r\nDependencies: none \r\nTag maintainer: @hinthornw in the past for another area, not sure if this an area outside of maintenance\r\nTwitter handle: not on twitter, feel free to tag my git user if any shout-outs: j-space-b\r\n\r\nNote: a doc showing use of this chain is in docs/extras as apropos\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9836/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9836/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9835",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9835/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9835/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9835/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9835",
        "id": 1868882753,
        "node_id": "PR_kwDOIPDwls5Y41_A",
        "number": 9835,
        "title": "Update web_scraping.ipynb",
        "user": {
            "login": "xingke2023",
            "id": 120709911,
            "node_id": "U_kgDOBzHjFw",
            "avatar_url": "https://avatars.githubusercontent.com/u/120709911?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xingke2023",
            "html_url": "https://github.com/xingke2023",
            "followers_url": "https://api.github.com/users/xingke2023/followers",
            "following_url": "https://api.github.com/users/xingke2023/following{/other_user}",
            "gists_url": "https://api.github.com/users/xingke2023/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xingke2023/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xingke2023/subscriptions",
            "organizations_url": "https://api.github.com/users/xingke2023/orgs",
            "repos_url": "https://api.github.com/users/xingke2023/repos",
            "events_url": "https://api.github.com/users/xingke2023/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xingke2023/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-28T03:19:20Z",
        "updated_at": "2023-08-29T02:26:24Z",
        "closed_at": "2023-08-29T02:26:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9835",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9835",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9835.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9835.patch",
            "merged_at": "2023-08-29T02:26:24Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9835/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9834",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9834/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9834/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9834/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9834",
        "id": 1868794809,
        "node_id": "PR_kwDOIPDwls5Y4im0",
        "number": 9834,
        "title": "Logical fallacy removal",
        "user": {
            "login": "j-space-b",
            "id": 120141355,
            "node_id": "U_kgDOByk2Kw",
            "avatar_url": "https://avatars.githubusercontent.com/u/120141355?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-space-b",
            "html_url": "https://github.com/j-space-b",
            "followers_url": "https://api.github.com/users/j-space-b/followers",
            "following_url": "https://api.github.com/users/j-space-b/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-space-b/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-space-b/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-space-b/subscriptions",
            "organizations_url": "https://api.github.com/users/j-space-b/orgs",
            "repos_url": "https://api.github.com/users/j-space-b/repos",
            "events_url": "https://api.github.com/users/j-space-b/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-space-b/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T01:48:27Z",
        "updated_at": "2023-08-28T03:49:04Z",
        "closed_at": "2023-08-28T03:49:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9834",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9834",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9834.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9834.patch",
            "merged_at": null
        },
        "body": "Description: a new chain to filter logical fallacies from \r\nIssue: does not fix an issue other than adding any needed logical fallacy filtering to an output from a base model within a chain\r\nDependencies: no dependencies \r\nTag maintainer: have worked w @hinthornw in the past - not seeing tag on list, so more likely @baskaryan \r\nTwitter handle: Not on twitter/x feel free to ping my github if shout-out needed @j-space-b \r\n\r\nNote: added a doc of an example in docs/extras\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9834/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9834/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9833",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9833/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9833/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9833/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9833",
        "id": 1868785870,
        "node_id": "PR_kwDOIPDwls5Y4go3",
        "number": 9833,
        "title": "feat(llms): improve ERNIE-Bot chat model",
        "user": {
            "login": "axiangcoding",
            "id": 49201354,
            "node_id": "MDQ6VXNlcjQ5MjAxMzU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/49201354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axiangcoding",
            "html_url": "https://github.com/axiangcoding",
            "followers_url": "https://api.github.com/users/axiangcoding/followers",
            "following_url": "https://api.github.com/users/axiangcoding/following{/other_user}",
            "gists_url": "https://api.github.com/users/axiangcoding/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axiangcoding/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axiangcoding/subscriptions",
            "organizations_url": "https://api.github.com/users/axiangcoding/orgs",
            "repos_url": "https://api.github.com/users/axiangcoding/repos",
            "events_url": "https://api.github.com/users/axiangcoding/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axiangcoding/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-28T01:37:53Z",
        "updated_at": "2023-08-30T01:20:06Z",
        "closed_at": "2023-08-30T01:20:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9833",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9833",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9833.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9833.patch",
            "merged_at": "2023-08-30T01:20:06Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n  - Description:  improve ERNIE-Bot chat model, add request timeout and more testcases.\r\n  - Issue: None\r\n  - Dependencies: None\r\n  - Tag maintainer: @baskaryan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9833/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9832",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9832/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9832/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9832/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9832",
        "id": 1868778833,
        "node_id": "PR_kwDOIPDwls5Y4fC7",
        "number": 9832,
        "title": "iMessage loader",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T01:31:09Z",
        "updated_at": "2023-08-28T20:44:00Z",
        "closed_at": "2023-08-28T20:43:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9832",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9832",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9832.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9832.patch",
            "merged_at": "2023-08-28T20:43:59Z"
        },
        "body": "Add an iMessage chat loader",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9832/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9831",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9831/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9831/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9831/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9831",
        "id": 1868651639,
        "node_id": "PR_kwDOIPDwls5Y4DOR",
        "number": 9831,
        "title": "Fix add callbacks to spark_sql due to depreciation of callback_manager",
        "user": {
            "login": "Jurik-001",
            "id": 123458520,
            "node_id": "U_kgDOB1vT2A",
            "avatar_url": "https://avatars.githubusercontent.com/u/123458520?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jurik-001",
            "html_url": "https://github.com/Jurik-001",
            "followers_url": "https://api.github.com/users/Jurik-001/followers",
            "following_url": "https://api.github.com/users/Jurik-001/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jurik-001/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jurik-001/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jurik-001/subscriptions",
            "organizations_url": "https://api.github.com/users/Jurik-001/orgs",
            "repos_url": "https://api.github.com/users/Jurik-001/repos",
            "events_url": "https://api.github.com/users/Jurik-001/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jurik-001/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-27T22:19:23Z",
        "updated_at": "2023-08-30T02:23:44Z",
        "closed_at": "2023-08-30T02:23:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9831",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9831",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9831.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9831.patch",
            "merged_at": "2023-08-30T02:23:44Z"
        },
        "body": "Description: Due to depreciation (regarding to line 109 in [langchain/libs/langchain/langchain/chains/base.py](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/chains/base.py) of callback_manager i replaced several parts\r\n\r\nIssue: None\r\nDependencies: \r\nMaintainer: @baskaryan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9831/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9830",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9830/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9830/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9830/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9830",
        "id": 1868651219,
        "node_id": "PR_kwDOIPDwls5Y4DJJ",
        "number": 9830,
        "title": "poc auto-docstring",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-27T22:17:41Z",
        "updated_at": "2023-08-30T01:20:55Z",
        "closed_at": "2023-08-30T01:20:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9830",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9830",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9830.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9830.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9830/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9829",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9829/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9829/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9829/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9829",
        "id": 1868641450,
        "node_id": "PR_kwDOIPDwls5Y4BTx",
        "number": 9829,
        "title": "Feature: PGVector Collection Documents Update",
        "user": {
            "login": "lorenzofavaro",
            "id": 44714920,
            "node_id": "MDQ6VXNlcjQ0NzE0OTIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/44714920?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lorenzofavaro",
            "html_url": "https://github.com/lorenzofavaro",
            "followers_url": "https://api.github.com/users/lorenzofavaro/followers",
            "following_url": "https://api.github.com/users/lorenzofavaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/lorenzofavaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lorenzofavaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lorenzofavaro/subscriptions",
            "organizations_url": "https://api.github.com/users/lorenzofavaro/orgs",
            "repos_url": "https://api.github.com/users/lorenzofavaro/repos",
            "events_url": "https://api.github.com/users/lorenzofavaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lorenzofavaro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-27T21:40:06Z",
        "updated_at": "2023-11-15T23:35:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9829",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9829",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9829.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9829.patch",
            "merged_at": null
        },
        "body": "## Description\r\nEnhancement to the PGVector functionality: the addition of an update function `update_documents(...)`.\r\n\r\nCurrently, updating the documents of a collection requires emptying the collection and filling it again. This can cause more calls to be made to the model than are actually needed. In fact, if a text chunk (and therefore its embedding) is already present in the vector store in the current collection, what is currently done is to delete it and insert (therefore calling the embedding model) the same embedding again.\r\n\r\nThe new feature identifies differences between input and existing documents. It requests new embeddings only for different documents, inserting them into the DB, and deletes missing ones.\r\n\r\n##  Issue\r\n#9461 (Add Functionality to Update Embeddings in pgvector)\r\n\r\n## Using Sample\r\n\r\n```python\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores.pgvector import PGVector\r\nfrom langchain.docstore.document import Document\r\n\r\nCOLLECTION_NAME = \"...\"\r\nCONNECTION_STRING = '...'\r\ndocuments = [Document(page_content=\"foo\", metadata={\"page\": \"0\"}), \r\n             Document(page_content=\"bar\", metadata={\"page\": \"1\"})]\r\n\r\n# Instance new collection in pgvector from documents\r\npgvector = PGVector.from_documents(\r\n    embedding=OpenAIEmbeddings(),\r\n    documents=documents,\r\n    collection_name=COLLECTION_NAME,\r\n    connection_string=CONNECTION_STRING,\r\n    pre_delete_collection=True)\r\n\r\n# Update/Add some documents\r\ndocuments[1].page_content = \"baz\"\r\ndocuments.append(Document(page_content=\"far\", metadata={\"page\": \"2\"}))\r\n\r\n# Call update function\r\npgvector.update_documents(documents)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9829/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9828",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9828/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9828/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9828/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9828",
        "id": 1868596327,
        "node_id": "PR_kwDOIPDwls5Y34zK",
        "number": 9828,
        "title": "Extraction Chain - Custom Prompt",
        "user": {
            "login": "chutch1122",
            "id": 3986362,
            "node_id": "MDQ6VXNlcjM5ODYzNjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3986362?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chutch1122",
            "html_url": "https://github.com/chutch1122",
            "followers_url": "https://api.github.com/users/chutch1122/followers",
            "following_url": "https://api.github.com/users/chutch1122/following{/other_user}",
            "gists_url": "https://api.github.com/users/chutch1122/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chutch1122/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chutch1122/subscriptions",
            "organizations_url": "https://api.github.com/users/chutch1122/orgs",
            "repos_url": "https://api.github.com/users/chutch1122/repos",
            "events_url": "https://api.github.com/users/chutch1122/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chutch1122/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-27T18:58:46Z",
        "updated_at": "2023-09-03T23:01:56Z",
        "closed_at": "2023-09-03T23:01:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9828",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9828",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9828.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9828.patch",
            "merged_at": "2023-09-03T23:01:56Z"
        },
        "body": "# Description\r\n\r\nThis change allows you to customize the prompt used in `create_extraction_chain` as well as `create_extraction_chain_pydantic`. \r\n\r\nIt also adds the `verbose` argument to `create_extraction_chain_pydantic` - because `create_extraction_chain` had it already and `create_extraction_chain_pydantic` did not.\r\n\r\n# Issue\r\nN/A\r\n\r\n# Dependencies\r\nN/A\r\n\r\n# Twitter\r\nhttps://twitter.com/CamAHutchison\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9828/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9827",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9827/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9827/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9827/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9827",
        "id": 1868583767,
        "node_id": "PR_kwDOIPDwls5Y32XN",
        "number": 9827,
        "title": "Harrison/add llm kwargs",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-27T18:11:29Z",
        "updated_at": "2023-09-03T22:54:30Z",
        "closed_at": "2023-09-03T22:54:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9827",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9827",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9827.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9827.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9827/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9826",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9826/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9826/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9826/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9826",
        "id": 1868582186,
        "node_id": "PR_kwDOIPDwls5Y32Dd",
        "number": 9826,
        "title": "accept openai terms",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-27T18:06:10Z",
        "updated_at": "2023-08-28T00:18:25Z",
        "closed_at": "2023-08-28T00:18:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9826",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9826",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9826.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9826.patch",
            "merged_at": "2023-08-28T00:18:25Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9826/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9826/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9825",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9825/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9825/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9825/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9825",
        "id": 1868522804,
        "node_id": "I_kwDOIPDwls5vX2U0",
        "number": 9825,
        "title": "DOC: Import path for NewsURLLoader needs to fixed",
        "user": {
            "login": "z4forzubair",
            "id": 42717176,
            "node_id": "MDQ6VXNlcjQyNzE3MTc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42717176?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/z4forzubair",
            "html_url": "https://github.com/z4forzubair",
            "followers_url": "https://api.github.com/users/z4forzubair/followers",
            "following_url": "https://api.github.com/users/z4forzubair/following{/other_user}",
            "gists_url": "https://api.github.com/users/z4forzubair/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/z4forzubair/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/z4forzubair/subscriptions",
            "organizations_url": "https://api.github.com/users/z4forzubair/orgs",
            "repos_url": "https://api.github.com/users/z4forzubair/repos",
            "events_url": "https://api.github.com/users/z4forzubair/events{/privacy}",
            "received_events_url": "https://api.github.com/users/z4forzubair/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-27T14:49:04Z",
        "updated_at": "2023-12-03T16:04:21Z",
        "closed_at": "2023-12-03T16:04:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nAt https://python.langchain.com/docs/integrations/document_loaders/news, there is an issue with the path for importing `NewsURLLoader`. Currently, it's being imported from `from langchain.document_loaders`, but it gives `importerror`.\n\n### Idea or request for content:\n\nThe import path for `NewsURLLoader` needs to be updated. The correct path is `from langchain.document_loaders.news import NewsURLLoader`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9825/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9825/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9823",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9823/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9823/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9823/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9823",
        "id": 1868456842,
        "node_id": "I_kwDOIPDwls5vXmOK",
        "number": 9823,
        "title": " field \"credential\" not yet prepared so type is still a ForwardRef, you might need to call PowerBIDataset.update_forward_refs()",
        "user": {
            "login": "kalpeshparakh",
            "id": 3449985,
            "node_id": "MDQ6VXNlcjM0NDk5ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3449985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kalpeshparakh",
            "html_url": "https://github.com/kalpeshparakh",
            "followers_url": "https://api.github.com/users/kalpeshparakh/followers",
            "following_url": "https://api.github.com/users/kalpeshparakh/following{/other_user}",
            "gists_url": "https://api.github.com/users/kalpeshparakh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kalpeshparakh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kalpeshparakh/subscriptions",
            "organizations_url": "https://api.github.com/users/kalpeshparakh/orgs",
            "repos_url": "https://api.github.com/users/kalpeshparakh/repos",
            "events_url": "https://api.github.com/users/kalpeshparakh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kalpeshparakh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-27T11:14:51Z",
        "updated_at": "2023-12-13T16:07:18Z",
        "closed_at": "2023-12-13T16:07:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHello Team,\r\nI am using the below post from Langchain in order to use PowerBIToolkit for connecting to the dataset and tables in it. However I am not able to execute the code. \r\n\r\nhttps://python.langchain.com/docs/integrations/toolkits/powerbi\r\n\r\nI have also gone through an issue raised in this repository which resides here:\r\nhttps://github.com/langchain-ai/langchain/issues/4325\r\n\r\nBut not able to pass through this issue. Still looks blocker to me as I am not able to proceed with this integration.\r\n\r\nI am using this object which is trying to use the default credentials for the client:\r\n\r\nds = PowerBIDataset(\r\n    dataset_id=\"aec82374-5442-416f-849b-*********\",\r\n    table_names=[\"ProductsTable\"],\r\n    credential=DefaultAzureCredential(\r\n        managed_identity_client_id=\"678e6145-8917-49a2-********\"),\r\n)\r\n\r\nPlease suggest...\r\n\r\nError:     \r\n**ds = PowerBIDataset(\r\n         ^^^^^^^^^^^^^^^\r\n  File \"pydantic\\main.py\", line 339, in pydantic.main.BaseModel.__init__\r\n  File \"pydantic\\main.py\", line 1076, in pydantic.main.validate_model\r\n  File \"pydantic\\fields.py\", line 860, in pydantic.fields.ModelField.validate\r\npydantic.errors.ConfigError: field \"credential\" not yet prepared so type is still a ForwardRef, you might need to call PowerBIDataset.update_forward_refs().**\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.agents.agent_toolkits import create_pbi_agent\r\nfrom langchain.agents.agent_toolkits import PowerBIToolkit\r\nfrom langchain.utilities.powerbi import PowerBIDataset\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.agents import AgentExecutor\r\nfrom azure.identity import DefaultAzureCredential\r\nfrom dotenv import dotenv_values\r\nimport os\r\nfrom azure.core.credentials import TokenCredential\r\n\r\nconfig = dotenv_values('.env')\r\nos.environ[\"OPENAI_API_KEY\"] = config[\"OPENAI_API_KEY\"]\r\n\r\n\r\nfast_llm = ChatOpenAI(\r\n    temperature=0.5, max_tokens=1000, model_name=\"gpt-3.5-turbo\", verbose=True\r\n)\r\nsmart_llm = ChatOpenAI(temperature=0, max_tokens=100,\r\n                       model_name=\"gpt-4\", verbose=True)\r\n\r\nds = PowerBIDataset(\r\n    dataset_id=\"aec82374-5442-416f-849b-$$$$$$$$$\",\r\n    table_names=[\"ProductsTable\"],\r\n    credential=DefaultAzureCredential(\r\n        managed_identity_client_id=\"678e6145-8917-49a2-bdcf-******\"), # Client Id for Azure Application\r\n)\r\nds.update_forward_refs()\r\ntoolkit = PowerBIToolkit(\r\n    powerbi=ds,\r\n    llm=fast_llm,\r\n)\r\n\r\nagent_executor = create_pbi_agent(\r\n    llm=fast_llm,\r\n    toolkit=toolkit,\r\n    verbose=True,\r\n)\r\n\r\nagent_executor.run(\"How many records are in ProductsTable?\")\r\n\n\n### Expected behavior\n\nShould be able to query the table present in the dataset",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9823/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9822",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9822/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9822/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9822/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9822",
        "id": 1868442230,
        "node_id": "I_kwDOIPDwls5vXip2",
        "number": 9822,
        "title": "Issue: Help to make a callback for Elevenlabs API streaming endpoint",
        "user": {
            "login": "ChristianEvc",
            "id": 15521096,
            "node_id": "MDQ6VXNlcjE1NTIxMDk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/15521096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChristianEvc",
            "html_url": "https://github.com/ChristianEvc",
            "followers_url": "https://api.github.com/users/ChristianEvc/followers",
            "following_url": "https://api.github.com/users/ChristianEvc/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChristianEvc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChristianEvc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChristianEvc/subscriptions",
            "organizations_url": "https://api.github.com/users/ChristianEvc/orgs",
            "repos_url": "https://api.github.com/users/ChristianEvc/repos",
            "events_url": "https://api.github.com/users/ChristianEvc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChristianEvc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-08-27T10:25:39Z",
        "updated_at": "2023-10-26T01:47:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, \r\n\r\nI'm hoping someone smarter than me can help me understand how to write a callback that works with Elevenlabs.\r\n\r\nI'm trying to get Elevenlabs to stream TTS based on a response from the GPT-4 API. I can do this easily using OpenAIs own libarary, but I cannot figure out how to do this using langchains callbacks instead. \r\n\r\nHere is the working code for the OpenAI library (without the various imports etc).\r\n\r\n\r\n\r\n```\r\ndef write(prompt: str):\r\n    for chunk in openai.ChatCompletion.create(\r\n        model = \"gpt-4\",\r\n        messages = [{\"role\":\"user\",\"content\": prompt}],\r\n        stream=True,\r\n    ):\r\n        content = chunk[\"choices\"][0].get(\"delta\", {}).get(\"content\")\r\n        if content is not None:\r\n            yield content\r\n            print(\"ContentTester:\", content)\r\n\r\npromtp = \"Say a long sentence\"\r\n\r\ntext_stream = write(wife)\r\n\r\naudio_stream = elevenlabs.generate(\r\n    text=text_stream,\r\n    voice=\"adam\",\r\n    stream=True,\r\n    latency=3,\r\n)\r\n\r\noutput = elevenlabs.stream(audio_stream)\r\n```\r\n\r\nI think I need to use an Async callback, but I can't get it to work. I've tried simply adding the following custom callback, but it doesn't work.\r\n\r\n```\r\nclass MyStreamingResonseHandler(StreamingStdOutCallbackHandler):\r\n    def on_llm_new_token(self, token: str, **kwargs: Any) -> None:\r\n        yield token\r\n```\r\n\r\nThe idea is to replicate what this part does as a callback:\r\n```\r\n        content = chunk[\"choices\"][0].get(\"delta\", {}).get(\"content\")\r\n        if content is not None:\r\n            yield content\r\n            print(\"ContentTester:\", content)\r\n            \r\n```\r\n\r\nThis is probably a trivial thing to solve for someone more experienced, but I can't figure it out. Any help would be greatly appreciated!!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9822/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9822/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9821",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9821/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9821/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9821/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9821",
        "id": 1868430586,
        "node_id": "PR_kwDOIPDwls5Y3Ycp",
        "number": 9821,
        "title": "Add support for Falkordb (ex-RedisGraph)",
        "user": {
            "login": "gkorland",
            "id": 753206,
            "node_id": "MDQ6VXNlcjc1MzIwNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/753206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gkorland",
            "html_url": "https://github.com/gkorland",
            "followers_url": "https://api.github.com/users/gkorland/followers",
            "following_url": "https://api.github.com/users/gkorland/following{/other_user}",
            "gists_url": "https://api.github.com/users/gkorland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gkorland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gkorland/subscriptions",
            "organizations_url": "https://api.github.com/users/gkorland/orgs",
            "repos_url": "https://api.github.com/users/gkorland/repos",
            "events_url": "https://api.github.com/users/gkorland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gkorland/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-27T09:44:12Z",
        "updated_at": "2023-08-30T10:15:04Z",
        "closed_at": "2023-08-29T21:22:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9821",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9821",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9821.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9821.patch",
            "merged_at": "2023-08-29T21:22:33Z"
        },
        "body": "Replace this entire comment with:\r\n  - Description: Add support for Falkordb (ex-RedisGraph)\r\n  - Tag maintainer: @hwchase17\r\n  - Twitter handle: @g_korland\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9821/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9821/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9820",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9820/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9820/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9820/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9820",
        "id": 1868416901,
        "node_id": "I_kwDOIPDwls5vXceF",
        "number": 9820,
        "title": "Claude XML parser",
        "user": {
            "login": "grabbou",
            "id": 2464966,
            "node_id": "MDQ6VXNlcjI0NjQ5NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2464966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/grabbou",
            "html_url": "https://github.com/grabbou",
            "followers_url": "https://api.github.com/users/grabbou/followers",
            "following_url": "https://api.github.com/users/grabbou/following{/other_user}",
            "gists_url": "https://api.github.com/users/grabbou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/grabbou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/grabbou/subscriptions",
            "organizations_url": "https://api.github.com/users/grabbou/orgs",
            "repos_url": "https://api.github.com/users/grabbou/repos",
            "events_url": "https://api.github.com/users/grabbou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/grabbou/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-27T08:56:22Z",
        "updated_at": "2023-12-03T16:04:26Z",
        "closed_at": "2023-12-03T16:04:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nI find StructuredOutputParser to not work that well with Claude. It also takes quite a few tokens to output its format instructions.\r\n\r\nIt would be great to have a built-in support for using XMLs as a meaning of transportation.\r\n\r\n### Motivation\r\n\r\nClaude supports and works really well with XML tags. \r\n\r\nAn example output:\r\n> When you reply, first find exact quotes in the FAQ relevant to the user's question and write them down word for word inside <thinking></thinking> XML tags.  This is a space for you to write down relevant content and will not be shown to the user.  Once you are done extracting relevant quotes, answer the question.  Put your answer to the user inside <answer></answer> XML tags.\r\n\r\nAs you can see, it works really well providing the answer inline the paragraph. Unlike StructuredOutputParser, we don't have to provide examples, explain the schema as well as ask to wrap the output in the markdown delimiter.\r\n\r\nI would personally use something like regular expressions to look and parse the contents inside the tags, not forcing Claude itself to stick to any particular output format (such as \"your response must be a valid XML document\" etc.).\r\n\r\n### Your contribution\r\n\r\nI would be happy to own this feature and send a PR to TypeScript implementation. [I have already written this locally and have tested it to work quite well](https://gist.github.com/grabbou/fdd0816275968f0271e09e19b2ac82b8). Note it is a very rough implementation, as my understanding of the codebase is (at this point) rather limited. I am making my baby steps tho!\r\n\r\nI would be happy to pair with someone on the Python side to explain how the things work with Claude.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9820/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9817",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9817/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9817/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9817/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9817",
        "id": 1868335331,
        "node_id": "PR_kwDOIPDwls5Y3Ga0",
        "number": 9817,
        "title": "Update CONTRIBUTING.md",
        "user": {
            "login": "XueyanZhang",
            "id": 34928958,
            "node_id": "MDQ6VXNlcjM0OTI4OTU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/34928958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XueyanZhang",
            "html_url": "https://github.com/XueyanZhang",
            "followers_url": "https://api.github.com/users/XueyanZhang/followers",
            "following_url": "https://api.github.com/users/XueyanZhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/XueyanZhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XueyanZhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XueyanZhang/subscriptions",
            "organizations_url": "https://api.github.com/users/XueyanZhang/orgs",
            "repos_url": "https://api.github.com/users/XueyanZhang/repos",
            "events_url": "https://api.github.com/users/XueyanZhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XueyanZhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-27T02:51:54Z",
        "updated_at": "2023-08-28T13:38:35Z",
        "closed_at": "2023-08-28T13:38:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9817",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9817",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9817.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9817.patch",
            "merged_at": "2023-08-28T13:38:35Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n\r\nHi LangChain :) Thank you for such a great project! \r\nI was going through the CONTRIBUTING.md and found a few minor issues.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9817/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9817/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9816",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9816/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9816/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9816/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9816",
        "id": 1868315540,
        "node_id": "I_kwDOIPDwls5vXDuU",
        "number": 9816,
        "title": "Issue: Final Answer missing Document sources when using initialize_agent RetrievalQA with Agent tool boolean flag return_direct=False ",
        "user": {
            "login": "timothymugayi",
            "id": 27059510,
            "node_id": "MDQ6VXNlcjI3MDU5NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/27059510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timothymugayi",
            "html_url": "https://github.com/timothymugayi",
            "followers_url": "https://api.github.com/users/timothymugayi/followers",
            "following_url": "https://api.github.com/users/timothymugayi/following{/other_user}",
            "gists_url": "https://api.github.com/users/timothymugayi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timothymugayi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timothymugayi/subscriptions",
            "organizations_url": "https://api.github.com/users/timothymugayi/orgs",
            "repos_url": "https://api.github.com/users/timothymugayi/repos",
            "events_url": "https://api.github.com/users/timothymugayi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timothymugayi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-27T01:08:29Z",
        "updated_at": "2023-12-03T16:04:31Z",
        "closed_at": "2023-12-03T16:04:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n```\r\nllm = ChatOpenAI(\r\n            max_retries=3,\r\n            temperature=0.7,\r\n            model_name=\"gpt-4\",\r\n            streaming=True,\r\n            callbacks=[AsyncStreamingCallbackHandler],\r\n        )\r\n```\r\n\r\n\r\nTool params \r\n\r\n` return_direct=False` # Toggling this to TRUE provides the sources, but it won't work with the streaming flag, so I set it to false so the Final answer can be streamed as part of the output. This works as expect its just the Final answer has no sources which are clearly there as part of the observation section\r\n\r\n```text \r\nObservation: \r\n                        At Burger king, you will get 50 days of paid annual leave, 50 days of paid sick leave, 12 public holidays, and two additional floating holidays for personal use. If applicable, you can also get up to six weeks of paid parental leave. \r\n                        For more in-depth coverage, refer to these sources:\r\n                        1. Company Benefits.pdf, page: 32\r\n\r\n``` \r\n\r\n\r\n```\r\nqa = RetrievalQA.from_chain_type(\r\n            llm=self.llm,\r\n            chain_type=\"stuff\",\r\n            retriever=retriever,\r\n            return_source_documents=True,\r\n            chain_type_kwargs=chain_type_kwargs\r\n        )\r\n```\r\n\r\nHas any experienced missing document sources as part of the final answer \r\n\r\nwhile within the context of the RetrievalQA, source documents exist as am explicitly concatenating them as part of the answer, which I expect to be part of the Final Answer. \r\n\r\n```\r\nresult = qa({\"query\": question})\r\n        chat_answer = result[\"result\"]\r\n        if self.hide_doc_sources:\r\n            return chat_answer\r\n        formatted_sources = format_sources(result[\"source_documents\"], 2)\r\n        chat_answer = f\"\"\"\r\n                {chat_answer}\\n\\n \r\n                \\n\\n{formatted_sources}\r\n        \"\"\"\r\n```\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9816/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9816/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9815",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9815/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9815/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9815/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9815",
        "id": 1868314208,
        "node_id": "I_kwDOIPDwls5vXDZg",
        "number": 9815,
        "title": "ValidationError: 2 validation errors for PydanticOutputFunctionsParser",
        "user": {
            "login": "takan1",
            "id": 120149840,
            "node_id": "U_kgDOBylXUA",
            "avatar_url": "https://avatars.githubusercontent.com/u/120149840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/takan1",
            "html_url": "https://github.com/takan1",
            "followers_url": "https://api.github.com/users/takan1/followers",
            "following_url": "https://api.github.com/users/takan1/following{/other_user}",
            "gists_url": "https://api.github.com/users/takan1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/takan1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/takan1/subscriptions",
            "organizations_url": "https://api.github.com/users/takan1/orgs",
            "repos_url": "https://api.github.com/users/takan1/repos",
            "events_url": "https://api.github.com/users/takan1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/takan1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-08-27T01:01:05Z",
        "updated_at": "2023-12-03T04:38:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI was just trying to run the Tagging tutorial (no code modification on colab). \r\nhttps://python.langchain.com/docs/use_cases/tagging\r\n\r\nAnd on the below code part,\r\n```chain = create_tagging_chain_pydantic(Tags, llm)```\r\n\r\nI got this error.\r\n```\r\n---------------------------------------------------------------------------\r\nValidationError                           Traceback (most recent call last)\r\n[<ipython-input-8-4724aee0c891>](https://localhost:8080/#) in <cell line: 1>()\r\n----> 1 chain = create_tagging_chain_pydantic(Tags, llm)\r\n\r\n2 frames\r\n[/usr/local/lib/python3.10/dist-packages/pydantic/v1/main.py](https://localhost:8080/#) in __init__(__pydantic_self__, **data)\r\n    339         values, fields_set, validation_error = validate_model(__pydantic_self__.__class__, data)\r\n    340         if validation_error:\r\n--> 341             raise validation_error\r\n    342         try:\r\n    343             object_setattr(__pydantic_self__, '__dict__', values)\r\n\r\nValidationError: 2 validation errors for PydanticOutputFunctionsParser\r\npydantic_schema\r\n  subclass of BaseModel expected (type=type_error.subclass; expected_class=BaseModel)\r\npydantic_schema\r\n  value is not a valid dict (type=type_error.dict)\r\n```\r\n\r\nIs this a bug? \r\n\r\nlangchain version\r\n```\r\n!pip show langchain\r\n\r\nName: langchain\r\nVersion: 0.0.274\r\nSummary: Building applications with LLMs through composability\r\nHome-page: https://github.com/langchain-ai/langchain\r\nAuthor: \r\nAuthor-email: \r\nLicense: MIT\r\nLocation: /usr/local/lib/python3.10/dist-packages\r\nRequires: aiohttp, async-timeout, dataclasses-json, langsmith, numexpr, numpy, pydantic, PyYAML, requests, SQLAlchemy, tenacity\r\nRequired-by: \r\n```\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nJust by running the colab notebook on the tagging tutorial.\r\nNo modification applied.\r\nhttps://python.langchain.com/docs/use_cases/tagging\n\n### Expected behavior\n\nFinishing running the notebook without any issues.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9815/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9815/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9814",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9814/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9814/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9814/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9814",
        "id": 1868308586,
        "node_id": "PR_kwDOIPDwls5Y3Boj",
        "number": 9814,
        "title": "Update SeleniumURLLoader to use webdriver Service in favor of deprecated executable_path parameter",
        "user": {
            "login": "aaravindan101",
            "id": 5491439,
            "node_id": "MDQ6VXNlcjU0OTE0Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5491439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaravindan101",
            "html_url": "https://github.com/aaravindan101",
            "followers_url": "https://api.github.com/users/aaravindan101/followers",
            "following_url": "https://api.github.com/users/aaravindan101/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaravindan101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaravindan101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaravindan101/subscriptions",
            "organizations_url": "https://api.github.com/users/aaravindan101/orgs",
            "repos_url": "https://api.github.com/users/aaravindan101/repos",
            "events_url": "https://api.github.com/users/aaravindan101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaravindan101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-27T00:30:07Z",
        "updated_at": "2023-08-30T02:45:19Z",
        "closed_at": "2023-08-30T02:45:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9814",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9814",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9814.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9814.patch",
            "merged_at": "2023-08-30T02:45:18Z"
        },
        "body": "Description: This commit uses the new Service object in Selenium webdriver as executable_path has been [deprecated and removed in selenium version 4.11.2](https://github.com/SeleniumHQ/selenium/commit/9f5801c82fb3be3d5850707c46c3f8176e3ccd8e)\r\nIssue: https://github.com/langchain-ai/langchain/issues/9808\r\nTag Maintainer: @eyurtsev\r\n\r\nNote -\r\nFirst attempt was to create a Service object and pass empty if executable_path not provided as such:\r\n`def _get_driver(self) -> Union[\"Chrome\", \"Firefox\"]:\r\n\"\"\"Create and return a WebDriver instance based on the specified browser.\r\n\r\n    Raises:\r\n        ValueError: If an invalid browser is specified.\r\n\r\n    Returns:\r\n        Union[Chrome, Firefox]: A WebDriver instance for the specified browser.\r\n    \"\"\"\r\n    if self.browser.lower() == \"chrome\":\r\n        from selenium.webdriver import Chrome\r\n        from selenium.webdriver.chrome.options import Options as ChromeOptions\r\n        from selenium.webdriver.chrome.service import Service\r\n\r\n        chrome_options = ChromeOptions()\r\n        chrome_service = Service()\r\n\r\n        for arg in self.arguments:\r\n            chrome_options.add_argument(arg)\r\n\r\n        if self.headless:\r\n            chrome_options.add_argument(\"--headless\")\r\n            chrome_options.add_argument(\"--no-sandbox\")\r\n        if self.binary_location is not None:\r\n            chrome_options.binary_location = self.binary_location\r\n        if self.executable_path is None:\r\n            chrome_service.path = self.executable_path\r\n        return Chrome(options=chrome_options, service=chrome_service)\r\n    elif self.browser.lower() == \"firefox\":\r\n        from selenium.webdriver import Firefox\r\n        from selenium.webdriver.firefox.options import Options as FirefoxOptions\r\n        from selenium.webdriver.firefox.service import Service\r\n\r\n        firefox_options = FirefoxOptions()\r\n        firefox_service = Service()\r\n\r\n        for arg in self.arguments:\r\n            firefox_options.add_argument(arg)\r\n\r\n        if self.headless:\r\n            firefox_options.add_argument(\"--headless\")\r\n        if self.binary_location is not None:\r\n            firefox_options.binary_location = self.binary_location\r\n        if self.executable_path is None:\r\n            firefox_service.path = self.executable_path\r\n        return Firefox(options=firefox_options, service=firefox_service)\r\n    else:\r\n        raise ValueError(\"Invalid browser specified. Use 'chrome' or 'firefox'.\")`\r\nHowever in testing I found this crashes when executable_path is not passed in with the follow Exception: NoSuchDriverException(f\"Unable to locate or obtain driver for {options.capabilities['browserName']}\"). This updated pull request revises to only pass Service object when executable_path is provided",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9814/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9814/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9813",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9813/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9813/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9813/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9813",
        "id": 1868301552,
        "node_id": "PR_kwDOIPDwls5Y3AQS",
        "number": 9813,
        "title": "Update SeleniumURLLoader to use webdriver Service in favor of deprecated executable_path parameter",
        "user": {
            "login": "aaravindan101",
            "id": 5491439,
            "node_id": "MDQ6VXNlcjU0OTE0Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5491439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaravindan101",
            "html_url": "https://github.com/aaravindan101",
            "followers_url": "https://api.github.com/users/aaravindan101/followers",
            "following_url": "https://api.github.com/users/aaravindan101/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaravindan101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaravindan101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaravindan101/subscriptions",
            "organizations_url": "https://api.github.com/users/aaravindan101/orgs",
            "repos_url": "https://api.github.com/users/aaravindan101/repos",
            "events_url": "https://api.github.com/users/aaravindan101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaravindan101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-27T00:00:42Z",
        "updated_at": "2023-08-27T00:12:36Z",
        "closed_at": "2023-08-27T00:12:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9813",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9813",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9813.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9813.patch",
            "merged_at": null
        },
        "body": "Description: This commit uses the new Service object in Selenium webdriver as executable_path has been [deprecated and removed in selenium version 4.11.2](https://github.com/SeleniumHQ/selenium/commit/9f5801c82fb3be3d5850707c46c3f8176e3ccd8e)\r\nIssue: https://github.com/langchain-ai/langchain/issues/9808\r\nTag Maintainer: @eyurtsev \r\n\r\n\r\nNote - \r\nFirst attempt was to create a Service object and pass empty if executable_path not provided as such: \r\n`def _get_driver(self) -> Union[\"Chrome\", \"Firefox\"]:\r\n        \"\"\"Create and return a WebDriver instance based on the specified browser.\r\n\r\n        Raises:\r\n            ValueError: If an invalid browser is specified.\r\n\r\n        Returns:\r\n            Union[Chrome, Firefox]: A WebDriver instance for the specified browser.\r\n        \"\"\"\r\n        if self.browser.lower() == \"chrome\":\r\n            from selenium.webdriver import Chrome\r\n            from selenium.webdriver.chrome.options import Options as ChromeOptions\r\n            from selenium.webdriver.chrome.service import Service\r\n\r\n            chrome_options = ChromeOptions()\r\n            chrome_service = Service()\r\n\r\n            for arg in self.arguments:\r\n                chrome_options.add_argument(arg)\r\n\r\n            if self.headless:\r\n                chrome_options.add_argument(\"--headless\")\r\n                chrome_options.add_argument(\"--no-sandbox\")\r\n            if self.binary_location is not None:\r\n                chrome_options.binary_location = self.binary_location\r\n            if self.executable_path is None:\r\n                chrome_service.path = self.executable_path\r\n            return Chrome(options=chrome_options, service=chrome_service)\r\n        elif self.browser.lower() == \"firefox\":\r\n            from selenium.webdriver import Firefox\r\n            from selenium.webdriver.firefox.options import Options as FirefoxOptions\r\n            from selenium.webdriver.firefox.service import Service\r\n\r\n            firefox_options = FirefoxOptions()\r\n            firefox_service = Service()\r\n\r\n            for arg in self.arguments:\r\n                firefox_options.add_argument(arg)\r\n\r\n            if self.headless:\r\n                firefox_options.add_argument(\"--headless\")\r\n            if self.binary_location is not None:\r\n                firefox_options.binary_location = self.binary_location\r\n            if self.executable_path is None:\r\n                firefox_service.path = self.executable_path\r\n            return Firefox(options=firefox_options, service=firefox_service)\r\n        else:\r\n            raise ValueError(\"Invalid browser specified. Use 'chrome' or 'firefox'.\")`\r\n\r\nHowever in testing I found this crashes when executable_path is not passed in with the follow Exception: NoSuchDriverException(f\"Unable to locate or obtain driver for {options.capabilities['browserName']}\"). This updated pull request revises to only pass Service object when executable_path is provided",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9813/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9813/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9812",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9812/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9812/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9812/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9812",
        "id": 1868296846,
        "node_id": "I_kwDOIPDwls5vW_KO",
        "number": 9812,
        "title": "Renaming RetrievalQAWithSources to RetrievalQAWithCitations",
        "user": {
            "login": "nik1097",
            "id": 20815651,
            "node_id": "MDQ6VXNlcjIwODE1NjUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/20815651?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nik1097",
            "html_url": "https://github.com/nik1097",
            "followers_url": "https://api.github.com/users/nik1097/followers",
            "following_url": "https://api.github.com/users/nik1097/following{/other_user}",
            "gists_url": "https://api.github.com/users/nik1097/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nik1097/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nik1097/subscriptions",
            "organizations_url": "https://api.github.com/users/nik1097/orgs",
            "repos_url": "https://api.github.com/users/nik1097/repos",
            "events_url": "https://api.github.com/users/nik1097/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nik1097/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-26T23:33:34Z",
        "updated_at": "2023-12-02T16:04:52Z",
        "closed_at": "2023-12-02T16:04:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHey, I'm trying to gather some empirical evidence that RetrievalQAWithSources chain often hallucinates to returns all sources rather than cite them.\r\nCurrent Issue:\r\nAssuming you have a retriever that returns 4 sources, RetrievalQAWithSources gets confused with the below prompt:\r\nGiven the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\").\r\nand usually returns all the 4 sources that were fetched by the retriever. \r\nPossible Solution:\r\nGiven the following extracted parts of a long document and a question, create a final answer and also include all references to cite your answer in CITATIONS.\n\n### Motivation\n\nHaving it named as \"SOURCES\" often leads to confusion in the prompt.\r\n\"cite\" involves referring to, acknowledging, or using a source or example to support a claim, idea, or statement.\n\n### Your contribution\n\nI can create a PR to carry forward this change, across the various places we use Citations. Please let me know the kind of evidence or information I'll have to present to make my case for it. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9812/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9811",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9811/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9811/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9811/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9811",
        "id": 1868294838,
        "node_id": "I_kwDOIPDwls5vW-q2",
        "number": 9811,
        "title": "ImportError: cannot import name 'StreamlitCallbackHandler' from 'langchain.callbacks' ",
        "user": {
            "login": "shawnesquivel",
            "id": 94336773,
            "node_id": "U_kgDOBZ93BQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/94336773?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shawnesquivel",
            "html_url": "https://github.com/shawnesquivel",
            "followers_url": "https://api.github.com/users/shawnesquivel/followers",
            "following_url": "https://api.github.com/users/shawnesquivel/following{/other_user}",
            "gists_url": "https://api.github.com/users/shawnesquivel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shawnesquivel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shawnesquivel/subscriptions",
            "organizations_url": "https://api.github.com/users/shawnesquivel/orgs",
            "repos_url": "https://api.github.com/users/shawnesquivel/repos",
            "events_url": "https://api.github.com/users/shawnesquivel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shawnesquivel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-26T23:22:26Z",
        "updated_at": "2023-09-19T02:01:31Z",
        "closed_at": "2023-08-27T05:15:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n**Background**\r\nI'm trying to run the Streamlit Callbacks example\r\n\r\nhttps://python.langchain.com/docs/integrations/callbacks/streamlit\r\n\r\nMy code is copy + paste but I get an error from the LangChain library import.\r\n\r\n**Error**\r\n```\r\nImportError: cannot import name 'StreamlitCallbackHandler' from 'langchain.callbacks' (/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/callbacks/__init__.py)\r\n```\r\n\r\n**What I tried**\r\n- Upgrading LangChain `pip install langchain --upgrade`\r\n- Reinstall `pip uninstall langchain` then `pip install langchain`\r\n\r\n\r\n**Version**\r\nlangchain 0.0.274                 \r\nstreamlit 1.24.1 \r\n\r\n**System**\r\nMac M2 Ventura \u201313.4.1 \r\n\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Run the code snippet `streamlit run app.py`\r\n2. Error message\r\n\r\n**Run the code with `streamlit run app.py`**\r\n```\r\nimport streamlit as st\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.agents import AgentType, initialize_agent, load_tools\r\nfrom langchain.callbacks import StreamlitCallbackHandler\r\n\r\nfrom dotenv import find_dotenv, load_dotenv\r\nload_dotenv(find_dotenv())\r\n\r\nst_callback = StreamlitCallbackHandler(st.container())\r\n\r\nllm = OpenAI(temperature=0, streaming=True)\r\ntools = load_tools([\"ddg-search\"])\r\nagent = initialize_agent(\r\n    tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True\r\n)\r\n\r\nif prompt := st.chat_input():\r\n    st.chat_message(\"user\").write(prompt)\r\n    with st.chat_message(\"assistant\"):\r\n        st_callback = StreamlitCallbackHandler(st.container())\r\n        response = agent.run(prompt, callbacks=[st_callback])\r\n        st.write(response)\r\n```\n\n### Expected behavior\n\nShould look like the tutorial\r\n\r\n<img width=\"844\" alt=\"image\" src=\"https://github.com/langchain-ai/langchain/assets/94336773/f5a5f166-4013-4c2b-9776-b268156c41f8\">\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9811/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9810",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9810/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9810/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9810/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9810",
        "id": 1868289453,
        "node_id": "PR_kwDOIPDwls5Y2-E_",
        "number": 9810,
        "title": "add gmail loader",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-26T22:52:58Z",
        "updated_at": "2023-08-28T00:18:10Z",
        "closed_at": "2023-08-28T00:18:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9810",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9810",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9810.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9810.patch",
            "merged_at": "2023-08-28T00:18:09Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9810/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9809",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9809/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9809/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9809/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9809",
        "id": 1868278357,
        "node_id": "PR_kwDOIPDwls5Y28CT",
        "number": 9809,
        "title": "Update SeleniumURLLoader to use webdriver Service in favor of deprecated executable_path parameter",
        "user": {
            "login": "aaravindan101",
            "id": 5491439,
            "node_id": "MDQ6VXNlcjU0OTE0Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5491439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaravindan101",
            "html_url": "https://github.com/aaravindan101",
            "followers_url": "https://api.github.com/users/aaravindan101/followers",
            "following_url": "https://api.github.com/users/aaravindan101/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaravindan101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaravindan101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaravindan101/subscriptions",
            "organizations_url": "https://api.github.com/users/aaravindan101/orgs",
            "repos_url": "https://api.github.com/users/aaravindan101/repos",
            "events_url": "https://api.github.com/users/aaravindan101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaravindan101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-26T21:55:21Z",
        "updated_at": "2023-08-26T23:50:40Z",
        "closed_at": "2023-08-26T23:50:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9809",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9809",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9809.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9809.patch",
            "merged_at": null
        },
        "body": "Description: This commit uses the new Service object in Selenium webdriver as executable_path has been [deprecated and removed in selenium version 4.11.2](https://github.com/SeleniumHQ/selenium/commit/9f5801c82fb3be3d5850707c46c3f8176e3ccd8e)\r\nIssue: [9808](https://github.com/langchain-ai/langchain/issues/9808)\r\nTag Maintainer: @eyurtsev \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9809/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9809/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9808",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9808/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9808/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9808/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9808",
        "id": 1868270215,
        "node_id": "I_kwDOIPDwls5vW4qH",
        "number": 9808,
        "title": "Issue: Selenium Webdriver parameter executable_path deprecated",
        "user": {
            "login": "aaravindan101",
            "id": 5491439,
            "node_id": "MDQ6VXNlcjU0OTE0Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5491439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaravindan101",
            "html_url": "https://github.com/aaravindan101",
            "followers_url": "https://api.github.com/users/aaravindan101/followers",
            "following_url": "https://api.github.com/users/aaravindan101/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaravindan101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaravindan101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaravindan101/subscriptions",
            "organizations_url": "https://api.github.com/users/aaravindan101/orgs",
            "repos_url": "https://api.github.com/users/aaravindan101/repos",
            "events_url": "https://api.github.com/users/aaravindan101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaravindan101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-26T21:15:49Z",
        "updated_at": "2023-12-02T16:04:57Z",
        "closed_at": "2023-12-02T16:04:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version 0.0.273\r\nselenium version 4.11.2\r\n\r\nIn version 4.11.2, [Selenium fully deprecated and removed executable_path parameter from webdriver](https://github.com/SeleniumHQ/selenium/commit/9f5801c82fb3be3d5850707c46c3f8176e3ccd8e) in favor of using Service class object to pass in path/executable_path parameter. This results in a crash when using SeleniumURLLoader with executable_path upon upgrading selenium to 4.11.2. \n\n### Who can help?\n\n@eyurtsev\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nUpgrade selenium to version 4.11.2. Load SeleniumURLLoader with executable_path parameter. \n\n### Expected behavior\n\nExpected Result: SeleniumURLLoader is instantiated \r\nActual Result: ERROR: WebDriver.__init__() got an unexpected keyword argument 'executable_path'",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9808/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9807",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9807/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9807/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9807/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9807",
        "id": 1868269407,
        "node_id": "I_kwDOIPDwls5vW4df",
        "number": 9807,
        "title": "It should be possible to pass client to SagemakerEndpointEmbeddings & SagemakerEndpoint class",
        "user": {
            "login": "firdousi-begum",
            "id": 117582467,
            "node_id": "U_kgDOBwIqgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/117582467?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/firdousi-begum",
            "html_url": "https://github.com/firdousi-begum",
            "followers_url": "https://api.github.com/users/firdousi-begum/followers",
            "following_url": "https://api.github.com/users/firdousi-begum/following{/other_user}",
            "gists_url": "https://api.github.com/users/firdousi-begum/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/firdousi-begum/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/firdousi-begum/subscriptions",
            "organizations_url": "https://api.github.com/users/firdousi-begum/orgs",
            "repos_url": "https://api.github.com/users/firdousi-begum/repos",
            "events_url": "https://api.github.com/users/firdousi-begum/events{/privacy}",
            "received_events_url": "https://api.github.com/users/firdousi-begum/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-26T21:11:58Z",
        "updated_at": "2023-12-02T16:05:02Z",
        "closed_at": "2023-12-02T16:05:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain 0.0.274, Python\r\n\r\n\n\n### Who can help?\n\n@hwchase17 @agola\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nWhen initializing the the SagemakerEndpointEmbeddings & SagemakerEndpoint class, I pass the client but still get the error:  Could not load credentials to authenticate with AWS client. Please check that credentials in the specified profile name are valid. (type=value_error)\r\n    content_handler = ContentHandler_LLM()\r\n    embeddings = SagemakerEndpoint(\r\n        client= get_sagemaker_client(),\r\n        endpoint_name= endpointName,\r\n        model_kwargs  = model_kwargs ,\r\n        content_handler=content_handler,\r\n    )\r\ncontent_handler = ContentHandler_Embeddings()\r\nembeddings = SagemakerEndpointEmbeddings(\r\n    client= get_sagemaker_client(),\r\n    endpoint_name= endpointName,\r\n    content_handler=content_handler,\r\n)\r\nAs you can see from the documentation below, the validate_environment function does not use the client that I am passing and instead tries creating its own client which causes the issue:\r\nSOURCE: https://api.python.langchain.com/en/latest/_modules/langchain/embeddings/sagemaker_endpoint.html#SagemakerEndpointEmbeddings\r\nSOURCE: https://api.python.langchain.com/en/latest/_modules/langchain/llms/sagemaker_endpoint.html#SagemakerEndpoint\r\n\r\n\n\n### Expected behavior\n\nPassing the client works with BedrockEmbeddings class. The validate_environment function checks if there is value in client, then it just returns the existing values. You can see from below snippet in the class:\r\nSOURCE: https://api.python.langchain.com/en/latest/_modules/langchain/embeddings/bedrock.html\r\n @root_validator()\r\n    def validate_environment(cls, values: Dict) -> Dict:\r\n        \"\"\"Validate that AWS credentials to and python package exists in environment.\"\"\"\r\n\r\n        if values[\"client\"] is not None:\r\n            return values\r\n\r\nPlease fix this in both the SagemakerEndpointEmbeddings and  SagemakerEndpoint classes to check if value already has client then just return the values as done in BedrockEmbeddings class above.\r\n\r\nMeanwhile, is there a work around for this?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9807/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9805",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9805/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9805/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9805/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9805",
        "id": 1868242221,
        "node_id": "PR_kwDOIPDwls5Y21RZ",
        "number": 9805,
        "title": "bump 274",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-26T19:09:33Z",
        "updated_at": "2023-08-26T19:16:27Z",
        "closed_at": "2023-08-26T19:16:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9805",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9805",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9805.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9805.patch",
            "merged_at": "2023-08-26T19:16:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9805/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9805/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9804",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9804/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9804/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9804/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9804",
        "id": 1868188378,
        "node_id": "I_kwDOIPDwls5vWkra",
        "number": 9804,
        "title": "DOC: How to Connect Database Agent with SqlServer",
        "user": {
            "login": "programmersEmperor",
            "id": 110212291,
            "node_id": "U_kgDOBpG0ww",
            "avatar_url": "https://avatars.githubusercontent.com/u/110212291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/programmersEmperor",
            "html_url": "https://github.com/programmersEmperor",
            "followers_url": "https://api.github.com/users/programmersEmperor/followers",
            "following_url": "https://api.github.com/users/programmersEmperor/following{/other_user}",
            "gists_url": "https://api.github.com/users/programmersEmperor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/programmersEmperor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/programmersEmperor/subscriptions",
            "organizations_url": "https://api.github.com/users/programmersEmperor/orgs",
            "repos_url": "https://api.github.com/users/programmersEmperor/repos",
            "events_url": "https://api.github.com/users/programmersEmperor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/programmersEmperor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-26T17:45:27Z",
        "updated_at": "2023-09-26T11:14:21Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nfrom langchain.agents import create_sql_agent\r\nfrom langchain.agents.agent_toolkits import SQLDatabaseToolkit\r\nfrom langchain.sql_database import SQLDatabase\r\nfrom langchain.llms.openai import OpenAI\r\nfrom langchain.agents import AgentExecutor\r\nfrom langchain.agents.agent_types import AgentType\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\n\r\ndb = SQLDatabase.from_uri(\"sqlite:///../../../../../notebooks/Chinook.db\")\r\ntoolkit = SQLDatabaseToolkit(db=db, llm=OpenAI(temperature=0))\r\n\r\n# how to connect to sql server instead of sqlite???\r\n\n\n### Idea or request for content:\n\nI need to connect with my sqlserver database, but the documention does not explain how to connect langchain database agent to sqlserver.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9804/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9804/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9803",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9803/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9803/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9803/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9803",
        "id": 1868177575,
        "node_id": "I_kwDOIPDwls5vWiCn",
        "number": 9803,
        "title": "GoogleDriveLoader - AttributeError: 'Credentials' object has no attribute 'with_scopes'",
        "user": {
            "login": "SynergyWiz",
            "id": 117956076,
            "node_id": "U_kgDOBwfd7A",
            "avatar_url": "https://avatars.githubusercontent.com/u/117956076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SynergyWiz",
            "html_url": "https://github.com/SynergyWiz",
            "followers_url": "https://api.github.com/users/SynergyWiz/followers",
            "following_url": "https://api.github.com/users/SynergyWiz/following{/other_user}",
            "gists_url": "https://api.github.com/users/SynergyWiz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SynergyWiz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SynergyWiz/subscriptions",
            "organizations_url": "https://api.github.com/users/SynergyWiz/orgs",
            "repos_url": "https://api.github.com/users/SynergyWiz/repos",
            "events_url": "https://api.github.com/users/SynergyWiz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SynergyWiz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-26T17:11:56Z",
        "updated_at": "2023-08-26T19:09:12Z",
        "closed_at": "2023-08-26T19:09:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nGoogle Auth version 2.22.0\r\nPython version 3.8.8\r\nlangchain version: 0.0.273\n\n### Who can help?\n\n@eyurtsev the GoogleDriveLoader does not seem to be working as expected. I get a error of AttributeError: 'Credentials' object has no attribute 'with_scopes'.\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI run the code below (and many other versions of the Google Drive code) to import data from Google Drive. However, no matter what I try I get an error of \"AttributeError: 'Credentials' object has no attribute 'with_scopes'\". The troubleshooting seems to indicate incompatibility with version of Google Auth and Python, but the versions are compatible. I have gone through all the documentation and tutorials online about connecting Google Drive to Langchain, and I have complete and verified every step multiple times. I am at a loss of what else to try to get langchain to connect to Google Drive. Thanks in advance for your help!!!\r\n\r\n\r\n\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.document_loaders import GoogleDriveLoader\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\n\r\nfolder_id = \"1ExuF7GUaeDzJpuDn8ThH6t8LBcmjAKE_\"\r\nloader = GoogleDriveLoader(\r\n    folder_id=folder_id,\r\n    recursive=False\r\n)\r\ndocs = loader.load()\r\n\r\ntext_splitter = RecursiveCharacterTextSplitter(\r\n    chunk_size=4000, chunk_overlap=0, separators=[\" \", \",\", \"\\n\"]\r\n    )\r\n\r\ntexts = text_splitter.split_documents(docs)\r\nembeddings = OpenAIEmbeddings()\r\ndb = Chroma.from_documents(texts, embeddings)\r\nretriever = db.as_retriever()\r\n\r\nllm = ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\")\r\nqa = RetrievalQA.from_chain_type(llm=llm, chain_type=\"stuff\", retriever=retriever)\r\n\r\nwhile True:\r\n    query = input(\"> \")\r\n    answer = qa.run(query)\r\n    print(answer)\n\n### Expected behavior\n\nI expect langchain to be able to connect to me Google Drive files and folders. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9803/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9802",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9802/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9802/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9802/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9802",
        "id": 1868175495,
        "node_id": "I_kwDOIPDwls5vWhiH",
        "number": 9802,
        "title": "Issue: vector store supports custom database connections?",
        "user": {
            "login": "maiqingqiang",
            "id": 1825679,
            "node_id": "MDQ6VXNlcjE4MjU2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1825679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maiqingqiang",
            "html_url": "https://github.com/maiqingqiang",
            "followers_url": "https://api.github.com/users/maiqingqiang/followers",
            "following_url": "https://api.github.com/users/maiqingqiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/maiqingqiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maiqingqiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maiqingqiang/subscriptions",
            "organizations_url": "https://api.github.com/users/maiqingqiang/orgs",
            "repos_url": "https://api.github.com/users/maiqingqiang/repos",
            "events_url": "https://api.github.com/users/maiqingqiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maiqingqiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-26T17:04:57Z",
        "updated_at": "2023-10-28T07:03:20Z",
        "closed_at": "2023-10-28T07:03:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nMay I inquire whether the vector stroe accommodates the provision for customized database connection pooling?\r\n\r\nTypically, opening a database connection is an expensive operation, especially if the database is remote.  Pooling keeps the connections active so that, when a connection is later requested, one of the active ones is used in preference to having to create another one.\r\n\r\n\n\n### Suggestion:\n\nMaybe it could be like this?\r\n\r\n```python\r\nengine = sqlalchemy.create_engine(connection_string, pool_size=10)\r\nconn = engine.connect()\r\n\r\nstore = PGVector(\r\n    custom_connection=conn,\r\n    embedding_function=embeddings\r\n)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9802/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9802/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9801",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9801/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9801/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9801/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9801",
        "id": 1868161417,
        "node_id": "PR_kwDOIPDwls5Y2l4i",
        "number": 9801,
        "title": "Adds dataview fields and tags to metadata #9800",
        "user": {
            "login": "dsummersl",
            "id": 30856,
            "node_id": "MDQ6VXNlcjMwODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/30856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dsummersl",
            "html_url": "https://github.com/dsummersl",
            "followers_url": "https://api.github.com/users/dsummersl/followers",
            "following_url": "https://api.github.com/users/dsummersl/following{/other_user}",
            "gists_url": "https://api.github.com/users/dsummersl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dsummersl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dsummersl/subscriptions",
            "organizations_url": "https://api.github.com/users/dsummersl/orgs",
            "repos_url": "https://api.github.com/users/dsummersl/repos",
            "events_url": "https://api.github.com/users/dsummersl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dsummersl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-26T16:18:04Z",
        "updated_at": "2023-09-04T12:48:52Z",
        "closed_at": "2023-09-03T22:56:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9801",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9801",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9801.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9801.patch",
            "merged_at": "2023-09-03T22:56:49Z"
        },
        "body": "Description: Adds tags and dataview fields to ObsidianLoader doc metadata.\r\n  - Issue: #9800, #4991\r\n  - Dependencies: none\r\n  - Tag maintainer: My best guess is @hwchase17 looking through the git logs\r\n  - Twitter handle: I don't use twitter, sorry!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9801/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9800",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9800/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9800/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9800/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9800",
        "id": 1868155973,
        "node_id": "I_kwDOIPDwls5vWcxF",
        "number": 9800,
        "title": "Add support tags and dataview fields to ObsidianLoader",
        "user": {
            "login": "dsummersl",
            "id": 30856,
            "node_id": "MDQ6VXNlcjMwODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/30856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dsummersl",
            "html_url": "https://github.com/dsummersl",
            "followers_url": "https://api.github.com/users/dsummersl/followers",
            "following_url": "https://api.github.com/users/dsummersl/following{/other_user}",
            "gists_url": "https://api.github.com/users/dsummersl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dsummersl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dsummersl/subscriptions",
            "organizations_url": "https://api.github.com/users/dsummersl/orgs",
            "repos_url": "https://api.github.com/users/dsummersl/repos",
            "events_url": "https://api.github.com/users/dsummersl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dsummersl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-26T16:02:26Z",
        "updated_at": "2023-12-02T16:05:07Z",
        "closed_at": "2023-12-02T16:05:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nObsidian markdown documents frequently have additional metadata beyond what is in the frontmatter: tags within the document, and (for many users) dataview plugin values.\r\n\r\nAdd support for this.\n\n### Motivation\n\nSurfacing tags and dataview fields would unlock more abilities for self-querying obsidian data (https://python.langchain.com/docs/modules/data_connection/retrievers/self_query/chroma_self_query)\n\n### Your contribution\n\nI plan to make a PR for this.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9800/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9800/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9798",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9798/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9798/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9798/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9798",
        "id": 1868085901,
        "node_id": "I_kwDOIPDwls5vWLqN",
        "number": 9798,
        "title": "Issue: RuntimeWarning: coroutine 'AsyncCallbackHandler.on_chat_model_start' was never awaited",
        "user": {
            "login": "alevinno",
            "id": 4241009,
            "node_id": "MDQ6VXNlcjQyNDEwMDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4241009?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alevinno",
            "html_url": "https://github.com/alevinno",
            "followers_url": "https://api.github.com/users/alevinno/followers",
            "following_url": "https://api.github.com/users/alevinno/following{/other_user}",
            "gists_url": "https://api.github.com/users/alevinno/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alevinno/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alevinno/subscriptions",
            "organizations_url": "https://api.github.com/users/alevinno/orgs",
            "repos_url": "https://api.github.com/users/alevinno/repos",
            "events_url": "https://api.github.com/users/alevinno/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alevinno/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-26T12:46:53Z",
        "updated_at": "2023-12-02T16:05:12Z",
        "closed_at": "2023-12-02T16:05:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHello, I tried to use AsyncFinalIteratorCallbackHandler (which inherits from AsyncCallbackHandler) to implement async streaming, then encountered following issue:\r\n\r\nlibs/langchain/langchain/callbacks/manager.py:301: RuntimeWarning: coroutine 'AsyncCallbackHandler.on_chat_model_start' was never awaited\r\n  getattr(handler, event_name)(*args, **kwargs)\r\n\r\nfollowing is the demo:\r\n\r\n`\r\nimport os\r\nimport asyncio\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.agents import AgentType\r\nfrom langchain.agents import initialize_agent\r\nfrom langchain.callbacks.streaming_aiter_final_only import AsyncFinalIteratorCallbackHandler\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"<your openai key>\"\r\n\r\nasync_streaming_handler = AsyncFinalIteratorCallbackHandler()\r\n\r\nmemory = ConversationBufferMemory(\r\n    memory_key=\"chat_history\", return_messages=True)\r\nllm = ChatOpenAI(temperature=0, streaming=True, model=\"gpt-3.5-turbo-16k-0613\")\r\nagent_chain = initialize_agent(\r\n    [], llm, agent=AgentType.CHAT_CONVERSATIONAL_REACT_DESCRIPTION, verbose=True, memory=memory)\r\n\r\n\r\nasync def streaming():\r\n    result = agent_chain.run(\r\n        'how to gain good reviews from customer?', callbacks=[async_streaming_handler])\r\n    print(f\"result: {result}\")\r\n    while True:\r\n        token = await async_streaming_handler.queue.get()\r\n        print(f\"async token: {token}\")\r\n        await asyncio.sleep(0.1)\r\n\r\nasyncio.run(streaming())\r\n\r\n`\r\nhow can I deal with it, could anyone help me?\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9798/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9798/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9797",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9797/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9797/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9797/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9797",
        "id": 1868070708,
        "node_id": "PR_kwDOIPDwls5Y2UsN",
        "number": 9797,
        "title": "Add ChatGLM for llm and chat_model by using ChatGLM API",
        "user": {
            "login": "etveritas",
            "id": 27916175,
            "node_id": "MDQ6VXNlcjI3OTE2MTc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/27916175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/etveritas",
            "html_url": "https://github.com/etveritas",
            "followers_url": "https://api.github.com/users/etveritas/followers",
            "following_url": "https://api.github.com/users/etveritas/following{/other_user}",
            "gists_url": "https://api.github.com/users/etveritas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/etveritas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/etveritas/subscriptions",
            "organizations_url": "https://api.github.com/users/etveritas/orgs",
            "repos_url": "https://api.github.com/users/etveritas/repos",
            "events_url": "https://api.github.com/users/etveritas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/etveritas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-08-26T11:50:52Z",
        "updated_at": "2023-11-16T07:05:42Z",
        "closed_at": "2023-09-19T23:17:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9797",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9797",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9797.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9797.patch",
            "merged_at": "2023-09-19T23:17:07Z"
        },
        "body": "using sample:\r\n```\r\nendpoint_url = API URL\r\nChatGLM_llm = ChatGLM(\r\n    endpoint_url=endpoint_url,\r\n    api_key=Your API Key by ChatGLM\r\n)\r\nprint(ChatGLM_llm(\"hello\"))\r\n```\r\n\r\n```\r\nmodel = ChatChatGLM(\r\n    chatglm_api_key=\"api_key\",\r\n    chatglm_api_base=\"api_base_url\",\r\n    model_name=\"model_name\"\r\n)\r\nchain = LLMChain(llm=model)\r\n```\r\nDescription: The call of ChatGLM has been adapted.\r\nIssue: The call of ChatGLM has been adapted.\r\nDependencies: Need python package `zhipuai` and `aiostream`\r\nTag maintainer: @baskaryan\r\nTwitter handle: None\r\n\r\nI remove the compatibility test for pydantic version 2, because pydantic v2 can't not pickle classmethod,but BaseModel use @root_validator is a classmethod decorator.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9797/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9797/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9795",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9795/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9795/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9795/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9795",
        "id": 1868010485,
        "node_id": "PR_kwDOIPDwls5Y2IPU",
        "number": 9795,
        "title": "Add ChatGLM API for llm and chat_model",
        "user": {
            "login": "etveritas",
            "id": 27916175,
            "node_id": "MDQ6VXNlcjI3OTE2MTc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/27916175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/etveritas",
            "html_url": "https://github.com/etveritas",
            "followers_url": "https://api.github.com/users/etveritas/followers",
            "following_url": "https://api.github.com/users/etveritas/following{/other_user}",
            "gists_url": "https://api.github.com/users/etveritas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/etveritas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/etveritas/subscriptions",
            "organizations_url": "https://api.github.com/users/etveritas/orgs",
            "repos_url": "https://api.github.com/users/etveritas/repos",
            "events_url": "https://api.github.com/users/etveritas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/etveritas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-26T10:09:54Z",
        "updated_at": "2023-08-26T11:49:03Z",
        "closed_at": "2023-08-26T11:49:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9795",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9795",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9795.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9795.patch",
            "merged_at": null
        },
        "body": "using sample:\r\n```\r\nendpoint_url = API URL\r\nChatGLM_llm = ChatGLM(\r\n    endpoint_url=endpoint_url,\r\n    api_key=Your API Key by ChatGLM\r\n)\r\nprint(ChatGLM_llm(\"hello\"))\r\n```\r\n\r\n```\r\nmodel = ChatChatGLM(\r\n    chatglm_api_key=\"api_key\",\r\n    chatglm_api_base=\"api_base_url\",\r\n    model_name=\"model_name\"\r\n)\r\nchain = LLMChain(llm=model)\r\n```\r\nDescription: The call of ChatGLM has been adapted.\r\nIssue: The call of ChatGLM has been adapted.\r\nDependencies: Need python package `zhipuai` and `aiostream`\r\nTag maintainer: None\r\nTwitter handle: None",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9795/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9795/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9794",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9794/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9794/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9794/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9794",
        "id": 1867985069,
        "node_id": "PR_kwDOIPDwls5Y2DGV",
        "number": 9794,
        "title": "docs: Fix a spelling mistake in adding_memory.ipynb",
        "user": {
            "login": "kkviks",
            "id": 56562130,
            "node_id": "MDQ6VXNlcjU2NTYyMTMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/56562130?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kkviks",
            "html_url": "https://github.com/kkviks",
            "followers_url": "https://api.github.com/users/kkviks/followers",
            "following_url": "https://api.github.com/users/kkviks/following{/other_user}",
            "gists_url": "https://api.github.com/users/kkviks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kkviks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kkviks/subscriptions",
            "organizations_url": "https://api.github.com/users/kkviks/orgs",
            "repos_url": "https://api.github.com/users/kkviks/repos",
            "events_url": "https://api.github.com/users/kkviks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kkviks/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-26T08:50:05Z",
        "updated_at": "2023-08-26T19:04:43Z",
        "closed_at": "2023-08-26T19:04:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9794",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9794",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9794.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9794.patch",
            "merged_at": "2023-08-26T19:04:43Z"
        },
        "body": "# Description \r\nThis pull request fixes a small spelling mistake found while reading docs.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9794/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9794/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9793",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9793/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9793/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9793/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9793",
        "id": 1867952779,
        "node_id": "PR_kwDOIPDwls5Y18cC",
        "number": 9793,
        "title": "Bugfix/jsonloader metadata",
        "user": {
            "login": "mgvalverde",
            "id": 32850810,
            "node_id": "MDQ6VXNlcjMyODUwODEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/32850810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgvalverde",
            "html_url": "https://github.com/mgvalverde",
            "followers_url": "https://api.github.com/users/mgvalverde/followers",
            "following_url": "https://api.github.com/users/mgvalverde/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgvalverde/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgvalverde/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgvalverde/subscriptions",
            "organizations_url": "https://api.github.com/users/mgvalverde/orgs",
            "repos_url": "https://api.github.com/users/mgvalverde/repos",
            "events_url": "https://api.github.com/users/mgvalverde/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgvalverde/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-26T07:24:09Z",
        "updated_at": "2023-09-03T23:01:43Z",
        "closed_at": "2023-09-03T23:01:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9793",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9793",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9793.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9793.patch",
            "merged_at": "2023-09-03T23:01:43Z"
        },
        "body": "Hi,\r\n\r\n  - Description: \r\n    - Solves the issue #6478. \r\n    - Includes some additional rework on the `JSONLoader` class:\r\n      - Getting metadata is decoupled from `_get_text`\r\n      - Validating metadata_func is perform now by `_validate_metadata_func`, instead of `_validate_content_key`\r\n  - Issue: #6478 \r\n  - Dependencies: NA\r\n  - Tag maintainer: @hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9793/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9793/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9792",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9792/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9792/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9792/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9792",
        "id": 1867947019,
        "node_id": "I_kwDOIPDwls5vVpwL",
        "number": 9792,
        "title": "Issue: what's the difference between this with RASA",
        "user": {
            "login": "yudidi",
            "id": 14090768,
            "node_id": "MDQ6VXNlcjE0MDkwNzY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/14090768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yudidi",
            "html_url": "https://github.com/yudidi",
            "followers_url": "https://api.github.com/users/yudidi/followers",
            "following_url": "https://api.github.com/users/yudidi/following{/other_user}",
            "gists_url": "https://api.github.com/users/yudidi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yudidi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yudidi/subscriptions",
            "organizations_url": "https://api.github.com/users/yudidi/orgs",
            "repos_url": "https://api.github.com/users/yudidi/repos",
            "events_url": "https://api.github.com/users/yudidi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yudidi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-26T07:06:24Z",
        "updated_at": "2023-12-02T16:05:17Z",
        "closed_at": "2023-12-02T16:05:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9792/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9791",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9791/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9791/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9791/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9791",
        "id": 1867941814,
        "node_id": "PR_kwDOIPDwls5Y16QZ",
        "number": 9791,
        "title": "docs: misc retrievers fixes",
        "user": {
            "login": "seamusp",
            "id": 22579106,
            "node_id": "MDQ6VXNlcjIyNTc5MTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/22579106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seamusp",
            "html_url": "https://github.com/seamusp",
            "followers_url": "https://api.github.com/users/seamusp/followers",
            "following_url": "https://api.github.com/users/seamusp/following{/other_user}",
            "gists_url": "https://api.github.com/users/seamusp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seamusp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seamusp/subscriptions",
            "organizations_url": "https://api.github.com/users/seamusp/orgs",
            "repos_url": "https://api.github.com/users/seamusp/repos",
            "events_url": "https://api.github.com/users/seamusp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seamusp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-26T06:50:29Z",
        "updated_at": "2023-09-04T06:16:09Z",
        "closed_at": "2023-09-04T03:26:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9791",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9791",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9791.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9791.patch",
            "merged_at": "2023-09-04T03:26:49Z"
        },
        "body": "Various miscellaneous fixes to most pages in the 'Retrievers' section of the documentation:\r\n- \"VectorStore\" and \"vectorstore\" changed to \"vector store\" for consistency\r\n- Various spelling, grammar, and formatting improvements for readability",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9791/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9791/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9790",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9790/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9790/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9790/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9790",
        "id": 1867937470,
        "node_id": "PR_kwDOIPDwls5Y15YR",
        "number": 9790,
        "title": "fix multipart email body retrieval",
        "user": {
            "login": "juppytt",
            "id": 46583939,
            "node_id": "MDQ6VXNlcjQ2NTgzOTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/46583939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juppytt",
            "html_url": "https://github.com/juppytt",
            "followers_url": "https://api.github.com/users/juppytt/followers",
            "following_url": "https://api.github.com/users/juppytt/following{/other_user}",
            "gists_url": "https://api.github.com/users/juppytt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juppytt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juppytt/subscriptions",
            "organizations_url": "https://api.github.com/users/juppytt/orgs",
            "repos_url": "https://api.github.com/users/juppytt/repos",
            "events_url": "https://api.github.com/users/juppytt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juppytt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-26T06:36:50Z",
        "updated_at": "2023-09-03T23:04:36Z",
        "closed_at": "2023-09-03T23:04:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9790",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9790",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9790.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9790.patch",
            "merged_at": "2023-09-03T23:04:36Z"
        },
        "body": "Description: \r\nGmail message retrieval in GmailGetMessage and GmailSearch returned an empty string when encountering multipart emails. This change correctly extracts the email body for multipart emails.\r\n\r\nDependencies: None\r\n\r\n@hwchase17 @vowelparrot \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9790/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9790/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9789",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9789/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9789/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9789/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9789",
        "id": 1867934719,
        "node_id": "PR_kwDOIPDwls5Y140P",
        "number": 9789,
        "title": "Fixed Typos and grammatical issues in document files",
        "user": {
            "login": "ShorthillsAI",
            "id": 141953346,
            "node_id": "U_kgDOCHYJQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/141953346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShorthillsAI",
            "html_url": "https://github.com/ShorthillsAI",
            "followers_url": "https://api.github.com/users/ShorthillsAI/followers",
            "following_url": "https://api.github.com/users/ShorthillsAI/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShorthillsAI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShorthillsAI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShorthillsAI/subscriptions",
            "organizations_url": "https://api.github.com/users/ShorthillsAI/orgs",
            "repos_url": "https://api.github.com/users/ShorthillsAI/repos",
            "events_url": "https://api.github.com/users/ShorthillsAI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShorthillsAI/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-26T06:28:26Z",
        "updated_at": "2023-09-03T23:09:14Z",
        "closed_at": "2023-09-03T23:09:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9789",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9789",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9789.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9789.patch",
            "merged_at": "2023-09-03T23:09:14Z"
        },
        "body": "Fixed typos and grammatical issues in document files.\r\n\r\n@baskaryan , @eyurtsev ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9789/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9789/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9787",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9787/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9787/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9787/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9787",
        "id": 1867931300,
        "node_id": "PR_kwDOIPDwls5Y14Hd",
        "number": 9787,
        "title": "Update mrkl docs",
        "user": {
            "login": "aiswaryasankar",
            "id": 7874177,
            "node_id": "MDQ6VXNlcjc4NzQxNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7874177?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aiswaryasankar",
            "html_url": "https://github.com/aiswaryasankar",
            "followers_url": "https://api.github.com/users/aiswaryasankar/followers",
            "following_url": "https://api.github.com/users/aiswaryasankar/following{/other_user}",
            "gists_url": "https://api.github.com/users/aiswaryasankar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aiswaryasankar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aiswaryasankar/subscriptions",
            "organizations_url": "https://api.github.com/users/aiswaryasankar/orgs",
            "repos_url": "https://api.github.com/users/aiswaryasankar/repos",
            "events_url": "https://api.github.com/users/aiswaryasankar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aiswaryasankar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-26T06:17:30Z",
        "updated_at": "2023-09-03T23:09:35Z",
        "closed_at": "2023-09-03T23:09:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9787",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9787",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9787.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9787.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9787/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9787/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9786",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9786/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9786/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9786/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9786",
        "id": 1867920013,
        "node_id": "I_kwDOIPDwls5vVjKN",
        "number": 9786,
        "title": "GPT4All callup failure",
        "user": {
            "login": "gillsgills",
            "id": 93571298,
            "node_id": "U_kgDOBZPI4g",
            "avatar_url": "https://avatars.githubusercontent.com/u/93571298?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gillsgills",
            "html_url": "https://github.com/gillsgills",
            "followers_url": "https://api.github.com/users/gillsgills/followers",
            "following_url": "https://api.github.com/users/gillsgills/following{/other_user}",
            "gists_url": "https://api.github.com/users/gillsgills/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gillsgills/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gillsgills/subscriptions",
            "organizations_url": "https://api.github.com/users/gillsgills/orgs",
            "repos_url": "https://api.github.com/users/gillsgills/repos",
            "events_url": "https://api.github.com/users/gillsgills/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gillsgills/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-26T05:44:11Z",
        "updated_at": "2023-12-11T16:01:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nColab environment\r\nLangChain version: 0.0.152\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nPlease follow the tutorial [here](https://learn.activeloop.ai/courses/take/langchain/multimedia/46317672-using-the-open-source-gpt4all-model-locally) and run the code below to reproduce\r\n```\r\ntemplate = \"\"\"Question: {question}\r\n\r\nAnswer: Let's answer in two sentence while being funny.\"\"\"\r\n\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\n\r\ncallback_manager = CallbackManager([StreamingStdOutCallbackHandler()])\r\nllm = GPT4All(model=\"./models/ggml-model-q4_0.bin\", callback_manager=callback_manager, verbose=True)\r\nllm_chain = LLMChain(prompt=prompt, llm=llm)\r\n\r\nquestion = \"What happens when it rains somewhere?\"\r\nllm_chain.run(question)\r\n```\n\n### Expected behavior\n\nTypeError: GPT4All.generate() got an unexpected keyword argument 'n_ctx'",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9786/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9786/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9785",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9785/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9785/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9785/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9785",
        "id": 1867894013,
        "node_id": "PR_kwDOIPDwls5Y1wme",
        "number": 9785,
        "title": "Update json_loader.py: encoding bug",
        "user": {
            "login": "liunux4odoo",
            "id": 41217877,
            "node_id": "MDQ6VXNlcjQxMjE3ODc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/41217877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liunux4odoo",
            "html_url": "https://github.com/liunux4odoo",
            "followers_url": "https://api.github.com/users/liunux4odoo/followers",
            "following_url": "https://api.github.com/users/liunux4odoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/liunux4odoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liunux4odoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liunux4odoo/subscriptions",
            "organizations_url": "https://api.github.com/users/liunux4odoo/orgs",
            "repos_url": "https://api.github.com/users/liunux4odoo/repos",
            "events_url": "https://api.github.com/users/liunux4odoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liunux4odoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-26T04:11:56Z",
        "updated_at": "2023-09-03T23:16:03Z",
        "closed_at": "2023-09-03T23:16:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9785",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9785",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9785.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9785.patch",
            "merged_at": "2023-09-03T23:16:02Z"
        },
        "body": "JSONLoader.load does not specify `encoding` in `self.file_path.read_text()` as `self.file_path.open()`\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9785/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9785/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9784",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9784/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9784/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9784/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9784",
        "id": 1867872128,
        "node_id": "PR_kwDOIPDwls5Y1sFj",
        "number": 9784,
        "title": "typo: funtions --> functions",
        "user": {
            "login": "thatfiredev",
            "id": 16766726,
            "node_id": "MDQ6VXNlcjE2NzY2NzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16766726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thatfiredev",
            "html_url": "https://github.com/thatfiredev",
            "followers_url": "https://api.github.com/users/thatfiredev/followers",
            "following_url": "https://api.github.com/users/thatfiredev/following{/other_user}",
            "gists_url": "https://api.github.com/users/thatfiredev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thatfiredev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thatfiredev/subscriptions",
            "organizations_url": "https://api.github.com/users/thatfiredev/orgs",
            "repos_url": "https://api.github.com/users/thatfiredev/repos",
            "events_url": "https://api.github.com/users/thatfiredev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thatfiredev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-26T02:58:45Z",
        "updated_at": "2023-08-26T18:47:47Z",
        "closed_at": "2023-08-26T18:47:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9784",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9784",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9784.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9784.patch",
            "merged_at": "2023-08-26T18:47:47Z"
        },
        "body": "Minor typo in the extractions use-case",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9784/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9784/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9783",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9783/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9783/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9783/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9783",
        "id": 1867861639,
        "node_id": "I_kwDOIPDwls5vVU6H",
        "number": 9783,
        "title": "document loader google drive for javascript version",
        "user": {
            "login": "JCASTANO",
            "id": 11246916,
            "node_id": "MDQ6VXNlcjExMjQ2OTE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11246916?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JCASTANO",
            "html_url": "https://github.com/JCASTANO",
            "followers_url": "https://api.github.com/users/JCASTANO/followers",
            "following_url": "https://api.github.com/users/JCASTANO/following{/other_user}",
            "gists_url": "https://api.github.com/users/JCASTANO/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JCASTANO/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JCASTANO/subscriptions",
            "organizations_url": "https://api.github.com/users/JCASTANO/orgs",
            "repos_url": "https://api.github.com/users/JCASTANO/repos",
            "events_url": "https://api.github.com/users/JCASTANO/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JCASTANO/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-26T02:19:29Z",
        "updated_at": "2023-12-02T16:05:22Z",
        "closed_at": "2023-12-02T16:05:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHi, Actually exists a document loader for Google Drive in the Python version, I would like to propose this feature in the javascript version, it is important to our company.\n\n### Motivation\n\nHi, Actually exists a document loader for Google Drive in the Python version, I would like to propose this feature in the javascript version, it is important to our company.\n\n### Your contribution\n\nno :( I don\u00b4t have the knowledge",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9783/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9783/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9782",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9782/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9782/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9782/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9782",
        "id": 1867853586,
        "node_id": "PR_kwDOIPDwls5Y1oTy",
        "number": 9782,
        "title": "docs: Fix `CustomLLM` and `Question_answering` docs",
        "user": {
            "login": "toddkim95",
            "id": 42592581,
            "node_id": "MDQ6VXNlcjQyNTkyNTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/42592581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toddkim95",
            "html_url": "https://github.com/toddkim95",
            "followers_url": "https://api.github.com/users/toddkim95/followers",
            "following_url": "https://api.github.com/users/toddkim95/following{/other_user}",
            "gists_url": "https://api.github.com/users/toddkim95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toddkim95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toddkim95/subscriptions",
            "organizations_url": "https://api.github.com/users/toddkim95/orgs",
            "repos_url": "https://api.github.com/users/toddkim95/repos",
            "events_url": "https://api.github.com/users/toddkim95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toddkim95/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-26T01:55:49Z",
        "updated_at": "2023-09-05T14:38:50Z",
        "closed_at": "2023-09-03T23:15:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9782",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9782",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9782.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9782.patch",
            "merged_at": "2023-09-03T23:15:46Z"
        },
        "body": "### Description\r\n- Update `CustomLLM._call`: Corrected the _call method in CustomLLM to include **kwargs, ensuring consistency with parent class.\r\n- Update `Question_answering`: To fix `Page not found` error\r\n   - https://python.langchain.com/docs/use_cases/code -> https://python.langchain.com/docs/use_cases/code_understanding\r\n\r\n### Issue\r\nN/A\r\n\r\n### Dependencies\r\nN/A\r\n\r\n### Tag maintainer\r\nN/A\r\n\r\n### Twitter handle\r\nN/A",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9782/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9782/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9781",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9781/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9781/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9781/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9781",
        "id": 1867822808,
        "node_id": "PR_kwDOIPDwls5Y1hrc",
        "number": 9781,
        "title": "Issue #2241 Support nested code blocks in agent response JSON.",
        "user": {
            "login": "wnmurphy",
            "id": 8880923,
            "node_id": "MDQ6VXNlcjg4ODA5MjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8880923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wnmurphy",
            "html_url": "https://github.com/wnmurphy",
            "followers_url": "https://api.github.com/users/wnmurphy/followers",
            "following_url": "https://api.github.com/users/wnmurphy/following{/other_user}",
            "gists_url": "https://api.github.com/users/wnmurphy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wnmurphy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wnmurphy/subscriptions",
            "organizations_url": "https://api.github.com/users/wnmurphy/orgs",
            "repos_url": "https://api.github.com/users/wnmurphy/repos",
            "events_url": "https://api.github.com/users/wnmurphy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wnmurphy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-26T00:41:19Z",
        "updated_at": "2023-11-10T22:03:54Z",
        "closed_at": "2023-11-10T22:03:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9781",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9781",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9781.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9781.patch",
            "merged_at": null
        },
        "body": "Resolves https://github.com/langchain-ai/langchain/issues/2241.\r\n\r\nConversationalChatAgent prompt contains JSON examples nested in triple-ticked codeblocks.\r\n\r\nWhen response contains a triple-ticked codeblock, this breaks the response.\r\n\r\nPR updates prompt to use quadruple-ticked code blocks, enabling responses to include code examples in markdown.\r\n\r\ncc: @hwchase17 @agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9781/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9781/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9780",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9780/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9780/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9780/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9780",
        "id": 1867724844,
        "node_id": "I_kwDOIPDwls5vUzgs",
        "number": 9780,
        "title": "RetrievalQA for document comparison is not working for similar type of questions.",
        "user": {
            "login": "ankitshubham97",
            "id": 16755676,
            "node_id": "MDQ6VXNlcjE2NzU1Njc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16755676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ankitshubham97",
            "html_url": "https://github.com/ankitshubham97",
            "followers_url": "https://api.github.com/users/ankitshubham97/followers",
            "following_url": "https://api.github.com/users/ankitshubham97/following{/other_user}",
            "gists_url": "https://api.github.com/users/ankitshubham97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ankitshubham97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ankitshubham97/subscriptions",
            "organizations_url": "https://api.github.com/users/ankitshubham97/orgs",
            "repos_url": "https://api.github.com/users/ankitshubham97/repos",
            "events_url": "https://api.github.com/users/ankitshubham97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ankitshubham97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-25T21:54:12Z",
        "updated_at": "2023-12-01T16:06:23Z",
        "closed_at": "2023-12-01T16:06:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npydantic==1.10.12\r\nlangchain==0.0.271\r\n\r\nSystem: MacOS Ventura 13.5 (22G74)\r\n\r\nPython 3.9.6\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHere is the main python file:\r\n\r\n```\r\nfrom dotenv import load_dotenv\r\nload_dotenv()\r\n\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.document_loaders import PyPDFLoader\r\nfrom langchain.agents import Tool\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.document_loaders import PyPDFLoader\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.agents import initialize_agent\r\nfrom langchain.agents import AgentType\r\nfrom pydantic import BaseModel, Field\r\n\r\nclass DocumentInput(BaseModel):\r\n    question: str = Field()  \r\n\r\nllm = ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\")\r\n\r\ntools = []\r\nfiles = [\r\n    {\r\n        \"name\": \"alphabet-earnings\",\r\n        \"path\": \"https://abc.xyz/investor/static/pdf/2023Q1_alphabet_earnings_release.pdf\",\r\n    },\r\n    {\r\n        \"name\": \"tesla-earnings\",\r\n        \"path\": \"https://digitalassets.tesla.com/tesla-contents/image/upload/IR/TSLA-Q1-2023-Update\",\r\n    },\r\n]\r\n\r\nfor file in files:\r\n    print(f\"Loading {file['name']} with path {file['path']}\")\r\n    loader = PyPDFLoader(file[\"path\"])\r\n    pages = loader.load_and_split()\r\n    text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\n    docs = text_splitter.split_documents(pages)\r\n    embeddings = OpenAIEmbeddings()\r\n    retriever = FAISS.from_documents(docs, embeddings).as_retriever()\r\n\r\n    # Wrap retrievers in a Tool\r\n    tools.append(\r\n        Tool(\r\n            args_schema=DocumentInput,\r\n            name=file[\"name\"],\r\n            description=f\"useful when you want to answer questions about {file['name']}\",\r\n            func=RetrievalQA.from_chain_type(llm=llm, retriever=retriever),\r\n        )\r\n    )\r\n\r\nagent = initialize_agent(\r\n    agent=AgentType.OPENAI_FUNCTIONS,\r\n    tools=tools,\r\n    llm=llm,\r\n    verbose=True,\r\n)\r\n\r\ncomparison = agent({\"input\": \"which one has higher earning?\"})\r\nprint(comparison)\r\n\r\nprint('-------------------------------')\r\n\r\ncomparison = agent({\"input\": \"did alphabet or tesla have more revenue?\"})\r\nprint(comparison)\r\n```\r\n\r\nThe python version is 3.9.6 and pydantic==1.10.12 and langchain==0.0.271\r\nRun the code using python main.py\r\n\r\nHere is the output:\r\n\r\n```\r\nLoading alphabet-earnings with path https://abc.xyz/investor/static/pdf/2023Q1_alphabet_earnings_release.pdf\r\nLoading tesla-earnings with path https://digitalassets.tesla.com/tesla-contents/image/upload/IR/TSLA-Q1-2023-Update\r\n\r\n\r\n> Entering new AgentExecutor chain...\r\nWhich companies' earnings are you referring to?\r\n\r\n> Finished chain.\r\n{'input': 'which one has higher earning?', 'output': \"Which companies' earnings are you referring to?\"}\r\n-------------------------------\r\n\r\n\r\n> Entering new AgentExecutor chain...\r\n\r\nInvoking: `alphabet-earnings` with `{'question': 'revenue'}`\r\n\r\n\r\n{'query': 'revenue', 'result': 'The revenue for Alphabet Inc. for the quarter ended March 31, 2023, was $69,787 million.'}\r\nInvoking: `tesla-earnings` with `{'question': 'revenue'}`\r\n\r\n\r\n{'query': 'revenue', 'result': 'Total revenue for Q1-2023 was $23.3 billion.'}Alphabet Inc. had more revenue than Tesla. Alphabet's revenue for the quarter ended March 31, 2023, was $69,787 million, while Tesla's total revenue for Q1-2023 was $23.3 billion.\r\n\r\n> Finished chain.\r\n{'input': 'did alphabet or tesla have more revenue?', 'output': \"Alphabet Inc. had more revenue than Tesla. Alphabet's revenue for the quarter ended March 31, 2023, was $69,787 million, while Tesla's total revenue for Q1-2023 was $23.3 billion.\"}\r\n```\n\n### Expected behavior\n\nI expect that for the question 'which one has higher earning?' also gives a good answer just like it did when the question asked was 'did alphabet or tesla have more revenue?' instead.\r\n\r\nI was following this guide: https://python.langchain.com/docs/integrations/toolkits/document_comparison_toolkit",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9780/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9779",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9779/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9779/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9779/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9779",
        "id": 1867690529,
        "node_id": "PR_kwDOIPDwls5Y1FN5",
        "number": 9779,
        "title": "Code LLaMA in code understanding use case",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T21:12:03Z",
        "updated_at": "2023-08-25T21:24:39Z",
        "closed_at": "2023-08-25T21:24:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9779",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9779",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9779.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9779.patch",
            "merged_at": "2023-08-25T21:24:38Z"
        },
        "body": "Update Code Understanding use case doc w/ Code-llama.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9779/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9779/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9778",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9778/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9778/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9778/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9778",
        "id": 1867657651,
        "node_id": "I_kwDOIPDwls5vUjGz",
        "number": 9778,
        "title": "Pass headers arg (requests library) to loaders that fetch from web",
        "user": {
            "login": "OmriNach",
            "id": 32659330,
            "node_id": "MDQ6VXNlcjMyNjU5MzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/32659330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OmriNach",
            "html_url": "https://github.com/OmriNach",
            "followers_url": "https://api.github.com/users/OmriNach/followers",
            "following_url": "https://api.github.com/users/OmriNach/following{/other_user}",
            "gists_url": "https://api.github.com/users/OmriNach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OmriNach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OmriNach/subscriptions",
            "organizations_url": "https://api.github.com/users/OmriNach/orgs",
            "repos_url": "https://api.github.com/users/OmriNach/repos",
            "events_url": "https://api.github.com/users/OmriNach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OmriNach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T20:39:29Z",
        "updated_at": "2023-12-01T16:06:27Z",
        "closed_at": "2023-12-01T16:06:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nSome urls will return status code 403 if the right headers are not passed to the requests.get(path) function. My workaround was to provide the headers of that website to get the approval from the server. Would be great to be able to pass headers to PyMuPDFLoader and all the other web based document_loaders \r\n\r\nheaders = {\r\n            \"User-Agent\": \"Chrome/109.0.5414.119\",\r\n            \"Referer\": \"https://www.ncbi.nlm.nih.gov\" if 'ncbi' in self.file_path else None\r\n            }\r\n            r = requests.get(self.file_path, headers=headers)\r\n\r\nthe execution would be PyMuPDF(path, headers).load() and if it detects that headers is provided itll provide it downstream to 'get'\n\n### Motivation\n\nSome urls will return status code 403 if the right headers are not passed to the requests.get(path) function. My workaround was to provide the headers of that website to get the approval from the server. Would be great to be able to pass headers to PyMuPDFLoader and all the other web based document_loaders \r\n\r\nMainly an issue with websites like NCBI\n\n### Your contribution\n\nNot experienced enough",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9778/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9778/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9776",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9776/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9776/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9776/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9776",
        "id": 1867592455,
        "node_id": "I_kwDOIPDwls5vUTMH",
        "number": 9776,
        "title": "ConversationChain sends malformatted requests to server",
        "user": {
            "login": "tdene",
            "id": 34819528,
            "node_id": "MDQ6VXNlcjM0ODE5NTI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/34819528?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tdene",
            "html_url": "https://github.com/tdene",
            "followers_url": "https://api.github.com/users/tdene/followers",
            "following_url": "https://api.github.com/users/tdene/following{/other_user}",
            "gists_url": "https://api.github.com/users/tdene/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tdene/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tdene/subscriptions",
            "organizations_url": "https://api.github.com/users/tdene/orgs",
            "repos_url": "https://api.github.com/users/tdene/repos",
            "events_url": "https://api.github.com/users/tdene/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tdene/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-25T19:37:16Z",
        "updated_at": "2023-12-07T16:06:30Z",
        "closed_at": "2023-12-07T16:06:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version 0.0.273\r\nPython version 3.8.10\r\nUbuntu 20.04.5 LTS\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRun the following code:\r\n\r\n```\r\nMY_MODEL_NAME=\"SUBSTITUTE_THIS_WITH_YOUR_OWN_MODEL_FOR_REPRODUCTION\"\r\n\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.chains import ConversationChain\r\nfrom langchain.memory import ConversationBufferMemory\r\n\r\nllm = ChatOpenAI(temperature=0.1, model=MY_MODEL_NAME)\r\nmemory = ConversationBufferMemory(return_messages=True)\r\nconversation = ConversationChain(llm=llm, memory=memory) \r\n\r\nmessage1 = \"Howdy there\"\r\nresponse1 = conversation(message1)\r\nprint(response1)\r\nmessage2 = \"How's it going?\"\r\nresponse2 = conversation(message2)\r\nprint(response2)\r\n```\r\n\r\nInspect the requests sent to the server. They will resemble the following packets received by my own server:\r\n\r\nrequest1:\r\n```\r\n'messages': [{'role': 'user', 'content': 'The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\\n\\nCurrent conversation:\\n[]\\nHuman: Howdy there\\nAI:'}]\r\n```\r\n\r\nrequest2:\r\n```\r\n'messages': [{'role': 'user', 'content': \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\\n\\nCurrent conversation:\\n[HumanMessage(content='Howdy there', additional_kwargs={}, example=False), AIMessage(content='Howdy! How can I help you today?\\\\n', additional_kwargs={}, example=False)]\\nHuman: How's it going?\\nAI:\"}]\r\n```\r\n\r\nNote that these requests are malformatted.\n\n### Expected behavior\n\nThere are two issues.\r\n\r\nFirst, the `messages` packet is clearly malformatted, containing HumanMessage and AIMessage strings.\r\n\r\nSecond, the `messages` packet only has one conversation turn, and there appears to be no options within the ConversationChain class to allow for multiple turns.\r\nThis is particularly problematic as the ConversationChain class requires the user to know what turn tokens are appropriate to use. The user cannot and should not be expected to have knowledge of how the model was trained: there should be an option to leave this up to the server to decide.\r\n\r\nMy expected (and required for my product) behavior is for the two requests to be formatted as follows.\r\nrequest1:\r\n```\r\n'messages': [{'role': 'user', 'content': 'Howdy there'}]\r\n```\r\n\r\nrequest2:\r\n```\r\n'messages': [{'role': 'user', 'content': 'Howdy there'}, {'role': 'assistant', 'content': 'Howdy! How can I help you today?\\\\n'}, {'role': 'user', 'content': \"How's it going?\"}]\r\n```\r\n\r\nUltimately it is confusing why `conversation(message1); conversation(message2);` sends a different request to the server back-end than `llm([HumanMessage(content=message1), AIMessage(content=response1), HumanMessage(content=message2)])` does.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9776/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9776/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9775",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9775/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9775/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9775/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9775",
        "id": 1867501019,
        "node_id": "PR_kwDOIPDwls5Y0b_8",
        "number": 9775,
        "title": "fixed regex to match sources for all cases, also includes source",
        "user": {
            "login": "nik1097",
            "id": 20815651,
            "node_id": "MDQ6VXNlcjIwODE1NjUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/20815651?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nik1097",
            "html_url": "https://github.com/nik1097",
            "followers_url": "https://api.github.com/users/nik1097/followers",
            "following_url": "https://api.github.com/users/nik1097/following{/other_user}",
            "gists_url": "https://api.github.com/users/nik1097/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nik1097/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nik1097/subscriptions",
            "organizations_url": "https://api.github.com/users/nik1097/orgs",
            "repos_url": "https://api.github.com/users/nik1097/repos",
            "events_url": "https://api.github.com/users/nik1097/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nik1097/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5463330795,
                "node_id": "LA_kwDOIPDwls8AAAABRaPP6w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20test",
                "name": "needs test",
                "color": "E99695",
                "default": false,
                "description": "PR needs to be updated with tests"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-25T18:16:29Z",
        "updated_at": "2023-08-26T01:10:33Z",
        "closed_at": "2023-08-26T01:10:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9775",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9775",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9775.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9775.patch",
            "merged_at": "2023-08-26T01:10:33Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: Updated the regex to handle all the different cases for string matching (SOURCES, sources, Sources), \r\n  - Issue: https://github.com/langchain-ai/langchain/issues/9774\r\n  - Dependencies: N/A\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9775/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9775/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9774",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9774/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9774/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9774/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9774",
        "id": 1867473509,
        "node_id": "I_kwDOIPDwls5vT2Jl",
        "number": 9774,
        "title": "The RetrievalQAWithSourcesChain with the ExamplePrompt doesn't always return SOURCES as part of it's answers.",
        "user": {
            "login": "nik1097",
            "id": 20815651,
            "node_id": "MDQ6VXNlcjIwODE1NjUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/20815651?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nik1097",
            "html_url": "https://github.com/nik1097",
            "followers_url": "https://api.github.com/users/nik1097/followers",
            "following_url": "https://api.github.com/users/nik1097/following{/other_user}",
            "gists_url": "https://api.github.com/users/nik1097/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nik1097/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nik1097/subscriptions",
            "organizations_url": "https://api.github.com/users/nik1097/orgs",
            "repos_url": "https://api.github.com/users/nik1097/repos",
            "events_url": "https://api.github.com/users/nik1097/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nik1097/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-25T17:57:20Z",
        "updated_at": "2023-12-02T16:05:32Z",
        "closed_at": "2023-12-02T16:05:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "https://github.com/langchain-ai/langchain/blob/709a67d9bfcff475356924d8461140052dd418f7/libs/langchain/langchain/chains/qa_with_sources/base.py#L123\r\n\r\nI've noticed that the retrieval qa chain doesn't always return SOURCES, it sometimes returns \"Sources\", \"sources\" or \"source\".",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9774/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9774/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9773",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9773/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9773/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9773/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9773",
        "id": 1867424178,
        "node_id": "I_kwDOIPDwls5vTqGy",
        "number": 9773,
        "title": "Issue: SagemakerEndpoint does not support async calls",
        "user": {
            "login": "rasharab",
            "id": 3806658,
            "node_id": "MDQ6VXNlcjM4MDY2NTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3806658?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rasharab",
            "html_url": "https://github.com/rasharab",
            "followers_url": "https://api.github.com/users/rasharab/followers",
            "following_url": "https://api.github.com/users/rasharab/following{/other_user}",
            "gists_url": "https://api.github.com/users/rasharab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rasharab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rasharab/subscriptions",
            "organizations_url": "https://api.github.com/users/rasharab/orgs",
            "repos_url": "https://api.github.com/users/rasharab/repos",
            "events_url": "https://api.github.com/users/rasharab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rasharab/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T17:21:24Z",
        "updated_at": "2023-12-01T16:06:42Z",
        "closed_at": "2023-12-01T16:06:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nRight now, the Sagemaker Inference Endpoint LLM does not allow for async requests and it's a performance bottleneck.\r\nI have an API gateway set up such that I have a restful api endpoint backed by the sagemaker inference endpoint.\r\n\r\nIn an ideal world:\r\n1. Langchain should allow for arbitrary http requests to a backend LLM of our choice fronted by your LLM interfaces. This way, we can standardize async calls for this sort of flow.\r\n2. SagemakerEndpoint should allow for async requests.\r\n\r\nIs this feasible?\r\nDoes this exist at the moment?\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9773/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9773/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9772",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9772/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9772/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9772/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9772",
        "id": 1867357342,
        "node_id": "PR_kwDOIPDwls5Yz9Cu",
        "number": 9772,
        "title": "Cassandra support for LLM cache (exact-match and semantic)",
        "user": {
            "login": "hemidactylus",
            "id": 14221764,
            "node_id": "MDQ6VXNlcjE0MjIxNzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/14221764?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemidactylus",
            "html_url": "https://github.com/hemidactylus",
            "followers_url": "https://api.github.com/users/hemidactylus/followers",
            "following_url": "https://api.github.com/users/hemidactylus/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemidactylus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemidactylus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemidactylus/subscriptions",
            "organizations_url": "https://api.github.com/users/hemidactylus/orgs",
            "repos_url": "https://api.github.com/users/hemidactylus/repos",
            "events_url": "https://api.github.com/users/hemidactylus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemidactylus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-25T16:35:37Z",
        "updated_at": "2023-09-14T00:27:13Z",
        "closed_at": "2023-09-04T03:27:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9772",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9772",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9772.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9772.patch",
            "merged_at": "2023-09-04T03:27:02Z"
        },
        "body": "This PR implements two new classes in the cache module: `CassandraCache` and `CassandraSemanticCache`, similar in structure and functionality to their Redis counterpart: providing a cache for the response to a (prompt, llm) pair.\r\n\r\nIntegration tests are included. Moreover, linting and type checks are all passing on my machine.\r\n\r\nDependencies: the `pyproject.toml` and `poetry.lock` have the newest version of cassIO (the very same as in the Cassandra vector store metadata PR, submitted as #9280).\r\n\r\nIf I may suggest, this issue and #9280 might be reviewed together (as they bring the same poetry changes along), so I'm tagging @baskaryan who already helped out a little with poetry-related conflicts there. (Thank you!)\r\n\r\nI'd be happy to add a short notebook if this is deemed necessary (but it seems to me that, contrary e.g. to vector stores, caches are not covered in specific notebooks).\r\n\r\nThank you!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9772/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9771",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9771/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9771/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9771/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9771",
        "id": 1867248720,
        "node_id": "PR_kwDOIPDwls5Yzk8C",
        "number": 9771,
        "title": "fix broken wandb link in debugging page",
        "user": {
            "login": "ash0ts",
            "id": 93145909,
            "node_id": "U_kgDOBY1LNQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/93145909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ash0ts",
            "html_url": "https://github.com/ash0ts",
            "followers_url": "https://api.github.com/users/ash0ts/followers",
            "following_url": "https://api.github.com/users/ash0ts/following{/other_user}",
            "gists_url": "https://api.github.com/users/ash0ts/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ash0ts/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ash0ts/subscriptions",
            "organizations_url": "https://api.github.com/users/ash0ts/orgs",
            "repos_url": "https://api.github.com/users/ash0ts/repos",
            "events_url": "https://api.github.com/users/ash0ts/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ash0ts/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T15:25:36Z",
        "updated_at": "2023-08-25T22:34:08Z",
        "closed_at": "2023-08-25T22:34:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9771",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9771",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9771.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9771.patch",
            "merged_at": "2023-08-25T22:34:08Z"
        },
        "body": "  - Description: Fix broken hyperlink in debugging page",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9771/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9771/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9770",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9770/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9770/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9770/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9770",
        "id": 1867218625,
        "node_id": "PR_kwDOIPDwls5YzeYm",
        "number": 9770,
        "title": "Add neo4j vector support",
        "user": {
            "login": "tomasonjo",
            "id": 19948365,
            "node_id": "MDQ6VXNlcjE5OTQ4MzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/19948365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomasonjo",
            "html_url": "https://github.com/tomasonjo",
            "followers_url": "https://api.github.com/users/tomasonjo/followers",
            "following_url": "https://api.github.com/users/tomasonjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomasonjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomasonjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomasonjo/subscriptions",
            "organizations_url": "https://api.github.com/users/tomasonjo/orgs",
            "repos_url": "https://api.github.com/users/tomasonjo/repos",
            "events_url": "https://api.github.com/users/tomasonjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomasonjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-25T15:04:30Z",
        "updated_at": "2023-08-29T14:54:21Z",
        "closed_at": "2023-08-29T14:54:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9770",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9770",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9770.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9770.patch",
            "merged_at": "2023-08-29T14:54:20Z"
        },
        "body": "Neo4j has added vector index integration just recently. To allow both ingestion and integrating it as vector RAG applications, I wrapped it as a vector store as the implementation is completely different from `GraphCypherQAChain`. Here, we are not generating any Cypher statements at query time, we are simply doing the vector similarity search using the new vector index as if we were dealing with a vector database.\r\n\r\nTodo:\r\n\r\n* [x] Tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9770/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9770/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9769",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9769/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9769/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9769/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9769",
        "id": 1867200272,
        "node_id": "PR_kwDOIPDwls5Yzaad",
        "number": 9769,
        "title": "Add Notebook demonstrating how to use Poetry",
        "user": {
            "login": "zackproser",
            "id": 1769996,
            "node_id": "MDQ6VXNlcjE3Njk5OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1769996?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zackproser",
            "html_url": "https://github.com/zackproser",
            "followers_url": "https://api.github.com/users/zackproser/followers",
            "following_url": "https://api.github.com/users/zackproser/following{/other_user}",
            "gists_url": "https://api.github.com/users/zackproser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zackproser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zackproser/subscriptions",
            "organizations_url": "https://api.github.com/users/zackproser/orgs",
            "repos_url": "https://api.github.com/users/zackproser/repos",
            "events_url": "https://api.github.com/users/zackproser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zackproser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T14:52:12Z",
        "updated_at": "2023-09-03T23:25:00Z",
        "closed_at": "2023-09-03T23:25:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9769",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9769",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9769.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9769.patch",
            "merged_at": null
        },
        "body": "-It can be useful to understand how to load modified code from a custom fork\r\n- Using Poetry as a dependency and virtualenv manager is helpful, but requires a different workflow within a Jupyter Notebook context\r\n\r\n[Link to rendered Notebook for easier review.](https://github.com/langchain-ai/langchain/blob/dc331e33695137affbe4ded1f5bf2b7633f4df15/docs/extras/integrations/vectorstores/pineconepoetry.ipynb)\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: Add a new example Jupyter Notebook demonstrating how to work with Poetry to load modified library code, such as langchain, from a branch of a fork \r\n\r\n  - Dependencies: None, the Notebook fetches the data it needs remotely at runtime,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: zackproser\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9769/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9769/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9768",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9768/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9768/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9768/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9768",
        "id": 1867194909,
        "node_id": "PR_kwDOIPDwls5YzZPj",
        "number": 9768,
        "title": "Fixing broken links to Moderation and Constitutional chain",
        "user": {
            "login": "smonami",
            "id": 1485640,
            "node_id": "MDQ6VXNlcjE0ODU2NDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1485640?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smonami",
            "html_url": "https://github.com/smonami",
            "followers_url": "https://api.github.com/users/smonami/followers",
            "following_url": "https://api.github.com/users/smonami/following{/other_user}",
            "gists_url": "https://api.github.com/users/smonami/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smonami/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smonami/subscriptions",
            "organizations_url": "https://api.github.com/users/smonami/orgs",
            "repos_url": "https://api.github.com/users/smonami/repos",
            "events_url": "https://api.github.com/users/smonami/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smonami/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-25T14:49:02Z",
        "updated_at": "2023-08-25T22:19:32Z",
        "closed_at": "2023-08-25T22:19:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9768",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9768",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9768.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9768.patch",
            "merged_at": "2023-08-25T22:19:32Z"
        },
        "body": "  - Description: Fixing broken links for Moderation and Constitutional chain\r\n  - Issue: N/A\r\n  - Twitter handle: MonamiSharma\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9768/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9768/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9767",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9767/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9767/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9767/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9767",
        "id": 1867149666,
        "node_id": "I_kwDOIPDwls5vSnFi",
        "number": 9767,
        "title": "PySpark error message and token limits in spark_sql",
        "user": {
            "login": "Jurik-001",
            "id": 123458520,
            "node_id": "U_kgDOB1vT2A",
            "avatar_url": "https://avatars.githubusercontent.com/u/123458520?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jurik-001",
            "html_url": "https://github.com/Jurik-001",
            "followers_url": "https://api.github.com/users/Jurik-001/followers",
            "following_url": "https://api.github.com/users/Jurik-001/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jurik-001/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jurik-001/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jurik-001/subscriptions",
            "organizations_url": "https://api.github.com/users/Jurik-001/orgs",
            "repos_url": "https://api.github.com/users/Jurik-001/repos",
            "events_url": "https://api.github.com/users/Jurik-001/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jurik-001/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T14:22:11Z",
        "updated_at": "2023-12-01T16:06:48Z",
        "closed_at": "2023-12-01T16:06:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nThe issue with PySpark messages is that they could become quite lengthy and after some iterations they could potentially causing problems with token limits. In this context, I would like to initiate a discussion about this topic and explore potential solutions.\r\n\r\n\r\n### Suggestion:\r\nMy suggestion would be to generate a summary of the error message before returning. I am currently not deep enough into the langchain topic and maybe there are better options so feel free to comment.\r\n\r\nIt is regarding following part [langchain/libs/langchain/langchain/utilities/spark_sql.py](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/utilities/spark_sql.py):\r\n```python\r\ndef run_no_throw(self, command: str, fetch: str = \"all\") -> str:\r\n        \"\"\"Execute a SQL command and return a string representing the results.\r\n\r\n        If the statement returns rows, a string of the results is returned.\r\n        If the statement returns no rows, an empty string is returned.\r\n\r\n        If the statement throws an error, the error message is returned.\r\n        \"\"\"\r\n        try:\r\n            return self.run(command, fetch)\r\n        except Exception as e:\r\n            \"\"\"Format the error message\"\"\"\r\n            return f\"Error: {e}\"\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9767/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9767/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]