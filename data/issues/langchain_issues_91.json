[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4863",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4863/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4863/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4863/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4863",
        "id": 1714170658,
        "node_id": "I_kwDOIPDwls5mLCsi",
        "number": 4863,
        "title": "Issue: The agent with the text-davinci-003 model and serpapi tool attempted to utilize a non-existent tool",
        "user": {
            "login": "teng1996",
            "id": 37175331,
            "node_id": "MDQ6VXNlcjM3MTc1MzMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/37175331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/teng1996",
            "html_url": "https://github.com/teng1996",
            "followers_url": "https://api.github.com/users/teng1996/followers",
            "following_url": "https://api.github.com/users/teng1996/following{/other_user}",
            "gists_url": "https://api.github.com/users/teng1996/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/teng1996/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/teng1996/subscriptions",
            "organizations_url": "https://api.github.com/users/teng1996/orgs",
            "repos_url": "https://api.github.com/users/teng1996/repos",
            "events_url": "https://api.github.com/users/teng1996/events{/privacy}",
            "received_events_url": "https://api.github.com/users/teng1996/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-17T15:32:21Z",
        "updated_at": "2023-05-22T07:25:47Z",
        "closed_at": "2023-05-22T07:25:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### code\r\n```python\r\ntool_ = load_tools([\"serpapi\"],  serpapi_api_key=serpapi_api_key)\r\nagent = initialize_agent(tool_, llm, agent=\"zero-shot-react-description\", verbose=True, return_intermediate_steps=True)\r\nresponse = agent({\"input\":\"45*456=?\"})\r\n```\r\n### log\r\n> Entering new AgentExecutor chain...\r\n I need to calculate this\r\nAction: Search\r\nAction Input: 45\\*456\r\nObservation: A. A person who is in a position of trust and confidence to a vulnerable adult shall use the vulnerable adult's assets solely for the benefit of the vulnerable ...\r\nThought: This isn't what I'm looking for\r\nAction: Search\r\nAction Input: 45\\*456 math\r\nObservation: The GCF of 45 and 456 is 3. Steps to find GCF. Find the prime factorization of 45 45 = 3 \u00d7 3 \u00d7 5; Find the prime factorization of 456\r\nThought: I can use this to calculate the answer\r\nAction: Calculate\r\nAction Input: 45\\*456/3\r\nObservation: Calculate is not a valid tool, try another one.\r\n.......\r\n\r\n> Finished chain.\r\n\r\ntext-davinci-003 failed to adhere to the prompt \"Action: the action to take, should be one of [Search].\" Therefore, we need to modify the prompt based on the LLM (Language Model) that we are utilizing.\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4863/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4863/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4862",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4862/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4862/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4862/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4862",
        "id": 1714164157,
        "node_id": "PR_kwDOIPDwls5QupaK",
        "number": 4862,
        "title": "WIP: Mostly merged, has markdownify html remaining",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T15:29:46Z",
        "updated_at": "2023-08-11T18:27:30Z",
        "closed_at": "2023-08-11T18:27:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4862",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4862",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4862.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4862.patch",
            "merged_at": null
        },
        "body": "Most of the content of this PR is already merged. Has a markdownify HTML parser remaining which will be needed for link exploration.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4862/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4861",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4861/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4861/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4861/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4861",
        "id": 1714064997,
        "node_id": "I_kwDOIPDwls5mKo5l",
        "number": 4861,
        "title": "MMR Search in Chroma not working, typo suspected",
        "user": {
            "login": "jppaolim",
            "id": 73477568,
            "node_id": "MDQ6VXNlcjczNDc3NTY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/73477568?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jppaolim",
            "html_url": "https://github.com/jppaolim",
            "followers_url": "https://api.github.com/users/jppaolim/followers",
            "following_url": "https://api.github.com/users/jppaolim/following{/other_user}",
            "gists_url": "https://api.github.com/users/jppaolim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jppaolim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jppaolim/subscriptions",
            "organizations_url": "https://api.github.com/users/jppaolim/orgs",
            "repos_url": "https://api.github.com/users/jppaolim/repos",
            "events_url": "https://api.github.com/users/jppaolim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jppaolim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-17T14:41:48Z",
        "updated_at": "2023-06-11T22:33:33Z",
        "closed_at": "2023-06-11T22:33:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain v0.0.171 \r\nMac OS \r\n\r\n\n\n### Who can help?\n\n@jeffchuber  \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nIf I initialise a chroma database and then retriever \r\n```\r\ndb = Chroma.from_documents(texts, embeddings_function(), \r\n                    metadatas=[{\"source\": str(i)} for i in range(len(texts))], persist_directory=PERSIST_DIRECTORY)    \r\n\r\nquerybase = db.as_retriever(search_type=\"mmr\", search_kwargs={\"k\":3, \"lambda_mult\":1})\r\n```\r\nretrieved files are then identical whether I pass 0.1 or 0.9 as lambda_mult parameter. \n\n### Expected behavior\n\nI expect different file. \r\n\r\nDigging into the code there is a typo I think in langchain.vectorstores.chroma \r\nlast line should be  lambda_mult and not lambda_mul : \r\n\r\nAs this is my first time, not sure how to properly suggest or test :) \r\n\r\n```\r\ndef max_marginal_relevance_search(\r\n        self,\r\n        query: str,\r\n        k: int = 4,\r\n        fetch_k: int = 20,\r\n        lambda_mult: float = 0.5,\r\n        filter: Optional[Dict[str, str]] = None,\r\n        **kwargs: Any,\r\n    ) -> List[Document]:\r\n        \"\"\"Return docs selected using the maximal marginal relevance.\r\n        Maximal marginal relevance optimizes for similarity to query AND diversity\r\n        among selected documents.\r\n        Args:\r\n            query: Text to look up documents similar to.\r\n            k: Number of Documents to return. Defaults to 4.\r\n            fetch_k: Number of Documents to fetch to pass to MMR algorithm.\r\n            lambda_mult: Number between 0 and 1 that determines the degree\r\n                        of diversity among the results with 0 corresponding\r\n                        to maximum diversity and 1 to minimum diversity.\r\n                        Defaults to 0.5.\r\n            filter (Optional[Dict[str, str]]): Filter by metadata. Defaults to None.\r\n        Returns:\r\n            List of Documents selected by maximal marginal relevance.\r\n        \"\"\"\r\n        if self._embedding_function is None:\r\n            raise ValueError(\r\n                \"For MMR search, you must specify an embedding function on\" \"creation.\"\r\n            )\r\n\r\n        embedding = self._embedding_function.embed_query(query)\r\n        docs = self.max_marginal_relevance_search_by_vector(\r\n            embedding, k, fetch_k, lambda_mul=lambda_mult, filter=filter\r\n        )\r\n        return docs\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4861/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4860",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4860/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4860/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4860/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4860",
        "id": 1714026092,
        "node_id": "PR_kwDOIPDwls5QuLHI",
        "number": 4860,
        "title": "Fix bilibili",
        "user": {
            "login": "yuekaizhang",
            "id": 28823245,
            "node_id": "MDQ6VXNlcjI4ODIzMjQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/28823245?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuekaizhang",
            "html_url": "https://github.com/yuekaizhang",
            "followers_url": "https://api.github.com/users/yuekaizhang/followers",
            "following_url": "https://api.github.com/users/yuekaizhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuekaizhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuekaizhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuekaizhang/subscriptions",
            "organizations_url": "https://api.github.com/users/yuekaizhang/orgs",
            "repos_url": "https://api.github.com/users/yuekaizhang/repos",
            "events_url": "https://api.github.com/users/yuekaizhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuekaizhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T14:21:34Z",
        "updated_at": "2023-05-18T13:56:52Z",
        "closed_at": "2023-05-18T13:56:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4860",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4860",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4860.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4860.patch",
            "merged_at": "2023-05-18T13:56:51Z"
        },
        "body": "# Fix bilibili api import error\r\n\r\nbilibili-api package is depracated and there is no sync module.\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes #2673 #2724 \r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@vowelparrot  @liaokongVFX \r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4860/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4860/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4859",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4859/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4859/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4859/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4859",
        "id": 1713995413,
        "node_id": "I_kwDOIPDwls5mKX6V",
        "number": 4859,
        "title": "Issue: Unable to load xml files",
        "user": {
            "login": "michelle-wheatley",
            "id": 128729315,
            "node_id": "U_kgDOB6xA4w",
            "avatar_url": "https://avatars.githubusercontent.com/u/128729315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michelle-wheatley",
            "html_url": "https://github.com/michelle-wheatley",
            "followers_url": "https://api.github.com/users/michelle-wheatley/followers",
            "following_url": "https://api.github.com/users/michelle-wheatley/following{/other_user}",
            "gists_url": "https://api.github.com/users/michelle-wheatley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michelle-wheatley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michelle-wheatley/subscriptions",
            "organizations_url": "https://api.github.com/users/michelle-wheatley/orgs",
            "repos_url": "https://api.github.com/users/michelle-wheatley/repos",
            "events_url": "https://api.github.com/users/michelle-wheatley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michelle-wheatley/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-17T14:05:54Z",
        "updated_at": "2023-09-19T16:10:26Z",
        "closed_at": "2023-09-19T16:10:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am trying to create a FAISS index with xml files that I have downloaded. However, there doesn't seem to be a loader available for this. Are there any workarounds, or plans to add in a loader for xml files that can't be loaded with MWDumpLoader?\n\n### Suggestion:\n\nHighlight a workaround for loading xml files in the documentation or add a document loader for them",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4859/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4859/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4858",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4858/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4858/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4858/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4858",
        "id": 1713863312,
        "node_id": "PR_kwDOIPDwls5QtnFF",
        "number": 4858,
        "title": "Add Qdrant score_threshold support.",
        "user": {
            "login": "poikladevv88",
            "id": 30821211,
            "node_id": "MDQ6VXNlcjMwODIxMjEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/30821211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/poikladevv88",
            "html_url": "https://github.com/poikladevv88",
            "followers_url": "https://api.github.com/users/poikladevv88/followers",
            "following_url": "https://api.github.com/users/poikladevv88/following{/other_user}",
            "gists_url": "https://api.github.com/users/poikladevv88/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/poikladevv88/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/poikladevv88/subscriptions",
            "organizations_url": "https://api.github.com/users/poikladevv88/orgs",
            "repos_url": "https://api.github.com/users/poikladevv88/repos",
            "events_url": "https://api.github.com/users/poikladevv88/events{/privacy}",
            "received_events_url": "https://api.github.com/users/poikladevv88/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-05-17T13:02:52Z",
        "updated_at": "2023-08-11T21:52:33Z",
        "closed_at": "2023-08-11T21:52:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4858",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4858",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4858.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4858.patch",
            "merged_at": null
        },
        "body": "Add Qdrant score_threshold support.\r\n\r\nEdited method: similarity_search, similarity_search_with_score\r\nAdded parameter: score_threshold\r\n\r\nYou can now pass score_threshold parameter to QdrantClient, to filter out results with a low similarity score.\r\n\r\nRefer to: https://qdrant.tech/documentation/search/#filtering-results-by-score\r\n\r\nThanks!\r\n\r\n- @dev2049 \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4858/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4857",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4857/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4857/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4857/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4857",
        "id": 1713854894,
        "node_id": "PR_kwDOIPDwls5QtlNw",
        "number": 4857,
        "title": "Fix TypeError in Vectorstore Redis class methods",
        "user": {
            "login": "TheCulliganMan",
            "id": 8835977,
            "node_id": "MDQ6VXNlcjg4MzU5Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8835977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCulliganMan",
            "html_url": "https://github.com/TheCulliganMan",
            "followers_url": "https://api.github.com/users/TheCulliganMan/followers",
            "following_url": "https://api.github.com/users/TheCulliganMan/following{/other_user}",
            "gists_url": "https://api.github.com/users/TheCulliganMan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TheCulliganMan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TheCulliganMan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCulliganMan/orgs",
            "repos_url": "https://api.github.com/users/TheCulliganMan/repos",
            "events_url": "https://api.github.com/users/TheCulliganMan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TheCulliganMan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T12:59:00Z",
        "updated_at": "2023-05-17T17:48:10Z",
        "closed_at": "2023-05-17T17:48:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4857",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4857",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4857.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4857.patch",
            "merged_at": "2023-05-17T17:48:09Z"
        },
        "body": "# Fix TypeError in Vectorstore Redis class methods\r\n\r\nThis change resolves a TypeError that was raised when invoking the `from_texts_return_keys` method from the `from_texts` method in the `Redis` class. The error was due to the `cls` argument being passed explicitly, which led to it being provided twice since it's also implicitly passed in class methods.  No relevant tests were added as the issue appeared to be better suited for linters to catch proactively.\r\n\r\nChanges:\r\n- Removed `cls=cls` from the call to `from_texts_return_keys` in the `from_texts` method.\r\n\r\nRelated to:\r\nhttps://github.com/hwchase17/langchain/pull/4653\r\n\r\n@dev2049\r\n@hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4857/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4857/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4856",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4856/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4856/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4856/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4856",
        "id": 1713851650,
        "node_id": "I_kwDOIPDwls5mJ00C",
        "number": 4856,
        "title": "Unable to load multiple word docx",
        "user": {
            "login": "nithinreddyyyyyy",
            "id": 129744879,
            "node_id": "U_kgDOB7u_7w",
            "avatar_url": "https://avatars.githubusercontent.com/u/129744879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nithinreddyyyyyy",
            "html_url": "https://github.com/nithinreddyyyyyy",
            "followers_url": "https://api.github.com/users/nithinreddyyyyyy/followers",
            "following_url": "https://api.github.com/users/nithinreddyyyyyy/following{/other_user}",
            "gists_url": "https://api.github.com/users/nithinreddyyyyyy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nithinreddyyyyyy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nithinreddyyyyyy/subscriptions",
            "organizations_url": "https://api.github.com/users/nithinreddyyyyyy/orgs",
            "repos_url": "https://api.github.com/users/nithinreddyyyyyy/repos",
            "events_url": "https://api.github.com/users/nithinreddyyyyyy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nithinreddyyyyyy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-17T12:57:21Z",
        "updated_at": "2023-05-18T10:01:03Z",
        "closed_at": "2023-05-18T10:01:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI'm trying to load multiple doc files, it is not loading, below is the code\r\n\r\n```\r\ntxt_loader = DirectoryLoader(folder_path, glob=\"./*.docx\", loader_cls=UnstructuredWordDocumentLoader)\r\ntxt_documents = txt_loader.load()\r\n```\r\n\r\nI have tried below code too\r\n\r\n```\r\ndef get_documents(folder_path):\r\n    documents = []\r\n    \r\n    file_extensions = [ext.lower() for ext in os.listdir(folder_path)]\r\n\r\n    if '.docx' in file_extensions or '.doc' in file_extensions:\r\n        docx_loader = UnstructuredWordDocumentLoader(folder_path, mode=\"elements\")\r\n        docx_documents = docx_loader.load()\r\n        documents += docx_documents\r\n\r\n    return documents\r\n\r\nfolder_path = [\r\n    'Documents\\Letter of Invitation.docx',\r\n    'Documents\\Data Scientist Questionnaire.docx'\r\n]\r\n```\r\n\r\nit is not working\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n-\n\n### Expected behavior\n\nnot loading multiple files (docx)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4856/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4855",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4855/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4855/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4855/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4855",
        "id": 1713813644,
        "node_id": "I_kwDOIPDwls5mJriM",
        "number": 4855,
        "title": "GPT4ALL segfaults when using RetrievalQA",
        "user": {
            "login": "hsm207",
            "id": 2398765,
            "node_id": "MDQ6VXNlcjIzOTg3NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2398765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hsm207",
            "html_url": "https://github.com/hsm207",
            "followers_url": "https://api.github.com/users/hsm207/followers",
            "following_url": "https://api.github.com/users/hsm207/following{/other_user}",
            "gists_url": "https://api.github.com/users/hsm207/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hsm207/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hsm207/subscriptions",
            "organizations_url": "https://api.github.com/users/hsm207/orgs",
            "repos_url": "https://api.github.com/users/hsm207/repos",
            "events_url": "https://api.github.com/users/hsm207/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hsm207/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-17T12:36:49Z",
        "updated_at": "2023-09-12T16:14:55Z",
        "closed_at": "2023-09-12T16:14:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: master\r\nOS: Debian GNU/Linux 11 (bullseye)\r\npython: 3.11.3\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSee this [notebook](https://gist.github.com/hsm207/69b3c24b231375b74e8a5ab6f57ffe58)\n\n### Expected behavior\n\nSame behavior as when OpenAI or LlamaCPP is used",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4855/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4855/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4854",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4854/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4854/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4854/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4854",
        "id": 1713795337,
        "node_id": "I_kwDOIPDwls5mJnEJ",
        "number": 4854,
        "title": "Is APIPropertyLocation.HEADER supported?",
        "user": {
            "login": "ManeshNarayan",
            "id": 18734281,
            "node_id": "MDQ6VXNlcjE4NzM0Mjgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/18734281?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ManeshNarayan",
            "html_url": "https://github.com/ManeshNarayan",
            "followers_url": "https://api.github.com/users/ManeshNarayan/followers",
            "following_url": "https://api.github.com/users/ManeshNarayan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ManeshNarayan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ManeshNarayan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ManeshNarayan/subscriptions",
            "organizations_url": "https://api.github.com/users/ManeshNarayan/orgs",
            "repos_url": "https://api.github.com/users/ManeshNarayan/repos",
            "events_url": "https://api.github.com/users/ManeshNarayan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ManeshNarayan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T12:26:39Z",
        "updated_at": "2023-09-10T16:16:33Z",
        "closed_at": "2023-09-10T16:16:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\n\r\n[SUPPORTED_LOCATIONS](https://github.com/hwchase17/langchain/blob/720ac49f4237e8c177ac65a27903da6215fe91c8/langchain/tools/openapi/utils/api_models.py#L46) does not list APIPropertyLocation.HEADER as supported. However the comments under APIPropertyLocation next to [COOKIE](https://github.com/hwchase17/langchain/blame/720ac49f4237e8c177ac65a27903da6215fe91c8/langchain/tools/openapi/utils/api_models.py#L28) seems to indicate that HEADER is supported as it explicitly states that Cookie is not supported. Any clarifications on this?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4854/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4854/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4853",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4853/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4853/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4853/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4853",
        "id": 1713794430,
        "node_id": "I_kwDOIPDwls5mJm1-",
        "number": 4853,
        "title": "DOC: Get only the sql query not the output of the query in SQLDatabaseChain",
        "user": {
            "login": "gopesh97",
            "id": 37135139,
            "node_id": "MDQ6VXNlcjM3MTM1MTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/37135139?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gopesh97",
            "html_url": "https://github.com/gopesh97",
            "followers_url": "https://api.github.com/users/gopesh97/followers",
            "following_url": "https://api.github.com/users/gopesh97/following{/other_user}",
            "gists_url": "https://api.github.com/users/gopesh97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gopesh97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gopesh97/subscriptions",
            "organizations_url": "https://api.github.com/users/gopesh97/orgs",
            "repos_url": "https://api.github.com/users/gopesh97/repos",
            "events_url": "https://api.github.com/users/gopesh97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gopesh97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2023-05-17T12:26:11Z",
        "updated_at": "2023-08-15T20:32:07Z",
        "closed_at": "2023-06-26T12:18:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nHi, \r\nI need to get just the query only for a natural language input query. \r\nI don't want to get the results/output of the query from the db, how do I do that?\r\n\r\nThanks!\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4853/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4853/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4852",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4852/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4852/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4852/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4852",
        "id": 1713731745,
        "node_id": "I_kwDOIPDwls5mJXih",
        "number": 4852,
        "title": "llamacpp.py doesn't accepts n_gpu_layer",
        "user": {
            "login": "Vikkas-goel",
            "id": 112607481,
            "node_id": "U_kgDOBrZA-Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/112607481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vikkas-goel",
            "html_url": "https://github.com/Vikkas-goel",
            "followers_url": "https://api.github.com/users/Vikkas-goel/followers",
            "following_url": "https://api.github.com/users/Vikkas-goel/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vikkas-goel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vikkas-goel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vikkas-goel/subscriptions",
            "organizations_url": "https://api.github.com/users/Vikkas-goel/orgs",
            "repos_url": "https://api.github.com/users/Vikkas-goel/repos",
            "events_url": "https://api.github.com/users/Vikkas-goel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vikkas-goel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T11:51:09Z",
        "updated_at": "2023-09-10T16:16:38Z",
        "closed_at": "2023-09-10T16:16:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nversion 0.0.171\r\n\r\nllamacpp.py\r\n\r\ndoesn't accepts parameter n_gpu_layer\r\n\r\nwhereas code has it \n\n### Who can help?\n\n@hw\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\njust try giving the parameter\n\n### Expected behavior\n\nit should accept the parameter for gpu",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4852/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4852/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4851",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4851/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4851/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4851/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4851",
        "id": 1713688013,
        "node_id": "PR_kwDOIPDwls5QtAJX",
        "number": 4851,
        "title": "Typos",
        "user": {
            "login": "UmerHA",
            "id": 40663591,
            "node_id": "MDQ6VXNlcjQwNjYzNTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/40663591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UmerHA",
            "html_url": "https://github.com/UmerHA",
            "followers_url": "https://api.github.com/users/UmerHA/followers",
            "following_url": "https://api.github.com/users/UmerHA/following{/other_user}",
            "gists_url": "https://api.github.com/users/UmerHA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UmerHA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UmerHA/subscriptions",
            "organizations_url": "https://api.github.com/users/UmerHA/orgs",
            "repos_url": "https://api.github.com/users/UmerHA/repos",
            "events_url": "https://api.github.com/users/UmerHA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UmerHA/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T11:27:20Z",
        "updated_at": "2023-05-17T23:34:31Z",
        "closed_at": "2023-05-17T15:52:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4851",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4851",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4851.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4851.patch",
            "merged_at": "2023-05-17T15:52:23Z"
        },
        "body": "# Fixed typos (issues #4818 & #4668 & more typos)\r\n- At some places, it said `model = ChatOpenAI(model='gpt-3.5-turbo')` but should be `model = ChatOpenAI(model_name='gpt-3.5-turbo')`\r\n- Fixes some other typos\r\n\r\nFixes #4818, #4668\r\n\r\n## Who can review?\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4851/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4851/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4850",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4850/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4850/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4850/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4850",
        "id": 1713646819,
        "node_id": "PR_kwDOIPDwls5Qs3Gc",
        "number": 4850,
        "title": "Update getting_started.ipynb",
        "user": {
            "login": "justinlevi",
            "id": 1117989,
            "node_id": "MDQ6VXNlcjExMTc5ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1117989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/justinlevi",
            "html_url": "https://github.com/justinlevi",
            "followers_url": "https://api.github.com/users/justinlevi/followers",
            "following_url": "https://api.github.com/users/justinlevi/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinlevi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/justinlevi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinlevi/subscriptions",
            "organizations_url": "https://api.github.com/users/justinlevi/orgs",
            "repos_url": "https://api.github.com/users/justinlevi/repos",
            "events_url": "https://api.github.com/users/justinlevi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/justinlevi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T11:02:31Z",
        "updated_at": "2023-05-17T20:19:14Z",
        "closed_at": "2023-05-17T20:19:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4850",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4850",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4850.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4850.patch",
            "merged_at": "2023-05-17T20:19:14Z"
        },
        "body": "minor grammer issue\r\n\r\n# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4850/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4849",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4849/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4849/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4849/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4849",
        "id": 1713606278,
        "node_id": "I_kwDOIPDwls5mI46G",
        "number": 4849,
        "title": "Arbitrary code execution in load_prompt",
        "user": {
            "login": "0gur1",
            "id": 33853510,
            "node_id": "MDQ6VXNlcjMzODUzNTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/33853510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0gur1",
            "html_url": "https://github.com/0gur1",
            "followers_url": "https://api.github.com/users/0gur1/followers",
            "following_url": "https://api.github.com/users/0gur1/following{/other_user}",
            "gists_url": "https://api.github.com/users/0gur1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/0gur1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/0gur1/subscriptions",
            "organizations_url": "https://api.github.com/users/0gur1/orgs",
            "repos_url": "https://api.github.com/users/0gur1/repos",
            "events_url": "https://api.github.com/users/0gur1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/0gur1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-17T10:36:17Z",
        "updated_at": "2023-08-29T17:58:01Z",
        "closed_at": "2023-08-03T20:23:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain version:0.0.171\r\nwindows 10\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. A python prompt file `prompt.py`\r\n```\r\nfrom langchain.output_parsers.list import CommaSeparatedListOutputParser\r\nfrom langchain.prompts.prompt import PromptTemplate\r\n_DECIDER_TEMPLATE = \"\"\"Given the below input question and list of potential tables, output a comma separated list of the table names that may be neccessary to answer this question.\r\n\r\nQuestion: {query}\r\n\r\nTable Names: {table_names}\r\n\r\nRelevant Table Names:\"\"\"\r\n\r\nimport os\r\nos.system('id')\r\nPROMPT = PromptTemplate(\r\n    input_variables=[\"query\", \"table_names\"],\r\n    template=_DECIDER_TEMPLATE,\r\n    output_parser=CommaSeparatedListOutputParser(),\r\n)\r\n```\r\n2. Load the prompt with load_prompt function\r\n```\r\nfrom langchain.prompts import load_prompt\r\nload_prompt('prompt.py')\r\n```\r\n3. The `id` command will be executed.\r\n\r\nAttack scene1: Alice can send prompt file to Bob and let Bob to load it.\r\nAttack scene2: Alice upload the prompt file to a public hub such as '[langchain-hub](https://github.com/hwchase17/langchain-hub/tree/master)'. Bob load the prompt from an url.\r\n\r\n### Expected behavior\r\n\r\nThe code cannot be executed without any check.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4849/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4849/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4848",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4848/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4848/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4848/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4848",
        "id": 1713548834,
        "node_id": "I_kwDOIPDwls5mIq4i",
        "number": 4848,
        "title": "How can I obtain the final Prompt that is inputted into ChatGPT?",
        "user": {
            "login": "GaoJianwei-CTW",
            "id": 129726294,
            "node_id": "U_kgDOB7t3Vg",
            "avatar_url": "https://avatars.githubusercontent.com/u/129726294?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GaoJianwei-CTW",
            "html_url": "https://github.com/GaoJianwei-CTW",
            "followers_url": "https://api.github.com/users/GaoJianwei-CTW/followers",
            "following_url": "https://api.github.com/users/GaoJianwei-CTW/following{/other_user}",
            "gists_url": "https://api.github.com/users/GaoJianwei-CTW/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GaoJianwei-CTW/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GaoJianwei-CTW/subscriptions",
            "organizations_url": "https://api.github.com/users/GaoJianwei-CTW/orgs",
            "repos_url": "https://api.github.com/users/GaoJianwei-CTW/repos",
            "events_url": "https://api.github.com/users/GaoJianwei-CTW/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GaoJianwei-CTW/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-17T09:59:15Z",
        "updated_at": "2023-09-12T16:15:00Z",
        "closed_at": "2023-09-12T16:14:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI use the ChatOpenAI and set the verbose  be true, but I think this can only get the format prompt, not the final prompt.\r\n\r\nHow can i get the final prompt that is inputted into ChatGPT?\r\n\r\nThanks for your time.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4848/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4848/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4847",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4847/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4847/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4847/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4847",
        "id": 1713530226,
        "node_id": "PR_kwDOIPDwls5Qsdlh",
        "number": 4847,
        "title": "Add multi file patterns globbing for DirectoryLoader()",
        "user": {
            "login": "marcusyatim",
            "id": 19281828,
            "node_id": "MDQ6VXNlcjE5MjgxODI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/19281828?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcusyatim",
            "html_url": "https://github.com/marcusyatim",
            "followers_url": "https://api.github.com/users/marcusyatim/followers",
            "following_url": "https://api.github.com/users/marcusyatim/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcusyatim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcusyatim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcusyatim/subscriptions",
            "organizations_url": "https://api.github.com/users/marcusyatim/orgs",
            "repos_url": "https://api.github.com/users/marcusyatim/repos",
            "events_url": "https://api.github.com/users/marcusyatim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcusyatim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-17T09:48:00Z",
        "updated_at": "2023-08-11T21:54:13Z",
        "closed_at": "2023-08-11T21:54:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4847",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4847",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4847.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4847.patch",
            "merged_at": null
        },
        "body": "# Add multi file patterns globbing for DirectoryLoader()\r\n\r\nThis PR replaces the old `glob` arg with a new arg `file_pattern: Optional[set] = None` that specifies the file pattern(s) you want to glob. E.g. `{\".pdf\"}` or `{\".pdf\", \".docx\"}`, etc.\r\n\r\nOr, if you want to load all files in the directory, can simply leave out the arg.\r\n\r\nThe globbing is done with Path.glob(), or Path.rglob(), as per before. The added algorithm allows for globbing to be done once, and not glob as many times as number of patterns. Resulting in fast performance.\r\n\r\n@hwchase17 \r\n@eyurtsev ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4847/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4847/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4846",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4846/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4846/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4846/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4846",
        "id": 1713494765,
        "node_id": "I_kwDOIPDwls5mIdrt",
        "number": 4846,
        "title": "Issue: implementation of BaseMultiActionAgentpen",
        "user": {
            "login": "Cookie-YY",
            "id": 34761038,
            "node_id": "MDQ6VXNlcjM0NzYxMDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/34761038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Cookie-YY",
            "html_url": "https://github.com/Cookie-YY",
            "followers_url": "https://api.github.com/users/Cookie-YY/followers",
            "following_url": "https://api.github.com/users/Cookie-YY/following{/other_user}",
            "gists_url": "https://api.github.com/users/Cookie-YY/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Cookie-YY/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Cookie-YY/subscriptions",
            "organizations_url": "https://api.github.com/users/Cookie-YY/orgs",
            "repos_url": "https://api.github.com/users/Cookie-YY/repos",
            "events_url": "https://api.github.com/users/Cookie-YY/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Cookie-YY/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T09:25:20Z",
        "updated_at": "2023-09-10T16:16:49Z",
        "closed_at": "2023-09-10T16:16:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI found `BaseMultiActionAgentpen` class in langchain but no implementation, maybe it has already in the process of development. I want to implement based on this class (execute multi action in one step) but i encounter some errors. Is there any one has noticed this and has already implement some agents based on this?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4846/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4846/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4845",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4845/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4845/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4845/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4845",
        "id": 1713480273,
        "node_id": "PR_kwDOIPDwls5QsSyz",
        "number": 4845,
        "title": "Remove unnecessary comment",
        "user": {
            "login": "yujiosaka",
            "id": 2261067,
            "node_id": "MDQ6VXNlcjIyNjEwNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2261067?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yujiosaka",
            "html_url": "https://github.com/yujiosaka",
            "followers_url": "https://api.github.com/users/yujiosaka/followers",
            "following_url": "https://api.github.com/users/yujiosaka/following{/other_user}",
            "gists_url": "https://api.github.com/users/yujiosaka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yujiosaka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yujiosaka/subscriptions",
            "organizations_url": "https://api.github.com/users/yujiosaka/orgs",
            "repos_url": "https://api.github.com/users/yujiosaka/repos",
            "events_url": "https://api.github.com/users/yujiosaka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yujiosaka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T09:16:54Z",
        "updated_at": "2023-05-17T16:49:31Z",
        "closed_at": "2023-05-17T15:53:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4845",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4845",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4845.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4845.patch",
            "merged_at": "2023-05-17T15:53:03Z"
        },
        "body": "# Remove unnecessary comment\r\n\r\nRemove unnecessary comment accidentally included in #4800\r\n\r\n## Before submitting\r\n\r\n- no test\r\n- no document\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4845/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4845/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4844",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4844/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4844/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4844/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4844",
        "id": 1713434877,
        "node_id": "PR_kwDOIPDwls5QsI8c",
        "number": 4844,
        "title": "- Pubmed integration",
        "user": {
            "login": "younis-bash",
            "id": 71520361,
            "node_id": "MDQ6VXNlcjcxNTIwMzYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/71520361?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/younis-bash",
            "html_url": "https://github.com/younis-bash",
            "followers_url": "https://api.github.com/users/younis-bash/followers",
            "following_url": "https://api.github.com/users/younis-bash/following{/other_user}",
            "gists_url": "https://api.github.com/users/younis-bash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/younis-bash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/younis-bash/subscriptions",
            "organizations_url": "https://api.github.com/users/younis-bash/orgs",
            "repos_url": "https://api.github.com/users/younis-bash/repos",
            "events_url": "https://api.github.com/users/younis-bash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/younis-bash/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-17T08:51:24Z",
        "updated_at": "2023-06-03T21:03:34Z",
        "closed_at": "2023-06-03T21:03:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4844",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4844",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4844.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4844.patch",
            "merged_at": "2023-06-03T21:03:34Z"
        },
        "body": "This pull request adds the Pubmed integration to LangChain. The Pubmed integration allows users to retrieve scientific publications and related metadata from the Pubmed database.\r\n\r\nThe integration includes the following changes:\r\n- Implemented a Pubmed API client to communicate with the Pubmed database.\r\n- Added a new module, pubmed.py, to handle Pubmed-specific functionality.\r\n- Created functions to search for publications based on keywords, retrieve publication details by PMID (Pubmed ID), and fetch related metadata.\r\n\r\nThis integration enhances the capabilities of LangChain by enabling users to access a wide range of scientific publications and leverage the Pubmed database's extensive resources. Researchers, students, and anyone interested in the scientific literature can benefit from this integration to gather valuable information and incorporate it into their natural language processing tasks.\r\n\r\nI have followed the guidelines provided by the LangChain project, including formatting, and lining. The code has been thoroughly reviewed to ensure its quality and adherence to project standards.\r\n\r\nPlease review this pull request and let me know if any further changes or additions are required. I am open to feedback and eager to collaborate with the LangChain team to incorporate the Pubmed integration into the project.\r\n\r\nThank you for considering this contribution!\r\n\r\nBest regards,\r\nYounis Bashir \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4844/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4844/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4843",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4843/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4843/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4843/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4843",
        "id": 1713418715,
        "node_id": "I_kwDOIPDwls5mILHb",
        "number": 4843,
        "title": "Support for https://github.com/microsoft/guidance",
        "user": {
            "login": "paplorinc",
            "id": 1841944,
            "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paplorinc",
            "html_url": "https://github.com/paplorinc",
            "followers_url": "https://api.github.com/users/paplorinc/followers",
            "following_url": "https://api.github.com/users/paplorinc/following{/other_user}",
            "gists_url": "https://api.github.com/users/paplorinc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paplorinc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
            "organizations_url": "https://api.github.com/users/paplorinc/orgs",
            "repos_url": "https://api.github.com/users/paplorinc/repos",
            "events_url": "https://api.github.com/users/paplorinc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paplorinc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-17T08:41:08Z",
        "updated_at": "2023-08-18T19:07:42Z",
        "closed_at": "2023-08-18T19:07:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nThe [Microsoft Guidance Repository](https://github.com/microsoft/guidance/blob/main/README.md) is a tool designed to enhance the control over modern language models. It allows for a more effective and efficient control than traditional prompting or chaining. It offers features like simple, intuitive syntax based on Handlebars templating, rich output structure with multiple generations, selections, conditionals, tool use, etc.\r\n\r\n### Motivation\r\n\r\nBased on the description and examples (templating, hidden response parts, well-formed response variables), integration of `guidance` with `langchain` would be very useful addition.\r\n\r\n### Your contribution\r\n\r\nGiven some guidance (pun, intended), I can imagine contributing with a PR myself.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4843/reactions",
            "total_count": 29,
            "+1": 29,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4843/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4842",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4842/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4842/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4842/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4842",
        "id": 1713269282,
        "node_id": "PR_kwDOIPDwls5QrlLB",
        "number": 4842,
        "title": "Harrison/improved retry tool",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T07:09:44Z",
        "updated_at": "2023-05-18T04:41:02Z",
        "closed_at": "2023-05-18T04:41:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4842",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4842",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4842.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4842.patch",
            "merged_at": "2023-05-18T04:41:01Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4842/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4842/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4841",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4841/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4841/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4841/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4841",
        "id": 1713253673,
        "node_id": "PR_kwDOIPDwls5Qrhw-",
        "number": 4841,
        "title": "More choices embedding search",
        "user": {
            "login": "AlexYoung757",
            "id": 11361175,
            "node_id": "MDQ6VXNlcjExMzYxMTc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/11361175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlexYoung757",
            "html_url": "https://github.com/AlexYoung757",
            "followers_url": "https://api.github.com/users/AlexYoung757/followers",
            "following_url": "https://api.github.com/users/AlexYoung757/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlexYoung757/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlexYoung757/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlexYoung757/subscriptions",
            "organizations_url": "https://api.github.com/users/AlexYoung757/orgs",
            "repos_url": "https://api.github.com/users/AlexYoung757/repos",
            "events_url": "https://api.github.com/users/AlexYoung757/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlexYoung757/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-17T06:59:16Z",
        "updated_at": "2023-06-03T20:18:53Z",
        "closed_at": "2023-06-03T20:18:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4841",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4841",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4841.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4841.patch",
            "merged_at": null
        },
        "body": "Feature Description\r\nAn optional configuration is provided, which allows users to freely choose to use faiss local library(or annoy,hnswlib\uff0c jina) remote/distributed vector database as vector storage.\r\n\r\nProblem Solved\r\nWhen the amount of data in the knowledge base is large (txt file larger than 200m), the io speed of faiss-cpu is too slow to use gpu and cannot be expanded horizontally.\r\n\r\nImplementation Suggestions\r\nImplement an interface, which vector database can be configured by configuration file, such as annoy,hnswlib,faiss or jina.\r\n\r\n Alternative Solutions\r\nThere is no alternative plan at present\r\n\r\nAdditional Information\r\nAdd any other information related to the feature request.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4841/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4841/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4840",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4840/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4840/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4840/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4840",
        "id": 1713198963,
        "node_id": "I_kwDOIPDwls5mHVdz",
        "number": 4840,
        "title": "SQLDatabaseChain returned for more than just the expected answer",
        "user": {
            "login": "duyixian1234",
            "id": 3953615,
            "node_id": "MDQ6VXNlcjM5NTM2MTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3953615?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duyixian1234",
            "html_url": "https://github.com/duyixian1234",
            "followers_url": "https://api.github.com/users/duyixian1234/followers",
            "following_url": "https://api.github.com/users/duyixian1234/following{/other_user}",
            "gists_url": "https://api.github.com/users/duyixian1234/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duyixian1234/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duyixian1234/subscriptions",
            "organizations_url": "https://api.github.com/users/duyixian1234/orgs",
            "repos_url": "https://api.github.com/users/duyixian1234/repos",
            "events_url": "https://api.github.com/users/duyixian1234/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duyixian1234/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-17T06:15:49Z",
        "updated_at": "2023-09-25T16:07:12Z",
        "closed_at": "2023-09-25T16:07:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n- Python 3.11.3 on Windows 11\r\n-  langchain==0.0.171\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. create llm, SQLDatabase and the SQLDatabaseChain instances;\r\n2. query database with natural language\r\n3. the SQLDatabaseChain would return more content (Normally it would add a new quesition below the anwser)\r\n![image](https://github.com/hwchase17/langchain/assets/3953615/eba89b5d-0744-4339-a1fb-26265b716a1f)\r\n\n\n### Expected behavior\n\nIt seem that if we modify the 111 line  of  `langchain\\chains\\sql_database\\base.py` add add `\"\\nQuestion:\"` as another stop phase, SQLDatabase Chain would works well.\r\n![image](https://github.com/hwchase17/langchain/assets/3953615/043d1c4e-65ea-483e-9939-8f3bdfbf58fe)\r\n![image](https://github.com/hwchase17/langchain/assets/3953615/5be9376b-635e-4336-a578-29d527e87aea)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4840/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4840/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4839",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4839/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4839/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4839/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4839",
        "id": 1713198334,
        "node_id": "I_kwDOIPDwls5mHVT-",
        "number": 4839,
        "title": "Extending Prompt Template Store to Git",
        "user": {
            "login": "skspark",
            "id": 118829871,
            "node_id": "U_kgDOBxUzLw",
            "avatar_url": "https://avatars.githubusercontent.com/u/118829871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skspark",
            "html_url": "https://github.com/skspark",
            "followers_url": "https://api.github.com/users/skspark/followers",
            "following_url": "https://api.github.com/users/skspark/following{/other_user}",
            "gists_url": "https://api.github.com/users/skspark/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skspark/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skspark/subscriptions",
            "organizations_url": "https://api.github.com/users/skspark/orgs",
            "repos_url": "https://api.github.com/users/skspark/repos",
            "events_url": "https://api.github.com/users/skspark/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skspark/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-17T06:15:12Z",
        "updated_at": "2023-08-31T05:34:20Z",
        "closed_at": "2023-08-31T05:32:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHi, thanks for creating such a great tool, I'm using it well at work and for personal use.\r\nBut for production use, I need a more tightly managed, revision-controlled Prompt Template Store.\r\nI know that load_prompt already supported, but I wonder if it can be extended to utilize remote store, like github.\r\n\r\nFor example, if there is GitPromptTemplateStore class like:\r\n```python\r\nfrom abc import *\r\nclass PromptTemplateStore(metaclass=ABCMeta):\r\n\r\n     @abstractmethod\r\n        def load(self, path: str) -> BasePromptTemplate:\r\n            pass\r\n\r\nclass GitPromptTemplateStore(BaseModel):\r\n    @property\r\n    def repository(self) -> str:\r\n        return \"git@github.com:some_project/prompt_repo.git\"\r\n\r\n    @property\r\n    def branch(self) -> str:\r\n        return \"main\"\r\n\r\n    ...\r\n\r\n    def load(self, path: str) -> BasePromptTemplate:\r\n        ...\r\n        return {name}_prompt_template # from remote git store (with/without cache)\r\n```\r\n\r\nwhich can be utilized like:\r\n```\r\ntemplate_store = GitPromptTemplateStore(...)\r\nprompt = load_prompt_from_store(template_store, path=...)\r\n\r\n```\r\n\r\nmanaging prompt_template would be much easier.\r\n\n\n### Motivation\n\nFor production use, I need a more tightly managed, revision-controlled Prompt Template Store.\r\nI know that load_prompt already supported, but I wonder if it can be extended to utilize remote store, like github.\n\n### Your contribution\n\nI have read the CONTRIBUTING.MD, and if this request looks valid, I'd be happy to contribute.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4839/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4839/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4838",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4838/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4838/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4838/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4838",
        "id": 1713187340,
        "node_id": "I_kwDOIPDwls5mHSoM",
        "number": 4838,
        "title": "Make an option in WebBaseLoader to handle dynamic content that is loaded via JavaScript.",
        "user": {
            "login": "shamspias",
            "id": 31501615,
            "node_id": "MDQ6VXNlcjMxNTAxNjE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/31501615?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shamspias",
            "html_url": "https://github.com/shamspias",
            "followers_url": "https://api.github.com/users/shamspias/followers",
            "following_url": "https://api.github.com/users/shamspias/following{/other_user}",
            "gists_url": "https://api.github.com/users/shamspias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shamspias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shamspias/subscriptions",
            "organizations_url": "https://api.github.com/users/shamspias/orgs",
            "repos_url": "https://api.github.com/users/shamspias/repos",
            "events_url": "https://api.github.com/users/shamspias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shamspias/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-17T06:06:30Z",
        "updated_at": "2023-09-19T16:10:37Z",
        "closed_at": "2023-09-19T16:10:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWhen you request a webpage using a library like requests or aiohttp, you're getting the initial HTML of the page, but any content that's loaded via JavaScript after the page loads will not be included. That's why you might see template tags like (item.price)}} taka instead of the actual values. Those tags are placeholders that get filled in with actual data by JavaScript after the page loads.\r\n\r\nTo handle this, you'll need to use a library that can execute JavaScript. A commonly used one is Selenium, but it's heavier than requests or aiohttp because it requires running an actual web browser.\r\nBut is there any other option that doesn't need running an actual web browser or can use in long-chain without needing graphical interface like using Headless Browsers tools like  ` pyppeteer` (Python wrapper for Puppeteer)\r\n\r\nanyway please solve the issue and ad feathers like this.\r\nthanks in advance.\n\n### Motivation\n\nTo get dynamic content from a webpage while scraping text from a website or webpage.\n\n### Your contribution\n\nFor my side, I rewrite the _fetch method in your WebBaseLoader class to use pyppeteer instead of aiohttp. But still **not working** but I think this might little help.\r\nhere is my code, there I Overwirte the class\r\n```\r\nimport pyppeteer\r\nimport asyncio\r\nfrom langchain.document_loaders import WebBaseLoader as BaseWebBaseLoader\r\n\r\nclass WebBaseLoader(BaseWebBaseLoader):\r\n\r\n    async def _fetch(\r\n            self, url: str, selector: str = 'body', retries: int = 3, cooldown: int = 2, backoff: float = 1.5\r\n    ) -> str:\r\n        for i in range(retries):\r\n            try:\r\n                browser = await pyppeteer.launch()\r\n                page = await browser.newPage()\r\n                await page.goto(url)\r\n                await page.waitForSelector(selector)  # waits for a specific element to be loaded\r\n                await asyncio.sleep(5)  # waits for 5 seconds before getting the content\r\n                content = await page.content()  # This gets the full HTML, including any dynamically loaded content\r\n                await browser.close()\r\n                return content\r\n            except Exception as e:\r\n                if i == retries - 1:\r\n                    raise\r\n                else:\r\n                    logger.warning(\r\n                        f\"Error fetching {url} with attempt \"\r\n                        f\"{i + 1}/{retries}: {e}. Retrying...\"\r\n                    )\r\n                    await asyncio.sleep(cooldown * backoff ** i)\r\n        raise ValueError(\"retry count exceeded\")\r\n\r\n\r\n```\r\nand Install this two lib\r\n```\r\npip install pyppeteer\r\npyppeteer-install\r\n\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4838/reactions",
            "total_count": 4,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4838/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4837",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4837/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4837/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4837/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4837",
        "id": 1713178012,
        "node_id": "I_kwDOIPDwls5mHQWc",
        "number": 4837,
        "title": "Issue: GPT4All with Langchain generating \\x0f\\x0f",
        "user": {
            "login": "saikatbhattacharya",
            "id": 5483620,
            "node_id": "MDQ6VXNlcjU0ODM2MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5483620?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saikatbhattacharya",
            "html_url": "https://github.com/saikatbhattacharya",
            "followers_url": "https://api.github.com/users/saikatbhattacharya/followers",
            "following_url": "https://api.github.com/users/saikatbhattacharya/following{/other_user}",
            "gists_url": "https://api.github.com/users/saikatbhattacharya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saikatbhattacharya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saikatbhattacharya/subscriptions",
            "organizations_url": "https://api.github.com/users/saikatbhattacharya/orgs",
            "repos_url": "https://api.github.com/users/saikatbhattacharya/repos",
            "events_url": "https://api.github.com/users/saikatbhattacharya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saikatbhattacharya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-17T05:59:30Z",
        "updated_at": "2023-09-12T11:15:28Z",
        "closed_at": "2023-09-10T16:16:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI was trying to create a pipeline using Langchain and GPT4All (gpt4all-converted.bin). The pipeline ran fine when we tried on a windows system. But now when I am trying to run the same code on a RHEL 8 AWS (p3.8x) instance it is generating gibberish response. \r\n\r\nThis is my code - \r\n\r\n```\r\nfrom langchain import PromptTemplate, LLMChain\r\nfrom langchain.llms import GPT4All\r\nfrom langchain.callbacks.manager import CallbackManager\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\n\r\ngpt4all_path = 'Models/gpt4all-converted.bin' \r\ncallback_manager = CallbackManager([StreamingStdOutCallbackHandler()])\r\nllm = GPT4All(model=gpt4all_path, callback_manager=callback_manager, verbose=True, temp=0, n_predict=512, n_ctx=2048)\r\n\r\nprompt_temp = \"\"\"\r\nBelow is an instruction that describes a task. Write a response that appropriately completes the request.\r\n\r\n> How many letters are there in the English alphabet?\r\nThere 26 letters in the English Alphabet\r\n\r\n> Question: {question}\r\n> Reply: \r\n\"\"\"\r\n\r\nprompt = PromptTemplate(template=prompt_temp, input_variables=[\"question\"])\r\n\r\nllm_chain = LLMChain(prompt=prompt, llm=llm)\r\n\r\nresponse = llm_chain.run(\"write me a story about a lonely computer?\")\r\n```\r\n\r\nAnd this is what I am getting - \r\n\r\n```\r\nprint(response)\r\n\r\n'\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f#\\x05\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f#\\x05\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f# thealst\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f\\x0f'\r\n\r\n```\r\n\r\nCan anyone help me to understand the problem here?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4837/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4836",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4836/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4836/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4836/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4836",
        "id": 1713157876,
        "node_id": "I_kwDOIPDwls5mHLb0",
        "number": 4836,
        "title": "[Feature request] Add support for GPU offloading to Llama.cpp llm",
        "user": {
            "login": "nikitastaf1996",
            "id": 61453511,
            "node_id": "MDQ6VXNlcjYxNDUzNTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/61453511?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikitastaf1996",
            "html_url": "https://github.com/nikitastaf1996",
            "followers_url": "https://api.github.com/users/nikitastaf1996/followers",
            "following_url": "https://api.github.com/users/nikitastaf1996/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikitastaf1996/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikitastaf1996/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikitastaf1996/subscriptions",
            "organizations_url": "https://api.github.com/users/nikitastaf1996/orgs",
            "repos_url": "https://api.github.com/users/nikitastaf1996/repos",
            "events_url": "https://api.github.com/users/nikitastaf1996/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikitastaf1996/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T05:37:28Z",
        "updated_at": "2023-05-17T15:35:22Z",
        "closed_at": "2023-05-17T15:35:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "llama-cpp-python added support for n_gpu_layers \r\nHere is the comment confirming it https://github.com/abetlen/llama-cpp-python/issues/207#issuecomment-1550578859",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4836/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4836/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4835",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4835/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4835/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4835/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4835",
        "id": 1713156564,
        "node_id": "I_kwDOIPDwls5mHLHU",
        "number": 4835,
        "title": "Making the chain more robust (self-correct)",
        "user": {
            "login": "assassin808",
            "id": 93385065,
            "node_id": "U_kgDOBZDxaQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/93385065?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/assassin808",
            "html_url": "https://github.com/assassin808",
            "followers_url": "https://api.github.com/users/assassin808/followers",
            "following_url": "https://api.github.com/users/assassin808/following{/other_user}",
            "gists_url": "https://api.github.com/users/assassin808/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/assassin808/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/assassin808/subscriptions",
            "organizations_url": "https://api.github.com/users/assassin808/orgs",
            "repos_url": "https://api.github.com/users/assassin808/repos",
            "events_url": "https://api.github.com/users/assassin808/events{/privacy}",
            "received_events_url": "https://api.github.com/users/assassin808/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T05:35:55Z",
        "updated_at": "2023-09-10T16:16:59Z",
        "closed_at": "2023-09-10T16:16:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWrong outputs of the model will raise some exception. So, it may be better to provide clear feedback to the LLM on the specific issue (i.e. incorrect formatting). This would allow the LLM to do self-adjustments and retry, making it robust.\r\n\n\n### Motivation\n\nSince when I was using the chain to test my own searching tool, if the result is in other language (not english), the model fail to exactly follow the \"thought-action\" pattern.\n\n### Your contribution\n\nNot yet",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4835/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4834",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4834/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4834/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4834/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4834",
        "id": 1713137702,
        "node_id": "PR_kwDOIPDwls5QrJFb",
        "number": 4834,
        "title": "ZepChatMessageHistory - ChatMessageHistory class for Zep persistent memory storage",
        "user": {
            "login": "danielchalef",
            "id": 131175,
            "node_id": "MDQ6VXNlcjEzMTE3NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/131175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielchalef",
            "html_url": "https://github.com/danielchalef",
            "followers_url": "https://api.github.com/users/danielchalef/followers",
            "following_url": "https://api.github.com/users/danielchalef/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielchalef/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielchalef/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielchalef/subscriptions",
            "organizations_url": "https://api.github.com/users/danielchalef/orgs",
            "repos_url": "https://api.github.com/users/danielchalef/repos",
            "events_url": "https://api.github.com/users/danielchalef/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielchalef/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T05:16:29Z",
        "updated_at": "2023-06-25T23:16:36Z",
        "closed_at": "2023-05-18T03:01:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4834",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4834",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4834.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4834.patch",
            "merged_at": null
        },
        "body": "# Langchain Message History support for the Zep long-term memory service: Memory persistence, summarization, vector search, and message enrichment. \r\n\r\nMore on Zep: https://github.com/getzep/zep\r\n\r\nThe ZepChatMessageHistory class supports chat message persistence and recall, message history summarization, and vector search. For search, we'll create a separate PR for a Retriever.\r\n\r\nThe class also exposes Zep's enriched message history, including message token counts, timestamps, and more. In future, this will include session and message-specific metadata.\r\n\r\nRequired dependency: \r\n- zep-python: https://github.com/getzep/zep-python\r\n\r\n## Before submitting\r\n\r\nNotebook included. Integration testing requires standing up Zep and Postgres service containers in your project's GitHub CI. Let me know if this is feasible, and we'll share a recipe.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@dev2049",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4834/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4834/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4833",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4833/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4833/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4833/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4833",
        "id": 1713072690,
        "node_id": "I_kwDOIPDwls5mG2oy",
        "number": 4833,
        "title": "Arbitrary code execution in JiraAPIWrapper",
        "user": {
            "login": "0gur1",
            "id": 33853510,
            "node_id": "MDQ6VXNlcjMzODUzNTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/33853510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0gur1",
            "html_url": "https://github.com/0gur1",
            "followers_url": "https://api.github.com/users/0gur1/followers",
            "following_url": "https://api.github.com/users/0gur1/following{/other_user}",
            "gists_url": "https://api.github.com/users/0gur1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/0gur1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/0gur1/subscriptions",
            "organizations_url": "https://api.github.com/users/0gur1/orgs",
            "repos_url": "https://api.github.com/users/0gur1/repos",
            "events_url": "https://api.github.com/users/0gur1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/0gur1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-17T04:11:40Z",
        "updated_at": "2023-11-17T16:41:04Z",
        "closed_at": "2023-07-05T19:56:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain version:0.0.171\r\nwindows 10\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. Set the environment variables for jira and openai\r\n```python\r\nimport os\r\nfrom langchain.utilities.jira import JiraAPIWrapper\r\nos.environ[\"JIRA_API_TOKEN\"] = \"your jira api token\"\r\nos.environ[\"JIRA_USERNAME\"] = \"your username\"\r\nos.environ[\"JIRA_INSTANCE_URL\"] = \"your url\"\r\nos.environ[\"OPENAI_API_KEY\"] = \"your openai key\"\r\n```\r\n\r\n2. Run jira\r\n```python\r\njira = JiraAPIWrapper()\r\noutput = jira.run('other',\"exec(\\\"import os;print(os.popen('id').read())\\\")\")\r\n```\r\n3. The `id` command will be executed. \r\nCommands can be change to others and attackers can execute arbitrary code.\r\n\r\n### Expected behavior\r\n\r\nThe code can be executed without any check.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4833/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4832",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4832/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4832/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4832/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4832",
        "id": 1713063873,
        "node_id": "I_kwDOIPDwls5mG0fB",
        "number": 4832,
        "title": "Handling Errors in SQL Statements That Involve Multiple Table Joins",
        "user": {
            "login": "merikoxuren",
            "id": 24807517,
            "node_id": "MDQ6VXNlcjI0ODA3NTE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24807517?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/merikoxuren",
            "html_url": "https://github.com/merikoxuren",
            "followers_url": "https://api.github.com/users/merikoxuren/followers",
            "following_url": "https://api.github.com/users/merikoxuren/following{/other_user}",
            "gists_url": "https://api.github.com/users/merikoxuren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/merikoxuren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/merikoxuren/subscriptions",
            "organizations_url": "https://api.github.com/users/merikoxuren/orgs",
            "repos_url": "https://api.github.com/users/merikoxuren/repos",
            "events_url": "https://api.github.com/users/merikoxuren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/merikoxuren/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T04:01:52Z",
        "updated_at": "2023-05-18T03:05:26Z",
        "closed_at": "2023-05-18T03:05:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI encountered an issue when executing a SQL statement that involves joining multiple tables. I am working with a SQL Server database, and the following SQL query is returning an error:\r\n\r\nSELECT TOP 50000 [StoreNo], [StoreName], [Quantity], [GoodsName], [GoodsNo] \r\nFROM [JBStore] \r\nJOIN [CKCurrStore] ON [JBStore].[StoreNo] = [CKCurrStore].[StoreNo] \r\nJOIN [JBGoods] ON [CKCurrStore].[GoodsNo] = [JBGoods].[GoodsNo]\r\n\r\nThe error seems to arise because the [StoreNo] and [GoodsNo] fields are not prefixed with the table names, which causes the query to fail.\r\n\r\nHere are my table definitions:\r\ntable_info = {\r\n    \"CKXSCheck\": \"\"\"\r\n        CREATE TABLE CKXSCheck (\r\n            \"OrderNo\" VARCHAR PRIMARY KEY, \r\n            \"OrderDate\" DATETIME,\r\n            \"Amount\" REAL, \r\n            \"InOutTypeNo\" INTEGER, \r\n            \"CKAmount\" REAL,\r\n            PRIMARY KEY (\"OrderNo\")\r\n        )\"\"\",\r\n    \"CKXSCheckDetail\": \"\"\"\r\n        CREATE TABLE CKXSCheckDetail (\r\n            \"OrderNo\" VARCHAR,\r\n            \"SerialNo\" INTEGER,\r\n            \"GoodsNo\" INTEGER,\r\n            \"Amount\" REAL,\r\n            \"Quantity\" REAL,\r\n            \"Price\" REAL,\r\n            PRIMARY KEY (\"OrderNo\", \"SerialNo\"),\r\n            FOREIGN KEY (\"OrderNo\") REFERENCES CKXSCheck(\"OrderNo\"),\r\n            FOREIGN KEY (\"GoodsNo\") REFERENCES JBGoods(\"GoodsNo\")\r\n        )\"\"\",\r\n    \"JBGoods\": \"\"\"\r\n        CREATE TABLE JBGoods (\r\n            \"GoodsNo\" INTEGER PRIMARY KEY,\r\n            \"GoodsCode\" VARCHAR,\r\n            \"GoodsName\" VARCHAR,\r\n            PRIMARY KEY (\"GoodsNo\")\r\n        )\"\"\",\r\n    \"CKCurrStore\": \"\"\"\r\n        CREATE TABLE CKCurrStore (\r\n            \"StoreNo\" VARCHAR,\r\n            \"GoodsNo\" VARCHAR,\r\n            \"Quantity\" REAL,\r\n            FOREIGN KEY (\"StoreNo\") REFERENCES CKXSCheck(\"JBStore\"),\r\n            FOREIGN KEY (\"GoodsNo\") REFERENCES JBGoods(\"GoodsNo\")\r\n        )\"\"\",\r\n    \"JBStore\": \"\"\"\r\n        CREATE TABLE JBStore (\r\n            \"StoreNo\" VARCHAR PRIMARY KEY,\r\n            \"StoreName\" VARCHAR,\r\n            PRIMARY KEY (\"StoreNo\")\r\n        )\"\"\",\r\n}\r\n\r\nHow can I resolve this issue?\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [x] LLMs/Chat Models\n- [x] Embedding Models\n- [x] Prompts / Prompt Templates / Prompt Selectors\n- [x] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [x] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSend a request to the '/api/query' endpoint\n\n### Expected behavior\n\nimport os\r\nimport sqlite3\r\nimport pymssql\r\nimport tkinter as tk\r\nimport tkinter.ttk as ttk\r\nfrom langchain.agents import create_sql_agent, ZeroShotAgent\r\nfrom langchain.agents.agent_toolkits import SQLDatabaseToolkit\r\nfrom langchain import OpenAI, SQLDatabase, SQLDatabaseChain\r\nfrom langchain.prompts.prompt import PromptTemplate\r\nfrom typing import Dict, Any\r\nfrom langchain import LLMChain\r\nfrom typing import Any, List, Tuple\r\nfrom urllib.parse import quote_plus as urlquote\r\nfrom sqlalchemy import create_engine\r\nfrom sqlalchemy.engine import reflection\r\nfrom sqlalchemy import inspect\r\nfrom sqlalchemy.orm import sessionmaker\r\nimport pandas as pd\r\nfrom sqlalchemy.sql import text as sql_text\r\nfrom sqlalchemy import Table, MetaData, select\r\nfrom sqlalchemy.sql import text\r\nimport json\r\nimport decimal\r\nimport datetime\r\nimport time\r\nfrom sql_utils import add_table_prefix_to_columns\r\n\r\nfrom flask import Flask, request, render_template,jsonify\r\n\r\n\r\nimport re\r\n#\u67e5\u8be2\u5168\u90e8\u5546\u54c1\r\n#\u67e5\u8be2\u9500\u552e\u989d\u524d100\u7684\u6240\u6709\u5546\u54c1\r\n#\u67e5\u8be2\u5e93\u5b58\u6570\u91cf\u660e\u7ec6\u8868 \u663e\u793a\u4ed3\u5e93\u5e8f\u53f7 \u4ed3\u5e93\u540d\u79f0 \u6570\u91cf \u5546\u54c1\u540d\u79f0 \u5546\u54c1\u5e8f\u53f7\r\n# \u66ff\u6362\u4e3a\u4f60\u7684 API \u5bc6\u94a5\r\n \r\n# Customized English prompt\r\n_DEFAULT_TEMPLATE = \"\"\"You are an MS SQL expert. Given an input question, first create a syntactically correct MS SQL query to run, then look at the results of the query and return the answer to the input question. Note that you should never perform any operations that could modify the database. This includes UPDATE, DELETE, or INSERT operations. Your job is only to read data and answer questions.\r\nUnless the user specifies in the question a specific number of examples to obtain, query for 50000 results using the TOP clause as per MS SQL. You can order the results to return the most informative data in the database.\r\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in square brackets ([]) to denote them as delimited identifiers.\r\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\r\nUse the following format:\r\nQuestion: \"Question here\"\r\nSQLQuery: \"SQL Query to run\"\r\nSQLResult: \"Result of the SQLQuery\" \r\n\r\nOnly use the following tables:\r\n{table_info}\r\nQuestion: {input}\"\"\"\r\n\r\nPROMPT = PromptTemplate(\r\n    input_variables=[\"input\", \"table_info\"], template=_DEFAULT_TEMPLATE\r\n)\r\ncustom_table_info_OLD= {\r\n    \"v_CKXSDetail\": \"\"\"CREATE TABLE v_CKXSDetail (\r\n        \"OrderNo\" VARCHAR , -- \u5355\u636e\u7f16\u53f7\uff0c\r\n        \"OrderDate\":DATETime,-- \u9500\u552e\u65e5\u671f \r\n        \"GoodsCode\":VARCHAR,-- \u5546\u54c1\u7f16\u53f7 \r\n        \"GoodsName\":VARCHAR,-- \u5546\u54c1\u540d\u79f0 \r\n        \"OrderDate\":DATETime,-- \u9500\u552e\u65e5\u671f \r\n        \r\n        \"Amount\" numeric(18,2), --  \u9500\u552e\u91d1\u989d,\r\n        \"InOutTypeNo\" INTEGER, -- \u503c\u4e3a2\u8868\u793a\u9000\u8d27\r\n        \"Quantity\" INTEGER, -- \u9500\u552e\u6570\u91cf\r\n        \"CKAmount\" REAL--  \u6210\u672c\u91d1\u989d\r\n  \r\n    )\"\"\"}\r\ncustom_table_info = {\r\n    \"CKXSCheck\": \"\"\"CREATE TABLE CKXSCheck (\r\n        \"OrderNo\" VARCHAR PRIMARY KEY, -- \u5355\u53f7\uff0c\u5b57\u7b26\u578b\u4e3b\u952e\r\n        \"OrderDate\":DATETime,-- \u9500\u552e\u65e5\u671f \r\n        \"Amount\" REAL, --  \u6574\u5355\u9500\u552e\u91d1\u989d,(case InOutTypeNo when 2 then -Amount else Amount end)\r\n        \"InOutTypeNo\" INTEGER, -- \u503c\u4e3a2\u8868\u793a\u9000\u8d27\r\n        \"CKAmount\" REAL,--  \u6574\u5355\u6210\u672c\u91d1\u989d\r\n        PRIMARY KEY (\"OrderNo\"), -- \u5c06 OrderNo \u4e3b\u952e\r\n    )\"\"\",\r\n    \"CKXSCheckDetail\": \"\"\"CREATE TABLE CKXSCheckDetail (\r\n        \"OrderNo\" VARCHAR, -- \u5355\u53f7 \uff0c\u5916\u952e\r\n        \"SerialNo\" INTEGER, -- \u5e8f\u5217\u53f7 \uff0c\u4e3b\u952e\r\n        \"GoodsNo\" INTEGER, -- \u5546\u54c1\u5e8f\u53f7\uff0c\u5916\u952e\r\n        \"Amount\" REAL, --  \u5546\u54c1\u9500\u552e\u91d1\u989d\r\n        \"Quantity\" REAL, --  \u5546\u54c1\u9500\u552e\u6570\u91cf\r\n        \"Price\" REAL, --  \u9500\u552e\u5355\u4ef7\r\n        PRIMARY KEY (\"OrderNo\", \"SerialNo\"), -- \u5c06 OrderNo \u548c SerialNo \u8bbe\u4e3a\u8054\u5408\u4e3b\u952e\r\n        FOREIGN KEY (\"OrderNo\") REFERENCES CKXSCheck(\"OrderNo\"), -- OrderNo \u662f CKXSCheck \u8868\u7684\u5916\u952e\r\n        FOREIGN KEY (\"GoodsNo\") REFERENCES JBGoods(\"GoodsNo\") -- GoodsNo \u662f JBGoods \u8868\u7684\u5916\u952e\r\n    )\"\"\",\r\n    \"JBGoods\": \"\"\"CREATE TABLE JBGoods (\r\n        \"GoodsNo\" INTEGER PRIMARY KEY, -- \u5546\u54c1\u5e8f\u53f7\uff0c\u4e3b\u952e\r\n        \"GoodsCode\" VARCHAR, -- \u5546\u54c1\u7f16\u53f7\r\n        \"GoodsName\" VARCHAR, -- \u5546\u54c1\u540d\u79f0\r\n         PRIMARY KEY (\"GoodsNo\") -- \u5c06 GoodsNo \u8bbe\u4e3a\u4e3b\u952e\r\n    )\"\"\",\r\n   \"CKCurrStore\": \"\"\"CREATE TABLE CKCurrStore (\r\n        \"StoreNo\" VARCHAR, -- \u4ed3\u5e93\u5e8f\u53f7\uff0c\u5916\u952e\r\n        \"GoodsNo\" VARCHAR, -- \u5546\u54c1\u5e8f\u53f7\uff0c\u5916\u952e\r\n        \"Quantity\" REAL, -- \u5e93\u5b58\u6570\u91cf\r\n        FOREIGN KEY (\"StoreNo\") REFERENCES CKXSCheck(\"JBStore\"), -- StoreNo \u662f JBStore \u8868\u7684\u5916\u952e\r\n        FOREIGN KEY (\"GoodsNo\") REFERENCES JBGoods(\"GoodsNo\") -- GoodsNo \u662f JBGoods \u8868\u7684\u5916\u952e\r\n    )\"\"\",\r\n  \"JBStore\": \"\"\"CREATE TABLE JBStore (\r\n       \"StoreNo\" VARCHAR, -- \u4ed3\u5e93\u5e8f\u53f7\uff0c\u4e3b\u952e\r\n       \"StoreName\" VARCHAR, -- \u4ed3\u5e93\u540d\u79f0\r\n       PRIMARY KEY (\"StoreNo\") -- \u5c06 GoodsNo \u8bbe\u4e3a\u4e3b\u952e\r\n   )\"\"\",\r\n}\r\n\r\n\r\n\r\ndb = SQLDatabase.from_uri(f\"mssql+pymssql://{user_name}:{urlquote(psw)}@{ip}/{database}\", include_tables=['CKXSCheck', 'CKXSCheckDetail', 'JBGoods', 'CKCurrStore', 'JBStore'], custom_table_info=custom_table_info)\r\n\r\nllm=OpenAI(temperature=0)\r\n\r\n\r\nclass CustomSQLQueryChain(SQLDatabaseChain):\r\n    def _call(self, inputs: Dict[str, Any]) -> Dict[str, Any]:\r\n        prompt = self.prompt or SQL_PROMPTS.get(self.database.dialect, PROMPT)\r\n\r\n        llm_chain = LLMChain(llm=self.llm, prompt=prompt)\r\n        input_text = f\"{inputs[self.input_key]}\\nSQLQuery:\"\r\n        self.callback_manager.on_text(input_text, verbose=self.verbose)\r\n        table_names_to_use = inputs.get(\"table_names_to_use\")\r\n        table_info = self.database.get_table_info(table_names=table_names_to_use)\r\n        llm_inputs = {\r\n            \"input\": input_text,\r\n            \"top_k\": self.top_k,\r\n            \"dialect\": self.database.dialect,\r\n            \"table_info\": table_info,\r\n            \"stop\": [\"\\nSQLResult:\"],\r\n        }\r\n        intermediate_steps = []\r\n        sql_cmd = llm_chain.predict(**llm_inputs).strip()  # simplified this line\r\n        intermediate_steps.append({\"SQLQuery\": sql_cmd})\r\n        self.callback_manager.on_text(sql_cmd, color=\"green\", verbose=self.verbose)\r\n\r\n        chain_result: Dict[str, Any] = {\r\n            \"intermediate_steps\": intermediate_steps,\r\n            \"result\": sql_cmd,\r\n        }\r\n\r\n        return chain_result\r\n\r\ncustom_db_chain = CustomSQLQueryChain(llm=llm, database=db, prompt=PROMPT, verbose=True, return_intermediate_steps=True)\r\n\r\n\r\ndef display_table(tree, columns, data):\r\n    print(data)\r\n    print(columns)\r\n\r\n    # \u5220\u9664\u6240\u6709\u7684\u5217\r\n    tree['columns'] = []\r\n\r\n    # \u91cd\u65b0\u8bbe\u7f6e\u5217\r\n    tree[\"columns\"] = columns\r\n    tree[\"show\"] = \"headings\"\r\n\r\n    for col in columns:\r\n        tree.heading(col, text=col)\r\n        tree.column(col, width=100)\r\n\r\n    # \u5220\u9664\u6240\u6709\u7684\u6570\u636e\r\n    for i in tree.get_children():\r\n        tree.delete(i)\r\n\r\n    # \u63d2\u5165\u65b0\u7684\u6570\u636e\r\n    for row in data:\r\n        tree.insert(\"\", \"end\", values=row)\r\n\r\n\r\n\r\n\r\nroot = tk.Tk()\r\nroot.title(\"Chat with your Tabular Data\")\r\n\r\nentry = ttk.Entry(root, font=(\"Arial\", 14))\r\nentry.pack(padx=20, pady=20, fill=tk.X)\r\n\r\n\r\ndef get_chinese_col_names(field_names, conn):\r\n    # \u4f7f\u7528 XTSQLField \u8868\u67e5\u8be2\u4e2d\u6587\u5217\u540d\r\n    field_names_str = ', '.join(f\"'{field_name}'\" for field_name in field_names)  # \u5c06\u5b57\u6bb5\u540d\u5217\u8868\u8f6c\u6362\u4e3a\u9002\u5408SQL\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\r\n    query = f\"\"\"\r\n    WITH numbered_rows AS (\r\n        SELECT SqFieldName, \r\n               (CASE SqFieldName WHEN 'GoodsCode' THEN '\u5546\u54c1\u7f16\u53f7' WHEN 'GoodsName'  THEN '\u5546\u54c1\u540d\u79f0' WHEN 'Quantity'  THEN '\u6570\u91cf' ELSE CClientName END) as CClientName, \r\n               ROW_NUMBER() OVER (PARTITION BY SqFieldName ORDER BY CClientName) AS rn\r\n        FROM XTSQLField\r\n        WHERE SqFieldName in ({field_names_str})  \r\n        AND ASCII(LEFT(CClientName, 1)) > 127  -- \u6dfb\u52a0\u8fd9\u4e2a\u6761\u4ef6\u4ee5\u4ec5\u9009\u62e9CClientName\u4e3a\u4e2d\u6587\u7684\u884c\r\n    )\r\n    SELECT SqFieldName, CClientName\r\n    FROM numbered_rows\r\n    WHERE rn = 1;\r\n    \"\"\"\r\n    print(query)\r\n\r\n    result_proxy = conn.execute(query)\r\n    name_mapping = {row['SqFieldName']: row['CClientName'] for row in result_proxy}  # \u521b\u5efa\u4e00\u4e2a\u5b57\u6bb5\u540d\u5230\u4e2d\u6587\u540d\u7684\u6620\u5c04\u5b57\u5178\r\n\r\n    chinese_col_names = []\r\n    for field_name in field_names:\r\n        chinese_name = name_mapping.get(field_name, field_name)  # \u5982\u679c\u6ca1\u6709\u627e\u5230\u4e2d\u6587\u540d\uff0c\u5c31\u4f7f\u7528\u539f\u59cb\u7684\u5b57\u6bb5\u540d\r\n        chinese_col_names.append(chinese_name)\r\n\r\n    return chinese_col_names\r\n\r\nclass DecimalEncoder(json.JSONEncoder):\r\n    def default(self, obj):\r\n        if isinstance(obj, decimal.Decimal):\r\n            return float(obj)\r\n        return super(DecimalEncoder, self).default(obj)\r\n\r\napp = Flask(__name__)\r\n\r\n#\u5206\u9875\u67e5\u8be2\r\n@app.route('/api/get-messages', methods=['POST'])\r\ndef get_messages():\r\n    # \u83b7\u53d6\u524d\u7aef\u4f20\u8fc7\u6765\u7684\u5206\u9875\u53c2\u6570\r\n    page = request.args.get('page', default = 1, type = int)\r\n\r\n    # \u8fde\u63a5\u6570\u636e\u5e93\r\n    engine = create_engine(f\"mssql+pymssql://{user_name}:{urlquote(psw)}@{ip}/{database}\")\r\n    metadata = MetaData(bind=engine)\r\n\r\n    # \u521b\u5efa\u4e00\u4e2a\u8868\u5bf9\u8c61\uff0c\u53cd\u6620AiQuery\u8868\r\n    AiQuery = Table('AiQuery', metadata, autoload_with=engine)\r\n\r\n    with engine.connect() as conn:\r\n        # \u67e5\u8be2AiQuery\u8868\r\n        pagesize = 4\r\n        select_stmt = select(AiQuery).order_by(AiQuery.columns.ID.desc()).limit(pagesize).offset((page - 1) * pagesize)\r\n        result_proxy = conn.execute(select_stmt)\r\n\r\n        # \u5c06 LegacyRow \u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u5178\r\n        result_data = [dict(row) for row in result_proxy.fetchall()]\r\n\r\n    # \u6839\u636e\u4f60\u7684\u9700\u6c42\u683c\u5f0f\u5316\u8fd4\u56de\u7684\u6570\u636e\r\n    messages = []\r\n    for data in result_data:\r\n        messages.append({\r\n            \"text\": data['QueryStr'],\r\n            \"time\": data['UsedTime'],\r\n            \"records\": data['ResultRecords'],\r\n            \"timestamp\": data['CreateDate'].strftime(\"%Y-%m-%d %H:%M\"),  # \u5c06\u65e5\u671f\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\r\n            \"id\": data['ID']\r\n        })\r\n\r\n    return jsonify(messages)\r\n\r\n\r\n@app.route('/api/query', methods=['POST'])\r\ndef do_query():\r\n    data = request.get_json()\r\n    query = data.get('query')\r\n    start_time = time.time()  # \u8bb0\u5f55\u67e5\u8be2\u5f00\u59cb\u7684\u65f6\u95f4\r\n\r\n    engine = create_engine(f\"mssql+pymssql://{user_name}:{urlquote(psw)}@{ip}/{database}\")\r\n    metadata = MetaData(bind=engine)\r\n\r\n    # \u521b\u5efa\u4e00\u4e2a\u8868\u5bf9\u8c61\uff0c\u53cd\u6620AiQuery\u8868\r\n    AiQuery = Table('AiQuery', metadata, autoload_with=engine)\r\n\r\n    inserted_id = None # \u7528\u4e8e\u4fdd\u5b58\u65b0\u63d2\u5165\u7684\u884c\u7684ID\r\n\r\n    with engine.connect() as conn:\r\n        # \u68c0\u67e5AiQuery\u8868\u4e2d\u662f\u5426\u5df2\u7ecf\u6709\u8be5\u67e5\u8be2\r\n        select_stmt = select(AiQuery).where(AiQuery.columns.QueryStr == query)\r\n        result_proxy = conn.execute(select_stmt)\r\n        print(select_stmt.compile(compile_kwargs={\"literal_binds\": True}))\r\n\r\n        # \u5982\u679c\u6709\u7ed3\u679c\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\r\n        row = result_proxy.fetchone()\r\n        print(row)\r\n        if row:\r\n            # \u4ece AiQuery \u8868\u4e2d\u83b7\u53d6SQL\u67e5\u8be2\u5b57\u7b26\u4e32\r\n            sql_query = row.SQLStr\r\n\r\n            # \u6267\u884c\u67e5\u8be2\u5b57\u7b26\u4e32\uff0c\u83b7\u53d6\u7ed3\u679c\r\n            result_proxy = conn.execute(sql_query)\r\n\r\n            # \u5c06 LegacyRow \u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u5178\r\n            result_data = [dict(row) for row in result_proxy.fetchall()]\r\n\r\n            column_names = list(result_proxy.keys())\r\n            sorted_result_data = []\r\n            for resrow in result_data:\r\n                sorted_row = [resrow[column_name] for column_name in column_names]\r\n                sorted_result_data.append(sorted_row)\r\n            result_data = sorted_result_data\r\n\r\n            column_names = get_chinese_col_names(column_names, conn)\r\n            inserted_id = row.ID  # \u83b7\u53d6\u5df2\u7ecf\u5b58\u5728\u7684\u884c\u7684ID\r\n\r\n            used_time = round(time.time() - start_time, 2)  # \u8ba1\u7b97\u67e5\u8be2\u8017\u65f6\r\n            refresh_date = datetime.datetime.now()  # \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\r\n            result_records = len(result_data)  # \u83b7\u53d6\u7ed3\u679c\u8bb0\u5f55\u6570\r\n            isAdd = False\r\n\r\n            # \u66f4\u65b0RefreshDate\uff0cResultRecords\u548cUsedTime\u5b57\u6bb5\r\n            update_stmt = AiQuery.update(). \\\r\n                where(AiQuery.columns.ID == inserted_id). \\\r\n                values(RefreshDate=refresh_date, ResultRecords=result_records, UsedTime=used_time,\r\n                       Result_data=json.dumps(result_data, cls=DecimalEncoder))\r\n            conn.execute(update_stmt)\r\n        else:\r\n            # \u5982\u679c\u6ca1\u6709\u7ed3\u679c\uff0c\u90a3\u4e48\u6267\u884cGPT\u67e5\u8be2\r\n            result = custom_db_chain(query)\r\n            sql_query = result['result']\r\n            sql_query = add_table_prefix_to_columns(sql_query, custom_table_info)\r\n            print(sql_query)\r\n            result_proxy = conn.execute(sql_query)\r\n\r\n            # \u5c06 LegacyRow \u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u5178\r\n            result_data = [dict(row) for row in result_proxy.fetchall()]\r\n            column_names = list(result_proxy.keys())\r\n            sorted_result_data = []\r\n            for resrow in result_data:\r\n                sorted_row = [resrow[column_name] for column_name in column_names]\r\n                sorted_result_data.append(sorted_row)\r\n            result_data = sorted_result_data\r\n\r\n            column_names = get_chinese_col_names(column_names, conn)\r\n\r\n            used_time = round(time.time() - start_time, 2) # \u8ba1\u7b97\u67e5\u8be2\u8017\u65f6\r\n            result_records = len(result_data) # \u83b7\u53d6\u7ed3\u679c\u8bb0\u5f55\u6570\r\n\r\n            # \u5c06\u7ed3\u679c\u4fdd\u5b58\u5230AiQuery\u8868\u4e2d\uff0c\u5305\u62ec\u65b0\u7684\u5b57\u6bb5\r\n            insert_stmt = AiQuery.insert().values(QueryStr=query, SQLStr=sql_query, Column_names=json.dumps(column_names, cls=DecimalEncoder), Result_data=json.dumps(result_data, cls=DecimalEncoder), ResultRecords=result_records, UsedTime=used_time)\r\n\r\n            result = conn.execute(insert_stmt)\r\n            inserted_id = result.inserted_primary_key[0] # \u83b7\u53d6\u65b0\u63d2\u5165\u7684\u884c\u7684ID\r\n            isAdd = True\r\n\r\n    return jsonify({'isAdd': isAdd, 'column_names': column_names, 'result_data': result_data, 'inserted_id': inserted_id})\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n\r\ntree = ttk.Treeview(root)\r\ntree.pack(padx=20, pady=20, fill=tk.X)\r\ndef on_click():\r\n    query = entry.get()\r\n\r\n    result = custom_db_chain(query)\r\n    sql_query = result['result']\r\n\r\n    engine = create_engine(f\"mssql+pymssql://{user_name}:{urlquote(psw)}@{ip}/{database}\")\r\n    with engine.connect() as conn:\r\n        result_proxy = conn.execute(sql_query)\r\n\r\n        # \u540c\u6837\uff0c\u5c06 LegacyRow \u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u5178\r\n        result_data = [dict(row) for row in result_proxy.fetchall()]\r\n        column_names = list(result_proxy.keys())\r\n        column_names = get_chinese_col_names(column_names, conn)\r\n\r\n    # \u65b0\u589e\uff1a\u6e05\u7a7a Treeview\r\n    for item in tree.get_children():\r\n        tree.delete(item)\r\n\r\n    # \u65b0\u589e\uff1a\u663e\u793a\u67e5\u8be2\u7ed3\u679c\r\n    display_table(tree, column_names, result_data)\r\n\r\n    # \u65b0\u589e\uff1a\u663e\u793a\u67e5\u8be2\u7ed3\u679c\r\n   # display_table(tree, [header[\"label\"] for header in dataTable[\"headers\"]], dataTable[\"contents\"])\r\n\r\n\r\n\r\n   # except Exception as err:\r\n     #   print(\"Error occurred:\", err)\r\n\r\n\r\n\r\nbutton = ttk.Button(root, text=\"Chat\", command=on_click)\r\nbutton.pack(padx=20, pady=20)\r\n\r\ntext = tk.Text(root, height=10, width=60, font=(\"Arial\", 14))\r\ntext.pack(padx=20, pady=20)\r\n\r\nroot.mainloop()\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4832/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4831",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4831/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4831/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4831/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4831",
        "id": 1713053765,
        "node_id": "PR_kwDOIPDwls5Qq2wJ",
        "number": 4831,
        "title": "VecDB integration",
        "user": {
            "login": "jtwinrelevanceai",
            "id": 92562332,
            "node_id": "U_kgDOBYRjnA",
            "avatar_url": "https://avatars.githubusercontent.com/u/92562332?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jtwinrelevanceai",
            "html_url": "https://github.com/jtwinrelevanceai",
            "followers_url": "https://api.github.com/users/jtwinrelevanceai/followers",
            "following_url": "https://api.github.com/users/jtwinrelevanceai/following{/other_user}",
            "gists_url": "https://api.github.com/users/jtwinrelevanceai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jtwinrelevanceai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jtwinrelevanceai/subscriptions",
            "organizations_url": "https://api.github.com/users/jtwinrelevanceai/orgs",
            "repos_url": "https://api.github.com/users/jtwinrelevanceai/repos",
            "events_url": "https://api.github.com/users/jtwinrelevanceai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jtwinrelevanceai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T03:52:00Z",
        "updated_at": "2023-05-17T04:07:12Z",
        "closed_at": "2023-05-17T04:07:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4831",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4831",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4831.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4831.patch",
            "merged_at": null
        },
        "body": "# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4831/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4830",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4830/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4830/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4830/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4830",
        "id": 1713035478,
        "node_id": "I_kwDOIPDwls5mGtjW",
        "number": 4830,
        "title": "GPTCache keep creating new gptcache cache_obj",
        "user": {
            "login": "elBarkey",
            "id": 6080684,
            "node_id": "MDQ6VXNlcjYwODA2ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6080684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elBarkey",
            "html_url": "https://github.com/elBarkey",
            "followers_url": "https://api.github.com/users/elBarkey/followers",
            "following_url": "https://api.github.com/users/elBarkey/following{/other_user}",
            "gists_url": "https://api.github.com/users/elBarkey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/elBarkey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/elBarkey/subscriptions",
            "organizations_url": "https://api.github.com/users/elBarkey/orgs",
            "repos_url": "https://api.github.com/users/elBarkey/repos",
            "events_url": "https://api.github.com/users/elBarkey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/elBarkey/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T03:26:37Z",
        "updated_at": "2023-05-18T16:42:38Z",
        "closed_at": "2023-05-18T16:42:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain Version: 0.0.170\r\nPlatform: Linux X86_64\r\nPython: 3.9\r\n\r\n### Who can help?\r\n@SimFG \r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nSteps to produce behaviour:\r\n\r\n```python\r\nfrom gptcache import Cache\r\nfrom gptcache.adapter.api import init_similar_cache\r\nfrom langchain.cache import GPTCache\r\n\r\n# Avoid multiple caches using the same file, causing different llm model caches to affect each other\r\n\r\ndef init_gptcache(cache_obj: Cache, llm str):\r\n    init_similar_cache(cache_obj=cache_obj, data_dir=f\"similar_cache_{llm}\")\r\n\r\nlangchain.llm_cache = GPTCache(init_gptcache)\r\nllm = OpenAI(model_name=\"text-davinci-002\", temperature=0.2)\r\nllm(\"tell me a joke\")\r\nprint(\"cached:\", langchain.llm_cache.lookup(\"tell me a joke\", llm_string))\r\n# cached: None\r\n```\r\n\r\nthe cache won't hits\r\n\r\n### Expected behavior\r\n\r\nthe gptcache should have a hit",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4830/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4829",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4829/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4829/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4829/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4829",
        "id": 1713034327,
        "node_id": "PR_kwDOIPDwls5Qqyxp",
        "number": 4829,
        "title": "add option to return prompt",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-17T03:24:55Z",
        "updated_at": "2023-08-11T21:55:56Z",
        "closed_at": "2023-08-11T21:55:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4829",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4829",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4829.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4829.patch",
            "merged_at": null
        },
        "body": "can be useful to have access to the prompt outside of llmchain, similar to return_intermediate steps",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4829/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4828",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4828/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4828/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4828/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4828",
        "id": 1713027102,
        "node_id": "PR_kwDOIPDwls5QqxP3",
        "number": 4828,
        "title": "Add dev option",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T03:16:10Z",
        "updated_at": "2023-05-17T14:09:27Z",
        "closed_at": "2023-05-17T14:09:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4828",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4828",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4828.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4828.patch",
            "merged_at": "2023-05-17T14:09:26Z"
        },
        "body": "enable running\r\n```\r\nlangchain plus start --dev\r\n```\r\n\r\nTo use the RC iamges instead",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4828/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4827",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4827/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4827/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4827/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4827",
        "id": 1713026438,
        "node_id": "PR_kwDOIPDwls5QqxG_",
        "number": 4827,
        "title": "FIX: GPTCache cache_obj creation loop",
        "user": {
            "login": "elBarkey",
            "id": 6080684,
            "node_id": "MDQ6VXNlcjYwODA2ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6080684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elBarkey",
            "html_url": "https://github.com/elBarkey",
            "followers_url": "https://api.github.com/users/elBarkey/followers",
            "following_url": "https://api.github.com/users/elBarkey/following{/other_user}",
            "gists_url": "https://api.github.com/users/elBarkey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/elBarkey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/elBarkey/subscriptions",
            "organizations_url": "https://api.github.com/users/elBarkey/orgs",
            "repos_url": "https://api.github.com/users/elBarkey/repos",
            "events_url": "https://api.github.com/users/elBarkey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/elBarkey/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-17T03:15:06Z",
        "updated_at": "2023-05-18T16:42:36Z",
        "closed_at": "2023-05-18T16:42:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4827",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4827",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4827.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4827.patch",
            "merged_at": "2023-05-18T16:42:36Z"
        },
        "body": "_get_gptcache method keep creating new gptcache instance, here's the fix\r\n\r\n# Fix GPTCache cache_obj creation loop\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes #4830 \r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4827/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4827/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4826",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4826/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4826/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4826/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4826",
        "id": 1713000731,
        "node_id": "PR_kwDOIPDwls5Qqry5",
        "number": 4826,
        "title": "support SelfQueryRetriever aget_relevant_documents",
        "user": {
            "login": "Yeong0228",
            "id": 110876608,
            "node_id": "U_kgDOBpvXwA",
            "avatar_url": "https://avatars.githubusercontent.com/u/110876608?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yeong0228",
            "html_url": "https://github.com/Yeong0228",
            "followers_url": "https://api.github.com/users/Yeong0228/followers",
            "following_url": "https://api.github.com/users/Yeong0228/following{/other_user}",
            "gists_url": "https://api.github.com/users/Yeong0228/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Yeong0228/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Yeong0228/subscriptions",
            "organizations_url": "https://api.github.com/users/Yeong0228/orgs",
            "repos_url": "https://api.github.com/users/Yeong0228/repos",
            "events_url": "https://api.github.com/users/Yeong0228/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Yeong0228/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T02:39:09Z",
        "updated_at": "2023-05-17T02:53:15Z",
        "closed_at": "2023-05-17T02:53:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4826",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4826",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4826.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4826.patch",
            "merged_at": null
        },
        "body": "# Support SelfQueryRetriever aget_relevant_documents\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFeature # Support SelfQueryRetriever aget_relevant_documents\r\nchange predict_and_parse method and vectorstore.search method to async version.\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4826/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4826/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4825",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4825/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4825/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4825/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4825",
        "id": 1712990151,
        "node_id": "I_kwDOIPDwls5mGifH",
        "number": 4825,
        "title": "TypeError: unsupported operand type(s) for -: 'datetime.datetime' and 'NoneType'",
        "user": {
            "login": "ciaran-regan-ie",
            "id": 82412948,
            "node_id": "MDQ6VXNlcjgyNDEyOTQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/82412948?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ciaran-regan-ie",
            "html_url": "https://github.com/ciaran-regan-ie",
            "followers_url": "https://api.github.com/users/ciaran-regan-ie/followers",
            "following_url": "https://api.github.com/users/ciaran-regan-ie/following{/other_user}",
            "gists_url": "https://api.github.com/users/ciaran-regan-ie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ciaran-regan-ie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ciaran-regan-ie/subscriptions",
            "organizations_url": "https://api.github.com/users/ciaran-regan-ie/orgs",
            "repos_url": "https://api.github.com/users/ciaran-regan-ie/repos",
            "events_url": "https://api.github.com/users/ciaran-regan-ie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ciaran-regan-ie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-17T02:24:24Z",
        "updated_at": "2023-05-22T22:47:05Z",
        "closed_at": "2023-05-22T22:47:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain version 0.0.171\r\npython version 3.9.13\r\n\r\nmacos\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nThis is a problem with the generative agents.\r\n\r\nTo reproduce please follow the tutorial outlines here:\r\nhttps://python.langchain.com/en/latest/use_cases/agent_simulations/characters.html\r\n\r\nWhen you get to the following line of code you will get an error:\r\n`print(tommie.get_summary(force_refresh=True))`\r\n\r\n```\r\nFile ~/.pyenv/versions/3.9.13/lib/python3.9/site-packages/langchain/retrievers/time_weighted_retriever.py:14, in _get_hours_passed(time, ref_time)\r\n12 def _get_hours_passed(time: datetime.datetime, ref_time: datetime.datetime) -> float:\r\n13 \"\"\"Get the hours passed between two datetime objects.\"\"\"\r\n---> 14 return (time - ref_time).total_seconds() / 3600\r\n\r\nTypeError: unsupported operand type(s) for -: 'datetime.datetime' and 'NoneType'\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe ref time should be a datetime and tommies summary should be printed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4825/reactions",
            "total_count": 8,
            "+1": 8,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4825/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4824",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4824/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4824/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4824/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4824",
        "id": 1712985919,
        "node_id": "PR_kwDOIPDwls5QqoyX",
        "number": 4824,
        "title": "Add weaviate by_text",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T02:17:42Z",
        "updated_at": "2023-05-17T02:43:16Z",
        "closed_at": "2023-05-17T02:43:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4824",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4824",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4824.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4824.patch",
            "merged_at": "2023-05-17T02:43:15Z"
        },
        "body": "Thanks @ZouhairElhadi! Made small change\r\n\r\nCloses #4742 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4824/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4824/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4823",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4823/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4823/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4823/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4823",
        "id": 1712980292,
        "node_id": "PR_kwDOIPDwls5Qqnnn",
        "number": 4823,
        "title": "Async Run Persistance",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T02:09:48Z",
        "updated_at": "2023-05-22T04:51:41Z",
        "closed_at": "2023-05-22T04:51:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4823",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4823",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4823.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4823.patch",
            "merged_at": null
        },
        "body": "Would love feedback on this - not sure if it's appropriate in all scenarios",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4823/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4822",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4822/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4822/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4822/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4822",
        "id": 1712955751,
        "node_id": "PR_kwDOIPDwls5Qqil-",
        "number": 4822,
        "title": "Retry session and tenant",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T01:35:53Z",
        "updated_at": "2023-05-17T01:54:41Z",
        "closed_at": "2023-05-17T01:54:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4822",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4822",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4822.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4822.patch",
            "merged_at": "2023-05-17T01:54:40Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4822/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4821",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4821/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4821/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4821/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4821",
        "id": 1712933277,
        "node_id": "I_kwDOIPDwls5mGUmd",
        "number": 4821,
        "title": "pinecone.similarity_search -> TypeError: OpenAIEmbeddings.embed_query() missing 1 required positional argument: 'text'",
        "user": {
            "login": "virtustate",
            "id": 1043068,
            "node_id": "MDQ6VXNlcjEwNDMwNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1043068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/virtustate",
            "html_url": "https://github.com/virtustate",
            "followers_url": "https://api.github.com/users/virtustate/followers",
            "following_url": "https://api.github.com/users/virtustate/following{/other_user}",
            "gists_url": "https://api.github.com/users/virtustate/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/virtustate/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/virtustate/subscriptions",
            "organizations_url": "https://api.github.com/users/virtustate/orgs",
            "repos_url": "https://api.github.com/users/virtustate/repos",
            "events_url": "https://api.github.com/users/virtustate/events{/privacy}",
            "received_events_url": "https://api.github.com/users/virtustate/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-17T01:03:52Z",
        "updated_at": "2023-07-05T13:21:14Z",
        "closed_at": "2023-07-05T13:21:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain 0.0.171, Python 3.10.10\r\n\r\nrunning the code:\r\n\r\nindex = pinecone.Index('ssk')\r\nprint(index.describe_index_stats())\r\nvectorstore = Pinecone(index=index, embedding_function=OpenAIEmbeddings.embed_query, text_key='text')\r\ndocuments = vectorstore.similarity_search('How can several llama_indexes be composed?')\r\n\r\nprint(index.describe_index_stats()) gives the following\r\n{'dimension': 1536,\r\n 'index_fullness': 0.0,\r\n 'namespaces': {'': {'vector_count': 335}},\r\n 'total_vector_count': 335}\r\n\r\nbut gives an error in the vectorstore.similarity_search call\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In[46], line 4\r\n      2 print(index.describe_index_stats())\r\n      3 vectorstore = Pinecone(index=index, embedding_function=OpenAIEmbeddings.embed_query, text_key='text')\r\n----> 4 documents = vectorstore.similarity_search('How can several llama_indexes be composed?')\r\n\r\nFile ~/anaconda3/envs/langchain_play/lib/python3.10/site-packages/langchain/vectorstores/pinecone.py:155, in Pinecone.similarity_search(self, query, k, filter, namespace, **kwargs)\r\n    136 def similarity_search(\r\n    137     self,\r\n    138     query: str,\r\n   (...)\r\n    142     **kwargs: Any,\r\n    143 ) -> List[Document]:\r\n    144     \"\"\"Return pinecone documents most similar to query.\r\n    145 \r\n    146     Args:\r\n   (...)\r\n    153         List of Documents most similar to the query and score for each\r\n    154     \"\"\"\r\n--> 155     docs_and_scores = self.similarity_search_with_score(\r\n    156         query, k=k, filter=filter, namespace=namespace, **kwargs\r\n    157     )\r\n    158     return [doc for doc, _ in docs_and_scores]\r\n\r\nFile ~/anaconda3/envs/langchain_play/lib/python3.10/site-packages/langchain/vectorstores/pinecone.py:115, in Pinecone.similarity_search_with_score(self, query, k, filter, namespace)\r\n    113 if namespace is None:\r\n    114     namespace = self._namespace\r\n--> 115 query_obj = self._embedding_function(query)\r\n    116 docs = []\r\n    117 results = self._index.query(\r\n    118     [query_obj],\r\n    119     top_k=k,\r\n   (...)\r\n    122     filter=filter,\r\n    123 )\r\n\r\nTypeError: OpenAIEmbeddings.embed_query() missing 1 required positional argument: 'text'\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nrun code like:\r\n\r\nindex = pinecone.Index('ssk')\r\nprint(index.describe_index_stats())\r\nvectorstore = Pinecone(index=index, embedding_function=OpenAIEmbeddings.embed_query, text_key='text')\r\ndocuments = vectorstore.similarity_search('How can several llama_indexes be composed?')\n\n### Expected behavior\n\nfor a valid pinecone index, expect documents to be populated without error",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4821/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4821/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4820",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4820/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4820/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4820/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4820",
        "id": 1712918366,
        "node_id": "PR_kwDOIPDwls5Qqayk",
        "number": 4820,
        "title": "Some notebook and client fixes (add retries, clean up docs, etc)",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T00:44:15Z",
        "updated_at": "2023-05-17T03:23:02Z",
        "closed_at": "2023-05-17T03:23:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4820",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4820",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4820.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4820.patch",
            "merged_at": "2023-05-17T03:23:01Z"
        },
        "body": "# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4820/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4819",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4819/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4819/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4819/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4819",
        "id": 1712871337,
        "node_id": "I_kwDOIPDwls5mGFep",
        "number": 4819,
        "title": "Resource does not exists when using both OpenAIEmbeddings and AzureChatOpenAI in two different Azure region/ endpoints",
        "user": {
            "login": "Pilosite",
            "id": 3496647,
            "node_id": "MDQ6VXNlcjM0OTY2NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3496647?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Pilosite",
            "html_url": "https://github.com/Pilosite",
            "followers_url": "https://api.github.com/users/Pilosite/followers",
            "following_url": "https://api.github.com/users/Pilosite/following{/other_user}",
            "gists_url": "https://api.github.com/users/Pilosite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Pilosite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Pilosite/subscriptions",
            "organizations_url": "https://api.github.com/users/Pilosite/orgs",
            "repos_url": "https://api.github.com/users/Pilosite/repos",
            "events_url": "https://api.github.com/users/Pilosite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Pilosite/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-16T23:36:25Z",
        "updated_at": "2023-11-03T08:33:02Z",
        "closed_at": "2023-05-17T11:09:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain 171, gpt4 model in a region, text-embedding-ada002 in another\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nCreate an embedding on ADA002 in a region, with os.environ settings :\r\n os.environ[\"OPENAI_API_TYPE\"] = \"azure\"\r\n    os.environ[\"OPENAI_API_KEY\"] = \"\"\r\n    os.environ[\"OPENAI_API_BASE\"] = \"\"\r\n    os.environ[\"OPENAI_API_VERSION\"] = \"2023-03-15-preview\"\r\n    embeddings = OpenAIEmbeddings(model=\"\")  \r\n text = \"This is a test document.\" \r\n    embeddings.embed_query(text) \r\n\r\nthis works.\r\n\r\nIf I try to add a LLM to do later doc retrieval, like this I got the followin exception:\r\nCreate an embedding on ADA002 in a region, with os.environ settings :\r\n os.environ[\"OPENAI_API_TYPE\"] = \"azure\"\r\n    os.environ[\"OPENAI_API_KEY\"] = \"\"\r\n    os.environ[\"OPENAI_API_BASE\"] = \"\"\r\n    os.environ[\"OPENAI_API_VERSION\"] = \"2023-03-15-preview\"\r\n    embeddings = OpenAIEmbeddings(model=\"\")  \r\n\r\n    llm = AzureChatOpenAI( \r\n        openai_api_key = \"\",\r\n        openai_api_base = \"\",\r\n        model_name=\"\"\r\n    )        \r\n    \r\n    #result = llm([HumanMessage(content=\"Translate this sentence from English to French. I love programming.\")])\r\n    #print(result)\r\n    text = \"This is a test document.\" \r\n    embeddings.embed_query(text)  \r\n\r\n\r\n\r\nException has occurred: InvalidRequestError\r\nThe API deployment for this resource does not exist. If you created the deployment within the last 5 minutes, please wait a moment and try again.\n\n### Expected behavior\n\nI should be able to have 2 distincts GPT and ADA setup not on the same API base.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4819/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4819/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4818",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4818/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4818/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4818/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4818",
        "id": 1712813069,
        "node_id": "I_kwDOIPDwls5mF3QN",
        "number": 4818,
        "title": "Typo in DeepLake Code Analysis Tutorials",
        "user": {
            "login": "markanth",
            "id": 11293728,
            "node_id": "MDQ6VXNlcjExMjkzNzI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11293728?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/markanth",
            "html_url": "https://github.com/markanth",
            "followers_url": "https://api.github.com/users/markanth/followers",
            "following_url": "https://api.github.com/users/markanth/following{/other_user}",
            "gists_url": "https://api.github.com/users/markanth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/markanth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/markanth/subscriptions",
            "organizations_url": "https://api.github.com/users/markanth/orgs",
            "repos_url": "https://api.github.com/users/markanth/repos",
            "events_url": "https://api.github.com/users/markanth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/markanth/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T22:21:09Z",
        "updated_at": "2023-05-17T15:52:24Z",
        "closed_at": "2023-05-17T15:52:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Discussed in https://github.com/hwchase17/langchain/discussions/4817\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **markanth** May 16, 2023</sup>\r\nUnder Use Cases -> Code Understanding, you will find:\r\nThe full tutorial is available below.\r\n\r\n[Twitter the-algorithm codebase analysis with Deep Lake](https://python.langchain.com/en/latest/use_cases/code/twitter-the-algorithm-analysis-deeplake.html): A notebook walking through how to parse github source code and run queries conversation.\r\n\r\n[LangChain codebase analysis with Deep Lake](https://python.langchain.com/en/latest/use_cases/code/code-analysis-deeplake.html): A notebook walking through how to analyze and do question answering over THIS code base.\r\n\r\nIn both full tutorials,  I think that this line:\r\n\r\nmodel = ChatOpenAI(model='gpt-3.5-turbo') # switch to 'gpt-4'\r\n\r\nshould be:\r\n\r\nmodel = ChatOpenAI(model_name='gpt-3.5-turbo')\r\n\r\n(model_name instead of model)\r\n\r\n</div>",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4818/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4818/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4816",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4816/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4816/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4816/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4816",
        "id": 1712781587,
        "node_id": "PR_kwDOIPDwls5Qp9gv",
        "number": 4816,
        "title": "Added SmartGPT workflow (issue #4463)",
        "user": {
            "login": "UmerHA",
            "id": 40663591,
            "node_id": "MDQ6VXNlcjQwNjYzNTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/40663591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UmerHA",
            "html_url": "https://github.com/UmerHA",
            "followers_url": "https://api.github.com/users/UmerHA/followers",
            "following_url": "https://api.github.com/users/UmerHA/following{/other_user}",
            "gists_url": "https://api.github.com/users/UmerHA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UmerHA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UmerHA/subscriptions",
            "organizations_url": "https://api.github.com/users/UmerHA/orgs",
            "repos_url": "https://api.github.com/users/UmerHA/repos",
            "events_url": "https://api.github.com/users/UmerHA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UmerHA/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-05-16T21:47:48Z",
        "updated_at": "2023-08-11T22:44:28Z",
        "closed_at": "2023-08-11T22:44:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4816",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4816",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4816.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4816.patch",
            "merged_at": "2023-08-11T22:44:28Z"
        },
        "body": "# Added SmartGPT workflow by providing SmartLLM wrapper around LLMs\r\nEdit:\r\nAs @hwchase17 suggested, this should be a chain, not an LLM. I have adapted the PR.\r\n\r\nIt is used like this:\r\n```\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.chains import SmartLLMChain\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\nhard_question = \"I have a 12 liter jug and a 6 liter jug. I want to measure 6 liters. How do I do it?\"\r\nhard_question_prompt = PromptTemplate.from_template(hard_question)\r\n\r\nllm = ChatOpenAI(model_name=\"gpt-4\")\r\nprompt = PromptTemplate.from_template(hard_question)\r\nchain = SmartLLMChain(llm=llm, prompt=prompt, verbose=True)\r\n\r\nchain.run({})\r\n```\r\n\r\n\r\nOriginal text: \r\nAdded SmartLLM wrapper around LLMs to allow for SmartGPT workflow (as in https://youtu.be/wVzuvf9D9BU). SmartLLM can be used wherever LLM can be used. E.g:\r\n\r\n```\r\nsmart_llm = SmartLLM(llm=OpenAI())\r\nsmart_llm(\"What would be a good company name for a company that makes colorful socks?\")\r\n```\r\nor\r\n```\r\nsmart_llm = SmartLLM(llm=OpenAI())\r\nprompt = PromptTemplate(\r\n    input_variables=[\"product\"],\r\n    template=\"What is a good name for a company that makes {product}?\",\r\n)\r\nchain = LLMChain(llm=smart_llm, prompt=prompt)\r\nchain.run(\"colorful socks\")\r\n```\r\n\r\nSmartGPT consists of 3 steps:\r\n\r\n1. Ideate - generate n possible solutions (\"ideas\") to user prompt\r\n2. Critique - find flaws in every idea & select best one\r\n3. Resolve - improve upon best idea & return it\r\n\r\nFixes #4463\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n- @hwchase17\r\n- @agola11\r\n\r\nTwitter: [@UmerHAdil](https://twitter.com/@UmerHAdil) | Discord: RicChilligerDude#7589",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4816/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4816/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4815",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4815/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4815/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4815/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4815",
        "id": 1712756362,
        "node_id": "I_kwDOIPDwls5mFpaK",
        "number": 4815,
        "title": "Implement get_num_tokens in LlamaCpp",
        "user": {
            "login": "hippalectryon-0",
            "id": 6502864,
            "node_id": "MDQ6VXNlcjY1MDI4NjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6502864?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hippalectryon-0",
            "html_url": "https://github.com/hippalectryon-0",
            "followers_url": "https://api.github.com/users/hippalectryon-0/followers",
            "following_url": "https://api.github.com/users/hippalectryon-0/following{/other_user}",
            "gists_url": "https://api.github.com/users/hippalectryon-0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hippalectryon-0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hippalectryon-0/subscriptions",
            "organizations_url": "https://api.github.com/users/hippalectryon-0/orgs",
            "repos_url": "https://api.github.com/users/hippalectryon-0/repos",
            "events_url": "https://api.github.com/users/hippalectryon-0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hippalectryon-0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T21:24:51Z",
        "updated_at": "2023-09-10T16:17:04Z",
        "closed_at": "2023-09-10T16:17:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe LlamaCpp wrapper doesn't implement the get_num_tokens functions, which then defauls to a GPT2 tokenizer, and returns a wrong number of tokens\n\n### Motivation\n\n-\n\n### Your contribution\n\n-",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4815/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4814",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4814/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4814/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4814/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4814",
        "id": 1712697919,
        "node_id": "PR_kwDOIPDwls5QpsHO",
        "number": 4814,
        "title": "Fix age inconsistency in plan and execute Jupyter notebook example",
        "user": {
            "login": "keenangraham",
            "id": 16053922,
            "node_id": "MDQ6VXNlcjE2MDUzOTIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16053922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/keenangraham",
            "html_url": "https://github.com/keenangraham",
            "followers_url": "https://api.github.com/users/keenangraham/followers",
            "following_url": "https://api.github.com/users/keenangraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/keenangraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/keenangraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/keenangraham/subscriptions",
            "organizations_url": "https://api.github.com/users/keenangraham/orgs",
            "repos_url": "https://api.github.com/users/keenangraham/repos",
            "events_url": "https://api.github.com/users/keenangraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/keenangraham/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T20:29:37Z",
        "updated_at": "2023-05-16T22:27:27Z",
        "closed_at": "2023-05-16T22:27:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4814",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4814",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4814.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4814.patch",
            "merged_at": "2023-05-16T22:27:27Z"
        },
        "body": "The current example in https://python.langchain.com/en/latest/modules/agents/plan_and_execute.html has inconsistent reasoning step (observing 28 years and thinking it's 26 years):\r\n\r\n```\r\nObservation: 28 years\r\nThought:Based on my search, Gigi Hadid's current age is 26 years old. \r\nAction:\r\n{\r\n  \"action\": \"Final Answer\",\r\n  \"action_input\": \"Gigi Hadid's current age is 26 years old.\"\r\n}\r\n```\r\n\r\nGuessing this is model noise. Rerunning seems to give correct answer of 28 years.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4814/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4814/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4813",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4813/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4813/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4813/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4813",
        "id": 1712662579,
        "node_id": "PR_kwDOIPDwls5QpknI",
        "number": 4813,
        "title": "Check that cache is used for venvs as well",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T20:01:32Z",
        "updated_at": "2023-05-17T12:43:29Z",
        "closed_at": "2023-05-17T12:43:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4813",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4813",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4813.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4813.patch",
            "merged_at": null
        },
        "body": "# Use cache for venv as well\n\nSee if this works\n\n\n## Before submitting\n\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\n\n## Who can review?\n\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\n\n<!-- For a quicker response, figure out the right person to tag with @\n\n        @hwchase17 - project lead\n\n        Tracing / Callbacks\n        - @agola11\n\n        Async\n        - @agola11\n\n        DataLoaders\n        - @eyurtsev\n\n        Models\n        - @hwchase17\n        - @agola11\n\n        Agents / Tools / Toolkits\n        - @vowelparrot\n        \n        VectorStores / Retrievers / Memory\n        - @dev2049\n        \n -->\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4813/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4813/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4812",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4812/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4812/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4812/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4812",
        "id": 1712661205,
        "node_id": "PR_kwDOIPDwls5QpkUG",
        "number": 4812,
        "title": "Update twitter-the-algorithm-analysis-deeplake.ipynb",
        "user": {
            "login": "prateekkeshari",
            "id": 24781460,
            "node_id": "MDQ6VXNlcjI0NzgxNDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24781460?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prateekkeshari",
            "html_url": "https://github.com/prateekkeshari",
            "followers_url": "https://api.github.com/users/prateekkeshari/followers",
            "following_url": "https://api.github.com/users/prateekkeshari/following{/other_user}",
            "gists_url": "https://api.github.com/users/prateekkeshari/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prateekkeshari/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prateekkeshari/subscriptions",
            "organizations_url": "https://api.github.com/users/prateekkeshari/orgs",
            "repos_url": "https://api.github.com/users/prateekkeshari/repos",
            "events_url": "https://api.github.com/users/prateekkeshari/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prateekkeshari/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T20:00:27Z",
        "updated_at": "2023-05-16T22:27:15Z",
        "closed_at": "2023-05-16T22:27:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4812",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4812",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4812.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4812.patch",
            "merged_at": "2023-05-16T22:27:15Z"
        },
        "body": "Changed model to model_name\r\n\r\n# Updated the ChatOpenAI parameter to model_name\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4812/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4811",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4811/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4811/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4811/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4811",
        "id": 1712643998,
        "node_id": "PR_kwDOIPDwls5Qpgoh",
        "number": 4811,
        "title": "Change server start name",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T19:46:44Z",
        "updated_at": "2023-05-16T20:04:10Z",
        "closed_at": "2023-05-16T20:04:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4811",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4811",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4811.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4811.patch",
            "merged_at": "2023-05-16T20:04:09Z"
        },
        "body": "to `langchain plus start/stop`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4811/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4810",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4810/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4810/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4810/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4810",
        "id": 1712642408,
        "node_id": "I_kwDOIPDwls5mFNlo",
        "number": 4810,
        "title": "No module named 'faiss'",
        "user": {
            "login": "Badrul-Goomblepop",
            "id": 132761159,
            "node_id": "U_kgDOB-nGRw",
            "avatar_url": "https://avatars.githubusercontent.com/u/132761159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Badrul-Goomblepop",
            "html_url": "https://github.com/Badrul-Goomblepop",
            "followers_url": "https://api.github.com/users/Badrul-Goomblepop/followers",
            "following_url": "https://api.github.com/users/Badrul-Goomblepop/following{/other_user}",
            "gists_url": "https://api.github.com/users/Badrul-Goomblepop/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Badrul-Goomblepop/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Badrul-Goomblepop/subscriptions",
            "organizations_url": "https://api.github.com/users/Badrul-Goomblepop/orgs",
            "repos_url": "https://api.github.com/users/Badrul-Goomblepop/repos",
            "events_url": "https://api.github.com/users/Badrul-Goomblepop/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Badrul-Goomblepop/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-16T19:45:26Z",
        "updated_at": "2023-09-10T16:17:09Z",
        "closed_at": "2023-09-10T16:17:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nJust working my way through the AutoGPT instructions here https://python.langchain.com/en/latest/use_cases/autonomous_agents/autogpt.html\r\n\r\nand getting the error:\r\n---------------------------------------------------------------------------\r\n```\r\nModuleNotFoundError                       Traceback (most recent call last)\r\nCell In[11], line 4\r\n      2 embeddings_model = OpenAIEmbeddings()\r\n      3 # Initialize the vectorstore as empty\r\n----> 4 import faiss\r\n      6 embedding_size = 1536\r\n      7 index = faiss.IndexFlatL2(embedding_size)\r\n\r\nModuleNotFoundError: No module named 'faiss'\r\n\r\n```\r\n\r\nWill update this ticket if I can figure it out. We already have this line further up the code:\r\n`from langchain.vectorstores import FAISS\r\n`\r\n\r\n**Edit**: Ok so I see that there's such a thing as a pip module called faiss. \r\nHowever doing pip install faiss gives me:\r\n```\r\nERROR: Could not find a version that satisfies the requirement faiss (from versions: none)\r\nERROR: No matching distribution found for faiss\r\n```\r\n\r\n**Edit 2**: Ah ok - For windows users you have to install the CPU version of faiss. See here: https://github.com/facebookresearch/faiss/blob/main/INSTALL.md\r\n\r\n### Who can help?\r\n\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nJust follow the steps in the tutorial\r\n\r\n### Expected behavior\r\n\r\nNot sure - perhaps it was meant to be instantiating the FAISS class?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4810/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4809",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4809/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4809/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4809/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4809",
        "id": 1712626628,
        "node_id": "PR_kwDOIPDwls5Qpc3m",
        "number": 4809,
        "title": "Combining docs refac",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5533576383,
                "node_id": "LA_kwDOIPDwls8AAAABSdOsvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/refactor",
                "name": "refactor",
                "color": "81CB55",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T19:33:48Z",
        "updated_at": "2023-06-30T20:01:42Z",
        "closed_at": "2023-06-30T20:01:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4809",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4809",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4809.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4809.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4809/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4809/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4808",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4808/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4808/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4808/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4808",
        "id": 1712594390,
        "node_id": "PR_kwDOIPDwls5QpV46",
        "number": 4808,
        "title": "Add all to extended tests extra",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T19:11:59Z",
        "updated_at": "2023-07-26T16:57:03Z",
        "closed_at": "2023-07-26T16:57:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4808",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4808",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4808.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4808.patch",
            "merged_at": null
        },
        "body": "# Add all optional packages to extended testing extra\n\n* Add all optional packages to extended testing extra\n* Add unit test to catch drift\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4808/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4807",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4807/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4807/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4807/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4807",
        "id": 1712558489,
        "node_id": "I_kwDOIPDwls5mE5GZ",
        "number": 4807,
        "title": "OpenAPI agent treating 'headers' as query parameters  for any endpoint in the openapi spec ",
        "user": {
            "login": "rohitrj22",
            "id": 79296922,
            "node_id": "MDQ6VXNlcjc5Mjk2OTIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/79296922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rohitrj22",
            "html_url": "https://github.com/rohitrj22",
            "followers_url": "https://api.github.com/users/rohitrj22/followers",
            "following_url": "https://api.github.com/users/rohitrj22/following{/other_user}",
            "gists_url": "https://api.github.com/users/rohitrj22/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rohitrj22/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rohitrj22/subscriptions",
            "organizations_url": "https://api.github.com/users/rohitrj22/orgs",
            "repos_url": "https://api.github.com/users/rohitrj22/repos",
            "events_url": "https://api.github.com/users/rohitrj22/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rohitrj22/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T18:45:06Z",
        "updated_at": "2023-09-10T16:17:15Z",
        "closed_at": "2023-09-10T16:17:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: v0.0.170\r\nPlatform: Linux/Debian\r\npython: 3.9.2\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHave an api endpoint configured such that its parameters have both query parameters and headers \r\n![Screenshot_20230517_000552](https://github.com/hwchase17/langchain/assets/79296922/5e7c80ec-998d-4b7b-962e-9eec0f3f9cdb)\r\n\n\n### Expected behavior\n\nGiven the endpoint is something like https://example.com/api, the agent is trying to hit the endpoint in the following way\r\nhttps://example.com/api?Authorization=<token>&ph-org-code=<xxx>&ph-org-type=<xxx>&status=active\r\n\r\nHere Authorization, ph-org-code, ph-org-type are headers as seen in the spec  but they are passed as query parameters in \r\nurl. I also used RequestWrapper to wrap all the above 3 headers seperately and providing them at the time of creating the openapi agent but still the agent executor is not considering those values.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4807/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4806",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4806/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4806/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4806/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4806",
        "id": 1712532325,
        "node_id": "PR_kwDOIPDwls5QpITw",
        "number": 4806,
        "title": "fix(document_loaders/telegram): fix pandas calls + add tests",
        "user": {
            "login": "0xRaduan",
            "id": 36044389,
            "node_id": "MDQ6VXNlcjM2MDQ0Mzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/36044389?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xRaduan",
            "html_url": "https://github.com/0xRaduan",
            "followers_url": "https://api.github.com/users/0xRaduan/followers",
            "following_url": "https://api.github.com/users/0xRaduan/following{/other_user}",
            "gists_url": "https://api.github.com/users/0xRaduan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/0xRaduan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/0xRaduan/subscriptions",
            "organizations_url": "https://api.github.com/users/0xRaduan/orgs",
            "repos_url": "https://api.github.com/users/0xRaduan/repos",
            "events_url": "https://api.github.com/users/0xRaduan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/0xRaduan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-16T18:31:06Z",
        "updated_at": "2023-05-18T11:48:17Z",
        "closed_at": "2023-05-16T21:35:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4806",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4806",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4806.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4806.patch",
            "merged_at": "2023-05-16T21:35:25Z"
        },
        "body": "# Fix Telegram API loader + add tests.\r\nI was testing this integration and it was broken with next error:\r\n```python\r\nmessage_threads = loader._get_message_threads(df)\r\nKeyError: False\r\n```\r\nAlso, this particular loader didn't have any tests / related group in poetry, so I added those as well.\r\n\r\n@hwchase17 / @eyurtsev please take a look on this fix PR.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4806/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4806/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4805",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4805/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4805/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4805/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4805",
        "id": 1712528753,
        "node_id": "PR_kwDOIPDwls5QpHi1",
        "number": 4805,
        "title": "Add Support for Flexible Input Format for LLM and Chat Model Runs",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T18:28:32Z",
        "updated_at": "2023-05-17T14:24:18Z",
        "closed_at": "2023-05-17T14:24:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4805",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4805",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4805.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4805.patch",
            "merged_at": "2023-05-17T14:24:17Z"
        },
        "body": "Previously, the client expected a strict 'prompt' or 'messages' format and wouldn't permit running a chat model or llm on prompts or messages (respectively).\r\n\r\nSince many datasets may want to specify custom key: string , relax this requirement.\r\nAlso, add support for running a chat model on raw prompts and LLM on chat messages through their respective fallbacks.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4805/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4805/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4804",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4804/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4804/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4804/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4804",
        "id": 1712518630,
        "node_id": "PR_kwDOIPDwls5QpFRE",
        "number": 4804,
        "title": "Add self query translator for weaviate vectorstore",
        "user": {
            "login": "domchan",
            "id": 2788286,
            "node_id": "MDQ6VXNlcjI3ODgyODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2788286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/domchan",
            "html_url": "https://github.com/domchan",
            "followers_url": "https://api.github.com/users/domchan/followers",
            "following_url": "https://api.github.com/users/domchan/following{/other_user}",
            "gists_url": "https://api.github.com/users/domchan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/domchan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/domchan/subscriptions",
            "organizations_url": "https://api.github.com/users/domchan/orgs",
            "repos_url": "https://api.github.com/users/domchan/repos",
            "events_url": "https://api.github.com/users/domchan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/domchan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-16T18:23:18Z",
        "updated_at": "2023-05-19T23:41:13Z",
        "closed_at": "2023-05-19T23:41:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4804",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4804",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4804.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4804.patch",
            "merged_at": "2023-05-19T23:41:12Z"
        },
        "body": "# Add self query translator for weaviate vectorstore\r\n\r\nAdds support for the EQ comparator and the AND/OR operators. \r\n\r\n@dev2049 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4804/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4804/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4803",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4803/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4803/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4803/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4803",
        "id": 1712504802,
        "node_id": "PR_kwDOIPDwls5QpCRf",
        "number": 4803,
        "title": "Block sockets for unit-tests",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-16T18:12:53Z",
        "updated_at": "2023-05-16T18:41:25Z",
        "closed_at": "2023-05-16T18:41:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4803",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4803",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4803.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4803.patch",
            "merged_at": "2023-05-16T18:41:24Z"
        },
        "body": "# Block usage of sockets during unit tests\n\nCatch any tests that attempt to use the network.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4803/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4802",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4802/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4802/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4802/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4802",
        "id": 1712486029,
        "node_id": "PR_kwDOIPDwls5Qo-OU",
        "number": 4802,
        "title": "Catch changes to test group",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T18:01:44Z",
        "updated_at": "2023-05-16T18:48:58Z",
        "closed_at": "2023-05-16T18:48:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4802",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4802",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4802.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4802.patch",
            "merged_at": "2023-05-16T18:48:57Z"
        },
        "body": "# Catch changes to test group\n\nAdd test to catch changes to test group.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4802/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4802/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4801",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4801/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4801/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4801/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4801",
        "id": 1712469831,
        "node_id": "I_kwDOIPDwls5mEjdH",
        "number": 4801,
        "title": "Question: How to use datetime type with SelfQueryRetriever",
        "user": {
            "login": "wsantos",
            "id": 164633,
            "node_id": "MDQ6VXNlcjE2NDYzMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/164633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wsantos",
            "html_url": "https://github.com/wsantos",
            "followers_url": "https://api.github.com/users/wsantos/followers",
            "following_url": "https://api.github.com/users/wsantos/following{/other_user}",
            "gists_url": "https://api.github.com/users/wsantos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wsantos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wsantos/subscriptions",
            "organizations_url": "https://api.github.com/users/wsantos/orgs",
            "repos_url": "https://api.github.com/users/wsantos/repos",
            "events_url": "https://api.github.com/users/wsantos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wsantos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-16T17:49:50Z",
        "updated_at": "2023-11-10T19:38:14Z",
        "closed_at": "2023-08-29T21:18:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHow can one use SelfQueryRetriever to query `datetime`, I've added a `datetime` object as string to the metadata, not sure if that is right or if we should use `timestamp`, but things got weird with this prompt:\r\n\r\n```\r\nI want to watch a movie rated higher than 8.5 and released today\r\n```\r\n\r\n```json\r\n{\r\n    \"query\": \"\",\r\n    \"filter\": \"and(gt(\\\"rating\\\", 8.5), eq(\\\"released\\\", \\\"today\\\"))\"\r\n}\r\n```\r\n\r\nI'm not sure how to instruct langchain to convert today to a datetime/str.\r\n\r\nIs there a from/to AttributeInfo so we can convert when saving and loading from the vectorstore?\r\n\r\nLong story short, how would you guys approach this scenario?\r\n\r\nThanks in advance.\r\n\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4801/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4800",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4800/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4800/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4800/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4800",
        "id": 1712467096,
        "node_id": "PR_kwDOIPDwls5Qo6HS",
        "number": 4800,
        "title": "Accept uuids kwargs for weaviate",
        "user": {
            "login": "yujiosaka",
            "id": 2261067,
            "node_id": "MDQ6VXNlcjIyNjEwNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2261067?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yujiosaka",
            "html_url": "https://github.com/yujiosaka",
            "followers_url": "https://api.github.com/users/yujiosaka/followers",
            "following_url": "https://api.github.com/users/yujiosaka/following{/other_user}",
            "gists_url": "https://api.github.com/users/yujiosaka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yujiosaka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yujiosaka/subscriptions",
            "organizations_url": "https://api.github.com/users/yujiosaka/orgs",
            "repos_url": "https://api.github.com/users/yujiosaka/repos",
            "events_url": "https://api.github.com/users/yujiosaka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yujiosaka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T17:47:36Z",
        "updated_at": "2023-05-17T08:52:33Z",
        "closed_at": "2023-05-16T22:26:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4800",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4800",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4800.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4800.patch",
            "merged_at": "2023-05-16T22:26:47Z"
        },
        "body": "# Accept uuids kwargs for weaviate\r\n\r\nFixes #4791\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n- [x] added integration tests\r\n\r\ndidn't add any example notebook as i was afraid the feature was a bit too small to make a dedicated notebook.\r\ni looked up at another Weaviate option called `where_filter`, which had integration tests but not notebook.\r\n\r\nso i decided just to add integration tests. feel free to make suggestion.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4800/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4800/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4799",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4799/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4799/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4799/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4799",
        "id": 1712463673,
        "node_id": "PR_kwDOIPDwls5Qo5YB",
        "number": 4799,
        "title": "Hugging Face Loader: Add lazy load",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-16T17:45:13Z",
        "updated_at": "2023-05-17T17:15:05Z",
        "closed_at": "2023-05-17T16:04:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4799",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4799",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4799.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4799.patch",
            "merged_at": "2023-05-17T16:04:23Z"
        },
        "body": "# Add lazy load to HF datasets loader\r\n\r\nUnfortunately, there are no tests as far as i can tell. Verified code manually.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4799/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4799/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4798",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4798/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4798/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4798/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4798",
        "id": 1712337260,
        "node_id": "PR_kwDOIPDwls5QoePN",
        "number": 4798,
        "title": "Update google protobuf dep",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T16:17:44Z",
        "updated_at": "2023-05-16T16:25:08Z",
        "closed_at": "2023-05-16T16:25:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4798",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4798",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4798.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4798.patch",
            "merged_at": "2023-05-16T16:25:08Z"
        },
        "body": "# Update google protobuf dep\n\nResolve: https://github.com/hwchase17/langchain/security/dependabot/11\n\n## Before submitting\n\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\n\n## Who can review?\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4798/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4798/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4797",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4797/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4797/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4797/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4797",
        "id": 1712335442,
        "node_id": "I_kwDOIPDwls5mECpS",
        "number": 4797,
        "title": "Add `n_gpu_layers` arg to langchain.llms.LlamaCpp",
        "user": {
            "login": "hippalectryon-0",
            "id": 6502864,
            "node_id": "MDQ6VXNlcjY1MDI4NjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6502864?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hippalectryon-0",
            "html_url": "https://github.com/hippalectryon-0",
            "followers_url": "https://api.github.com/users/hippalectryon-0/followers",
            "following_url": "https://api.github.com/users/hippalectryon-0/following{/other_user}",
            "gists_url": "https://api.github.com/users/hippalectryon-0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hippalectryon-0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hippalectryon-0/subscriptions",
            "organizations_url": "https://api.github.com/users/hippalectryon-0/orgs",
            "repos_url": "https://api.github.com/users/hippalectryon-0/repos",
            "events_url": "https://api.github.com/users/hippalectryon-0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hippalectryon-0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T16:16:25Z",
        "updated_at": "2023-05-16T16:18:38Z",
        "closed_at": "2023-05-16T16:18:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\n`langchain.llms.LlamaCpp` wraps around `llama_cpp`, which recently added a `n_gpu_layers` argument. It would be great to have it in the wrapper.\r\n\r\nCurrent workaround:\r\n```\r\nllm = LlamaCpp(...)\r\nstate = llm.client.__getstate__()\r\nstate[\"n_gpu_layers\"] = n_gpu_layers\r\nllm.client.__setstate__(state)\r\n```\n\n### Motivation\n\n-\n\n### Your contribution\n\n-",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4797/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4797/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4796",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4796/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4796/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4796/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4796",
        "id": 1712316549,
        "node_id": "PR_kwDOIPDwls5QoZxy",
        "number": 4796,
        "title": "2markdown loader",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T16:03:38Z",
        "updated_at": "2023-05-17T06:42:55Z",
        "closed_at": "2023-05-17T06:42:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4796",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4796",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4796.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4796.patch",
            "merged_at": "2023-05-17T06:42:54Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4796/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4796/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4795",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4795/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4795/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4795/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4795",
        "id": 1712299803,
        "node_id": "PR_kwDOIPDwls5QoWF7",
        "number": 4795,
        "title": "Cleanup and added dependencies to make example executable",
        "user": {
            "login": "pors",
            "id": 1078320,
            "node_id": "MDQ6VXNlcjEwNzgzMjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1078320?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pors",
            "html_url": "https://github.com/pors",
            "followers_url": "https://api.github.com/users/pors/followers",
            "following_url": "https://api.github.com/users/pors/following{/other_user}",
            "gists_url": "https://api.github.com/users/pors/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pors/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pors/subscriptions",
            "organizations_url": "https://api.github.com/users/pors/orgs",
            "repos_url": "https://api.github.com/users/pors/repos",
            "events_url": "https://api.github.com/users/pors/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pors/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T15:54:09Z",
        "updated_at": "2023-05-16T22:29:02Z",
        "closed_at": "2023-05-16T22:29:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4795",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4795",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4795.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4795.patch",
            "merged_at": "2023-05-16T22:29:02Z"
        },
        "body": "- Installation of non-colab packages\r\n- Get API keys\r\n- Get rid of warnings\r\n\r\n# Cleanup and added dependencies to make notebook executable on hosted notebooks\r\n\r\n### Who can review?\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@hwchase17\r\n@vowelparrot",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4795/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4795/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4794",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4794/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4794/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4794/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4794",
        "id": 1712284301,
        "node_id": "PR_kwDOIPDwls5QoS4K",
        "number": 4794,
        "title": "Add check to verify poetry.toml",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T15:44:14Z",
        "updated_at": "2023-05-16T15:53:07Z",
        "closed_at": "2023-05-16T15:53:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4794",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4794",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4794.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4794.patch",
            "merged_at": "2023-05-16T15:53:06Z"
        },
        "body": "# Add poetry check to github action\n\nCheck poetry toml file during tests for errors\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4794/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4794/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4793",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4793/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4793/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4793/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4793",
        "id": 1712276806,
        "node_id": "PR_kwDOIPDwls5QoRQz",
        "number": 4793,
        "title": "Check error message",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T15:39:15Z",
        "updated_at": "2023-05-16T15:53:15Z",
        "closed_at": "2023-05-16T15:53:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4793",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4793",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4793.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4793.patch",
            "merged_at": null
        },
        "body": "# Your PR Title (What it does)\n\n<!--\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\n\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\n\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\n-->\n\n<!-- Remove if not applicable -->\n\nFixes # (issue)\n\n## Before submitting\n\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\n\n## Who can review?\n\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\n\n<!-- For a quicker response, figure out the right person to tag with @\n\n        @hwchase17 - project lead\n\n        Tracing / Callbacks\n        - @agola11\n\n        Async\n        - @agola11\n\n        DataLoaders\n        - @eyurtsev\n\n        Models\n        - @hwchase17\n        - @agola11\n\n        Agents / Tools / Toolkits\n        - @vowelparrot\n        \n        VectorStores / Retrievers / Memory\n        - @dev2049\n        \n -->\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4793/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4793/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4792",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4792/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4792/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4792/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4792",
        "id": 1712267546,
        "node_id": "I_kwDOIPDwls5mDyEa",
        "number": 4792,
        "title": "A tool that can extract and divide sections from one or more .tex and pdf files",
        "user": {
            "login": "sablin39",
            "id": 53702976,
            "node_id": "MDQ6VXNlcjUzNzAyOTc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/53702976?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sablin39",
            "html_url": "https://github.com/sablin39",
            "followers_url": "https://api.github.com/users/sablin39/followers",
            "following_url": "https://api.github.com/users/sablin39/following{/other_user}",
            "gists_url": "https://api.github.com/users/sablin39/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sablin39/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sablin39/subscriptions",
            "organizations_url": "https://api.github.com/users/sablin39/orgs",
            "repos_url": "https://api.github.com/users/sablin39/repos",
            "events_url": "https://api.github.com/users/sablin39/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sablin39/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T15:34:27Z",
        "updated_at": "2023-09-17T17:17:55Z",
        "closed_at": "2023-09-17T17:17:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nI propose a tool that can extract the content of each section from one `.tex` file or a latex project with multiple `.tex` files. Moreover, the tool is able to filter the unrequired contents like figure blocks, labels and comments and output the resulting contents in the form of a python dict as `{<section name>: <content>}`. With this tool, we can extract only the \"introduction\", \"related works\" and \"conclusion\" part of a paper and shorten the contents by filtering, which is beneficial for effective summary.\r\n\r\nWe can do the same thing to pdf files with no bookmarks based on [science-parse](https://github.com/allenai/science-parse), which can be set up as a docker server and we will only need an API to use it. It takes pdf as input and outputs the metadata and the division of sections in json form. So I propose an API wrapper for that in order to make use of this powerful tool.\r\n### Motivation\r\n\r\nThe original `langchain.text_splitter.LatexTextSplitter` cannot handle multiple .tex files, while it cannot filter some contents that are not required for text analysis, like comments or figure blocks. Since many source files we download from arxiv.org will be a compressed project that has multiple `.tex` files with a `main.tex` that can link them together, we need a way to deal with them. Moreover, when dealing with the source files, some latex blocks are not necessary for text analysis, like figures and comments. By filtering them, we can shorten the contents and reduce the work of LLMs.\r\n\r\nMoreover, when loading pdf with no bookmarks, we cannot seperate sections of them and be forced to use all of them at once. This may not be efficient when it comes to scenarios like `summarization`. So we may need to have a tool that can divide the pdf file without prior input like bookmarks.\r\n\r\n### Your contribution\r\n\r\nI want to create a PR for [document_loaders](https://github.com/hwchase17/langchain/tree/master/langchain/document_loaders) so there can be a way to load a latex project downloaded from arxiv.org in the form of `tar.gz` or`zip` . Then I want to create a PR for [text_splitter](https://github.com/hwchase17/langchain/blob/master/langchain/text_splitter.py) so I can implement the filtering and extraction for the latex file(s) I obtain from the `document_loaders`.\r\nI also want to create an API wrapper for science-parse in the same file which can takes the pdf files as input directly by `pathlib.Path` in the `text_splitter` as another splitting function.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4792/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4792/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4791",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4791/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4791/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4791/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4791",
        "id": 1712263240,
        "node_id": "I_kwDOIPDwls5mDxBI",
        "number": 4791,
        "title": "Accept UUID list as an argument to add texts and documents into Weaviate vectorstore",
        "user": {
            "login": "yujiosaka",
            "id": 2261067,
            "node_id": "MDQ6VXNlcjIyNjEwNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2261067?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yujiosaka",
            "html_url": "https://github.com/yujiosaka",
            "followers_url": "https://api.github.com/users/yujiosaka/followers",
            "following_url": "https://api.github.com/users/yujiosaka/following{/other_user}",
            "gists_url": "https://api.github.com/users/yujiosaka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yujiosaka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yujiosaka/subscriptions",
            "organizations_url": "https://api.github.com/users/yujiosaka/orgs",
            "repos_url": "https://api.github.com/users/yujiosaka/repos",
            "events_url": "https://api.github.com/users/yujiosaka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yujiosaka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T15:31:48Z",
        "updated_at": "2023-05-16T22:26:48Z",
        "closed_at": "2023-05-16T22:26:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWhen you call `add_texts` and `add_docuemnts` methods from a Weaviate instance, it always generate UUIDs for you, which is a neat feature\r\n\r\nhttps://github.com/hwchase17/langchain/blob/bee136efa4393219302208a1a458d32129f5d539/langchain/vectorstores/weaviate.py#L137\r\n\r\nHowever, there are specific use cases where you want to generate UUIDs by yourself and pass them via `add_texts` and `add_docuemnts`.\r\nTherefore, I'd like to support `uuids` field in `kwargs` argument to these methods, and use those values instead of generating new ones inside those methods.\n\n### Motivation\n\nBoth `add_texts` and `add_documents` methods internally call [batch.add_data_object](https://weaviate-python-client.readthedocs.io/en/stable/weaviate.batch.html#weaviate.batch.Batch.add_data_object) method of a Weaviate client.\r\n\r\nThe document states as below:\r\n\r\n> Add one object to this batch. NOTE: If the UUID of one of the objects already exists then the existing object will be replaced by the new object.\r\n\r\nThis behavior is extremely useful when you need to update and delete document from a known field of the document.\r\n\r\nFirst of all, Weaviate expects UUIDv3 and UUIDv5 as UUID formats. You can find the information below:\r\nhttps://weaviate.io/developers/weaviate/more-resources/faq#q-are-there-restrictions-on-uuid-formatting-do-i-have-to-adhere-to-any-standards\r\n\r\nAnd UUIDv5 allows you to generate always the same value based on input string, as if it's a hash algorithm.\r\nhttps://docs.python.org/2/library/uuid.html\r\n\r\nLet's say you have unique identifier of the document, and use it to generate your own UUID.\r\nThis way you can directly update, delete or replace documents without searching the documents by metadata.\r\n\r\nThis will saves your time, your code, and network bandwidth and computer resources.\r\n\n\n### Your contribution\n\nI'm attempting to make a PR,",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4791/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4791/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4790",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4790/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4790/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4790/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4790",
        "id": 1712262232,
        "node_id": "PR_kwDOIPDwls5QoOQ2",
        "number": 4790,
        "title": "Added dependencies to make example executable",
        "user": {
            "login": "pors",
            "id": 1078320,
            "node_id": "MDQ6VXNlcjEwNzgzMjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1078320?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pors",
            "html_url": "https://github.com/pors",
            "followers_url": "https://api.github.com/users/pors/followers",
            "following_url": "https://api.github.com/users/pors/following{/other_user}",
            "gists_url": "https://api.github.com/users/pors/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pors/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pors/subscriptions",
            "organizations_url": "https://api.github.com/users/pors/orgs",
            "repos_url": "https://api.github.com/users/pors/repos",
            "events_url": "https://api.github.com/users/pors/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pors/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T15:31:08Z",
        "updated_at": "2023-05-16T22:46:09Z",
        "closed_at": "2023-05-16T22:46:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4790",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4790",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4790.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4790.patch",
            "merged_at": "2023-05-16T22:46:09Z"
        },
        "body": "- Installation of non-colab packages\r\n- Get API keys\r\n\r\n# Added dependencies to make notebook executable on hosted notebooks\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@hwchase17\r\n@vowelparrot\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4790/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4790/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4789",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4789/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4789/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4789/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4789",
        "id": 1712248946,
        "node_id": "PR_kwDOIPDwls5QoLYW",
        "number": 4789,
        "title": "Github Action: Fix poetry lock file checking",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T15:23:12Z",
        "updated_at": "2023-05-16T15:40:29Z",
        "closed_at": "2023-05-16T15:40:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4789",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4789",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4789.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4789.patch",
            "merged_at": "2023-05-16T15:40:28Z"
        },
        "body": "test\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4789/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4789/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4788",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4788/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4788/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4788/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4788",
        "id": 1712245164,
        "node_id": "PR_kwDOIPDwls5QoKj8",
        "number": 4788,
        "title": "Version 171",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T15:20:49Z",
        "updated_at": "2023-05-16T15:24:47Z",
        "closed_at": "2023-05-16T15:24:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4788",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4788",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4788.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4788.patch",
            "merged_at": "2023-05-16T15:24:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4788/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4788/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4787",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4787/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4787/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4787/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4787",
        "id": 1712207658,
        "node_id": "PR_kwDOIPDwls5QoCZ0",
        "number": 4787,
        "title": "Finish implementing `get_token_ids`",
        "user": {
            "login": "zachschillaci27",
            "id": 40636930,
            "node_id": "MDQ6VXNlcjQwNjM2OTMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/40636930?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zachschillaci27",
            "html_url": "https://github.com/zachschillaci27",
            "followers_url": "https://api.github.com/users/zachschillaci27/followers",
            "following_url": "https://api.github.com/users/zachschillaci27/following{/other_user}",
            "gists_url": "https://api.github.com/users/zachschillaci27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zachschillaci27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zachschillaci27/subscriptions",
            "organizations_url": "https://api.github.com/users/zachschillaci27/orgs",
            "repos_url": "https://api.github.com/users/zachschillaci27/repos",
            "events_url": "https://api.github.com/users/zachschillaci27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zachschillaci27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T14:59:59Z",
        "updated_at": "2023-05-17T14:50:32Z",
        "closed_at": "2023-05-17T14:50:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4787",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4787",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4787.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4787.patch",
            "merged_at": "2023-05-17T14:50:31Z"
        },
        "body": "See #4770, #4784",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4787/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4787/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4786",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4786/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4786/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4786/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4786",
        "id": 1712195405,
        "node_id": "PR_kwDOIPDwls5Qn_t2",
        "number": 4786,
        "title": "Fix typo in dataframe.py",
        "user": {
            "login": "eltociear",
            "id": 22633385,
            "node_id": "MDQ6VXNlcjIyNjMzMzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22633385?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eltociear",
            "html_url": "https://github.com/eltociear",
            "followers_url": "https://api.github.com/users/eltociear/followers",
            "following_url": "https://api.github.com/users/eltociear/following{/other_user}",
            "gists_url": "https://api.github.com/users/eltociear/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eltociear/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eltociear/subscriptions",
            "organizations_url": "https://api.github.com/users/eltociear/orgs",
            "repos_url": "https://api.github.com/users/eltociear/repos",
            "events_url": "https://api.github.com/users/eltociear/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eltociear/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T14:54:15Z",
        "updated_at": "2023-05-16T15:49:05Z",
        "closed_at": "2023-05-16T15:49:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4786",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4786",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4786.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4786.patch",
            "merged_at": "2023-05-16T15:49:04Z"
        },
        "body": "\r\n\r\n# Your PR Title (What it does)\r\n\r\nFixed typo.\r\n```\r\nyeild -> yield\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4786/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4786/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4785",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4785/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4785/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4785/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4785",
        "id": 1712097797,
        "node_id": "PR_kwDOIPDwls5QnqhY",
        "number": 4785,
        "title": "Bump protobuf, update google palm tests",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T14:02:44Z",
        "updated_at": "2023-05-18T13:45:13Z",
        "closed_at": "2023-05-18T13:45:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4785",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4785",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4785.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4785.patch",
            "merged_at": null
        },
        "body": "# Bump protobuf and update google palm test\n\n\n* Bump protobuf to handle this: https://github.com/hwchase17/langchain/security/dependabot/11\n* Update how google palm tests are set up so they run as part of extended\n  tests.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4785/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4785/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4784",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4784/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4784/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4784/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4784",
        "id": 1712051145,
        "node_id": "PR_kwDOIPDwls5QngXU",
        "number": 4784,
        "title": "Add 'get_token_ids' method",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T13:38:33Z",
        "updated_at": "2023-05-22T13:17:28Z",
        "closed_at": "2023-05-22T13:17:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4784",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4784",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4784.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4784.patch",
            "merged_at": "2023-05-22T13:17:27Z"
        },
        "body": "Also did some reshuffling since we were using different encoding models depending on the method in the chat openai model which seems bad?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4784/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4784/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4783",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4783/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4783/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4783/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4783",
        "id": 1712039344,
        "node_id": "I_kwDOIPDwls5mC6Ww",
        "number": 4783,
        "title": "How to return the text which is after Finished Chain or Final Answer?",
        "user": {
            "login": "nithinreddyyyyyy",
            "id": 129744879,
            "node_id": "U_kgDOB7u_7w",
            "avatar_url": "https://avatars.githubusercontent.com/u/129744879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nithinreddyyyyyy",
            "html_url": "https://github.com/nithinreddyyyyyy",
            "followers_url": "https://api.github.com/users/nithinreddyyyyyy/followers",
            "following_url": "https://api.github.com/users/nithinreddyyyyyy/following{/other_user}",
            "gists_url": "https://api.github.com/users/nithinreddyyyyyy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nithinreddyyyyyy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nithinreddyyyyyy/subscriptions",
            "organizations_url": "https://api.github.com/users/nithinreddyyyyyy/orgs",
            "repos_url": "https://api.github.com/users/nithinreddyyyyyy/repos",
            "events_url": "https://api.github.com/users/nithinreddyyyyyy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nithinreddyyyyyy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-05-16T13:31:55Z",
        "updated_at": "2023-11-25T21:33:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI ran the below code\r\n\r\n`output = agent.run(\"what is Grass Type which pokemnon has highest speed and lowest speed?\")`\r\n\r\nThe above code gave the below output\r\n\r\n```\r\n> Entering new AgentExecutor chain...\r\nThought: I need to find the pokemon with the highest and lowest speed that are of type Grass\r\nAction: python_repl_ast\r\nAction Input: df[df['Type 1'] == 'Grass'][['Name', 'Speed']].sort_values('Speed')\r\nObservation:                         Name  Speed\r\n658                Ferroseed     10\r\n651                  Foongus     15\r\n659               Ferrothorn     20\r\n207                 Sunflora     30\r\n511  AbomasnowMega Abomasnow     30\r\n..                       ...    ...\r\n556                Serperior    113\r\n607               Whimsicott    116\r\n274                 Sceptile    120\r\n551         ShayminSky Forme    127\r\n275    SceptileMega Sceptile    145\r\n\r\n[70 rows x 2 columns]\r\nThought: I now know the pokemon with the highest and lowest speed that are of type Grass\r\nFinal Answer: The Grass Type pokemon with the highest speed is SceptileMega Sceptile with 145 speed, and the Grass Type pokemon with the lowest speed is Ferroseed with 10 speed.\r\n\r\n> Finished chain.\r\n```\r\n\r\nBut I don't need the complete output. I only need text which is after Final Answer: i.e. The Grass Type pokemon with the highest speed is SceptileMega Sceptile with 145 speed, and the Grass Type pokemon with the lowest speed is Ferroseed with 10 speed.\r\n\r\nHow to get this output? Any ideas?\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\noutput = agent.run(\"what is Grass Type which pokemnon has highest speed and lowest speed?\"\n\n### Expected behavior\n\nI'm just looking to filter out the output content.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4783/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4783/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4782",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4782/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4782/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4782/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4782",
        "id": 1712034290,
        "node_id": "I_kwDOIPDwls5mC5Hy",
        "number": 4782,
        "title": "ChatOpenAI: Number of parallel jobs in the MapReduce chain",
        "user": {
            "login": "swersig",
            "id": 7602145,
            "node_id": "MDQ6VXNlcjc2MDIxNDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7602145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/swersig",
            "html_url": "https://github.com/swersig",
            "followers_url": "https://api.github.com/users/swersig/followers",
            "following_url": "https://api.github.com/users/swersig/following{/other_user}",
            "gists_url": "https://api.github.com/users/swersig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/swersig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/swersig/subscriptions",
            "organizations_url": "https://api.github.com/users/swersig/orgs",
            "repos_url": "https://api.github.com/users/swersig/repos",
            "events_url": "https://api.github.com/users/swersig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/swersig/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-16T13:29:08Z",
        "updated_at": "2023-10-16T14:08:56Z",
        "closed_at": "2023-09-19T16:10:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi guys,\r\n\r\nit is my understanding that for GPT4 we have to use the ChatOpenAI api. Due to the more restrictive rate limit for GPT4 the use of map_reduce chains seems very limited. \r\n\n\n### Suggestion:\n\nProvide a configurable batch_size - like in #1073 - for the ChatOpenAI api",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4782/reactions",
            "total_count": 12,
            "+1": 12,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4782/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4781",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4781/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4781/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4781/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4781",
        "id": 1711815998,
        "node_id": "PR_kwDOIPDwls5QmtLF",
        "number": 4781,
        "title": "Add UnifiedObjectives constitutional principles",
        "user": {
            "login": "matthias-samwald",
            "id": 6213601,
            "node_id": "MDQ6VXNlcjYyMTM2MDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6213601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matthias-samwald",
            "html_url": "https://github.com/matthias-samwald",
            "followers_url": "https://api.github.com/users/matthias-samwald/followers",
            "following_url": "https://api.github.com/users/matthias-samwald/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthias-samwald/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matthias-samwald/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthias-samwald/subscriptions",
            "organizations_url": "https://api.github.com/users/matthias-samwald/orgs",
            "repos_url": "https://api.github.com/users/matthias-samwald/repos",
            "events_url": "https://api.github.com/users/matthias-samwald/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matthias-samwald/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T11:21:51Z",
        "updated_at": "2023-05-16T16:11:34Z",
        "closed_at": "2023-05-16T16:11:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4781",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4781",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4781.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4781.patch",
            "merged_at": "2023-05-16T16:11:34Z"
        },
        "body": "# Add UnifiedObjectives constitutional principles\r\n\r\nThis adds principles adapted from the UnifiedObjectives catalog. The catalog is the result of a comprehensive literature review focused on reasoning in Large Language Models (LLMs), human critical thinking principles, and AI ethics regulations.\r\n\r\nReference: __[Towards unified objectives for self-reflective AI (Samwald et al., 2023)](https://examine.dev/docs/Unified_objectives.pdf)__\r\n\r\n\r\nNotes: \r\n - This is following a private conversation with @hwchase17\r\n - https://python.langchain.com/en/latest/modules/chains/examples/constitutional_chain.html and associated Jupyter notebook will need to be updated, please reference the paper (https://examine.dev/docs/Unified_objectives.pdf) if possible :)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4781/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4781/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4780",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4780/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4780/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4780/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4780",
        "id": 1711787675,
        "node_id": "PR_kwDOIPDwls5Qmm8l",
        "number": 4780,
        "title": "Fixed query checker for SQLDatabaseChain",
        "user": {
            "login": "imeckr",
            "id": 7942293,
            "node_id": "MDQ6VXNlcjc5NDIyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7942293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/imeckr",
            "html_url": "https://github.com/imeckr",
            "followers_url": "https://api.github.com/users/imeckr/followers",
            "following_url": "https://api.github.com/users/imeckr/following{/other_user}",
            "gists_url": "https://api.github.com/users/imeckr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/imeckr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/imeckr/subscriptions",
            "organizations_url": "https://api.github.com/users/imeckr/orgs",
            "repos_url": "https://api.github.com/users/imeckr/repos",
            "events_url": "https://api.github.com/users/imeckr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/imeckr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-16T11:04:38Z",
        "updated_at": "2023-07-03T13:00:26Z",
        "closed_at": "2023-05-16T22:58:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4780",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4780",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4780.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4780.patch",
            "merged_at": "2023-05-16T22:58:59Z"
        },
        "body": "# Fixed query checker for SQLDatabaseChain\r\n\r\nWhen `SQLDatabaseChain`'s llm attribute was deprecated, the query checker stopped working if `SQLDatabaseChain` is initialised via `from_llm` method. With this fix, `SQLDatabaseChain`'s query checker would use the same `llm` as used in the `llm_chain`\r\n\r\n\r\n## Who can review?\r\n@hwchase17 - project lead\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4780/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4779",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4779/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4779/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4779/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4779",
        "id": 1711766113,
        "node_id": "I_kwDOIPDwls5mB3ph",
        "number": 4779,
        "title": "GPT4All Chat Model Integration",
        "user": {
            "login": "enricrp8",
            "id": 26487019,
            "node_id": "MDQ6VXNlcjI2NDg3MDE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/26487019?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/enricrp8",
            "html_url": "https://github.com/enricrp8",
            "followers_url": "https://api.github.com/users/enricrp8/followers",
            "following_url": "https://api.github.com/users/enricrp8/following{/other_user}",
            "gists_url": "https://api.github.com/users/enricrp8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/enricrp8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/enricrp8/subscriptions",
            "organizations_url": "https://api.github.com/users/enricrp8/orgs",
            "repos_url": "https://api.github.com/users/enricrp8/repos",
            "events_url": "https://api.github.com/users/enricrp8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/enricrp8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-16T10:51:16Z",
        "updated_at": "2023-12-12T16:02:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nAdd GPT4All chat model integration to Langchain \r\n\r\n### Motivation\r\n\r\nI am building a chat-bot using langchain and the openAI Chat model. However I have seen that langchain added around the 0.0.130 version the integration with GPT4All to use it as a LLM provider. I would like to know if there is any intention to add Gpt4All Chat Model to langchain in a near future. I would like to build the chat-bot using LLMs stored locally.\r\n\r\n\r\n### Your contribution\r\n\r\nI have been going through all commits in order to upgrade from my local langchain version to the new one so I might be able to help a little bit if needed",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4779/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4779/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4778",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4778/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4778/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4778/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4778",
        "id": 1711743027,
        "node_id": "PR_kwDOIPDwls5QmdIz",
        "number": 4778,
        "title": "Replaced `SQLDatabaseChain` deprecated direct initialisation with `from_llm` method",
        "user": {
            "login": "imeckr",
            "id": 7942293,
            "node_id": "MDQ6VXNlcjc5NDIyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7942293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/imeckr",
            "html_url": "https://github.com/imeckr",
            "followers_url": "https://api.github.com/users/imeckr/followers",
            "following_url": "https://api.github.com/users/imeckr/following{/other_user}",
            "gists_url": "https://api.github.com/users/imeckr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/imeckr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/imeckr/subscriptions",
            "organizations_url": "https://api.github.com/users/imeckr/orgs",
            "repos_url": "https://api.github.com/users/imeckr/repos",
            "events_url": "https://api.github.com/users/imeckr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/imeckr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T10:36:47Z",
        "updated_at": "2023-05-17T08:12:06Z",
        "closed_at": "2023-05-16T22:59:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4778",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4778",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4778.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4778.patch",
            "merged_at": "2023-05-16T22:59:07Z"
        },
        "body": "# Removed usage of deprecated methods\r\n\r\nReplaced `SQLDatabaseChain` deprecated direct initialisation with `from_llm` method\r\n\r\n## Who can review?\r\n\r\n@hwchase17\r\n@agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4778/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4778/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4777",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4777/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4777/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4777/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4777",
        "id": 1711575143,
        "node_id": "PR_kwDOIPDwls5Ql4f-",
        "number": 4777,
        "title": "RWKV increase streaming and RWKV needs to stop when \\n\\n",
        "user": {
            "login": "yangzehan",
            "id": 76773988,
            "node_id": "MDQ6VXNlcjc2NzczOTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/76773988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yangzehan",
            "html_url": "https://github.com/yangzehan",
            "followers_url": "https://api.github.com/users/yangzehan/followers",
            "following_url": "https://api.github.com/users/yangzehan/following{/other_user}",
            "gists_url": "https://api.github.com/users/yangzehan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yangzehan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yangzehan/subscriptions",
            "organizations_url": "https://api.github.com/users/yangzehan/orgs",
            "repos_url": "https://api.github.com/users/yangzehan/repos",
            "events_url": "https://api.github.com/users/yangzehan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yangzehan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-16T08:59:45Z",
        "updated_at": "2023-11-07T04:25:21Z",
        "closed_at": "2023-11-07T04:25:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4777",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4777",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4777.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4777.patch",
            "merged_at": null
        },
        "body": "# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4777/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4777/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4776",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4776/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4776/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4776/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4776",
        "id": 1711556396,
        "node_id": "I_kwDOIPDwls5mBEcs",
        "number": 4776,
        "title": "Improve Airbyte loader to help LLM differentiate entities",
        "user": {
            "login": "flash1293",
            "id": 1508364,
            "node_id": "MDQ6VXNlcjE1MDgzNjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1508364?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flash1293",
            "html_url": "https://github.com/flash1293",
            "followers_url": "https://api.github.com/users/flash1293/followers",
            "following_url": "https://api.github.com/users/flash1293/following{/other_user}",
            "gists_url": "https://api.github.com/users/flash1293/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flash1293/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flash1293/subscriptions",
            "organizations_url": "https://api.github.com/users/flash1293/orgs",
            "repos_url": "https://api.github.com/users/flash1293/repos",
            "events_url": "https://api.github.com/users/flash1293/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flash1293/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-16T08:49:32Z",
        "updated_at": "2023-09-19T16:10:46Z",
        "closed_at": "2023-09-19T16:10:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nThe Airbyte loader should place some separator token between attributes from different records in the final document to help the LLM associating the right attributes with each other\r\n\r\n### Motivation\r\n\r\nThe Airbyte loaders loads data from the Airbyte local JSON destination into documents. As Airbyte's atomic unit is a record in the form of a JSON object, the Airbyte loader is stringifying these into the form of `key: value\\n`. However, if there are a lot of records, the final document looks like this:\r\n\r\nRaw data\r\n```\r\n{\"_airbyte_ab_id\":\"f0bcb1da-baaa-4f09-b210-68fa5747ad7c\",\"_airbyte_emitted_at\":1684226166938,\"_airbyte_data\":{\"id\":91,\"make\":\"Pontiac\",\"model\":\"Vibe\",\"year\":2006,\"price\":12134,\"created_at\":\"2021-01-11T22:30:14+00:00\"}}\r\n{\"_airbyte_ab_id\":\"cde6ea19-3f93-4f7a-9042-f5836ca752ac\",\"_airbyte_emitted_at\":1684226166938,\"_airbyte_data\":{\"id\":92,\"make\":\"Volkswagen\",\"model\":\"Eos\",\"year\":2011,\"price\":53128,\"created_at\":\"2021-01-12T23:25:06+00:00\"}}\r\n{\"_airbyte_ab_id\":\"dfbc15a5-bcb7-4676-8615-6341d29b21d3\",\"_airbyte_emitted_at\":1684226166939,\"_airbyte_data\":{\"id\":93,\"make\":\"Mazda\",\"model\":\"Mazdaspeed6\",\"year\":2007,\"price\":90902,\"created_at\":\"2021-12-29T14:29:03+00:00\"}}\r\n```\r\n\r\nDocument:\r\n```\r\nid: 91\r\nmake: Pontiac\r\nmodel: Vibe\r\nyear: 2006\r\nprice: 12134\r\ncreated_at: 2021-01-11T22:30:14+00:00\r\nid: 92\r\nmake: Volkswagen\r\nmodel: Eos\r\nyear: 2011\r\nprice: 53128\r\ncreated_at: 2021-01-12T23:25:06+00:00\r\nid: 93\r\nmake: Mazda\r\nmodel: Mazdaspeed6\r\nyear: 2007\r\nprice: 90902\r\ncreated_at: 2021-12-29T14:29:03+00:00\r\n```\r\n\r\nRunning a `RetrievalQA` on this document asking for `How much is a Volkswagen Eos?`, the final answer is `The price of a Volkswagen Eos is 12134` which is wrong (it's the price of the Pontiac right above it, but that's hard to tell from the list of attributes)\r\n\r\n\r\nAdding a separator between the records, the document would look like this:\r\n\r\n```\r\nid: 91\r\nmake: Pontiac\r\nmodel: Vibe\r\nyear: 2006\r\nprice: 12134\r\ncreated_at: 2021-01-11T22:30:14+00:00\r\n-end of record-\r\nid: 92\r\nmake: Volkswagen\r\nmodel: Eos\r\nyear: 2011\r\nprice: 53128\r\ncreated_at: 2021-01-12T23:25:06+00:00\r\n-end of record-\r\nid: 93\r\nmake: Mazda\r\nmodel: Mazdaspeed6\r\nyear: 2007\r\nprice: 90902\r\ncreated_at: 2021-12-29T14:29:03+00:00\r\n```\r\n\r\nThe same chain and question now gives the final answer `The price of a Volkswagen Eos is 53128.` which is correct.\r\n\r\n\r\nAlternatively we could completely change the stringification strategy here and instead of producing key-value pairs serializing the array of records as YAML:\r\n* Simple to do as there are libs for that\r\n* Still little overhead for structural tokens (way less than JSON)\r\n* Also has record-separators (the `-` and indentation)\r\n* LLMs know how YAML works so it's probably beneficial for interpreting structure in complex nested records\r\n\r\n### Your contribution\r\n\r\nHappy to put together a PR for this, both options explained above are simple to do.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4776/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4776/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4775",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4775/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4775/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4775/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4775",
        "id": 1711555266,
        "node_id": "I_kwDOIPDwls5mBELC",
        "number": 4775,
        "title": "LangChain classes share openai global values",
        "user": {
            "login": "zioproto",
            "id": 789701,
            "node_id": "MDQ6VXNlcjc4OTcwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/789701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zioproto",
            "html_url": "https://github.com/zioproto",
            "followers_url": "https://api.github.com/users/zioproto/followers",
            "following_url": "https://api.github.com/users/zioproto/following{/other_user}",
            "gists_url": "https://api.github.com/users/zioproto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zioproto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zioproto/subscriptions",
            "organizations_url": "https://api.github.com/users/zioproto/orgs",
            "repos_url": "https://api.github.com/users/zioproto/repos",
            "events_url": "https://api.github.com/users/zioproto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zioproto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-05-16T08:48:53Z",
        "updated_at": "2023-06-13T18:15:13Z",
        "closed_at": "2023-06-13T18:15:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.169\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n@ekzh\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nimport os\r\nimport langchain\r\nimport openai\r\nfrom langchain.llms import AzureOpenAI\r\nfrom langchain.chat_models import AzureChatOpenAI\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\n\r\nllmconfig = {\r\n    \"openai_api_key\": \"<secret>\",\r\n    \"openai_api_base\": \"https://myllm.openai.azure.com/\",\r\n    \"deployment_name\": \"davinci\",\r\n}\r\n\r\nchatconfig = {\r\n    \"model_name\": \"gpt-35-turbo\",\r\n    \"openai_api_type\": \"azure\",\r\n    \"openai_api_version\": \"chatVERSION\",\r\n    \"openai_api_key\": \"<secret>\",\r\n    \"openai_api_base\": \"https://mychat.openai.azure.com/\",\r\n    \"deployment_name\": \"gpt-35-turbo\",\r\n}\r\n\r\nembedderconfig = {\r\n    \"openai_api_key\": \"<secret>\",\r\n    \"model\": \"ada\",\r\n    \"openai_api_base\": \"https://myembedder.openai.azure.com/\",\r\n    \"openai_api_version\": \"embedderVERSION\",\r\n    \"deployment\": \"ada\",\r\n}\r\n\r\n# First time\r\nllm = AzureOpenAI(**llmconfig)\r\nprint(openai.api_version)\r\nchat = AzureChatOpenAI(**chatconfig)\r\nprint(openai.api_version)\r\nembedder = OpenAIEmbeddings(**embedderconfig)\r\nprint(openai.api_version)\r\nprint(\"\\n\")\r\n# Second time\r\nllm = AzureOpenAI(**llmconfig)\r\nprint(openai.api_version)\r\nchat = AzureChatOpenAI(**chatconfig)\r\nprint(openai.api_version)\r\nembedder = OpenAIEmbeddings(**embedderconfig)\r\nprint(openai.api_version)\r\n```\r\nThis code will return the following:\r\n```\r\nNone\r\nchatVERSION\r\nembedderVERSION\r\n\r\n\r\nembedderVERSION\r\nchatVERSION\r\nembedderVERSION\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe LangChain classes should not alter the global openai module values, because this could cause conflicts when multiple classes are using those.\r\n\r\nFor example if using Chat/Completion API and Embeddings API use a different `api_version` value. \r\nOr when using Chat/Completion from Azure and Embeddings from OpenAI, because the classes share the same openai global values, depending on the order of operations there will be unexpected behaviours.\r\n\r\nRelated issues:\r\n#2683\r\n#4352\r\n\r\nRelated PR:\r\nhttps://github.com/hwchase17/langchain/pull/4234\r\nhttps://github.com/pieroit/cheshire-cat/pull/195\r\n\r\nRelated code:\r\nhttps://github.com/hwchase17/langchain/blob/a7af32c274860ee9174830804301491973aaee0a/langchain/chat_models/azure_openai.py#L79-L87\r\n\r\nand\r\n\r\nhttps://github.com/hwchase17/langchain/blob/a7af32c274860ee9174830804301491973aaee0a/langchain/embeddings/openai.py#L166-L178",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4775/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4775/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4774",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4774/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4774/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4774/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4774",
        "id": 1711521681,
        "node_id": "PR_kwDOIPDwls5Qlswr",
        "number": 4774,
        "title": "Fix SelfQueryRetriever, passing new query to vector store",
        "user": {
            "login": "Yeong0228",
            "id": 110876608,
            "node_id": "U_kgDOBpvXwA",
            "avatar_url": "https://avatars.githubusercontent.com/u/110876608?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yeong0228",
            "html_url": "https://github.com/Yeong0228",
            "followers_url": "https://api.github.com/users/Yeong0228/followers",
            "following_url": "https://api.github.com/users/Yeong0228/following{/other_user}",
            "gists_url": "https://api.github.com/users/Yeong0228/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Yeong0228/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Yeong0228/subscriptions",
            "organizations_url": "https://api.github.com/users/Yeong0228/orgs",
            "repos_url": "https://api.github.com/users/Yeong0228/repos",
            "events_url": "https://api.github.com/users/Yeong0228/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Yeong0228/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T08:32:21Z",
        "updated_at": "2023-05-16T22:46:23Z",
        "closed_at": "2023-05-16T22:46:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4774",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4774",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4774.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4774.patch",
            "merged_at": "2023-05-16T22:46:22Z"
        },
        "body": "# Fix SelfQueryRetriever, passing new query to vector store\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # Fix SelfQueryRetriever, passing new query extracted from LLM to vector store\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4774/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4774/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4773",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4773/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4773/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4773/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4773",
        "id": 1711486994,
        "node_id": "I_kwDOIPDwls5mAzgS",
        "number": 4773,
        "title": "this version also supprot faiss-gpu version",
        "user": {
            "login": "AlexYoung757",
            "id": 11361175,
            "node_id": "MDQ6VXNlcjExMzYxMTc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/11361175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlexYoung757",
            "html_url": "https://github.com/AlexYoung757",
            "followers_url": "https://api.github.com/users/AlexYoung757/followers",
            "following_url": "https://api.github.com/users/AlexYoung757/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlexYoung757/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlexYoung757/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlexYoung757/subscriptions",
            "organizations_url": "https://api.github.com/users/AlexYoung757/orgs",
            "repos_url": "https://api.github.com/users/AlexYoung757/repos",
            "events_url": "https://api.github.com/users/AlexYoung757/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlexYoung757/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T08:11:11Z",
        "updated_at": "2023-09-10T16:17:19Z",
        "closed_at": "2023-09-10T16:17:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\ni find this version can only support faiss-gpu, does it support faiss-gpu. maybe we can add something like annoy,  hnswlib and so on\n\n### Motivation\n\nadd more embedding search tools,  faiss, annoy, hnswlib\n\n### Your contribution\n\nsupport more embedding search tools",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4773/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4773/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4772",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4772/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4772/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4772/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4772",
        "id": 1711479747,
        "node_id": "I_kwDOIPDwls5mAxvD",
        "number": 4772,
        "title": "Challange when using Langchain for customer review analysis.",
        "user": {
            "login": "Jeru2023",
            "id": 123569003,
            "node_id": "U_kgDOB12Daw",
            "avatar_url": "https://avatars.githubusercontent.com/u/123569003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jeru2023",
            "html_url": "https://github.com/Jeru2023",
            "followers_url": "https://api.github.com/users/Jeru2023/followers",
            "following_url": "https://api.github.com/users/Jeru2023/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jeru2023/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jeru2023/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jeru2023/subscriptions",
            "organizations_url": "https://api.github.com/users/Jeru2023/orgs",
            "repos_url": "https://api.github.com/users/Jeru2023/repos",
            "events_url": "https://api.github.com/users/Jeru2023/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jeru2023/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-16T08:06:51Z",
        "updated_at": "2023-09-19T16:10:51Z",
        "closed_at": "2023-09-19T16:10:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nContext: \r\nI'm trying to chat with my dataset as customer reviews from a restaurant.\r\nI would like to have LLM make a summary for every single store individually, I found it difficult to generate the expected output using any types of chains, so alternatively I preprocess my dataset before ingest.\r\n\r\nI save the reviews as one text file per store(there are around 20 stores, which means I created 20 text files per store)\r\nThen I embedded 20 files into one vectordb, code as below\r\nchain = RetrievalQAWithSourcesChain.from_chain_type(\r\n        llm=model,\r\n        chain_type=\"stuff\",\r\n        retriever=db.as_retriever(),\r\n        chain_type_kwargs=chain_type_kwargs,\r\n        reduce_k_below_max_tokens=True\r\n    )\r\n\r\nmy prompt is sth like \"make a summary of customer reviews per store\", however only 4 stores with summary generated, I guess only 4 documents returned as context\uff1fIs there any solution with one single prompt I can indicate the LLM generate summaries for all 20 stores? thanks.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4772/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4770",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4770/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4770/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4770/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4770",
        "id": 1711370886,
        "node_id": "PR_kwDOIPDwls5QlMN6",
        "number": 4770,
        "title": "Get tokens method for BaseLanguageModel, OpenAI, & ChatOpenAI",
        "user": {
            "login": "zachschillaci27",
            "id": 40636930,
            "node_id": "MDQ6VXNlcjQwNjM2OTMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/40636930?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zachschillaci27",
            "html_url": "https://github.com/zachschillaci27",
            "followers_url": "https://api.github.com/users/zachschillaci27/followers",
            "following_url": "https://api.github.com/users/zachschillaci27/following{/other_user}",
            "gists_url": "https://api.github.com/users/zachschillaci27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zachschillaci27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zachschillaci27/subscriptions",
            "organizations_url": "https://api.github.com/users/zachschillaci27/orgs",
            "repos_url": "https://api.github.com/users/zachschillaci27/repos",
            "events_url": "https://api.github.com/users/zachschillaci27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zachschillaci27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T07:01:43Z",
        "updated_at": "2023-05-16T13:34:51Z",
        "closed_at": "2023-05-16T13:27:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4770",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4770",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4770.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4770.patch",
            "merged_at": "2023-05-16T13:27:51Z"
        },
        "body": "# Get tokens method for BaseLanguageModel, OpenAI, & ChatOpenAI\r\nSometimes it's helpful to inspect the tokenization of your model to better understand how certain words are being tokenized. Therefore, I have split the preexisting `get_num_tokens` of `BaseLanguageModel` into a `get_tokens` method - which returns a list of integer tokens - and the same `get_num_tokens` method, now calling `get_tokens` under the hood. I have further implemented these methods for the `OpenAI` and `ChatOpenAI` language models.\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n## Before submitting\r\n\r\nI updated the integration test here `tests/integration_tests/test_schema.py` to also check the tokenization of the default `GPT2TokenizerFast` tokenizer.\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@hwchase17, @agola11 \r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4770/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4770/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4769",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4769/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4769/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4769/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4769",
        "id": 1711345791,
        "node_id": "I_kwDOIPDwls5mARB_",
        "number": 4769,
        "title": "KeyError: 'tools' when initialize_agent with python_repl tool",
        "user": {
            "login": "xulicong",
            "id": 9657266,
            "node_id": "MDQ6VXNlcjk2NTcyNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9657266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xulicong",
            "html_url": "https://github.com/xulicong",
            "followers_url": "https://api.github.com/users/xulicong/followers",
            "following_url": "https://api.github.com/users/xulicong/following{/other_user}",
            "gists_url": "https://api.github.com/users/xulicong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xulicong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xulicong/subscriptions",
            "organizations_url": "https://api.github.com/users/xulicong/orgs",
            "repos_url": "https://api.github.com/users/xulicong/repos",
            "events_url": "https://api.github.com/users/xulicong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xulicong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-16T06:44:22Z",
        "updated_at": "2023-09-19T16:10:56Z",
        "closed_at": "2023-09-19T16:10:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nwindows 10 \n\n### Who can help?\n\n@vowelparrot @hwchase17\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI just follow the fake llm toturial:\r\nhttps://python.langchain.com/en/latest/modules/models/llms/examples/fake_llm.html\r\nmy code is as flowing:\r\n\r\nfrom langchain.llms.fake import FakeListLLM\r\nfrom langchain.agents import load_tools\r\nfrom langchain.agents import initialize_agent\r\nfrom langchain.agents import AgentType\r\ntools = load_tools([\"python_repl\"])\r\nresponses=[\r\n    \"Action: Python REPL\\nAction Input: print(2 + 2)\",\r\n    \"Final Answer: 4\"\r\n]\r\nllm = FakeListLLM(responses=responses)\r\nagent = initialize_agent(tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\r\nagent.run(\"whats 2 + 2\")\n\n### Expected behavior\n\ncode works like the official toturial",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4769/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4769/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4768",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4768/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4768/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4768/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4768",
        "id": 1711325729,
        "node_id": "I_kwDOIPDwls5mAMIh",
        "number": 4768,
        "title": "The exception 'SQLDatabaseSequentialChain or SQLDatabaseChain configuration parameter use_query_checker=True' occurred.",
        "user": {
            "login": "liutizhong",
            "id": 5072668,
            "node_id": "MDQ6VXNlcjUwNzI2Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5072668?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liutizhong",
            "html_url": "https://github.com/liutizhong",
            "followers_url": "https://api.github.com/users/liutizhong/followers",
            "following_url": "https://api.github.com/users/liutizhong/following{/other_user}",
            "gists_url": "https://api.github.com/users/liutizhong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liutizhong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liutizhong/subscriptions",
            "organizations_url": "https://api.github.com/users/liutizhong/orgs",
            "repos_url": "https://api.github.com/users/liutizhong/repos",
            "events_url": "https://api.github.com/users/liutizhong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liutizhong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-16T06:26:18Z",
        "updated_at": "2023-10-30T16:07:03Z",
        "closed_at": "2023-10-30T16:07:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nenv python == 3.10.10\r\nlangchain==0.0.170\r\nmysql==5.7\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n`\r\ndb_chain = SQLDatabaseSequentialChain.from_llm(llm,\r\n                            db,\r\n                            verbose=True,\r\n                            return_direct=True,\r\n                            use_query_checker=True,\r\n                            return_intermediate_steps=True)\r\n\r\nwith get_openai_callback() as cb:\r\n    restult=db_chain(\"New energy vehicle sales in 2022?\")\r\n\r\nprint(restult)\r\nprint(cb)\r\n\r\n`\r\n\r\nExpected behavior\r\nEntering new SQLDatabaseSequentialChain chain...\r\nTable names to use:\r\n['t_passenger_car_monthly_sales']\r\n\r\nEntering new SQLDatabaseChain chain \r\nNew energy vehicle sales in 2022?\r\nSQLQuery:The original query seems correct and does not contain any of the common mistakes listed. Therefore, the original query is:\r\nSELECT SUM(monthly_retail_sales) AS total_sales FROM t_passenger_car_monthly_sales WHERE passenger_car_type = 'passenger_car' AND yearly = 2022\r\n---------------------------------------------------------------------------\r\nProgrammingError                          Traceback (most recent call last)\r\nFile [~/opt/anaconda3/envs/py310/lib/python3.10/site-packages/sqlalchemy/engine/base.py:1900] in Connection._execute_context(self, dialect, constructor, statement, parameters, execution_options, *args, **kw)\r\n   1899     if not evt_handled:\r\n-> 1900         self.dialect.do_execute(\r\n   1901             cursor, statement, parameters, context\r\n   1902         )\r\n   1904 if self._has_events or self.engine._has_events:\r\n\r\nFile [~/opt/anaconda3/envs/py310/lib/python3.10/site-packages/sqlalchemy/engine/default.py:736], in DefaultDialect.do_execute(self, cursor, statement, parameters, context)\r\n    735 def do_execute(self, cursor, statement, parameters, context=None):\r\n--> 736     cursor.execute(statement, parameters)\r\n\r\nFile [~/opt/anaconda3/envs/py310/lib/python3.10/site-packages/pymysql/cursors.py:158], in Cursor.execute(self, query, args)\r\n    156 query = self.mogrify(query, args)\r\n--> 158 result = self._query(query)\r\n    159 self._executed = query\r\n\r\nFile [~/opt/anaconda3/envs/py310/lib/python3.10/site-packages/pymysql/cursors.py:325] in Cursor._query(self, q)\r\n    324 self._clear_result()\r\n--> 325 conn.query(q)\r\n    326 self._do_get_result()\r\n\r\nFile [~/opt/anaconda3/envs/py310/lib/python3.10/site-packages/pymysql/connections.py:549], in Connection.query(self, sql, unbuffered)\r\n    548 self._execute_command(COMMAND.COM_QUERY, sql)\r\n...\r\nProgrammingError: (pymysql.err.ProgrammingError) (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'The original query seems correct and does not contain any of the common mistakes' at line 1\")\r\n[SQL: The original query seems correct and does not contain any of the common mistakes listed. Therefore, the original query is:\r\n\r\nSELECT SUM(monthly_retail_sales) AS total_sales FROM t_passenger_car_monthly_sales WHERE passenger_car_type = 'passenger_car' AND yearly = 2022]\r\n(Background on this error at: https://sqlalche.me/e/14/f405)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4768/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4768/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4767",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4767/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4767/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4767/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4767",
        "id": 1711321986,
        "node_id": "PR_kwDOIPDwls5QlB2P",
        "number": 4767,
        "title": "New Trello document loader",
        "user": {
            "login": "GMartin-dev",
            "id": 1821407,
            "node_id": "MDQ6VXNlcjE4MjE0MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1821407?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GMartin-dev",
            "html_url": "https://github.com/GMartin-dev",
            "followers_url": "https://api.github.com/users/GMartin-dev/followers",
            "following_url": "https://api.github.com/users/GMartin-dev/following{/other_user}",
            "gists_url": "https://api.github.com/users/GMartin-dev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GMartin-dev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GMartin-dev/subscriptions",
            "organizations_url": "https://api.github.com/users/GMartin-dev/orgs",
            "repos_url": "https://api.github.com/users/GMartin-dev/repos",
            "events_url": "https://api.github.com/users/GMartin-dev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GMartin-dev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-16T06:23:13Z",
        "updated_at": "2023-05-31T05:45:30Z",
        "closed_at": "2023-05-30T02:47:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4767",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4767",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4767.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4767.patch",
            "merged_at": "2023-05-30T02:47:56Z"
        },
        "body": "# Added New Trello loader class and documentation\r\n\r\nSimple Loader on top of py-trello wrapper. \r\nWith a board name you can pull cards and to do some field parameter tweaks on load operation.\r\nI included documentation and examples.\r\nIncluded unit test cases using patch and a fixture for py-trello client class.\r\n\r\nThanks in advance for your feedback @eyurtsev.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4767/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4767/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4766",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4766/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4766/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4766/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4766",
        "id": 1711294010,
        "node_id": "I_kwDOIPDwls5mAEY6",
        "number": 4766,
        "title": "Will the langchain support ChatGLM?",
        "user": {
            "login": "toughhou",
            "id": 7472236,
            "node_id": "MDQ6VXNlcjc0NzIyMzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7472236?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toughhou",
            "html_url": "https://github.com/toughhou",
            "followers_url": "https://api.github.com/users/toughhou/followers",
            "following_url": "https://api.github.com/users/toughhou/following{/other_user}",
            "gists_url": "https://api.github.com/users/toughhou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toughhou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toughhou/subscriptions",
            "organizations_url": "https://api.github.com/users/toughhou/orgs",
            "repos_url": "https://api.github.com/users/toughhou/repos",
            "events_url": "https://api.github.com/users/toughhou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toughhou/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-16T05:59:26Z",
        "updated_at": "2023-10-17T16:07:29Z",
        "closed_at": "2023-10-17T16:07:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n_No response_\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4766/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4766/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4765",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4765/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4765/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4765/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4765",
        "id": 1711208089,
        "node_id": "PR_kwDOIPDwls5QkpSV",
        "number": 4765,
        "title": "Harrison/wiki loader",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T04:18:03Z",
        "updated_at": "2023-05-16T06:42:58Z",
        "closed_at": "2023-05-16T06:42:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4765",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4765",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4765.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4765.patch",
            "merged_at": "2023-05-16T06:42:58Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4765/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4765/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4764",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4764/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4764/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4764/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4764",
        "id": 1711205355,
        "node_id": "PR_kwDOIPDwls5Qkosc",
        "number": 4764,
        "title": "Cassandra support for chat history (#4378)",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T04:14:15Z",
        "updated_at": "2023-05-16T06:43:11Z",
        "closed_at": "2023-05-16T06:43:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4764",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4764",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4764.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4764.patch",
            "merged_at": "2023-05-16T06:43:10Z"
        },
        "body": "# Cassandra support for chat history\r\n\r\n### Description\r\n\r\n- Store chat messages in cassandra\r\n\r\n### Dependency\r\n\r\n- cassandra-driver - Python Module\r\n\r\n## Before submitting\r\n\r\n- Added Integration Test\r\n\r\n## Who can review?\r\n\r\n@hwchase17\r\n@agola11\r\n\r\n# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4764/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4764/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4763",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4763/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4763/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4763/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4763",
        "id": 1711178606,
        "node_id": "PR_kwDOIPDwls5QkimM",
        "number": 4763,
        "title": "Persist Volume After Stop",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T03:54:08Z",
        "updated_at": "2023-05-16T13:10:14Z",
        "closed_at": "2023-05-16T13:10:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4763",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4763",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4763.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4763.patch",
            "merged_at": "2023-05-16T13:10:13Z"
        },
        "body": "Previously, the data would be removed after shutting down the server. This mounts a local `db/` volume that isn't erased between calls\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4763/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4763/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4762",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4762/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4762/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4762/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4762",
        "id": 1711172396,
        "node_id": "I_kwDOIPDwls5l_mss",
        "number": 4762,
        "title": "some thing wrong with tracing",
        "user": {
            "login": "jyC23333",
            "id": 110331827,
            "node_id": "U_kgDOBpOHsw",
            "avatar_url": "https://avatars.githubusercontent.com/u/110331827?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jyC23333",
            "html_url": "https://github.com/jyC23333",
            "followers_url": "https://api.github.com/users/jyC23333/followers",
            "following_url": "https://api.github.com/users/jyC23333/following{/other_user}",
            "gists_url": "https://api.github.com/users/jyC23333/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jyC23333/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jyC23333/subscriptions",
            "organizations_url": "https://api.github.com/users/jyC23333/orgs",
            "repos_url": "https://api.github.com/users/jyC23333/repos",
            "events_url": "https://api.github.com/users/jyC23333/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jyC23333/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-16T03:44:42Z",
        "updated_at": "2023-06-09T10:09:26Z",
        "closed_at": "2023-06-09T10:09:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI just set up a local tracing server, I change the port to 8005.\r\n![image](https://github.com/hwchase17/langchain/assets/110331827/b06d5948-1676-46b6-a8e3-3c4e01cf35e8)\r\nwhen I visit localhost:4173, It shows:\r\n![image](https://github.com/hwchase17/langchain/assets/110331827/abae4119-1c2d-4470-9ba2-1986f6762e65)\r\nand the error is:\r\n```\r\nlangchain-langchain-frontend-1  |   \u279c  Local:   http://localhost:4173/\r\nlangchain-langchain-frontend-1  |   \u279c  Network: http://172.18.0.4:4173/\r\nlangchain-langchain-backend-1   | INFO:     Application startup complete.\r\nlangchain-langchain-backend-1   | INFO:     Uvicorn running on http://0.0.0.0:8005 (Press CTRL+C to quit)\r\nlangchain-langchain-frontend-1  | TypeError: fetch failed\r\nlangchain-langchain-frontend-1  |     at fetch (/app/node_modules/undici/index.js:105:13)\r\nlangchain-langchain-frontend-1  |     at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\r\nlangchain-langchain-frontend-1  |     at async fetchData (file:///app/.svelte-kit/output/server/entries/pages/sessions/_page.server.ts.js:7:17)\r\nlangchain-langchain-frontend-1  |     at async file:///app/.svelte-kit/output/server/index.js:489:86\r\nlangchain-langchain-frontend-1  |     at async Promise.all (index 0)\r\nlangchain-langchain-frontend-1  |     at async unwrap_promises (file:///app/.svelte-kit/output/server/index.js:489:9)\r\nlangchain-langchain-frontend-1  |     at async load_server_data (file:///app/.svelte-kit/output/server/index.js:537:25)\r\nlangchain-langchain-frontend-1  |     at async file:///app/.svelte-kit/output/server/index.js:1500:18\r\n```\n\n### Who can help?\n\n@agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nrun ```langchain-server``` in terminal \n\n### Expected behavior\n\nhow to fix this bug?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4762/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4762/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    }
]