[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7341",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7341/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7341/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7341/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7341",
        "id": 1793313012,
        "node_id": "I_kwDOIPDwls5q48j0",
        "number": 7341,
        "title": "Create a built in translator for SelfQueryRetriever for Elasticsearch",
        "user": {
            "login": "lemig",
            "id": 78766,
            "node_id": "MDQ6VXNlcjc4NzY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/78766?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lemig",
            "html_url": "https://github.com/lemig",
            "followers_url": "https://api.github.com/users/lemig/followers",
            "following_url": "https://api.github.com/users/lemig/following{/other_user}",
            "gists_url": "https://api.github.com/users/lemig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lemig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lemig/subscriptions",
            "organizations_url": "https://api.github.com/users/lemig/orgs",
            "repos_url": "https://api.github.com/users/lemig/repos",
            "events_url": "https://api.github.com/users/lemig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lemig/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T10:53:34Z",
        "updated_at": "2023-11-21T16:06:47Z",
        "closed_at": "2023-11-21T16:06:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nInferring query filters from natural language is powerful. The SelfQuery retriever is a great implementation but is not yet compatible with Elasticseach.\n\n### Motivation\n\nChoosing Elasticsearch as a vector store is interesting in terms of hybrid search.\r\nIt also makes sense when you have an established infrastructure and technical expertise.\r\n\r\n \n\n### Your contribution\n\ncc: @jeffvestal, @derickson",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7341/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7341/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7340",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7340/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7340/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7340/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7340",
        "id": 1793294393,
        "node_id": "I_kwDOIPDwls5q44A5",
        "number": 7340,
        "title": "langchain + gpt4all ",
        "user": {
            "login": "Kuramdasu-ujwala-devi",
            "id": 69832170,
            "node_id": "MDQ6VXNlcjY5ODMyMTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/69832170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kuramdasu-ujwala-devi",
            "html_url": "https://github.com/Kuramdasu-ujwala-devi",
            "followers_url": "https://api.github.com/users/Kuramdasu-ujwala-devi/followers",
            "following_url": "https://api.github.com/users/Kuramdasu-ujwala-devi/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kuramdasu-ujwala-devi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kuramdasu-ujwala-devi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kuramdasu-ujwala-devi/subscriptions",
            "organizations_url": "https://api.github.com/users/Kuramdasu-ujwala-devi/orgs",
            "repos_url": "https://api.github.com/users/Kuramdasu-ujwala-devi/repos",
            "events_url": "https://api.github.com/users/Kuramdasu-ujwala-devi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kuramdasu-ujwala-devi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-07T10:43:13Z",
        "updated_at": "2023-11-28T16:09:46Z",
        "closed_at": "2023-11-28T16:09:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n\r\nLangChain v0.0.225, Ubuntu 22.04.2 LTS, Python 3.10\r\n\r\n\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI'm executing  [https://github.com/hwchase17/langchain/blob/master/docs/extras/modules/model_io/models/llms/integrations/gpt4all.ipynb](url) code on my local machine, IDE is VSCode\r\nGetting this error - **AttributeError: 'Model' object has no attribute '_ctx'**\r\n![Screenshot from 2023-07-07 14-36-37](https://github.com/hwchase17/langchain/assets/69832170/9b37fd68-14ba-4fee-ae0b-e56f5a464cd5)\r\n\r\n### Expected behavior\r\n\r\n![Screenshot from 2023-07-07 16-12-58](https://github.com/hwchase17/langchain/assets/69832170/2a1ed0a6-e24e-4f6d-9dcd-1a8bba89c289)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7340/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7340/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7339",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7339/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7339/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7339/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7339",
        "id": 1793287416,
        "node_id": "I_kwDOIPDwls5q42T4",
        "number": 7339,
        "title": "Issue: Whisper terminates YouTube transcriptions.",
        "user": {
            "login": "Dave86ch",
            "id": 87725170,
            "node_id": "MDQ6VXNlcjg3NzI1MTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/87725170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dave86ch",
            "html_url": "https://github.com/Dave86ch",
            "followers_url": "https://api.github.com/users/Dave86ch/followers",
            "following_url": "https://api.github.com/users/Dave86ch/following{/other_user}",
            "gists_url": "https://api.github.com/users/Dave86ch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Dave86ch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Dave86ch/subscriptions",
            "organizations_url": "https://api.github.com/users/Dave86ch/orgs",
            "repos_url": "https://api.github.com/users/Dave86ch/repos",
            "events_url": "https://api.github.com/users/Dave86ch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Dave86ch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-07T10:39:03Z",
        "updated_at": "2023-10-14T20:10:22Z",
        "closed_at": "2023-10-14T20:10:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHello everyone,\r\n\r\nI've tried numerous approaches, but every time I attempt to transcribe a video from Google, the Whisper task gets terminated.\r\n\r\nDoes anyone have any suggestions?\r\n\r\n```\r\ndef youtube_transcript(query: str) -> str:\r\n    # Use the URL of the YouTube video you want to download\r\n    youtube_url = [get_input_writing(query)]\r\n# -------------\r\n    # Directory to save audio files\r\n    save_dir = \"/home/ds_logos_2/transcripts\"\r\n\r\n    # Transcribe the videos to text\r\n    loader = GenericLoader(YoutubeAudioLoader(youtube_url, save_dir), OpenAIWhisperParser())\r\n    docs = loader.load()    \r\n    # Combine doc\r\n    combined_docs = [doc.page_content for doc in docs]\r\n    text = \" \".join(combined_docs)\r\n\r\n    # Save the transcription to a text file\r\n    with open('/home/davesoma/transcripts/transcript.txt', 'w') as f:\r\n        f.write(text)\r\n```\r\n```\r\n[youtube] -hxeDjAxvJ8: Downloading webpage\r\n[youtube] -hxeDjAxvJ8: Downloading ios player API JSON\r\n[youtube] -hxeDjAxvJ8: Downloading android player API JSON\r\n[youtube] -hxeDjAxvJ8: Downloading m3u8 information\r\n[info] -hxeDjAxvJ8: Downloading 1 format(s): 140\r\n[download] Destination: /home/davesoma/ds_logos_2/transcripts/Marc Andreessen\uff1a Future of the Internet, Technology, and AI \uff5c Lex Fridman Podcast #386.m4a\r\n[download] 100% of  177.41MiB in 00:00:18 at 9.52MiB/s\r\n[FixupM4a] Correcting container of \"/home/davesoma/ds_logos_2/transcripts/Marc Andreessen\uff1a Future of the Internet, Technology, and AI \uff5c Lex Fridman Podcast #386.m4a\"\r\n[ExtractAudio] Not converting audio /home/davesoma/ds_logos_2/transcripts/Marc Andreessen\uff1a Future of the Internet, Technology, and AI \uff5c Lex Fridman Podcast #386.m4a; fil\r\ne is already in target format m4a                                                                                                                                          Transcribing part 1!\r\nKilled\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7339/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7339/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7338",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7338/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7338/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7338/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7338",
        "id": 1793271619,
        "node_id": "I_kwDOIPDwls5q4ydD",
        "number": 7338,
        "title": "Add feature to get document ID from redis after redis search document retrieval.",
        "user": {
            "login": "TRY-ER",
            "id": 75255871,
            "node_id": "MDQ6VXNlcjc1MjU1ODcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/75255871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TRY-ER",
            "html_url": "https://github.com/TRY-ER",
            "followers_url": "https://api.github.com/users/TRY-ER/followers",
            "following_url": "https://api.github.com/users/TRY-ER/following{/other_user}",
            "gists_url": "https://api.github.com/users/TRY-ER/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TRY-ER/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TRY-ER/subscriptions",
            "organizations_url": "https://api.github.com/users/TRY-ER/orgs",
            "repos_url": "https://api.github.com/users/TRY-ER/repos",
            "events_url": "https://api.github.com/users/TRY-ER/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TRY-ER/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T10:29:51Z",
        "updated_at": "2023-10-06T16:04:59Z",
        "closed_at": "2023-10-06T16:04:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI have been trying to delete custom redis data using langchain. But the search feature only returns the document and the metadata with similarity score. Hence I modified the code to return the document ID along with the document data. The id will be helpful for manual deletion of certain elements. \n\n### Motivation\n\nThe retrieval of document ID from the redis semantic search will help me to systematically modify the wrong data with right ones after filtering it using LLMs.\n\n### Your contribution\n\nYes I have fixed the redis part to retrieve the document ID from semantic search. I will fix the issue if the pull request is allowed. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7338/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7338/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7337",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7337/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7337/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7337/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7337",
        "id": 1793238048,
        "node_id": "I_kwDOIPDwls5q4qQg",
        "number": 7337,
        "title": "Working of ConversationBufferMemory in the context of document based question answering",
        "user": {
            "login": "pradeepdev-1995",
            "id": 41164884,
            "node_id": "MDQ6VXNlcjQxMTY0ODg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/41164884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pradeepdev-1995",
            "html_url": "https://github.com/pradeepdev-1995",
            "followers_url": "https://api.github.com/users/pradeepdev-1995/followers",
            "following_url": "https://api.github.com/users/pradeepdev-1995/following{/other_user}",
            "gists_url": "https://api.github.com/users/pradeepdev-1995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pradeepdev-1995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pradeepdev-1995/subscriptions",
            "organizations_url": "https://api.github.com/users/pradeepdev-1995/orgs",
            "repos_url": "https://api.github.com/users/pradeepdev-1995/repos",
            "events_url": "https://api.github.com/users/pradeepdev-1995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pradeepdev-1995/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T10:12:08Z",
        "updated_at": "2023-10-14T20:10:27Z",
        "closed_at": "2023-10-14T20:10:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI am doing the pdf question answering using the below code.\r\nNote: I am integrated the ConversationBufferMemory for keeping my chat in the memory\r\n```\r\nfrom langchain.document_loaders import PyPDFLoader\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.llms import Cohere\r\nimport os\r\nos.environ[\"COHERE_API_KEY\"] = \"cohere key\"\r\nmodel = Cohere(model=\"command-xlarge\")\r\nembeddings = HuggingFaceEmbeddings(model_name='sentence-transformers/all-MiniLM-L6-v2')\r\n\r\npdf_path = \"file.pdf\"\r\n\r\nloader = PyPDFLoader(pdf_path)\r\npages = loader.load_and_split()\r\n\r\nvectordb = Chroma.from_documents(pages, embedding=embeddings,\r\n                                 persist_directory=\".\")\r\nvectordb.persist()\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\npdf_qa = ConversationalRetrievalChain.from_llm(model, vectordb.as_retriever(), memory=memory)\r\nwhile True:\r\n    query = input(\"Enter the question\\n\")\r\n    result = pdf_qa({\"question\": query})\r\n    print(\"Answer:\")\r\n    print(result[\"answer\"])\r\n```\r\n\r\nActually what happening here?\r\nI am observing that memory is not keeping updated here, because if I am asking any question related to the previous context, it is unable to answer. \r\n\r\nIs my method is correct?\r\n\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7337/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7337/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7336",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7336/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7336/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7336/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7336",
        "id": 1793196340,
        "node_id": "I_kwDOIPDwls5q4gE0",
        "number": 7336,
        "title": "Issue: question about agents",
        "user": {
            "login": "zhangjunqiang",
            "id": 5388898,
            "node_id": "MDQ6VXNlcjUzODg4OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5388898?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhangjunqiang",
            "html_url": "https://github.com/zhangjunqiang",
            "followers_url": "https://api.github.com/users/zhangjunqiang/followers",
            "following_url": "https://api.github.com/users/zhangjunqiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhangjunqiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhangjunqiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhangjunqiang/subscriptions",
            "organizations_url": "https://api.github.com/users/zhangjunqiang/orgs",
            "repos_url": "https://api.github.com/users/zhangjunqiang/repos",
            "events_url": "https://api.github.com/users/zhangjunqiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhangjunqiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-07T09:49:22Z",
        "updated_at": "2023-10-19T16:06:33Z",
        "closed_at": "2023-10-19T16:06:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I want pass \"chat_history\" to the agents like :\r\n```python\r\n...\r\nagent = initialize_agent(tools, llm, agent=AgentType.OPENAI_FUNCTIONS, verbose=True)\r\nresponse = agent.run({\"input\": {\"chat_history\": _message_to_tuple(history), \"question\": query}})\r\n\r\n```\r\nbut got an error. how can i pass 'chat_history' to the agent?\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7336/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7336/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7335",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7335/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7335/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7335/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7335",
        "id": 1793193242,
        "node_id": "PR_kwDOIPDwls5U5gEK",
        "number": 7335,
        "title": "bump 226",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T09:47:39Z",
        "updated_at": "2023-07-07T09:59:14Z",
        "closed_at": "2023-07-07T09:59:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7335",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7335",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7335.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7335.patch",
            "merged_at": "2023-07-07T09:59:13Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7335/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7335/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7334",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7334/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7334/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7334/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7334",
        "id": 1793171566,
        "node_id": "PR_kwDOIPDwls5U5bPg",
        "number": 7334,
        "title": "Qdrant: Ability to add vectors to already existing collection & set vector size",
        "user": {
            "login": "hopkins385",
            "id": 98618192,
            "node_id": "U_kgDOBeDLUA",
            "avatar_url": "https://avatars.githubusercontent.com/u/98618192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hopkins385",
            "html_url": "https://github.com/hopkins385",
            "followers_url": "https://api.github.com/users/hopkins385/followers",
            "following_url": "https://api.github.com/users/hopkins385/following{/other_user}",
            "gists_url": "https://api.github.com/users/hopkins385/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hopkins385/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hopkins385/subscriptions",
            "organizations_url": "https://api.github.com/users/hopkins385/orgs",
            "repos_url": "https://api.github.com/users/hopkins385/repos",
            "events_url": "https://api.github.com/users/hopkins385/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hopkins385/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-07T09:36:29Z",
        "updated_at": "2023-08-21T16:24:44Z",
        "closed_at": "2023-08-21T16:24:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7334",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7334",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7334.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7334.patch",
            "merged_at": null
        },
        "body": "Problem:\r\nWhenever we add vectors to an existing qdrant collection that collection gets deleted and re-created from scratch if we use for example `VectorstoreIndexCreator()`.\r\n\r\nThis PR solves this issue and adds further automatisation abilities without breaking the already existing behavior.\r\n\r\nIn addition to that this PR adds the ability to configure a fixed vector size, eliminating the need to make a single embedding just to figure out the vector size and further reducing api usage resulting in reduced costs for end-users.\r\n\r\nSo this PR introduces the following two flags:\r\n\r\n`recreate_collection = Optional[bool]`\r\n\r\n`vector_size = Optional[int]`\r\n\r\nHow this solution works:\r\n\r\nIf recreate_collection=False, it checks if collection exists, if not, continue like before this PR ((re)create collection)\r\nif collection exists, and recreate_collection=False, and init_from=None then do not execute recreate_collection()\r\n\r\nVectorstoreIndexCreator code example (after PR):\r\n\r\n```python\r\n        VectorstoreIndexCreator(\r\n            vectorstore_cls=Qdrant,\r\n            text_splitter=RecursiveCharacterTextSplitter(\r\n                chunk_size=int(os.environ.get('CHUNK_SIZE_TOKENS', 400)),\r\n                separators=sepList,\r\n                chunk_overlap=0,\r\n                length_function=get_tokens,\r\n            ),\r\n            vectorstore_kwargs=dict(\r\n                host=os.environ.get('QDRANT_HOST', 'qdrant'),\r\n                port=int(os.environ.get('QDRANT_PORT', '6333')),\r\n                grpc_port=int(os.environ.get('QDRANT_GRPC_PORT', '6334')),\r\n                prefer_grpc=bool(os.environ.get('QDRANT_PREFER_GRPC', 'True')),\r\n                collection_name=self.request.collection_name,\r\n                recreate_collection=False, # <-- this is new, default value is True\r\n                vector_size=int(os.environ.get('VECTOR_DIMENSIONS', '1536')), # <-- this is new, default value is None\r\n            ),\r\n        ).from_documents(self.documents)\r\n```\r\n\r\n--\r\n\r\nMaintainer responsibilities:\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7334/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7334/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7333",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7333/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7333/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7333/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7333",
        "id": 1793162545,
        "node_id": "PR_kwDOIPDwls5U5ZQX",
        "number": 7333,
        "title": "Add upserting and deletion capability to PGVector",
        "user": {
            "login": "angelol",
            "id": 7630,
            "node_id": "MDQ6VXNlcjc2MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7630?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angelol",
            "html_url": "https://github.com/angelol",
            "followers_url": "https://api.github.com/users/angelol/followers",
            "following_url": "https://api.github.com/users/angelol/following{/other_user}",
            "gists_url": "https://api.github.com/users/angelol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angelol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angelol/subscriptions",
            "organizations_url": "https://api.github.com/users/angelol/orgs",
            "repos_url": "https://api.github.com/users/angelol/repos",
            "events_url": "https://api.github.com/users/angelol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angelol/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-07T09:31:24Z",
        "updated_at": "2023-11-07T03:46:26Z",
        "closed_at": "2023-11-07T03:46:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7333",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7333",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7333.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7333.patch",
            "merged_at": null
        },
        "body": "Currently, the PGVector vectorstore only supports adding embeddings to the store. This PR adds upserting and deletion capability to the store, so you can update existing embeddings if the underlying text have changed. This is useful if you have indexed a set of documents but some of the documents are being changed and you want to keep the index up-to-date.\r\n\r\nTo use this feature, simply provided ids for all texts/or documents. The pgvector notebook has been updated accordingly.\r\n\r\nThe fixes issue #6866. \r\n\r\n\ud83d\udc40  @rlancemartin, @eyurtsev\r\n\r\nIn case you want to announce on Twitter, my Twitter handle is @angelol",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7333/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7333/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7332",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7332/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7332/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7332/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7332",
        "id": 1793095339,
        "node_id": "PR_kwDOIPDwls5U5Kyi",
        "number": 7332,
        "title": "Bug fix related to base vectorstore's metadata.",
        "user": {
            "login": "nishantkr18",
            "id": 44468894,
            "node_id": "MDQ6VXNlcjQ0NDY4ODk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/44468894?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nishantkr18",
            "html_url": "https://github.com/nishantkr18",
            "followers_url": "https://api.github.com/users/nishantkr18/followers",
            "following_url": "https://api.github.com/users/nishantkr18/following{/other_user}",
            "gists_url": "https://api.github.com/users/nishantkr18/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nishantkr18/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nishantkr18/subscriptions",
            "organizations_url": "https://api.github.com/users/nishantkr18/orgs",
            "repos_url": "https://api.github.com/users/nishantkr18/repos",
            "events_url": "https://api.github.com/users/nishantkr18/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nishantkr18/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-07T08:49:01Z",
        "updated_at": "2023-08-16T04:04:24Z",
        "closed_at": "2023-07-12T01:15:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7332",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7332",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7332.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7332.patch",
            "merged_at": null
        },
        "body": "If I use Pinecone to create a vectorbase, by calling from_documents:\r\n```python\r\n    vectorstore = Pinecone.from_documents(\r\n        documents=source_chunks, embedding=embedding, index_name='apple')\r\n```\r\n the vectors of the same source, have the same content. \r\n![image](https://github.com/hwchase17/langchain/assets/44468894/28c9576c-c3d1-493f-b594-54f5adb43309)\r\n\r\nIssue also described here: https://stackoverflow.com/questions/76401057/why-does-pinecone-repeatedly-return-the-same-result-from-my-series-of-documents\r\n\r\nThis happens because when I create documents like this:\r\n```python\r\n    source_chunks = []\r\n    for source in docs:\r\n        for chunk in splitter.split_text(source.page_content):\r\n            source_chunks.append(\r\n                Document(page_content=chunk, metadata=source.metadata))\r\n```\r\nthe source.metadata is not copied by default. To enforce that, I need to use `Document(page_content=chunk, metadata=source.metadata.copy()))`.\r\n\r\nAlthough this is a user implementation issue, such a thing can happen quite often. To prevent this, we can make sure that the metadata dict is copied by default. \r\n\r\nAfter wasting 2 hours of my time trying to find out why am I getting dublicate responses on similarity search, I realized that this should be addressed. \r\n\r\nLet me know what you think.\r\nThanks!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7332/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7332/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7331",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7331/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7331/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7331/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7331",
        "id": 1793084323,
        "node_id": "I_kwDOIPDwls5q4Euj",
        "number": 7331,
        "title": "AzureChatOpenAI raises The API deployment for this resource does not exist when used with ConversationalRetrievalChain",
        "user": {
            "login": "jorrgme",
            "id": 10991429,
            "node_id": "MDQ6VXNlcjEwOTkxNDI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/10991429?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorrgme",
            "html_url": "https://github.com/jorrgme",
            "followers_url": "https://api.github.com/users/jorrgme/followers",
            "following_url": "https://api.github.com/users/jorrgme/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorrgme/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorrgme/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorrgme/subscriptions",
            "organizations_url": "https://api.github.com/users/jorrgme/orgs",
            "repos_url": "https://api.github.com/users/jorrgme/repos",
            "events_url": "https://api.github.com/users/jorrgme/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorrgme/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T08:41:48Z",
        "updated_at": "2023-07-10T11:11:16Z",
        "closed_at": "2023-07-10T11:11:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nHello,\r\n\r\nI am trying to use AzureChatOpenAI to develop a QA system with memory.  For that purpose, I have the following code:\r\n\r\n```python\r\nimport faiss\r\nimport pickle\r\nfrom langchain.chat_models import AzureChatOpenAI\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.schema import HumanMessage\r\n\r\nmemory = ConversationBufferMemory(\r\n    memory_key=\"chat_history\",\r\n    return_messages=True\r\n)\r\n\r\n# Load the LangChain.\r\nindex = faiss.read_index(\"docs.index\")\r\nwith open(\"faiss_store.pkl\", \"rb\") as f:\r\n    store = pickle.load(f)\r\n\r\nAZURE_BASE_URL = \"{MY_BASE_URL}.openai.azure.com/\"\r\nAZURE_OPENAI_API_KEY = \"MY_API_KEY\"\r\nDEPLOYMENT_NAME = \"chat\"\r\n\r\nllm = AzureChatOpenAI(\r\n    openai_api_base=AZURE_BASE_URL,\r\n    openai_api_version=\"2023-03-15-preview\",\r\n    deployment_name=\"chat\",\r\n    openai_api_key=AZURE_OPENAI_API_KEY,\r\n    openai_api_type=\"azure\",\r\n    temperature=0.01\r\n)\r\n\r\nretriever = store.as_retriever()\r\nqa = ConversationalRetrievalChain.from_llm(\r\n    llm,\r\n    retriever=retriever,\r\n    memory=memory\r\n)\r\n\r\nuser_input = \"Question?\"\r\n\r\nresult = qa({\"question\": user_input})\r\nprint(result)\r\n\r\n```\r\n\r\nThis code is raising the following error:\r\n\r\n```\r\nopenai.error.InvalidRequestError: The API deployment for this resource does not exist. If you created the deployment within the last 5 minutes, please wait a moment and try again.\r\n```\r\n\r\nI have tried using AzureChatOpenAI in other ways and it is working without any problem, using the same deployed model in Azure:\r\n\r\n```python\r\nAZURE_BASE_URL = \"{MY_BASE_URL}.openai.azure.com/\"\r\nAZURE_OPENAI_API_KEY = \"MY_API_KEY\"\r\nDEPLOYMENT_NAME = \"chat\"\r\n\r\nllm = AzureChatOpenAI(\r\n    openai_api_base=AZURE_BASE_URL,\r\n    openai_api_version=\"2023-03-15-preview\",\r\n    deployment_name=\"chat\",\r\n    openai_api_key=AZURE_OPENAI_API_KEY,\r\n    openai_api_type=\"azure\",\r\n    temperature=0.01\r\n)\r\nchain = load_qa_chain(llm=llm, chain_type=\"map_reduce\")\r\n```\r\nTherefore, the problem is not about the deployment I made in Azure, it seems to work fine in other situations.\r\n\r\nAm I missing something when using ConversationalRetrievalChain with AzureChatOpenAI? I have tried so many things and nothing seems to work.\r\n\r\nThanks in advance for any help.\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [x] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. Declare the LLM using AzureChatOpenAI:\r\n```python\r\nAZURE_BASE_URL = \"{MY_BASE_URL}.openai.azure.com/\"\r\nAZURE_OPENAI_API_KEY = \"MY_API_KEY\"\r\nDEPLOYMENT_NAME = \"chat\"\r\n\r\nllm = AzureChatOpenAI(\r\n    openai_api_base=AZURE_BASE_URL,\r\n    openai_api_version=\"2023-03-15-preview\",\r\n    deployment_name=\"chat\",\r\n    openai_api_key=AZURE_OPENAI_API_KEY,\r\n    openai_api_type=\"azure\",\r\n    temperature=0.01\r\n)\r\n```\r\n2. Declare the ConversationBufferMemory:\r\n```python\r\nmemory = ConversationBufferMemory(\r\n    memory_key=\"chat_history\",\r\n    return_messages=True\r\n)\r\n```\r\n3. Load FAISS index:\r\n```python\r\n# Load the LangChain.\r\nindex = faiss.read_index(\"docs.index\")\r\nwith open(\"faiss_store.pkl\", \"rb\") as f:\r\n    store = pickle.load(f)\r\n```\r\n\r\n4. Declare and run the ConversationalRetrievalChain:\r\n```python\r\nqa = ConversationalRetrievalChain.from_llm(\r\n    llm,\r\n    retriever=retriever,\r\n    memory=memory\r\n)\r\n\r\nuser_input = \"Question?\"\r\n\r\nresult = qa({\"question\": user_input})\r\nprint(result)\r\n```\r\n\r\n### Expected behavior\r\n\r\nError raised:\r\n\r\n```\r\nopenai.error.InvalidRequestError: The API deployment for this resource does not exist. If you created the deployment within the last 5 minutes, please wait a moment and try again.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7331/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7331/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7330",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7330/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7330/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7330/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7330",
        "id": 1793041244,
        "node_id": "PR_kwDOIPDwls5U4_BD",
        "number": 7330,
        "title": "Output parser redirect",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T08:19:48Z",
        "updated_at": "2023-07-07T08:26:35Z",
        "closed_at": "2023-07-07T08:26:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7330",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7330",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7330.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7330.patch",
            "merged_at": "2023-07-07T08:26:34Z"
        },
        "body": "Related to ##7311",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7330/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7330/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7329",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7329/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7329/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7329/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7329",
        "id": 1792988300,
        "node_id": "PR_kwDOIPDwls5U4zo9",
        "number": 7329,
        "title": "Add local support for audio models",
        "user": {
            "login": "Comendeiro",
            "id": 7376569,
            "node_id": "MDQ6VXNlcjczNzY1Njk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7376569?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Comendeiro",
            "html_url": "https://github.com/Comendeiro",
            "followers_url": "https://api.github.com/users/Comendeiro/followers",
            "following_url": "https://api.github.com/users/Comendeiro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Comendeiro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Comendeiro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Comendeiro/subscriptions",
            "organizations_url": "https://api.github.com/users/Comendeiro/orgs",
            "repos_url": "https://api.github.com/users/Comendeiro/repos",
            "events_url": "https://api.github.com/users/Comendeiro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Comendeiro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T07:44:54Z",
        "updated_at": "2023-07-17T20:39:27Z",
        "closed_at": "2023-07-17T20:39:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7329",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7329",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7329.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7329.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7329/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7329/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7328",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7328/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7328/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7328/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7328",
        "id": 1792969708,
        "node_id": "PR_kwDOIPDwls5U4vsl",
        "number": 7328,
        "title": "Link to correct paper",
        "user": {
            "login": "BioGeek",
            "id": 59344,
            "node_id": "MDQ6VXNlcjU5MzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/59344?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BioGeek",
            "html_url": "https://github.com/BioGeek",
            "followers_url": "https://api.github.com/users/BioGeek/followers",
            "following_url": "https://api.github.com/users/BioGeek/following{/other_user}",
            "gists_url": "https://api.github.com/users/BioGeek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BioGeek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BioGeek/subscriptions",
            "organizations_url": "https://api.github.com/users/BioGeek/orgs",
            "repos_url": "https://api.github.com/users/BioGeek/repos",
            "events_url": "https://api.github.com/users/BioGeek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BioGeek/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hwchase17",
                "id": 11986836,
                "node_id": "MDQ6VXNlcjExOTg2ODM2",
                "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hwchase17",
                "html_url": "https://github.com/hwchase17",
                "followers_url": "https://api.github.com/users/hwchase17/followers",
                "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
                "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
                "organizations_url": "https://api.github.com/users/hwchase17/orgs",
                "repos_url": "https://api.github.com/users/hwchase17/repos",
                "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hwchase17/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T07:31:08Z",
        "updated_at": "2023-08-10T22:48:51Z",
        "closed_at": "2023-08-10T22:48:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7328",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7328",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7328.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7328.patch",
            "merged_at": null
        },
        "body": "The documentation talked about the ReAct framework, but linked to the MRKL Systems paper. Now linking to the correct paper.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7328/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7328/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7327",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7327/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7327/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7327/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7327",
        "id": 1792965212,
        "node_id": "I_kwDOIPDwls5q3npc",
        "number": 7327,
        "title": "Conversation Summary Buffer Memory does not accept a system message ",
        "user": {
            "login": "vnandan",
            "id": 3316435,
            "node_id": "MDQ6VXNlcjMzMTY0MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3316435?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vnandan",
            "html_url": "https://github.com/vnandan",
            "followers_url": "https://api.github.com/users/vnandan/followers",
            "following_url": "https://api.github.com/users/vnandan/following{/other_user}",
            "gists_url": "https://api.github.com/users/vnandan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vnandan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vnandan/subscriptions",
            "organizations_url": "https://api.github.com/users/vnandan/orgs",
            "repos_url": "https://api.github.com/users/vnandan/repos",
            "events_url": "https://api.github.com/users/vnandan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vnandan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-07T07:27:42Z",
        "updated_at": "2023-09-23T21:50:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI intend to use the conversation summary buffer memory with ChatOpenAI in a conversation chain. For the chat, there's a need to set the system message to instruct and give appropriate personality to the chat assistant. However, system message is not supported to be inserted in the memory either via the save_context (the documented way) or the memory.chat_memory.message.insert()\r\n\r\nThe summary of the chat itself seems to use the system message to send the summary. This makes Conversation Summary Buffer Memory incompatible with ChatOpenAI.\r\n\r\n\n\n### Who can help?\n\n@hwchase17  @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nUsing either of the two methods to use the system message\r\n\r\n1. memory.chat_memory.messages.insert(0, system_message)\r\n2. memory.save_context({\"input\": SystemMessage(content=system_message)}, {\"output\": \"\"})\n\n### Expected behavior\n\nWe should be able to use any memory with ChatOpenAI as these need to be modular but ConversationSummaryBufferMemory seems incompatible with it due to system message.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7327/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7327/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7326",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7326/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7326/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7326/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7326",
        "id": 1792949827,
        "node_id": "PR_kwDOIPDwls5U4roU",
        "number": 7326,
        "title": "Marqo Vector Store Examples & Type Hints",
        "user": {
            "login": "OwenPendrighElliott",
            "id": 41710527,
            "node_id": "MDQ6VXNlcjQxNzEwNTI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/41710527?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OwenPendrighElliott",
            "html_url": "https://github.com/OwenPendrighElliott",
            "followers_url": "https://api.github.com/users/OwenPendrighElliott/followers",
            "following_url": "https://api.github.com/users/OwenPendrighElliott/following{/other_user}",
            "gists_url": "https://api.github.com/users/OwenPendrighElliott/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OwenPendrighElliott/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OwenPendrighElliott/subscriptions",
            "organizations_url": "https://api.github.com/users/OwenPendrighElliott/orgs",
            "repos_url": "https://api.github.com/users/OwenPendrighElliott/repos",
            "events_url": "https://api.github.com/users/OwenPendrighElliott/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OwenPendrighElliott/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T07:16:09Z",
        "updated_at": "2023-07-07T08:11:20Z",
        "closed_at": "2023-07-07T08:11:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7326",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7326",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7326.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7326.patch",
            "merged_at": "2023-07-07T08:11:20Z"
        },
        "body": "This PR improves the example notebook for the Marqo vectorstore implementation by adding a new RetrievalQAWithSourcesChain example. The `embedding` parameter in `from_documents` has its type updated to `Union[Embeddings, None]` and a default parameter of None because this is ignored in Marqo.\r\n\r\nThis PR also upgrades the Marqo version to 0.11.0 to remove the device parameter after a breaking change to the API.\r\n\r\nRelated to #7068 @tomhamer @hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7326/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7326/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7325",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7325/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7325/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7325/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7325",
        "id": 1792853218,
        "node_id": "I_kwDOIPDwls5q3MTi",
        "number": 7325,
        "title": "Issue: Rate limiting on large Google Drive folder",
        "user": {
            "login": "chrisedington",
            "id": 2725500,
            "node_id": "MDQ6VXNlcjI3MjU1MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2725500?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisedington",
            "html_url": "https://github.com/chrisedington",
            "followers_url": "https://api.github.com/users/chrisedington/followers",
            "following_url": "https://api.github.com/users/chrisedington/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisedington/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisedington/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisedington/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisedington/orgs",
            "repos_url": "https://api.github.com/users/chrisedington/repos",
            "events_url": "https://api.github.com/users/chrisedington/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisedington/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T06:06:08Z",
        "updated_at": "2023-09-22T07:54:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I've got a GoogleDriveLoader implemented with a exponential backoff and a sleep function to try further mitigate rate limits, but I still get rate limit errors from Google.\r\n\r\nEven though I've added a time.sleep(5) statement, I assume it only takes effect before each attempt to load all the documents, not between individual API calls within the load() method.\r\n\r\n```\r\ngoogle_loader = GoogleDriveLoader(\r\n        folder_id=\"xxxxxxxxx\",\r\n        credentials_path=\"credentials.json\",\r\n        token_path=\"token.json\",\r\n        file_types=[\"document\", \"sheet\", \"pdf\"],\r\n        file_loader_cls=UnstructuredFileIOLoader,\r\n        recursive=True,\r\n        verbose=True,\r\n    )\r\n\r\n    @retry(\r\n        stop=stop_after_attempt(7), wait=wait_exponential(multiplier=2, min=60, max=300)\r\n    )\r\n    def load_documents():\r\n        time.sleep(5)  # delay for 5 seconds\r\n        return google_loader.load()\r\n\r\n    try:\r\n        google_docs = load_documents()\r\n    except:\r\n        logging.error(\"Exceeded retry attempts for Google API rate limit.\")\r\n        raise\r\n```\r\n\r\nThe exception output:\r\n\r\n```\r\nERROR:root:Exceeded retry attempts for Google API rate limit.\r\nIndexError: list index out of range\r\n```\r\n\r\nStacktrace:\r\n\r\n```\r\nDEBUG:googleapiclient.discovery:URL being requested: GET https://sheets.googleapis.com/v4/spreadsheets/xxxxx-xxxxx/values/A_xx?alt=json\r\nDEBUG:googleapiclient.discovery:URL being requested: GET https://sheets.googleapis.com/v4/spreadsheets/xxxxx-xxxxx/values/A_xx?alt=json\r\nDEBUG:googleapiclient.discovery:URL being requested: GET https://sheets.googleapis.com/v4/spreadsheets/xxxxx-xxxxx/values/A_xx?alt=json\r\nDEBUG:googleapiclient.discovery:URL being requested: GET https://sheets.googleapis.com/v4/spreadsheets/xxxxx-xxxxx/values/BF%20IS?alt=json\r\nDEBUG:googleapiclient.discovery:URL being requested: GET https://sheets.googleapis.com/v4/spreadsheets/xxxxx-xxxxx/values/BF%20BS%20?alt=json\r\nDEBUG:googleapiclient.discovery:URL being requested: GET https://sheets.googleapis.com/v4/spreadsheets/xxxxx-xxxxx/values/Reporting%20IS?alt=json\r\nDEBUG:googleapiclient.discovery:URL being requested: GET https://sheets.googleapis.com/v4/spreadsheets/xxxxx-xxxxx/values/Reporting%20BS?alt=json\r\nDEBUG:googleapiclient.discovery:URL being requested: GET https://sheets.googleapis.com/v4/spreadsheets/xxxxx-xxxxx/values/Statistics?alt=json\r\nDEBUG:googleapiclient.discovery:URL being requested: GET https://sheets.googleapis.com/v4/spreadsheets/xxxxx-xxxxx/values/Val_Summary?alt=json\r\nDEBUG:googleapiclient.discovery:URL being requested: GET https://sheets.googleapis.com/v4/spreadsheets/xxxxx-xxxxx/values/Val_Workings?alt=json\r\nERROR:root:Exceeded retry attempts for Google API rate limit.\r\nTraceback (most recent call last):\r\n  File \"/Users/chris/Repositories/xxxx/.venv/lib/python3.10/site-packages/tenacity/__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n  File \"/Users/chris/Repositories/xxxx/ingest.py\", line 44, in load_documents\r\n    return google_loader.load()\r\n  File \"/Users/chris/Repositories/xxxx/.venv/lib/python3.10/site-packages/langchain/document_loaders/googledrive.py\", line 347, in load\r\n    return self._load_documents_from_folder(\r\n  File \"/Users/chris/Repositories/xxxx/.venv/lib/python3.10/site-packages/langchain/document_loaders/googledrive.py\", line 248, in _load_documents_from_folder\r\n    returns.extend(self._load_sheet_from_id(file[\"id\"]))  # type: ignore\r\n  File \"/Users/chris/Repositories/xxxx/.venv/lib/python3.10/site-packages/langchain/document_loaders/googledrive.py\", line 173, in _load_sheet_from_id\r\n    header = values[0]\r\nIndexError: list index out of range\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/chris/Repositories/xxxx/ingest.py\", line 68, in <module>\r\n    ingest_docs()\r\n  File \"/Users/chris/Repositories/xxxx/ingest.py\", line 47, in ingest_docs\r\n    google_docs = load_documents()\r\n  File \"/Users/chris/Repositories/xxxx/.venv/lib/python3.10/site-packages/tenacity/__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n  File \"/Users/chris/Repositories/xxxx/.venv/lib/python3.10/site-packages/tenacity/__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n  File \"/Users/chris/Repositories/xxxx/.venv/lib/python3.10/site-packages/tenacity/__init__.py\", line 326, in iter\r\n    raise retry_exc from fut.exception()\r\ntenacity.RetryError: RetryError[<Future at 0x142dfab30 state=finished raised IndexError>]\r\n```\r\n\r\n\r\n### Suggestion:\r\n\r\nDue to the recursive function, and the use case for most people being to load a large Drive folder, would it be possible to implement a rate limiter into the loader itself to slow down the individual API calls?\r\n\r\nAlternatively, does anyone have any recommendations on how to better implement an exponential backoff?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7325/reactions",
            "total_count": 4,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7325/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7324",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7324/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7324/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7324/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7324",
        "id": 1792848845,
        "node_id": "PR_kwDOIPDwls5U4V12",
        "number": 7324,
        "title": "Bagatur/clarifai update",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T06:02:29Z",
        "updated_at": "2023-07-07T06:23:22Z",
        "closed_at": "2023-07-07T06:23:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7324",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7324",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7324.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7324.patch",
            "merged_at": "2023-07-07T06:23:21Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7324/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7324/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7322",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7322/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7322/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7322/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7322",
        "id": 1792823901,
        "node_id": "I_kwDOIPDwls5q3FJd",
        "number": 7322,
        "title": "What is the best size for a chunk",
        "user": {
            "login": "MIMI180306",
            "id": 45851793,
            "node_id": "MDQ6VXNlcjQ1ODUxNzkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45851793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MIMI180306",
            "html_url": "https://github.com/MIMI180306",
            "followers_url": "https://api.github.com/users/MIMI180306/followers",
            "following_url": "https://api.github.com/users/MIMI180306/following{/other_user}",
            "gists_url": "https://api.github.com/users/MIMI180306/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MIMI180306/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MIMI180306/subscriptions",
            "organizations_url": "https://api.github.com/users/MIMI180306/orgs",
            "repos_url": "https://api.github.com/users/MIMI180306/repos",
            "events_url": "https://api.github.com/users/MIMI180306/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MIMI180306/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T05:42:08Z",
        "updated_at": "2023-10-14T20:10:37Z",
        "closed_at": "2023-10-14T20:10:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI used RecursiveCharacterTextSplitter.from_tiktoken_encoder to split a document, and if I set chunk_size to 2000, OpenAI cannot answer my question by the documents, if I set chunk_size to 500, OpenAI can work very well. I want to know, As a rule of thumb, what is the best size for a chunk\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7322/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7322/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7321",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7321/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7321/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7321/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7321",
        "id": 1792819450,
        "node_id": "PR_kwDOIPDwls5U4PZY",
        "number": 7321,
        "title": "[RFC] add interface for evaluating messages",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T05:38:20Z",
        "updated_at": "2023-07-17T04:11:08Z",
        "closed_at": "2023-07-17T04:11:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7321",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7321",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7321.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7321.patch",
            "merged_at": null
        },
        "body": "still a wip\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7321/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7321/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7320",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7320/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7320/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7320/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7320",
        "id": 1792789586,
        "node_id": "PR_kwDOIPDwls5U4Iz5",
        "number": 7320,
        "title": "docs: `ecosystem/integration` update",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-07T05:09:35Z",
        "updated_at": "2023-07-26T17:14:22Z",
        "closed_at": "2023-07-26T17:14:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7320",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7320",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7320.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7320.patch",
            "merged_at": null
        },
        "body": "The example notebooks with `CallbackHandlers` examples were in the  `ecosystem/integration` folder. \r\nThey should be in the `modules/callbacks/integrations` folder.\r\n\r\n- Moved notebooks. See ^.\r\n- Created correspondent  `ecosystem/integration` pages in place of examples. Now no Jupyter Notebooks are here, but only .md and .mdx .\r\n- Added descriptions to the Integration Cards.\r\n\r\n@baskaryan\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7320/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7320/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7319",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7319/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7319/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7319/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7319",
        "id": 1792759095,
        "node_id": "PR_kwDOIPDwls5U4CDx",
        "number": 7319,
        "title": "Add Xorbits Dataframe as a Document Loader",
        "user": {
            "login": "yifeis7",
            "id": 79988483,
            "node_id": "MDQ6VXNlcjc5OTg4NDgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/79988483?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yifeis7",
            "html_url": "https://github.com/yifeis7",
            "followers_url": "https://api.github.com/users/yifeis7/followers",
            "following_url": "https://api.github.com/users/yifeis7/following{/other_user}",
            "gists_url": "https://api.github.com/users/yifeis7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yifeis7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yifeis7/subscriptions",
            "organizations_url": "https://api.github.com/users/yifeis7/orgs",
            "repos_url": "https://api.github.com/users/yifeis7/repos",
            "events_url": "https://api.github.com/users/yifeis7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yifeis7/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-07T04:38:56Z",
        "updated_at": "2023-07-10T08:24:48Z",
        "closed_at": "2023-07-10T08:24:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7319",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7319",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7319.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7319.patch",
            "merged_at": "2023-07-10T08:24:47Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n- [Xorbits](https://doc.xorbits.io/en/latest/) is an open-source computing framework that makes it easy to scale data science and machine learning workloads in parallel. Xorbits can leverage multi cores or GPUs to accelerate computation on a single machine, or scale out up to thousands of machines to support processing terabytes of data.\r\n\r\n- This PR added support for the Xorbits document loader, which allows langchain to leverage Xorbits to parallelize and distribute the loading of data. \r\n- Dependencies: This change requires the Xorbits library to be installed in order to be used.\r\n`pip install xorbits`\r\n- Request for review: @rlancemartin, @eyurtsev\r\n- Twitter handle: https://twitter.com/Xorbitsio\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7319/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7319/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7318",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7318/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7318/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7318/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7318",
        "id": 1792754211,
        "node_id": "PR_kwDOIPDwls5U4A9i",
        "number": 7318,
        "title": "Corrected a typo in elasticsearch.ipynb",
        "user": {
            "login": "jlandahl",
            "id": 118033,
            "node_id": "MDQ6VXNlcjExODAzMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/118033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jlandahl",
            "html_url": "https://github.com/jlandahl",
            "followers_url": "https://api.github.com/users/jlandahl/followers",
            "following_url": "https://api.github.com/users/jlandahl/following{/other_user}",
            "gists_url": "https://api.github.com/users/jlandahl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jlandahl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jlandahl/subscriptions",
            "organizations_url": "https://api.github.com/users/jlandahl/orgs",
            "repos_url": "https://api.github.com/users/jlandahl/repos",
            "events_url": "https://api.github.com/users/jlandahl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jlandahl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T04:34:14Z",
        "updated_at": "2023-07-07T05:35:33Z",
        "closed_at": "2023-07-07T05:35:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7318",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7318",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7318.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7318.patch",
            "merged_at": "2023-07-07T05:35:32Z"
        },
        "body": "Simple typo fix",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7318/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7318/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7316",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7316/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7316/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7316/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7316",
        "id": 1792655739,
        "node_id": "PR_kwDOIPDwls5U3qss",
        "number": 7316,
        "title": "docs : add cnosdb to Ecosystem Integrations",
        "user": {
            "login": "Subsegment",
            "id": 74497693,
            "node_id": "MDQ6VXNlcjc0NDk3Njkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/74497693?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Subsegment",
            "html_url": "https://github.com/Subsegment",
            "followers_url": "https://api.github.com/users/Subsegment/followers",
            "following_url": "https://api.github.com/users/Subsegment/following{/other_user}",
            "gists_url": "https://api.github.com/users/Subsegment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Subsegment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Subsegment/subscriptions",
            "organizations_url": "https://api.github.com/users/Subsegment/orgs",
            "repos_url": "https://api.github.com/users/Subsegment/repos",
            "events_url": "https://api.github.com/users/Subsegment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Subsegment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T03:09:24Z",
        "updated_at": "2023-07-07T05:35:23Z",
        "closed_at": "2023-07-07T05:35:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7316",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7316",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7316.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7316.patch",
            "merged_at": "2023-07-07T05:35:22Z"
        },
        "body": "  - Implement a `from_cnosdb` method for the `SQLDatabase` class\r\n  - Write CnosDB documentation and add it to Ecosystem Integrations\r\n\r\n \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7316/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7316/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7315",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7315/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7315/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7315/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7315",
        "id": 1792553905,
        "node_id": "I_kwDOIPDwls5q2DOx",
        "number": 7315,
        "title": "Zapier Toolkit and Function Agents not compatible",
        "user": {
            "login": "miguelmoya97",
            "id": 31751847,
            "node_id": "MDQ6VXNlcjMxNzUxODQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/31751847?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/miguelmoya97",
            "html_url": "https://github.com/miguelmoya97",
            "followers_url": "https://api.github.com/users/miguelmoya97/followers",
            "following_url": "https://api.github.com/users/miguelmoya97/following{/other_user}",
            "gists_url": "https://api.github.com/users/miguelmoya97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/miguelmoya97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/miguelmoya97/subscriptions",
            "organizations_url": "https://api.github.com/users/miguelmoya97/orgs",
            "repos_url": "https://api.github.com/users/miguelmoya97/repos",
            "events_url": "https://api.github.com/users/miguelmoya97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/miguelmoya97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T01:38:10Z",
        "updated_at": "2023-10-14T20:10:42Z",
        "closed_at": "2023-10-14T20:10:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain version: v0.0.225\r\nPython Version: 3.10\r\nDeployed and running on AWS Lambda deployed with x86_64 architecture.\r\n\r\n### Who can help?\r\n\r\n@jacoblee93 \r\n\r\n### Information\r\n\r\n- [x] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\ndef callChatModel(input, token):\r\n\r\n    print('Executing with input:', input)\r\n\r\n    llm = ChatOpenAI(model=\"gpt-3.5-turbo-0613\",\r\n                     temperature=0)`\r\n\r\n    history = DynamoDBChatMessageHistory(table_name=\"MemoryPy\",\r\n                                         session_id=token)\r\n    memory = ConversationBufferWindowMemory(\r\n        k=20, memory_key='chat_history', chat_memory=history, input_key=\"input\", return_messages=True)\r\n\r\n    zapier = ZapierNLAWrapper(zapier_nla_oauth_access_token=token)\r\n    zapier_toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)\r\n\r\n    tools = load_tools([\"serpapi\"], llm=llm) + zapier_toolkit.tools\r\n\r\n    print(tools)\r\n\r\n    agent = initialize_agent(\r\n        tools, llm,\r\n        agent=AgentType.OPENAI_FUNCTIONS,\r\n        memory=memory,\r\n        verbose=True,\r\n        handle_parsing_errors=True,\r\n    )\r\n    resp = agent.run(input=input)\r\n    return resp\r\n\r\n\r\n\r\nInput to the chat model is\r\n`Executing with input: Look up a basic fact about the sun, no more than one sentence. Send this fact to <email>@gmail.com `\r\n\r\nExecution logs from CloudWatch:\r\n\r\n```\r\n\u001b[1m> Entering new  chain...\u001b[0m\r\n\r\n[ERROR] InvalidRequestError: 'Gmail: Send Email' does not match '^[a-zA-Z0-9_-]{1,64}<!--EndFragment-->\r\n</body>\r\n</html> - 'functions.1.name'Traceback (most recent call last):\u00a0\u00a0File \"/var/task/handler.py\", line 152, in handle_chat\u00a0\u00a0\u00a0\u00a0chatResp = callChatModel(message, token)\u00a0\u00a0File \"/var/task/handler.py\", line 92, in callChatModel\u00a0\u00a0\u00a0\u00a0resp = agent.run(input=input)\u00a0\u00a0File \"/var/task/langchain/chains/base.py\", line 320, in run\u00a0\u00a0\u00a0\u00a0return self(kwargs, callbacks=callbacks, tags=tags, metadata=metadata)[\u00a0\u00a0File \"/var/task/langchain/chains/base.py\", line 181, in __call__\u00a0\u00a0\u00a0\u00a0raise e\u00a0\u00a0File \"/var/task/langchain/chains/base.py\", line 175, in __call__\u00a0\u00a0\u00a0\u00a0self._call(inputs, run_manager=run_manager)\u00a0\u00a0File \"/var/task/langchain/agents/agent.py\", line 987, in _call\u00a0\u00a0\u00a0\u00a0next_step_output = self._take_next_step(\u00a0\u00a0File \"/var/task/langchain/agents/agent.py\", line 792, in _take_next_step\u00a0\u00a0\u00a0\u00a0output = self.agent.plan(\u00a0\u00a0File \"/var/task/langchain/agents/openai_functions_agent/base.py\", line 210, in plan\u00a0\u00a0\u00a0\u00a0predicted_message = self.llm.predict_messages(\u00a0\u00a0File \"/var/task/langchain/chat_models/base.py\", line 398, in predict_messages\u00a0\u00a0\u00a0\u00a0return self(messages, stop=_stop, **kwargs)\u00a0\u00a0File \"/var/task/langchain/chat_models/base.py\", line 348, in __call__\u00a0\u00a0\u00a0\u00a0generation = self.generate(\u00a0\u00a0File \"/var/task/langchain/chat_models/base.py\", line 124, in generate\u00a0\u00a0\u00a0\u00a0raise e\u00a0\u00a0File \"/var/task/langchain/chat_models/base.py\", line 114, in generate\u00a0\u00a0\u00a0\u00a0self._generate_with_cache(\u00a0\u00a0File \"/var/task/langchain/chat_models/base.py\", line 261, in _generate_with_cache\u00a0\u00a0\u00a0\u00a0return self._generate(\u00a0\u00a0File \"/var/task/langchain/chat_models/openai.py\", line 371, in _generate\u00a0\u00a0\u00a0\u00a0response = self.completion_with_retry(messages=message_dicts, **params)\u00a0\u00a0File \"/var/task/langchain/chat_models/openai.py\", line 319, in completion_with_retry\u00a0\u00a0\u00a0\u00a0return _completion_with_retry(**kwargs)\u00a0\u00a0File \"/var/task/tenacity/__init__.py\", line 289, in wrapped_f\u00a0\u00a0\u00a0\u00a0return self(f, *args, **kw)\u00a0\u00a0File \"/var/task/tenacity/__init__.py\", line 379, in __call__\u00a0\u00a0\u00a0\u00a0do = self.iter(retry_state=retry_state)\u00a0\u00a0File \"/var/task/tenacity/__init__.py\", line 314, in iter\u00a0\u00a0\u00a0\u00a0return fut.result()\u00a0\u00a0File \"/var/lang/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\u00a0\u00a0\u00a0\u00a0return self.__get_result()\u00a0\u00a0File \"/var/lang/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\u00a0\u00a0\u00a0\u00a0raise self._exception\u00a0\u00a0File \"/var/task/tenacity/__init__.py\", line 382, in __call__\u00a0\u00a0\u00a0\u00a0result = fn(*args, **kwargs)\u00a0\u00a0File \"/var/task/langchain/chat_models/openai.py\", line 317, in _completion_with_retry\u00a0\u00a0\u00a0\u00a0return self.client.create(**kwargs)\u00a0\u00a0File \"/var/task/openai/api_resources/chat_completion.py\", line 25, in create\u00a0\u00a0\u00a0\u00a0return super().create(*args, **kwargs)\u00a0\u00a0File \"/var/task/openai/api_resources/abstract/engine_api_resource.py\", line 153, in create\u00a0\u00a0\u00a0\u00a0response, _, api_key = requestor.request(\u00a0\u00a0File \"/var/task/openai/api_requestor.py\", line 298, in request\u00a0\u00a0\u00a0\u00a0resp, got_stream = self._interpret_response(result, stream)\u00a0\u00a0File \"/var/task/openai/api_requestor.py\", line 700, in _interpret_response\u00a0\u00a0\u00a0\u00a0self._interpret_response_line(\u00a0\u00a0File \"/var/task/openai/api_requestor.py\", line 763, in _interpret_response_line\u00a0\u00a0\u00a0\u00a0raise self.handle_error_response( | [ERROR] InvalidRequestError: 'Gmail: Send Email' does not match '^[a-zA-Z0-9_-]{1,64}<!--EndFragment-->\r\n</body>\r\n</html> - 'functions.1.name' Traceback (most recent call last): \u00a0\u00a0File \"/var/task/handler.py\", line 152, in handle_chat \u00a0\u00a0\u00a0\u00a0chatResp = callChatModel(message, token) \u00a0\u00a0File \"/var/task/handler.py\", line 92, in callChatModel \u00a0\u00a0\u00a0\u00a0resp = agent.run(input=input) \u00a0\u00a0File \"/var/task/langchain/chains/base.py\", line 320, in run \u00a0\u00a0\u00a0\u00a0return self(kwargs, callbacks=callbacks, tags=tags, metadata=metadata)[ \u00a0\u00a0File \"/var/task/langchain/chains/base.py\", line 181, in __call__ \u00a0\u00a0\u00a0\u00a0raise e \u00a0\u00a0File \"/var/task/langchain/chains/base.py\", line 175, in __call__ \u00a0\u00a0\u00a0\u00a0self._call(inputs, run_manager=run_manager) \u00a0\u00a0File \"/var/task/langchain/agents/agent.py\", line 987, in _call \u00a0\u00a0\u00a0\u00a0next_step_output = self._take_next_step( \u00a0\u00a0File \"/var/task/langchain/agents/agent.py\", line 792, in _take_next_step \u00a0\u00a0\u00a0\u00a0output = self.agent.plan( \u00a0\u00a0File \"/var/task/langchain/agents/openai_functions_agent/base.py\", line 210, in plan \u00a0\u00a0\u00a0\u00a0predicted_message = self.llm.predict_messages( \u00a0\u00a0File \"/var/task/langchain/chat_models/base.py\", line 398, in predict_messages \u00a0\u00a0\u00a0\u00a0return self(messages, stop=_stop, **kwargs) \u00a0\u00a0File \"/var/task/langchain/chat_models/base.py\", line 348, in __call__ \u00a0\u00a0\u00a0\u00a0generation = self.generate( \u00a0\u00a0File \"/var/task/langchain/chat_models/base.py\", line 124, in generate \u00a0\u00a0\u00a0\u00a0raise e \u00a0\u00a0File \"/var/task/langchain/chat_models/base.py\", line 114, in generate \u00a0\u00a0\u00a0\u00a0self._generate_with_cache( \u00a0\u00a0File \"/var/task/langchain/chat_models/base.py\", line 261, in _generate_with_cache \u00a0\u00a0\u00a0\u00a0return self._generate( \u00a0\u00a0File \"/var/task/langchain/chat_models/openai.py\", line 371, in _generate \u00a0\u00a0\u00a0\u00a0response = self.completion_with_retry(messages=message_dicts, **params) \u00a0\u00a0File \"/var/task/langchain/chat_models/openai.py\", line 319, in completion_with_retry \u00a0\u00a0\u00a0\u00a0return _completion_with_retry(**kwargs) \u00a0\u00a0File \"/var/task/tenacity/__init__.py\", line 289, in wrapped_f \u00a0\u00a0\u00a0\u00a0return self(f, *args, **kw) \u00a0\u00a0File \"/var/task/tenacity/__init__.py\", line 379, in __call__ \u00a0\u00a0\u00a0\u00a0do = self.iter(retry_state=retry_state) \u00a0\u00a0File \"/var/task/tenacity/__init__.py\", line 314, in iter \u00a0\u00a0\u00a0\u00a0return fut.result() \u00a0\u00a0File \"/var/lang/lib/python3.10/concurrent/futures/_base.py\", line 451, in result \u00a0\u00a0\u00a0\u00a0return self.__get_result() \u00a0\u00a0File \"/var/lang/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result \u00a0\u00a0\u00a0\u00a0raise self._exception \u00a0\u00a0File \"/var/task/tenacity/__init__.py\", line 382, in __call__ \u00a0\u00a0\u00a0\u00a0result = fn(*args, **kwargs) \u00a0\u00a0File \"/var/task/langchain/chat_models/openai.py\", line 317, in _completion_with_retry \u00a0\u00a0\u00a0\u00a0return self.client.create(**kwargs) \u00a0\u00a0File \"/var/task/openai/api_resources/chat_completion.py\", line 25, in create \u00a0\u00a0\u00a0\u00a0return super().create(*args, **kwargs) \u00a0\u00a0File \"/var/task/openai/api_resources/abstract/engine_api_resource.py\", line 153, in create \u00a0\u00a0\u00a0\u00a0response, _, api_key = requestor.request( \u00a0\u00a0File \"/var/task/openai/api_requestor.py\", line 298, in request \u00a0\u00a0\u00a0\u00a0resp, got_stream = self._interpret_response(result, stream) \u00a0\u00a0File \"/var/task/openai/api_requestor.py\", line 700, in _interpret_response \u00a0\u00a0\u00a0\u00a0self._interpret_response_line( \u00a0\u00a0File \"/var/task/openai/api_requestor.py\", line 763, in _interpret_response_line \u00a0\u00a0\u00a0\u00a0raise self.handle_error_response(\r\n-- | --\r\n```\r\n\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nI'd expect the agent chain to just execute",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7315/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7315/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7314",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7314/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7314/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7314/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7314",
        "id": 1792549317,
        "node_id": "PR_kwDOIPDwls5U3TBs",
        "number": 7314,
        "title": "Support streaming for LLM and Chat Models calls with n>1 and batch calls",
        "user": {
            "login": "dqbd",
            "id": 1443449,
            "node_id": "MDQ6VXNlcjE0NDM0NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1443449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dqbd",
            "html_url": "https://github.com/dqbd",
            "followers_url": "https://api.github.com/users/dqbd/followers",
            "following_url": "https://api.github.com/users/dqbd/following{/other_user}",
            "gists_url": "https://api.github.com/users/dqbd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dqbd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dqbd/subscriptions",
            "organizations_url": "https://api.github.com/users/dqbd/orgs",
            "repos_url": "https://api.github.com/users/dqbd/repos",
            "events_url": "https://api.github.com/users/dqbd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dqbd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-07T01:32:09Z",
        "updated_at": "2023-10-02T19:30:24Z",
        "closed_at": "2023-10-02T19:30:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7314",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7314",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7314.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7314.patch",
            "merged_at": null
        },
        "body": "Mirror PR: https://github.com/hwchase17/langchainjs/pull/1760\r\n\r\nThis also adds support for multiple prompts in ChatOpenAI LLM\r\n\r\nFixes LC-98",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7314/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7314/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7313",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7313/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7313/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7313/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7313",
        "id": 1792547718,
        "node_id": "PR_kwDOIPDwls5U3SrZ",
        "number": 7313,
        "title": "Fix: OpenAIFunctionsAgent often returns python as a tool in planning, when argument parsing fails",
        "user": {
            "login": "jbkoh",
            "id": 1572627,
            "node_id": "MDQ6VXNlcjE1NzI2Mjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1572627?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbkoh",
            "html_url": "https://github.com/jbkoh",
            "followers_url": "https://api.github.com/users/jbkoh/followers",
            "following_url": "https://api.github.com/users/jbkoh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jbkoh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jbkoh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jbkoh/subscriptions",
            "organizations_url": "https://api.github.com/users/jbkoh/orgs",
            "repos_url": "https://api.github.com/users/jbkoh/repos",
            "events_url": "https://api.github.com/users/jbkoh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jbkoh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-07-07T01:29:57Z",
        "updated_at": "2023-09-18T23:17:17Z",
        "closed_at": "2023-09-18T23:17:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7313",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7313",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7313.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7313.patch",
            "merged_at": null
        },
        "body": "  - Description: With OpenAIFunctionsAgent, often a plan includes `python` as a tool, whose `arguments` is a `str` of the code to execute. In such a case, `_parse_ai_message` fails due to `JSONDecodeError`. This PR does a hack to fix the problem by creating `{\"__arg1\": arguments}` following the existing hack. I'm unsure when the arguments become string, so I put a condition to do that only for `python` as a tool.\r\n  - Tag maintainer: @hinthornw\r\n  - Twitter handle: mapped\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7313/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7313/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7312",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7312/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7312/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7312/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7312",
        "id": 1792487170,
        "node_id": "PR_kwDOIPDwls5U3Frx",
        "number": 7312,
        "title": "Refac package version check",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-07T00:04:31Z",
        "updated_at": "2023-07-07T05:21:54Z",
        "closed_at": "2023-07-07T05:21:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7312",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7312",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7312.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7312.patch",
            "merged_at": "2023-07-07T05:21:53Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7312/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7312/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7311",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7311/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7311/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7311/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7311",
        "id": 1792485542,
        "node_id": "I_kwDOIPDwls5q1yim",
        "number": 7311,
        "title": "DOC: Broken Python Information Link in Langchain Documentation",
        "user": {
            "login": "harsh-thavai",
            "id": 114677475,
            "node_id": "U_kgDOBtXW4w",
            "avatar_url": "https://avatars.githubusercontent.com/u/114677475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harsh-thavai",
            "html_url": "https://github.com/harsh-thavai",
            "followers_url": "https://api.github.com/users/harsh-thavai/followers",
            "following_url": "https://api.github.com/users/harsh-thavai/following{/other_user}",
            "gists_url": "https://api.github.com/users/harsh-thavai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harsh-thavai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harsh-thavai/subscriptions",
            "organizations_url": "https://api.github.com/users/harsh-thavai/orgs",
            "repos_url": "https://api.github.com/users/harsh-thavai/repos",
            "events_url": "https://api.github.com/users/harsh-thavai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harsh-thavai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-07T00:02:09Z",
        "updated_at": "2023-07-07T16:31:22Z",
        "closed_at": "2023-07-07T16:31:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nPython Documentation for Output Parser Unavailable\r\n\r\nURL: https://python.langchain.com/docs/modules/prompts/output_parsers.html\n\n### Idea or request for content:\n\nI am currently taking the \"Langchain/lesson/2/models, prompts, and parsers\" course from deeplearning.ai. While working on the course material, I encountered difficulties with the output parser in Python. To seek assistance and better understand the usage of the output parser, I attempted to access the documentation for the Python implementation. However, I received a \"page not found\" error when trying to access the Python documentation.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7311/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7311/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7310",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7310/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7310/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7310/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7310",
        "id": 1792401144,
        "node_id": "PR_kwDOIPDwls5U2zB4",
        "number": 7310,
        "title": "adding max_marginal_relevance_search method to MongoDBAtlasVectorSearch",
        "user": {
            "login": "P-E-B",
            "id": 38215315,
            "node_id": "MDQ6VXNlcjM4MjE1MzE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38215315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/P-E-B",
            "html_url": "https://github.com/P-E-B",
            "followers_url": "https://api.github.com/users/P-E-B/followers",
            "following_url": "https://api.github.com/users/P-E-B/following{/other_user}",
            "gists_url": "https://api.github.com/users/P-E-B/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/P-E-B/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/P-E-B/subscriptions",
            "organizations_url": "https://api.github.com/users/P-E-B/orgs",
            "repos_url": "https://api.github.com/users/P-E-B/repos",
            "events_url": "https://api.github.com/users/P-E-B/events{/privacy}",
            "received_events_url": "https://api.github.com/users/P-E-B/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-06T22:41:52Z",
        "updated_at": "2023-07-10T08:04:30Z",
        "closed_at": "2023-07-10T08:04:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7310",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7310",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7310.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7310.patch",
            "merged_at": "2023-07-10T08:04:19Z"
        },
        "body": "Adding a maximal_marginal_relevance method to the MongoDBAtlasVectorSearch vectorstore enhances the user experience by providing more diverse search results\r\n\r\nIssue: #7304\r\n\r\n@rlancemartin, @eyurtsev --> Please make sure that I'm using correctly the maximal_marginal_relevance (from utils).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7310/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7310/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7309",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7309/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7309/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7309/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7309",
        "id": 1792391896,
        "node_id": "I_kwDOIPDwls5q1brY",
        "number": 7309,
        "title": "Llama_index model as a tool for lang chain",
        "user": {
            "login": "vladimircape",
            "id": 1789618,
            "node_id": "MDQ6VXNlcjE3ODk2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1789618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vladimircape",
            "html_url": "https://github.com/vladimircape",
            "followers_url": "https://api.github.com/users/vladimircape/followers",
            "following_url": "https://api.github.com/users/vladimircape/following{/other_user}",
            "gists_url": "https://api.github.com/users/vladimircape/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vladimircape/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vladimircape/subscriptions",
            "organizations_url": "https://api.github.com/users/vladimircape/orgs",
            "repos_url": "https://api.github.com/users/vladimircape/repos",
            "events_url": "https://api.github.com/users/vladimircape/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vladimircape/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-06T22:34:36Z",
        "updated_at": "2023-07-09T20:42:18Z",
        "closed_at": "2023-07-09T20:42:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI got error when try to load custom LLM for Llama-Index\r\n\r\n```\r\n# setup prompts - specific to StableLM\r\nfrom llama_index.prompts.prompts import SimpleInputPrompt\r\n\r\nsystem_prompt = \"\"\"<|SYSTEM|># StableLM Tuned (Alpha version)\r\n- StableLM is a helpful and harmless open-source AI language model developed by StabilityAI.\r\n- StableLM is excited to be able to help the user, but will refuse to do anything that could be considered harmful to the user.\r\n- StableLM is more than just an information source, StableLM is also able to write poetry, short stories, and make jokes.\r\n- StableLM will refuse to participate in anything that could harm a human.\r\n\"\"\"\r\n\r\n# This will wrap the default prompts that are internal to llama-index\r\nquery_wrapper_prompt = SimpleInputPrompt(\"<|USER|>{query_str}<|ASSISTANT|>\")\r\nimport torch\r\n\r\nllm = HuggingFaceLLM(\r\n    context_window=4096,\r\n    max_new_tokens=256,    \r\n    generate_kwargs={\"temperature\": 0.7, \"do_sample\": False, \"return_dict_in_generate\":True},\r\n    system_prompt=system_prompt,\r\n    query_wrapper_prompt=query_wrapper_prompt,\r\n    tokenizer_name=\"StabilityAI/stablelm-tuned-alpha-3b\",\r\n    model_name=\"StabilityAI/stablelm-tuned-alpha-3b\",\r\n    device_map=\"auto\",\r\n    stopping_ids=[50278, 50279, 50277, 1, 0],\r\n    tokenizer_kwargs={\"max_length\": 4096},    \r\n)\r\n# load in HF embedding model from langchain\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings())\r\nservice_context = ServiceContext.from_defaults(chunk_size=1024, llm=llm,embed_model=embed_model)\r\ndocuments = SimpleDirectoryReader('data\\\\abnamro').load_data()\r\nindex = VectorStoreIndex.from_documents(documents, service_context=service_context,show_progress=True)\r\nfrom langchain.agents import Tool\r\ntools = [\r\n    Tool(\r\n        name=\"LlamaIndex\",\r\n        func=lambda q: str(index.as_query_engine(\r\n            retriever_mode=\"embedding\", \r\n            verbose=True, \r\n            service_context=service_context\r\n        ).query(q)),\r\n        description=\"useful for when you want to answer questions about finance. The input to this tool should be a complete english sentence.\",\r\n        return_direct=True,\r\n    ),\r\n]\r\nfrom langchain.chains.conversation.memory import ConversationBufferMemory\r\nfrom langchain.agents import initialize_agent\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\nagent_executor = initialize_agent(\r\n    tools, llm, agent=AgentType.CONVERSATIONAL_REACT_DESCRIPTION,memory=memory\r\n)\r\nagent_executor.run(input=\"What is inflation in the Czech Republic?\")\r\n```\r\n\r\ngot\r\n\r\n```\r\nValidationError                           Traceback (most recent call last)\r\nCell In[13], line 1\r\n----> 1 agent_executor = initialize_agent(\r\n      2     tools, llm, agent=AgentType.CONVERSATIONAL_REACT_DESCRIPTION,memory=memory\r\n      3 )\r\n      4 agent_executor.run(input=\"What is inflation in the Czech Republic?\")\r\n\r\nFile F:\\anaconda\\lib\\site-packages\\langchain\\agents\\initialize.py:57, in initialize_agent(tools, llm, agent, callback_manager, agent_path, agent_kwargs, tags, **kwargs)\r\n     55     agent_cls = AGENT_TO_CLASS[agent]\r\n     56     agent_kwargs = agent_kwargs or {}\r\n---> 57     agent_obj = agent_cls.from_llm_and_tools(\r\n     58         llm, tools, callback_manager=callback_manager, **agent_kwargs\r\n     59     )\r\n     60 elif agent_path is not None:\r\n     61     agent_obj = load_agent(\r\n     62         agent_path, llm=llm, tools=tools, callback_manager=callback_manager\r\n     63     )\r\n\r\nFile F:\\anaconda\\lib\\site-packages\\langchain\\agents\\conversational\\base.py:115, in ConversationalAgent.from_llm_and_tools(cls, llm, tools, callback_manager, output_parser, prefix, suffix, format_instructions, ai_prefix, human_prefix, input_variables, **kwargs)\r\n    105 cls._validate_tools(tools)\r\n    106 prompt = cls.create_prompt(\r\n    107     tools,\r\n    108     ai_prefix=ai_prefix,\r\n   (...)\r\n    113     input_variables=input_variables,\r\n    114 )\r\n--> 115 llm_chain = LLMChain(\r\n    116     llm=llm,\r\n    117     prompt=prompt,\r\n    118     callback_manager=callback_manager,\r\n    119 )\r\n    120 tool_names = [tool.name for tool in tools]\r\n    121 _output_parser = output_parser or cls._get_default_output_parser(\r\n    122     ai_prefix=ai_prefix\r\n    123 )\r\n\r\nFile F:\\anaconda\\lib\\site-packages\\langchain\\load\\serializable.py:74, in Serializable.__init__(self, **kwargs)\r\n     73 def __init__(self, **kwargs: Any) -> None:\r\n---> 74     super().__init__(**kwargs)\r\n     75     self._lc_kwargs = kwargs\r\n\r\nFile F:\\anaconda\\lib\\site-packages\\pydantic\\main.py:341, in pydantic.main.BaseModel.__init__()\r\n\r\nValidationError: 1 validation error for LLMChain\r\nllm\r\n  value is not a valid dict (type=type_error.dict)\r\n```\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nConnect LlamaIndex with Langchain\n\n### Expected behavior\n\nLoad custom LLM",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7309/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7309/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7308",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7308/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7308/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7308/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7308",
        "id": 1792373009,
        "node_id": "PR_kwDOIPDwls5U2sj0",
        "number": 7308,
        "title": "Update audio.py added local execution version",
        "user": {
            "login": "Comendeiro",
            "id": 7376569,
            "node_id": "MDQ6VXNlcjczNzY1Njk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7376569?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Comendeiro",
            "html_url": "https://github.com/Comendeiro",
            "followers_url": "https://api.github.com/users/Comendeiro/followers",
            "following_url": "https://api.github.com/users/Comendeiro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Comendeiro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Comendeiro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Comendeiro/subscriptions",
            "organizations_url": "https://api.github.com/users/Comendeiro/orgs",
            "repos_url": "https://api.github.com/users/Comendeiro/repos",
            "events_url": "https://api.github.com/users/Comendeiro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Comendeiro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-06T22:24:07Z",
        "updated_at": "2023-07-07T16:41:53Z",
        "closed_at": "2023-07-07T16:41:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7308",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7308",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7308.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7308.patch",
            "merged_at": null
        },
        "body": "To allow users to easily execute models for audio conversion locally I am adding a class on document_loaders.parsers.audio called OpenAIWhisperParserLocal() Takes two optional arguments: device and lang_model. \r\n\r\nIt checks if there is a GPU available and automatically select the best model based on the memory available.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7308/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7308/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7307",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7307/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7307/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7307/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7307",
        "id": 1792318936,
        "node_id": "PR_kwDOIPDwls5U2gI4",
        "number": 7307,
        "title": "wip: add caching option for telegram",
        "user": {
            "login": "0xRaduan",
            "id": 36044389,
            "node_id": "MDQ6VXNlcjM2MDQ0Mzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/36044389?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xRaduan",
            "html_url": "https://github.com/0xRaduan",
            "followers_url": "https://api.github.com/users/0xRaduan/followers",
            "following_url": "https://api.github.com/users/0xRaduan/following{/other_user}",
            "gists_url": "https://api.github.com/users/0xRaduan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/0xRaduan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/0xRaduan/subscriptions",
            "organizations_url": "https://api.github.com/users/0xRaduan/orgs",
            "repos_url": "https://api.github.com/users/0xRaduan/repos",
            "events_url": "https://api.github.com/users/0xRaduan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/0xRaduan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-06T21:53:39Z",
        "updated_at": "2023-11-07T03:46:39Z",
        "closed_at": "2023-11-07T03:46:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7307",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7307",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7307.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7307.patch",
            "merged_at": null
        },
        "body": "todo: write proper description and test this out.\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7307/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7307/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7306",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7306/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7306/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7306/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7306",
        "id": 1792305201,
        "node_id": "PR_kwDOIPDwls5U2dAz",
        "number": 7306,
        "title": "Solving anthropic packaging version issue",
        "user": {
            "login": "dudesparsh",
            "id": 31439850,
            "node_id": "MDQ6VXNlcjMxNDM5ODUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/31439850?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dudesparsh",
            "html_url": "https://github.com/dudesparsh",
            "followers_url": "https://api.github.com/users/dudesparsh/followers",
            "following_url": "https://api.github.com/users/dudesparsh/following{/other_user}",
            "gists_url": "https://api.github.com/users/dudesparsh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dudesparsh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dudesparsh/subscriptions",
            "organizations_url": "https://api.github.com/users/dudesparsh/orgs",
            "repos_url": "https://api.github.com/users/dudesparsh/repos",
            "events_url": "https://api.github.com/users/dudesparsh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dudesparsh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-06T21:45:51Z",
        "updated_at": "2023-07-06T23:38:43Z",
        "closed_at": "2023-07-06T23:35:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7306",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7306",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7306.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7306.patch",
            "merged_at": "2023-07-06T23:35:43Z"
        },
        "body": "  - Description: Solving, anthropic packaging version issue by clearing the mixup from package.version that is being confused with version from - importlib.metadata.version. \r\n\r\n  - Issue: it fixes the issue #7283 \r\n  - Maintainer: @hwchase17 \r\n\r\nThe following change has been explained in the comment - https://github.com/hwchase17/langchain/issues/7283#issuecomment-1624328978",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7306/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7306/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7304",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7304/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7304/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7304/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7304",
        "id": 1792265347,
        "node_id": "I_kwDOIPDwls5q08yD",
        "number": 7304,
        "title": "MongoDBAtlasVectorSearch vectorstore -  add maximal_marginal_relevance method",
        "user": {
            "login": "P-E-B",
            "id": 38215315,
            "node_id": "MDQ6VXNlcjM4MjE1MzE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38215315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/P-E-B",
            "html_url": "https://github.com/P-E-B",
            "followers_url": "https://api.github.com/users/P-E-B/followers",
            "following_url": "https://api.github.com/users/P-E-B/following{/other_user}",
            "gists_url": "https://api.github.com/users/P-E-B/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/P-E-B/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/P-E-B/subscriptions",
            "organizations_url": "https://api.github.com/users/P-E-B/orgs",
            "repos_url": "https://api.github.com/users/P-E-B/repos",
            "events_url": "https://api.github.com/users/P-E-B/events{/privacy}",
            "received_events_url": "https://api.github.com/users/P-E-B/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-06T21:24:25Z",
        "updated_at": "2023-10-12T16:05:25Z",
        "closed_at": "2023-10-12T16:05:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIt would be nice to add a maximal_marginal_relevance to the MongoDBAtlasVectorSearch vectorstore\n\n### Motivation\n\nThis will bring help users to get more diverse results than the ones only based on the relevance score\n\n### Your contribution\n\nI'll write a PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7304/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7304/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7303",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7303/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7303/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7303/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7303",
        "id": 1792259575,
        "node_id": "I_kwDOIPDwls5q07X3",
        "number": 7303,
        "title": "Evaluation returns 'INCORRECT' when ground truth is empty and prediction is empty",
        "user": {
            "login": "ebm94",
            "id": 22465480,
            "node_id": "MDQ6VXNlcjIyNDY1NDgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/22465480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ebm94",
            "html_url": "https://github.com/ebm94",
            "followers_url": "https://api.github.com/users/ebm94/followers",
            "following_url": "https://api.github.com/users/ebm94/following{/other_user}",
            "gists_url": "https://api.github.com/users/ebm94/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ebm94/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ebm94/subscriptions",
            "organizations_url": "https://api.github.com/users/ebm94/orgs",
            "repos_url": "https://api.github.com/users/ebm94/repos",
            "events_url": "https://api.github.com/users/ebm94/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ebm94/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T21:20:21Z",
        "updated_at": "2023-10-12T16:05:30Z",
        "closed_at": "2023-10-12T16:05:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: 0.0.225\r\nPython version: 3.8.5\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nWhen ground truth and model prediction are both empty strings, the evaluation model returns 'INCORRECT'. I expect the evalution to return 'CORRECT'\r\n\r\nI ran the below piece of code.\r\n\r\n```\r\nllm_bit = AzureChatOpenAI(deployment_name='gpt-4-32k', temperature=0)\r\ntest_gt = [{'question': 'What is the name of the company?', 'gt': 'Company A'}, {'question': 'What is the name of the building', 'gt': ''}]\r\ntest_output = [{'question': 'What is the name of the company?', 'prediction': 'Company A'}, {'question': 'What is the name of the building', 'prediction': ''}]\r\neval_chain = QAEvalChain.from_llm(llm_bit)\r\ntemp = eval_chain.evaluate(\r\n        test_gt, test_output, question_key=\"question\", answer_key=\"gt\", prediction_key=\"prediction\"\r\n    )\r\ntemp\r\n```\n\n### Expected behavior\n\nReceived output: [{'text': 'CORRECT'}, {'text': 'INCORRECT'}]\r\nExpected output: [{'text': 'CORRECT'}, {'text': 'CORRECT'}]",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7303/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7303/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7302",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7302/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7302/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7302/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7302",
        "id": 1792242224,
        "node_id": "I_kwDOIPDwls5q03Iw",
        "number": 7302,
        "title": "DOC: <ValueError: OpenAIChat currently only supports single prompt, got [\"Use the following portion of a long document to see if any of the text is relevant to answer the question.\"]'DOC: ' prefix>",
        "user": {
            "login": "TypeTactician",
            "id": 131611260,
            "node_id": "U_kgDOB9g6fA",
            "avatar_url": "https://avatars.githubusercontent.com/u/131611260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TypeTactician",
            "html_url": "https://github.com/TypeTactician",
            "followers_url": "https://api.github.com/users/TypeTactician/followers",
            "following_url": "https://api.github.com/users/TypeTactician/following{/other_user}",
            "gists_url": "https://api.github.com/users/TypeTactician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TypeTactician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TypeTactician/subscriptions",
            "organizations_url": "https://api.github.com/users/TypeTactician/orgs",
            "repos_url": "https://api.github.com/users/TypeTactician/repos",
            "events_url": "https://api.github.com/users/TypeTactician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TypeTactician/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-06T21:08:00Z",
        "updated_at": "2023-11-24T16:08:09Z",
        "closed_at": "2023-11-24T16:08:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nI got this code that i want to move to the model gpt3.5-turbo since its 10 times cheaper than the text-davinci-003 but i get this error \r\n```\r\nValueError: OpenAIChat currently only supports single prompt, got [\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \\nReturn any relevant text verbatim.\\nW H I T E PA P E R\\nTHE FUTURE OF ART\\nRelease\\nV 3 . 1\\nTable of Contents\\n01 Abstract 02 Riwa Tech\\nPg 3\\nPg \r\n4\\n03 Market research 04 Technology\\nPg 5\\nPg 7\\n05 Why we do this 06 How Riwa Tech works\\nPg 12\\nPg 14\\n07 The future 08 Team 09 Coin distribution 10 Business model 11 Timeline\\nPg 20\\nPg 21\\nPg 22\\nPg 24\\nPg 26\\n2\\nAbstract\\nArt and antiques have always been an integral part of the global economy, and\\nthis remains true \r\ntoday. With the rise of digital platforms and technologies,\\ntransaction methods have been revolutionized, but challenges such as\\nprovenance, authentication, protection and preservation of cultural heritage\\npersist. This white paper proposes integrating blockchain technology to improve\\nthe industry's landscape and protect its unique value. Blockchain can provide\\nsecure, transparent, and tamper-proof records for art and antiques, addressing\\nnumerous issues. By combining traditional values and innovative technology, we\\nQuestion: hi\\nRelevant text, if any:\", 'Use the following portion of a long document to see if any of the text is relevant to answer the question. \\nReturn any relevant text verbatim.\\nTag. The owners can know the current location anytime they want.\\nBlockchain\\nAppreciation, trading and collecting of artworks are gradually becoming a part of\\npeople\u2019s life pursuits. In the development of the art market industry, collectibles\\nlack clear records of transactions and evidence systems that can be veri\\x00ed,\\nmaking it almost impossible to determine the source information of collectibles.\\nCollectibles do not have an \u201cID\u201d system, resulting in no records for artworks. This\\nlack of traceability in the industry can easily lead to counterfeiters taking\\nadvantage of the situation, resulting in a proliferation of counterfeit artworks and\\naffecting the development of the industry.\\nOwners who deposit collectibles to Riwa\u2019s ecosystem will get NFTs backed by the\\ncollectible. The NFT smart contract will inherit the basic and anti-counterfeit\\ndetails. For every future transaction of \r\nthe collectible, the smart contract will\\nQuestion: hi\\nRelevant text, if any:', \"Use the following portion of a long document to see if any of the text is relevant to answer the question. \\nReturn any relevant text verbatim.\\nRiwa's advanced 3D technology to create 3D NFT collections and establish their\\nown virtual spaces for exhibitions and other purposes.\\n20\\nTeam\\nVIONA ZHANG Founder & chairman Experienced in commercializing artists and artworks, with a successful record in corporate and brand management.\\nPIERRE BRUNETOT CEO Ex-CEO and founder of Sante Nature with extensive experience in marketing and strategy.\\nYINJI DAI Co-Founder \r\n& Sales Manager Manager of the Asia Region and Co-founder. Over 17 years of experience in art and antiques industry management.\\nAASHIR IFTIKHAR Chief Technical Of\\x00cer at HashPotato Over 3 years of experience in mobile application development. Expert in Full Stack development.\\nEDOUARD BRUNETOT COO CEO of Cobound helps \r\nbusinesses grow through marketing, sales, and customer service tools.\\nFABIEN CERCLET Sales manager Over 7 years in blockchain tech & economics, established strong marketing foundation.\\n21\\nCoin distribution\\nInitial Coin Offering (ICO)\\nQuestion: hi\\nRelevant text, if any:\", \"Use the following portion of a long document \r\nto see if any of the text is relevant to answer the question. \\nReturn any relevant text verbatim.\\nand transaction reliability of artworks within the market.\\n1. Riwa dual anti-counterfeiting\\n1.1 Electronic Tag (E-Tag) management system\\nRiwa's E-Tag technology management system is ef\\x00cient, accurate and reliable.\\nThe system can automatically read real-time artwork\\ninformation and\\ndynamically track and detect artwork locations through an electronic map,\\nimproving the timeliness and accuracy of issue detection. Each Riwa E-Tag has a\\nunique identity code assigned to the artwork or antique it represents, and the\\ntags are physically \r\nnon-replicable and indestructible. With large storage capacity,\\nlong service life, and adaptability to indoor and outdoor environments, Riwa's E-\\nTag also allows contactless information collection, pollution resistance, and high\\nreliability.\\n7\\nUsers can access the Riwa system by sensing an item's E-Tag with a smartphone,\\nobtaining detailed features, inspection count, origin, ownership change records,\\nQuestion: hi\\nRelevant text, if any:\"]\r\n``` \r\n\r\nI'm using RetrievalQAWithSourcesChain and FAISS, this is the code\r\n```python\r\nimport os\r\nfrom langchain.document_loaders import UnstructuredURLLoader\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nimport pickle\r\nimport faiss\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.chains import RetrievalQAWithSourcesChain\r\nfrom langchain.chains.question_answering import load_qa_chain\r\nfrom langchain import OpenAI\r\n\r\n\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"Apikey\"\r\n\r\n\r\nurls = [\r\n    'https://riwa.nftify.network/collection/riwa-nft'\r\n]\r\n\r\nloaders = UnstructuredURLLoader(urls=urls)\r\ndata = loaders.load()\r\n\r\n\r\ndocs = text_splitter.split_documents(data)\r\n\r\nembeddings = OpenAIEmbeddings()\r\n\r\nvectorStore_openAI = FAISS.from_documents(docs, embeddings)\r\n\r\nwith open(\"faiss_store_openai.pkl\", \"wb\") as f:\r\n    pickle.dump(vectorStore_openAI, f)\r\nwith open(\"faiss_store_openai.pkl\", \"rb\") as f:\r\n    VectorStore = pickle.load(f)\r\n\r\nllm=OpenAI(temperature=0,model_name=\"gpt-3.5-turbo\",max_tokens=32)\r\n\r\nchain = RetrievalQAWithSourcesChain.from_llm(llm=llm, retriever=VectorStore.as_retriever())\r\n\r\nquestion=input(\"What question you want to ask? : \")\r\n\r\nprint(chain({\"question\": str(question)}, return_only_outputs=True)[\"answer\"])\r\n``` \r\nI would really appreciate if someone could give me some guidance, i've been blocked in this problem for a while\r\n\r\n### Idea or request for content:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7302/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7302/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7301",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7301/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7301/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7301/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7301",
        "id": 1792210929,
        "node_id": "PR_kwDOIPDwls5U2Hs5",
        "number": 7301,
        "title": "Add support for filters and namespaces in similarity search in Pinecone similarity_score_threshold",
        "user": {
            "login": "mrkhalil6",
            "id": 59417186,
            "node_id": "MDQ6VXNlcjU5NDE3MTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/59417186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrkhalil6",
            "html_url": "https://github.com/mrkhalil6",
            "followers_url": "https://api.github.com/users/mrkhalil6/followers",
            "following_url": "https://api.github.com/users/mrkhalil6/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrkhalil6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrkhalil6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrkhalil6/subscriptions",
            "organizations_url": "https://api.github.com/users/mrkhalil6/orgs",
            "repos_url": "https://api.github.com/users/mrkhalil6/repos",
            "events_url": "https://api.github.com/users/mrkhalil6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrkhalil6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-06T20:46:52Z",
        "updated_at": "2023-07-07T19:03:59Z",
        "closed_at": "2023-07-07T19:03:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7301",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7301",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7301.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7301.patch",
            "merged_at": "2023-07-07T19:03:59Z"
        },
        "body": "At the moment, pinecone vectorStore does not support filters and namespaces when using similarity_score_threshold search type. \r\nIn this PR, I've implemented that. It passes all the kwargs except \"score_threshold\" as that is not a supported argument for method \"similarity_search_with_score\".\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n@dev2049 @baskaryan  @rlancemartin @eyurtsev \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7301/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7301/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7300",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7300/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7300/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7300/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7300",
        "id": 1792135491,
        "node_id": "PR_kwDOIPDwls5U13Iv",
        "number": 7300,
        "title": "Fix secrets serialisation for ChatAnthropic",
        "user": {
            "login": "dqbd",
            "id": 1443449,
            "node_id": "MDQ6VXNlcjE0NDM0NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1443449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dqbd",
            "html_url": "https://github.com/dqbd",
            "followers_url": "https://api.github.com/users/dqbd/followers",
            "following_url": "https://api.github.com/users/dqbd/following{/other_user}",
            "gists_url": "https://api.github.com/users/dqbd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dqbd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dqbd/subscriptions",
            "organizations_url": "https://api.github.com/users/dqbd/orgs",
            "repos_url": "https://api.github.com/users/dqbd/repos",
            "events_url": "https://api.github.com/users/dqbd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dqbd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T19:49:28Z",
        "updated_at": "2023-07-06T20:57:13Z",
        "closed_at": "2023-07-06T20:57:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7300",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7300",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7300.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7300.patch",
            "merged_at": "2023-07-06T20:57:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7300/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7300/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7299",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7299/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7299/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7299/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7299",
        "id": 1792134831,
        "node_id": "PR_kwDOIPDwls5U12_W",
        "number": 7299,
        "title": "Working cpal",
        "user": {
            "login": "borisdev",
            "id": 367522,
            "node_id": "MDQ6VXNlcjM2NzUyMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/367522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/borisdev",
            "html_url": "https://github.com/borisdev",
            "followers_url": "https://api.github.com/users/borisdev/followers",
            "following_url": "https://api.github.com/users/borisdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/borisdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/borisdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/borisdev/subscriptions",
            "organizations_url": "https://api.github.com/users/borisdev/orgs",
            "repos_url": "https://api.github.com/users/borisdev/repos",
            "events_url": "https://api.github.com/users/borisdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/borisdev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T19:48:54Z",
        "updated_at": "2023-07-06T19:49:08Z",
        "closed_at": "2023-07-06T19:49:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7299",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7299",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7299.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7299.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7299/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7299/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7298",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7298/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7298/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7298/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7298",
        "id": 1792095489,
        "node_id": "I_kwDOIPDwls5q0TUB",
        "number": 7298,
        "title": "langchain.document_loaders.generic GenericLoader not working on Azure OpenAI - InvalidRequestError: Resource Not Found, cannot detect declared resource",
        "user": {
            "login": "marielaquino",
            "id": 30010252,
            "node_id": "MDQ6VXNlcjMwMDEwMjUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/30010252?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marielaquino",
            "html_url": "https://github.com/marielaquino",
            "followers_url": "https://api.github.com/users/marielaquino/followers",
            "following_url": "https://api.github.com/users/marielaquino/following{/other_user}",
            "gists_url": "https://api.github.com/users/marielaquino/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marielaquino/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marielaquino/subscriptions",
            "organizations_url": "https://api.github.com/users/marielaquino/orgs",
            "repos_url": "https://api.github.com/users/marielaquino/repos",
            "events_url": "https://api.github.com/users/marielaquino/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marielaquino/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-06T19:16:57Z",
        "updated_at": "2023-10-23T08:09:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain=0.0.225, python=3.9.17, openai=0.27.8\r\nopenai.api_type = \"azure\", openai.api_version = \"2023-05-15\"\r\napi_base, api_key, deployment_name environment variables all configured. \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce the behavior:\r\nNote: This code is pulled directly from document loaders chapter of Langchain Chat With Your Data course with Harrison Chase and Andrew Ng. It downloads an audio file of a public youtube video and generates a transcript. \r\n\r\n1. In a Jupyter notebook, configure your Azure OpenAI environment variables and add this code: \r\n```\r\nfrom langchain.document_loaders.generic import GenericLoader \r\nfrom langchain.document_loaders.parsers import OpenAIWhisperParser \r\nfrom langchain.document_loaders.blob_loaders.youtube_audio import YoutubeAudioLoader\r\n```\r\n2. Create and run a new cell with this inside:\r\n```\r\nurl=\"<https://www.youtube.com/watch?v=jGwO_UgTS7I>\" \r\nsave_dir=\"docs/youtube/\" \r\nloader = GenericLoader( YoutubeAudioLoader([url],save_dir), OpenAIWhisperParser() ) \r\ndocs = loader.load()\r\n```\r\n4. At the transcribing step, it will fail on \"InvalidRequestError\".\r\n\r\nSuccessfully executes the following steps: \r\n```\r\n[youtube] Extracting URL: https://www.youtube.com/watch?v=jGwO_UgTS7I\r\n[youtube] jGwO_UgTS7I: Downloading webpage\r\n[youtube] jGwO_UgTS7I: Downloading ios player API JSON\r\n[youtube] jGwO_UgTS7I: Downloading android player API JSON\r\n[youtube] jGwO_UgTS7I: Downloading m3u8 information\r\n[info] jGwO_UgTS7I: Downloading 1 format(s): 140\r\n[download] docs/youtube//Stanford CS229\uff1a Machine Learning Course, Lecture 1 - Andrew Ng (Autumn 2018).m4a has already been downloaded\r\n[download] 100% of   69.76MiB\r\n[ExtractAudio] Not converting audio docs/youtube//Stanford CS229\uff1a Machine Learning Course, Lecture 1 - Andrew Ng (Autumn 2018).m4a; file is already in target format m4a\r\nTranscribing part 1!\r\n```\r\n\r\n```\r\nInvalidRequestError                       Traceback (most recent call last)\r\nCell In[14], line 8\r\n      3 save_dir=\"docs/youtube/\"\r\n      4 loader = GenericLoader(\r\n      5     YoutubeAudioLoader([url],save_dir),\r\n      6     OpenAIWhisperParser()\r\n      7 )\r\n----> 8 docs = loader.load()\r\n\r\nFile /usr/local/lib/python3.9/site-packages/langchain/document_loaders/generic.py:90, in GenericLoader.load(self)\r\n     88 def load(self) -> List[Document]:\r\n     89     \"\"\"Load all documents.\"\"\"\r\n---> 90     return list(self.lazy_load())\r\n\r\nFile /usr/local/lib/python3.9/site-packages/langchain/document_loaders/generic.py:86, in GenericLoader.lazy_load(self)\r\n     84 \"\"\"Load documents lazily. Use this when working at a large scale.\"\"\"\r\n     85 for blob in self.blob_loader.yield_blobs():\r\n---> 86     yield from self.blob_parser.lazy_parse(blob)\r\n\r\nFile /usr/local/lib/python3.9/site-packages/langchain/document_loaders/parsers/audio.py:51, in OpenAIWhisperParser.lazy_parse(self, blob)\r\n     49 # Transcribe\r\n     50 print(f\"Transcribing part {split_number+1}!\")\r\n---> 51 transcript = openai.Audio.transcribe(\"whisper-1\", file_obj)\r\n     53 yield Document(\r\n     54     page_content=transcript.text,\r\n     55     metadata={\"source\": blob.source, \"chunk\": split_number},\r\n     56 )\r\n\r\nFile /usr/local/lib/python3.9/site-packages/openai/api_resources/audio.py:65, in Audio.transcribe(cls, model, file, api_key, api_base, api_type, api_version, organization, **params)\r\n     55 requestor, files, data = cls._prepare_request(\r\n     56     file=file,\r\n     57     filename=file.name,\r\n   (...)\r\n     62     **params,\r\n     63 )\r\n     64 url = cls._get_url(\"transcriptions\")\r\n---> 65 response, _, api_key = requestor.request(\"post\", url, files=files, params=data)\r\n     66 return util.convert_to_openai_object(\r\n     67     response, api_key, api_version, organization\r\n     68 )\r\n\r\nFile /usr/local/lib/python3.9/site-packages/openai/api_requestor.py:298, in APIRequestor.request(self, method, url, params, headers, files, stream, request_id, request_timeout)\r\n    277 def request(\r\n    278     self,\r\n    279     method,\r\n   (...)\r\n    286     request_timeout: Optional[Union[float, Tuple[float, float]]] = None,\r\n    287 ) -> Tuple[Union[OpenAIResponse, Iterator[OpenAIResponse]], bool, str]:\r\n    288     result = self.request_raw(\r\n    289         method.lower(),\r\n    290         url,\r\n   (...)\r\n    296         request_timeout=request_timeout,\r\n    297     )\r\n--> 298     resp, got_stream = self._interpret_response(result, stream)\r\n    299     return resp, got_stream, self.api_key\r\n\r\nFile /usr/local/lib/python3.9/site-packages/openai/api_requestor.py:700, in APIRequestor._interpret_response(self, result, stream)\r\n    692     return (\r\n    693         self._interpret_response_line(\r\n    694             line, result.status_code, result.headers, stream=True\r\n    695         )\r\n    696         for line in parse_stream(result.iter_lines())\r\n    697     ), True\r\n    698 else:\r\n    699     return (\r\n--> 700         self._interpret_response_line(\r\n    701             result.content.decode(\"utf-8\"),\r\n    702             result.status_code,\r\n    703             result.headers,\r\n    704             stream=False,\r\n    705         ),\r\n    706         False,\r\n    707     )\r\n\r\nFile /usr/local/lib/python3.9/site-packages/openai/api_requestor.py:763, in APIRequestor._interpret_response_line(self, rbody, rcode, rheaders, stream)\r\n    761 stream_error = stream and \"error\" in resp.data\r\n    762 if stream_error or not 200 <= rcode < 300:\r\n--> 763     raise self.handle_error_response(\r\n    764         rbody, rcode, resp.data, rheaders, stream_error=stream_error\r\n    765     )\r\n    766 return resp\r\n\r\nInvalidRequestError: Resource not found\r\n```\r\n\r\nUsually, with \"resource not found\" errors, the message will tell you to input api_key or deployment_name. I'm not sure what this means, as none of the Loader methods take in these as params. \n\n### Expected behavior\n\nExpected behavior is to finish four parts of transcription and \"load\" as doc in docs variable. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7298/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7298/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7297",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7297/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7297/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7297/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7297",
        "id": 1792085044,
        "node_id": "PR_kwDOIPDwls5U1sK_",
        "number": 7297,
        "title": "rm side nav ",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T19:08:13Z",
        "updated_at": "2023-07-06T19:19:31Z",
        "closed_at": "2023-07-06T19:19:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7297",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7297",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7297.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7297.patch",
            "merged_at": "2023-07-06T19:19:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7297/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7297/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7296",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7296/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7296/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7296/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7296",
        "id": 1792074278,
        "node_id": "PR_kwDOIPDwls5U1pzz",
        "number": 7296,
        "title": "handle missing finish_reason",
        "user": {
            "login": "bborn",
            "id": 3760,
            "node_id": "MDQ6VXNlcjM3NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3760?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bborn",
            "html_url": "https://github.com/bborn",
            "followers_url": "https://api.github.com/users/bborn/followers",
            "following_url": "https://api.github.com/users/bborn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bborn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bborn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bborn/subscriptions",
            "organizations_url": "https://api.github.com/users/bborn/orgs",
            "repos_url": "https://api.github.com/users/bborn/repos",
            "events_url": "https://api.github.com/users/bborn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bborn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-06T18:59:55Z",
        "updated_at": "2023-08-31T17:00:58Z",
        "closed_at": "2023-07-06T19:13:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7296",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7296",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7296.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7296.patch",
            "merged_at": "2023-07-06T19:13:52Z"
        },
        "body": "In some cases, the OpenAI response is missing the `finish_reason` attribute. It seems to happen when using Ada or Babbage and `stream=true`, but I can't always reproduce it. This change just gracefully handles the missing key.\r\n\r\n@hwchase17 @baskaryan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7296/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7296/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7295",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7295/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7295/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7295/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7295",
        "id": 1792046709,
        "node_id": "PR_kwDOIPDwls5U1j9a",
        "number": 7295,
        "title": "Wrapper function for OpenAI Function in LLMChain",
        "user": {
            "login": "enjuichang",
            "id": 55577469,
            "node_id": "MDQ6VXNlcjU1NTc3NDY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/55577469?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/enjuichang",
            "html_url": "https://github.com/enjuichang",
            "followers_url": "https://api.github.com/users/enjuichang/followers",
            "following_url": "https://api.github.com/users/enjuichang/following{/other_user}",
            "gists_url": "https://api.github.com/users/enjuichang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/enjuichang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/enjuichang/subscriptions",
            "organizations_url": "https://api.github.com/users/enjuichang/orgs",
            "repos_url": "https://api.github.com/users/enjuichang/repos",
            "events_url": "https://api.github.com/users/enjuichang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/enjuichang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-07-06T18:37:36Z",
        "updated_at": "2023-07-18T18:50:38Z",
        "closed_at": "2023-07-12T01:17:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7295",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7295",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7295.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7295.patch",
            "merged_at": null
        },
        "body": "  - Description: This pull request does two things: 1) Add wrapper function for pydantic model, JSON Schema, and dictionary to function calls in LLM Chain. 2) Add an additional class for the output parser class so pydantic model returns a string that could be added to AIMessage for memory storage.\r\n  - Issue: #6933 \r\n  - Dependencies: N/A\r\n  - Tag maintainer: @baskaryan\r\n  - Twitter handle: #7t_eric",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7295/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7295/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7293",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7293/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7293/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7293/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7293",
        "id": 1792016036,
        "node_id": "PR_kwDOIPDwls5U1dU1",
        "number": 7293,
        "title": "Update docs for whylabs (langkit) callback handler",
        "user": {
            "login": "andrewelizondo",
            "id": 6732897,
            "node_id": "MDQ6VXNlcjY3MzI4OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6732897?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewelizondo",
            "html_url": "https://github.com/andrewelizondo",
            "followers_url": "https://api.github.com/users/andrewelizondo/followers",
            "following_url": "https://api.github.com/users/andrewelizondo/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewelizondo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewelizondo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewelizondo/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewelizondo/orgs",
            "repos_url": "https://api.github.com/users/andrewelizondo/repos",
            "events_url": "https://api.github.com/users/andrewelizondo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewelizondo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-06T18:13:10Z",
        "updated_at": "2023-07-06T21:21:29Z",
        "closed_at": "2023-07-06T21:21:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7293",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7293",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7293.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7293.patch",
            "merged_at": "2023-07-06T21:21:28Z"
        },
        "body": "  - Description: Update docs for whylabs callback handler\r\n  - Issue: none\r\n  - Dependencies: none\r\n  - Tag maintainer: @agola11 \r\n  - Twitter handle: @useautomation @whylabs",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7293/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7293/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7292",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7292/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7292/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7292/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7292",
        "id": 1792013165,
        "node_id": "PR_kwDOIPDwls5U1ctR",
        "number": 7292,
        "title": "updated `huggingface_hub` examples",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-06T18:10:45Z",
        "updated_at": "2023-07-06T19:38:11Z",
        "closed_at": "2023-07-06T19:04:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7292",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7292",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7292.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7292.patch",
            "merged_at": "2023-07-06T19:04:37Z"
        },
        "body": "Added examples for models:\r\n- Google `Flan`\r\n- TII `Falcon`\r\n- Salesforce `XGen`\r\n\r\n@hwchase17, @baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7292/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7292/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7291",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7291/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7291/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7291/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7291",
        "id": 1791972879,
        "node_id": "I_kwDOIPDwls5qz1YP",
        "number": 7291,
        "title": "OpenAI Chat agents don't make use of OpenAI API `messages` parameter.",
        "user": {
            "login": "bitnom",
            "id": 14287229,
            "node_id": "MDQ6VXNlcjE0Mjg3MjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14287229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bitnom",
            "html_url": "https://github.com/bitnom",
            "followers_url": "https://api.github.com/users/bitnom/followers",
            "following_url": "https://api.github.com/users/bitnom/following{/other_user}",
            "gists_url": "https://api.github.com/users/bitnom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bitnom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bitnom/subscriptions",
            "organizations_url": "https://api.github.com/users/bitnom/orgs",
            "repos_url": "https://api.github.com/users/bitnom/repos",
            "events_url": "https://api.github.com/users/bitnom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bitnom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-06T17:42:57Z",
        "updated_at": "2023-10-14T20:10:48Z",
        "closed_at": "2023-10-14T20:10:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain: 0.0.225\r\nOS: Arch Linux\r\nPython: 3.11\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n@agola11 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nUse any of langchain's openai chat agents with the memory/chat history feature results in the chat history/memory being sent to the openai API in the SYSTEM message, and with incorrect roles specified.\r\n\r\n### Expected behavior\r\n\r\nWhile that might be appropriate for certain types of message (Maybe compressed or summarized from older conversations), I expected the chat history memory to be utilizing openai's [messages](https://platform.openai.com/docs/api-reference/chat#chat/create-messages) parameter.\r\n\r\nIt's much easier to parse (If ever needed) since it's an array of messages. This is related to https://github.com/hwchase17/langchain/issues/7285 which is an even bigger issue that addressing this one could resolve.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7291/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7291/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7290",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7290/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7290/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7290/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7290",
        "id": 1791902494,
        "node_id": "I_kwDOIPDwls5qzkMe",
        "number": 7290,
        "title": "on_retriever_end() not called with ConversationalRetrievalChain",
        "user": {
            "login": "mssalvatore",
            "id": 19957806,
            "node_id": "MDQ6VXNlcjE5OTU3ODA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/19957806?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mssalvatore",
            "html_url": "https://github.com/mssalvatore",
            "followers_url": "https://api.github.com/users/mssalvatore/followers",
            "following_url": "https://api.github.com/users/mssalvatore/following{/other_user}",
            "gists_url": "https://api.github.com/users/mssalvatore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mssalvatore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mssalvatore/subscriptions",
            "organizations_url": "https://api.github.com/users/mssalvatore/orgs",
            "repos_url": "https://api.github.com/users/mssalvatore/repos",
            "events_url": "https://api.github.com/users/mssalvatore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mssalvatore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-07-06T16:51:42Z",
        "updated_at": "2023-10-20T06:11:03Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain: v0.0.225\r\nOS: Ubuntu 22.04\r\n\r\n### Who can help?\r\n\r\n@agola11\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [X] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n### Code\r\n```python\r\nimport langchain\r\nfrom chromadb.config import Settings\r\nfrom langchain.callbacks.streaming_stdout import BaseCallbackHandler\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nfrom langchain.llms import LlamaCpp\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.schema.document import Document\r\nfrom langchain.vectorstores import Chroma\r\n\r\nlangchain.debug = True\r\n\r\n\r\nclass DocumentCallbackHandler(BaseCallbackHandler):\r\n    def on_retriever_end(\r\n        self,\r\n        documents: Sequence[Document],\r\n        *,\r\n        run_id: UUID,\r\n        parent_run_id: Optional[UUID] = None,\r\n        **kwargs: Any,\r\n    ) -> Any:\r\n        print(f\"on_retriever_end() CALLED with {len(documents)} documents\")\r\n\r\n\r\ndef setup():\r\n    llm = LlamaCpp(\r\n        model_path=\"models/GPT4All-13B-snoozy.ggml.q5_1.bin\",\r\n        n_ctx=4096,\r\n        n_batch=8192,\r\n        callbacks=[],\r\n        verbose=False,\r\n        use_mlock=True,\r\n        n_gpu_layers=60,\r\n        n_threads=8,\r\n    )\r\n\r\n    embeddings = HuggingFaceEmbeddings(model_name=\"all-MiniLM-L6-v2\")\r\n    db = Chroma(\r\n        persist_directory=\"./db\",\r\n        embedding_function=embeddings,\r\n        client_settings=Settings(\r\n            chroma_db_impl=\"duckdb+parquet\",\r\n            persist_directory=\"./db\",\r\n            anonymized_telemetry=False,\r\n        ),\r\n    )\r\n\r\n    retriever = db.as_retriever(search_kwargs={\"k\": 4})\r\n    memory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n    return ConversationalRetrievalChain.from_llm(\r\n        llm=llm, retriever=retriever, memory=memory, callbacks=[DocumentCallbackHandler()]\r\n    )\r\n\r\n\r\ndef main():\r\n    qa = setup()\r\n    while True:\r\n        question = input(\"\\nEnter your question: \")\r\n        answer = qa(question)[\"answer\"]\r\n        print(f\"\\n> Answer: {answer}\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n### Output\r\n```\r\nggml_init_cublas: found 1 CUDA devices:\r\n  Device 0: Quadro RTX 6000\r\nllama.cpp: loading model from models/GPT4All-13B-snoozy.ggml.q5_1.bin\r\nllama_model_load_internal: format     = ggjt v2 (pre #1508)\r\nllama_model_load_internal: n_vocab    = 32000\r\nllama_model_load_internal: n_ctx      = 4096\r\nllama_model_load_internal: n_embd     = 5120\r\nllama_model_load_internal: n_mult     = 256\r\nllama_model_load_internal: n_head     = 40\r\nllama_model_load_internal: n_layer    = 40\r\nllama_model_load_internal: n_rot      = 128\r\nllama_model_load_internal: ftype      = 9 (mostly Q5_1)\r\nllama_model_load_internal: n_ff       = 13824\r\nllama_model_load_internal: n_parts    = 1\r\nllama_model_load_internal: model size = 13B\r\nllama_model_load_internal: ggml ctx size =    0.09 MB\r\nllama_model_load_internal: using CUDA for GPU acceleration\r\nllama_model_load_internal: mem required  = 2165.28 MB (+ 1608.00 MB per state)\r\nllama_model_load_internal: allocating batch_size x 1 MB = 512 MB VRAM for the scratch buffer\r\nllama_model_load_internal: offloading 40 repeating layers to GPU\r\nllama_model_load_internal: offloading non-repeating layers to GPU\r\nllama_model_load_internal: offloading v cache to GPU\r\nllama_model_load_internal: offloading k cache to GPU\r\nllama_model_load_internal: offloaded 43/43 layers to GPU\r\nllama_model_load_internal: total VRAM used: 11314 MB\r\n....................................................................................................\r\nllama_init_from_file: kv self size  = 3200.00 MB\r\nAVX = 1 | AVX2 = 1 | AVX512 = 0 | AVX512_VBMI = 0 | AVX512_VNNI = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 1 | SSE3 = 1 | VSX = 0 | \r\n\r\nEnter your question: Should Hamlet end his life?\r\n[chain/start] [1:chain:ConversationalRetrievalChain] Entering Chain run with input:\r\n{\r\n  \"question\": \"Should Hamlet end his life?\",\r\n  \"chat_history\": []\r\n}\r\n[chain/start] [1:chain:ConversationalRetrievalChain > 3:chain:StuffDocumentsChain] Entering Chain run with input:\r\n[inputs]\r\n[chain/start] [1:chain:ConversationalRetrievalChain > 3:chain:StuffDocumentsChain > 4:chain:LLMChain] Entering Chain run with input:\r\n{\r\n  \"question\": \"Should Hamlet end his life?\",\r\n  \"context\": \"Enter Hamlet.\\n\\nEnter Hamlet.\\n\\nEnter Hamlet.\\n\\nHaply the seas, and countries different,\\n    With variable objects, shall expel\\n    This something-settled matter in his heart,\\n    Whereon his brains still beating puts him thus\\n    From fashion of himself. What think you on't?\\n  Pol. It shall do well. But yet do I believe\\n    The origin and commencement of his grief\\n    Sprung from neglected love.- How now, Ophelia?\\n    You need not tell us what Lord Hamlet said.\\n    We heard it all.- My lord, do as you please;\"\r\n}\r\n[llm/start] [1:chain:ConversationalRetrievalChain > 3:chain:StuffDocumentsChain > 4:chain:LLMChain > 5:llm:LlamaCpp] Entering LLM run with input:\r\n{\r\n  \"prompts\": [\r\n    \"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\\n\\nEnter Hamlet.\\n\\nEnter Hamlet.\\n\\nEnter Hamlet.\\n\\nHaply the seas, and countries different,\\n    With variable objects, shall expel\\n    This something-settled matter in his heart,\\n    Whereon his brains still beating puts him thus\\n    From fashion of himself. What think you on't?\\n  Pol. It shall do well. But yet do I believe\\n    The origin and commencement of his grief\\n    Sprung from neglected love.- How now, Ophelia?\\n    You need not tell us what Lord Hamlet said.\\n    We heard it all.- My lord, do as you please;\\n\\nQuestion: Should Hamlet end his life?\\nHelpful Answer:\"\r\n  ]\r\n}\r\n\r\nllama_print_timings:        load time =  1100.49 ms\r\nllama_print_timings:      sample time =    13.20 ms /    17 runs   (    0.78 ms per token)\r\nllama_print_timings: prompt eval time =  1100.33 ms /   208 tokens (    5.29 ms per token)\r\nllama_print_timings:        eval time =  1097.70 ms /    16 runs   (   68.61 ms per token)\r\nllama_print_timings:       total time =  2270.30 ms\r\n[llm/end] [1:chain:ConversationalRetrievalChain > 3:chain:StuffDocumentsChain > 4:chain:LLMChain > 5:llm:LlamaCpp] [2.27s] Exiting LLM run with output:\r\n{\r\n  \"generations\": [\r\n    [\r\n      {\r\n        \"text\": \" I'm sorry, I don't know the answer to that question.\",\r\n        \"generation_info\": null\r\n      }\r\n    ]\r\n  ],\r\n  \"llm_output\": null,\r\n  \"run\": null\r\n}\r\n[chain/end] [1:chain:ConversationalRetrievalChain > 3:chain:StuffDocumentsChain > 4:chain:LLMChain] [2.27s] Exiting Chain run with output:\r\n{\r\n  \"text\": \" I'm sorry, I don't know the answer to that question.\"\r\n}\r\n[chain/end] [1:chain:ConversationalRetrievalChain > 3:chain:StuffDocumentsChain] [2.27s] Exiting Chain run with output:\r\n{\r\n  \"output_text\": \" I'm sorry, I don't know the answer to that question.\"\r\n}\r\n[chain/end] [1:chain:ConversationalRetrievalChain] [5.41s] Exiting Chain run with output:\r\n{\r\n  \"answer\": \" I'm sorry, I don't know the answer to that question.\"\r\n}\r\n\r\n> Answer:  I'm sorry, I don't know the answer to that question.\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect the `on_retriever_end()` callback to be called immediately after documents are retrieved. I'm not sure what I'm doing wrong.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7290/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7290/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7289",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7289/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7289/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7289/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7289",
        "id": 1791868997,
        "node_id": "I_kwDOIPDwls5qzcBF",
        "number": 7289,
        "title": "Input in GraphQAChain Prompt is Malformed When Only 1 Triplet Is Found",
        "user": {
            "login": "msp10003",
            "id": 5883953,
            "node_id": "MDQ6VXNlcjU4ODM5NTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5883953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/msp10003",
            "html_url": "https://github.com/msp10003",
            "followers_url": "https://api.github.com/users/msp10003/followers",
            "following_url": "https://api.github.com/users/msp10003/following{/other_user}",
            "gists_url": "https://api.github.com/users/msp10003/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/msp10003/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/msp10003/subscriptions",
            "organizations_url": "https://api.github.com/users/msp10003/orgs",
            "repos_url": "https://api.github.com/users/msp10003/repos",
            "events_url": "https://api.github.com/users/msp10003/events{/privacy}",
            "received_events_url": "https://api.github.com/users/msp10003/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-06T16:25:05Z",
        "updated_at": "2023-07-07T21:19:54Z",
        "closed_at": "2023-07-07T21:19:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nMac OS Ventura 13.3.1 (a)\r\nPython 3.10.8\r\nLangChain 0.0.224\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n@hinthornw \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [x] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nReproduction Steps:\r\n1. Run the following\r\n```\r\n    from langchain.llms import OpenAI\r\n    from langchain.indexes import GraphIndexCreator\r\n    from langchain.chains import GraphQAChain\r\n    from langchain.prompts import PromptTemplate\r\n\r\n    text = \"Apple announced the Vision Pro in 2023.\"\r\n\r\n    index_creator = GraphIndexCreator(llm=OpenAI(openai_api_key='{OPEN_AI_KEY_HERE}', temperature=0))\r\n    graph = index_creator.from_text(text)\r\n    chain = GraphQAChain.from_llm(\r\n        OpenAI(temperature=0, openai_api_key='{OPEN_AI_KEY_HERE}'),\r\n        graph=graph, \r\n        verbose=True\r\n    )\r\n    chain.run(\"When did Apple announce the Vision Pro?\")\r\n```\r\n2. Observe the \"Full Context\" output in your terminal and notice that the two triplets are concatenated onto a single line with no spacing in between them.\r\n\r\nI believe the issue is in the code [here](https://github.com/hwchase17/langchain/blob/681f2678a357268c435c18f19323ccb50cac079c/langchain/chains/graph_qa/base.py#L80). When only 1 triplet is found in an iteration, `.join` does not add any `\\n` characters, resulting in a context string with no separation between triplets.\r\n\r\n### Expected behavior\r\n\r\nExpected: A multi-line string with each triplet text on its own line (delimited by `\"\\n\"`)\r\n\r\nIn the above repro steps, I would expect\r\n```\r\nFull Context:\r\nApple announced Vision Pro\r\nVision Pro was announced in 2023\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7289/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7289/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7288",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7288/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7288/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7288/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7288",
        "id": 1791859217,
        "node_id": "I_kwDOIPDwls5qzZoR",
        "number": 7288,
        "title": "DOC: Search functionality: `Verified Sources:` fields unreadable",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T16:17:48Z",
        "updated_at": "2023-10-05T22:06:37Z",
        "closed_at": "2023-10-05T22:06:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nIf we run a `Search` on the python.langchain.com/docs/ we got the result as several clickable fields. Those fields are the URLs of the found results. But the fields are too short to show the URLs. We cannot see what LangChain doc pages were found. We see just the start of the URL string, like `1. python.langchain.com/docs/module...` All found fields shows the same above text, which is useless.\r\n![image](https://github.com/hwchase17/langchain/assets/2256422/c976d55a-e931-432d-b8fe-0b74dbf986ce)\r\n\n\n### Idea or request for content:\n\nSeveral ideas on how to fix it:\r\n1. make the result fields longer and place them one after another in the list.\r\n2. show the last part of the URL string not the start of the URL string.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7288/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7288/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7287",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7287/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7287/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7287/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7287",
        "id": 1791856003,
        "node_id": "PR_kwDOIPDwls5U06vR",
        "number": 7287,
        "title": "added pipeline tool for low code integration",
        "user": {
            "login": "hanzhichao2000",
            "id": 230746,
            "node_id": "MDQ6VXNlcjIzMDc0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/230746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hanzhichao2000",
            "html_url": "https://github.com/hanzhichao2000",
            "followers_url": "https://api.github.com/users/hanzhichao2000/followers",
            "following_url": "https://api.github.com/users/hanzhichao2000/following{/other_user}",
            "gists_url": "https://api.github.com/users/hanzhichao2000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hanzhichao2000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hanzhichao2000/subscriptions",
            "organizations_url": "https://api.github.com/users/hanzhichao2000/orgs",
            "repos_url": "https://api.github.com/users/hanzhichao2000/repos",
            "events_url": "https://api.github.com/users/hanzhichao2000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hanzhichao2000/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-06T16:15:30Z",
        "updated_at": "2023-09-18T23:13:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7287",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7287",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7287.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7287.patch",
            "merged_at": null
        },
        "body": "## Description\r\n\r\nadded a pipeline tool consisting multiple steps that makes tool/chain reuse easier.\r\nwith more generic tools reused by domain task tools, metadata-driven agent-tool chain loading will be easier.\r\n\r\n## Dependencies\r\n\r\nNone\r\n\r\n## Maintainer\r\n\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7287/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7287/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7286",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7286/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7286/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7286/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7286",
        "id": 1791854231,
        "node_id": "PR_kwDOIPDwls5U06XD",
        "number": 7286,
        "title": "Clarifai LangChain improvements and embeddings",
        "user": {
            "login": "zeiler",
            "id": 2138258,
            "node_id": "MDQ6VXNlcjIxMzgyNTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2138258?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zeiler",
            "html_url": "https://github.com/zeiler",
            "followers_url": "https://api.github.com/users/zeiler/followers",
            "following_url": "https://api.github.com/users/zeiler/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeiler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zeiler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeiler/subscriptions",
            "organizations_url": "https://api.github.com/users/zeiler/orgs",
            "repos_url": "https://api.github.com/users/zeiler/repos",
            "events_url": "https://api.github.com/users/zeiler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zeiler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-06T16:14:17Z",
        "updated_at": "2023-07-07T06:23:57Z",
        "closed_at": "2023-07-07T06:23:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7286",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7286",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7286.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7286.patch",
            "merged_at": null
        },
        "body": "This PR improves upon the Clarifai LangChain integration with improved docs, errors, args and the addition of embedding model support in LancChain for Clarifai's embedding models and an overview of the various ways you can integrate with Clarifai added to the docs.\r\n\r\n@hwchase17 please take a look.\r\n\r\nTwitter: @clarifai",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7286/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7286/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7285",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7285/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7285/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7285/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7285",
        "id": 1791828808,
        "node_id": "I_kwDOIPDwls5qzSNI",
        "number": 7285,
        "title": "Can't use human_prefix and ai_prefix with agent",
        "user": {
            "login": "bitnom",
            "id": 14287229,
            "node_id": "MDQ6VXNlcjE0Mjg3MjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14287229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bitnom",
            "html_url": "https://github.com/bitnom",
            "followers_url": "https://api.github.com/users/bitnom/followers",
            "following_url": "https://api.github.com/users/bitnom/following{/other_user}",
            "gists_url": "https://api.github.com/users/bitnom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bitnom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bitnom/subscriptions",
            "organizations_url": "https://api.github.com/users/bitnom/orgs",
            "repos_url": "https://api.github.com/users/bitnom/repos",
            "events_url": "https://api.github.com/users/bitnom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bitnom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-06T15:57:25Z",
        "updated_at": "2023-10-14T20:10:52Z",
        "closed_at": "2023-10-14T20:10:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain 0.0.223\r\nLinux\r\nPython 3.11\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n@agola11\r\n\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nsomething like this\r\n```python\r\nchat_history = PostgresChatMessageHistory(  # Just a slight mod of the postgres class for sorting the results by date\r\n    connection_string=config('SUPABASE_POSTGRES_CONNECT_STRING'),\r\n    session_id=\"58964243-23cd-41fe-ad05-ecbfd2a73202\",  # str(uuid.uuid4()),\r\n    table_name=\"chat_history\"\r\n)\r\n\r\nmemory = ConversationBufferMemory( \r\n    memory_key=\"chat_history\",\r\n    chat_memory=chat_history,\r\n    return_messages=True,\r\n    human_prefix=\"USER\",  # This doesn't work.\r\n    ai_prefix=\"ASSISTANT\",)  # This doesn't work.\r\n    \r\nagent = ChatAgent(\r\n        name=\"Chat Assistant\",\r\n        tools=_tools,\r\n        agent_type=AgentType.OPENAI_MULTI_FUNCTIONS,\r\n        llm=openai\r\n    )\r\n```\r\n\r\nIf I look at what was prompted and in postgres, it always shows \"Human\" and \"AI\"\r\n\r\n### Expected behavior\r\n\r\nI expect USER and ASSISTANT to be used everywhere after I set it. I see this as especially important when using openai's chat endpoint since their models were trained using these tokens.\r\n\r\nI also think it would be better to load the memory/chat history as the openai API provides parameters for (As a list of messages) instead of in the SYSTEM message, but perhaps that's for another issue.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7285/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7285/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7284",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7284/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7284/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7284/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7284",
        "id": 1791814905,
        "node_id": "PR_kwDOIPDwls5U0x5j",
        "number": 7284,
        "title": "add elasticknn to init",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T15:48:37Z",
        "updated_at": "2023-07-06T15:58:25Z",
        "closed_at": "2023-07-06T15:58:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7284",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7284",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7284.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7284.patch",
            "merged_at": "2023-07-06T15:58:24Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7284/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7284/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7283",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7283/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7283/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7283/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7283",
        "id": 1791794342,
        "node_id": "I_kwDOIPDwls5qzJym",
        "number": 7283,
        "title": "anthropic_version = packaging.version.parse(version(\"anthropic\")) AttributeError: module 'packaging' has no attribute 'version'",
        "user": {
            "login": "junruxiong",
            "id": 44308338,
            "node_id": "MDQ6VXNlcjQ0MzA4MzM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/44308338?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/junruxiong",
            "html_url": "https://github.com/junruxiong",
            "followers_url": "https://api.github.com/users/junruxiong/followers",
            "following_url": "https://api.github.com/users/junruxiong/following{/other_user}",
            "gists_url": "https://api.github.com/users/junruxiong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/junruxiong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/junruxiong/subscriptions",
            "organizations_url": "https://api.github.com/users/junruxiong/orgs",
            "repos_url": "https://api.github.com/users/junruxiong/repos",
            "events_url": "https://api.github.com/users/junruxiong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/junruxiong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-06T15:35:39Z",
        "updated_at": "2023-10-14T20:10:57Z",
        "closed_at": "2023-10-14T20:10:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nWhen I initialise ChatAnthropic(), it got the error:\r\n\r\nanthropic_version = packaging.version.parse(version(\"anthropic\"))\r\nAttributeError: module 'packaging' has no attribute 'version'\n\n### Who can help?\n\n@hwchase17 @agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.chat_models import ChatOpenAI, ChatAnthropic\r\nllm = ChatAnthropic()\n\n### Expected behavior\n\nAs shown above.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7283/reactions",
            "total_count": 4,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7283/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7282",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7282/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7282/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7282/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7282",
        "id": 1791761739,
        "node_id": "I_kwDOIPDwls5qzB1L",
        "number": 7282,
        "title": "MathpixPDFLoader doesn't work. ",
        "user": {
            "login": "Monketoo",
            "id": 128999460,
            "node_id": "U_kgDOB7BgJA",
            "avatar_url": "https://avatars.githubusercontent.com/u/128999460?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Monketoo",
            "html_url": "https://github.com/Monketoo",
            "followers_url": "https://api.github.com/users/Monketoo/followers",
            "following_url": "https://api.github.com/users/Monketoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Monketoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Monketoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Monketoo/subscriptions",
            "organizations_url": "https://api.github.com/users/Monketoo/orgs",
            "repos_url": "https://api.github.com/users/Monketoo/repos",
            "events_url": "https://api.github.com/users/Monketoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Monketoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-06T15:15:17Z",
        "updated_at": "2023-10-07T17:05:46Z",
        "closed_at": "2023-09-29T16:22:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nGetting ''' ValueError: Unable to send PDF to Mathpix'''  while using MathpixPDFLoader. \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nmath_pix_loaded = MathpixPDFLoader(file_path)\r\nload_list_mathpix = math_pix_loaded.load()\n\n### Expected behavior\n\nA list of pages to be returned.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7282/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7282/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7281",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7281/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7281/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7281/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7281",
        "id": 1791756774,
        "node_id": "PR_kwDOIPDwls5U0lXj",
        "number": 7281,
        "title": "Allow passing api key into OpenAIWhisperParser",
        "user": {
            "login": "kdcokenny",
            "id": 99611484,
            "node_id": "U_kgDOBe_zXA",
            "avatar_url": "https://avatars.githubusercontent.com/u/99611484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kdcokenny",
            "html_url": "https://github.com/kdcokenny",
            "followers_url": "https://api.github.com/users/kdcokenny/followers",
            "following_url": "https://api.github.com/users/kdcokenny/following{/other_user}",
            "gists_url": "https://api.github.com/users/kdcokenny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kdcokenny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kdcokenny/subscriptions",
            "organizations_url": "https://api.github.com/users/kdcokenny/orgs",
            "repos_url": "https://api.github.com/users/kdcokenny/repos",
            "events_url": "https://api.github.com/users/kdcokenny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kdcokenny/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-06T15:12:26Z",
        "updated_at": "2023-07-10T23:38:00Z",
        "closed_at": "2023-07-07T19:07:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7281",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7281",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7281.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7281.patch",
            "merged_at": "2023-07-07T19:07:46Z"
        },
        "body": "This just allows the user to pass in an api_key directly into OpenAIWhisperParser. Very simple addition.\r\n@rlancemartin\r\n@eyurtsev ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7281/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7281/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7280",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7280/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7280/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7280/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7280",
        "id": 1791718932,
        "node_id": "I_kwDOIPDwls5qy3YU",
        "number": 7280,
        "title": "Callback for VertexAI to monitor cost and token consumption",
        "user": {
            "login": "lionelchg",
            "id": 60159831,
            "node_id": "MDQ6VXNlcjYwMTU5ODMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/60159831?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lionelchg",
            "html_url": "https://github.com/lionelchg",
            "followers_url": "https://api.github.com/users/lionelchg/followers",
            "following_url": "https://api.github.com/users/lionelchg/following{/other_user}",
            "gists_url": "https://api.github.com/users/lionelchg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lionelchg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lionelchg/subscriptions",
            "organizations_url": "https://api.github.com/users/lionelchg/orgs",
            "repos_url": "https://api.github.com/users/lionelchg/repos",
            "events_url": "https://api.github.com/users/lionelchg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lionelchg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-06T14:50:29Z",
        "updated_at": "2023-09-25T14:31:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIt would be nice to have a similar function as `get_openai_callback()` for VertexAI. This actually gives the input tokens, output tokens and cost of using OpenAI models:\r\n\r\n```python\r\nwith get_openai_callback() as cb:\r\n    llm = OpenAI(temperature=0)\r\n    chat = ChatOpenAI(temperature=0)\r\n    emb = OpenAIEmbeddings()\r\n\r\n    output_llm = llm(\"As I was saying,\")\r\n    print(output_llm)\r\n\r\n    # System message + Human Message\r\n    messages = [\r\n        SystemMessage(content=\"You are a helpful assistant that translates English to French.\"),\r\n        HumanMessage(content=\"Translate this sentence from English to French. I love programming.\")\r\n    ]\r\n    output_chat = chat(messages)\r\n    print(output_chat)\r\n\r\n    print(cb)\r\n```\r\n\r\nI would like to have:\r\n\r\n```python\r\nwith get_vertexai_callback() as cb:\r\n    llm = VertexAI(temperature=0)\r\n    chat = ChatVertexAI(temperature=0)\r\n    emb = VertexAIEmbeddings()\r\n\r\n    print(llm(\"As I was saying,\"))\r\n\r\n    # System message + Human Message\r\n    messages = [\r\n        SystemMessage(content=\"You are a helpful assistant that translates English to French.\"),\r\n        HumanMessage(content=\"Translate this sentence from English to French. I love programming.\")\r\n    ]\r\n    print(chat(messages))\r\n```\r\n\r\n\n\n### Motivation\n\nI would like to monitor my usage of VertexAI models\n\n### Your contribution\n\nI already read quite a bit the openai version of the callback but if anyone has already thought about how to do it with vertex I would be really curious :). If someone else also planned to do it we could merge efforts! ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7280/reactions",
            "total_count": 4,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7280/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7279",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7279/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7279/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7279/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7279",
        "id": 1791684575,
        "node_id": "PR_kwDOIPDwls5U0VsQ",
        "number": 7279,
        "title": "Small updates to run_evaluator after adding dataset.data_type",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-06T14:31:37Z",
        "updated_at": "2023-07-08T01:39:07Z",
        "closed_at": "2023-07-08T01:39:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7279",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7279",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7279.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7279.patch",
            "merged_at": "2023-07-08T01:39:06Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7279/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7279/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7278",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7278/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7278/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7278/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7278",
        "id": 1791648590,
        "node_id": "PR_kwDOIPDwls5U0N4e",
        "number": 7278,
        "title": "Add new chain qa_with_references_and_verbatim",
        "user": {
            "login": "pprados",
            "id": 204694,
            "node_id": "MDQ6VXNlcjIwNDY5NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/204694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pprados",
            "html_url": "https://github.com/pprados",
            "followers_url": "https://api.github.com/users/pprados/followers",
            "following_url": "https://api.github.com/users/pprados/following{/other_user}",
            "gists_url": "https://api.github.com/users/pprados/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pprados/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pprados/subscriptions",
            "organizations_url": "https://api.github.com/users/pprados/orgs",
            "repos_url": "https://api.github.com/users/pprados/repos",
            "events_url": "https://api.github.com/users/pprados/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pprados/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 36,
        "created_at": "2023-07-06T14:11:23Z",
        "updated_at": "2023-11-10T14:23:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7278",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7278",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7278.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7278.patch",
            "merged_at": null
        },
        "body": "\r\n# Description:\r\nThis chain returns the selected documents used for the response. Then, it's possible to extract all meta-data \r\nfor these documents, to generate a markdown link or other stuff.\r\n\r\nIt's not easy to manage the links of sources. Langchain proposed a qa_with_source, but this chain returns only a\r\nlist of URL. It's not possible to extract other informations about the metadata, like the filename or others stuff.\r\n\r\nI propose a solution to this problem: return the Documents, and let development do what it wants with it.\r\n\r\nThis pull-request proposes a new implementation of the original chain `qa_with_source`.\r\nNow, the implementation `qa_with_reference` returns the list of documents used for the response.\r\nThen, it's possible to use all meta-data for these documents, to generate a Markdown link (with filename/title and URL) or what you want.\r\n\r\nTo do that, I inject a UUID in the meta-data, and ask to return a list of UUID in the response. Then, it's easy to find the corresponding document.\r\n\r\nIn another [branch](https://github.com/pprados/langchain/tree/pprados/qa_with_references_rewrite_qa_with_sources), \r\nI have reimplemented the origin `qa_with_source` to extend the `qa_with_reference`.\r\n\r\n# Tag maintainer:\r\n- @baskaryan\r\n\r\n# Dependencies:\r\n- no\r\n\r\n# Twitter handle: \r\n- @pprados",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7278/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7278/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7277",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7277/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7277/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7277/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7277",
        "id": 1791621321,
        "node_id": "I_kwDOIPDwls5qyfjJ",
        "number": 7277,
        "title": "Allow filter to be passed in ElasticKnnSearch knn_search and knn_hybrid_search",
        "user": {
            "login": "lemig",
            "id": 78766,
            "node_id": "MDQ6VXNlcjc4NzY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/78766?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lemig",
            "html_url": "https://github.com/lemig",
            "followers_url": "https://api.github.com/users/lemig/followers",
            "following_url": "https://api.github.com/users/lemig/following{/other_user}",
            "gists_url": "https://api.github.com/users/lemig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lemig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lemig/subscriptions",
            "organizations_url": "https://api.github.com/users/lemig/orgs",
            "repos_url": "https://api.github.com/users/lemig/repos",
            "events_url": "https://api.github.com/users/lemig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lemig/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T13:56:39Z",
        "updated_at": "2023-09-20T14:35:44Z",
        "closed_at": "2023-09-20T14:35:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "You can pass filter to an kNN in elasticsearch.\r\nThis is currently implemented in the langchain wrapper in the exact KNN search.\r\nBut is not yet implemented in the approximate KNN search.\r\n\r\nAdd filter param to [_default_knn_query](https://github.com/jeffvestal/langchain/blob/10f34bf62e2d53f0b1a7b15ba21c2328b64862cd/langchain/vectorstores/elastic_vector_search.py#L398), [knn_search](https://github.com/jeffvestal/langchain/blob/10f34bf62e2d53f0b1a7b15ba21c2328b64862cd/langchain/vectorstores/elastic_vector_search.py#L432), [knn_hybrid_search](https://github.com/jeffvestal/langchain/blob/10f34bf62e2d53f0b1a7b15ba21c2328b64862cd/langchain/vectorstores/elastic_vector_search.py#L488).\r\n\r\ncc: @jeffvestal, @derickson\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7277/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7276",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7276/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7276/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7276/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7276",
        "id": 1791562933,
        "node_id": "PR_kwDOIPDwls5Uz7TV",
        "number": 7276,
        "title": "Fix `make docs_build` and related scripts",
        "user": {
            "login": "os1ma",
            "id": 39944763,
            "node_id": "MDQ6VXNlcjM5OTQ0NzYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/39944763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/os1ma",
            "html_url": "https://github.com/os1ma",
            "followers_url": "https://api.github.com/users/os1ma/followers",
            "following_url": "https://api.github.com/users/os1ma/following{/other_user}",
            "gists_url": "https://api.github.com/users/os1ma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/os1ma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/os1ma/subscriptions",
            "organizations_url": "https://api.github.com/users/os1ma/orgs",
            "repos_url": "https://api.github.com/users/os1ma/repos",
            "events_url": "https://api.github.com/users/os1ma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/os1ma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "baskaryan",
                "id": 22008038,
                "node_id": "MDQ6VXNlcjIyMDA4MDM4",
                "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/baskaryan",
                "html_url": "https://github.com/baskaryan",
                "followers_url": "https://api.github.com/users/baskaryan/followers",
                "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
                "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
                "organizations_url": "https://api.github.com/users/baskaryan/orgs",
                "repos_url": "https://api.github.com/users/baskaryan/repos",
                "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/baskaryan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-06T13:25:17Z",
        "updated_at": "2023-07-12T02:50:14Z",
        "closed_at": "2023-07-12T02:05:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7276",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7276",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7276.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7276.patch",
            "merged_at": "2023-07-12T02:05:14Z"
        },
        "body": "**Description: a description of the change**\r\n\r\nFixed `make docs_build` and related scripts which caused errors. There are several changes.\r\n\r\nFirst, I made the build of the documentation and the API Reference into two separate commands. This is because it takes less time to build. The commands for documents are `make docs_build`, `make docs_clean`, and `make docs_linkcheck`. The commands for API Reference are `make api_docs_build`, `api_docs_clean`, and `api_docs_linkcheck`.\r\n\r\nIt looked like `docs/.local_build.sh` could be used to build the documentation, so I used that. Since `.local_build.sh` was also building API Rerefence internally, I removed that process. `.local_build.sh` also added some Bash options to stop in error or so. Futher more added `cd \"${SCRIPT_DIR}\"` at the beginning so that the script will work no matter which directory it is executed in.\r\n\r\n`docs/api_reference/api_reference.rst` is removed,  because which is generated by `docs/api_reference/create_api_rst.py`, and added it to .gitignore.\r\n\r\nFinally, the description of CONTRIBUTING.md was modified.\r\n\r\n**Issue: the issue # it fixes (if applicable)**\r\n\r\nhttps://github.com/hwchase17/langchain/issues/6413\r\n\r\n**Dependencies: any dependencies required for this change**\r\n\r\n`nbdoc` was missing in group docs so it was added. I installed it with the `poetry add --group docs nbdoc` command. I am concerned if any modifications are needed to poetry.lock. I would greatly appreciate it if you could pay close attention to this file during the review.\r\n\r\n**Tag maintainer**\r\n- General / Misc / if you don't know who to tag: @baskaryan\r\n\r\nIf this PR needs any additional changes, I'll be happy to make them!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7276/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7276/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7275",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7275/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7275/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7275/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7275",
        "id": 1791522651,
        "node_id": "PR_kwDOIPDwls5UzyjO",
        "number": 7275,
        "title": "fix pydantic parser: JSONDecodeError",
        "user": {
            "login": "Lin-jun-xiang",
            "id": 63782903,
            "node_id": "MDQ6VXNlcjYzNzgyOTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/63782903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lin-jun-xiang",
            "html_url": "https://github.com/Lin-jun-xiang",
            "followers_url": "https://api.github.com/users/Lin-jun-xiang/followers",
            "following_url": "https://api.github.com/users/Lin-jun-xiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lin-jun-xiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lin-jun-xiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lin-jun-xiang/subscriptions",
            "organizations_url": "https://api.github.com/users/Lin-jun-xiang/orgs",
            "repos_url": "https://api.github.com/users/Lin-jun-xiang/repos",
            "events_url": "https://api.github.com/users/Lin-jun-xiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lin-jun-xiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5463330795,
                "node_id": "LA_kwDOIPDwls8AAAABRaPP6w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20test",
                "name": "needs test",
                "color": "E99695",
                "default": false,
                "description": "PR needs to be updated with tests"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-06T13:03:35Z",
        "updated_at": "2023-09-05T01:58:31Z",
        "closed_at": "2023-09-05T01:58:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7275",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7275",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7275.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7275.patch",
            "merged_at": null
        },
        "body": "## Problem\r\n\r\nThe  **double quatations (\")** which cannot use  `parser.parse()` correctly.\r\nFor example, completion from chain response as following:\r\n\r\n```python\r\ntext = \"\"\"\r\nAnswer: {\r\n  \"product_name\": \"Control4\u00ae T3 Series 7\\\" Tabletop Touch Screen\",\r\n  \"manufactured_date\": \"2015-10-09\",\r\n  \"size_inch\": \"7.0\\\" \u00d7 5.1\\\" \u00d7 0.75\\\"\",\r\n  \"resolution\": \"1280 \u00d7 800\",\r\n  \"contrast\": \"\",\r\n  \"operation_temperature\": \"32 ~ 104\u02daF (0\u02da ~ 40\u02daC)\",\r\n  \"power_supply\": \"PoE (IEEE802.3af) 100VAC ~ 240VAC, 50-60 Hz International power supply adapters included\",\r\n  \"sunlight_readable\": false,\r\n  \"antiglare\": false,\r\n  \"low_power_consumption\": false,\r\n  \"high_brightness\": false,\r\n  \"wide_temperature\": false,\r\n  \"fast_response\": true,\r\n  \"screen_features\": [\"Capacitive touch\", \"Camera: 720p\", \"HD camera\", \"Speakers and microphone\", \"Video intercom integration\", \"Audio intercom integration\"]\r\n}\r\n\"\"\"\r\n\r\n# Just take the parse function :)\r\ntry:\r\n    # Greedy search for 1st json candidate.\r\n    match = re.search(\r\n        r\"\\{.*\\}\", text.strip(), re.MULTILINE | re.IGNORECASE | re.DOTALL\r\n    )\r\n    json_str = \"\"\r\n    if match:\r\n        json_str = match.group()\r\n    json_object = json.loads(json_str, strict=False)\r\n\r\nexcept Exception as e:\r\n    print(e)\r\n```\r\n\r\n##  Wrong Result\r\n\r\n```\r\nExpecting ',' delimiter: line 2 column 43 (char 44)\r\n```\r\n\r\n\r\n## Solution\r\n\r\nLet's add a `remove_illegal_quatations` function which will:\r\n\r\n1. **Remove the illegal quatations** which not display in `first, second, third, last time`\r\n2. Remeber there will `List` value, we should'nt remove here. ex: `[\"Capacitive touch\", \"Camera: 720p\", ...\"]`\r\n3. Remeber there will `true/false` which will not have `\"\"`. ex: ` \"sunlight_readable\": false`\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7275/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7275/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7274",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7274/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7274/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7274/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7274",
        "id": 1791493783,
        "node_id": "PR_kwDOIPDwls5UzsRF",
        "number": 7274,
        "title": "Use correct Language for html_splitter",
        "user": {
            "login": "BioGeek",
            "id": 59344,
            "node_id": "MDQ6VXNlcjU5MzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/59344?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BioGeek",
            "html_url": "https://github.com/BioGeek",
            "followers_url": "https://api.github.com/users/BioGeek/followers",
            "following_url": "https://api.github.com/users/BioGeek/following{/other_user}",
            "gists_url": "https://api.github.com/users/BioGeek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BioGeek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BioGeek/subscriptions",
            "organizations_url": "https://api.github.com/users/BioGeek/orgs",
            "repos_url": "https://api.github.com/users/BioGeek/repos",
            "events_url": "https://api.github.com/users/BioGeek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BioGeek/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T12:46:58Z",
        "updated_at": "2023-07-06T13:24:26Z",
        "closed_at": "2023-07-06T13:24:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7274",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7274",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7274.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7274.patch",
            "merged_at": "2023-07-06T13:24:26Z"
        },
        "body": "`html_splitter` was using `Language.MARKDOWN`. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7274/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7274/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7273",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7273/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7273/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7273/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7273",
        "id": 1791490032,
        "node_id": "I_kwDOIPDwls5qx_fw",
        "number": 7273,
        "title": "[FEATURE] SOLR Based Vector Store",
        "user": {
            "login": "samadkoita",
            "id": 53687543,
            "node_id": "MDQ6VXNlcjUzNjg3NTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/53687543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samadkoita",
            "html_url": "https://github.com/samadkoita",
            "followers_url": "https://api.github.com/users/samadkoita/followers",
            "following_url": "https://api.github.com/users/samadkoita/following{/other_user}",
            "gists_url": "https://api.github.com/users/samadkoita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samadkoita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samadkoita/subscriptions",
            "organizations_url": "https://api.github.com/users/samadkoita/orgs",
            "repos_url": "https://api.github.com/users/samadkoita/repos",
            "events_url": "https://api.github.com/users/samadkoita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samadkoita/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-07-06T12:44:39Z",
        "updated_at": "2023-10-29T17:35:57Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThis adds support for Apache SOLRs vector search capabilities\r\n(https://solr.apache.org/guide/solr/latest/query-guide/dense-vector-search.html)\n\n### Motivation\n\nAs SOLR is a commonly used search index and now offers this feature, it is important to allow SOLR users to be able to integrate seamlessly with LangChain (and the associated benefits).\n\n### Your contribution\n\nI can try submitting a PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7273/reactions",
            "total_count": 7,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 4
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7273/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7272",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7272/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7272/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7272/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7272",
        "id": 1791458701,
        "node_id": "I_kwDOIPDwls5qx32N",
        "number": 7272,
        "title": "'Qdrant.from_documents' Memory overflow",
        "user": {
            "login": "zhugexinxin",
            "id": 42615243,
            "node_id": "MDQ6VXNlcjQyNjE1MjQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/42615243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhugexinxin",
            "html_url": "https://github.com/zhugexinxin",
            "followers_url": "https://api.github.com/users/zhugexinxin/followers",
            "following_url": "https://api.github.com/users/zhugexinxin/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhugexinxin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhugexinxin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhugexinxin/subscriptions",
            "organizations_url": "https://api.github.com/users/zhugexinxin/orgs",
            "repos_url": "https://api.github.com/users/zhugexinxin/repos",
            "events_url": "https://api.github.com/users/zhugexinxin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhugexinxin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-07-06T12:25:00Z",
        "updated_at": "2023-10-16T16:06:24Z",
        "closed_at": "2023-10-16T16:06:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\n```\r\ndef handle_embeddings(payload):\r\n     loader = UnstructuredPDFLoader(payload[\"filepath\"])\r\n     documents = loader.load()\r\n\r\n    text_splitter = SpacyTextSplitter(pipeline=payload[\"language\"], chunk_size=1536, chunk_overlap=0)\r\n    docs = text_splitter.split_documents(documents)\r\n    \r\n    embeddings = OpenAIEmbeddings(**payload)\r\n    qdrant = Qdrant.from_documents(\r\n        docs, embeddings,\r\n        path=path,\r\n        collection_name=collection_name,\r\n    )\r\n    \r\nimport dramatiq\r\nfrom dramatiq.brokers.redis import RedisBroker\r\nfrom tasks import handle_embeddings\r\n\r\nredis_broker = RedisBroker(url='redis://redis.helloreader.docker/10')\r\ndramatiq.set_broker(redis_broker)\r\n\r\n@dramatiq.actor(max_retries = 0)\r\ndef handle_embeddings_task(payload):\r\n    result = handle_embeddings(payload)\r\n    return result\r\n```\r\n\r\nDue to the time-consuming nature of embeddings and storing them in a vector database, I opted for asynchronous queue tasks to handle them. However, I noticed that when processing documents of size 30 MB, the memory usage of the queue task kept increasing until it eventually crashed due to overflow. At this point, I investigated and found that the memory overflow occurred even before the embeddings interface was called, indicating that the issue was with the `Qdrant.from_documents` method. I have been searching for the root cause for a while but haven't found it yet.\r\n\r\n### Suggestion:\r\n\r\nI hope someone who is familiar with the `Qdrant.from_documents` method or has knowledge of other possible causes can help me resolve this issue. \r\nThe document size of approximately 30 MB corresponds to approximately 560,000 tokens.\r\nDuring the process, I tried using Dramatiq, Celery, and RQ, and encountered the same issue with all of them. Therefore, we can exclude the possibility of the issue being specific to these queue tools.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7272/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7272/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7271",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7271/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7271/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7271/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7271",
        "id": 1791279132,
        "node_id": "PR_kwDOIPDwls5Uy9XT",
        "number": 7271,
        "title": "Added number_of_head_rows to pandas agent parameters",
        "user": {
            "login": "activenikhilg",
            "id": 20630353,
            "node_id": "MDQ6VXNlcjIwNjMwMzUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20630353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/activenikhilg",
            "html_url": "https://github.com/activenikhilg",
            "followers_url": "https://api.github.com/users/activenikhilg/followers",
            "following_url": "https://api.github.com/users/activenikhilg/following{/other_user}",
            "gists_url": "https://api.github.com/users/activenikhilg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/activenikhilg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/activenikhilg/subscriptions",
            "organizations_url": "https://api.github.com/users/activenikhilg/orgs",
            "repos_url": "https://api.github.com/users/activenikhilg/repos",
            "events_url": "https://api.github.com/users/activenikhilg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/activenikhilg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T10:33:03Z",
        "updated_at": "2023-07-07T06:24:22Z",
        "closed_at": "2023-07-07T06:17:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7271",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7271",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7271.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7271.patch",
            "merged_at": "2023-07-07T06:17:26Z"
        },
        "body": "Description: Added number_of_head_rows as a parameter to pandas agent. number_of_head_rows allows the user to select the number of rows to pass with the prompt when include_df_in_prompt is True. This gives the ability to control the token length and can be helpful in dealing with large dataframe.\r\n\r\nTag maintainer: @hinthornw @baskaryan\r\n\r\nTwitter handle: @activenikhilg",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7271/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7271/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7270",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7270/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7270/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7270/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7270",
        "id": 1791245161,
        "node_id": "PR_kwDOIPDwls5Uy2At",
        "number": 7270,
        "title": "Generic OpenAI fn chain",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T10:12:39Z",
        "updated_at": "2023-07-07T09:44:54Z",
        "closed_at": "2023-07-07T09:44:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7270",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7270",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7270.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7270.patch",
            "merged_at": "2023-07-07T09:44:53Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7270/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7270/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7269",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7269/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7269/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7269/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7269",
        "id": 1791243008,
        "node_id": "I_kwDOIPDwls5qxDMA",
        "number": 7269,
        "title": "Langchain Tools and Agents",
        "user": {
            "login": "Ajaypawar02",
            "id": 65480235,
            "node_id": "MDQ6VXNlcjY1NDgwMjM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/65480235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ajaypawar02",
            "html_url": "https://github.com/Ajaypawar02",
            "followers_url": "https://api.github.com/users/Ajaypawar02/followers",
            "following_url": "https://api.github.com/users/Ajaypawar02/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ajaypawar02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ajaypawar02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ajaypawar02/subscriptions",
            "organizations_url": "https://api.github.com/users/Ajaypawar02/orgs",
            "repos_url": "https://api.github.com/users/Ajaypawar02/repos",
            "events_url": "https://api.github.com/users/Ajaypawar02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ajaypawar02/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-06T10:11:15Z",
        "updated_at": "2023-12-01T16:09:13Z",
        "closed_at": "2023-12-01T16:09:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI am using Tools and Agents to query on different vectorstores. But when I am asking question which is not from the vectorstore.It responds i dont know. So is there any approach i can try where if the answer is not from the vectorstore i can carry out the conversation like chatgpt. If Yes? Can you Please let me know how we can integrate this \r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7269/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7269/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7268",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7268/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7268/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7268/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7268",
        "id": 1791159677,
        "node_id": "I_kwDOIPDwls5qwu19",
        "number": 7268,
        "title": "langchain + gpt4all \u6267\u884c\u5f02\u5e38\uff0c\u603b\u63d0\u793a\u53c2\u6570\u95ee\u9898",
        "user": {
            "login": "guanman",
            "id": 41034077,
            "node_id": "MDQ6VXNlcjQxMDM0MDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/41034077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guanman",
            "html_url": "https://github.com/guanman",
            "followers_url": "https://api.github.com/users/guanman/followers",
            "following_url": "https://api.github.com/users/guanman/following{/other_user}",
            "gists_url": "https://api.github.com/users/guanman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guanman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guanman/subscriptions",
            "organizations_url": "https://api.github.com/users/guanman/orgs",
            "repos_url": "https://api.github.com/users/guanman/repos",
            "events_url": "https://api.github.com/users/guanman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guanman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-06T09:22:31Z",
        "updated_at": "2023-10-14T20:11:07Z",
        "closed_at": "2023-10-14T20:11:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain v0.0.225, Windows10, Python 3.10\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n\u4e00\u4e2a\u6765\u81ealangchain\u7684\u4e8b\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a\r\nfrom langchain import PromptTemplate, LLMChain\r\nfrom langchain.llms import GPT4All\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\n\r\ntemplate = \"\"\"Question: {question}\r\n\r\nAnswer: Let's think step by step.\"\"\"\r\n\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\n\r\nlocal_path = (\r\n    \"ggml-gpt4all-j-v1.3-groovy.bin\"  # replace with your desired local file path\r\n)\r\n\r\ncallbacks = [StreamingStdOutCallbackHandler()]\r\nllm = GPT4All(model=local_path, callbacks=callbacks, verbose=True)\r\n\r\nllm_chain = LLMChain(prompt=prompt, llm=llm)\r\n\r\nquestion = \"What NFL team won the Super Bowl in the year Justin Bieber was born?\"\r\n\r\nllm_chain.run(question)\r\n\r\n\u6267\u884c\u7684\u7ed3\u679c\u5982\u4e0b\uff1a\r\nTypeError: GPT4All.generate() got an unexpected keyword argument 'n_ctx'\r\n\r\n\u5f53\u6211\u52a0\u4e0a\u53c2\u6570 max_tokens=200 \u65f6\uff1allm = GPT4All(model=local_path, max_tokens=200, callbacks=callbacks, verbose=True)\r\n\u51fa\u73b0\u5982\u4e0b\u7ed3\u679c\uff1a\r\nValidationError: 1 validation error for GPT4All\r\nmax_tokens\r\n  extra fields not permitted (type=value_error.extra)\n\n### Expected behavior\n\ncallbacks = [StreamingStdOutCallbackHandler()]\r\nllm = GPT4All(model=local_path, max_tokens=200, callbacks=callbacks, verbose=True)\r\nllm_chain = LLMChain(prompt=prompt, llm=llm)\r\nquestion = \"What NFL team won the Super Bowl in the year Justin Bieber was born?\"\r\n\r\nllm_chain.run(question)\r\n\r\n#\u53ef\u4ee5\u8f93\u51fa\u6b63\u786e\u7ed3\u679c",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7268/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7268/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7267",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7267/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7267/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7267/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7267",
        "id": 1791131382,
        "node_id": "PR_kwDOIPDwls5Uydb7",
        "number": 7267,
        "title": "FLARE Example notebook: switch to named arg to pass pydantic validation",
        "user": {
            "login": "hemidactylus",
            "id": 14221764,
            "node_id": "MDQ6VXNlcjE0MjIxNzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/14221764?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemidactylus",
            "html_url": "https://github.com/hemidactylus",
            "followers_url": "https://api.github.com/users/hemidactylus/followers",
            "following_url": "https://api.github.com/users/hemidactylus/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemidactylus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemidactylus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemidactylus/subscriptions",
            "organizations_url": "https://api.github.com/users/hemidactylus/orgs",
            "repos_url": "https://api.github.com/users/hemidactylus/repos",
            "events_url": "https://api.github.com/users/hemidactylus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemidactylus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T09:05:53Z",
        "updated_at": "2023-08-31T00:05:49Z",
        "closed_at": "2023-07-06T13:32:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7267",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7267",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7267.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7267.patch",
            "merged_at": "2023-07-06T13:32:00Z"
        },
        "body": "Adding the name of the parameter to comply with latest requirements by Pydantic usage for BaseModels.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7267/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7267/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7266",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7266/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7266/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7266/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7266",
        "id": 1791093877,
        "node_id": "PR_kwDOIPDwls5UyVjV",
        "number": 7266,
        "title": "refactor BedrockEmbeddings class",
        "user": {
            "login": "jeff2go",
            "id": 6629280,
            "node_id": "MDQ6VXNlcjY2MjkyODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6629280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeff2go",
            "html_url": "https://github.com/jeff2go",
            "followers_url": "https://api.github.com/users/jeff2go/followers",
            "following_url": "https://api.github.com/users/jeff2go/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeff2go/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeff2go/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeff2go/subscriptions",
            "organizations_url": "https://api.github.com/users/jeff2go/orgs",
            "repos_url": "https://api.github.com/users/jeff2go/repos",
            "events_url": "https://api.github.com/users/jeff2go/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeff2go/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T08:43:14Z",
        "updated_at": "2023-07-06T15:56:31Z",
        "closed_at": "2023-07-06T15:56:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7266",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7266",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7266.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7266.patch",
            "merged_at": "2023-07-06T15:56:31Z"
        },
        "body": "#### Description\r\nrefactor BedrockEmbeddings class to clean code as below:\r\n\r\n1. inline content type and accept\r\n2. rewrite input_body as a dictionary literal\r\n3. no need to declare embeddings variable, so remove it\r\n\r\n#### Tag maintainer\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7266/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7266/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7264",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7264/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7264/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7264/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7264",
        "id": 1791034515,
        "node_id": "PR_kwDOIPDwls5UyIyk",
        "number": 7264,
        "title": "Remove whitespace in filename",
        "user": {
            "login": "troilus-canva",
            "id": 55678940,
            "node_id": "MDQ6VXNlcjU1Njc4OTQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/55678940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/troilus-canva",
            "html_url": "https://github.com/troilus-canva",
            "followers_url": "https://api.github.com/users/troilus-canva/followers",
            "following_url": "https://api.github.com/users/troilus-canva/following{/other_user}",
            "gists_url": "https://api.github.com/users/troilus-canva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/troilus-canva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/troilus-canva/subscriptions",
            "organizations_url": "https://api.github.com/users/troilus-canva/orgs",
            "repos_url": "https://api.github.com/users/troilus-canva/repos",
            "events_url": "https://api.github.com/users/troilus-canva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/troilus-canva/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T08:05:03Z",
        "updated_at": "2023-07-07T00:10:05Z",
        "closed_at": "2023-07-06T15:55:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7264",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7264",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7264.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7264.patch",
            "merged_at": "2023-07-06T15:55:43Z"
        },
        "body": "Rename `langchain/tools/office365/__init__ .py` to `langchain/tools/office365/__init__.py`\r\n\r\n@baskaryan\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7264/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7264/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7263",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7263/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7263/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7263/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7263",
        "id": 1791027017,
        "node_id": "PR_kwDOIPDwls5UyHL2",
        "number": 7263,
        "title": "Fix inconsistent behavior of `CharacterTextSplitter` when changing `keep_separator`",
        "user": {
            "login": "mmz-001",
            "id": 70096033,
            "node_id": "MDQ6VXNlcjcwMDk2MDMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/70096033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mmz-001",
            "html_url": "https://github.com/mmz-001",
            "followers_url": "https://api.github.com/users/mmz-001/followers",
            "following_url": "https://api.github.com/users/mmz-001/following{/other_user}",
            "gists_url": "https://api.github.com/users/mmz-001/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mmz-001/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mmz-001/subscriptions",
            "organizations_url": "https://api.github.com/users/mmz-001/orgs",
            "repos_url": "https://api.github.com/users/mmz-001/repos",
            "events_url": "https://api.github.com/users/mmz-001/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mmz-001/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T08:00:08Z",
        "updated_at": "2023-07-06T13:30:04Z",
        "closed_at": "2023-07-06T13:30:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7263",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7263",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7263.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7263.patch",
            "merged_at": "2023-07-06T13:30:04Z"
        },
        "body": "\r\n- Description:\r\n  - When `keep_separator` is `True` the `_split_text_with_regex()` method in `text_splitter` uses regex to split, but when `keep_separator` is `False` it uses `str.split()`. This causes problems when the separator is a special regex character like `.` or `*`. This PR fixes that by using `re.split()` in both cases.\r\n- Issue: #7262 \r\n- Tag maintainer: @baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7263/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7263/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7262",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7262/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7262/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7262/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7262",
        "id": 1791023162,
        "node_id": "I_kwDOIPDwls5qwNg6",
        "number": 7262,
        "title": "Inconsistent behavior of `CharacterTextSplitter` when changing `keep_separator` for special regex characters",
        "user": {
            "login": "mmz-001",
            "id": 70096033,
            "node_id": "MDQ6VXNlcjcwMDk2MDMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/70096033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mmz-001",
            "html_url": "https://github.com/mmz-001",
            "followers_url": "https://api.github.com/users/mmz-001/followers",
            "following_url": "https://api.github.com/users/mmz-001/following{/other_user}",
            "gists_url": "https://api.github.com/users/mmz-001/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mmz-001/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mmz-001/subscriptions",
            "organizations_url": "https://api.github.com/users/mmz-001/orgs",
            "repos_url": "https://api.github.com/users/mmz-001/repos",
            "events_url": "https://api.github.com/users/mmz-001/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mmz-001/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T07:57:36Z",
        "updated_at": "2023-07-06T13:54:13Z",
        "closed_at": "2023-07-06T13:54:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain v0.0.225, Windows, Python 3.10\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\nThe behavior for `CharacterTextSplitter` when changing `keep_separator` when using normal characters is like this:\r\n\r\n```python\r\ntext_splitter = CharacterTextSplitter(\r\n    chunk_size=4,\r\n    chunk_overlap=0,\r\n    separator=\"_\",\r\n    keep_separator=False,\r\n)\r\n\r\ntext_splitter.split_text(\"foo_bar_baz_123\")\r\n# ['foo', 'bar', 'baz', '123']\r\n```\r\n\r\n```python\r\ntext_splitter = CharacterTextSplitter(\r\n    chunk_size=4,\r\n    chunk_overlap=0,\r\n    separator=\"_\",\r\n    keep_separator=True,\r\n)\r\n\r\ntext_splitter.split_text(\"foo_bar_baz_123\")\r\n# ['foo', '_bar', '_baz', '_123']\r\n```\r\n\r\nHowever, when using special regex characters like `.` or `*` the splitter breaks when `keep_separator` is `False`.\r\n\r\n```python\r\ntext_splitter = CharacterTextSplitter(\r\n    chunk_size=4,\r\n    chunk_overlap=0,\r\n    separator=r\"\\.\",\r\n    keep_separator=False,\r\n)\r\n\r\ntext_splitter.split_text(\"foo.bar.baz.123\")\r\n# ['foo.bar.baz.123']\r\n```\r\n\r\nThe special characters should be escaped, otherwise it raises an error. For example, the following code raises an error.\r\n\r\n```python\r\ntext_splitter = CharacterTextSplitter(\r\n    chunk_size=4,\r\n    chunk_overlap=0,\r\n    separator=r\"?\",\r\n    keep_separator=True,\r\n)\r\n\r\ntext_splitter.split_text(\"foo?bar?baz?123\")\r\n```\r\n\r\nI'll make a PR to fix this.\r\n\r\nAlso, the documentation never mentions that the separator should be a regex, I only found out the hard way after getting regex errors on one of the `RecursiveTextSplitter` splitters after updating LangChain. I think we should add a note about this in the documentation or the code.\r\n\r\n\r\n### Expected behavior\r\n\r\n\r\n ```python\r\ntext_splitter = CharacterTextSplitter(\r\n    chunk_size=4,\r\n    chunk_overlap=0,\r\n    separator=r\"\\.\",\r\n    keep_separator=False,\r\n)\r\n\r\ntext_splitter.split_text(\"foo.bar.baz.123\")\r\n# ['foo', 'bar', 'baz', '123']\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7262/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7262/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7261",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7261/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7261/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7261/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7261",
        "id": 1791009500,
        "node_id": "PR_kwDOIPDwls5UyDbj",
        "number": 7261,
        "title": "docs: Fixed typos in Amazon Kendra Retriever documentation",
        "user": {
            "login": "hayao-k",
            "id": 30886141,
            "node_id": "MDQ6VXNlcjMwODg2MTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/30886141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hayao-k",
            "html_url": "https://github.com/hayao-k",
            "followers_url": "https://api.github.com/users/hayao-k/followers",
            "following_url": "https://api.github.com/users/hayao-k/following{/other_user}",
            "gists_url": "https://api.github.com/users/hayao-k/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hayao-k/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hayao-k/subscriptions",
            "organizations_url": "https://api.github.com/users/hayao-k/orgs",
            "repos_url": "https://api.github.com/users/hayao-k/repos",
            "events_url": "https://api.github.com/users/hayao-k/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hayao-k/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T07:49:01Z",
        "updated_at": "2023-07-06T15:56:53Z",
        "closed_at": "2023-07-06T15:56:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7261",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7261",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7261.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7261.patch",
            "merged_at": "2023-07-06T15:56:52Z"
        },
        "body": "## Description\r\nFixed to the official service name Amazon Kendra.\r\n\r\n## Tag maintainer\r\n@baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7261/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7261/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7260",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7260/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7260/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7260/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7260",
        "id": 1791006392,
        "node_id": "I_kwDOIPDwls5qwJa4",
        "number": 7260,
        "title": "Chroma DB Error",
        "user": {
            "login": "aqibamir",
            "id": 73932489,
            "node_id": "MDQ6VXNlcjczOTMyNDg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/73932489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aqibamir",
            "html_url": "https://github.com/aqibamir",
            "followers_url": "https://api.github.com/users/aqibamir/followers",
            "following_url": "https://api.github.com/users/aqibamir/following{/other_user}",
            "gists_url": "https://api.github.com/users/aqibamir/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aqibamir/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aqibamir/subscriptions",
            "organizations_url": "https://api.github.com/users/aqibamir/orgs",
            "repos_url": "https://api.github.com/users/aqibamir/repos",
            "events_url": "https://api.github.com/users/aqibamir/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aqibamir/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-07-06T07:46:56Z",
        "updated_at": "2023-11-24T20:56:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\nError: Please install chromadb as a dependency with, e.g. `npm install -S chromadb`\r\n    at Function.imports (file:///home/aqib/backend-11/vision/node_modules/langchain/dist/vectorstores/chroma.js:160:19)\r\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\r\n    at async Chroma.ensureCollection (file:///home/aqib/backend-11/vision/node_modules/langchain/dist/vectorstores/chroma.js:61:42)\r\n    at async Chroma.addVectors (file:///home/aqib/backend-11/vision/node_modules/langchain/dist/vectorstores/chroma.js:88:28)\r\n    at async Chroma.addDocuments (file:///home/aqib/backend-11/vision/node_modules/langchain/dist/vectorstores/chroma.js:56:9)\r\n    at async Function.fromDocuments (file:///home/aqib/backend-11/vision/node_modules/langchain/dist/vectorstores/chroma.js:145:9)\r\n    at async add (file:///home/aqib/backend-11/vision/vectorStore/db.js:24:5)\r\n    at async run (file:///home/aqib/backend-11/vision/vectorStore/insertDocs.js:6:3)\r\nnode:internal/process/promises:279\r\n            triggerUncaughtException(err, true /* fromPromise */);\r\n            ^\r\n\r\n**_Got this when I console Logged the error_**\r\nReferenceError: fetch is not defined\r\n    at Object.<anonymous> (/home/aqib/backend-11/vision/node_modules/chromadb/dist/main/generated/runtime.js:17:24)\r\n    at Module._compile (node:internal/modules/cjs/loader:1196:14)\r\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1250:10)\r\n    at Module.load (node:internal/modules/cjs/loader:1074:32)\r\n    at Function.Module._load (node:internal/modules/cjs/loader:909:12)\r\n    at Module.require (node:internal/modules/cjs/loader:1098:19)\r\n    at require (node:internal/modules/cjs/helpers:108:18)\r\n    at Object.<anonymous> (/home/aqib/backend-11/vision/node_modules/chromadb/dist/main/generated/api.js:17:19)\r\n    at Module._compile (node:internal/modules/cjs/loader:1196:14)\r\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1250:10)\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nCall any Chroma method to reproduce this issue\r\n\r\n### Expected behavior\r\n\r\nIt should've inserted the documents",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7260/reactions",
            "total_count": 5,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 3
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7260/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7259",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7259/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7259/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7259/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7259",
        "id": 1790985762,
        "node_id": "I_kwDOIPDwls5qwEYi",
        "number": 7259,
        "title": "Issue: confusion about `Document` or string input for `embed_documents` function ",
        "user": {
            "login": "NeuralFlux",
            "id": 40491005,
            "node_id": "MDQ6VXNlcjQwNDkxMDA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/40491005?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NeuralFlux",
            "html_url": "https://github.com/NeuralFlux",
            "followers_url": "https://api.github.com/users/NeuralFlux/followers",
            "following_url": "https://api.github.com/users/NeuralFlux/following{/other_user}",
            "gists_url": "https://api.github.com/users/NeuralFlux/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NeuralFlux/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NeuralFlux/subscriptions",
            "organizations_url": "https://api.github.com/users/NeuralFlux/orgs",
            "repos_url": "https://api.github.com/users/NeuralFlux/repos",
            "events_url": "https://api.github.com/users/NeuralFlux/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NeuralFlux/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-06T07:32:37Z",
        "updated_at": "2023-10-05T17:49:36Z",
        "closed_at": "2023-10-05T17:49:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI'm using the `OpenAIEmbeddings` object to create embeddings for my list of documents. While it expects a list of strings, the `embed_documents` function seems misleading as to accept a list of documents. As a result, passing a list of documents raises `AttributeError` since `Document` objects do not have a `replace` method.\n\n### Suggestion:\n\n1. Add a `replace` method to `Document` (or)\r\n2. Extend the function `embed_documents` to handle `Document` objects (or)\r\n3. Rename the function to suit handling a list of strings\r\n\r\nI will be glad to implement one of them as a first issue!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7259/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7259/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7258",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7258/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7258/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7258/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7258",
        "id": 1790972427,
        "node_id": "PR_kwDOIPDwls5Ux7dr",
        "number": 7258,
        "title": "docs: Update documentation for Wikipedia tool to use WikipediaQueryRun",
        "user": {
            "login": "os1ma",
            "id": 39944763,
            "node_id": "MDQ6VXNlcjM5OTQ0NzYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/39944763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/os1ma",
            "html_url": "https://github.com/os1ma",
            "followers_url": "https://api.github.com/users/os1ma/followers",
            "following_url": "https://api.github.com/users/os1ma/following{/other_user}",
            "gists_url": "https://api.github.com/users/os1ma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/os1ma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/os1ma/subscriptions",
            "organizations_url": "https://api.github.com/users/os1ma/orgs",
            "repos_url": "https://api.github.com/users/os1ma/repos",
            "events_url": "https://api.github.com/users/os1ma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/os1ma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T07:23:17Z",
        "updated_at": "2023-07-06T13:29:39Z",
        "closed_at": "2023-07-06T13:29:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7258",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7258",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7258.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7258.patch",
            "merged_at": "2023-07-06T13:29:38Z"
        },
        "body": "**Description**\r\nIn the following page, \"Wikipedia\" tool is explained.\r\nhttps://python.langchain.com/docs/modules/agents/tools/integrations/wikipedia\r\n\r\nHowever, the WikipediaAPIWrapper being used is not a tool. This PR updated the documentation to use a tool WikipediaQueryRun.\r\n\r\n**Issue**\r\nNone\r\n\r\n**Tag maintainer**\r\nAgents / Tools / Toolkits: @hinthornw\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7258/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7257",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7257/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7257/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7257/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7257",
        "id": 1790935433,
        "node_id": "PR_kwDOIPDwls5Uxzhm",
        "number": 7257,
        "title": "Update supabase match_docs ddl and notebook to use expected id type",
        "user": {
            "login": "ShantanuNair",
            "id": 8559347,
            "node_id": "MDQ6VXNlcjg1NTkzNDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8559347?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShantanuNair",
            "html_url": "https://github.com/ShantanuNair",
            "followers_url": "https://api.github.com/users/ShantanuNair/followers",
            "following_url": "https://api.github.com/users/ShantanuNair/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShantanuNair/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShantanuNair/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShantanuNair/subscriptions",
            "organizations_url": "https://api.github.com/users/ShantanuNair/orgs",
            "repos_url": "https://api.github.com/users/ShantanuNair/repos",
            "events_url": "https://api.github.com/users/ShantanuNair/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShantanuNair/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T06:56:23Z",
        "updated_at": "2023-07-06T13:22:42Z",
        "closed_at": "2023-07-06T13:22:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7257",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7257",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7257.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7257.patch",
            "merged_at": "2023-07-06T13:22:42Z"
        },
        "body": "  - Description: Switch supabase match function DDL to use expected uuid type instead of bigint\r\n  - Issue: https://github.com/hwchase17/langchain/issues/6743, https://github.com/hwchase17/langchain/issues/7179\r\n  - Tag maintainer:  @rlancemartin, @eyurtsev\r\n  - Twitter handle: https://twitter.com/ShantanuNair",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7257/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7257/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7256",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7256/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7256/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7256/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7256",
        "id": 1790926592,
        "node_id": "PR_kwDOIPDwls5UxxqI",
        "number": 7256,
        "title": "Add HumanInputChatModel",
        "user": {
            "login": "amicus-veritatis",
            "id": 81076998,
            "node_id": "MDQ6VXNlcjgxMDc2OTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/81076998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amicus-veritatis",
            "html_url": "https://github.com/amicus-veritatis",
            "followers_url": "https://api.github.com/users/amicus-veritatis/followers",
            "following_url": "https://api.github.com/users/amicus-veritatis/following{/other_user}",
            "gists_url": "https://api.github.com/users/amicus-veritatis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amicus-veritatis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amicus-veritatis/subscriptions",
            "organizations_url": "https://api.github.com/users/amicus-veritatis/orgs",
            "repos_url": "https://api.github.com/users/amicus-veritatis/repos",
            "events_url": "https://api.github.com/users/amicus-veritatis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amicus-veritatis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T06:49:09Z",
        "updated_at": "2023-07-06T13:21:04Z",
        "closed_at": "2023-07-06T13:21:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7256",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7256",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7256.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7256.patch",
            "merged_at": "2023-07-06T13:21:03Z"
        },
        "body": "  - Description: This is a chat model equivalent of HumanInputLLM. An example notebook is also added.\r\n  - Tag maintainer: @hwchase17, @baskaryan\r\n  - Twitter handle: N/A",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7256/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7256/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7255",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7255/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7255/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7255/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7255",
        "id": 1790892343,
        "node_id": "I_kwDOIPDwls5qvtk3",
        "number": 7255,
        "title": "OpenAI Functions Agent not asking required parameter value",
        "user": {
            "login": "satishmd",
            "id": 47328541,
            "node_id": "MDQ6VXNlcjQ3MzI4NTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/47328541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/satishmd",
            "html_url": "https://github.com/satishmd",
            "followers_url": "https://api.github.com/users/satishmd/followers",
            "following_url": "https://api.github.com/users/satishmd/following{/other_user}",
            "gists_url": "https://api.github.com/users/satishmd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/satishmd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/satishmd/subscriptions",
            "organizations_url": "https://api.github.com/users/satishmd/orgs",
            "repos_url": "https://api.github.com/users/satishmd/repos",
            "events_url": "https://api.github.com/users/satishmd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/satishmd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T06:19:57Z",
        "updated_at": "2023-10-12T16:06:00Z",
        "closed_at": "2023-10-12T16:05:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I was using openai functions agent with custom functions , the custom function(loan eligibility) needs three augments , state, age and income .\r\n\r\nwhen i run the agent with question \"how much can i borrow in state CA?\" , it is directly calling function without asking age and income from the user .\r\n\r\nbelow is the error \r\n\r\npydantic.error_wrappers.ValidationError: 2 validation errors for LoanEligibilitySchema\r\nage\r\n  field required (type=value_error.missing)\r\nincome\r\n  field required (type=value_error.missing)\r\n\r\n\r\nhow to fix this ?\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7255/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7255/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7254",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7254/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7254/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7254/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7254",
        "id": 1790798010,
        "node_id": "I_kwDOIPDwls5qvWi6",
        "number": 7254,
        "title": "Structured Chat Agent cannot save_context when memory has additional input variables",
        "user": {
            "login": "rishniratnam",
            "id": 26684283,
            "node_id": "MDQ6VXNlcjI2Njg0Mjgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/26684283?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rishniratnam",
            "html_url": "https://github.com/rishniratnam",
            "followers_url": "https://api.github.com/users/rishniratnam/followers",
            "following_url": "https://api.github.com/users/rishniratnam/following{/other_user}",
            "gists_url": "https://api.github.com/users/rishniratnam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rishniratnam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rishniratnam/subscriptions",
            "organizations_url": "https://api.github.com/users/rishniratnam/orgs",
            "repos_url": "https://api.github.com/users/rishniratnam/repos",
            "events_url": "https://api.github.com/users/rishniratnam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rishniratnam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T04:49:18Z",
        "updated_at": "2023-10-12T16:06:05Z",
        "closed_at": "2023-10-12T16:06:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain 0.0.225, Python 3.10, Windows\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI am creating a structured chat agent using an `AgentExecutor.from_agent_and_tools`. I have added a custom variable `new_variable` to `input_variables`, and followed the instructions on how to add memory as per here: https://python.langchain.com/docs/modules/agents/agent_types/structured_chat\r\n\r\n`def get_agent_executor(llm: ChatOpenAI, tools: list[Tool], chat_history: MessagesPlaceholder, memory: ConversationBufferMemory) -> AgentExecutor:\r\n    input_variables = [\"input\", \"agent_scratchpad\", \"chat_history\", \"new_variable\"]\r\n    prefix = CUSTOM_PREFIX\r\n    suffix = CUSTOM_SUFFIX\r\n    custom_prompt = StructuredChatAgent.create_prompt(tools, prefix=prefix, suffix=suffix,\r\n                                                      input_variables=input_variables, memory_prompts=[chat_history])\r\n    llm_chain = LLMChain(llm=llm, prompt=custom_prompt, verbose=True)\r\n    convo_agent = StructuredChatAgent(llm_chain=llm_chain)\r\n    agent_executor = AgentExecutor.from_agent_and_tools(agent=convo_agent, tools=tools, verbose=True, max_iterations=1,\r\n                                                        memory=memory, memory_prompts=[chat_history], input_variables=input_variables,\r\n                                                        handle_parsing_errors=\"Check your output and make sure it is a markdown code snippet of a json blob with a single action!\")\r\n\r\n    return agent_executor`\r\n    \r\n    This agent crashes every time at the end of the first iteration:\r\n    `final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    self.memory.save_context(inputs, outputs)\r\n      input_str, output_str = self._get_input_output(inputs, outputs)\r\n    prompt_input_key = get_prompt_input_key(inputs, self.memory_variables)\r\n  raise ValueError(f\"One input key expected got {prompt_input_keys}\")\r\nValueError: One input key expected got ['example_good_page', 'input']`\r\n\r\n### Expected behavior\r\n\r\nsave_context without hiccup",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7254/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7254/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7253",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7253/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7253/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7253/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7253",
        "id": 1790785408,
        "node_id": "PR_kwDOIPDwls5UxTOR",
        "number": 7253,
        "title": "Add verbose parameter for llamacpp",
        "user": {
            "login": "teleprint-me",
            "id": 77757836,
            "node_id": "MDQ6VXNlcjc3NzU3ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/77757836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/teleprint-me",
            "html_url": "https://github.com/teleprint-me",
            "followers_url": "https://api.github.com/users/teleprint-me/followers",
            "following_url": "https://api.github.com/users/teleprint-me/following{/other_user}",
            "gists_url": "https://api.github.com/users/teleprint-me/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/teleprint-me/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/teleprint-me/subscriptions",
            "organizations_url": "https://api.github.com/users/teleprint-me/orgs",
            "repos_url": "https://api.github.com/users/teleprint-me/repos",
            "events_url": "https://api.github.com/users/teleprint-me/events{/privacy}",
            "received_events_url": "https://api.github.com/users/teleprint-me/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-06T04:35:08Z",
        "updated_at": "2023-07-07T20:44:28Z",
        "closed_at": "2023-07-07T19:08:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7253",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7253",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7253.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7253.patch",
            "merged_at": "2023-07-07T19:08:25Z"
        },
        "body": "**Title:** Add verbose parameter for llamacpp\r\n\r\n**Description:**\r\nThis pull request adds a 'verbose' parameter to the llamacpp module. The 'verbose' parameter, when set to True, will enable the output of detailed logs during the execution of the Llama model. This added parameter can aid in debugging and understanding the internal processes of the module.\r\n\r\nThe verbose parameter is a boolean that prints verbose output to stderr when set to True. By default, the verbose parameter is set to True but can be toggled off if less output is desired. This new parameter has been added to the `validate_environment` method of the `LlamaCpp` class which initializes the `llama_cpp.Llama` API:\r\n\r\n```python\r\nclass LlamaCpp(LLM):\r\n    ...\r\n    @root_validator()\r\n    def validate_environment(cls, values: Dict) -> Dict:\r\n        ...\r\n        model_param_names = [\r\n            ...\r\n            \"verbose\",  # New verbose parameter added\r\n        ]\r\n        ...\r\n        values[\"client\"] = Llama(model_path, **model_params)\r\n        ...\r\n```\r\n\r\n**Issue:** \r\nNot applicable (If there is an issue that this PR resolves, please link to it here)\r\n\r\n**Dependencies:** \r\nNo new dependencies introduced.\r\n\r\n**Maintainer:** \r\nTagging @hinthornw, as this change relates to Tools / Toolkits.\r\n\r\n**Twitter handle:** \r\n(If you want a shout-out on Twitter and have a Twitter handle, mention it here.)\r\n\r\nThis change does not introduce any new features or integrations, so no new tests or notebooks are provided. However, existing tests should cover this new parameter.\r\n\r\nMaintainers, please review at your earliest convenience. Thank you for considering this contribution!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7253/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7253/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7252",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7252/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7252/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7252/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7252",
        "id": 1790785354,
        "node_id": "I_kwDOIPDwls5qvTdK",
        "number": 7252,
        "title": "How to parse docx/pdf file which contains text table and image?Also, we need to classify text table and image, maybe operations are different?thanks ",
        "user": {
            "login": "michaelxu1107",
            "id": 5449634,
            "node_id": "MDQ6VXNlcjU0NDk2MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5449634?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelxu1107",
            "html_url": "https://github.com/michaelxu1107",
            "followers_url": "https://api.github.com/users/michaelxu1107/followers",
            "following_url": "https://api.github.com/users/michaelxu1107/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelxu1107/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelxu1107/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelxu1107/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelxu1107/orgs",
            "repos_url": "https://api.github.com/users/michaelxu1107/repos",
            "events_url": "https://api.github.com/users/michaelxu1107/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelxu1107/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-06T04:35:02Z",
        "updated_at": "2023-10-12T16:06:10Z",
        "closed_at": "2023-10-12T16:06:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7252/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 3
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7252/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7251",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7251/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7251/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7251/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7251",
        "id": 1790771160,
        "node_id": "I_kwDOIPDwls5qvP_Y",
        "number": 7251,
        "title": "How to disable the OpenAI initialization when you're not using an OpenAI model",
        "user": {
            "login": "pradeepdev-1995",
            "id": 41164884,
            "node_id": "MDQ6VXNlcjQxMTY0ODg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/41164884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pradeepdev-1995",
            "html_url": "https://github.com/pradeepdev-1995",
            "followers_url": "https://api.github.com/users/pradeepdev-1995/followers",
            "following_url": "https://api.github.com/users/pradeepdev-1995/following{/other_user}",
            "gists_url": "https://api.github.com/users/pradeepdev-1995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pradeepdev-1995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pradeepdev-1995/subscriptions",
            "organizations_url": "https://api.github.com/users/pradeepdev-1995/orgs",
            "repos_url": "https://api.github.com/users/pradeepdev-1995/repos",
            "events_url": "https://api.github.com/users/pradeepdev-1995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pradeepdev-1995/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-06T04:19:04Z",
        "updated_at": "2023-10-14T20:11:12Z",
        "closed_at": "2023-10-14T20:11:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nhow to disable the OpenAI initialization when you're not using an OpenAI model.\r\n[Please check this issue](https://github.com/hwchase17/langchain/issues/7189#issuecomment-1621931461)\r\n\r\n### Motivation\r\n\r\n I am trying to build a VectorstoreIndexCreator using the following configuration\r\n\r\nembeddings= SentenceTransformerEmbeddings embeddings\r\nvectorstore_cls = Chroma\r\nllm = HuggingfaceHub Model\r\n\r\nNote: I am not using any openai model as llm or embedding purpose\r\n\r\nhere is the code\r\n```\r\n  from langchain.indexes import VectorstoreIndexCreator\r\n  from langchain.vectorstores import Chroma\r\n  from langchain.text_splitter import CharacterTextSplitter\r\n  from langchain.embeddings import SentenceTransformerEmbeddings\r\n  from langchain.llms import HuggingFaceHub\r\n  from langchain.document_loaders import PyPDFLoader\r\n  loader = PyPDFLoader(\"pdffile.pdf\")\r\n\r\n  embeddings =  SentenceTransformerEmbeddings(model_name=\"paraphrase-MiniLM-L6-v2\")\r\n  model = HuggingFaceHub(repo_id=\"facebook/mbart-large-50\",\r\n                       model_kwargs={\"temperature\": 0, \"max_length\":200},\r\n                       huggingfacehub_api_token=HUGGING_FACE_API_KEY)\r\n  index = VectorstoreIndexCreator(\r\n                                  embedding=embeddings,\r\n                                  vectorstore_cls=Chroma,\r\n                                  text_splitter=CharacterTextSplitter(chunk_size=100,chunk_overlap=0)\r\n                                  ).from_loaders([loader])\r\n  result = index.query(llm=model,question=query,chain_type=\"refine\")\r\n```\r\nBut still iam getting the open_ai key dependency error when i run the code\r\n\r\n```\r\nDid not find openai_api_key, please add an environment variable `OPENAI_API_KEY` which contains it, or pass  `openai_api_key` as a named parameter. (type=value_error)\r\n```\r\nusing langchain version: langchain==0.0.219\r\n\r\n### Your contribution\r\n\r\nTo disable the OpenAI initialization when you're not using an OpenAI model",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7251/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7251/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7250",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7250/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7250/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7250/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7250",
        "id": 1790757303,
        "node_id": "PR_kwDOIPDwls5UxNJS",
        "number": 7250,
        "title": "Rename prompt_template => _DEFAULT_GRAPH_QA_TEMPLATE and PROMPT => GRAPH_QA_PROMPT to make consistent with the rest of the files",
        "user": {
            "login": "ozabluda",
            "id": 14060629,
            "node_id": "MDQ6VXNlcjE0MDYwNjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14060629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ozabluda",
            "html_url": "https://github.com/ozabluda",
            "followers_url": "https://api.github.com/users/ozabluda/followers",
            "following_url": "https://api.github.com/users/ozabluda/following{/other_user}",
            "gists_url": "https://api.github.com/users/ozabluda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ozabluda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ozabluda/subscriptions",
            "organizations_url": "https://api.github.com/users/ozabluda/orgs",
            "repos_url": "https://api.github.com/users/ozabluda/repos",
            "events_url": "https://api.github.com/users/ozabluda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ozabluda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-06T04:03:20Z",
        "updated_at": "2023-07-07T06:30:14Z",
        "closed_at": "2023-07-07T06:17:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7250",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7250",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7250.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7250.patch",
            "merged_at": "2023-07-07T06:17:40Z"
        },
        "body": "Rename prompt_template => _DEFAULT_GRAPH_QA_TEMPLATE to make consistent with the rest of the file.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7250/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7250/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7249",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7249/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7249/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7249/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7249",
        "id": 1790747965,
        "node_id": "I_kwDOIPDwls5qvKU9",
        "number": 7249,
        "title": "Does LlamaCPP currently not support the gpu acceleration of mps when n_gpu_layer to 1?",
        "user": {
            "login": "stoneLee81",
            "id": 18001708,
            "node_id": "MDQ6VXNlcjE4MDAxNzA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/18001708?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stoneLee81",
            "html_url": "https://github.com/stoneLee81",
            "followers_url": "https://api.github.com/users/stoneLee81/followers",
            "following_url": "https://api.github.com/users/stoneLee81/following{/other_user}",
            "gists_url": "https://api.github.com/users/stoneLee81/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stoneLee81/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stoneLee81/subscriptions",
            "organizations_url": "https://api.github.com/users/stoneLee81/orgs",
            "repos_url": "https://api.github.com/users/stoneLee81/repos",
            "events_url": "https://api.github.com/users/stoneLee81/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stoneLee81/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-06T03:50:02Z",
        "updated_at": "2023-07-06T03:56:20Z",
        "closed_at": "2023-07-06T03:56:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain : 0.0.223\r\nos: mac Ventura 13.4.1 max\r\npython: 3.11.3\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI have compiled the llama.cpp project into mps, and tested the support for gpu acceleration under mps through the command, but when calling the cpp model in langchain, I found\uff0c When I set n_gpu_layer to 1, the gpu acceleration of mps is not turned on\uff0c below  is the code and output by it.\r\n\r\ncallback_manager = CallbackManager([StreamingStdOutCallbackHandler()])\r\n    llm=LlamaCpp(model_path='./zh-models/33B/ggml-model-q4_K.bin', n_ctx=\"2048\", n_gpu_layers=1, callback_manager = callback_manager, verbose = True)\r\n    llm('tell me a joke')\r\n\r\n`llama_model_load_internal: format     = ggjt v3 (latest)\r\nllama_model_load_internal: n_vocab    = 49954\r\nllama_model_load_internal: n_ctx      = 2048\r\nllama_model_load_internal: n_embd     = 6656\r\nllama_model_load_internal: n_mult     = 256\r\nllama_model_load_internal: n_head     = 52\r\nllama_model_load_internal: n_layer    = 60\r\nllama_model_load_internal: n_rot      = 128\r\nllama_model_load_internal: ftype      = 2 (mostly Q4_0)\r\nllama_model_load_internal: n_ff       = 17920\r\nllama_model_load_internal: model size = 30B\r\nllama_model_load_internal: ggml ctx size =    0.14 MB\r\nllama_model_load_internal: mem required  = 19884.88 MB (+ 3124.00 MB per state)\r\nllama_new_context_with_model: kv self size  = 3120.00 MB\r\nAVX = 0 | AVX2 = 0 | AVX512 = 0 | AVX512_VBMI = 0 | AVX512_VNNI = 0 | FMA = 0 | NEON = 1 | ARM_FMA = 1 | F16C = 0 | FP16_VA = 1 | WASM_SIMD = 0 | BLAS = 1 | SSE3 = 0 | VSX = 0 | \r\n`\r\n\n\n### Expected behavior\n\nsupport mps gpu acceleration",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7249/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7249/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7248",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7248/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7248/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7248/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7248",
        "id": 1790694441,
        "node_id": "PR_kwDOIPDwls5Uw_mb",
        "number": 7248,
        "title": "Re-use Trajectory Evaluator",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T02:46:49Z",
        "updated_at": "2023-07-06T14:00:26Z",
        "closed_at": "2023-07-06T14:00:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7248",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7248",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7248.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7248.patch",
            "merged_at": "2023-07-06T14:00:25Z"
        },
        "body": "Use the trajectory eval chain in the run evaluation implementation and update the prepare inputs method to apply to both asynca nd sync",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7248/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7247",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7247/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7247/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7247/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7247",
        "id": 1790676645,
        "node_id": "PR_kwDOIPDwls5Uw7xH",
        "number": 7247,
        "title": "Make tqdm for OpenAIEmbeddings optional",
        "user": {
            "login": "amicus-veritatis",
            "id": 81076998,
            "node_id": "MDQ6VXNlcjgxMDc2OTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/81076998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amicus-veritatis",
            "html_url": "https://github.com/amicus-veritatis",
            "followers_url": "https://api.github.com/users/amicus-veritatis/followers",
            "following_url": "https://api.github.com/users/amicus-veritatis/following{/other_user}",
            "gists_url": "https://api.github.com/users/amicus-veritatis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amicus-veritatis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amicus-veritatis/subscriptions",
            "organizations_url": "https://api.github.com/users/amicus-veritatis/orgs",
            "repos_url": "https://api.github.com/users/amicus-veritatis/repos",
            "events_url": "https://api.github.com/users/amicus-veritatis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amicus-veritatis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T02:25:59Z",
        "updated_at": "2023-07-06T03:36:02Z",
        "closed_at": "2023-07-06T03:36:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7247",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7247",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7247.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7247.patch",
            "merged_at": "2023-07-06T03:36:01Z"
        },
        "body": "  - Description: I have added a `show_progress_bar` parameter (defaults.to `False`) to the `OpenAIEmbeddings`. If the user sets `show_progress_bar` to `True`, a progress bar will be displayed.\r\n  - Issue: #7246\r\n  - Dependencies: N/A\r\n  - Tag maintainer: @hwchase17, @baskaryan\r\n  - Twitter handle: N/A",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7247/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7247/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7246",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7246/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7246/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7246/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7246",
        "id": 1790672805,
        "node_id": "I_kwDOIPDwls5qu3-l",
        "number": 7246,
        "title": "Make tqdm optional for OpenAIEmbeddings",
        "user": {
            "login": "amicus-veritatis",
            "id": 81076998,
            "node_id": "MDQ6VXNlcjgxMDc2OTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/81076998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amicus-veritatis",
            "html_url": "https://github.com/amicus-veritatis",
            "followers_url": "https://api.github.com/users/amicus-veritatis/followers",
            "following_url": "https://api.github.com/users/amicus-veritatis/following{/other_user}",
            "gists_url": "https://api.github.com/users/amicus-veritatis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amicus-veritatis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amicus-veritatis/subscriptions",
            "organizations_url": "https://api.github.com/users/amicus-veritatis/orgs",
            "repos_url": "https://api.github.com/users/amicus-veritatis/repos",
            "events_url": "https://api.github.com/users/amicus-veritatis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amicus-veritatis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T02:21:17Z",
        "updated_at": "2023-07-06T03:58:55Z",
        "closed_at": "2023-07-06T03:58:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAdd `show_progress_bar` within `OpenAIEmbeddings` class.\n\n### Motivation\n\nSimply speaking, \r\n 1. Showing progress bar within existing progress bar is generally not a good practice. Most of time it will break.\r\n 2. There might be people who want to keep their console quiet.\r\n\n\n### Your contribution\n\nI will make a PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7246/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7246/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7245",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7245/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7245/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7245/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7245",
        "id": 1790619844,
        "node_id": "PR_kwDOIPDwls5UwvJB",
        "number": 7245,
        "title": "fix conversational retrieval docs",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T01:33:53Z",
        "updated_at": "2023-07-06T01:51:34Z",
        "closed_at": "2023-07-06T01:51:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7245",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7245",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7245.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7245.patch",
            "merged_at": "2023-07-06T01:51:33Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7245/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7245/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7244",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7244/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7244/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7244/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7244",
        "id": 1790596768,
        "node_id": "PR_kwDOIPDwls5UwqID",
        "number": 7244,
        "title": "bump ver to 225",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T01:04:27Z",
        "updated_at": "2023-07-06T01:22:19Z",
        "closed_at": "2023-07-06T01:22:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7244",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7244",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7244.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7244.patch",
            "merged_at": "2023-07-06T01:22:18Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7244/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7244/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7243",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7243/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7243/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7243/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7243",
        "id": 1790553866,
        "node_id": "I_kwDOIPDwls5qua8K",
        "number": 7243,
        "title": "DOC: Pinecone functions need more documentation",
        "user": {
            "login": "conboy",
            "id": 24994803,
            "node_id": "MDQ6VXNlcjI0OTk0ODAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24994803?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/conboy",
            "html_url": "https://github.com/conboy",
            "followers_url": "https://api.github.com/users/conboy/followers",
            "following_url": "https://api.github.com/users/conboy/following{/other_user}",
            "gists_url": "https://api.github.com/users/conboy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/conboy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/conboy/subscriptions",
            "organizations_url": "https://api.github.com/users/conboy/orgs",
            "repos_url": "https://api.github.com/users/conboy/repos",
            "events_url": "https://api.github.com/users/conboy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/conboy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T00:15:48Z",
        "updated_at": "2023-10-12T16:06:20Z",
        "closed_at": "2023-10-12T16:06:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nA continuation of #7126,\r\n\r\nPinecone features in Langchain that are not mentioned in Langchain's documentation. https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/pinecone\n\n### Idea or request for content:\n\nAdd documentation for the other Pinecone functions.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7243/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7243/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7242",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7242/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7242/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7242/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7242",
        "id": 1790539904,
        "node_id": "I_kwDOIPDwls5quXiA",
        "number": 7242,
        "title": "Async callback has issues",
        "user": {
            "login": "pnsvk",
            "id": 30823233,
            "node_id": "MDQ6VXNlcjMwODIzMjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/30823233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pnsvk",
            "html_url": "https://github.com/pnsvk",
            "followers_url": "https://api.github.com/users/pnsvk/followers",
            "following_url": "https://api.github.com/users/pnsvk/following{/other_user}",
            "gists_url": "https://api.github.com/users/pnsvk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pnsvk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pnsvk/subscriptions",
            "organizations_url": "https://api.github.com/users/pnsvk/orgs",
            "repos_url": "https://api.github.com/users/pnsvk/repos",
            "events_url": "https://api.github.com/users/pnsvk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pnsvk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-06T00:03:04Z",
        "updated_at": "2023-07-06T12:43:26Z",
        "closed_at": "2023-07-06T09:12:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain Version: 0.0.224\r\nPlatform: Mac\r\nPython Version: 3.10.9\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [x] Callbacks/Tracing\n- [x] Async\n\n### Reproduction\n\nCopy/Paste of example snippet from official documentation:\r\nhttps://python.langchain.com/docs/modules/callbacks/how_to/async_callbacks\r\n\r\nimport asyncio\r\nfrom typing import Any, Dict, List\r\n\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.schema import LLMResult, HumanMessage\r\nfrom langchain.callbacks.base import AsyncCallbackHandler, BaseCallbackHandler\r\nfrom dotenv import load_dotenv\r\n\r\nload_dotenv()\r\n\r\nclass MyCustomSyncHandler(BaseCallbackHandler):\r\n    def on_llm_new_token(self, token: str, **kwargs) -> None:\r\n        print(f\"Sync handler being called in a `thread_pool_executor`: token: {token}\")\r\n\r\n\r\nclass MyCustomAsyncHandler(AsyncCallbackHandler):\r\n    \"\"\"Async callback handler that can be used to handle callbacks from langchain.\"\"\"\r\n\r\n    async def on_llm_start(\r\n        self, serialized: Dict[str, Any], prompts: List[str], **kwargs: Any\r\n    ) -> None:\r\n        \"\"\"Run when chain starts running.\"\"\"\r\n        print(\"zzzz....\")\r\n        await asyncio.sleep(0.3)\r\n        class_name = serialized[\"name\"]\r\n        print(\"Hi! I just woke up. Your llm is starting\")\r\n\r\n    async def on_llm_end(self, response: LLMResult, **kwargs: Any) -> None:\r\n        \"\"\"Run when chain ends running.\"\"\"\r\n        print(\"zzzz....\")\r\n        await asyncio.sleep(0.3)\r\n        print(\"Hi! I just woke up. Your llm is ending\")\r\n\r\n\r\n# To enable streaming, we pass in `streaming=True` to the ChatModel constructor\r\n# Additionally, we pass in a list with our custom handler\r\nchat = ChatOpenAI(\r\n    max_tokens=25,\r\n    streaming=True,\r\n    callbacks=[MyCustomSyncHandler(), MyCustomAsyncHandler()],\r\n)\r\n\r\nasync def main():\r\n    await chat.agenerate([[HumanMessage(content=\"Tell me a joke\")]])\r\n\r\nif __name__ == '__main__':\r\n    asyncio.run(main())\r\n\r\n#####################################################\r\nOutput:\r\n\r\nzzzz....\r\nError in MyCustomAsyncHandler.on_llm_start callback: 'name'\r\nRetrying langchain.chat_models.openai.acompletion_with_retry.<locals>._completion_with_retry in 1.0 seconds as it raised APIConnectionError: Error communicating with OpenAI.\r\nRetrying langchain.chat_models.openai.acompletion_with_retry.<locals>._completion_with_retry in 2.0 seconds as it raised APIConnectionError: Error communicating with OpenAI.\r\nRetrying langchain.chat_models.openai.acompletion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised APIConnectionError: Error communicating with OpenAI.\r\nRetrying langchain.chat_models.openai.acompletion_with_retry.<locals>._completion_with_retry in 8.0 seconds as it raised APIConnectionError: Error communicating with OpenAI.\r\nRetrying langchain.chat_models.openai.acompletion_with_retry.<locals>._completion_with_retry in 16.0 seconds as it raised APIConnectionError: Error communicating with OpenAI.\r\nTraceback (most recent call last):\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/aiohttp/connector.py\", line 980, in _wrap_create_connection\r\n    return await self._loop.create_connection(*args, **kwargs)  # type: ignore[return-value]  # noqa\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/base_events.py\", line 1097, in create_connection\r\n    transport, protocol = await self._create_connection_transport(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/base_events.py\", line 1127, in _create_connection_transport\r\n    await waiter\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/sslproto.py\", line 534, in data_received\r\n    ssldata, appdata = self._sslpipe.feed_ssldata(data)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/sslproto.py\", line 188, in feed_ssldata\r\n    self._sslobj.do_handshake()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/ssl.py\", line 975, in do_handshake\r\n    self._sslobj.do_handshake()\r\nssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:997)\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/openai/api_requestor.py\", line 592, in arequest_raw\r\n    result = await session.request(**request_kwargs)\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/aiohttp/client.py\", line 536, in _request\r\n    conn = await self._connector.connect(\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/aiohttp/connector.py\", line 540, in connect\r\n    proto = await self._create_connection(req, traces, timeout)\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/aiohttp/connector.py\", line 901, in _create_connection\r\n    _, proto = await self._create_direct_connection(req, traces, timeout)\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/aiohttp/connector.py\", line 1206, in _create_direct_connection\r\n    raise last_exc\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/aiohttp/connector.py\", line 1175, in _create_direct_connection\r\n    transp, proto = await self._wrap_create_connection(\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/aiohttp/connector.py\", line 982, in _wrap_create_connection\r\n    raise ClientConnectorCertificateError(req.connection_key, exc) from exc\r\naiohttp.client_exceptions.ClientConnectorCertificateError: Cannot connect to host api.openai.com:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:997)')]\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/pnsvk/my-apps/p_y/llm-apps/async_callbacks.py\", line 49, in <module>\r\n    asyncio.run(main())\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/runners.py\", line 44, in run\r\n    return loop.run_until_complete(main)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/base_events.py\", line 649, in run_until_complete\r\n    return future.result()\r\n  File \"/Users/pnsvk/my-apps/p_y/llm-apps/async_callbacks.py\", line 45, in main\r\n    res = await chat.agenerate([[HumanMessage(content=\"Tell me a joke\")]])\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/langchain/chat_models/base.py\", line 191, in agenerate\r\n    raise exceptions[0]\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/langchain/chat_models/base.py\", line 292, in _agenerate_with_cache\r\n    return await self._agenerate(\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/langchain/chat_models/openai.py\", line 408, in _agenerate\r\n    async for stream_resp in await acompletion_with_retry(\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/langchain/chat_models/openai.py\", line 95, in acompletion_with_retry\r\n    return await _completion_with_retry(**kwargs)\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/tenacity/_asyncio.py\", line 86, in async_wrapped\r\n    return await fn(*args, **kwargs)\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/tenacity/_asyncio.py\", line 48, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/tenacity/__init__.py\", line 362, in iter\r\n    raise retry_exc.reraise()\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/tenacity/__init__.py\", line 195, in reraise\r\n    raise self.last_attempt.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\r\n    return self.__get_result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\r\n    raise self._exception\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/tenacity/_asyncio.py\", line 51, in __call__\r\n    result = await fn(*args, **kwargs)\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/langchain/chat_models/openai.py\", line 93, in _completion_with_retry\r\n    return await llm.client.acreate(**kwargs)\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/openai/api_resources/chat_completion.py\", line 45, in acreate\r\n    return await super().acreate(*args, **kwargs)\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 217, in acreate\r\n    response, _, api_key = await requestor.arequest(\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/openai/api_requestor.py\", line 304, in arequest\r\n    result = await self.arequest_raw(\r\n  File \"/Users/pnsvk/my-venv-3.10/lib/python3.10/site-packages/openai/api_requestor.py\", line 609, in arequest_raw\r\n    raise error.APIConnectionError(\"Error communicating with OpenAI\") from e\r\nopenai.error.APIConnectionError: Error communicating with OpenAI\r\n\n\n### Expected behavior\n\nAs mentioned in the official documentation:\r\n\r\n    zzzz....\r\n    Hi! I just woke up. Your llm is starting\r\n    Sync handler being called in a `thread_pool_executor`: token: \r\n    Sync handler being called in a `thread_pool_executor`: token: Why\r\n    Sync handler being called in a `thread_pool_executor`: token:  don\r\n    Sync handler being called in a `thread_pool_executor`: token: 't\r\n    Sync handler being called in a `thread_pool_executor`: token:  scientists\r\n    Sync handler being called in a `thread_pool_executor`: token:  trust\r\n    Sync handler being called in a `thread_pool_executor`: token:  atoms\r\n    Sync handler being called in a `thread_pool_executor`: token: ?\r\n    Sync handler being called in a `thread_pool_executor`: token:  \r\n    \r\n    \r\n    Sync handler being called in a `thread_pool_executor`: token: Because\r\n    Sync handler being called in a `thread_pool_executor`: token:  they\r\n    Sync handler being called in a `thread_pool_executor`: token:  make\r\n    Sync handler being called in a `thread_pool_executor`: token:  up\r\n    Sync handler being called in a `thread_pool_executor`: token:  everything\r\n    Sync handler being called in a `thread_pool_executor`: token: .\r\n    Sync handler being called in a `thread_pool_executor`: token: \r\n    zzzz....\r\n    Hi! I just woke up. Your llm is ending\r\n\r\n\r\n\r\n\r\n\r\n    LLMResult(generations=[[ChatGeneration(text=\"Why don't scientists trust atoms? \\n\\nBecause they make up everything.\", generation_info=None, message=AIMessage(content=\"Why don't scientists trust atoms? \\n\\nBecause they make up everything.\", additional_kwargs={}, example=False))]], llm_output={'token_usage': {}, 'model_name': 'gpt-3.5-turbo'})",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7242/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7242/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7241",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7241/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7241/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7241/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7241",
        "id": 1790536805,
        "node_id": "PR_kwDOIPDwls5Uwc5n",
        "number": 7241,
        "title": "Add missing token_max in reduce.py acombine_docs",
        "user": {
            "login": "ShantanuNair",
            "id": 8559347,
            "node_id": "MDQ6VXNlcjg1NTkzNDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8559347?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShantanuNair",
            "html_url": "https://github.com/ShantanuNair",
            "followers_url": "https://api.github.com/users/ShantanuNair/followers",
            "following_url": "https://api.github.com/users/ShantanuNair/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShantanuNair/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShantanuNair/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShantanuNair/subscriptions",
            "organizations_url": "https://api.github.com/users/ShantanuNair/orgs",
            "repos_url": "https://api.github.com/users/ShantanuNair/repos",
            "events_url": "https://api.github.com/users/ShantanuNair/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShantanuNair/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-06T00:00:33Z",
        "updated_at": "2023-07-06T01:02:46Z",
        "closed_at": "2023-07-06T01:02:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7241",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7241",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7241.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7241.patch",
            "merged_at": "2023-07-06T01:02:45Z"
        },
        "body": "Replace this comment with:\r\n  - Description: reduce.py reduce chain implementation's acombine_docs call does not propagate token_max. Without this, the async call will end up using 3000 tokens, the default, for the collapse chain.\r\n  - Tag maintainer: @hwchase17 @agola11 @baskaryan \r\n  - Twitter handle: https://twitter.com/ShantanuNair\r\n\r\nRelated PR: https://github.com/hwchase17/langchain/pull/7201 and https://github.com/hwchase17/langchain/pull/7204",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7241/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7241/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7240",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7240/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7240/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7240/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7240",
        "id": 1790519578,
        "node_id": "PR_kwDOIPDwls5UwZHg",
        "number": 7240,
        "title": "Add function call params to invocation params",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-05T23:38:44Z",
        "updated_at": "2023-07-06T20:56:08Z",
        "closed_at": "2023-07-06T20:56:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7240",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7240",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7240.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7240.patch",
            "merged_at": "2023-07-06T20:56:07Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7240/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7240/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7239",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7239/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7239/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7239/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7239",
        "id": 1790462714,
        "node_id": "I_kwDOIPDwls5quEr6",
        "number": 7239,
        "title": "Add Document Index Information for QA Inline Citations",
        "user": {
            "login": "wiskojo",
            "id": 22329910,
            "node_id": "MDQ6VXNlcjIyMzI5OTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/22329910?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wiskojo",
            "html_url": "https://github.com/wiskojo",
            "followers_url": "https://api.github.com/users/wiskojo/followers",
            "following_url": "https://api.github.com/users/wiskojo/following{/other_user}",
            "gists_url": "https://api.github.com/users/wiskojo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wiskojo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wiskojo/subscriptions",
            "organizations_url": "https://api.github.com/users/wiskojo/orgs",
            "repos_url": "https://api.github.com/users/wiskojo/repos",
            "events_url": "https://api.github.com/users/wiskojo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wiskojo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 19,
        "created_at": "2023-07-05T22:46:45Z",
        "updated_at": "2023-10-15T16:28:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nInclude source document index information in the combine document chain prompt. For example in `_get_inputs` of `StuffDocumentChain` we could make the following change (in addition to corresponding changes to `format_document`):\r\n\r\n```\r\n# From\r\ndoc_strings = [format_document(doc, self.document_prompt) for doc in docs]\r\n\r\n# To\r\ndoc_strings = [format_document(doc, i, self.document_prompt) for i, doc in enumerate(docs)]\r\n```\n\n### Motivation\n\nThe point of this change is to enable QA based chains (e.g. `ConversationalRetrievalChain`) to easily do inline citations using the source document's index.\r\n\r\n## Example\r\n\r\n### Prompt\r\n```\r\nContext:\r\n[1] Harrison went to Harvard.\r\n[2] Ankush went to Princeton.\r\n[3] Emma went to Yale.\r\n\r\nQuestion:\r\nWhere did Harrison and Emma go to college?\r\n```\r\n\r\n### Response\r\n```\r\nHarrison went to Harvard\u30101\u3011 and Emma went to Yale\u30103\u3011.\r\n```\r\n\r\nThis type of structure is also found in popular \"QA\" models like Bing Chat and ChatGPT's Browse feature (WebGPT etc.). I feel like there should at least be high-level options to enable something like this without having to make custom modifications/extensions to the existing chains.\r\n\r\nWithout explicitly including these document indices, I find prompting the LLM to cite documents by index could lead to hallucinated citations (e.g. with retrieved `k=4` documents it cites \"[8]\")\r\n\r\n## More Details\r\n\r\nAs far as I can tell, existing QA implementations in Langchain seem to return source documents separately (i.e. `return_source_documents=True`), or at the end of the response (e.g. `{'output_text': ' The president thanked Justice Breyer for his service.\\nSOURCES: 30-pl'}` as in [document-qa-with-sources](https://python.langchain.com/docs/modules/chains/additional/question_answering#document-qa-with-sources)) rather than provide them in-line.\r\n\r\nEven newer approaches using OpenAI's Functions API e.g. from `create_citation_fuzzy_match_chain` and `create_qa_with_sources_chain` do not provide this option.\r\n\r\nThe approach of [QA with sources chain](https://python.langchain.com/docs/modules/chains/additional/openai_functions_retrieval_qa) has a drawback that the LLM has to generate the entire source of the document (e.g. full URL). This is slower because we can just reference the index of the document instead. Also, this is prone to hallucination especially with `gpt-3.5` where fake sources (like URLs) could be generated.\r\n\r\nSimilarly, the method in [Question-Answering Citations](https://python.langchain.com/docs/modules/chains/additional/qa_citations) provides quotes from source documents, but doesn't actually identify which document they're from. Referencing documents by index should help reduce hallucination and generation speed here as well.\n\n### Your contribution\n\nI'm happy to assist with this, but first I'd like to gather feedback on the idea. It's possible that there are existing approaches or best practices that I'm not familiar with, which could facilitate inline citations without additional implementation. If there are any recommendations on how to proceed with this, I'd be interested in having a discussion around that.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7239/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7239/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7238",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7238/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7238/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7238/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7238",
        "id": 1790449906,
        "node_id": "PR_kwDOIPDwls5UwJld",
        "number": 7238,
        "title": "remove arize nb",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-05T22:34:15Z",
        "updated_at": "2023-07-05T22:34:21Z",
        "closed_at": "2023-07-05T22:34:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7238",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7238",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7238.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7238.patch",
            "merged_at": "2023-07-05T22:34:20Z"
        },
        "body": "was causing some issues with docs build",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7238/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7238/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7237",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7237/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7237/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7237/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7237",
        "id": 1790445386,
        "node_id": "PR_kwDOIPDwls5UwInm",
        "number": 7237,
        "title": "Harrison/update anthropic",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-05T22:28:49Z",
        "updated_at": "2023-07-06T01:02:37Z",
        "closed_at": "2023-07-06T01:02:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7237",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7237",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7237.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7237.patch",
            "merged_at": "2023-07-06T01:02:36Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7237/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7237/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]