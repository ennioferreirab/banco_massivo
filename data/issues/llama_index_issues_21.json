[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7288",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7288/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7288/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7288/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7288",
        "id": 1854125066,
        "node_id": "PR_kwDOIWuq585YHIjV",
        "number": 7288,
        "title": "Update MyScale's default index type to `MSTG`",
        "user": {
            "login": "mpskex",
            "id": 8456706,
            "node_id": "MDQ6VXNlcjg0NTY3MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8456706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mpskex",
            "html_url": "https://github.com/mpskex",
            "followers_url": "https://api.github.com/users/mpskex/followers",
            "following_url": "https://api.github.com/users/mpskex/following{/other_user}",
            "gists_url": "https://api.github.com/users/mpskex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mpskex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mpskex/subscriptions",
            "organizations_url": "https://api.github.com/users/mpskex/orgs",
            "repos_url": "https://api.github.com/users/mpskex/repos",
            "events_url": "https://api.github.com/users/mpskex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mpskex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-17T02:08:49Z",
        "updated_at": "2023-08-18T15:33:18Z",
        "closed_at": "2023-08-18T15:33:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7288",
            "html_url": "https://github.com/run-llama/llama_index/pull/7288",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7288.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7288.patch",
            "merged_at": "2023-08-18T15:33:13Z"
        },
        "body": "# Description\r\n\r\nWe update the default index type from IVFFLAT to MSTG, a new vector type developed by MyScale.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nminor change on configuration\r\n\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7288/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7288/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7287",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7287/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7287/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7287/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7287",
        "id": 1854071897,
        "node_id": "I_kwDOIWuq585uguRZ",
        "number": 7287,
        "title": "[Bug]: SentenceSplitter hangs in an infinite loop",
        "user": {
            "login": "sanand0",
            "id": 63734,
            "node_id": "MDQ6VXNlcjYzNzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/63734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sanand0",
            "html_url": "https://github.com/sanand0",
            "followers_url": "https://api.github.com/users/sanand0/followers",
            "following_url": "https://api.github.com/users/sanand0/following{/other_user}",
            "gists_url": "https://api.github.com/users/sanand0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sanand0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sanand0/subscriptions",
            "organizations_url": "https://api.github.com/users/sanand0/orgs",
            "repos_url": "https://api.github.com/users/sanand0/repos",
            "events_url": "https://api.github.com/users/sanand0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sanand0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-17T00:46:22Z",
        "updated_at": "2023-08-18T03:06:11Z",
        "closed_at": "2023-08-18T03:06:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen running the default `VectorStoreIndex.from_documents(docs)` on a specific document (shown below), `StentenceSplitter.split_text()` goes into an infinite loop.\n\n### Version\n\n0.8.3\n\n### Steps to Reproduce\n\nRun\r\n\r\n```shell\r\nexport OPENAI_API_KEY=...\r\npython test.py\r\n```\r\n\r\n... where `test.py` contains:\r\n\r\n```python\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader\r\n\r\ndocs = SimpleDirectoryReader('.', filename_as_id=True).load_data()\r\nindex = VectorStoreIndex.from_documents(docs)\r\n```\r\n\r\n... and the same folder has a `sample.md` that contains this **EXACT TEXT**:\r\n\r\n```md\r\n## March 2020\r\n\r\nL&D Metric (Org) - 2.92%\r\n\r\n| Training Name                                                                                                          | Catergory       | Duration (hrs) | Invitees | Attendance | Target Training Hours | Actual Training Hours | Adoption % |\r\n| ---------------------------------------------------------------------------------------------------------------------- | --------------- | -------------- | -------- | ---------- | --------------------- | --------------------- | ---------- |\r\n| [Overview of Data Analytics](https://gramener.tekstac.com/course/view.php?id=178)                                      | Technical       | 1              | 23       | 10         | 23                    | 10                    | 43.5       |\r\n| [Sales & Learning Best Practices - Introduction to OTT Platforms](https://gramener.tekstac.com/course/view.php?id=180) | Technical       | 0.5            | 16       | 12         | 8                     | 6                     | 75         |\r\n| Leading Through OKRs                                                                                                   | Lifeskill       | 1              | 1        | 1          | 1                     | 1                     | 100        |\r\n| COVID: Lockdown Awareness Session                                                                                      | Lifeskill       | 2              | 1        | 1          | 2                     | 2                     | 100        |\r\n| Navgati Interview                                                                                                      | Lifeskill       | 2              | 6        | 6          | 12                    | 12                    | 100        |\r\n| [leadership Summit](https://gramener.tekstac.com/course/view.php?id=177)                                               | Leadership      | 18             | 42       | 42         | 756                   | 756                   | 100        |\r\n| AWS - AI/ML - Online Conference                                                                                        | Project Related | 15             | 2        | 2          | 30                    | 30                    | 100        |\r\n```\r\n\r\nThis hangs in an infinite loop.\n\n### Relevant Logs/Tracbacks\n\n```shell\n$ python test.py \r\nTraceback (most recent call last):\r\n  File \"C:\\code\\cto\\learn.gramener.com\\killme\\test.py\", line 4, in <module>\r\n    index = VectorStoreIndex.from_documents(docs)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Anand\\.conda\\envs\\gramex\\Lib\\site-packages\\llama_index\\indices\\base.py\", line 98, in from_documents\r\n    nodes = service_context.node_parser.get_nodes_from_documents(\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Anand\\.conda\\envs\\gramex\\Lib\\site-packages\\llama_index\\node_parser\\simple.py\", line 89, in get_nodes_from_documents\r\n    nodes = get_nodes_from_document(\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Anand\\.conda\\envs\\gramex\\Lib\\site-packages\\llama_index\\node_parser\\node_utils.py\", line 90, in get_nodes_from_document\r\n    text_splits = text_splitter.split_text_metadata_aware(\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Anand\\.conda\\envs\\gramex\\Lib\\site-packages\\llama_index\\text_splitter\\sentence_splitter.py\", line 70, in split_text_metadata_aware\r\n    return self._split_text(text, chunk_size=effective_chunk_size)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Anand\\.conda\\envs\\gramex\\Lib\\site-packages\\llama_index\\text_splitter\\sentence_splitter.py\", line 88, in _split_text\r\n    chunks = self._merge(splits, chunk_size)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Anand\\.conda\\envs\\gramex\\Lib\\site-packages\\llama_index\\text_splitter\\sentence_splitter.py\", line 138, in _merge\r\n    cur_len = len(self.tokenizer(cur_token.text))\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Anand\\.conda\\envs\\gramex\\Lib\\site-packages\\tiktoken\\core.py\", line 120, in encode\r\n    return self._core_bpe.encode(text, allowed_special)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nKeyboardInterrupt\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7287/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7287/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7286",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7286/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7286/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7286/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7286",
        "id": 1853912794,
        "node_id": "PR_kwDOIWuq585YGbrb",
        "number": 7286,
        "title": "Update milvus and add testcases",
        "user": {
            "login": "filip-halt",
            "id": 81822489,
            "node_id": "MDQ6VXNlcjgxODIyNDg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/81822489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/filip-halt",
            "html_url": "https://github.com/filip-halt",
            "followers_url": "https://api.github.com/users/filip-halt/followers",
            "following_url": "https://api.github.com/users/filip-halt/following{/other_user}",
            "gists_url": "https://api.github.com/users/filip-halt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/filip-halt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/filip-halt/subscriptions",
            "organizations_url": "https://api.github.com/users/filip-halt/orgs",
            "repos_url": "https://api.github.com/users/filip-halt/repos",
            "events_url": "https://api.github.com/users/filip-halt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/filip-halt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-16T21:12:12Z",
        "updated_at": "2023-09-08T20:13:54Z",
        "closed_at": "2023-09-08T20:13:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7286",
            "html_url": "https://github.com/run-llama/llama_index/pull/7286",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7286.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7286.patch",
            "merged_at": "2023-09-08T20:13:54Z"
        },
        "body": "# Description\r\n\r\nUpdate Milvus to add compatibility with dynamic schema and filter support. Requires new connection parameters and new collection settings for already existing collections.\r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7286/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7286/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7285",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7285/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7285/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7285/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7285",
        "id": 1853776788,
        "node_id": "PR_kwDOIWuq585YF-Br",
        "number": 7285,
        "title": "add api_type kwarg to OpenAI LLM class",
        "user": {
            "login": "sourabhdesai",
            "id": 3005241,
            "node_id": "MDQ6VXNlcjMwMDUyNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3005241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sourabhdesai",
            "html_url": "https://github.com/sourabhdesai",
            "followers_url": "https://api.github.com/users/sourabhdesai/followers",
            "following_url": "https://api.github.com/users/sourabhdesai/following{/other_user}",
            "gists_url": "https://api.github.com/users/sourabhdesai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sourabhdesai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sourabhdesai/subscriptions",
            "organizations_url": "https://api.github.com/users/sourabhdesai/orgs",
            "repos_url": "https://api.github.com/users/sourabhdesai/repos",
            "events_url": "https://api.github.com/users/sourabhdesai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sourabhdesai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-16T19:16:32Z",
        "updated_at": "2023-08-16T20:34:34Z",
        "closed_at": "2023-08-16T20:23:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7285",
            "html_url": "https://github.com/run-llama/llama_index/pull/7285",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7285.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7285.patch",
            "merged_at": "2023-08-16T20:23:18Z"
        },
        "body": "# Description\r\n\r\nadd api_type kwarg to OpenAI LLM class. Really shouldve just included this in my previous PR.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7132\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7285/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7285/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7284",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7284/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7284/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7284/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7284",
        "id": 1853732332,
        "node_id": "PR_kwDOIWuq585YF0UV",
        "number": 7284,
        "title": "fix from_service_context resolving the embed model",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-16T18:39:59Z",
        "updated_at": "2023-08-16T19:01:29Z",
        "closed_at": "2023-08-16T19:01:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7284",
            "html_url": "https://github.com/run-llama/llama_index/pull/7284",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7284.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7284.patch",
            "merged_at": "2023-08-16T19:01:28Z"
        },
        "body": "# Description\r\n\r\nGlobal service context was not resolving the embed model properly.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7276\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested global config in a notebook\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7284/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7284/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7283",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7283/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7283/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7283/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7283",
        "id": 1853701897,
        "node_id": "PR_kwDOIWuq585YFtyR",
        "number": 7283,
        "title": "Improve SQL query parsing",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-16T18:15:02Z",
        "updated_at": "2023-08-16T18:23:32Z",
        "closed_at": "2023-08-16T18:23:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7283",
            "html_url": "https://github.com/run-llama/llama_index/pull/7283",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7283.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7283.patch",
            "merged_at": "2023-08-16T18:23:31Z"
        },
        "body": "# Description\r\n\r\nOur SQL parsing can be more robust, to account for models that write a lot of extra text around the actual SQL query code.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7278\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Confirmed working with llama2-chat-13B and our SQL example notebook\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7283/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7283/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7282",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7282/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7282/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7282/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7282",
        "id": 1853602041,
        "node_id": "PR_kwDOIWuq585YFYDZ",
        "number": 7282,
        "title": "update to_tool_list to add coroutine to to_tool_list() tools if available",
        "user": {
            "login": "riccardopinosio",
            "id": 12471993,
            "node_id": "MDQ6VXNlcjEyNDcxOTkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/12471993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/riccardopinosio",
            "html_url": "https://github.com/riccardopinosio",
            "followers_url": "https://api.github.com/users/riccardopinosio/followers",
            "following_url": "https://api.github.com/users/riccardopinosio/following{/other_user}",
            "gists_url": "https://api.github.com/users/riccardopinosio/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/riccardopinosio/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/riccardopinosio/subscriptions",
            "organizations_url": "https://api.github.com/users/riccardopinosio/orgs",
            "repos_url": "https://api.github.com/users/riccardopinosio/repos",
            "events_url": "https://api.github.com/users/riccardopinosio/events{/privacy}",
            "received_events_url": "https://api.github.com/users/riccardopinosio/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5870197048,
                "node_id": "LA_kwDOIWuq588AAAABXeQZOA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/agent%20&%20tools",
                "name": "agent & tools",
                "color": "557417",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-16T16:56:08Z",
        "updated_at": "2023-08-30T09:39:07Z",
        "closed_at": "2023-08-29T04:13:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7282",
            "html_url": "https://github.com/run-llama/llama_index/pull/7282",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7282.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7282.patch",
            "merged_at": "2023-08-29T04:13:48Z"
        },
        "body": "# Description\r\n\r\nRecently @sourabhdesai added support for async tool execution, which is awesome. However, I am in need for BaseToolSpec.to_tool_list() to be able to generate the List[FunctionTool] so that it picks up for each FunctionTool also the async version of the spec_functions for the tool spec, if present.\r\n\r\n@sourabhdesai if you have time I would be grateful for your guidance here as it's my first time looking at this codebase, to see if what I'm doing makes sense. I do wonder if it would make sense to use your adapt_to_async_tool function to provide a default coroutine in BaseToolSpec.to_tool_list() in case one is not available?\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x ] New feature (non-breaking change which adds functionality)\r\n- [ x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ x] Added new unit/integration tests\r\n- [ x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x ] I have performed a self-review of my own code\r\n- [x ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x ] My changes generate no new warnings\r\n- [x ] I have added tests that prove my fix is effective or that my feature works\r\n- [x ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7282/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7282/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7281",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7281/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7281/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7281/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7281",
        "id": 1853591370,
        "node_id": "I_kwDOIWuq585ue49K",
        "number": 7281,
        "title": "[Bug]: ",
        "user": {
            "login": "axz91",
            "id": 100378946,
            "node_id": "U_kgDOBfupQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/100378946?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axz91",
            "html_url": "https://github.com/axz91",
            "followers_url": "https://api.github.com/users/axz91/followers",
            "following_url": "https://api.github.com/users/axz91/following{/other_user}",
            "gists_url": "https://api.github.com/users/axz91/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axz91/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axz91/subscriptions",
            "organizations_url": "https://api.github.com/users/axz91/orgs",
            "repos_url": "https://api.github.com/users/axz91/repos",
            "events_url": "https://api.github.com/users/axz91/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axz91/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-08-16T16:47:37Z",
        "updated_at": "2023-11-23T16:01:39Z",
        "closed_at": "2023-11-23T16:01:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n`---------------------------------------------------------------------------\r\nFileNotFoundError                         Traceback (most recent call last)\r\nCell In[2], line 2\r\n      1 from colabcode import ColabCode\r\n----> 2 ColabCode(port=10000)\r\n\r\nFile [~\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\colabcode\\code.py:42](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/ab880/Documents/GitHub/gtp/~/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0/LocalCache/local-packages/Python311/site-packages/colabcode/code.py:42), in ColabCode.__init__(self, port, password, authtoken, mount_drive, code, lab)\r\n     40     self._run_lab()\r\n     41 if self._code:\r\n---> 42     self._install_code()\r\n     43     self._install_extensions()\r\n     44     self._start_server()\r\n\r\nFile [~\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\colabcode\\code.py:49](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/ab880/Documents/GitHub/gtp/~/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0/LocalCache/local-packages/Python311/site-packages/colabcode/code.py:49), in ColabCode._install_code()\r\n     47 @staticmethod\r\n     48 def _install_code():\r\n---> 49     subprocess.run([\"wget\", \"https://code-server.dev/install.sh\"], stdout=subprocess.PIPE)\r\n     50     subprocess.run(\r\n     51         [\"sh\", \"install.sh\", \"--version\", f\"{CODESERVER_VERSION}\"],\r\n     52         stdout=subprocess.PIPE,\r\n     53     )\r\n\r\nFile [C:\\Program](file:///C:/Program) Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.1008.0_x64__qbz5n2kfra8p0\\Lib\\subprocess.py:548, in run(input, capture_output, timeout, check, *popenargs, **kwargs)\r\n    545     kwargs['stdout'] = PIPE\r\n    546     kwargs['stderr'] = PIPE\r\n...\r\n   1524     self._close_pipe_fds(p2cread, p2cwrite,\r\n   1525                          c2pread, c2pwrite,\r\n   1526                          errread, errwrite)\r\n\r\nFileNotFoundError: [WinError 2] The system cannot find the file specified\r\nOutput is truncated. View as a [scrollable element](command:cellOutput.enableScrolling?91071489-2a4d-42f6-964f-90707a0166b3) or open in a [text editor](command:workbench.action.openLargeOutput?91071489-2a4d-42f6-964f-90707a0166b3). Adjust cell output [settings](command:workbench.action.openSettings?%5B%22%40tag%3AnotebookOutputLayout%22%5D)...`\n\n### Version\n\nlatest\n\n### Steps to Reproduce\n\nindexing failed multiple times \r\n\r\n\r\nindex = VectorStoreIndex.from_documents(documents, client=client,vectorstore=vector_store, storage_context=storage_context, service_context=service_context,show_progress=True) \n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7281/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7281/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7280",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7280/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7280/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7280/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7280",
        "id": 1853514594,
        "node_id": "PR_kwDOIWuq585YFFCd",
        "number": 7280,
        "title": "update text splitter docs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-16T15:54:19Z",
        "updated_at": "2023-08-16T16:10:29Z",
        "closed_at": "2023-08-16T16:10:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7280",
            "html_url": "https://github.com/run-llama/llama_index/pull/7280",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7280.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7280.patch",
            "merged_at": "2023-08-16T16:10:29Z"
        },
        "body": "# Description\r\n\r\nText-splitter docs were slightly stale. Also removed an old file.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7275\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7280/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7280/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7279",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7279/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7279/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7279/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7279",
        "id": 1853488525,
        "node_id": "PR_kwDOIWuq585YE_Um",
        "number": 7279,
        "title": "[version] bump version to 0.8.3",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-16T15:38:28Z",
        "updated_at": "2023-08-16T17:32:59Z",
        "closed_at": "2023-08-16T17:32:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7279",
            "html_url": "https://github.com/run-llama/llama_index/pull/7279",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7279.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7279.patch",
            "merged_at": "2023-08-16T17:32:59Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7279/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7279/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7278",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7278/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7278/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7278/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7278",
        "id": 1853230200,
        "node_id": "I_kwDOIWuq585udgx4",
        "number": 7278,
        "title": "[Bug]: text-to-SQL example fails with the new LlamaCPP fallback",
        "user": {
            "login": "PepppoVal",
            "id": 115074750,
            "node_id": "U_kgDOBtvmvg",
            "avatar_url": "https://avatars.githubusercontent.com/u/115074750?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PepppoVal",
            "html_url": "https://github.com/PepppoVal",
            "followers_url": "https://api.github.com/users/PepppoVal/followers",
            "following_url": "https://api.github.com/users/PepppoVal/following{/other_user}",
            "gists_url": "https://api.github.com/users/PepppoVal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PepppoVal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PepppoVal/subscriptions",
            "organizations_url": "https://api.github.com/users/PepppoVal/orgs",
            "repos_url": "https://api.github.com/users/PepppoVal/repos",
            "events_url": "https://api.github.com/users/PepppoVal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PepppoVal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-16T13:18:09Z",
        "updated_at": "2023-12-14T13:17:31Z",
        "closed_at": "2023-08-16T18:23:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nThe example of a text-to-SQL query that is provided here:\r\nhttps://gpt-index.readthedocs.io/en/latest/examples/index_structs/struct_indices/duckdb_sql_query.html\r\nfails with the latest 0.8.2.x \r\nwhen it tries to use the new default llm, which is \r\n`Using default LlamaCPP=llama2-13b-chat.`\r\nas per the message that shows up when I instantiate a\r\n`NLSQLTableQueryEngine`\r\n\r\nI suspect the expected format of the first response, in which he the SQL query is generated, may be wrong. \r\nThe error message, no matter the query I try to make, is always in the following form:\r\n\r\n```\r\nProgrammingError: (duckdb.ParserException) Parser Error: syntax error at or near \"Sure\"\r\nLINE 1: Sure, I'd be happy to help! Here's the ...\r\n        ^\r\n[SQL: Sure, I'd be happy to help! Here's the query to list all cities in reverse alphabetical order based on the 'city_name' column:\r\nSQLQuery: SELECT city_name FROM city_stats ORDER BY city_name DESC;\r\n\r\nThis will return a list of all cities in the 'city_stats' table, sorted in reverse alphabetical order based on the 'city_name' column.\r\n\r\nNow, let me run the query and provide the results:]\r\n```\n\n### Version\n\n0.8.2.post1\n\n### Steps to Reproduce\n\nsimply through the first example in: https://gpt-index.readthedocs.io/en/latest/examples/index_structs/struct_indices/duckdb_sql_query.html\r\n\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7278/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7278/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7277",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7277/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7277/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7277/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7277",
        "id": 1853209005,
        "node_id": "I_kwDOIWuq585udbmt",
        "number": 7277,
        "title": "Cosine similarity value does not match",
        "user": {
            "login": "AravAct",
            "id": 122975761,
            "node_id": "U_kgDOB1R2EQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/122975761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AravAct",
            "html_url": "https://github.com/AravAct",
            "followers_url": "https://api.github.com/users/AravAct/followers",
            "following_url": "https://api.github.com/users/AravAct/following{/other_user}",
            "gists_url": "https://api.github.com/users/AravAct/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AravAct/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AravAct/subscriptions",
            "organizations_url": "https://api.github.com/users/AravAct/orgs",
            "repos_url": "https://api.github.com/users/AravAct/repos",
            "events_url": "https://api.github.com/users/AravAct/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AravAct/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-16T13:07:11Z",
        "updated_at": "2023-08-17T16:29:53Z",
        "closed_at": "2023-08-17T16:29:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi , I would like to understand the cosine similarity scores. I have tried to replicate the scores using cosine similarity fn and dot product, but I am getting different numbers for the same chunk of text\r\n![image](https://github.com/jerryjliu/llama_index/assets/122975761/fabb3e65-0565-42f1-a736-e4dfc6c1eba0)\r\n\r\nIn the image : scores_llama is similarity score from each node for 10 different nodes using node.score method\r\nllama_cosine and llama_dot are calculated using simple np functions \r\n```from numpy import dot\r\nfrom numpy.linalg import norm\r\n\r\ndef cosine_similarity(A, B):\r\n    return dot(A, B) / (norm(A) * norm(B))\r\n\r\ndef dot_product(A, B):\r\n    return dot(A, B)\r\n```\r\ncosine similarity and dot product value differs from llama-index score (I have not changed the default similarity method)\r\nAcc to the code it should be the same, but it is not\r\n```\r\ndef similarity(\r\n    embedding1: EMB_TYPE,\r\n    embedding2: EMB_TYPE,\r\n    mode: SimilarityMode = SimilarityMode.DEFAULT,\r\n) -> float:\r\n    \"\"\"Get embedding similarity.\"\"\"\r\n    if mode == SimilarityMode.EUCLIDEAN:\r\n        # Using -euclidean distance as similarity to achieve same ranking order\r\n        return -float(np.linalg.norm(np.array(embedding1) - np.array(embedding2)))\r\n    elif mode == SimilarityMode.DOT_PRODUCT:\r\n        product = np.dot(embedding1, embedding2)\r\n        return product\r\n    else:\r\n        product = np.dot(embedding1, embedding2)\r\n        norm = np.linalg.norm(embedding1) * np.linalg.norm(embedding2)\r\n        return product / norm\r\n```\r\nWould like to understand the issue here",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7277/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7276",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7276/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7276/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7276/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7276",
        "id": 1853146764,
        "node_id": "I_kwDOIWuq585udMaM",
        "number": 7276,
        "title": "[Bug]: Since 0.8.2 using a different LLM of OpenAI requests the ApiKey",
        "user": {
            "login": "semoal",
            "id": 22656541,
            "node_id": "MDQ6VXNlcjIyNjU2NTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22656541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semoal",
            "html_url": "https://github.com/semoal",
            "followers_url": "https://api.github.com/users/semoal/followers",
            "following_url": "https://api.github.com/users/semoal/following{/other_user}",
            "gists_url": "https://api.github.com/users/semoal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semoal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semoal/subscriptions",
            "organizations_url": "https://api.github.com/users/semoal/orgs",
            "repos_url": "https://api.github.com/users/semoal/repos",
            "events_url": "https://api.github.com/users/semoal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semoal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-16T12:33:23Z",
        "updated_at": "2023-09-12T21:18:38Z",
        "closed_at": "2023-08-16T19:01:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n```bash\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/Users/sergiomoreno/miniconda3/lib/python3.10/site-packages/tenacity/__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n  File \"/Users/sergiomoreno/miniconda3/lib/python3.10/site-packages/llama_index/embeddings/openai.py\", line 166, in get_embeddings\r\n    data = openai.Embedding.create(input=list_of_text, model=engine, **kwargs).data\r\n  File \"/Users/sergiomoreno/miniconda3/lib/python3.10/site-packages/openai/api_resources/embedding.py\", line 33, in create\r\n    response = super().create(*args, **kwargs)\r\n  File \"/Users/sergiomoreno/miniconda3/lib/python3.10/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 149, in create\r\n    ) = cls.__prepare_create_request(\r\n  File \"/Users/sergiomoreno/miniconda3/lib/python3.10/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 106, in __prepare_create_request\r\n    requestor = api_requestor.APIRequestor(\r\n  File \"/Users/sergiomoreno/miniconda3/lib/python3.10/site-packages/openai/api_requestor.py\", line 138, in __init__\r\n    self.api_key = key or util.default_api_key()\r\n  File \"/Users/sergiomoreno/miniconda3/lib/python3.10/site-packages/openai/util.py\", line 186, in default_api_key\r\n    raise openai.error.AuthenticationError(\r\nopenai.error.AuthenticationError: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n```\n\n### Version\n\n0.8.2\n\n### Steps to Reproduce\n\n```python\r\n llm = Replicate(\r\n        model=SELECTED_MODEL,\r\n        temperature=0.1,\r\n        # override max tokens since it's interpreted\r\n        # as context window instead of max tokens\r\n        context_window=CONTEXT_WINDOW,\r\n        # override completion representation for llama 2\r\n        completion_to_prompt=custom_completion_to_prompt,\r\n        # if using llama 2 for data agents, also override the message representation\r\n        messages_to_prompt=messages_to_prompt,\r\n    )\r\n    embed_model = LangchainEmbedding(\r\n        HuggingFaceBgeEmbeddings(\r\n            model_name=\"BAAI/bge-large-en\",\r\n            encode_kwargs={\"normalize_embeddings\": True},\r\n            cache_folder=\".tmp\",\r\n        ),\r\n        embed_batch_size=15,\r\n    )\r\n    vector_client = weaviate.Client(VECTOR_DB_URL)\r\n    service_context = ServiceContext.from_defaults(\r\n        context_window=CONTEXT_WINDOW,\r\n        llm=llm,\r\n        chunk_size=512,\r\n        embed_model=embed_model,\r\n    )\r\n    set_global_service_context(service_context)\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7276/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7276/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7275",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7275/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7275/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7275/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7275",
        "id": 1853033252,
        "node_id": "I_kwDOIWuq585ucwsk",
        "number": 7275,
        "title": "[Documentation]: SentenceSplitter Usage Pattern fails with unexpected keyword `backup_separators`",
        "user": {
            "login": "oluckyman",
            "id": 642673,
            "node_id": "MDQ6VXNlcjY0MjY3Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/642673?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oluckyman",
            "html_url": "https://github.com/oluckyman",
            "followers_url": "https://api.github.com/users/oluckyman/followers",
            "following_url": "https://api.github.com/users/oluckyman/following{/other_user}",
            "gists_url": "https://api.github.com/users/oluckyman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oluckyman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oluckyman/subscriptions",
            "organizations_url": "https://api.github.com/users/oluckyman/orgs",
            "repos_url": "https://api.github.com/users/oluckyman/repos",
            "events_url": "https://api.github.com/users/oluckyman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oluckyman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-16T11:21:54Z",
        "updated_at": "2023-08-18T11:50:44Z",
        "closed_at": "2023-08-16T16:10:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nIn the [`SetntenceSplitter` section of Text Splitter Customization](https://gpt-index.readthedocs.io/en/stable/core_modules/data_modules/node_parsers/usage_pattern.html#text-splitter-customization) it says:\r\n```\r\nfrom llama_index.text_splitter import SentenceSplitter\r\n\r\ntext_splitter = SentenceSplitter(\r\n  separator=\" \",\r\n  chunk_size=1024,\r\n  chunk_overlap=20,\r\n  backup_separators=[\"\\n\"],\r\n  paragraph_separator=\"\\n\\n\\n\"\r\n)\r\n\r\nnode_parser = SimpleNodeParser(text_splitter=text_splitter)\r\n```\r\nBut when I import `SentenceSplitter` from `llama_index.text_splitter` it imports from [sentence_splitter.py](https://github.com/jerryjliu/llama_index/blob/main/llama_index/text_splitter/sentence_splitter.py) with no `backup_separators` keyword in the signature.\r\n\r\nThere is also `SentenceSplitter` class in [text_splitter.py](https://github.com/jerryjliu/llama_index/blob/32fc54410d6f73ccb47ab5ed6c2244719ee4ccdb/llama_index/text_splitter.py#L276) with different signature that has `backup_separators`.\r\n\r\nSo example from the doc does not work:\r\n> TypeError: SentenceSplitter.__init__() got an unexpected keyword argument 'backup_separators'\r\n\r\nI'm confused, what should I use? \r\n`from llama_index.text_splitter import SentenceSplitter` without `backup_separators`?\r\nor import `SentenceSplitter` from `text_splitter.py` with `backup_separators`?\n\n### Documenation Link\n\nhttps://gpt-index.readthedocs.io/en/stable/core_modules/data_modules/node_parsers/usage_pattern.html#text-splitter-customization",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7275/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7275/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7274",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7274/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7274/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7274/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7274",
        "id": 1852870975,
        "node_id": "PR_kwDOIWuq585YC4yr",
        "number": 7274,
        "title": "Rerun the QdrantIndexDemo.ipynb and fix the formatting",
        "user": {
            "login": "kacperlukawski",
            "id": 2649301,
            "node_id": "MDQ6VXNlcjI2NDkzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2649301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kacperlukawski",
            "html_url": "https://github.com/kacperlukawski",
            "followers_url": "https://api.github.com/users/kacperlukawski/followers",
            "following_url": "https://api.github.com/users/kacperlukawski/following{/other_user}",
            "gists_url": "https://api.github.com/users/kacperlukawski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kacperlukawski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kacperlukawski/subscriptions",
            "organizations_url": "https://api.github.com/users/kacperlukawski/orgs",
            "repos_url": "https://api.github.com/users/kacperlukawski/repos",
            "events_url": "https://api.github.com/users/kacperlukawski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kacperlukawski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-16T09:37:03Z",
        "updated_at": "2023-08-17T18:14:47Z",
        "closed_at": "2023-08-17T18:14:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7274",
            "html_url": "https://github.com/run-llama/llama_index/pull/7274",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7274.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7274.patch",
            "merged_at": "2023-08-17T18:14:37Z"
        },
        "body": "# Description\r\n\r\nQdrant users reported some issues with the formatting in the example notebook. This is simply fixed and I also relaunched the notebook.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7274/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7274/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7273",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7273/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7273/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7273/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7273",
        "id": 1852684034,
        "node_id": "I_kwDOIWuq585ubbcC",
        "number": 7273,
        "title": "[Question]: no progress status showing as show_progress_bar=True",
        "user": {
            "login": "axz91",
            "id": 100378946,
            "node_id": "U_kgDOBfupQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/100378946?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axz91",
            "html_url": "https://github.com/axz91",
            "followers_url": "https://api.github.com/users/axz91/followers",
            "following_url": "https://api.github.com/users/axz91/following{/other_user}",
            "gists_url": "https://api.github.com/users/axz91/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axz91/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axz91/subscriptions",
            "organizations_url": "https://api.github.com/users/axz91/orgs",
            "repos_url": "https://api.github.com/users/axz91/repos",
            "events_url": "https://api.github.com/users/axz91/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axz91/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-16T07:38:30Z",
        "updated_at": "2023-10-24T06:30:23Z",
        "closed_at": "2023-10-24T06:30:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n![image](https://github.com/jerryjliu/llama_index/assets/100378946/7cec638b-398b-4f8b-b9ec-134b14899476)\r\nIt is not working on colab",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7273/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7273/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7272",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7272/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7272/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7272/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7272",
        "id": 1852625666,
        "node_id": "I_kwDOIWuq585ubNMC",
        "number": 7272,
        "title": "[Question]: GPTVectorStoreIndex, index.as_query_engine with 'gpt-3.5-turbo'",
        "user": {
            "login": "malinphy",
            "id": 55249305,
            "node_id": "MDQ6VXNlcjU1MjQ5MzA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/55249305?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malinphy",
            "html_url": "https://github.com/malinphy",
            "followers_url": "https://api.github.com/users/malinphy/followers",
            "following_url": "https://api.github.com/users/malinphy/following{/other_user}",
            "gists_url": "https://api.github.com/users/malinphy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malinphy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malinphy/subscriptions",
            "organizations_url": "https://api.github.com/users/malinphy/orgs",
            "repos_url": "https://api.github.com/users/malinphy/repos",
            "events_url": "https://api.github.com/users/malinphy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malinphy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-16T06:54:20Z",
        "updated_at": "2023-08-16T16:03:49Z",
        "closed_at": "2023-08-16T16:03:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI have created a GPTVectorStoreIndex and saved it to a directory without LLM predictor. In this case, It should use text-'embedding-ada-002' to vectorize the chunks. However, I want to use the saved index as query engine with 'gpt-3.5-turbo' with desired temperature. Is there any way to use  'gpt-3.5-turbo' with. I did try LLMPredictor but it gives error \r\n```\r\nturbo_llm_predictor = LLMPredictor(llm=OpenAI(temperature=0, model_name=\"gpt-3.5-turbo\"))\r\n# service_context = ServiceContext.from_defaults(llm=llm, \r\n#                                                chunk_size=512\r\n#                                                )\r\nfor counter,i in enumerate(index_list):\r\n    index_dir = 'new_indices/'+i\r\n    print(index_dir)\r\n    storage_context = StorageContext.from_defaults(persist_dir=index_dir)\r\n    index = load_index_from_storage(storage_context)\r\n    query_engine = index.as_query_engine()\r\n    response = query_engine.query(\"what are the leading namesmentioned in the document? \",\r\n                                            llm_predictor=turbo_llm_predictor,\r\n                                            # refine_template=CHAT_REFINE_PROMPT,\r\n                                            # similarity_top_k=1\r\n                                            )\r\n    if counter == 0:\r\n        break\r\n```\r\nthis snippet gives \r\nTypeError: query() got an unexpected keyword argument 'llm_predictor'\r\nthanks in advance",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7272/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7272/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7271",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7271/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7271/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7271/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7271",
        "id": 1852098286,
        "node_id": "PR_kwDOIWuq585YARRI",
        "number": 7271,
        "title": "Add CosmosDB-compatible Document and Index Stores",
        "user": {
            "login": "ntflix",
            "id": 35004957,
            "node_id": "MDQ6VXNlcjM1MDA0OTU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/35004957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ntflix",
            "html_url": "https://github.com/ntflix",
            "followers_url": "https://api.github.com/users/ntflix/followers",
            "following_url": "https://api.github.com/users/ntflix/following{/other_user}",
            "gists_url": "https://api.github.com/users/ntflix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ntflix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ntflix/subscriptions",
            "organizations_url": "https://api.github.com/users/ntflix/orgs",
            "repos_url": "https://api.github.com/users/ntflix/repos",
            "events_url": "https://api.github.com/users/ntflix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ntflix/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-15T20:39:56Z",
        "updated_at": "2023-10-05T16:57:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7271",
            "html_url": "https://github.com/run-llama/llama_index/pull/7271",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7271.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7271.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nAdded Document and Index stores compatible with CosmosDB.\r\nMotivation from [existing MongoDB stores being incompatible with CosmosDB](https://github.com/jerryjliu/llama_index/issues/3423#issue-1713357096) due to incompatible naming schemes. Simple change of connection names' `/` characters changed to `_`.\r\n\r\nFixes #3423 \r\n\r\n## Example Usage for CosmosDB URI\r\n```python\r\nfrom llama_index.storage.docstore import CosmosDBDocStore\r\nfrom llama_index.storage.index_store import CosmosDBIndexStore\r\n\r\ndoc_store = CosmosDBDocStore.from_uri(\"mongodb://server:port\")\r\nindex_store = CosmosDBIndexStore.from_uri(\"mongodb://server:port\")\r\n```\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nRan it as a drop-in replacement for MongoDB Document and Index stores in an existing deployment with a CosmosDB backend. Not a major change at all.\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] ~I have made corresponding changes to the documentation~ Added CosmosDB Doc and Index Stores to the `llama_index.storage.docstore` and `llama_index.storage.index_store` packages for use, drop-in replacement where docs are same as existing MongoDB stores\r\n- [X] My changes generate no new warnings\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7271/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7271/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7270",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7270/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7270/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7270/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7270",
        "id": 1851975745,
        "node_id": "PR_kwDOIWuq585X_2oL",
        "number": 7270,
        "title": "Track LlamaIndex usage in Rockset",
        "user": {
            "login": "gadhagod",
            "id": 69025547,
            "node_id": "MDQ6VXNlcjY5MDI1NTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69025547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gadhagod",
            "html_url": "https://github.com/gadhagod",
            "followers_url": "https://api.github.com/users/gadhagod/followers",
            "following_url": "https://api.github.com/users/gadhagod/following{/other_user}",
            "gists_url": "https://api.github.com/users/gadhagod/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gadhagod/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gadhagod/subscriptions",
            "organizations_url": "https://api.github.com/users/gadhagod/orgs",
            "repos_url": "https://api.github.com/users/gadhagod/repos",
            "events_url": "https://api.github.com/users/gadhagod/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gadhagod/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-15T19:09:33Z",
        "updated_at": "2023-08-15T20:59:20Z",
        "closed_at": "2023-08-15T19:16:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7270",
            "html_url": "https://github.com/run-llama/llama_index/pull/7270",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7270.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7270.patch",
            "merged_at": "2023-08-15T19:16:40Z"
        },
        "body": "# Description\r\n\r\nAdds ability to track LlamaIndex usage in Rockset. \r\n\r\nRockset's new python client has the `set_application` method. This method sets a header when requesting the Rockset API. It provides Rockset insight into how people use the Python client. \r\n\r\nTo prevent old clients from failing, it ignores an `AttributeError` (where method `set_application` does not exist).\r\n\r\nThis change will not affect how users interact with the library, so no documentation changes are needed.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n**None of the above.**\r\n\r\n# How Has This Been Tested?\r\n\r\nI ran the Rockset integration test and it passed.\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7270/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7270/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7269",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7269/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7269/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7269/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7269",
        "id": 1851710493,
        "node_id": "I_kwDOIWuq585uXtwd",
        "number": 7269,
        "title": "[Bug]: PandasQueryEngine - Unexpected Indent",
        "user": {
            "login": "yapnel",
            "id": 4315354,
            "node_id": "MDQ6VXNlcjQzMTUzNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4315354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yapnel",
            "html_url": "https://github.com/yapnel",
            "followers_url": "https://api.github.com/users/yapnel/followers",
            "following_url": "https://api.github.com/users/yapnel/following{/other_user}",
            "gists_url": "https://api.github.com/users/yapnel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yapnel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yapnel/subscriptions",
            "organizations_url": "https://api.github.com/users/yapnel/orgs",
            "repos_url": "https://api.github.com/users/yapnel/repos",
            "events_url": "https://api.github.com/users/yapnel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yapnel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-15T15:56:09Z",
        "updated_at": "2023-11-22T22:16:03Z",
        "closed_at": "2023-08-16T18:28:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nThe python code generated has IndentationError: unexpected indent\n\n### Version\n\n0.8.2.post1\n\n### Steps to Reproduce\n\nimport pandas as pd\r\nfrom llama_index.query_engine import PandasQueryEngine\r\nfrom llama_index.llms import LlamaCPP\r\nfrom llama_index import SimpleDirectoryReader, VectorStoreIndex, ServiceContext, StorageContext, load_index_from_storage\r\nfrom llama_index import set_global_service_context\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nfrom llama_index.llms.llama_utils import messages_to_prompt, completion_to_prompt\r\n\r\ndef custom_completion_to_prompt(completion: str) -> str:\r\n    return completion_to_prompt(\r\n        completion,\r\n        system_prompt=(\r\n            \"You are a Q&A assistant. Your goal is to answer questions as \"\r\n            \"accurately as possible is the instructions and context provided.\"\r\n        ),\r\n    )\r\n\r\nllm = LlamaCPP(\r\n    model_path=\"./models/llama-2-7b-chat.ggmlv3.q8_0.bin\",\r\n    temperature=0.9,\r\n    max_new_tokens=4096,\r\n    context_window=4096,\r\n    verbose=True,\r\n    messages_to_prompt=messages_to_prompt,\r\n    completion_to_prompt=custom_completion_to_prompt,    \r\n )\r\n\r\nembeddings = HuggingFaceEmbeddings(model_name='sentence-transformers/all-mpnet-base-v2',model_kwargs={'device': 'cpu'})\r\nservice_context = ServiceContext.from_defaults(chunk_size=512, chunk_overlap=200, llm=llm, embed_model=embeddings)\r\nset_global_service_context(service_context)\r\n\r\ndf = pd.DataFrame(\r\n    {\"city\": [\"Toronto\", \"Tokyo\", \"Berlin\"], \"population\": [2930000, 13960000, 3645000]}\r\n)\r\n\r\nquery_engine = PandasQueryEngine(df=df, verbose=True, service_context=service_context)\r\nresponse = query_engine.query(\"What is the city with the highest population?\")\n\n### Relevant Logs/Tracbacks\n\n```shell\nLlama.generate: prefix-match hit\r\n> Pandas Instructions:\r\n\r\n  Understood! To answer the query \"What is the city with the highest population?\", we can use the `df` dataframe and the `pandas` library to create an executable Python code.\r\nHere's the solution:\r\n\r\npopulation_max = df['population'].max()\r\nprint(\"The city with the highest population is:\", population_max[0])\r\n```\r\nExplanation:\r\n\r\n* We use the `df['population'].max()` method to get the maximum value of the 'population' column in the dataframe. This returns a Series (a pandas data structure similar to a NumPy array) containing the maximum value.\r\n* We then use the `print()` function to output the answer to the query, along with the city name.\r\n* The final line of code is an executable Python expression that can be called using the `eval()` function. This expression will evaluate to the maximum population value and print the corresponding city name.\r\nNote: In this solution, we assume that the dataframe 'df' has a 'population' column containing the population values for each city. If the column name is different in your case, you may need to adjust the code accordingly.\r\n```\r\n> Pandas Output: There was an error running the output as Python code. Error message: unexpected indent (<unknown>, line 1)\r\nTraceback (most recent call last):\r\n  File \"c:\\Temp\\chatCSV\\.venv\\lib\\site-packages\\llama_index\\query_engine\\pandas_query_engine.py\", line 58, in default_output_processor\r\n    tree = ast.parse(output)\r\n  File \"C:\\Program Files\\Python310\\lib\\ast.py\", line 50, in parse\r\n    return compile(source, filename, mode, flags,\r\n  File \"<unknown>\", line 1\r\n    Understood! To answer the query \"What is the city with the highest population?\", we can use the `df` dataframe and the `pandas` library to create an executable Python code.\r\nIndentationError: unexpected indent\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7269/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7269/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7268",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7268/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7268/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7268/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7268",
        "id": 1851690408,
        "node_id": "PR_kwDOIWuq585X-6B4",
        "number": 7268,
        "title": "[fix] Set default json dumps setting to ensure_ascii=False",
        "user": {
            "login": "calvertcao",
            "id": 13072412,
            "node_id": "MDQ6VXNlcjEzMDcyNDEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13072412?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/calvertcao",
            "html_url": "https://github.com/calvertcao",
            "followers_url": "https://api.github.com/users/calvertcao/followers",
            "following_url": "https://api.github.com/users/calvertcao/following{/other_user}",
            "gists_url": "https://api.github.com/users/calvertcao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/calvertcao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/calvertcao/subscriptions",
            "organizations_url": "https://api.github.com/users/calvertcao/orgs",
            "repos_url": "https://api.github.com/users/calvertcao/repos",
            "events_url": "https://api.github.com/users/calvertcao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/calvertcao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-15T15:41:57Z",
        "updated_at": "2023-08-25T03:11:26Z",
        "closed_at": "2023-08-25T03:08:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7268",
            "html_url": "https://github.com/run-llama/llama_index/pull/7268",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7268.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7268.patch",
            "merged_at": "2023-08-25T03:08:42Z"
        },
        "body": "# Description\r\n\r\nSet json dumps setting to ensure_ascii=False in metadata_extractors. If not, the content that goes into openai would be wrong.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7268/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7268/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7267",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7267/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7267/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7267/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7267",
        "id": 1851442258,
        "node_id": "I_kwDOIWuq585uWsRS",
        "number": 7267,
        "title": "[Bug]: Index.vector_store.add uses old id",
        "user": {
            "login": "luka5132",
            "id": 54950273,
            "node_id": "MDQ6VXNlcjU0OTUwMjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/54950273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luka5132",
            "html_url": "https://github.com/luka5132",
            "followers_url": "https://api.github.com/users/luka5132/followers",
            "following_url": "https://api.github.com/users/luka5132/following{/other_user}",
            "gists_url": "https://api.github.com/users/luka5132/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luka5132/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luka5132/subscriptions",
            "organizations_url": "https://api.github.com/users/luka5132/orgs",
            "repos_url": "https://api.github.com/users/luka5132/repos",
            "events_url": "https://api.github.com/users/luka5132/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luka5132/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-15T13:26:46Z",
        "updated_at": "2023-08-16T16:09:37Z",
        "closed_at": "2023-08-16T16:09:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI was rerunning some code that I wrote a couple months ago and got the following error when trying to add nodes to a docstore :\r\n```python\r\nAttributeError: 'TextNode' object has no attribute 'id'\r\n````\r\nThe function I called was: \r\n```python \r\nfirst_index.docstore.add_documents(editted_nodes)\r\n````\r\n\r\nI saw that in `llama_index.schema.TextNode` _\"id\"_ was changed to _\"id\\_\"_.  \r\nHowever this is not updated in `llama_index.vector_stores.simple` .\r\n\r\n\r\n\n\n### Version\n\n0.8.2.post1\n\n### Steps to Reproduce\n\n```python\r\n# data is a folder where some .txt files are stored\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\nindex = GPTVectorStoreIndex.from_documents([documents[0]])\r\nindex2 = GPTVectorStoreIndex.from_documents([documents[1]])\r\n```\r\n\r\n```python\r\n# Get the docstore and nodes from the second index\r\nindex_nodes = index2.index_struct\r\nnodes_dict = index_nodes.nodes_dict\r\ncur_docstore = index2.docstore\r\n\r\n#Store nodes in list \r\n#(Taken from function which also does other things)\r\neditted_nodes = []\r\nfor node in nodes_dict:\r\n  doc_node = cur_docstore.get_node(node)\r\n  editted_nodes.append(doc_node)\r\n\r\n#Try to add the nodes\r\nindex.vector_store.add(editted_nodes)\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7267/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7267/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7266",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7266/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7266/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7266/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7266",
        "id": 1851310974,
        "node_id": "PR_kwDOIWuq585X9pHC",
        "number": 7266,
        "title": "fix(graph_stores/nebulagraph):Modify the openCypher syntax to nGql st\u2026",
        "user": {
            "login": "Gevygg",
            "id": 38530291,
            "node_id": "MDQ6VXNlcjM4NTMwMjkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/38530291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gevygg",
            "html_url": "https://github.com/Gevygg",
            "followers_url": "https://api.github.com/users/Gevygg/followers",
            "following_url": "https://api.github.com/users/Gevygg/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gevygg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gevygg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gevygg/subscriptions",
            "organizations_url": "https://api.github.com/users/Gevygg/orgs",
            "repos_url": "https://api.github.com/users/Gevygg/repos",
            "events_url": "https://api.github.com/users/Gevygg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gevygg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-15T11:52:32Z",
        "updated_at": "2023-08-16T01:24:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7266",
            "html_url": "https://github.com/run-llama/llama_index/pull/7266",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7266.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7266.patch",
            "merged_at": null
        },
        "body": "\u2026atements to adapt to the latest version of nebula\r\n\r\n# Description\r\n\r\nThe original nebulastore encountered a openCypher syntax error when using Nebula 3.4.0 due to Nebula openCypher syntax limitations and needs to be changed to Nebula's nGQL syntax\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nBug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nusing Nebulastore for text2cipher operation\uff0cInitialize KnowledgeGraphQueryEngine and query\r\n\r\n# Suggested Checklist:\r\n\r\n I have performed a self-review of my own code\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7266/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7266/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7265",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7265/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7265/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7265/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7265",
        "id": 1851079338,
        "node_id": "I_kwDOIWuq585uVTqq",
        "number": 7265,
        "title": "[Feature Request]: upload local disk index to cloud",
        "user": {
            "login": "axz91",
            "id": 100378946,
            "node_id": "U_kgDOBfupQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/100378946?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axz91",
            "html_url": "https://github.com/axz91",
            "followers_url": "https://api.github.com/users/axz91/followers",
            "following_url": "https://api.github.com/users/axz91/following{/other_user}",
            "gists_url": "https://api.github.com/users/axz91/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axz91/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axz91/subscriptions",
            "organizations_url": "https://api.github.com/users/axz91/orgs",
            "repos_url": "https://api.github.com/users/axz91/repos",
            "events_url": "https://api.github.com/users/axz91/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axz91/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-15T08:27:25Z",
        "updated_at": "2023-08-31T03:31:56Z",
        "closed_at": "2023-08-31T03:31:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nWhen habve storage_context = StorageContext.from_defaults(persist_dir='./storage'), how to upload the disk index to cloud, thanks. \n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7265/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7265/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7264",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7264/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7264/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7264/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7264",
        "id": 1851070805,
        "node_id": "PR_kwDOIWuq585X816O",
        "number": 7264,
        "title": "Streaming fix",
        "user": {
            "login": "sourabhdesai",
            "id": 3005241,
            "node_id": "MDQ6VXNlcjMwMDUyNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3005241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sourabhdesai",
            "html_url": "https://github.com/sourabhdesai",
            "followers_url": "https://api.github.com/users/sourabhdesai/followers",
            "following_url": "https://api.github.com/users/sourabhdesai/following{/other_user}",
            "gists_url": "https://api.github.com/users/sourabhdesai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sourabhdesai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sourabhdesai/subscriptions",
            "organizations_url": "https://api.github.com/users/sourabhdesai/orgs",
            "repos_url": "https://api.github.com/users/sourabhdesai/repos",
            "events_url": "https://api.github.com/users/sourabhdesai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sourabhdesai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-15T08:19:48Z",
        "updated_at": "2023-08-15T16:07:38Z",
        "closed_at": "2023-08-15T14:30:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7264",
            "html_url": "https://github.com/run-llama/llama_index/pull/7264",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7264.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7264.patch",
            "merged_at": "2023-08-15T14:30:55Z"
        },
        "body": "# Description\r\n\r\nre-adding back [this fix](https://github.com/jerryjliu/llama_index/pull/7164) that must've recently been re-introduced.\r\n\r\nOddly enough, I wasn't able to reproduce the garbling of messages between separate instances of `StreamingAgentChatResponse` objects this time. Even though the same bug exists. But it certainly still works after re-adding this fix  for using `default_factory`.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n\r\n- [x] re-ran existing notebook that was created to test this\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7264/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7264/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7263",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7263/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7263/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7263/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7263",
        "id": 1850865528,
        "node_id": "PR_kwDOIWuq585X8Kmo",
        "number": 7263,
        "title": "accept api_key kwarg in OpenAI LLM class constructor",
        "user": {
            "login": "sourabhdesai",
            "id": 3005241,
            "node_id": "MDQ6VXNlcjMwMDUyNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3005241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sourabhdesai",
            "html_url": "https://github.com/sourabhdesai",
            "followers_url": "https://api.github.com/users/sourabhdesai/followers",
            "following_url": "https://api.github.com/users/sourabhdesai/following{/other_user}",
            "gists_url": "https://api.github.com/users/sourabhdesai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sourabhdesai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sourabhdesai/subscriptions",
            "organizations_url": "https://api.github.com/users/sourabhdesai/orgs",
            "repos_url": "https://api.github.com/users/sourabhdesai/repos",
            "events_url": "https://api.github.com/users/sourabhdesai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sourabhdesai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-15T03:48:03Z",
        "updated_at": "2023-08-15T05:14:04Z",
        "closed_at": "2023-08-15T04:18:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7263",
            "html_url": "https://github.com/run-llama/llama_index/pull/7263",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7263.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7263.patch",
            "merged_at": "2023-08-15T04:18:22Z"
        },
        "body": "# Description\r\n\r\nNot sure when this regressed but seems like we're no longer able to set the API key for an individual `OpenAI` LLM instance with the `api_key` constructor kwarg.\r\n\r\nAdded a notebook cell that shows you can set the key at the per instance level. Shows this by throwing a validation error for that individual instance's instantiation with a bad `api_key` value.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7263/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7263/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7262",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7262/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7262/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7262/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7262",
        "id": 1850829125,
        "node_id": "PR_kwDOIWuq585X8C_W",
        "number": 7262,
        "title": "Update CHANGELOG.md",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-15T02:47:37Z",
        "updated_at": "2023-08-15T02:47:45Z",
        "closed_at": "2023-08-15T02:47:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7262",
            "html_url": "https://github.com/run-llama/llama_index/pull/7262",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7262.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7262.patch",
            "merged_at": "2023-08-15T02:47:44Z"
        },
        "body": "update changelog",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7262/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7262/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7261",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7261/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7261/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7261/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7261",
        "id": 1850794798,
        "node_id": "PR_kwDOIWuq585X77yS",
        "number": 7261,
        "title": "[version] bump to v0.8.2.post1",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-15T01:52:33Z",
        "updated_at": "2023-08-15T02:45:41Z",
        "closed_at": "2023-08-15T02:45:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7261",
            "html_url": "https://github.com/run-llama/llama_index/pull/7261",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7261.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7261.patch",
            "merged_at": "2023-08-15T02:45:41Z"
        },
        "body": "# Description\r\n\r\nLLM should be resolved earlier. Was causing some false LLM disablings\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7261/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7261/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7260",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7260/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7260/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7260/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7260",
        "id": 1850585060,
        "node_id": "PR_kwDOIWuq585X7Nxh",
        "number": 7260,
        "title": "feat(benchmarks): Adapt embedding benchmarks, bench popular models",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-14T21:41:51Z",
        "updated_at": "2023-08-14T22:58:59Z",
        "closed_at": "2023-08-14T22:58:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7260",
            "html_url": "https://github.com/run-llama/llama_index/pull/7260",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7260.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7260.patch",
            "merged_at": "2023-08-14T22:58:59Z"
        },
        "body": "# Description\r\n![image](https://github.com/jerryjliu/llama_index/assets/9093549/107c299d-80aa-4851-bcd4-1d215d464aa9)\r\n\r\nSeems like Bge is competitive with alternatives\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7260/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7260/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7259",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7259/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7259/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7259/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7259",
        "id": 1850581672,
        "node_id": "I_kwDOIWuq585uTaKo",
        "number": 7259,
        "title": "[Question]: Asks for Open AI API key when using local LLM model and embeddings model",
        "user": {
            "login": "nat-tsang",
            "id": 111996917,
            "node_id": "U_kgDOBqzv9Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/111996917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nat-tsang",
            "html_url": "https://github.com/nat-tsang",
            "followers_url": "https://api.github.com/users/nat-tsang/followers",
            "following_url": "https://api.github.com/users/nat-tsang/following{/other_user}",
            "gists_url": "https://api.github.com/users/nat-tsang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nat-tsang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nat-tsang/subscriptions",
            "organizations_url": "https://api.github.com/users/nat-tsang/orgs",
            "repos_url": "https://api.github.com/users/nat-tsang/repos",
            "events_url": "https://api.github.com/users/nat-tsang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nat-tsang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-14T21:38:49Z",
        "updated_at": "2023-08-14T23:19:32Z",
        "closed_at": "2023-08-14T23:19:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI'm trying to use a local llm and hugging face embeddings model, but when I try to load my index from storage, I get an error saying: ValueError: No API key found for OpenAI.\r\nPlease set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\nAPI keys can be found or created at https://platform.openai.com/account/api-keys\r\nI can't find any other ways to load the index store when using a local LLM besides what I have tried to implement in my code. \r\n\r\nindex.py to create index\r\n```\r\ndef localGPT():\r\n    local_llm_path = './ggml-gpt4all-j-v1.3-groovy.bin'\r\n    llm = GPT4All(model=local_llm_path, backend='gptj', streaming=True, max_tokens=512)\r\n    return llm\r\n\r\ndef create_index(docs):\r\n    llm = LLMPredictor(llm=localGPT())\r\n    # embeddings are downloaded and run locally through hugging face\r\n    embed_model = LangchainEmbedding(HuggingFaceEmbeddings(model_name=\"./all-mpnet-base-v2\"))\r\n    prompt_helper = PromptHelper(num_output=256)\r\n    service_context = ServiceContext.from_defaults(\r\n        llm_predictor=llm,\r\n        prompt_helper=prompt_helper,\r\n        embed_model=\"local\",\r\n        node_parser=SimpleNodeParser(text_splitter=TokenTextSplitter(chunk_size=300, chunk_overlap=20))\r\n    )\r\n    index = GPTVectorStoreIndex.from_documents(docs, service_context=service_context)\r\n    index.storage_context.persist()\r\n    return index\r\n\r\ncreate_index(docs)\r\n```\r\n\r\nstreamlit.py to create streamlit ui:\r\n```\r\ndef streamlit_app():\r\n    storage_context = StorageContext.from_defaults(persist_dir='./storage')\r\n    index = load_index_from_storage(storage_context)\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7259/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7259/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7258",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7258/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7258/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7258/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7258",
        "id": 1850488979,
        "node_id": "PR_kwDOIWuq585X64ic",
        "number": 7258,
        "title": "[version] bump to v0.8.2",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-14T20:27:13Z",
        "updated_at": "2023-08-14T20:37:38Z",
        "closed_at": "2023-08-14T20:37:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7258",
            "html_url": "https://github.com/run-llama/llama_index/pull/7258",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7258.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7258.patch",
            "merged_at": "2023-08-14T20:37:38Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7258/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7257",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7257/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7257/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7257/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7257",
        "id": 1850474568,
        "node_id": "PR_kwDOIWuq585X61Yl",
        "number": 7257,
        "title": "make callback manager properly optional for customLLM",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-14T20:16:20Z",
        "updated_at": "2023-08-14T20:25:19Z",
        "closed_at": "2023-08-14T20:25:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7257",
            "html_url": "https://github.com/run-llama/llama_index/pull/7257",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7257.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7257.patch",
            "merged_at": "2023-08-14T20:25:18Z"
        },
        "body": "# Description\r\n\r\nThe callback manager was not properly optional for the `CustomLLM` class. Updated the code + example accordingly.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7257/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7257/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7256",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7256/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7256/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7256/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7256",
        "id": 1850162658,
        "node_id": "PR_kwDOIWuq585X5xbb",
        "number": 7256,
        "title": "update chroma notebook",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-14T16:46:51Z",
        "updated_at": "2023-08-14T16:50:47Z",
        "closed_at": "2023-08-14T16:50:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7256",
            "html_url": "https://github.com/run-llama/llama_index/pull/7256",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7256.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7256.patch",
            "merged_at": "2023-08-14T16:50:46Z"
        },
        "body": "# Description\r\n\r\nThe old version of saving/loading in this notebook was losing the node metadata for some reason \ud83e\udd14 Updated to be more consistent with expected usage + actually happens to fix the issue\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7256/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7256/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7255",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7255/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7255/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7255/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7255",
        "id": 1850136605,
        "node_id": "PR_kwDOIWuq585X5rzh",
        "number": 7255,
        "title": "make llm and embeddings more optional and robust",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-14T16:30:19Z",
        "updated_at": "2023-08-14T18:33:36Z",
        "closed_at": "2023-08-14T18:33:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7255",
            "html_url": "https://github.com/run-llama/llama_index/pull/7255",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7255.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7255.patch",
            "merged_at": "2023-08-14T18:33:35Z"
        },
        "body": "# Description\r\n\r\nIf a user REALLY doesn't want to use embeddings or an LLM, you can now set them to `None` explicitly. \r\n\r\nFurthermore, resolving the `embed_model` has been improved to use appropriate classes for most huggingface models.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7255/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7255/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7254",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7254/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7254/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7254/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7254",
        "id": 1849939908,
        "node_id": "PR_kwDOIWuq585X5CJy",
        "number": 7254,
        "title": "tune prompts to be more general",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-14T14:47:39Z",
        "updated_at": "2023-08-14T22:48:31Z",
        "closed_at": "2023-08-14T18:02:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7254",
            "html_url": "https://github.com/run-llama/llama_index/pull/7254",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7254.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7254.patch",
            "merged_at": "2023-08-14T18:02:31Z"
        },
        "body": "# Description\r\n\r\nThe current default prompts are maybe a little too restrictive and focused on question-answering. Since there are many applications beyond question-answering, the default prompts are updated to be a little more general.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested several types of queries locally\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7254/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7254/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7253",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7253/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7253/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7253/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7253",
        "id": 1849486405,
        "node_id": "PR_kwDOIWuq585X3f8X",
        "number": 7253,
        "title": "fix broken link syntax",
        "user": {
            "login": "czue",
            "id": 66555,
            "node_id": "MDQ6VXNlcjY2NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/66555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/czue",
            "html_url": "https://github.com/czue",
            "followers_url": "https://api.github.com/users/czue/followers",
            "following_url": "https://api.github.com/users/czue/following{/other_user}",
            "gists_url": "https://api.github.com/users/czue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/czue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/czue/subscriptions",
            "organizations_url": "https://api.github.com/users/czue/orgs",
            "repos_url": "https://api.github.com/users/czue/repos",
            "events_url": "https://api.github.com/users/czue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/czue/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-14T10:26:02Z",
        "updated_at": "2023-08-14T15:08:23Z",
        "closed_at": "2023-08-14T15:08:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7253",
            "html_url": "https://github.com/run-llama/llama_index/pull/7253",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7253.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7253.patch",
            "merged_at": "2023-08-14T15:08:23Z"
        },
        "body": "# Description\r\n\r\nFixes this docs syntax on https://gpt-index.readthedocs.io/en/latest/\r\n\r\n![image](https://github.com/czue/llama_index/assets/66555/3161459a-6a89-4951-92ee-bf2d6c703d3e)\r\n\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nViewed the [updated page on Github](https://github.com/czue/llama_index/blob/a0e8569341a6a926b5c73eafaac7704d51cc3f78/docs/index.rst) to confirm the links work and look good.\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have made corresponding changes to the documentation\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7253/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7253/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7252",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7252/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7252/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7252/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7252",
        "id": 1849118744,
        "node_id": "PR_kwDOIWuq585X2Oir",
        "number": 7252,
        "title": "Updated documentation links",
        "user": {
            "login": "anoopshrma",
            "id": 26565263,
            "node_id": "MDQ6VXNlcjI2NTY1MjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/26565263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anoopshrma",
            "html_url": "https://github.com/anoopshrma",
            "followers_url": "https://api.github.com/users/anoopshrma/followers",
            "following_url": "https://api.github.com/users/anoopshrma/following{/other_user}",
            "gists_url": "https://api.github.com/users/anoopshrma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anoopshrma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anoopshrma/subscriptions",
            "organizations_url": "https://api.github.com/users/anoopshrma/orgs",
            "repos_url": "https://api.github.com/users/anoopshrma/repos",
            "events_url": "https://api.github.com/users/anoopshrma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anoopshrma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-14T06:51:42Z",
        "updated_at": "2023-08-15T19:17:08Z",
        "closed_at": "2023-08-15T19:17:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7252",
            "html_url": "https://github.com/run-llama/llama_index/pull/7252",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7252.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7252.patch",
            "merged_at": "2023-08-15T19:17:08Z"
        },
        "body": "# Description\r\n\r\nLinks were not working in the following two cases.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7252/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7252/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7251",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7251/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7251/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7251/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7251",
        "id": 1848665500,
        "node_id": "PR_kwDOIWuq585X0tuy",
        "number": 7251,
        "title": "[version] bump to v0.8.1.post1",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-13T16:59:48Z",
        "updated_at": "2023-08-13T17:09:46Z",
        "closed_at": "2023-08-13T17:09:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7251",
            "html_url": "https://github.com/run-llama/llama_index/pull/7251",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7251.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7251.patch",
            "merged_at": "2023-08-13T17:09:45Z"
        },
        "body": "Small patch to remove debug print",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7251/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7251/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7250",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7250/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7250/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7250/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7250",
        "id": 1848626389,
        "node_id": "I_kwDOIWuq585uL8zV",
        "number": 7250,
        "title": "[Question]: Can I persist metadata in node without using it in the embedding?",
        "user": {
            "login": "kevon217",
            "id": 13077896,
            "node_id": "MDQ6VXNlcjEzMDc3ODk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13077896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevon217",
            "html_url": "https://github.com/kevon217",
            "followers_url": "https://api.github.com/users/kevon217/followers",
            "following_url": "https://api.github.com/users/kevon217/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevon217/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevon217/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevon217/subscriptions",
            "organizations_url": "https://api.github.com/users/kevon217/orgs",
            "repos_url": "https://api.github.com/users/kevon217/repos",
            "events_url": "https://api.github.com/users/kevon217/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevon217/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-13T14:56:28Z",
        "updated_at": "2023-08-15T02:15:58Z",
        "closed_at": "2023-08-15T02:15:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI'm a little confused when using llamaindex in conjunction with chromadb for simple semantic search (WITHOUT an LLM) using a custom embedding model WITHOUT incorporating metadata strings into the embedding. I'd like for my nodes to have a metadata dictionary that I can easily access when I retrieve my node results, however, when I exclude all my metadata keys when creating my nodes ( **exclude_embed_metadata_keys** ), it resets the metadata field to an empty set. The metadata DOES get added to the chromadb node_content field, HOWEVER, in order to access that when I retrieve my node results with a query engine, it's located in a deeper nested field. \r\n\r\nI was hoping the metadata field would have the metadata I'm interested in accessing ( **node['metadata']** ), but it seems to only be stored in the chromadb node info ( **relationships['1']['metadata]** ). _Is this the expected location to access node metadata when using a vector store?_\r\n\r\nBelow is my retrieved node result as a dictionary:\r\n\r\n\r\n{'node': {'id_': 'a5febf45-a445-455a-aac4-db4fb31ecd68',\r\n  'embedding': None,\r\n  'metadata': {},\r\n  'excluded_embed_metadata_keys': ['variable name',\r\n   'title',\r\n   'element type',\r\n   'definition',\r\n   'short description',\r\n   'datatype',\r\n   'input restriction',\r\n   'minimum value',\r\n   'maximum value',\r\n   'data element concept identifiers',\r\n   'data element concept names',\r\n   'permissible values',\r\n   'permissible value descriptions',\r\n   'permissible value concept identifiers',\r\n   'permissible value concept names',\r\n   'unit of measure',\r\n   'preferred question text',\r\n   'creation date',\r\n   'last change date'],\r\n  'excluded_llm_metadata_keys': ['variable name',\r\n   'title',\r\n   'element type',\r\n   'definition',\r\n   'short description',\r\n   'datatype',\r\n   'input restriction',\r\n   'minimum value',\r\n   'maximum value',\r\n   'data element concept identifiers',\r\n   'data element concept names',\r\n   'permissible values',\r\n   'permissible value descriptions',\r\n   'permissible value concept identifiers',\r\n   'permissible value concept names',\r\n   'unit of measure',\r\n   'preferred question text',\r\n   'creation date',\r\n   'last change date'],\r\n  'relationships': {<NodeRelationship.SOURCE: '1'>: {'node_id': 'a4026290-896b-4f4f-a309-5b7a9cbddab5',\r\n    'node_type': None,\r\n    'metadata': {'variable name': 'LEC5LifThrtningIlnesInjryCat',\r\n     'title': 'Life Events Checklist 5 (LEC-5) - Life-threatening Illness or Injury Category',\r\n     'element type': 'Unique Data Element',\r\n     'definition': 'Category of Life-threatening illness or injury is seriously dangerous, and it might even result in death as part the of Life Events Checklist 5 (LEC-5).',\r\n     'short description': 'Category of Life-threatening illness or injury is seriously dangerous, and it might even result in death as part the of Life Events Checklist 5 (LEC-5).',\r\n     'datatype': 'Alphanumeric',\r\n     'input restriction': 'Multiple Pre-Defined Values Selected',\r\n     'minimum value': nan,\r\n     'maximum value': nan,\r\n     'data element concept identifiers': nan,\r\n     'data element concept names': nan,\r\n     'permissible values': 'a|b|c|d|e|f',\r\n     'permissible value descriptions': 'Happened to you personally|You witnessed it happen to someone else|You learned about it happening to a close family member or closefriend|You were exposed to it as part of your job (for example, paramedic, police, military, or other first responder)|You are not sure if it fits|It does not apply to you',\r\n     'permissible value concept identifiers': nan,\r\n     'permissible value concept names': nan,\r\n     'unit of measure': nan,\r\n     'preferred question text': 'Life-threatening illness or injury',\r\n     'creation date': '9/7/2016',\r\n     'last change date': '9/14/2016'},\r\n    'hash': '8f018af5ec5d8d8e0bbe0ea6df6885764d453912c5a0821c2096a6b35aae2e17'}},\r\n  'hash': '44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a',\r\n  'text': 'Life Events Checklist 5 (LEC-5) - Life-threatening Illness or Injury Category',\r\n  'start_char_idx': 0,\r\n  'end_char_idx': 77,\r\n  'text_template': '{metadata_str}\\n\\n{content}',\r\n  'metadata_template': '{key}: {value}',\r\n  'metadata_seperator': '\\n'},\r\n 'score': 0.7744697}",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7250/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7250/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7249",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7249/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7249/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7249/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7249",
        "id": 1848613466,
        "node_id": "PR_kwDOIWuq585X0jhe",
        "number": 7249,
        "title": "Update supabase.py - change def query argument name",
        "user": {
            "login": "tomilagom",
            "id": 7259866,
            "node_id": "MDQ6VXNlcjcyNTk4NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7259866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomilagom",
            "html_url": "https://github.com/tomilagom",
            "followers_url": "https://api.github.com/users/tomilagom/followers",
            "following_url": "https://api.github.com/users/tomilagom/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomilagom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomilagom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomilagom/subscriptions",
            "organizations_url": "https://api.github.com/users/tomilagom/orgs",
            "repos_url": "https://api.github.com/users/tomilagom/repos",
            "events_url": "https://api.github.com/users/tomilagom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomilagom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-13T14:20:00Z",
        "updated_at": "2023-08-13T18:28:06Z",
        "closed_at": "2023-08-13T18:28:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7249",
            "html_url": "https://github.com/run-llama/llama_index/pull/7249",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7249.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7249.patch",
            "merged_at": null
        },
        "body": "change to data. Seems working now.\r\n\r\n# Description\r\n\r\nunknown argument query_vector. Now is changed for data and works fine\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7249/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7249/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7248",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7248/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7248/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7248/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7248",
        "id": 1848480721,
        "node_id": "PR_kwDOIWuq585X0ISR",
        "number": 7248,
        "title": "[version] bump version to 0.8.1",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-13T08:21:26Z",
        "updated_at": "2023-08-13T08:37:19Z",
        "closed_at": "2023-08-13T08:37:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7248",
            "html_url": "https://github.com/run-llama/llama_index/pull/7248",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7248.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7248.patch",
            "merged_at": "2023-08-13T08:37:18Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7248/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7247",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7247/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7247/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7247/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7247",
        "id": 1848467618,
        "node_id": "PR_kwDOIWuq585X0FpL",
        "number": 7247,
        "title": "add ensemble query engine tutorial",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-13T07:46:29Z",
        "updated_at": "2023-08-13T08:16:39Z",
        "closed_at": "2023-08-13T08:16:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7247",
            "html_url": "https://github.com/run-llama/llama_index/pull/7247",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7247.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7247.patch",
            "merged_at": "2023-08-13T08:16:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7247/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7247/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7246",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7246/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7246/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7246/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7246",
        "id": 1848265477,
        "node_id": "I_kwDOIWuq585uKksF",
        "number": 7246,
        "title": "[Bug]:  File \"\\Python\\Python310\\lib\\site-packages\\llama_index\\readers\\llamahub_modules/file/docx/base.py\", line 25, in load_data return [Document(text, extra_info=metadata)]   File \"pydantic\\main.py\", line 332, in pydantic.main.BaseModel.__init__ TypeError: __init__() takes exactly 1 positional argument (2 given)",
        "user": {
            "login": "jlonge4",
            "id": 91354480,
            "node_id": "MDQ6VXNlcjkxMzU0NDgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/91354480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jlonge4",
            "html_url": "https://github.com/jlonge4",
            "followers_url": "https://api.github.com/users/jlonge4/followers",
            "following_url": "https://api.github.com/users/jlonge4/following{/other_user}",
            "gists_url": "https://api.github.com/users/jlonge4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jlonge4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jlonge4/subscriptions",
            "organizations_url": "https://api.github.com/users/jlonge4/orgs",
            "repos_url": "https://api.github.com/users/jlonge4/repos",
            "events_url": "https://api.github.com/users/jlonge4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jlonge4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-12T22:08:22Z",
        "updated_at": "2023-11-19T16:01:34Z",
        "closed_at": "2023-11-19T16:01:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nWhile trying to use the DocxReader or the PDFReader in the following code `PDFReader = download_loader('PDFReader')\r\n    loader = PDFReader()\r\n    documents = loader.load_data(file=Path(os.path.join(PATH_TO_PDFS,file.name)))\r\n    index = VectorStoreIndex.from_documents(documents)`\r\n\r\nI get the error: \r\n\r\nFile \"\\Python\\Python310\\lib\\site-packages\\llama_index\\readers\\llamahub_modules/file/docx/base.py\", line 25, in load_data return [Document(text, extra_info=metadata)]   File \"pydantic\\main.py\", line 332, in pydantic.main.BaseModel.__init__ TypeError: __init__() takes exactly 1 positional argument (2 given)\r\n\r\n### Version\r\n\r\n0.8.0\r\n\r\n### Steps to Reproduce\r\n\r\nWhile trying to use the DocxReader or the PDFReader in the following code `PDFReader = download_loader('PDFReader')\r\n    loader = PDFReader()\r\n    documents = loader.load_data(file=Path(os.path.join(PATH_TO_PDFS,file.name)))\r\n    index = VectorStoreIndex.from_documents(documents)`\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nFile \"\\Python\\Python310\\lib\\site-packages\\llama_index\\readers\\llamahub_modules/file/docx/base.py\", line 25, in load_data return [Document(text, extra_info=metadata)]   File \"pydantic\\main.py\", line 332, in pydantic.main.BaseModel.__init__ TypeError: __init__() takes exactly 1 positional argument (2 given)\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7246/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7246/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7245",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7245/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7245/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7245/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7245",
        "id": 1848231409,
        "node_id": "I_kwDOIWuq585uKcXx",
        "number": 7245,
        "title": "[Question]: combine gpt-3.5-turbo with HuggingFace embedding model",
        "user": {
            "login": "nacho00112",
            "id": 71481304,
            "node_id": "MDQ6VXNlcjcxNDgxMzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/71481304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nacho00112",
            "html_url": "https://github.com/nacho00112",
            "followers_url": "https://api.github.com/users/nacho00112/followers",
            "following_url": "https://api.github.com/users/nacho00112/following{/other_user}",
            "gists_url": "https://api.github.com/users/nacho00112/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nacho00112/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nacho00112/subscriptions",
            "organizations_url": "https://api.github.com/users/nacho00112/orgs",
            "repos_url": "https://api.github.com/users/nacho00112/repos",
            "events_url": "https://api.github.com/users/nacho00112/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nacho00112/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-12T20:43:59Z",
        "updated_at": "2023-08-17T00:48:43Z",
        "closed_at": "2023-08-16T16:09:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nLet's suppose i want to use `gpt-3.5-turbo` but with the huggingface embedding model instead of `ada-embedding-002`, how i can do that?\r\nBy monkeypatching `llama_index.embeddings.utils.resolve_embed_model(embed_model)` to receive `'local'` i could do it but i thought it's better to ask about this here",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7245/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7245/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7244",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7244/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7244/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7244/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7244",
        "id": 1848082887,
        "node_id": "I_kwDOIWuq585uJ4HH",
        "number": 7244,
        "title": "[Bug]: Streamlit and Llama_index - asyncio.Queue for StreamingAgentChatResponse - RuntimeError: There is no current event loop in thread 'ScriptRunner.scriptThread'",
        "user": {
            "login": "InnovatorEsq",
            "id": 141866740,
            "node_id": "U_kgDOCHS29A",
            "avatar_url": "https://avatars.githubusercontent.com/u/141866740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/InnovatorEsq",
            "html_url": "https://github.com/InnovatorEsq",
            "followers_url": "https://api.github.com/users/InnovatorEsq/followers",
            "following_url": "https://api.github.com/users/InnovatorEsq/following{/other_user}",
            "gists_url": "https://api.github.com/users/InnovatorEsq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/InnovatorEsq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/InnovatorEsq/subscriptions",
            "organizations_url": "https://api.github.com/users/InnovatorEsq/orgs",
            "repos_url": "https://api.github.com/users/InnovatorEsq/repos",
            "events_url": "https://api.github.com/users/InnovatorEsq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/InnovatorEsq/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-12T15:42:00Z",
        "updated_at": "2023-12-14T08:26:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nerror from StreamingAgentChatResponse for line 60:\r\n_aqueue: asyncio.Queue = asyncio.Queue()\r\n\r\n\n\n### Version\n\n0.8.0\n\n### Steps to Reproduce\n\nWhen running llama_index with a simple streamlit example:\r\nApp.py\r\nimport streamlit as st\r\nfrom llama_index import LLMPredictor\r\n\r\nrun: \r\nstreamlit run App.py \n\n### Relevant Logs/Tracbacks\n\n```shell\nerror occurs in StreamingAgentChatResponse for _aqueue: asyncio.Queue = asyncio.Queue()\r\n2023-08-12 08:38:47.123 Uncaught app exception\r\nTraceback (most recent call last):\r\n  File \"/root/miniconda3/envs/py39/lib/python3.9/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 552, in _run_script\r\n    exec(code, module.__dict__)\r\n  File \"/home/wjwong/work/test_app/App.py\", line 2, in <module>\r\n    from llama_index import LLMPredictor\r\n  File \"/root/miniconda3/envs/py39/lib/python3.9/site-packages/llama_index/__init__.py\", line 20, in <module>\r\n    from llama_index.indices.keyword_table import (\r\n  File \"/root/miniconda3/envs/py39/lib/python3.9/site-packages/llama_index/indices/__init__.py\", line 4, in <module>\r\n    from llama_index.indices.keyword_table.base import (\r\n  File \"/root/miniconda3/envs/py39/lib/python3.9/site-packages/llama_index/indices/keyword_table/__init__.py\", line 4, in <module>\r\n    from llama_index.indices.keyword_table.base import (\r\n  File \"/root/miniconda3/envs/py39/lib/python3.9/site-packages/llama_index/indices/keyword_table/base.py\", line 18, in <module>\r\n    from llama_index.indices.base import BaseIndex\r\n  File \"/root/miniconda3/envs/py39/lib/python3.9/site-packages/llama_index/indices/base.py\", line 6, in <module>\r\n    from llama_index.chat_engine.types import BaseChatEngine, ChatMode\r\n  File \"/root/miniconda3/envs/py39/lib/python3.9/site-packages/llama_index/chat_engine/__init__.py\", line 1, in <module>\r\n    from llama_index.chat_engine.condense_question import CondenseQuestionChatEngine\r\n  File \"/root/miniconda3/envs/py39/lib/python3.9/site-packages/llama_index/chat_engine/condense_question.py\", line 5, in <module>\r\n    from llama_index.chat_engine.types import (\r\n  File \"/root/miniconda3/envs/py39/lib/python3.9/site-packages/llama_index/chat_engine/types.py\", line 51, in <module>\r\n    class StreamingAgentChatResponse:\r\n  File \"/root/miniconda3/envs/py39/lib/python3.9/site-packages/llama_index/chat_engine/types.py\", line 60, in StreamingAgentChatResponse\r\n    _aqueue: asyncio.Queue = asyncio.Queue()\r\n  File \"/root/miniconda3/envs/py39/lib/python3.9/asyncio/queues.py\", line 36, in __init__\r\n    self._loop = events.get_event_loop()\r\n  File \"/root/miniconda3/envs/py39/lib/python3.9/asyncio/events.py\", line 642, in get_event_loop\r\n    raise RuntimeError('There is no current event loop in thread %r.'\r\nRuntimeError: There is no current event loop in thread 'ScriptRunner.scriptThread'.\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7244/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7244/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7243",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7243/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7243/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7243/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7243",
        "id": 1847962549,
        "node_id": "I_kwDOIWuq585uJau1",
        "number": 7243,
        "title": "[Bug]: OpenAI Agents ValueError: Tool with name python not found",
        "user": {
            "login": "Ashish5869",
            "id": 131770947,
            "node_id": "U_kgDOB9qqQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/131770947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ashish5869",
            "html_url": "https://github.com/Ashish5869",
            "followers_url": "https://api.github.com/users/Ashish5869/followers",
            "following_url": "https://api.github.com/users/Ashish5869/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ashish5869/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ashish5869/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ashish5869/subscriptions",
            "organizations_url": "https://api.github.com/users/Ashish5869/orgs",
            "repos_url": "https://api.github.com/users/Ashish5869/repos",
            "events_url": "https://api.github.com/users/Ashish5869/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ashish5869/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-12T11:53:03Z",
        "updated_at": "2023-11-18T16:01:50Z",
        "closed_at": "2023-11-18T16:01:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI have not  make any function with name of python. But still I am getting an error of tool not fond with python name.\r\n\r\n### Version\r\n\r\nTried with 0.7.20 to 0.8.0\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\ndef multiply(args: list) -> int:\r\n    print(numpy.prod((args)))\r\n    return numpy.prod((args))\r\n\r\nmultiply_tool = FunctionTool.from_defaults(fn=multiply)\r\n\r\ndef add(args: list) -> int:\r\n    for num in args:\r\n        num+=num\r\n    return num\r\n\r\nadd_tool = FunctionTool.from_defaults(fn=add)\r\n\r\nllm = OpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\", openai_api_key='api_key')\r\nagent = OpenAIAgent.from_tools(\r\n    [\r\n        multiply_tool,\r\n        add_tool,\r\n    ],\r\n    llm=llm, \r\n    verbose=True,\r\n    callback_manager=callback_manager\r\n)\r\n\r\nresponse = agent.chat(\"a ate 2 apples, b ate 9 apples and c ate 1 apples. 1 apple cost is 7.8. how much total cost will be\")\r\nprint('response = ',response)\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nValueError                                Traceback (most recent call last)\r\n/tmp/ipykernel_41861/1112129131.py in <module>\r\n----> 1 response = agent.chat(\"a ate 2 apples, b ate 9 apples and c ate 1 apples. I apple cost is 7.8. how much total cost will be\")\r\n      2 print('response = ',response)\r\n\r\n~/anaconda3/lib/python3.10/site-packages/llama_index/agent/openai_agent.py in chat(self, message, chat_history, function_call)\r\n    267         function_call: Union[str, dict] = \"auto\",\r\n    268     ) -> AgentChatResponse:\r\n--> 269         chat_response = self._chat(\r\n    270             message, chat_history, function_call, mode=ChatResponseMode.WAIT\r\n    271         )\r\n\r\n~/anaconda3/lib/python3.10/site-packages/llama_index/agent/openai_agent.py in _chat(self, message, chat_history, function_call, mode)\r\n    232                 break\r\n    233             assert isinstance(self.latest_function_call, dict)\r\n--> 234             self._call_function(tools, self.latest_function_call)\r\n    235             n_function_calls += 1\r\n    236 \r\n\r\n~/anaconda3/lib/python3.10/site-packages/llama_index/agent/openai_agent.py in _call_function(self, tools, function_call)\r\n    176 \r\n    177     def _call_function(self, tools: List[BaseTool], function_call: dict) -> None:\r\n--> 178         function_message, tool_output = call_function(\r\n    179             tools, function_call, verbose=self._verbose\r\n    180         )\r\n\r\n~/anaconda3/lib/python3.10/site-packages/llama_index/agent/openai_agent.py in call_function(tools, function_call, verbose)\r\n     46         print(\"=== Calling Function ===\")\r\n     47         print(f\"Calling function: {name} with args: {arguments_str}\")\r\n---> 48     tool = get_function_by_name(tools, name)\r\n     49     argument_dict = json.loads(arguments_str)\r\n     50     output = tool(**argument_dict)\r\n\r\n~/anaconda3/lib/python3.10/site-packages/llama_index/agent/openai_agent.py in get_function_by_name(tools, name)\r\n     33     name_to_tool = {tool.metadata.name: tool for tool in tools}\r\n     34     if name not in name_to_tool:\r\n---> 35         raise ValueError(f\"Tool with name {name} not found\")\r\n     36     return name_to_tool[name]\r\n     37 \r\n\r\nValueError: Tool with name python not found\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7243/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7243/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7242",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7242/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7242/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7242/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7242",
        "id": 1847748895,
        "node_id": "I_kwDOIWuq585uImkf",
        "number": 7242,
        "title": "[Question]: ",
        "user": {
            "login": "gajavelli",
            "id": 5496552,
            "node_id": "MDQ6VXNlcjU0OTY1NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5496552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gajavelli",
            "html_url": "https://github.com/gajavelli",
            "followers_url": "https://api.github.com/users/gajavelli/followers",
            "following_url": "https://api.github.com/users/gajavelli/following{/other_user}",
            "gists_url": "https://api.github.com/users/gajavelli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gajavelli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gajavelli/subscriptions",
            "organizations_url": "https://api.github.com/users/gajavelli/orgs",
            "repos_url": "https://api.github.com/users/gajavelli/repos",
            "events_url": "https://api.github.com/users/gajavelli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gajavelli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-12T04:48:26Z",
        "updated_at": "2023-08-14T17:01:24Z",
        "closed_at": "2023-08-14T17:01:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI'm not able to use gpt-4\r\n\r\ntried the example from /GPT4Comparison.ipynb. \r\n\r\nInvalidRequestError: The model `gpt-4` does not exist or you do not have access to it. Learn more: https://help.openai.com/en/articles/7102672-how-can-i-access-gpt-4.\r\n\r\nNot sure what is wrong. Any help or direction would be much appreciated",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7242/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7242/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7241",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7241/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7241/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7241/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7241",
        "id": 1847730455,
        "node_id": "I_kwDOIWuq585uIiEX",
        "number": 7241,
        "title": "[Bug]: Persisting to s3 storage is causing \"botocore.exceptions.ClientError: An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: All non-trailing parts must have the same length.\"",
        "user": {
            "login": "scoobyd0027",
            "id": 43387955,
            "node_id": "MDQ6VXNlcjQzMzg3OTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43387955?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scoobyd0027",
            "html_url": "https://github.com/scoobyd0027",
            "followers_url": "https://api.github.com/users/scoobyd0027/followers",
            "following_url": "https://api.github.com/users/scoobyd0027/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoobyd0027/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scoobyd0027/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoobyd0027/subscriptions",
            "organizations_url": "https://api.github.com/users/scoobyd0027/orgs",
            "repos_url": "https://api.github.com/users/scoobyd0027/repos",
            "events_url": "https://api.github.com/users/scoobyd0027/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scoobyd0027/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-12T04:15:36Z",
        "updated_at": "2023-10-05T15:17:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nThis issue happens with only specific files. Following this tutorial https://gpt-index.readthedocs.io/en/latest/core_modules/data_modules/storage/save_load.html and using the same code I am trying to upload the index of this file to s3 https://file.io/fWYseeDdhaTD.\r\n\r\ns3fs - [2023.6.0](https://github.com/fsspec/s3fs/releases/tag/2023.6.0)\r\n\r\n### Version\r\n\r\nv0.8.0\r\n\r\n### Steps to Reproduce\r\n\r\nHere is the same code, I am using cloudflare R2 btw. This file can be used to index and upload  https://file.io/fWYseeDdhaTD.\r\n\r\n`import os, s3fs\r\nfrom llama_index.indices.vector_store.base import VectorStoreIndex\r\nfrom llama_index import SimpleDirectoryReader\r\n\r\ndocuments = SimpleDirectoryReader(input_files=[\"biochemistry.pdf\"]).load_data()\r\nindex = VectorStoreIndex.from_documents(documents)\r\n\r\nAWS_KEY = os.environ['AWS_ACCESS_KEY_ID']\r\nAWS_SECRET = os.environ['AWS_SECRET_ACCESS_KEY']\r\nR2_ACCOUNT_ID = os.environ['R2_ACCOUNT_ID']\r\n\r\nassert AWS_KEY is not None and AWS_KEY != \"\"\r\n\r\ns3 = s3fs.S3FileSystem(\r\n   key=AWS_KEY,\r\n   secret=AWS_SECRET,\r\n   endpoint_url=f'https://{R2_ACCOUNT_ID}.r2.cloudflarestorage.com',\r\n   s3_additional_kwargs={'ACL': 'public-read'}\r\n)\r\n\r\nindex.set_index_id(\"vector_index\")\r\nindex.storage_context.persist('llama-index/storage_demo', fs=s3)`\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/s3fs/core.py\", line 113, in _error_wrapper\r\n    return await func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/client.py\", line 378, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: All non-trailing parts must have the same length.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"persist_s3_issue.py\", line 25, in <module>\r\n    index.storage_context.persist('monic-chats/bio', fs=s3)\r\n  File \"/usr/local/lib/python3.8/site-packages/llama_index/storage/storage_context.py\", line 118, in persist\r\n    self.vector_store.persist(persist_path=vector_store_path, fs=fs)\r\n  File \"/usr/local/lib/python3.8/site-packages/llama_index/vector_stores/simple.py\", line 191, in persist\r\n    json.dump(self._data.to_dict(), f)\r\n  File \"/usr/local/lib/python3.8/site-packages/fsspec/spec.py\", line 1876, in close\r\n    self.flush(force=True)\r\n  File \"/usr/local/lib/python3.8/site-packages/fsspec/spec.py\", line 1747, in flush\r\n    if self._upload_chunk(final=force) is not False:\r\n  File \"/usr/local/lib/python3.8/site-packages/s3fs/core.py\", line 2250, in _upload_chunk\r\n    self.commit()\r\n  File \"/usr/local/lib/python3.8/site-packages/s3fs/core.py\", line 2278, in commit\r\n    write_result = self._call_s3(\r\n  File \"/usr/local/lib/python3.8/site-packages/s3fs/core.py\", line 2117, in _call_s3\r\n    return self.fs.call_s3(method, self.s3_additional_kwargs, *kwarglist, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/fsspec/asyn.py\", line 121, in wrapper\r\n    return sync(self.loop, func, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/fsspec/asyn.py\", line 106, in sync\r\n    raise return_result\r\n  File \"/usr/local/lib/python3.8/site-packages/fsspec/asyn.py\", line 61, in _runner\r\n    result[0] = await coro\r\n  File \"/usr/local/lib/python3.8/site-packages/s3fs/core.py\", line 348, in _call_s3\r\n    return await _error_wrapper(\r\n  File \"/usr/local/lib/python3.8/site-packages/s3fs/core.py\", line 140, in _error_wrapper\r\n    raise err\r\nOSError: [Errno 22] All non-trailing parts must have the same length.\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7241/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7241/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7240",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7240/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7240/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7240/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7240",
        "id": 1847715994,
        "node_id": "PR_kwDOIWuq585XxkUj",
        "number": 7240,
        "title": "Vectara integration",
        "user": {
            "login": "ofermend",
            "id": 1823547,
            "node_id": "MDQ6VXNlcjE4MjM1NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofermend",
            "html_url": "https://github.com/ofermend",
            "followers_url": "https://api.github.com/users/ofermend/followers",
            "following_url": "https://api.github.com/users/ofermend/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofermend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofermend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofermend/subscriptions",
            "organizations_url": "https://api.github.com/users/ofermend/orgs",
            "repos_url": "https://api.github.com/users/ofermend/repos",
            "events_url": "https://api.github.com/users/ofermend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofermend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-08-12T03:45:27Z",
        "updated_at": "2023-08-27T15:08:48Z",
        "closed_at": "2023-08-25T22:05:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7240",
            "html_url": "https://github.com/run-llama/llama_index/pull/7240",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7240.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7240.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nIntegration of Vectara with Llama_index.\r\n\r\n## Type of Change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Added new unit/integration tests\r\n- [X] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7240/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7240/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7239",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7239/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7239/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7239/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7239",
        "id": 1847576856,
        "node_id": "PR_kwDOIWuq585XxFHi",
        "number": 7239,
        "title": "add support for Async tool execution",
        "user": {
            "login": "sourabhdesai",
            "id": 3005241,
            "node_id": "MDQ6VXNlcjMwMDUyNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3005241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sourabhdesai",
            "html_url": "https://github.com/sourabhdesai",
            "followers_url": "https://api.github.com/users/sourabhdesai/followers",
            "following_url": "https://api.github.com/users/sourabhdesai/following{/other_user}",
            "gists_url": "https://api.github.com/users/sourabhdesai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sourabhdesai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sourabhdesai/subscriptions",
            "organizations_url": "https://api.github.com/users/sourabhdesai/orgs",
            "repos_url": "https://api.github.com/users/sourabhdesai/repos",
            "events_url": "https://api.github.com/users/sourabhdesai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sourabhdesai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-12T00:07:24Z",
        "updated_at": "2023-08-14T19:59:04Z",
        "closed_at": "2023-08-14T19:59:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7239",
            "html_url": "https://github.com/run-llama/llama_index/pull/7239",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7239.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7239.patch",
            "merged_at": "2023-08-14T19:59:04Z"
        },
        "body": "# Description\r\n\r\nAdding base level support for async tool execution.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7239/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7239/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7238",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7238/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7238/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7238/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7238",
        "id": 1847538847,
        "node_id": "I_kwDOIWuq585uHzSf",
        "number": 7238,
        "title": "[Question]: How to update local index to cloud",
        "user": {
            "login": "axz91",
            "id": 100378946,
            "node_id": "U_kgDOBfupQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/100378946?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axz91",
            "html_url": "https://github.com/axz91",
            "followers_url": "https://api.github.com/users/axz91/followers",
            "following_url": "https://api.github.com/users/axz91/following{/other_user}",
            "gists_url": "https://api.github.com/users/axz91/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axz91/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axz91/subscriptions",
            "organizations_url": "https://api.github.com/users/axz91/orgs",
            "repos_url": "https://api.github.com/users/axz91/repos",
            "events_url": "https://api.github.com/users/axz91/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axz91/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-11T23:19:21Z",
        "updated_at": "2023-10-24T06:30:21Z",
        "closed_at": "2023-10-24T06:30:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n# build index\r\nindex = VectorStoreIndex(nodes)\r\n# save index to disk\r\nindex.set_index_id(\"vector_index\")\r\nindex.storage_context.persist(\"./storage\")\r\n\r\nmay i know how to update this local index to, for example Supabase Vector Store\r\nhttps://gpt-index.readthedocs.io/en/latest/examples/vector_stores/SupabaseVectorIndexDemo.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7238/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7238/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7237",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7237/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7237/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7237/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7237",
        "id": 1847301525,
        "node_id": "PR_kwDOIWuq585XwIu9",
        "number": 7237,
        "title": "[version] bump version to 0.8.0",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-11T19:09:53Z",
        "updated_at": "2023-08-11T19:18:43Z",
        "closed_at": "2023-08-11T19:18:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7237",
            "html_url": "https://github.com/run-llama/llama_index/pull/7237",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7237.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7237.patch",
            "merged_at": "2023-08-11T19:18:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7237/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7237/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7236",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7236/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7236/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7236/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7236",
        "id": 1847038118,
        "node_id": "PR_kwDOIWuq585XvPQo",
        "number": 7236,
        "title": "defaults changes v2",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-11T15:33:11Z",
        "updated_at": "2023-08-11T19:08:44Z",
        "closed_at": "2023-08-11T19:08:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7236",
            "html_url": "https://github.com/run-llama/llama_index/pull/7236",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7236.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7236.patch",
            "merged_at": "2023-08-11T19:08:43Z"
        },
        "body": "# Description\r\n\r\nThis is a bit of a large PR, so bear with me here (again).\r\n\r\nThis PR updates several key defaults in llama-index\r\n- move default LLM to gpt-3.5\r\n- increase default LLM temperature to 0.1\r\n- update text_qa_template and refine_template\r\n- add a specific template for tree_summarize\r\n- change all selectors to be a pydantic selectors when possible\r\n- refactor text splitters\r\n- change default text splitter to be sentence splitter\r\n- added llama.cpp and huggingface as default fallbacks if an openai key is not set\r\n- added `SentenceWindowNodeParser` and `MetadataReplacementNodPostProcessor` for sentence level embeddings/retrieval, but larger context window for the LLM\r\n- bump langchain version to 0.0.262 in `setup.py`\r\n- Added `LLAMA_INDEX_CACHE_DIR` env var to control download locations\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7236/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7236/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7235",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7235/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7235/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7235/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7235",
        "id": 1847009399,
        "node_id": "PR_kwDOIWuq585XvIxg",
        "number": 7235,
        "title": "[version] bump to 0.7.24.post1",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-11T15:17:49Z",
        "updated_at": "2023-08-11T15:25:17Z",
        "closed_at": "2023-08-11T15:25:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7235",
            "html_url": "https://github.com/run-llama/llama_index/pull/7235",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7235.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7235.patch",
            "merged_at": "2023-08-11T15:25:16Z"
        },
        "body": "# Description\r\n\r\nLets revert the defaults changes and save them for a bigger release version.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7235/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7235/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7234",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7234/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7234/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7234/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7234",
        "id": 1846978137,
        "node_id": "PR_kwDOIWuq585XvBv1",
        "number": 7234,
        "title": "bump langchain version",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-11T15:01:31Z",
        "updated_at": "2023-08-11T15:33:52Z",
        "closed_at": "2023-08-11T15:33:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7234",
            "html_url": "https://github.com/run-llama/llama_index/pull/7234",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7234.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7234.patch",
            "merged_at": "2023-08-11T15:33:51Z"
        },
        "body": "# Description\r\n\r\nWe should bump the langchain version, just to make lives a little easier for local embeddings.\r\n\r\nMentioned in https://github.com/jerryjliu/llama_index/issues/7231\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7234/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7234/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7233",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7233/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7233/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7233/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7233",
        "id": 1846963569,
        "node_id": "PR_kwDOIWuq585Xu-g0",
        "number": 7233,
        "title": "Cache improvements",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-11T14:52:43Z",
        "updated_at": "2023-08-11T16:40:54Z",
        "closed_at": "2023-08-11T16:40:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7233",
            "html_url": "https://github.com/run-llama/llama_index/pull/7233",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7233.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7233.patch",
            "merged_at": "2023-08-11T16:40:53Z"
        },
        "body": "# Description\r\n\r\nThis PR gives users easy control over where cache files are saved across llama-index. Just set the `LLAMA_INDEX_CACHE_DIR` environment variable and you should be good to go.\r\n\r\nMentioned in https://github.com/jerryjliu/llama_index/issues/7231\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested in terminal\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7233/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7233/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7232",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7232/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7232/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7232/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7232",
        "id": 1846952575,
        "node_id": "PR_kwDOIWuq585Xu8Fh",
        "number": 7232,
        "title": "feat: add node_postprocessors to ContextChatEngine",
        "user": {
            "login": "rendyfebry",
            "id": 1105460,
            "node_id": "MDQ6VXNlcjExMDU0NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1105460?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rendyfebry",
            "html_url": "https://github.com/rendyfebry",
            "followers_url": "https://api.github.com/users/rendyfebry/followers",
            "following_url": "https://api.github.com/users/rendyfebry/following{/other_user}",
            "gists_url": "https://api.github.com/users/rendyfebry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rendyfebry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rendyfebry/subscriptions",
            "organizations_url": "https://api.github.com/users/rendyfebry/orgs",
            "repos_url": "https://api.github.com/users/rendyfebry/repos",
            "events_url": "https://api.github.com/users/rendyfebry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rendyfebry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-11T14:45:56Z",
        "updated_at": "2023-08-12T01:01:18Z",
        "closed_at": "2023-08-12T01:01:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7232",
            "html_url": "https://github.com/run-llama/llama_index/pull/7232",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7232.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7232.patch",
            "merged_at": "2023-08-12T01:01:12Z"
        },
        "body": "# Description\r\n\r\nSince the ContextChatEngine uses the Retriever to pulls the related context instead of using the QueryEngine, it lost the ability to do node postprocessing. This PR AIM to solve that gap\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- X ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7232/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7232/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7231",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7231/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7231/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7231/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7231",
        "id": 1846806935,
        "node_id": "I_kwDOIWuq585uFAmX",
        "number": 7231,
        "title": "[Bug]: The changes on v0.7.24 is too big and break many things.",
        "user": {
            "login": "rendyfebry",
            "id": 1105460,
            "node_id": "MDQ6VXNlcjExMDU0NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1105460?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rendyfebry",
            "html_url": "https://github.com/rendyfebry",
            "followers_url": "https://api.github.com/users/rendyfebry/followers",
            "following_url": "https://api.github.com/users/rendyfebry/following{/other_user}",
            "gists_url": "https://api.github.com/users/rendyfebry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rendyfebry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rendyfebry/subscriptions",
            "organizations_url": "https://api.github.com/users/rendyfebry/orgs",
            "repos_url": "https://api.github.com/users/rendyfebry/repos",
            "events_url": "https://api.github.com/users/rendyfebry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rendyfebry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-11T13:13:36Z",
        "updated_at": "2023-08-12T01:15:15Z",
        "closed_at": "2023-08-12T01:15:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nThis particular PR (#7223) changed so many things at once, which caused backward incompatibility or behavior changes. \r\n\r\nEither needs a way to inform to the user, or make some kind of \"major\" release (e.g.: v0.8.x)\r\n\r\n\r\nTo name a few:\r\n * Due to the switching text splitter to sentence splitter, need to install/update additional package (e.g.: nltk, a newer version of langchain that include HuggingFaceBgeEmbeddings)\r\n * Changing the default text splitter to be sentence splitter might also change the end-user behavior, which might break user test cases.\r\n * The sentence splitter uses nltk package, and as described on https://github.com/jerryjliu/llama_index/pull/6579, nltk will try to download the file to /home which is not available on many cloud serverless solutions (e.g.: lambda, fargate, etc). So until the user explicitly sets the `NLTK_DATA` env var, it won't run.\r\n * The change message now has a [default prompt](https://github.com/jerryjliu/llama_index/pull/7223/files#diff-5512b0e5f147e1df32fc2aa14440952c502f3b835ece360ced5e095690a62da9). Which make the Chat engine behavior changed completely and OpenAIAgent even straight up refuse to answer with \"I'm sorry, but I cannot provide a <REDACTED> based on the given context information\"\r\n\r\n### Version\r\n\r\n0.7.24\r\n\r\n### Steps to Reproduce\r\n\r\nIf you have an existing application, try to update to v0.7.24 and you would will notice the problem\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7231/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7231/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7230",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7230/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7230/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7230/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7230",
        "id": 1846678941,
        "node_id": "I_kwDOIWuq585uEhWd",
        "number": 7230,
        "title": "[Question]: TypeError: 'NoneType' object is not callable",
        "user": {
            "login": "xinkeyb",
            "id": 45843515,
            "node_id": "MDQ6VXNlcjQ1ODQzNTE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/45843515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xinkeyb",
            "html_url": "https://github.com/xinkeyb",
            "followers_url": "https://api.github.com/users/xinkeyb/followers",
            "following_url": "https://api.github.com/users/xinkeyb/following{/other_user}",
            "gists_url": "https://api.github.com/users/xinkeyb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xinkeyb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xinkeyb/subscriptions",
            "organizations_url": "https://api.github.com/users/xinkeyb/orgs",
            "repos_url": "https://api.github.com/users/xinkeyb/repos",
            "events_url": "https://api.github.com/users/xinkeyb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xinkeyb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-11T11:42:00Z",
        "updated_at": "2023-10-24T06:30:19Z",
        "closed_at": "2023-10-24T06:30:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n### Can someone help me? I would greatly appreciate it\r\n### The previous code worked fine and generated an answer, but in the end, an error was always reported:\r\nException ignored in: <function Driver.__del__ at 0x7f5670ae5ca0>\r\nTraceback (most recent call last):\r\n  File \"/home/zhaoxinke/miniconda3/envs/kgllm2/lib/python3.9/site-packages/neo4j/_sync/driver.py\", line 485, in __del__\r\n  File \"/home/zhaoxinke/miniconda3/envs/kgllm2/lib/python3.9/site-packages/neo4j/_meta.py\", line 226, in unclosed_resource_warn\r\nTypeError: 'NoneType' object is not callable",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7230/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7230/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7229",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7229/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7229/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7229/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7229",
        "id": 1846646467,
        "node_id": "I_kwDOIWuq585uEZbD",
        "number": 7229,
        "title": "[Question]: About Neo4jGraphStore",
        "user": {
            "login": "xinkeyb",
            "id": 45843515,
            "node_id": "MDQ6VXNlcjQ1ODQzNTE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/45843515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xinkeyb",
            "html_url": "https://github.com/xinkeyb",
            "followers_url": "https://api.github.com/users/xinkeyb/followers",
            "following_url": "https://api.github.com/users/xinkeyb/following{/other_user}",
            "gists_url": "https://api.github.com/users/xinkeyb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xinkeyb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xinkeyb/subscriptions",
            "organizations_url": "https://api.github.com/users/xinkeyb/orgs",
            "repos_url": "https://api.github.com/users/xinkeyb/repos",
            "events_url": "https://api.github.com/users/xinkeyb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xinkeyb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-11T11:16:24Z",
        "updated_at": "2023-08-11T14:36:44Z",
        "closed_at": "2023-08-11T14:24:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nhttps://github.com/jerryjliu/llama_index/blob/main/docs/examples/index_structs/knowledge_graph/Neo4jKGIndexDemo.ipynb\r\n\r\n### In this example, chatgpt converts the user's problem into a cypher statement, and then executes the cypher statement to retrieve information from neo4j. My question is: will the information retrieved from Neo4j be sent as a prompt to Chatgpt to generate the final answer?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7229/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7229/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7228",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7228/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7228/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7228/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7228",
        "id": 1846610824,
        "node_id": "PR_kwDOIWuq585XtxU9",
        "number": 7228,
        "title": "feat(docs): add dev practice docs",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-11T10:48:52Z",
        "updated_at": "2023-08-24T07:02:19Z",
        "closed_at": "2023-08-24T07:02:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7228",
            "html_url": "https://github.com/run-llama/llama_index/pull/7228",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7228.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7228.patch",
            "merged_at": "2023-08-24T07:02:18Z"
        },
        "body": "# Description\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\nDocs\r\n\r\n# How Has This Been Tested?\r\n\r\n\r\n# Suggested Checklist:\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7228/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7228/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7227",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7227/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7227/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7227/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7227",
        "id": 1846336971,
        "node_id": "PR_kwDOIWuq585Xs1Sr",
        "number": 7227,
        "title": "[version] bump version to 0.7.24",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-11T07:27:45Z",
        "updated_at": "2023-08-11T07:37:32Z",
        "closed_at": "2023-08-11T07:37:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7227",
            "html_url": "https://github.com/run-llama/llama_index/pull/7227",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7227.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7227.patch",
            "merged_at": "2023-08-11T07:37:31Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7227/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7227/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7226",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7226/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7226/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7226/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7226",
        "id": 1846165698,
        "node_id": "PR_kwDOIWuq585XsQP0",
        "number": 7226,
        "title": "chore: change PgVectorStore variable name for clarity",
        "user": {
            "login": "rendyfebry",
            "id": 1105460,
            "node_id": "MDQ6VXNlcjExMDU0NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1105460?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rendyfebry",
            "html_url": "https://github.com/rendyfebry",
            "followers_url": "https://api.github.com/users/rendyfebry/followers",
            "following_url": "https://api.github.com/users/rendyfebry/following{/other_user}",
            "gists_url": "https://api.github.com/users/rendyfebry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rendyfebry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rendyfebry/subscriptions",
            "organizations_url": "https://api.github.com/users/rendyfebry/orgs",
            "repos_url": "https://api.github.com/users/rendyfebry/repos",
            "events_url": "https://api.github.com/users/rendyfebry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rendyfebry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-11T04:08:09Z",
        "updated_at": "2023-08-11T22:14:49Z",
        "closed_at": "2023-08-11T22:14:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7226",
            "html_url": "https://github.com/run-llama/llama_index/pull/7226",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7226.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7226.patch",
            "merged_at": "2023-08-11T22:14:49Z"
        },
        "body": "# Description\r\n\r\nChange the variable name from `sim` to `distance` for better clarity. The output of the Postgres query is distance, and we calculate the similarity with `similarity = ( 1 - distance )`, so the variable name should represents that.\r\n\r\nThis also in line with the same logic on other VectorStore\r\n- https://github.com/jerryjliu/llama_index/blob/main/llama_index/vector_stores/chroma.py#L167\r\n- https://github.com/jerryjliu/llama_index/blob/main/llama_index/vector_stores/supabase.py#L166\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7214\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7226/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7226/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7225",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7225/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7225/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7225/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7225",
        "id": 1846025718,
        "node_id": "I_kwDOIWuq585uCB32",
        "number": 7225,
        "title": "help for how to use llama_index on chroma.[Question]: ",
        "user": {
            "login": "pythonmanGo",
            "id": 32951840,
            "node_id": "MDQ6VXNlcjMyOTUxODQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/32951840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pythonmanGo",
            "html_url": "https://github.com/pythonmanGo",
            "followers_url": "https://api.github.com/users/pythonmanGo/followers",
            "following_url": "https://api.github.com/users/pythonmanGo/following{/other_user}",
            "gists_url": "https://api.github.com/users/pythonmanGo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pythonmanGo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pythonmanGo/subscriptions",
            "organizations_url": "https://api.github.com/users/pythonmanGo/orgs",
            "repos_url": "https://api.github.com/users/pythonmanGo/repos",
            "events_url": "https://api.github.com/users/pythonmanGo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pythonmanGo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-10T23:46:35Z",
        "updated_at": "2023-09-12T02:08:06Z",
        "closed_at": "2023-09-12T02:08:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI'm using llama_index on chroma  ,but there is still  a  question.\r\n\r\n    According to the example\uff1a[Chroma - LlamaIndex \ud83e\udd99 0.7.22 (gpt-index.readthedocs.io)](https://gpt-index.readthedocs.io/en/stable/examples/vector_stores/ChromaIndexDemo.html#basic-example-using-the-docker-container)\r\n\r\n    Normally, we delete or modify a document based on our query, not based on the ID of a document, because the document id is an internal field that we cannot know in advance.     But is now based on the code:\r\n'''\r\n    query_engine = index.as_query_engine()\r\n    response = query_engine.query(\"What did the author do growing up?\")\r\n'''\r\n\r\n    Now according to the sample code, we can only get the text result of the query, but cannot get the corresponding id of the text, so we cannot delete or update the query result.     How to query the corresponding id of the result text based on prompt, so as to delete or modify the operation later?\r\n\r\n\r\n\r\n\r\n`db = chromadb.PersistentClient(path=\"./chroma_db\")\r\n        chroma_collection = db.get_or_create_collection(\"datartchromaDB\")\r\n        vector_store = ChromaVectorStore(chroma_collection=chroma_collection)\r\n        storage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n\r\n        index = VectorStoreIndex.from_vector_store(\r\n            vector_store=vector_store,\r\n            storage_context=storage_context,\r\n            service_context=service_context,\r\n        )\r\n       query_engine = index.as_query_engine()\r\n\r\n        response = query_engine.query(prompt)\r\n\r\n        doc_to_update = chroma_collection.get(limit=1)\r\n###how to  get the id  of the result ( response = query_engine.query(prompt)) ,which i had prompt from  gpt3.5\r\n        print(doc_to_update)\r\n            # delete the last document\r\n        print(\"count before\", chroma_collection.count())\r\n        chroma_collection.delete(ids=[doc_to_update[\"ids\"][0]])\r\n        print(\"count after\", chroma_collection.count())`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7225/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7225/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7224",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7224/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7224/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7224/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7224",
        "id": 1846005356,
        "node_id": "PR_kwDOIWuq585Xruak",
        "number": 7224,
        "title": "Allow EMPTY keys for Fastchat/local OpenAI API endpoints",
        "user": {
            "login": "asaiacai",
            "id": 25255966,
            "node_id": "MDQ6VXNlcjI1MjU1OTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/25255966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asaiacai",
            "html_url": "https://github.com/asaiacai",
            "followers_url": "https://api.github.com/users/asaiacai/followers",
            "following_url": "https://api.github.com/users/asaiacai/following{/other_user}",
            "gists_url": "https://api.github.com/users/asaiacai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asaiacai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asaiacai/subscriptions",
            "organizations_url": "https://api.github.com/users/asaiacai/orgs",
            "repos_url": "https://api.github.com/users/asaiacai/repos",
            "events_url": "https://api.github.com/users/asaiacai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asaiacai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-10T23:12:07Z",
        "updated_at": "2023-08-12T03:49:00Z",
        "closed_at": "2023-08-12T03:49:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7224",
            "html_url": "https://github.com/run-llama/llama_index/pull/7224",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7224.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7224.patch",
            "merged_at": "2023-08-12T03:49:00Z"
        },
        "body": "# Description\r\n\r\nThis allows usage of LlamaIndex with self hosted openAI compatible servers like [Fastchat](https://github.com/lm-sys/FastChat/blob/main/docs/openai_api.md). Resolves the error where an API key is format checked preventing usage with the fastchat API endpoint.\r\n\r\nFixes #7212 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7224/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7224/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7223",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7223/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7223/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7223/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7223",
        "id": 1845948343,
        "node_id": "PR_kwDOIWuq585Xrh_Z",
        "number": 7223,
        "title": "Update defaults",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-10T21:56:24Z",
        "updated_at": "2023-08-11T07:17:15Z",
        "closed_at": "2023-08-11T07:17:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7223",
            "html_url": "https://github.com/run-llama/llama_index/pull/7223",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7223.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7223.patch",
            "merged_at": "2023-08-11T07:17:14Z"
        },
        "body": "# Description\r\n\r\nThis is a bit of a large PR, so bear with me here.\r\n\r\nThis PR updates several key defaults in llama-index\r\n- move default LLM to gpt-3.5\r\n- increase default LLM temperature to 0.1\r\n- update text_qa_template and refine_template\r\n- add a specific template for tree_summarize\r\n- change all selectors to be a pydantic selectors when possible\r\n- refactor text splitters\r\n- change default text splitter to be sentence splitter\r\n- added llama.cpp and huggingface as default fallbacks if an openai key is not set\r\n- added `SentenceWindowNodeParser` and `MetadataReplacementNodPostProcessor` for sentence level embeddings/retrieval, but larger context window for the LLM\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7223/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7223/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7222",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7222/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7222/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7222/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7222",
        "id": 1845937692,
        "node_id": "I_kwDOIWuq585uBsYc",
        "number": 7222,
        "title": "[Question]: SubQuestionQueryEngine not working when use_async=True, Azure OpenAI, behind Firewall",
        "user": {
            "login": "ibicdev",
            "id": 59773335,
            "node_id": "MDQ6VXNlcjU5NzczMzM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/59773335?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibicdev",
            "html_url": "https://github.com/ibicdev",
            "followers_url": "https://api.github.com/users/ibicdev/followers",
            "following_url": "https://api.github.com/users/ibicdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibicdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibicdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibicdev/subscriptions",
            "organizations_url": "https://api.github.com/users/ibicdev/orgs",
            "repos_url": "https://api.github.com/users/ibicdev/repos",
            "events_url": "https://api.github.com/users/ibicdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibicdev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-10T21:43:53Z",
        "updated_at": "2023-08-12T03:07:31Z",
        "closed_at": "2023-08-12T03:07:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI'm using Azure OpenAI behind a firewall.  Just noticed the example code in `docs/examples/usecases/10k_sub_question.ipynb` with Azure specific changes as in [here](https://gpt-index.readthedocs.io/en/latest/examples/llm/azure_openai.html) kept getting timeout errors.\r\n\r\nHowever, if I add `use_async=False`, e.g.,\r\n\r\n```s_engine = SubQuestionQueryEngine.from_defaults(query_engine_tools=query_engine_tools, use_async=False)```\r\n\r\nThen it would actually work.\r\n\r\nVery curious why async execution would cause timeout errors.  Or if this is more likely a combination of Azure OpenAI + Firewall issues?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7222/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7222/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7221",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7221/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7221/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7221/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7221",
        "id": 1845907491,
        "node_id": "I_kwDOIWuq585uBlAj",
        "number": 7221,
        "title": "[Bug]: Embed_Model not respected on load from storage",
        "user": {
            "login": "bllchmbrs",
            "id": 1642503,
            "node_id": "MDQ6VXNlcjE2NDI1MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1642503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bllchmbrs",
            "html_url": "https://github.com/bllchmbrs",
            "followers_url": "https://api.github.com/users/bllchmbrs/followers",
            "following_url": "https://api.github.com/users/bllchmbrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/bllchmbrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bllchmbrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bllchmbrs/subscriptions",
            "organizations_url": "https://api.github.com/users/bllchmbrs/orgs",
            "repos_url": "https://api.github.com/users/bllchmbrs/repos",
            "events_url": "https://api.github.com/users/bllchmbrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bllchmbrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-10T21:12:30Z",
        "updated_at": "2023-08-11T13:17:34Z",
        "closed_at": "2023-08-10T22:03:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nEmbed model doesn't seem to be respected when loading a model from disk.\r\n\r\nIt DOES work if you set the `set_global_service_context(SERVICE_CONTEXT)`, so this seems like a loading bug.\r\n\r\n### Version\r\n\r\nllama-index==0.7.22\r\n\r\n### Steps to Reproduce\r\n\r\nHere's the reproduction:\r\n\r\n```py\r\nfrom llama_index import StorageContext,ServiceContext, VectorStoreIndex\r\nfrom llama_index import Document\r\nfrom llama_index import load_index_from_storage\r\n\r\nSTORAGE_CONTEXT = StorageContext.from_defaults()\r\nSERVICE_CONTEXT = ServiceContext.from_defaults(\r\n    embed_model=\"local\"\r\n)\r\ndocuments = [Document(text=\"Hello world\"), Document(text=\"Hello there\")]\r\nindex = VectorStoreIndex.from_documents(documents, service_context=SERVICE_CONTEXT, storage_context=STORAGE_CONTEXT)\r\nindex.set_index_id(\"123\")\r\nindex.storage_context.persist()\r\nindex2 = load_index_from_storage(storage_context=STORAGE_CONTEXT, index_id=\"123\")\r\n```\r\n\r\nThis runs fine:\r\n\r\n```\r\nindex.as_retriever().retrieve(\"hello\")\r\n```\r\nThis fails:\r\n\r\n```\r\nindex2.as_retriever().retrieve(\"hello\")\r\n```\r\nError:\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nCell In[11], line 1\r\n----> 1 index2.as_retriever().retrieve(\"hello\")\r\n\r\nFile ~/miniconda3/envs/sonic/lib/python3.11/site-packages/llama_index/indices/base_retriever.py:22, in BaseRetriever.retrieve(self, str_or_query_bundle)\r\n     20 if isinstance(str_or_query_bundle, str):\r\n     21     str_or_query_bundle = QueryBundle(str_or_query_bundle)\r\n---> 22 return self._retrieve(str_or_query_bundle)\r\n\r\nFile ~/miniconda3/envs/sonic/lib/python3.11/site-packages/llama_index/indices/vector_store/retrievers/retriever.py:75, in VectorIndexRetriever._retrieve(self, query_bundle)\r\n     69     if query_bundle.embedding is None:\r\n     70         query_bundle.embedding = (\r\n     71             self._service_context.embed_model.get_agg_embedding_from_queries(\r\n     72                 query_bundle.embedding_strs\r\n     73             )\r\n     74         )\r\n---> 75 return self._get_nodes_with_embeddings(query_bundle)\r\n\r\nFile ~/miniconda3/envs/sonic/lib/python3.11/site-packages/llama_index/indices/vector_store/retrievers/retriever.py:151, in VectorIndexRetriever._get_nodes_with_embeddings(self, query_bundle_with_embeddings)\r\n    147 def _get_nodes_with_embeddings(\r\n    148     self, query_bundle_with_embeddings: QueryBundle\r\n    149 ) -> List[NodeWithScore]:\r\n    150     query = self._build_vector_store_query(query_bundle_with_embeddings)\r\n--> 151     query_result = self._vector_store.query(query, **self._kwargs)\r\n    152     return self._build_node_list_from_query_result(query_result)\r\n\r\nFile ~/miniconda3/envs/sonic/lib/python3.11/site-packages/llama_index/vector_stores/simple.py:168, in SimpleVectorStore.query(self, query, **kwargs)\r\n    160     top_similarities, top_ids = get_top_k_mmr_embeddings(\r\n    161         query_embedding,\r\n    162         embeddings,\r\n   (...)\r\n    165         mmr_threshold=mmr_threshold,\r\n    166     )\r\n    167 elif query.mode == VectorStoreQueryMode.DEFAULT:\r\n--> 168     top_similarities, top_ids = get_top_k_embeddings(\r\n    169         query_embedding,\r\n    170         embeddings,\r\n    171         similarity_top_k=query.similarity_top_k,\r\n    172         embedding_ids=node_ids,\r\n    173     )\r\n    174 else:\r\n    175     raise ValueError(f\"Invalid query mode: {query.mode}\")\r\n\r\nFile ~/miniconda3/envs/sonic/lib/python3.11/site-packages/llama_index/indices/query/embedding_utils.py:27, in get_top_k_embeddings(query_embedding, embeddings, similarity_fn, similarity_top_k, embedding_ids, similarity_cutoff)\r\n     25 similarity_heap: List[Tuple[float, Any]] = []\r\n     26 for i, emb in enumerate(embeddings):\r\n---> 27     similarity = similarity_fn(query_embedding, emb)\r\n     28     if similarity_cutoff is None or similarity > similarity_cutoff:\r\n     29         heapq.heappush(similarity_heap, (similarity, embedding_ids[i]))\r\n\r\nFile ~/miniconda3/envs/sonic/lib/python3.11/site-packages/llama_index/embeddings/base.py:46, in similarity(embedding1, embedding2, mode)\r\n     44     return product\r\n     45 else:\r\n---> 46     product = np.dot(embedding1, embedding2)\r\n     47     norm = np.linalg.norm(embedding1) * np.linalg.norm(embedding2)\r\n     48     return product / norm\r\n\r\nValueError: shapes (1536,) and (384,) not aligned: 1536 (dim 0) != 384 (dim 0)\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7221/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7221/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7220",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7220/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7220/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7220/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7220",
        "id": 1845776173,
        "node_id": "PR_kwDOIWuq585Xq8hj",
        "number": 7220,
        "title": "docs: Improvements to Mendable Search",
        "user": {
            "login": "nickscamara",
            "id": 20311743,
            "node_id": "MDQ6VXNlcjIwMzExNzQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20311743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickscamara",
            "html_url": "https://github.com/nickscamara",
            "followers_url": "https://api.github.com/users/nickscamara/followers",
            "following_url": "https://api.github.com/users/nickscamara/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickscamara/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickscamara/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickscamara/subscriptions",
            "organizations_url": "https://api.github.com/users/nickscamara/orgs",
            "repos_url": "https://api.github.com/users/nickscamara/repos",
            "events_url": "https://api.github.com/users/nickscamara/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickscamara/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-10T19:32:09Z",
        "updated_at": "2023-08-10T20:18:14Z",
        "closed_at": "2023-08-10T20:18:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7220",
            "html_url": "https://github.com/run-llama/llama_index/pull/7220",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7220.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7220.patch",
            "merged_at": "2023-08-10T20:18:14Z"
        },
        "body": "- New Mendable Search Component\r\n- Contains keyword search, a cleaner chat interface\r\n- Lots of improvements + fixes",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7220/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7220/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7219",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7219/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7219/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7219/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7219",
        "id": 1845694385,
        "node_id": "PR_kwDOIWuq585XqqnB",
        "number": 7219,
        "title": "Move from test to supported claude-instant-1",
        "user": {
            "login": "mikelambert",
            "id": 7953259,
            "node_id": "MDQ6VXNlcjc5NTMyNTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7953259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelambert",
            "html_url": "https://github.com/mikelambert",
            "followers_url": "https://api.github.com/users/mikelambert/followers",
            "following_url": "https://api.github.com/users/mikelambert/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelambert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelambert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelambert/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelambert/orgs",
            "repos_url": "https://api.github.com/users/mikelambert/repos",
            "events_url": "https://api.github.com/users/mikelambert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelambert/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-10T18:34:12Z",
        "updated_at": "2023-08-14T21:12:27Z",
        "closed_at": "2023-08-14T21:12:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7219",
            "html_url": "https://github.com/run-llama/llama_index/pull/7219",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7219.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7219.patch",
            "merged_at": "2023-08-14T21:12:27Z"
        },
        "body": "# Description\r\n\r\nSwitches to a supported model\r\n\r\n## Type of Change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7219/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7219/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7218",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7218/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7218/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7218/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7218",
        "id": 1845673103,
        "node_id": "I_kwDOIWuq585uAryP",
        "number": 7218,
        "title": "[Question]: Can I past a list of query strings to query_engine.query() or query_engine.retrieve() i.e., batch query/retrieve?",
        "user": {
            "login": "kevon217",
            "id": 13077896,
            "node_id": "MDQ6VXNlcjEzMDc3ODk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13077896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevon217",
            "html_url": "https://github.com/kevon217",
            "followers_url": "https://api.github.com/users/kevon217/followers",
            "following_url": "https://api.github.com/users/kevon217/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevon217/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevon217/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevon217/subscriptions",
            "organizations_url": "https://api.github.com/users/kevon217/orgs",
            "repos_url": "https://api.github.com/users/kevon217/repos",
            "events_url": "https://api.github.com/users/kevon217/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevon217/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-10T18:18:15Z",
        "updated_at": "2023-09-07T05:30:31Z",
        "closed_at": "2023-08-10T22:04:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIt's not entirely clear to me if a RetrieverQueryEngine() supports batch queries. I'm not using an LLM and just want to retrieve semantically similar results.\r\n\r\nMy query engine for my chromdb index is defined as follows:\r\n\r\n`index = VectorStoreIndex.from_vector_store(vector_store=vector_store,storage_context=storage_context, \r\nservice_context=service_context,)`\r\n\r\n`retriever = VectorIndexRetriever(\r\n    index=index,\r\n    similarity_top_k=cfg.semantic_search.query.similarity_top_k,\r\n    vector_store_query_mode=\"text_search\",\r\n)`\r\n\r\n`response_synthesizer = get_response_synthesizer(\r\n  response_mode=\"no_text\", service_context=service_context\r\n)`\r\n\r\n`rerank = SentenceTransformerRerank(\r\n    model=cfg.semantic_search.query.rerank.cross_encoder.model_name,\r\n    top_n=cfg.semantic_search.query.rerank.cross_encoder.top_n,\r\n)`\r\n\r\n`query_engine = RetrieverQueryEngine(\r\n    retriever=retriever,\r\n    response_synthesizer=response_synthesizer,\r\n    node_postprocessors=[DummyNodePostprocessor(), rerank],\r\n)`\r\n\r\nMy hope was that I could pass a list of query strings as follows:\r\n\r\n` results_q = query_engine.query(queries)`\r\nOR\r\n`results_r = query_engine.retriev(queries)`\r\n\r\n\r\nDo async methods apply at all?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7218/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7218/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7217",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7217/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7217/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7217/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7217",
        "id": 1845569169,
        "node_id": "PR_kwDOIWuq585XqPNw",
        "number": 7217,
        "title": "use 1-cosine distance for pgvector",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-10T17:05:38Z",
        "updated_at": "2023-08-10T18:57:40Z",
        "closed_at": "2023-08-10T18:57:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7217",
            "html_url": "https://github.com/run-llama/llama_index/pull/7217",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7217.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7217.patch",
            "merged_at": "2023-08-10T18:57:39Z"
        },
        "body": "# Description\r\n\r\nPgVector scoring seemed to be a little wonky. Switching to `1 - cosine_distance` seems to make a lot more sense.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7214\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Local notebook\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7217/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7217/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7216",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7216/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7216/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7216/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7216",
        "id": 1845463898,
        "node_id": "PR_kwDOIWuq585Xp4WV",
        "number": 7216,
        "title": "fix metadata formatting and extraction",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-10T15:52:04Z",
        "updated_at": "2023-08-10T18:57:54Z",
        "closed_at": "2023-08-10T18:57:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7216",
            "html_url": "https://github.com/run-llama/llama_index/pull/7216",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7216.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7216.patch",
            "merged_at": "2023-08-10T18:57:53Z"
        },
        "body": "# Description\r\n\r\nNode parsing had a few issues\r\n- metadata template not behing inherited\r\n- formatting the node content for MetadataMode.NONE can be wonky with custom templates\r\n- extractors have too much whitespace \r\n\r\nThe PR fixes all 3 of these things.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Ran test-case in terminal\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7216/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7216/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7215",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7215/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7215/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7215/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7215",
        "id": 1845454321,
        "node_id": "PR_kwDOIWuq585Xp2Qz",
        "number": 7215,
        "title": "[version] bump version to 0.7.23",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-10T15:46:19Z",
        "updated_at": "2023-08-10T18:48:30Z",
        "closed_at": "2023-08-10T18:48:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7215",
            "html_url": "https://github.com/run-llama/llama_index/pull/7215",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7215.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7215.patch",
            "merged_at": "2023-08-10T18:48:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7215/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7215/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7214",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7214/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7214/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7214/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7214",
        "id": 1845145379,
        "node_id": "I_kwDOIWuq585t-q8j",
        "number": 7214,
        "title": "[Question][Bug]: Similarity Score and Order in PGVectorStore",
        "user": {
            "login": "rendyfebry",
            "id": 1105460,
            "node_id": "MDQ6VXNlcjExMDU0NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1105460?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rendyfebry",
            "html_url": "https://github.com/rendyfebry",
            "followers_url": "https://api.github.com/users/rendyfebry/followers",
            "following_url": "https://api.github.com/users/rendyfebry/following{/other_user}",
            "gists_url": "https://api.github.com/users/rendyfebry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rendyfebry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rendyfebry/subscriptions",
            "organizations_url": "https://api.github.com/users/rendyfebry/orgs",
            "repos_url": "https://api.github.com/users/rendyfebry/repos",
            "events_url": "https://api.github.com/users/rendyfebry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rendyfebry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-10T13:01:02Z",
        "updated_at": "2023-08-11T04:17:57Z",
        "closed_at": "2023-08-10T18:57:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n1. As per my understanding, the `score` on `NodeWithScore` indicates the similarity between the node content and the query. The score itself is in the range from 0 to 1, the higher the number, the more similar they are. (This is only my assumption based on this snippet, please CMIIW)\r\n```\r\nnodes = [\r\n  NodeWithScore(node=Node(text=\"text\"), score=0.7),\r\n  NodeWithScore(node=Node(text=\"text\"), score=0.8)\r\n]\r\n\r\n# filter nodes below 0.75 similarity score\r\nprocessor = SimilarityPostprocessor(similarity_cutoff=0.75)\r\nfiltered_nodes = processor.postprocess_nodes(nodes)\r\n```\r\n\r\n2. If the above assumption is correct, then when querying the index, we expect to get nodes with scores ordered from **HIGHER TO LOWER**.\r\n\r\n3. On `PGVectorStore`, we [query](https://github.com/jerryjliu/llama_index/blob/main/llama_index/vector_stores/postgres.py#L170...L172) with a simple `.order_by()` clause, which results in ascending order, so the scores would be ordered from **LOWER TO HIGHER**.\r\n```\r\n  stmt = select(  # type: ignore\r\n      self.table_class,\r\n      self.table_class.embedding.l2_distance(embedding)\r\n  ).order_by(self.table_class.embedding.l2_distance(embedding))\r\n```\r\n4. But if we look further, the query uses the [l2_distance function from PgVector](https://github.com/pgvector/pgvector#vector-functions) which returns the Euclidean Distance. I'm not familiar with this algorithm, but from the name \"distance\" I assume shorter distance means higher similarity. So from the Euclidean Distance pov, we actually expect the result to be sorted by l2_distances from **LOWER TO HIGHER**.\r\n\r\n![Euclidean Distance](https://github.com/jerryjliu/llama_index/assets/1105460/2763025d-2f1a-4a48-b6ec-d827f344dca8)\r\n\r\n---\r\n\r\nTL: DR So at the end the order of the results is still as expected, it returns nodes from the most similar to least similar (shorter l2_distance to the higher ones), but since the `PGVectorStore` uses Euclidean Distance as the similarity score, the similarities score order is reversed, from smaller to higher, which will mess up the NodePostProcessor logic.\r\n\r\nIs my understanding correct? If yes, can we fix the similarity score calculation on the `PGVectorStore`?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7214/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7214/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7213",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7213/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7213/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7213/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7213",
        "id": 1844192388,
        "node_id": "PR_kwDOIWuq585XljHm",
        "number": 7213,
        "title": "OpenInference global callback",
        "user": {
            "login": "axiomofjoy",
            "id": 15664869,
            "node_id": "MDQ6VXNlcjE1NjY0ODY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15664869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axiomofjoy",
            "html_url": "https://github.com/axiomofjoy",
            "followers_url": "https://api.github.com/users/axiomofjoy/followers",
            "following_url": "https://api.github.com/users/axiomofjoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/axiomofjoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axiomofjoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axiomofjoy/subscriptions",
            "organizations_url": "https://api.github.com/users/axiomofjoy/orgs",
            "repos_url": "https://api.github.com/users/axiomofjoy/repos",
            "events_url": "https://api.github.com/users/axiomofjoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axiomofjoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-09T23:50:59Z",
        "updated_at": "2023-08-10T04:01:33Z",
        "closed_at": "2023-08-10T03:25:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7213",
            "html_url": "https://github.com/run-llama/llama_index/pull/7213",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7213.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7213.patch",
            "merged_at": "2023-08-10T03:25:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7213/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7213/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7212",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7212/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7212/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7212/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7212",
        "id": 1844163250,
        "node_id": "I_kwDOIWuq585t67Ky",
        "number": 7212,
        "title": "[Feature Request]: Fastchat RESTful OpenAI API server drop-in for Llama 2",
        "user": {
            "login": "asaiacai",
            "id": 25255966,
            "node_id": "MDQ6VXNlcjI1MjU1OTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/25255966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asaiacai",
            "html_url": "https://github.com/asaiacai",
            "followers_url": "https://api.github.com/users/asaiacai/followers",
            "following_url": "https://api.github.com/users/asaiacai/following{/other_user}",
            "gists_url": "https://api.github.com/users/asaiacai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asaiacai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asaiacai/subscriptions",
            "organizations_url": "https://api.github.com/users/asaiacai/orgs",
            "repos_url": "https://api.github.com/users/asaiacai/repos",
            "events_url": "https://api.github.com/users/asaiacai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asaiacai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-09T23:09:40Z",
        "updated_at": "2023-08-12T03:49:01Z",
        "closed_at": "2023-08-12T03:49:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nI'm trying to make drop-in replacement chat endpoint for `meta-llama/Llama-2-7b-chat-hf` using the [FastChat OpenAI API](https://github.com/lm-sys/FastChat/blob/32c1910ebb3567545556f9cb859ba02b36b35ed6/docs/openai_api.md). Something like.\r\n\r\n```\r\nimport os\r\nfrom llama_index.llms import ChatMessage, OpenAI\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"EMPTY\"\r\nos.environ[\"OPENAI_API_BASE\"] = \"http://localhost:8000/v1\"\r\n\r\nmessages = [\r\n    ChatMessage(role=\"system\", content=\"You are a pirate with a colorful personality\"),\r\n    ChatMessage(role=\"user\", content=\"What is your name\"),\r\n]\r\n\r\nresp = OpenAI(model=\"Llama-2-7b-chat-hf\").chat(messages)\r\nprint(resp)\r\n```\r\n\r\n### Reason\r\nI can interact with my model through the `openai` python library and set my key with `export OPENAI_API_KEY=\"EMPTY\"`. However, the `OPENAI_API_KEY` value is format checked disallowing this behavior if I use LlamaIndex.\r\n\r\n```\r\nValueError: Invalid OpenAI API key.\r\nAPI key should be of the format: \"sk-\" followed by 48 alphanumeric characters.\r\n```\r\n\r\nAlso if I hard code `OPENAI_API_KEY` to pass the format check, I run into another issue where I cannot use `OpenAI(model=\"Llama-2-7b-chat-hf\")` since it is not in the list of supported models. Maybe it makes more sense to create a new subclass in this situation?\r\n\r\n```\r\n  File \"/Users/asai/miniconda3/envs/llama/lib/python3.10/site-packages/llama_index/llms/openai_utils.py\", line 186, in openai_modelname_to_contextsize\r\n    raise ValueError(\r\nValueError: Unknown model: Llama-2-7b-chat-hf. Please provide a valid OpenAI model name.Known models are: gpt-4, gpt-4-32k, gpt-4-0613, gpt-4-32k-0613, gpt-4-0314, gpt-4-32k-0314, gpt-3.5-turbo, gpt-3.5-turbo-16k, gpt-3.5-turbo-0613, gpt-3.5-turbo-16k-0613, gpt-3.5-turbo-0301, text-davinci-003, text-davinci-002, text-ada-001, text-babbage-001, text-curie-001, ada, babbage, curie, davinci, gpt-35-turbo-16k, gpt-35-turbo\r\n```\r\n\r\n### Value of Feature\r\n\r\nFastchat integrates with vLLM which is currently SoTA for serving OSS LLMs and has an openAI API server already.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7212/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7212/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7211",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7211/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7211/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7211/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7211",
        "id": 1844038834,
        "node_id": "PR_kwDOIWuq585XlBqZ",
        "number": 7211,
        "title": "SentenceWindowNodeParser + MetadataReplacementPostProcessor",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-09T21:25:22Z",
        "updated_at": "2023-08-10T21:08:51Z",
        "closed_at": "2023-08-10T21:08:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7211",
            "html_url": "https://github.com/run-llama/llama_index/pull/7211",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7211.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7211.patch",
            "merged_at": "2023-08-10T21:08:50Z"
        },
        "body": "# Description\r\n\r\nThis is an attempt to optimize our retrieval, specifically for vector index. We split documents into single sentences, and embed based on each sentence.\r\n\r\nThen during retrieval, each sentence is replaced with it's surrounding context window of sentences.\r\n\r\nThis uses both a new node parser and a new node post-processor.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7211/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7211/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7210",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7210/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7210/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7210/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7210",
        "id": 1843936857,
        "node_id": "I_kwDOIWuq585t6D5Z",
        "number": 7210,
        "title": "[Question]: GPT and Simple KeywordTableRetriever won't respond to keyword template",
        "user": {
            "login": "kylemassimilian",
            "id": 31603204,
            "node_id": "MDQ6VXNlcjMxNjAzMjA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/31603204?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylemassimilian",
            "html_url": "https://github.com/kylemassimilian",
            "followers_url": "https://api.github.com/users/kylemassimilian/followers",
            "following_url": "https://api.github.com/users/kylemassimilian/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylemassimilian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylemassimilian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylemassimilian/subscriptions",
            "organizations_url": "https://api.github.com/users/kylemassimilian/orgs",
            "repos_url": "https://api.github.com/users/kylemassimilian/repos",
            "events_url": "https://api.github.com/users/kylemassimilian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylemassimilian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-09T20:11:51Z",
        "updated_at": "2023-10-24T06:30:17Z",
        "closed_at": "2023-10-24T06:30:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI am trying to use a KeywordTableRetriever to combine vector and keyword search. My keyword retriever will not extract important keywords, specifically dates, even when I use a keyword prompt template to do so. Is there a way to give more direct guidance to the KeywordTableGPTRetriever? Has anyone also come across this problem? \r\n\r\n```\r\n`INFO:llama_index.indices.keyword_table.retrievers:> Starting query: Tell me about the February 2023 Alpha Monthly Update.\r\n> Starting query: Tell me about the February 2023 Alpha Monthly Update.\r\nINFO:llama_index.indices.keyword_table.retrievers:query keywords: ['2023', 'alpha', 'february', 'update', 'monthly']\r\nquery keywords: ['2023', 'alpha', 'february', 'update', 'monthly']\r\nINFO:llama_index.indices.keyword_table.retrievers:> Extracted keywords: ['2023', 'alpha', 'update']\r\n> Extracted keywords: ['2023', 'alpha', 'update']\r\nINFO:llama_index.indices.keyword_table.retrievers:> Starting query: Tell me about the February 2023 Alpha Monthly Update.\r\n> Starting query: Tell me about the February 2023 Alpha Monthly Update.\r\nINFO:llama_index.indices.keyword_table.retrievers:query keywords: ['2023', 'alpha', 'february', 'update', 'monthly']\r\nquery keywords: ['2023', 'alpha', 'february', 'update', 'monthly']\r\nINFO:llama_index.indices.keyword_table.retrievers:> Extracted keywords: ['2023', 'alpha', 'update']\r\n> Extracted keywords: ['2023', 'alpha', 'update']`\r\n```\r\n```\r\n`class CustomRetriever(BaseRetriever):\r\n    \"\"\"Custom retriever that performs both semantic search and hybrid search\"\"\"\r\n\r\n    def __init__(\r\n            self,\r\n            vector_retriever: VectorIndexRetriever,\r\n            keyword_retriever: KeywordTableGPTRetriever,\r\n            mode: str = \"OR\"\r\n\r\n    ) -> None:\r\n        \"\"\"Init params.\"\"\"\r\n\r\n        self._vector_retriever = vector_retriever\r\n        self._keyword_retriever = keyword_retriever\r\n        if mode not in (\"AND\", \"OR\"):\r\n            raise ValueError(\"Invalid mode.\")\r\n        self._mode = mode\r\n    \r\n    def _retrieve(self, query_bundle: QueryBundle) -> List[NodeWithScore]:\r\n        \"\"\"Retrieve nodes given query\"\"\"\r\n\r\n        vector_nodes = self._vector_retriever.retrieve(query_bundle)\r\n        keyword_nodes = self._keyword_retriever.retrieve(query_bundle)\r\n\r\n        # extract just the node_id from each NodeWithScore object in vector_nodes and keyword_nodes and store in set\r\n        vector_ids = {n.node.node_id for n in vector_nodes}\r\n        keyword_ids = {n.node.node_id for n in keyword_nodes}\r\n\r\n        # combined_dict stores all the NodeWithScore objects as values, with the node IDs as keys.\r\n        combined_dict = {n.node.node_id: n for n in vector_nodes}\r\n        combined_dict.update({n.node.node_id: n for n in keyword_nodes})\r\n\r\n        # if mode is AND, take the intersection of the vector and keyword node IDs\r\n        if self._mode == \"AND\":\r\n            retrieve_ids = vector_ids.intersection(keyword_ids)\r\n        else:\r\n            retrieve_ids = vector_ids.union(keyword_ids)\r\n\r\n        # extract the NodeWithScore objects for the retrieved IDs into a list and return that list\r\n        retrieve_nodes = [combined_dict[rid] for rid in retrieve_ids]\r\n        return retrieve_nodes\r\n\r\n\r\ndef kw_vector_search(vector_index, keyword_index, query):\r\n\r\n    logging.basicConfig(stream=sys.stdout, level=logging.INFO)\r\n    logging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\r\n\r\n\r\n    QUERY_KEYWORD_EXTRACT_TEMPLATE_TMPL = (\r\n        \"A question is provided below. Given the question, extract as many keywords from the question as possible up to {max_keywords} \"\r\n        \"keywords from the text.  \"\r\n        \"to best lookup answers to the question\\n\"\r\n        \"---------------------\\n\"\r\n        \"{question}\\n\"\r\n        \"---------------------\\n\"\r\n        \"Extract keywords from the question that denote months (ex: February, March, April)\"\r\n        \"Provide keywords in the following comma-separated format: 'KEYWORDS: <keywords>'\\n\"\r\n    )\r\n    QUERY_KEYWORD_EXTRACT_TEMPLATE = Prompt(\r\n        QUERY_KEYWORD_EXTRACT_TEMPLATE_TMPL,\r\n        prompt_type=PromptType.QUERY_KEYWORD_EXTRACT,\r\n    )\r\n\r\n    #define custom retriever\r\n    vector_retriever = VectorIndexRetriever(index=vector_index, similarity_top_k=3)\r\n    keyword_retriever = KeywordTableGPTRetriever(index=keyword_index, max_keywords=10,\r\n                                                 query_keyword_extract_template=QUERY_KEYWORD_EXTRACT_TEMPLATE) #######\r\n    custom_retriever = CustomRetriever(vector_retriever, keyword_retriever)\r\n\r\n    # Define response synthesizer - callback manager?\r\n    response_synthesizer = get_response_synthesizer()\r\n\r\n    # Assemble query engine\r\n    custom_query_engine = RetrieverQueryEngine(\r\n        retriever=custom_retriever, \r\n        response_synthesizer=response_synthesizer,\r\n    )\r\n    #vector query engine\r\n    vector_query_engine = RetrieverQueryEngine(\r\n        retriever=vector_retriever, \r\n        response_synthesizer=response_synthesizer,\r\n    )\r\n    # keyword query engine\r\n    keyword_query_engine = RetrieverQueryEngine(\r\n        retriever=keyword_retriever, \r\n        response_synthesizer=response_synthesizer,\r\n    )\r\n\r\n    custom_response = custom_query_engine.query(query)\r\n    vector_response = vector_query_engine.query(query)\r\n    keyword_response = keyword_query_engine.query(query)\r\n    \r\n    return custom_response, vector_response, keyword_response\r\n```\r\n\r\nWhen I ask a question that does not have a month (or date) in the query, the keywords are months. Seems like the KeywordTableGPTRetriever is interpreting my prompt in a strange way. \r\n\r\n```\r\n`INFO:llama_index.indices.keyword_table.retrievers:> Starting query: What is CRC?\r\n> Starting query: What is CRC?\r\n> Starting query: What is CRC?\r\nINFO:llama_index.indices.keyword_table.retrievers:query keywords: ['february', 'march', 'crc', 'april']\r\nquery keywords: ['february', 'march', 'crc', 'april']\r\nquery keywords: ['february', 'march', 'crc', 'april']\r\nINFO:llama_index.indices.keyword_table.retrievers:> Extracted keywords: ['march', 'crc']\r\n> Extracted keywords: ['march', 'crc']\r\n> Extracted keywords: ['march', 'crc']`\r\n```\r\n\r\nWhen I just say the phrase \"February 2023,\" there are no keywords fetched. \r\n\r\n```\r\n`INFO:llama_index.indices.keyword_table.retrievers:> Starting query: February 2023\r\n> Starting query: February 2023\r\n> Starting query: February 2023\r\nINFO:llama_index.indices.keyword_table.retrievers:query keywords: ['february']\r\nquery keywords: ['february']\r\nquery keywords: ['february']\r\nINFO:llama_index.indices.keyword_table.retrievers:> Extracted keywords: []\r\n> Extracted keywords: []\r\n> Extracted keywords: []`\r\n```\r\nInterestingly, when I ask \"What date did we discuss x?\" it's able to answer pretty well. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7210/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7210/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7209",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7209/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7209/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7209/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7209",
        "id": 1843584559,
        "node_id": "PR_kwDOIWuq585Xjfb-",
        "number": 7209,
        "title": "enhancement: Use superior mBERT-based entity extraction model",
        "user": {
            "login": "tomaarsen",
            "id": 37621491,
            "node_id": "MDQ6VXNlcjM3NjIxNDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/37621491?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomaarsen",
            "html_url": "https://github.com/tomaarsen",
            "followers_url": "https://api.github.com/users/tomaarsen/followers",
            "following_url": "https://api.github.com/users/tomaarsen/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomaarsen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomaarsen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomaarsen/subscriptions",
            "organizations_url": "https://api.github.com/users/tomaarsen/orgs",
            "repos_url": "https://api.github.com/users/tomaarsen/repos",
            "events_url": "https://api.github.com/users/tomaarsen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomaarsen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-09T16:01:53Z",
        "updated_at": "2023-08-09T16:47:58Z",
        "closed_at": "2023-08-09T16:19:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7209",
            "html_url": "https://github.com/run-llama/llama_index/pull/7209",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7209.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7209.patch",
            "merged_at": "2023-08-09T16:19:49Z"
        },
        "body": "Hello!\r\n\r\n## Pull Request overview\r\n* Use a superior entity extraction model.\r\n  * 92.48 F1 instead of 91.31 F1.\r\n\r\n# Description\r\nI've replaced [tomaarsen/span-marker-xlm-roberta-base-multinerd](https://huggingface.co/tomaarsen/span-marker-xlm-roberta-base-multinerd) (91.31 F1) with [tomaarsen/span-marker-mbert-base-multinerd](https://huggingface.co/tomaarsen/span-marker-mbert-base-multinerd) (92.48 F1).\r\nI'm quite excited to see SpanMarker being used in this way - well done. Your results seem very promising.\r\n\r\n## Type of Change\r\n\r\n- [x] Enhancement.\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n\r\n---\r\n\r\n- Tom Aarsen",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7209/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7209/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7208",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7208/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7208/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7208/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7208",
        "id": 1843511391,
        "node_id": "I_kwDOIWuq585t4cBf",
        "number": 7208,
        "title": "[Bug]: ",
        "user": {
            "login": "wcw1996119",
            "id": 63002387,
            "node_id": "MDQ6VXNlcjYzMDAyMzg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/63002387?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wcw1996119",
            "html_url": "https://github.com/wcw1996119",
            "followers_url": "https://api.github.com/users/wcw1996119/followers",
            "following_url": "https://api.github.com/users/wcw1996119/following{/other_user}",
            "gists_url": "https://api.github.com/users/wcw1996119/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wcw1996119/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wcw1996119/subscriptions",
            "organizations_url": "https://api.github.com/users/wcw1996119/orgs",
            "repos_url": "https://api.github.com/users/wcw1996119/repos",
            "events_url": "https://api.github.com/users/wcw1996119/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wcw1996119/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-09T15:26:56Z",
        "updated_at": "2023-08-31T03:33:58Z",
        "closed_at": "2023-08-31T03:33:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nwhen i try to import anything from llama_index, it causes the same error:\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\aiwus\\wus-webdemo\\app.py\", line 4, in <module>\r\n    from llama_index import GPTVectorStoreIndex\r\n  File \"C:\\Users\\aiwus\\wus-webdemo\\venv\\lib\\site-packages\\llama_index\\__init__.py\", line 11, in <module>\r\n    from llama_index.data_structs.struct_type import IndexStructType\r\n  File \"C:\\Users\\aiwus\\wus-webdemo\\venv\\lib\\site-packages\\llama_index\\data_structs\\__init__.py\", line 3, in <module>\r\n    from llama_index.data_structs.data_structs_v2 import (\r\n  File \"C:\\Users\\aiwus\\wus-webdemo\\venv\\lib\\site-packages\\llama_index\\data_structs\\data_structs_v2.py\", line 12, in <module>\r\n    from dataclasses_json import DataClassJsonMixin\r\n  File \"C:\\Users\\aiwus\\wus-webdemo\\venv\\lib\\site-packages\\dataclasses_json\\__init__.py\", line 2, in <module>\r\n    from dataclasses_json.api import (DataClassJsonMixin,\r\n  File \"C:\\Users\\aiwus\\wus-webdemo\\venv\\lib\\site-packages\\dataclasses_json\\api.py\", line 7, in <module>\r\n    from dataclasses_json.core import (Json, _ExtendedEncoder, _asdict,\r\n  File \"C:\\Users\\aiwus\\wus-webdemo\\venv\\lib\\site-packages\\dataclasses_json\\core.py\", line 17, in <module>\r\n    from typing_inspect import is_union_type  # type: ignore\r\n  File \"C:\\Users\\aiwus\\wus-webdemo\\venv\\lib\\site-packages\\typing_inspect.py\", line 17, in <module>\r\n    from typing_extensions import _TypedDictMeta as _TypedDictMeta_TE\r\n  File \"C:\\Users\\aiwus\\wus-webdemo\\venv\\lib\\site-packages\\typing_extensions.py\", line 1127, in <module>\r\n    def TypeAlias(self, parameters):\r\nTypeError: __init__() missing 1 required positional argument: 'doc'\n\n### Version\n\n0.5.16\n\n### Steps to Reproduce\n\nimport\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7208/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7208/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7207",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7207/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7207/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7207/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7207",
        "id": 1843506868,
        "node_id": "PR_kwDOIWuq585XjOSn",
        "number": 7207,
        "title": "Update available openai models in docs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-09T15:24:16Z",
        "updated_at": "2023-08-09T15:29:00Z",
        "closed_at": "2023-08-09T15:28:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7207",
            "html_url": "https://github.com/run-llama/llama_index/pull/7207",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7207.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7207.patch",
            "merged_at": "2023-08-09T15:28:59Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7207/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7207/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7206",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7206/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7206/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7206/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7206",
        "id": 1843339372,
        "node_id": "I_kwDOIWuq585t3yBs",
        "number": 7206,
        "title": "[Question]: RecursionError: maximum recursion depth exceeded in comparison",
        "user": {
            "login": "xinkeyb",
            "id": 45843515,
            "node_id": "MDQ6VXNlcjQ1ODQzNTE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/45843515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xinkeyb",
            "html_url": "https://github.com/xinkeyb",
            "followers_url": "https://api.github.com/users/xinkeyb/followers",
            "following_url": "https://api.github.com/users/xinkeyb/following{/other_user}",
            "gists_url": "https://api.github.com/users/xinkeyb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xinkeyb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xinkeyb/subscriptions",
            "organizations_url": "https://api.github.com/users/xinkeyb/orgs",
            "repos_url": "https://api.github.com/users/xinkeyb/repos",
            "events_url": "https://api.github.com/users/xinkeyb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xinkeyb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-09T14:12:53Z",
        "updated_at": "2023-10-24T06:30:15Z",
        "closed_at": "2023-10-24T06:30:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n## If you can help me solve this bug, then I would greatly appreciate it.\r\n\r\n### 1. I referred to this example to implement llama_ Index combines knowledge graph and uses local LLM\uff1ahttps://github.com/jerryjliu/llama_index/blob/main/docs/examples/index_structs/knowledge_graph/Neo4jKGIndexDemo.ipynb\r\n\r\n### 2. But the following error occurred\uff1a\r\nTraceback (most recent call last):\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/site-packages/llama_index/response_synthesizers/tree_summarize.py\", line 149, in get_response\r\nreturn self.get_response(\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/site-packages/llama_index/response_synthesizers/tree_summarize.py\", line 149, in get_response\r\nreturn self.get_response(\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/site-packages/llama_index/response_synthesizers/tree_summarize.py\", line 149, in get_response\r\nreturn self.get_response(\r\n[Previous line repeated 977 more times]\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/site-packages/llama_index/response_synthesizers/tree_summarize.py\", line 100, in get_response\r\ntext_qa_template = self._text_qa_template.partial_format(query_str=query_str)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/site-packages/llama_index/prompts/base.py\", line 112, in partial_format\r\nraise e\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/site-packages/llama_index/prompts/base.py\", line 107, in partial_format\r\ncopy_obj = deepcopy(self)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 172, in deepcopy\r\ny = _reconstruct(x, memo, *rv)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 270, in _reconstruct\r\nstate = deepcopy(state, memo)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 146, in deepcopy\r\ny = copier(x, memo)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 230, in _deepcopy_dict\r\ny[deepcopy(key, memo)] = deepcopy(value, memo)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 172, in deepcopy\r\ny = _reconstruct(x, memo, *rv)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 270, in _reconstruct\r\nstate = deepcopy(state, memo)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 146, in deepcopy\r\ny = copier(x, memo)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 230, in _deepcopy_dict\r\ny[deepcopy(key, memo)] = deepcopy(value, memo)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 146, in deepcopy\r\ny = copier(x, memo)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 230, in _deepcopy_dict\r\ny[deepcopy(key, memo)] = deepcopy(value, memo)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 172, in deepcopy\r\ny = _reconstruct(x, memo, *rv)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 270, in _reconstruct\r\nstate = deepcopy(state, memo)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 146, in deepcopy\r\ny = copier(x, memo)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 230, in _deepcopy_dict\r\ny[deepcopy(key, memo)] = deepcopy(value, memo)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 146, in deepcopy\r\ny = copier(x, memo)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 230, in _deepcopy_dict\r\ny[deepcopy(key, memo)] = deepcopy(value, memo)\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/copy.py\", line 138, in deepcopy\r\ny = memo.get(d, _nil)\r\nRecursionError: maximum recursion depth exceeded in comparison\r\nException ignored in: <function Driver.del at 0x7fe150bd0940>\r\nTraceback (most recent call last):\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/site-packages/neo4j/_sync/driver.py\", line 485, in del\r\nFile \"/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.8/site-packages/neo4j/_meta.py\", line 226, in unclosed_resource_warn\r\nTypeError: 'NoneType' object is not callable\r\n\r\n### 3. This is my whole code\uff1a\r\n```\r\nimport os\r\nimport logging\r\nimport sys\r\nfrom llama_index.llms import CustomLLM, CompletionResponse, LLMMetadata\r\nfrom llama_index.llms.base import llm_chat_callback, llm_completion_callback\r\nfrom llama_index import ServiceContext\r\nimport torch\r\nfrom transformers import pipeline\r\nfrom typing import Optional, List, Mapping, Any\r\nfrom llama_index import (\r\n    ServiceContext,\r\n    SimpleDirectoryReader,\r\n    LangchainEmbedding,\r\n    ListIndex\r\n)\r\nfrom llama_index.llms.base import CompletionResponseGen\r\nfrom llama_index.callbacks import CallbackManager\r\n\r\n\r\n\r\n# set context window size\r\ncontext_window = 2048\r\n# set number of output tokens\r\nnum_output = 256\r\n\r\n# store the pipeline/model outisde of the LLM class to avoid memory issues\r\nmodel_name = \"/data/zhaoxinke/PromptCBLUE-main/src/bloom-7b1\"\r\npipeline = pipeline(\"text-generation\", model=model_name, device=\"cuda:0\", model_kwargs={\"torch_dtype\": torch.bfloat16})\r\n\r\n\r\nclass OurLLM(CustomLLM):\r\n\r\n    @property\r\n    def metadata(self) -> LLMMetadata:\r\n        \"\"\"Get LLM metadata.\"\"\"\r\n        return LLMMetadata(\r\n            context_window=context_window,\r\n            num_output=num_output,\r\n            model_name=model_name\r\n        )\r\n\r\n    @llm_completion_callback()\r\n    def complete(self, prompt: str, **kwargs: Any) -> CompletionResponse:\r\n        prompt_length = len(prompt)\r\n        response = pipeline(prompt, max_new_tokens=num_output)[0][\"generated_text\"]\r\n\r\n        # only return newly generated tokens\r\n        text = response[prompt_length:]\r\n        return CompletionResponse(text=text)\r\n\r\n    @llm_completion_callback()\r\n    def stream_complete(self, prompt: str, **kwargs: Any) -> CompletionResponseGen:\r\n        raise NotImplementedError()\r\n\r\ncallback_manager = CallbackManager([])\r\n# define our LLM\r\nllm = OurLLM(callback_manager)\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n    llm=llm,\r\n    context_window=context_window,\r\n    num_output=num_output,\r\n    embed_model=\"local\"\r\n)\r\n\r\n\r\n\r\n\r\nfrom llama_index import (\r\n    KnowledgeGraphIndex,\r\n    LLMPredictor,\r\n    ServiceContext,\r\n    SimpleDirectoryReader,\r\n)\r\nfrom llama_index.storage.storage_context import StorageContext\r\nfrom llama_index.graph_stores import Neo4jGraphStore\r\n\r\nfrom llama_index.llms import OpenAI\r\nfrom IPython.display import Markdown, display\r\n\r\n\r\nusername = \"neo4j\"\r\npassword = \"Shb9Sy5q_j_5hw_ZybKyfr6SPQsqqdB7Z-Xza4-pgQ\"\r\nurl = \"neo4j+s://46de362d.databases.neo4j.io:7687\"\r\ndatabase = \"neo4j\"\r\n\r\n\r\n\r\ndocuments = SimpleDirectoryReader(\r\n    \"./data\"\r\n).load_data()\r\n\r\ngraph_store = Neo4jGraphStore(\r\n    username=username,\r\n    password=password,\r\n    url=url,\r\n    database=database,\r\n)\r\n\r\nstorage_context = StorageContext.from_defaults(graph_store=graph_store)\r\n\r\n# NOTE: can take a while!\r\nindex = KnowledgeGraphIndex.from_documents(\r\n    documents,\r\n    storage_context=storage_context,\r\n    max_triplets_per_chunk=2,\r\n    service_context=service_context,\r\n)\r\n\r\nquery_engine = index.as_query_engine(include_text=False, response_mode=\"tree_summarize\")\r\n\r\nresponse = query_engine.query(\"Tell me more about Tom Hanks\")\r\n\r\ndisplay(Markdown(f\"<b>{response}</b>\"))\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7206/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7206/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7205",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7205/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7205/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7205/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7205",
        "id": 1843129383,
        "node_id": "PR_kwDOIWuq585Xh8j6",
        "number": 7205,
        "title": "Make ChatMemoryBuffer Pickleable",
        "user": {
            "login": "SlapDrone",
            "id": 32279503,
            "node_id": "MDQ6VXNlcjMyMjc5NTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/32279503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SlapDrone",
            "html_url": "https://github.com/SlapDrone",
            "followers_url": "https://api.github.com/users/SlapDrone/followers",
            "following_url": "https://api.github.com/users/SlapDrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/SlapDrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SlapDrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SlapDrone/subscriptions",
            "organizations_url": "https://api.github.com/users/SlapDrone/orgs",
            "repos_url": "https://api.github.com/users/SlapDrone/repos",
            "events_url": "https://api.github.com/users/SlapDrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SlapDrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-09T12:25:53Z",
        "updated_at": "2023-08-09T16:39:11Z",
        "closed_at": "2023-08-09T16:39:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7205",
            "html_url": "https://github.com/run-llama/llama_index/pull/7205",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7205.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7205.patch",
            "merged_at": "2023-08-09T16:39:01Z"
        },
        "body": "# Description\r\n\r\n`llama_index.memory.ChatMemoryBuffer` would try to pickle its tokenizer, leading to an error.\r\n\r\nImplemented `__getstate__` and `__setstate__` to circumvent this and reconstruct the tokenizer according to the init logic.\r\n\r\nFixes # (issue)\r\n#886 \r\n#7169 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7205/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7205/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7204",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7204/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7204/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7204/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7204",
        "id": 1842891561,
        "node_id": "PR_kwDOIWuq585XhI5L",
        "number": 7204,
        "title": "feat: KG RAG query engine, enable Graph RAG on existing KGs",
        "user": {
            "login": "wey-gu",
            "id": 1651790,
            "node_id": "MDQ6VXNlcjE2NTE3OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1651790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wey-gu",
            "html_url": "https://github.com/wey-gu",
            "followers_url": "https://api.github.com/users/wey-gu/followers",
            "following_url": "https://api.github.com/users/wey-gu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wey-gu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wey-gu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wey-gu/subscriptions",
            "organizations_url": "https://api.github.com/users/wey-gu/orgs",
            "repos_url": "https://api.github.com/users/wey-gu/repos",
            "events_url": "https://api.github.com/users/wey-gu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wey-gu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-08-09T09:58:23Z",
        "updated_at": "2023-08-21T08:10:49Z",
        "closed_at": "2023-08-16T03:59:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7204",
            "html_url": "https://github.com/run-llama/llama_index/pull/7204",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7204.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7204.patch",
            "merged_at": "2023-08-16T03:59:07Z"
        },
        "body": "# Description\r\n\r\n- Now we could do Graph RAG towards existing KGs\r\n- Enabled nl2cypher for older NebulaGraph, with improved schema fetching impl., reported by @pachgadehardik via [here](https://github.com/jerryjliu/llama_index/pull/2581#issuecomment-1668960096)\r\n\r\nThe shape now is RFC @logan-markewich @jerryjliu , in case good to go I'll impl. the async functions, too.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7204/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7204/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7203",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7203/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7203/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7203/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7203",
        "id": 1842288965,
        "node_id": "PR_kwDOIWuq585XfG5y",
        "number": 7203,
        "title": "feat/zep vectorstore",
        "user": {
            "login": "danielchalef",
            "id": 131175,
            "node_id": "MDQ6VXNlcjEzMTE3NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/131175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielchalef",
            "html_url": "https://github.com/danielchalef",
            "followers_url": "https://api.github.com/users/danielchalef/followers",
            "following_url": "https://api.github.com/users/danielchalef/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielchalef/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielchalef/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielchalef/subscriptions",
            "organizations_url": "https://api.github.com/users/danielchalef/orgs",
            "repos_url": "https://api.github.com/users/danielchalef/repos",
            "events_url": "https://api.github.com/users/danielchalef/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielchalef/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-09T00:54:50Z",
        "updated_at": "2023-08-09T22:59:36Z",
        "closed_at": "2023-08-09T22:59:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7203",
            "html_url": "https://github.com/run-llama/llama_index/pull/7203",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7203.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7203.patch",
            "merged_at": "2023-08-09T22:59:36Z"
        },
        "body": "# Description\r\n\r\nZep Vector Store implementation, notebook example, and docs.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nNotebook pretty much tests end-to-end. Tested against Zep 0.9. Note that I need to push a patch-level bugfix to Zep in order to make the metadata filtering work. Will happen tonight.\r\n\r\n- [ ] Added new unit/integration tests\r\n- [X] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7203/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7203/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7202",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7202/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7202/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7202/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7202",
        "id": 1842221729,
        "node_id": "PR_kwDOIWuq585Xe4ct",
        "number": 7202,
        "title": "Update metadata extraction for GPT-3.5",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-08T23:11:31Z",
        "updated_at": "2023-08-09T16:41:04Z",
        "closed_at": "2023-08-09T16:41:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7202",
            "html_url": "https://github.com/run-llama/llama_index/pull/7202",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7202.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7202.patch",
            "merged_at": "2023-08-09T16:41:03Z"
        },
        "body": "# Description\r\n\r\nThis PR tweaks some prompts, as well as updates the metadata extraction notebook. \r\n\r\nAfter a lot of iteration, gpt-3.5 is just kind of bad at reading tabular data. Hence, the demo switches to GPT-4 for answering the questions (but uses 3.5 for extracting metadata)\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7202/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7202/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7201",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7201/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7201/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7201/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7201",
        "id": 1842191220,
        "node_id": "I_kwDOIWuq585tzZt0",
        "number": 7201,
        "title": "Enhancement Request: Weighted Edges for RAG on Biased Knowledge Graph",
        "user": {
            "login": "Baavro",
            "id": 81712871,
            "node_id": "MDQ6VXNlcjgxNzEyODcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/81712871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Baavro",
            "html_url": "https://github.com/Baavro",
            "followers_url": "https://api.github.com/users/Baavro/followers",
            "following_url": "https://api.github.com/users/Baavro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Baavro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Baavro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Baavro/subscriptions",
            "organizations_url": "https://api.github.com/users/Baavro/orgs",
            "repos_url": "https://api.github.com/users/Baavro/repos",
            "events_url": "https://api.github.com/users/Baavro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Baavro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6006591509,
                "node_id": "LA_kwDOIWuq588AAAABZgVQFQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/index",
                "name": "index",
                "color": "736D24",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-08T22:29:22Z",
        "updated_at": "2023-11-02T17:49:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nWe propose an enhancement to the Llama Index's **RAG over Knowledge Graph**  where weights can be assigned to the edges in the graph. This could potentially be achieved through two methods:\r\n\r\n-Allowing manual input of weights to individual edges.\r\n-Implementing an automated system that assigns weights based on predefined criteria or rules.\r\n\r\nAdditionally, we propose the ability to apply filters during retrieval, such as only retrieving edges with weights greater than a certain threshold.\n\n### Reason\n\nOur social media platform, which uses the Retrieval Augmented Generation provided by Llama Index, has unique requirements due to the nature of our data. Specifically, we need to bias our knowledge graph so that certain information, like user profile data, is given more weight than other data, such as user interactions with the platform.\n\n### Value of Feature\n\nThe ability to assign weights to edges would greatly enhance the flexibility and applicability of Llama Index for various use-cases, especially those requiring a bias in data retrieval. This feature would not only benefit our social media platform but would also be advantageous to other users of Llama Index. With the ability to weight edges, users could apply filters during retrieval, such as only retrieving edges with weights greater than a certain threshold. This could improve the relevance and accuracy of the data retrieved, leading to better user experiences and outcomes across many applications.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7201/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7201/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7200",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7200/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7200/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7200/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7200",
        "id": 1841903896,
        "node_id": "PR_kwDOIWuq585XdyAz",
        "number": 7200,
        "title": "Llama.cpp + Local Embedding Fallbacks",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-08T19:19:55Z",
        "updated_at": "2023-08-10T15:10:40Z",
        "closed_at": "2023-08-10T15:10:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7200",
            "html_url": "https://github.com/run-llama/llama_index/pull/7200",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7200.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7200.patch",
            "merged_at": "2023-08-10T15:10:39Z"
        },
        "body": "# Description\r\n\r\nThis PR adds support for `llama.cpp`, as well as fallback support for local models.\r\n\r\nIf either the LLM or embedding  model fails to initialize (due to keys), we warn the user and fallback to local models.\r\n\r\nThis should be a better UX for people, especially when they switch the LLM and don't expect to have to switch the embedding model.\r\n\r\nMemory Reqs:\r\n\r\n- default local LLM = 11.5GB (unclear how this is distributed across RAM vs. VRAM on a Mac though, since it's unified memory)\r\n- default embed model = 0.5GB\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7200/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7200/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7199",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7199/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7199/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7199/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7199",
        "id": 1841847345,
        "node_id": "PR_kwDOIWuq585XdlQx",
        "number": 7199,
        "title": "Update json query prompt",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-08T18:48:14Z",
        "updated_at": "2023-08-08T19:03:16Z",
        "closed_at": "2023-08-08T19:03:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7199",
            "html_url": "https://github.com/run-llama/llama_index/pull/7199",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7199.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7199.patch",
            "merged_at": "2023-08-08T19:03:15Z"
        },
        "body": "# Description\r\n\r\nOptimize the json query prompt for gpt-3.5 and gpt-4\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7199/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7199/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7198",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7198/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7198/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7198/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7198",
        "id": 1841556866,
        "node_id": "PR_kwDOIWuq585XclTg",
        "number": 7198,
        "title": "0.7.20 nebula fixes",
        "user": {
            "login": "moeadham",
            "id": 2141397,
            "node_id": "MDQ6VXNlcjIxNDEzOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2141397?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/moeadham",
            "html_url": "https://github.com/moeadham",
            "followers_url": "https://api.github.com/users/moeadham/followers",
            "following_url": "https://api.github.com/users/moeadham/following{/other_user}",
            "gists_url": "https://api.github.com/users/moeadham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/moeadham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/moeadham/subscriptions",
            "organizations_url": "https://api.github.com/users/moeadham/orgs",
            "repos_url": "https://api.github.com/users/moeadham/repos",
            "events_url": "https://api.github.com/users/moeadham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/moeadham/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-08T15:39:25Z",
        "updated_at": "2023-08-09T15:56:55Z",
        "closed_at": "2023-08-09T15:56:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7198",
            "html_url": "https://github.com/run-llama/llama_index/pull/7198",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7198.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7198.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nFixes issues with the prompt on a Nebula knowledge query prompt. The original incorrectly references the prompted entity not the entity which was linked in the actual graph.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7198/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7198/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7197",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7197/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7197/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7197/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7197",
        "id": 1841517028,
        "node_id": "PR_kwDOIWuq585Xccrp",
        "number": 7197,
        "title": "update custom LLM example",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-08T15:15:31Z",
        "updated_at": "2023-08-08T15:25:20Z",
        "closed_at": "2023-08-08T15:25:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7197",
            "html_url": "https://github.com/run-llama/llama_index/pull/7197",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7197.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7197.patch",
            "merged_at": "2023-08-08T15:25:19Z"
        },
        "body": "# Description\r\n\r\nUpdate imports and class definition\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7191\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7197/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7197/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7196",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7196/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7196/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7196/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7196",
        "id": 1841463179,
        "node_id": "PR_kwDOIWuq585XcRAD",
        "number": 7196,
        "title": "docs: add slidespeak to app showcase list",
        "user": {
            "login": "kgoedecke",
            "id": 5519740,
            "node_id": "MDQ6VXNlcjU1MTk3NDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5519740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kgoedecke",
            "html_url": "https://github.com/kgoedecke",
            "followers_url": "https://api.github.com/users/kgoedecke/followers",
            "following_url": "https://api.github.com/users/kgoedecke/following{/other_user}",
            "gists_url": "https://api.github.com/users/kgoedecke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kgoedecke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kgoedecke/subscriptions",
            "organizations_url": "https://api.github.com/users/kgoedecke/orgs",
            "repos_url": "https://api.github.com/users/kgoedecke/repos",
            "events_url": "https://api.github.com/users/kgoedecke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kgoedecke/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-08T14:44:55Z",
        "updated_at": "2023-08-08T15:25:06Z",
        "closed_at": "2023-08-08T15:24:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7196",
            "html_url": "https://github.com/run-llama/llama_index/pull/7196",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7196.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7196.patch",
            "merged_at": "2023-08-08T15:24:51Z"
        },
        "body": "# Description\r\n\r\nAdded [SlideSpeak](https://slidespeak.co) to app showcase list.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7196/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7196/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7195",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7195/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7195/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7195/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7195",
        "id": 1841339951,
        "node_id": "I_kwDOIWuq585twJ4v",
        "number": 7195,
        "title": "LLAMA-Index Extracting Metadata: nodeparser",
        "user": {
            "login": "ddealwis09",
            "id": 115846150,
            "node_id": "U_kgDOBuesBg",
            "avatar_url": "https://avatars.githubusercontent.com/u/115846150?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ddealwis09",
            "html_url": "https://github.com/ddealwis09",
            "followers_url": "https://api.github.com/users/ddealwis09/followers",
            "following_url": "https://api.github.com/users/ddealwis09/following{/other_user}",
            "gists_url": "https://api.github.com/users/ddealwis09/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ddealwis09/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ddealwis09/subscriptions",
            "organizations_url": "https://api.github.com/users/ddealwis09/orgs",
            "repos_url": "https://api.github.com/users/ddealwis09/repos",
            "events_url": "https://api.github.com/users/ddealwis09/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ddealwis09/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-08T13:37:19Z",
        "updated_at": "2023-08-08T16:32:46Z",
        "closed_at": "2023-08-08T16:32:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello,\r\nI am using Azure and Python for my companies POC and trying to replicate the code for the \"Extracting Metadata for Better Document Indexing and Understanding\":\r\n\r\nhttps://gpt-index.readthedocs.io/en/latest/examples/metadata_extraction/MetadataExtractionSEC.html\r\n\r\nBut when I get to the below line I get an error despite having the environment variables working (I checked) and my Azure setup for the LLM and embeddings works in the other parts of my application.\r\n\r\n`uber_nodes = node_parser.get_nodes_from_documents(uber_docs)`\r\n\r\n**\"InvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.completion.Completion'>\"**\r\n\r\nI am not really sure where you would even supply these parameters in the node_parser function. Any help would be great. Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7195/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7195/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7194",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7194/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7194/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7194/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7194",
        "id": 1841116986,
        "node_id": "I_kwDOIWuq585tvTc6",
        "number": 7194,
        "title": "[Question]:  NameError: name 'DBAPIConnection' is not defined",
        "user": {
            "login": "usama-hameed",
            "id": 26849273,
            "node_id": "MDQ6VXNlcjI2ODQ5Mjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/26849273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/usama-hameed",
            "html_url": "https://github.com/usama-hameed",
            "followers_url": "https://api.github.com/users/usama-hameed/followers",
            "following_url": "https://api.github.com/users/usama-hameed/following{/other_user}",
            "gists_url": "https://api.github.com/users/usama-hameed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/usama-hameed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/usama-hameed/subscriptions",
            "organizations_url": "https://api.github.com/users/usama-hameed/orgs",
            "repos_url": "https://api.github.com/users/usama-hameed/repos",
            "events_url": "https://api.github.com/users/usama-hameed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/usama-hameed/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-08T11:24:49Z",
        "updated_at": "2023-10-24T06:30:13Z",
        "closed_at": "2023-10-24T06:30:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI have a application running on kubernetes, I have added llamindex and other packages required for llamaindex in requirements.txt file all of them are installed successfully but when I try to access the script with llamaindex import I get this error \" NameError: name 'DBAPIConnection' is not defined\". There might be an issue with my environment. I just want to know what is the reason for this bug that might be helpful to fix it.\r\nThanks ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7194/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7194/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7193",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7193/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7193/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7193/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7193",
        "id": 1841055108,
        "node_id": "I_kwDOIWuq585tvEWE",
        "number": 7193,
        "title": "[Feature Request]: Option for additional instructions for post processing a tool's output (FunctionTool)",
        "user": {
            "login": "vedtam",
            "id": 4981592,
            "node_id": "MDQ6VXNlcjQ5ODE1OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4981592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vedtam",
            "html_url": "https://github.com/vedtam",
            "followers_url": "https://api.github.com/users/vedtam/followers",
            "following_url": "https://api.github.com/users/vedtam/following{/other_user}",
            "gists_url": "https://api.github.com/users/vedtam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vedtam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vedtam/subscriptions",
            "organizations_url": "https://api.github.com/users/vedtam/orgs",
            "repos_url": "https://api.github.com/users/vedtam/repos",
            "events_url": "https://api.github.com/users/vedtam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vedtam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-08T10:43:22Z",
        "updated_at": "2023-11-14T16:33:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nHi,\r\n\r\nI'm facing an issue where the tool I've created is returns a list of HTML anchor tags which are rendered on the client side as clickable links to articles:\r\n\r\n```\r\n    def latest_news_headlines():\r\n      response = requests.get(f\"http://127.0.0.1:3000/sec/stories/top/0/25?token={token}\").json()\r\n      data = response.get(\"data\")\r\n      return [f'<a href=\"https://my-site/story/{d.get(\"id\")}\" target=\"_blank\">{d.get(\"headline\")}</a>' for d in data.get(\"results\")]\r\n\r\n    latest_news_tool = FunctionTool.from_defaults(\r\n      fn=latest_news_headlines,\r\n      name=\"latest_news\",\r\n      description=\"Get the latest news headlines. Keep the HTML markup when returning the results.\",\r\n    )\r\n```\r\nThe problem is, when the the final response gets summarised by the LLM, it strips the HTML markup and replaces it:\r\n```\r\n# output\r\n[2022 saw \u20ac1.77bn worth of fraud and irregularities in EU, Commission reports](https://wmy-site/story/13009)\r\n```\r\nI can't use the system prompt as there are multiple tools I'm using and I wan't post processing only for the above tool. Based on my test, OpenAI's function calling capability uses the tool name and description only for determining the right tool for the job, but any additional instructions included into the description are not taken into account when generating the final response.\r\n\r\nAs a workaround, I've included the instruction into the output returned from the function like:\r\n```\r\n    def latest_news_headlines():\r\n      response = requests.get(f\"http://127.0.0.1:3000/sec/stories/top/0/25?token={token}\").json()\r\n      data = response.get(\"data\")\r\n      linkList = [f'<a href=\"https://my-site/story/{d.get(\"id\")}\" target=\"_blank\">{d.get(\"headline\")}</a>' for d in data.get(\"results\")][:2]\r\n      return f\"\"\"\r\n      Here are the latest news headlines as a list of HTMLAnchorElements. You must not change the HTML syntax.:\r\n      ```\r\n      {linkList}\r\n      ```\r\n      \"\"\"\r\n```\r\nWhich works but not always. I think, there should be a way to add a template to custom tools similar to `text_qa_template` for the query engine. Any suggestion is welcome.\r\n\r\nThanks!\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7193/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7192",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7192/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7192/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7192/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7192",
        "id": 1841011279,
        "node_id": "PR_kwDOIWuq585Xau2J",
        "number": 7192,
        "title": "[nebula graph] trim backticks from nebulagraph queries",
        "user": {
            "login": "moeadham",
            "id": 2141397,
            "node_id": "MDQ6VXNlcjIxNDEzOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2141397?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/moeadham",
            "html_url": "https://github.com/moeadham",
            "followers_url": "https://api.github.com/users/moeadham/followers",
            "following_url": "https://api.github.com/users/moeadham/following{/other_user}",
            "gists_url": "https://api.github.com/users/moeadham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/moeadham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/moeadham/subscriptions",
            "organizations_url": "https://api.github.com/users/moeadham/orgs",
            "repos_url": "https://api.github.com/users/moeadham/repos",
            "events_url": "https://api.github.com/users/moeadham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/moeadham/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-08T10:14:32Z",
        "updated_at": "2023-08-11T08:09:36Z",
        "closed_at": "2023-08-08T15:45:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7192",
            "html_url": "https://github.com/run-llama/llama_index/pull/7192",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7192.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7192.patch",
            "merged_at": "2023-08-08T15:45:26Z"
        },
        "body": "It seems that backticks are being passed into nebulagraph directly, which is raising errors. I'm not sure how far up the chain these backticks are being added in, but in trying to find where to fix it I got scared of breaking other graph stores.\r\n\r\nSo, here is a quick solution to strip out backticks from these queries.\r\n\r\nBelow is an example of the error this fixes:\r\n\r\n```\r\nERROR:llama_index.graph_stores.nebulagraph:Query failed. Query: ```\r\nMATCH (p:`entity`)-[:relationship]->(m:`entity`) WHERE p.`entity`.`name` == 'Chris Pratt'\r\nRETURN p.`entity`.`name`;\r\n```, Param: {}Error message: Query failed. Query: ``` MATCH (p:`entity`)-[:relationship]->(m:`entity`) WHERE p.`entity`.`name` == 'Chris Pratt' RETURN p.`entity`.`name`;\r\n```, Param: {}Error message: SyntaxError: syntax error near ```\r\nMATCH'\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/site-packages/tenacity/__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n  File \"/root/volume/llama_index/graph_stores/nebulagraph.py\", line 213, in execute\r\n    raise e\r\n  File \"/root/volume/llama_index/graph_stores/nebulagraph.py\", line 189, in execute\r\n    raise ValueError(\r\nValueError: Query failed. Query: ```\r\nMATCH (p:`entity`)-[:relationship]->(m:`entity`) WHERE p.`entity`.`name` == 'Chris Pratt'\r\nRETURN p.`entity`.`name`;\r\n```, Param: {}Error message: SyntaxError: syntax error near ``` MATCH'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/root/volume/examples/######/prompt.py\", line 67, in <module>\r\n    response = query_engine.query(\r\n  File \"/root/volume/llama_index/indices/query/base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n  File \"/root/volume/llama_index/query_engine/knowledge_graph_query_engine.py\", line 203, in _query\r\n    graph_store_response = self.graph_store.query(query=graph_store_query)\r\n  File \"/root/volume/llama_index/graph_stores/nebulagraph.py\", line 545, in query\r\n    result = self.execute(query, param_map)\r\n  File \"/usr/local/lib/python3.10/site-packages/tenacity/__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n  File \"/usr/local/lib/python3.10/site-packages/tenacity/__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n  File \"/usr/local/lib/python3.10/site-packages/tenacity/__init__.py\", line 326, in iter\r\n    raise retry_exc from fut.exception()\r\ntenacity.RetryError: RetryError[<Future at 0x7f2c00487e20 state=finished raised ValueError>]\r\n```\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7192/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7192/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7191",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7191/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7191/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7191/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7191",
        "id": 1840973104,
        "node_id": "I_kwDOIWuq585tuwUw",
        "number": 7191,
        "title": "[Question]:  cannot import name 'llm_callback' from 'llama_index.llms' ",
        "user": {
            "login": "xinkeyb",
            "id": 45843515,
            "node_id": "MDQ6VXNlcjQ1ODQzNTE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/45843515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xinkeyb",
            "html_url": "https://github.com/xinkeyb",
            "followers_url": "https://api.github.com/users/xinkeyb/followers",
            "following_url": "https://api.github.com/users/xinkeyb/following{/other_user}",
            "gists_url": "https://api.github.com/users/xinkeyb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xinkeyb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xinkeyb/subscriptions",
            "organizations_url": "https://api.github.com/users/xinkeyb/orgs",
            "repos_url": "https://api.github.com/users/xinkeyb/repos",
            "events_url": "https://api.github.com/users/xinkeyb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xinkeyb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-08-08T09:51:12Z",
        "updated_at": "2023-08-09T05:03:05Z",
        "closed_at": "2023-08-08T15:25:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI want to use  local LLM\uff0cI'm referencing the code in this example\uff1a\u201chttps://gpt-index.readthedocs.io/en/latest/core_modules/model_modules/llms/usage_custom.html#example-using-a-custom-llm-model-advanced\u201d . \r\nBut the following problem was encountered:\"ImportError: cannot import name 'llm_callback' from 'llama_index.llms' (/home/zhaoxinke/miniconda3/envs/kgllm/lib/python3.9/site-packages/llama_index/llms/__init__.py)\".\r\n\r\nThe version of llama_index is 0.7.21",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7191/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7191/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7190",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7190/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7190/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7190/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7190",
        "id": 1840677224,
        "node_id": "PR_kwDOIWuq585XZmZz",
        "number": 7190,
        "title": "add ensemble retriever nb + bump version to 0.7.22",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-08T06:52:28Z",
        "updated_at": "2023-08-08T16:15:44Z",
        "closed_at": "2023-08-08T16:15:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7190",
            "html_url": "https://github.com/run-llama/llama_index/pull/7190",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7190.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7190.patch",
            "merged_at": "2023-08-08T16:15:43Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7190/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7190/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7189",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7189/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7189/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7189/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7189",
        "id": 1840444053,
        "node_id": "I_kwDOIWuq585tsvKV",
        "number": 7189,
        "title": "[Bug]: ",
        "user": {
            "login": "buckmaxwell",
            "id": 6210452,
            "node_id": "MDQ6VXNlcjYyMTA0NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6210452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/buckmaxwell",
            "html_url": "https://github.com/buckmaxwell",
            "followers_url": "https://api.github.com/users/buckmaxwell/followers",
            "following_url": "https://api.github.com/users/buckmaxwell/following{/other_user}",
            "gists_url": "https://api.github.com/users/buckmaxwell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/buckmaxwell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/buckmaxwell/subscriptions",
            "organizations_url": "https://api.github.com/users/buckmaxwell/orgs",
            "repos_url": "https://api.github.com/users/buckmaxwell/repos",
            "events_url": "https://api.github.com/users/buckmaxwell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/buckmaxwell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-08T02:09:31Z",
        "updated_at": "2023-11-17T16:02:07Z",
        "closed_at": "2023-11-17T16:02:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\n\r\n\r\nA few days ago I was getting a fatal error with 0.7.17 -- `TypeError: multiple bases have instance lay-out conflict`. Changing my python version from 3.9.8 to 3.10.12 seemed to solve the error. Today I upgraded to 0.7.21 and started getting the same error. My python version is 3.10.12.  The error originates in an import line of mine,\r\n\r\n`from llama_index.agent import OpenAIAgent`\r\n\r\nI am unsure what is happening or how to resolve.\r\n\r\nUPDATE: python 3.11.4 produces the same error.\r\n\r\nUPDATE 2: maybe it's a langchain thing? https://github.com/langchain-ai/langchain/issues/8577\r\n\r\n### Version\r\n\r\n0.7.21\r\n\r\n### Steps to Reproduce\r\n\r\nIn a python 3.10.12 or python 3.9.8 environment do\r\n\r\n```python\r\nfrom llama_index.agent import OpenAIAgent\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n\u2570\u2500 docker-compose logs -f web\r\napi-web-1  | Debug is disabled\r\napi-web-1  | Debug is disabled\r\napi-web-1  | Performing system checks...\r\napi-web-1  |\r\napi-web-1  |\r\napi-web-1  | INFO 2023-08-07 21:55:58,709 utils.py:160 _init_num_threads() 16 139851127159680 NumExpr defaulting to 8 threads.\r\napi-web-1  | Exception in thread django-main-thread:\r\napi-web-1  | Traceback (most recent call last):\r\napi-web-1  |   File \"/usr/local/lib/python3.10/threading.py\", line 1016, in _bootstrap_inner\r\napi-web-1  |     self.run()\r\napi-web-1  |   File \"/usr/local/lib/python3.10/threading.py\", line 953, in run\r\napi-web-1  |     self._target(*self._args, **self._kwargs)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/utils/autoreload.py\", line 64, in wrapper\r\napi-web-1  |     fn(*args, **kwargs)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/core/management/commands/runserver.py\", line 118, in inner_run\r\napi-web-1  |     self.check(display_num_errors=True)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/core/management/base.py\", line 419, in check\r\napi-web-1  |     all_issues = checks.run_checks(\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/core/checks/registry.py\", line 76, in run_checks\r\napi-web-1  |     new_errors = check(app_configs=app_configs, databases=databases)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/core/checks/urls.py\", line 13, in check_url_config\r\napi-web-1  |     return check_resolver(resolver)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/core/checks/urls.py\", line 23, in check_resolver\r\napi-web-1  |     return check_method()\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/urls/resolvers.py\", line 412, in check\r\napi-web-1  |     for pattern in self.url_patterns:\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/utils/functional.py\", line 48, in __get__\r\napi-web-1  |     res = instance.__dict__[self.name] = self.func(instance)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/urls/resolvers.py\", line 598, in url_patterns\r\napi-web-1  |     patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/utils/functional.py\", line 48, in __get__\r\napi-web-1  |     res = instance.__dict__[self.name] = self.func(instance)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/urls/resolvers.py\", line 591, in urlconf_module\r\napi-web-1  |     return import_module(self.urlconf_name)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/importlib/__init__.py\", line 126, in import_module\r\napi-web-1  |     return _bootstrap._gcd_import(name[level:], package, level)\r\napi-web-1  |   File \"<frozen importlib._bootstrap>\", line 1050, in _gcd_import\r\napi-web-1  |   File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\napi-web-1  |   File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\napi-web-1  |   File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\napi-web-1  |   File \"<frozen importlib._bootstrap_external>\", line 883, in exec_module\r\napi-web-1  |   File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\napi-web-1  |   File \"/code/sittingsecured/urls.py\", line 46, in <module>\r\napi-web-1  |     from tracking.urls import tracking_urls\r\napi-web-1  |   File \"/code/tracking/urls.py\", line 7, in <module>\r\napi-web-1  |     from tracking.api import router\r\napi-web-1  |   File \"/code/tracking/api.py\", line 2, in <module>\r\napi-web-1  |     from tracking import viewsets\r\napi-web-1  |   File \"/code/tracking/viewsets/__init__.py\", line 3, in <module>\r\napi-web-1  |     from .ExternalMessageViewSet import ExternalMessageViewSet\r\napi-web-1  |   File \"/code/tracking/viewsets/ExternalMessageViewSet.py\", line 36, in <module>\r\napi-web-1  |     from sitter.vendor.ai.llamaindex.agenttest import agent\r\napi-web-1  |   File \"/code/sitter/vendor/ai/llamaindex/agenttest.py\", line 8, in <module>\r\napi-web-1  |     from llama_index import (\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/llama_index/__init__.py\", line 12, in <module>\r\napi-web-1  |     from llama_index.data_structs.struct_type import IndexStructType\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/llama_index/data_structs/__init__.py\", line 3, in <module>\r\napi-web-1  |     from llama_index.data_structs.data_structs import (\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/llama_index/data_structs/data_structs.py\", line 14, in <module>\r\napi-web-1  |     from llama_index.schema import BaseNode, TextNode\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/llama_index/schema.py\", line 9, in <module>\r\napi-web-1  |     from llama_index.bridge.langchain import Document as LCDocument\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/llama_index/bridge/langchain.py\", line 1, in <module>\r\napi-web-1  |     import langchain\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/__init__.py\", line 6, in <module>\r\napi-web-1  |     from langchain.agents import MRKLChain, ReActChain, SelfAskWithSearchChain\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/agents/__init__.py\", line 31, in <module>\r\napi-web-1  |     from langchain.agents.agent import (\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/agents/agent.py\", line 15, in <module>\r\napi-web-1  |     from langchain.agents.agent_iterator import AgentExecutorIterator\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/agents/agent_iterator.py\", line 21, in <module>\r\napi-web-1  |     from langchain.callbacks.manager import (\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/callbacks/__init__.py\", line 10, in <module>\r\napi-web-1  |     from langchain.callbacks.aim_callback import AimCallbackHandler\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/callbacks/aim_callback.py\", line 5, in <module>\r\napi-web-1  |     from langchain.schema import AgentAction, AgentFinish, LLMResult\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/schema/__init__.py\", line 4, in <module>\r\napi-web-1  |     from langchain.schema.memory import BaseChatMessageHistory, BaseMemory\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/schema/memory.py\", line 7, in <module>\r\napi-web-1  |     from langchain.schema.messages import AIMessage, BaseMessage, HumanMessage\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/schema/messages.py\", line 147, in <module>\r\napi-web-1  |     class HumanMessageChunk(HumanMessage, BaseMessageChunk):\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/pydantic/main.py\", line 367, in __new__\r\napi-web-1  |     cls = super().__new__(mcs, name, bases, new_namespace, **kwargs)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/abc.py\", line 106, in __new__\r\napi-web-1  |     cls = super().__new__(mcls, name, bases, namespace, **kwargs)\r\napi-web-1  | TypeError: multiple bases have instance lay-out conflict\r\napi-web-1  | Debug is disabled\r\n\r\n\r\napi-web-1  | Debug is disabled\r\n\r\n\r\n\r\napi-web-1  | Performing system checks...\r\napi-web-1  |\r\napi-web-1  |\r\napi-web-1  | INFO 2023-08-07 22:02:39,487 utils.py:160 _init_num_threads() 16 140507908381568 NumExpr defaulting to 8 threads.\r\napi-web-1  | Exception in thread django-main-thread:\r\napi-web-1  | Traceback (most recent call last):\r\napi-web-1  |   File \"/usr/local/lib/python3.10/threading.py\", line 1016, in _bootstrap_inner\r\napi-web-1  |     self.run()\r\napi-web-1  |   File \"/usr/local/lib/python3.10/threading.py\", line 953, in run\r\napi-web-1  |     self._target(*self._args, **self._kwargs)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/utils/autoreload.py\", line 64, in wrapper\r\napi-web-1  |     fn(*args, **kwargs)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/core/management/commands/runserver.py\", line 118, in inner_run\r\napi-web-1  |     self.check(display_num_errors=True)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/core/management/base.py\", line 419, in check\r\napi-web-1  |     all_issues = checks.run_checks(\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/core/checks/registry.py\", line 76, in run_checks\r\napi-web-1  |     new_errors = check(app_configs=app_configs, databases=databases)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/core/checks/urls.py\", line 13, in check_url_config\r\napi-web-1  |     return check_resolver(resolver)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/core/checks/urls.py\", line 23, in check_resolver\r\napi-web-1  |     return check_method()\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/urls/resolvers.py\", line 412, in check\r\napi-web-1  |     for pattern in self.url_patterns:\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/utils/functional.py\", line 48, in __get__\r\napi-web-1  |     res = instance.__dict__[self.name] = self.func(instance)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/urls/resolvers.py\", line 598, in url_patterns\r\napi-web-1  |     patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/utils/functional.py\", line 48, in __get__\r\napi-web-1  |     res = instance.__dict__[self.name] = self.func(instance)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/django/urls/resolvers.py\", line 591, in urlconf_module\r\napi-web-1  |     return import_module(self.urlconf_name)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/importlib/__init__.py\", line 126, in import_module\r\napi-web-1  |     return _bootstrap._gcd_import(name[level:], package, level)\r\napi-web-1  |   File \"<frozen importlib._bootstrap>\", line 1050, in _gcd_import\r\napi-web-1  |   File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\napi-web-1  |   File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\napi-web-1  |   File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\napi-web-1  |   File \"<frozen importlib._bootstrap_external>\", line 883, in exec_module\r\napi-web-1  |   File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\napi-web-1  |   File \"/code/sittingsecured/urls.py\", line 46, in <module>\r\napi-web-1  |     from tracking.urls import tracking_urls\r\napi-web-1  |   File \"/code/tracking/urls.py\", line 7, in <module>\r\napi-web-1  |     from tracking.api import router\r\napi-web-1  |   File \"/code/tracking/api.py\", line 2, in <module>\r\napi-web-1  |     from tracking import viewsets\r\napi-web-1  |   File \"/code/tracking/viewsets/__init__.py\", line 3, in <module>\r\napi-web-1  |     from .ExternalMessageViewSet import ExternalMessageViewSet\r\napi-web-1  |   File \"/code/tracking/viewsets/ExternalMessageViewSet.py\", line 36, in <module>\r\napi-web-1  |     from sitter.vendor.ai.llamaindex.agenttest import agent\r\napi-web-1  |   File \"/code/sitter/vendor/ai/llamaindex/agenttest.py\", line 8, in <module>\r\napi-web-1  |     from llama_index.agent import OpenAIAgent\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/llama_index/__init__.py\", line 12, in <module>\r\napi-web-1  |     from llama_index.data_structs.struct_type import IndexStructType\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/llama_index/data_structs/__init__.py\", line 3, in <module>\r\napi-web-1  |     from llama_index.data_structs.data_structs import (\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/llama_index/data_structs/data_structs.py\", line 14, in <module>\r\napi-web-1  |     from llama_index.schema import BaseNode, TextNode\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/llama_index/schema.py\", line 9, in <module>\r\napi-web-1  |     from llama_index.bridge.langchain import Document as LCDocument\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/llama_index/bridge/langchain.py\", line 1, in <module>\r\napi-web-1  |     import langchain\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/__init__.py\", line 6, in <module>\r\napi-web-1  |     from langchain.agents import MRKLChain, ReActChain, SelfAskWithSearchChain\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/agents/__init__.py\", line 31, in <module>\r\napi-web-1  |     from langchain.agents.agent import (\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/agents/agent.py\", line 15, in <module>\r\napi-web-1  |     from langchain.agents.agent_iterator import AgentExecutorIterator\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/agents/agent_iterator.py\", line 21, in <module>\r\napi-web-1  |     from langchain.callbacks.manager import (\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/callbacks/__init__.py\", line 10, in <module>\r\napi-web-1  |     from langchain.callbacks.aim_callback import AimCallbackHandler\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/callbacks/aim_callback.py\", line 5, in <module>\r\napi-web-1  |     from langchain.schema import AgentAction, AgentFinish, LLMResult\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/schema/__init__.py\", line 4, in <module>\r\napi-web-1  |     from langchain.schema.memory import BaseChatMessageHistory, BaseMemory\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/schema/memory.py\", line 7, in <module>\r\napi-web-1  |     from langchain.schema.messages import AIMessage, BaseMessage, HumanMessage\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/langchain/schema/messages.py\", line 147, in <module>\r\napi-web-1  |     class HumanMessageChunk(HumanMessage, BaseMessageChunk):\r\napi-web-1  |   File \"/usr/local/lib/python3.10/site-packages/pydantic/main.py\", line 367, in __new__\r\napi-web-1  |     cls = super().__new__(mcs, name, bases, new_namespace, **kwargs)\r\napi-web-1  |   File \"/usr/local/lib/python3.10/abc.py\", line 106, in __new__\r\napi-web-1  |     cls = super().__new__(mcls, name, bases, namespace, **kwargs)\r\napi-web-1  | TypeError: multiple bases have instance lay-out conflict\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7189/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7189/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]