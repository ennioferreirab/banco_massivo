[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12976",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12976/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12976/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12976/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12976",
        "id": 1980406142,
        "node_id": "PR_kwDOIPDwls5ewZFN",
        "number": 12976,
        "title": "fix baiducloud_vector_search document typo",
        "user": {
            "login": "wemysschen",
            "id": 38650638,
            "node_id": "MDQ6VXNlcjM4NjUwNjM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/38650638?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wemysschen",
            "html_url": "https://github.com/wemysschen",
            "followers_url": "https://api.github.com/users/wemysschen/followers",
            "following_url": "https://api.github.com/users/wemysschen/following{/other_user}",
            "gists_url": "https://api.github.com/users/wemysschen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wemysschen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wemysschen/subscriptions",
            "organizations_url": "https://api.github.com/users/wemysschen/orgs",
            "repos_url": "https://api.github.com/users/wemysschen/repos",
            "events_url": "https://api.github.com/users/wemysschen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wemysschen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-07T02:14:13Z",
        "updated_at": "2023-11-13T02:09:50Z",
        "closed_at": "2023-11-10T00:27:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12976",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12976",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12976.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12976.patch",
            "merged_at": "2023-11-10T00:27:04Z"
        },
        "body": "**Issue:**\r\nfix baiducloud_vector_search document typo\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12976/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12976/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12975",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12975/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12975/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12975/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12975",
        "id": 1980397401,
        "node_id": "PR_kwDOIPDwls5ewXOQ",
        "number": 12975,
        "title": "Vectara RAG template",
        "user": {
            "login": "ofermend",
            "id": 1823547,
            "node_id": "MDQ6VXNlcjE4MjM1NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofermend",
            "html_url": "https://github.com/ofermend",
            "followers_url": "https://api.github.com/users/ofermend/followers",
            "following_url": "https://api.github.com/users/ofermend/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofermend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofermend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofermend/subscriptions",
            "organizations_url": "https://api.github.com/users/ofermend/orgs",
            "repos_url": "https://api.github.com/users/ofermend/repos",
            "events_url": "https://api.github.com/users/ofermend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofermend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6154420538,
                "node_id": "LA_kwDOIPDwls8AAAABbtUBOg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/template",
                "name": "template",
                "color": "145FB1",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-07T02:04:02Z",
        "updated_at": "2023-11-07T03:24:08Z",
        "closed_at": "2023-11-07T03:24:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12975",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12975",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12975.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12975.patch",
            "merged_at": "2023-11-07T03:24:00Z"
        },
        "body": "  - **Description:** RAG template using Vectara\r\n  - **Twitter handle:** @ofermend \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12975/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12975/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12974",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12974/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12974/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12974/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12974",
        "id": 1980396721,
        "node_id": "PR_kwDOIPDwls5ewXFG",
        "number": 12974,
        "title": "fix baiducloud_vector_search document typo",
        "user": {
            "login": "wemysschen",
            "id": 38650638,
            "node_id": "MDQ6VXNlcjM4NjUwNjM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/38650638?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wemysschen",
            "html_url": "https://github.com/wemysschen",
            "followers_url": "https://api.github.com/users/wemysschen/followers",
            "following_url": "https://api.github.com/users/wemysschen/following{/other_user}",
            "gists_url": "https://api.github.com/users/wemysschen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wemysschen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wemysschen/subscriptions",
            "organizations_url": "https://api.github.com/users/wemysschen/orgs",
            "repos_url": "https://api.github.com/users/wemysschen/repos",
            "events_url": "https://api.github.com/users/wemysschen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wemysschen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-07T02:03:12Z",
        "updated_at": "2023-11-07T02:28:38Z",
        "closed_at": "2023-11-07T02:04:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12974",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12974",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12974.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12974.patch",
            "merged_at": null
        },
        "body": "**Issue:**\r\nfix baiducloud_vector_search document typo.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12974/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12974/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12973",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12973/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12973/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12973/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12973",
        "id": 1980367810,
        "node_id": "PR_kwDOIPDwls5ewRAE",
        "number": 12973,
        "title": "Fix python-openai v1.x.x doesn't work in langchain",
        "user": {
            "login": "dosuken123",
            "id": 4432788,
            "node_id": "MDQ6VXNlcjQ0MzI3ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4432788?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dosuken123",
            "html_url": "https://github.com/dosuken123",
            "followers_url": "https://api.github.com/users/dosuken123/followers",
            "following_url": "https://api.github.com/users/dosuken123/following{/other_user}",
            "gists_url": "https://api.github.com/users/dosuken123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dosuken123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dosuken123/subscriptions",
            "organizations_url": "https://api.github.com/users/dosuken123/orgs",
            "repos_url": "https://api.github.com/users/dosuken123/repos",
            "events_url": "https://api.github.com/users/dosuken123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dosuken123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-07T01:30:38Z",
        "updated_at": "2023-11-08T00:14:54Z",
        "closed_at": "2023-11-07T04:03:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12973",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12973",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12973.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12973.patch",
            "merged_at": null
        },
        "body": "Fix https://github.com/langchain-ai/langchain/issues/12967\r\n\r\nReplace this entire comment with:\r\n  - **Description:** Fix python-openai v1.x.x doesn't work in langchain, See https://github.com/langchain-ai/langchain/issues/12967\r\n  - **Issue:** https://github.com/langchain-ai/langchain/issues/12967\r\n  - **Dependencies:** openai-python v1.x.x which was released a few hours ago\r\n  - **Tag maintainer:** @baskaryan, @eyurtsev, @hwchase17\r\n  - **Twitter handle:** @dosuken123 \r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12973/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12973/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12972",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12972/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12972/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12972/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12972",
        "id": 1980340816,
        "node_id": "PR_kwDOIPDwls5ewLXb",
        "number": 12972,
        "title": "improve llamacpp embeddings",
        "user": {
            "login": "streamnsight",
            "id": 10981776,
            "node_id": "MDQ6VXNlcjEwOTgxNzc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/10981776?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/streamnsight",
            "html_url": "https://github.com/streamnsight",
            "followers_url": "https://api.github.com/users/streamnsight/followers",
            "following_url": "https://api.github.com/users/streamnsight/following{/other_user}",
            "gists_url": "https://api.github.com/users/streamnsight/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/streamnsight/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/streamnsight/subscriptions",
            "organizations_url": "https://api.github.com/users/streamnsight/orgs",
            "repos_url": "https://api.github.com/users/streamnsight/repos",
            "events_url": "https://api.github.com/users/streamnsight/events{/privacy}",
            "received_events_url": "https://api.github.com/users/streamnsight/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-07T00:56:16Z",
        "updated_at": "2023-11-14T19:27:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12972",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12972",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12972.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12972.patch",
            "merged_at": null
        },
        "body": "  - **Description:**\r\n  Improve llamacpp embedding class by adding the `device` parameter so it can be passed to the model and used with `gpu`, `cpu` or Apple metal (`mps`).\r\n  Improve performance by making use of the bulk client api to compute embeddings in batches.\r\n  \r\n  - **Dependencies:** none\r\n  - **Tag maintainer:** \r\n@hwchase17 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12972/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12972/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12971",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12971/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12971/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12971/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12971",
        "id": 1980323785,
        "node_id": "PR_kwDOIPDwls5ewHxr",
        "number": 12971,
        "title": "add docs for where_document argument and add to missing methods",
        "user": {
            "login": "richarda23",
            "id": 22676399,
            "node_id": "MDQ6VXNlcjIyNjc2Mzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/22676399?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/richarda23",
            "html_url": "https://github.com/richarda23",
            "followers_url": "https://api.github.com/users/richarda23/followers",
            "following_url": "https://api.github.com/users/richarda23/following{/other_user}",
            "gists_url": "https://api.github.com/users/richarda23/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/richarda23/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/richarda23/subscriptions",
            "organizations_url": "https://api.github.com/users/richarda23/orgs",
            "repos_url": "https://api.github.com/users/richarda23/repos",
            "events_url": "https://api.github.com/users/richarda23/events{/privacy}",
            "received_events_url": "https://api.github.com/users/richarda23/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-07T00:39:41Z",
        "updated_at": "2023-11-14T19:54:31Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12971",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12971",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12971.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12971.patch",
            "merged_at": null
        },
        "body": "**Description:**\r\n\r\nChroma vector store was missing documentation and  tests for the `where_document` argument. \r\n\r\nIn addition, `similarity_search` method did not accept `where_document` as an argument. This PR fixes these issues.\r\n  \r\n**Issue:** \r\n\r\nNo issue raised for this but relates to #10082\r\n\r\n**Dependencies:** :\r\n None\r\n \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12971/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12971/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12970",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12970/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12970/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12970/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12970",
        "id": 1980316909,
        "node_id": "I_kwDOIPDwls52CTzt",
        "number": 12970,
        "title": "Update `OpenAIEmbeddings` to work with OpenAI SDK updates",
        "user": {
            "login": "homanp",
            "id": 2464556,
            "node_id": "MDQ6VXNlcjI0NjQ1NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2464556?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/homanp",
            "html_url": "https://github.com/homanp",
            "followers_url": "https://api.github.com/users/homanp/followers",
            "following_url": "https://api.github.com/users/homanp/following{/other_user}",
            "gists_url": "https://api.github.com/users/homanp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/homanp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/homanp/subscriptions",
            "organizations_url": "https://api.github.com/users/homanp/orgs",
            "repos_url": "https://api.github.com/users/homanp/repos",
            "events_url": "https://api.github.com/users/homanp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/homanp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-07T00:31:37Z",
        "updated_at": "2023-11-07T07:52:48Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLC: `v0.0.331rc1`\n\n### Who can help?\n\nThe latest LC release candidate does not support the new embeddings API of the OpenAI SDK. \r\n\r\n```\r\nAttributeError: module 'openai' has no attribute 'Embedding'\r\n```\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nInstall the latest release candidate and use OpenAIEmbeddings\n\n### Expected behavior\n\nUpdate to work with latest OpenAI SDK.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12970/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12970/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12969",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12969/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12969/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12969/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12969",
        "id": 1980311715,
        "node_id": "PR_kwDOIPDwls5ewFHy",
        "number": 12969,
        "title": "oai v1 embeddings",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-07T00:27:27Z",
        "updated_at": "2023-11-07T21:24:01Z",
        "closed_at": "2023-11-07T02:52:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12969",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12969",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12969.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12969.patch",
            "merged_at": "2023-11-07T02:52:33Z"
        },
        "body": "Initial PR to get OpenAIEmbeddings working with the new sdk\r\n\r\nfyi @rlancemartin \r\n\r\nFixes #12943",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12969/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12969/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12968",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12968/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12968/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12968/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12968",
        "id": 1980304321,
        "node_id": "PR_kwDOIPDwls5ewDhz",
        "number": 12968,
        "title": "chore(openllm): simplified interface with new API",
        "user": {
            "login": "aarnphm",
            "id": 29749331,
            "node_id": "MDQ6VXNlcjI5NzQ5MzMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29749331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aarnphm",
            "html_url": "https://github.com/aarnphm",
            "followers_url": "https://api.github.com/users/aarnphm/followers",
            "following_url": "https://api.github.com/users/aarnphm/following{/other_user}",
            "gists_url": "https://api.github.com/users/aarnphm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aarnphm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aarnphm/subscriptions",
            "organizations_url": "https://api.github.com/users/aarnphm/orgs",
            "repos_url": "https://api.github.com/users/aarnphm/repos",
            "events_url": "https://api.github.com/users/aarnphm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aarnphm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-07T00:20:02Z",
        "updated_at": "2023-12-12T06:58:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12968",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12968",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12968.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12968.patch",
            "merged_at": null
        },
        "body": "Depends on https://github.com/bentoml/OpenLLM/pull/518 to be released for 0.3.15\r\n\r\ntwitter handle: @aarnphm_\r\n\r\ncc @baskaryan this is ready from OpenLLM.\r\n\r\nSigned-off-by: Aaron <29749331+aarnphm@users.noreply.github.com>\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12968/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12967",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12967/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12967/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12967/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12967",
        "id": 1980294255,
        "node_id": "I_kwDOIPDwls52CORv",
        "number": 12967,
        "title": "AttributeError: module 'openai' has no attribute 'Completion'",
        "user": {
            "login": "dosuken123",
            "id": 4432788,
            "node_id": "MDQ6VXNlcjQ0MzI3ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4432788?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dosuken123",
            "html_url": "https://github.com/dosuken123",
            "followers_url": "https://api.github.com/users/dosuken123/followers",
            "following_url": "https://api.github.com/users/dosuken123/following{/other_user}",
            "gists_url": "https://api.github.com/users/dosuken123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dosuken123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dosuken123/subscriptions",
            "organizations_url": "https://api.github.com/users/dosuken123/orgs",
            "repos_url": "https://api.github.com/users/dosuken123/repos",
            "events_url": "https://api.github.com/users/dosuken123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dosuken123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 25,
        "created_at": "2023-11-07T00:07:47Z",
        "updated_at": "2023-11-12T23:49:19Z",
        "closed_at": "2023-11-12T23:49:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nDownloading langchain-0.0.331-py3-none-any.whl (2.0 MB)\r\nDownloading openai-1.1.1-py3-none-any.whl (217 kB)\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRun the following code in colab:\r\n\r\n```\r\n!pip install langchain\r\n!pip install openai\r\n\r\nfrom langchain.llms import OpenAI\r\n\r\nOpenAI().predict(\"hoge\")\r\n```\r\n\r\nYou'll get:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n[<ipython-input-5-0eec0f4f0523>](https://localhost:8080/#) in <cell line: 4>()\r\n      2 from langchain.llms import OpenAI\r\n      3 \r\n----> 4 OpenAI().predict(\"hoge\")\r\n\r\n3 frames\r\n[/usr/local/lib/python3.10/dist-packages/langchain/llms/openai.py](https://localhost:8080/#) in validate_environment(cls, values)\r\n    264             import openai\r\n    265 \r\n--> 266             values[\"client\"] = openai.Completion\r\n    267         except ImportError:\r\n    268             raise ImportError(\r\n\r\nAttributeError: module 'openai' has no attribute 'Completion'\r\n```\n\n### Expected behavior\n\nThis was working until yesterday. It's likely due to the openai dependency update.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12967/reactions",
            "total_count": 21,
            "+1": 21,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12967/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12966",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12966/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12966/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12966/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12966",
        "id": 1980285705,
        "node_id": "PR_kwDOIPDwls5ev_hz",
        "number": 12966,
        "title": "Add \"Astra DB\" vector store integration",
        "user": {
            "login": "hemidactylus",
            "id": 14221764,
            "node_id": "MDQ6VXNlcjE0MjIxNzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/14221764?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemidactylus",
            "html_url": "https://github.com/hemidactylus",
            "followers_url": "https://api.github.com/users/hemidactylus/followers",
            "following_url": "https://api.github.com/users/hemidactylus/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemidactylus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemidactylus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemidactylus/subscriptions",
            "organizations_url": "https://api.github.com/users/hemidactylus/orgs",
            "repos_url": "https://api.github.com/users/hemidactylus/repos",
            "events_url": "https://api.github.com/users/hemidactylus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemidactylus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6154420538,
                "node_id": "LA_kwDOIPDwls8AAAABbtUBOg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/template",
                "name": "template",
                "color": "145FB1",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T23:57:41Z",
        "updated_at": "2023-11-16T09:00:38Z",
        "closed_at": "2023-11-07T22:45:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12966",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12966",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12966.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12966.patch",
            "merged_at": "2023-11-07T22:45:33Z"
        },
        "body": "# Astra DB Vector store integration\r\n\r\n  - **Description:** This PR adds a `VectorStore` implementation for DataStax Astra DB using its HTTP API\r\n  - **Issue:** (no related issue)\r\n  - **Dependencies:** A new required dependency is `astrapy` (`>=0.5.3`) which was added to pyptoject.toml, optional, as per guidelines\r\n  - **Tag maintainer:** I recently mentioned to @baskaryan this integration was coming\r\n  - **Twitter handle:** `@rsprrs` if you want to mention me\r\n\r\nThis PR introduces the `AstraDB` vector store class, extensive integration test coverage, a reworking of the documentation which conflates Cassandra and Astra DB on a single \"provider\" page and a new, completely reworked vector-store example notebook (common to the Cassandra store, since parts of the flow is shared by the two APIs). I also took care in ensuring docs (and redirects therein) are behaving correctly.\r\n\r\nAll style, linting, typechecks and tests pass as far as the `AstraDB` integration is concerned.\r\n\r\nI could build the documentation and check it all right (but ran into trouble with the `api_docs_build` makefile target which I could not verify: `Error: Unable to import module 'plan_and_execute.agent_executor' with error: No module named 'langchain_experimental'` was the first of many similar errors)\r\n\r\nThank you for a review!\r\nStefano\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12966/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12966/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12965",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12965/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12965/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12965/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12965",
        "id": 1980264100,
        "node_id": "PR_kwDOIPDwls5ev60v",
        "number": 12965,
        "title": "bump 331rc1",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T23:31:46Z",
        "updated_at": "2023-11-06T23:36:44Z",
        "closed_at": "2023-11-06T23:36:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12965",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12965",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12965.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12965.patch",
            "merged_at": "2023-11-06T23:36:43Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12965/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12965/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12964",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12964/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12964/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12964/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12964",
        "id": 1980263042,
        "node_id": "PR_kwDOIPDwls5ev6mX",
        "number": 12964,
        "title": "fix max_tokens",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T23:30:34Z",
        "updated_at": "2023-11-06T23:36:06Z",
        "closed_at": "2023-11-06T23:36:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12964",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12964",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12964.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12964.patch",
            "merged_at": "2023-11-06T23:36:05Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12964/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12963",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12963/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12963/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12963/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12963",
        "id": 1980247984,
        "node_id": "PR_kwDOIPDwls5ev3SA",
        "number": 12963,
        "title": "bump 331rc0",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T23:16:20Z",
        "updated_at": "2023-11-06T23:19:34Z",
        "closed_at": "2023-11-06T23:19:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12963",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12963",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12963.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12963.patch",
            "merged_at": "2023-11-06T23:19:34Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12963/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12963/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12962",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12962/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12962/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12962/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12962",
        "id": 1980194390,
        "node_id": "I_kwDOIPDwls52B15W",
        "number": 12962,
        "title": "Issue: QA with a large csv dataset",
        "user": {
            "login": "hellorp1990",
            "id": 19805255,
            "node_id": "MDQ6VXNlcjE5ODA1MjU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/19805255?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hellorp1990",
            "html_url": "https://github.com/hellorp1990",
            "followers_url": "https://api.github.com/users/hellorp1990/followers",
            "following_url": "https://api.github.com/users/hellorp1990/following{/other_user}",
            "gists_url": "https://api.github.com/users/hellorp1990/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hellorp1990/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hellorp1990/subscriptions",
            "organizations_url": "https://api.github.com/users/hellorp1990/orgs",
            "repos_url": "https://api.github.com/users/hellorp1990/repos",
            "events_url": "https://api.github.com/users/hellorp1990/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hellorp1990/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T22:33:41Z",
        "updated_at": "2023-11-06T22:41:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi , I was working on QA using a large csv dataset.\r\nI am using a local llm model (llama2) along with create_csv_agent. Following is my code snippet.\r\n\r\n`from langchain.llms import OpenAI\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.agents.agent_types import AgentType\r\nfrom langchain_experimental.agents.agent_toolkits import create_csv_agent\r\n\r\n\r\nagent = create_csv_agent(\r\n    local_llm,\r\n    \"MLdata.csv\",\r\n    verbose=True,\r\n    agent_type=AgentType.ZERO_SHOT_REACT_DESCRIPTION,handle_parsing_errors=True\r\n)\r\nprint(agent.run(\"Please provide me the 10 records with VAX_TYPE COVID19.\"))\r\n`\r\n\r\nFirst of all the agent is only displaying 5 rows instead of 10. \r\nSecondly when I asked about \"count the total number of rows in the dataset\". It also generated a wrong output (generated output 5).\r\n\r\nHow to fix this issue? \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12962/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12962/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12961",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12961/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12961/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12961/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12961",
        "id": 1980179252,
        "node_id": "PR_kwDOIPDwls5evn4J",
        "number": 12961,
        "title": "add oai v1 cookbook",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T22:23:47Z",
        "updated_at": "2023-11-06T22:39:32Z",
        "closed_at": "2023-11-06T22:28:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12961",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12961",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12961.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12961.patch",
            "merged_at": "2023-11-06T22:28:33Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12961/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12961/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12960",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12960/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12960/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12960/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12960",
        "id": 1980149492,
        "node_id": "PR_kwDOIPDwls5evhMu",
        "number": 12960,
        "title": "Record system fingerprint chat openai",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T22:05:02Z",
        "updated_at": "2023-11-06T22:25:54Z",
        "closed_at": "2023-11-06T22:25:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12960",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12960",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12960.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12960.patch",
            "merged_at": "2023-11-06T22:25:53Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12960/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12960/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12959",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12959/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12959/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12959/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12959",
        "id": 1980143971,
        "node_id": "I_kwDOIPDwls52Bplj",
        "number": 12959,
        "title": "OpenAIEmbeddings doesn't allow specifying API key in parameters",
        "user": {
            "login": "chrishart0",
            "id": 64378248,
            "node_id": "MDQ6VXNlcjY0Mzc4MjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/64378248?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrishart0",
            "html_url": "https://github.com/chrishart0",
            "followers_url": "https://api.github.com/users/chrishart0/followers",
            "following_url": "https://api.github.com/users/chrishart0/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrishart0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrishart0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrishart0/subscriptions",
            "organizations_url": "https://api.github.com/users/chrishart0/orgs",
            "repos_url": "https://api.github.com/users/chrishart0/repos",
            "events_url": "https://api.github.com/users/chrishart0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrishart0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T22:01:28Z",
        "updated_at": "2023-11-06T22:16:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain Version: 0.0.331 (also tested 0.0.326)\r\nPython Version: 3.11.6\r\n\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [x] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\n## The issue\r\nIt appears that `langchain.embeddings.OpenAIEmbeddings` does not support using parameters to define an API key, despite that being documented [here](https://api.python.langchain.com/en/latest/embeddings/langchain.embeddings.openai.OpenAIEmbeddings.html?highlight=azureopenai#langchain.embeddings.openai.OpenAIEmbeddings.openai_api_type). We are using Azure OpenAI, we've successfully configured the API with the same `openai_api_key` parameter for the `AzureOpenAI` method and the `AzureChatOpenAI` methods, but this doesn't work for the `OpenAIEmbeddings`. \r\n\r\nWe can get embeddings to generate by specifying the `OPENAI_API_KEY` env var, as shown in your docs, we would like to not do this though as our use case requires having both an Azure Open AI instance key and Open AI key configured. \r\n\r\nCalling the OpenAIEmbeddings method as show below does not work\r\n\r\n```python\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\n....\r\n\r\n            openAiEmbeddings = OpenAIEmbeddings(\r\n                # model=LLmType.TEXT_EMBEDDING_ADA_002,\r\n                deployment_name=deployment,\r\n                openai_api_type=\"azure\",\r\n                openai_api_key=azure_openai_api_key,\r\n                openai_api_base=azure_openai_api_base,\r\n                chunk_size=1,\r\n                openai_api_version=azure_openai_api_version,\r\n                )\r\n            return LangchainEmbedding(openAiEmbeddings)\r\n```\r\n\r\nThe error I receive is here: \r\n\r\n```\r\nNo API key found for OpenAI.\r\nPlease set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\nAPI keys can be found or created at https://platform.openai.com/account/api-keys\r\n\r\nTo disable the LLM entirely, set llm=None.\r\n******\r\n2023-11-06 21:14:53,499 - ERROR - Error processing documents: ******\r\nCould not load OpenAI model. If you intended to use OpenAI, please check your OPENAI_API_KEY.\r\nOriginal error:\r\nNo API key found for OpenAI.\r\nPlease set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\nAPI keys can be found or created at https://platform.openai.com/account/api-keys\r\n\r\nTo disable the LLM entirely, set llm=None.\r\n******\r\n```\r\n\r\n## Troubleshooting\r\n\r\nAnother valid workaround is this setting `openai.api_key`, such as below\r\n```\r\nimport openai\r\n...\r\n\r\n            openai.api_key = self.azure_openai_api_key\r\n\r\n            openAiEmbeddings = OpenAIEmbeddings(\r\n                # model=LLmType.TEXT_EMBEDDING_ADA_002,\r\n                deployment_name=deployment,\r\n                openai_api_type=\"azure\",\r\n                openai_api_base=azure_openai_api_base,\r\n                chunk_size=1,\r\n                openai_api_version=azure_openai_api_version,\r\n                )\r\n            return LangchainEmbedding(openAiEmbeddings)\r\n```\r\n\r\nI added the following code to ensure an empty OPENAI_API_KEY environment variable wan't causing the issue, it make no effect.\r\n```python\r\nif 'OPENAI_API_KEY' in os.environ:\r\n                print(\"did find OPENAI_API_KEY in os.environ\")\r\n                print(\"os.environ[OPENAI_API_KEY]: \", os.environ[\"OPENAI_API_KEY\"])\r\n                del os.environ['OPENAI_API_KEY']\r\n            else:\r\n                print(\"did not find OPENAI_API_KEY in os.environ\")\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\n\r\nI expected to be able to simply use the `openai_api_key` parameter of `langchain.embedding.OpenAIEmbeddings` without needing to define the `OPENAI_API_KEY` env var or import openai and use `openai.api_key =`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12959/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12959/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12958",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12958/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12958/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12958/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12958",
        "id": 1980132466,
        "node_id": "I_kwDOIPDwls52Bmxy",
        "number": 12958,
        "title": "Recent langchain version not matching openai v1.0.0+ release spec for client",
        "user": {
            "login": "realoptimal",
            "id": 444343,
            "node_id": "MDQ6VXNlcjQ0NDM0Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/444343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/realoptimal",
            "html_url": "https://github.com/realoptimal",
            "followers_url": "https://api.github.com/users/realoptimal/followers",
            "following_url": "https://api.github.com/users/realoptimal/following{/other_user}",
            "gists_url": "https://api.github.com/users/realoptimal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/realoptimal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/realoptimal/subscriptions",
            "organizations_url": "https://api.github.com/users/realoptimal/orgs",
            "repos_url": "https://api.github.com/users/realoptimal/repos",
            "events_url": "https://api.github.com/users/realoptimal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/realoptimal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-11-06T21:53:47Z",
        "updated_at": "2023-11-10T04:38:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain: v0.0.331\r\nopenai: v1.1.0\r\nplatform: Mac M2\r\npython: 3.11.2\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Import OpenAI from llms\r\n2. Instantiate it\r\n\r\n```\r\n>>> from langchain.llms import OpenAI\r\n>>> llm = OpenAI()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/lifehedging/.pyenv/versions/myenv/lib/python3.11/site-packages/langchain/load/serializable.py\", line 97, in __init__\r\n    super().__init__(**kwargs)\r\n  File \"/Users/lifehedging/.pyenv/versions/myenv/lib/python3.11/site-packages/pydantic/v1/main.py\", line 339, in __init__\r\n    values, fields_set, validation_error = validate_model(__pydantic_self__.__class__, data)\r\n                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/lifehedging/.pyenv/versions/myenv/lib/python3.11/site-packages/pydantic/v1/main.py\", line 1102, in validate_model\r\n    values = validator(cls_, values)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/lifehedging/.pyenv/versions/myenv/lib/python3.11/site-packages/langchain/llms/openai.py\", line 266, in validate_environment\r\n    values[\"client\"] = openai.Completion\r\n                       ^^^^^^^^^^^^^^^^^\r\nAttributeError: module 'openai' has no attribute 'Completion'. Did you mean: 'completions'?\r\n```\r\n\n\n### Expected behavior\n\nIt correctly instantiates provided an API key is present in the environment",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12958/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12958/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12957",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12957/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12957/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12957/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12957",
        "id": 1980131843,
        "node_id": "I_kwDOIPDwls52BmoD",
        "number": 12957,
        "title": "Issue: rewrite the _DEFAULT_ENTITY_EXTRACTION_TEMPLATE in JSON format ",
        "user": {
            "login": "xasxin",
            "id": 113810081,
            "node_id": "U_kgDOBsiaoQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/113810081?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xasxin",
            "html_url": "https://github.com/xasxin",
            "followers_url": "https://api.github.com/users/xasxin/followers",
            "following_url": "https://api.github.com/users/xasxin/following{/other_user}",
            "gists_url": "https://api.github.com/users/xasxin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xasxin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xasxin/subscriptions",
            "organizations_url": "https://api.github.com/users/xasxin/orgs",
            "repos_url": "https://api.github.com/users/xasxin/repos",
            "events_url": "https://api.github.com/users/xasxin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xasxin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T21:53:23Z",
        "updated_at": "2023-11-06T22:00:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi, It's me again. I'm trying to create my own ConversationSummaryMemory and make  _DEFAULT_ENTITY_EXTRACTION_TEMPLATE in JSON format. Is there a way to do so?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12957/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12957/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12956",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12956/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12956/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12956/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12956",
        "id": 1980109527,
        "node_id": "I_kwDOIPDwls52BhLX",
        "number": 12956,
        "title": "A ton of Bugs after OpenAI API update today",
        "user": {
            "login": "Vanekkk1",
            "id": 91801007,
            "node_id": "U_kgDOBXjFrw",
            "avatar_url": "https://avatars.githubusercontent.com/u/91801007?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vanekkk1",
            "html_url": "https://github.com/Vanekkk1",
            "followers_url": "https://api.github.com/users/Vanekkk1/followers",
            "following_url": "https://api.github.com/users/Vanekkk1/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vanekkk1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vanekkk1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vanekkk1/subscriptions",
            "organizations_url": "https://api.github.com/users/Vanekkk1/orgs",
            "repos_url": "https://api.github.com/users/Vanekkk1/repos",
            "events_url": "https://api.github.com/users/Vanekkk1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vanekkk1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-11-06T21:41:02Z",
        "updated_at": "2023-12-11T12:03:14Z",
        "closed_at": "2023-11-13T10:14:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nall last versions as of 6/11/2023\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRun anything with OpeanAI ChatCompletions and Embeddings \n\n### Expected behavior\n\nFile \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/embeddings/openai.py\", line 284, in validate_environment\r\n    values[\"client\"] = openai.Embedding\r\n                       ^^^^^^^^^^^^^^^^\r\nAttributeError: module 'openai' has no attribute 'Embedding'. Did you mean: 'embeddings'?\r\n\r\nFile \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/load/serializable.py\", line 97, in __init__\r\n    super().__init__(**kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/v1/main.py\", line 341, in __init__\r\n    raise validation_error\r\npydantic.v1.error_wrappers.ValidationError: 1 validation error for ChatOpenAI\r\n__root__\r\n  `openai` has no `ChatCompletion` attribute, this is likely due to an old version of the openai package. Try upgrading it with `pip install --upgrade openai`. (type=value_error)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12956/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12956/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12955",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12955/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12955/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12955/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12955",
        "id": 1980103620,
        "node_id": "I_kwDOIPDwls52BfvE",
        "number": 12955,
        "title": "Using RunnablePassthrough with Deeplake gives RuntimeError: std::get: wrong index for variant",
        "user": {
            "login": "japs-leon",
            "id": 150083258,
            "node_id": "U_kgDOCPIWug",
            "avatar_url": "https://avatars.githubusercontent.com/u/150083258?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/japs-leon",
            "html_url": "https://github.com/japs-leon",
            "followers_url": "https://api.github.com/users/japs-leon/followers",
            "following_url": "https://api.github.com/users/japs-leon/following{/other_user}",
            "gists_url": "https://api.github.com/users/japs-leon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/japs-leon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/japs-leon/subscriptions",
            "organizations_url": "https://api.github.com/users/japs-leon/orgs",
            "repos_url": "https://api.github.com/users/japs-leon/repos",
            "events_url": "https://api.github.com/users/japs-leon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/japs-leon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T21:38:34Z",
        "updated_at": "2023-11-06T21:45:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain 0.0.331 latest\r\nOpenai v0.28.1\r\nPython v3.11.6\r\nDeeplake 3.8.4 latest\r\n\r\n### Who can help?\r\n@eyurtsev\r\n@hwchase17\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nOnce data has been loaded to Deeplake db\r\n\r\n\r\n```\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.schema.output_parser import StrOutputParser\r\nfrom langchain.schema.runnable import RunnablePassthrough\r\nfrom langchain.vectorstores import DeepLake\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.prompts import ChatPromptTemplate\r\n\r\nmodel = ChatOpenAI()\r\n\r\ndb = DeepLake(dataset_path=\"./my_deeplake/\", read_only=True, embedding=OpenAIEmbeddings())\r\n\r\nretriever = db.as_retriever()\r\nretriever.search_kwargs['distance_metric'] = 'cos'\r\nretriever.search_kwargs['fetch_k'] = 10\r\nretriever.search_kwargs['maximal_marginal_relevance'] = True\r\nretriever.search_kwargs['k'] = 5\r\n\r\ntemplate = \"\"\"Answer the question based only on the following context:\r\n{context}\r\n\r\nQuestion: {question}\r\n\"\"\"\r\nprompt = ChatPromptTemplate.from_template(template)\r\n\r\nretrieval_chain = (\r\n    {\"context\": retriever, \"question\": RunnablePassthrough()}\r\n    | prompt\r\n    | model\r\n    | StrOutputParser()\r\n)\r\n\r\n\r\nretrieval_chain.invoke(\"where did harrison work?\")\r\n```\r\nError\r\n\r\nRuntimeError: std::get: wrong index for variant\r\n\r\n<img width=\"1489\" alt=\"image\" src=\"https://github.com/langchain-ai/langchain/assets/150083258/9dbcad3a-759b-492e-86f6-3cd1dc67ce91\">\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nExpected behavior is it should retrieve documents from vectordb ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12955/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12954",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12954/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12954/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12954/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12954",
        "id": 1980093720,
        "node_id": "I_kwDOIPDwls52BdUY",
        "number": 12954,
        "title": "Module 'openai' has no attribute 'Embedding'",
        "user": {
            "login": "lucasdnr",
            "id": 2001763,
            "node_id": "MDQ6VXNlcjIwMDE3NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2001763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lucasdnr",
            "html_url": "https://github.com/lucasdnr",
            "followers_url": "https://api.github.com/users/lucasdnr/followers",
            "following_url": "https://api.github.com/users/lucasdnr/following{/other_user}",
            "gists_url": "https://api.github.com/users/lucasdnr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lucasdnr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lucasdnr/subscriptions",
            "organizations_url": "https://api.github.com/users/lucasdnr/orgs",
            "repos_url": "https://api.github.com/users/lucasdnr/repos",
            "events_url": "https://api.github.com/users/lucasdnr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lucasdnr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 23,
        "created_at": "2023-11-06T21:31:20Z",
        "updated_at": "2023-12-03T19:02:26Z",
        "closed_at": "2023-11-14T20:09:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain: 0.0.331\r\nOpenAI: 1.1.0\r\nPython:  3.11.2 \n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nFull Message:\r\n\r\n> ...langchain/embeddings/openai.py\", line 284, in validate_environment\r\n>     values[\"client\"] = openai.Embedding\r\n>                        ^^^^^^^^^^^^^^^^\r\n> AttributeError: module 'openai' has no attribute 'Embedding'. Did you mean: 'embeddings'?\r\n\r\nCode line caught this error:\r\n\r\n`index = VectorstoreIndexCreator(vectorstore_kwargs={\"persist_directory\":\"persist\"}).from_loaders([loader])`\n\n### Expected behavior\n\nCreates Vector Store Index",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12954/reactions",
            "total_count": 3,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12954/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12953",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12953/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12953/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12953/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12953",
        "id": 1980073140,
        "node_id": "I_kwDOIPDwls52BYS0",
        "number": 12953,
        "title": "Issue: \"response_format\" parameter on the new GPT-4-turbo model",
        "user": {
            "login": "tiagobe86",
            "id": 113486546,
            "node_id": "U_kgDOBsOq0g",
            "avatar_url": "https://avatars.githubusercontent.com/u/113486546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tiagobe86",
            "html_url": "https://github.com/tiagobe86",
            "followers_url": "https://api.github.com/users/tiagobe86/followers",
            "following_url": "https://api.github.com/users/tiagobe86/following{/other_user}",
            "gists_url": "https://api.github.com/users/tiagobe86/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tiagobe86/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tiagobe86/subscriptions",
            "organizations_url": "https://api.github.com/users/tiagobe86/orgs",
            "repos_url": "https://api.github.com/users/tiagobe86/repos",
            "events_url": "https://api.github.com/users/tiagobe86/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tiagobe86/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-06T21:16:44Z",
        "updated_at": "2023-11-07T01:44:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### \"response_format\" parameter on the new GPT-4-turbo model\r\n\r\nI can sucessfully call the new GPT-4-turbo model by using:\r\n\r\n`const model = new ChatOpenAI({modelName:\"gpt-4-1106-preview\"})`\r\n\r\nBut I can't add the \"response_format\" parameter to set its response explicitly to be a json, as stated in:\r\n\r\nhttps://platform.openai.com/docs/guides/text-generation/json-mode\r\n\r\n### Suggestion:\r\n\r\nIs there a way to pass the parameter to the model or this should be added to the ChatOpenAI code?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12953/reactions",
            "total_count": 10,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 4
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12953/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12952",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12952/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12952/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12952/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12952",
        "id": 1980071981,
        "node_id": "PR_kwDOIPDwls5evQOG",
        "number": 12952,
        "title": "Add Chroma multimodal cookbook",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T21:15:50Z",
        "updated_at": "2023-11-10T17:43:11Z",
        "closed_at": "2023-11-10T17:43:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12952",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12952",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12952.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12952.patch",
            "merged_at": "2023-11-10T17:43:10Z"
        },
        "body": "Pending:\r\n* https://github.com/chroma-core/chroma/pull/1294\r\n* https://github.com/chroma-core/chroma/pull/1293\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12952/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12952/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12951",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12951/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12951/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12951/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12951",
        "id": 1980044182,
        "node_id": "PR_kwDOIPDwls5evKEa",
        "number": 12951,
        "title": " Added Lantern as VectorStore",
        "user": {
            "login": "var77",
            "id": 17221195,
            "node_id": "MDQ6VXNlcjE3MjIxMTk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17221195?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/var77",
            "html_url": "https://github.com/var77",
            "followers_url": "https://api.github.com/users/var77/followers",
            "following_url": "https://api.github.com/users/var77/following{/other_user}",
            "gists_url": "https://api.github.com/users/var77/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/var77/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/var77/subscriptions",
            "organizations_url": "https://api.github.com/users/var77/orgs",
            "repos_url": "https://api.github.com/users/var77/repos",
            "events_url": "https://api.github.com/users/var77/events{/privacy}",
            "received_events_url": "https://api.github.com/users/var77/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T20:56:20Z",
        "updated_at": "2023-11-06T20:56:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12951",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12951",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12951.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12951.patch",
            "merged_at": null
        },
        "body": "Support [Lantern](https://github.com/lanterndata/lantern) as a new VectorStore type.\r\n\r\n- Added Lantern as VectorStore.\r\n It will support 3 distance functions `l2 squared`, `cosine` and `hamming` and will use `HNSW` index.\r\n- Added tests\r\n- Added example notebook",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12951/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12951/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12950",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12950/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12950/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12950/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12950",
        "id": 1980041890,
        "node_id": "PR_kwDOIPDwls5evJkK",
        "number": 12950,
        "title": "chore: change chatCompletion function  to latest api change",
        "user": {
            "login": "Nishkarsh1606",
            "id": 90414246,
            "node_id": "MDQ6VXNlcjkwNDE0MjQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/90414246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nishkarsh1606",
            "html_url": "https://github.com/Nishkarsh1606",
            "followers_url": "https://api.github.com/users/Nishkarsh1606/followers",
            "following_url": "https://api.github.com/users/Nishkarsh1606/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nishkarsh1606/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nishkarsh1606/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nishkarsh1606/subscriptions",
            "organizations_url": "https://api.github.com/users/Nishkarsh1606/orgs",
            "repos_url": "https://api.github.com/users/Nishkarsh1606/repos",
            "events_url": "https://api.github.com/users/Nishkarsh1606/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nishkarsh1606/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-06T20:54:43Z",
        "updated_at": "2023-12-05T23:39:42Z",
        "closed_at": "2023-12-05T23:39:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12950",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12950",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12950.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12950.patch",
            "merged_at": null
        },
        "body": "- **Description:** Updated the method of obtaining chat completions to be compatible with the latest OpenAI API. OpenAI has deprecated `chatCompletion` in their recent release. This update replaces the deprecated method with the current `client.chat.completions` method, ensuring compatibility with the latest API standards.\r\n\r\n- **Twitter handle:** @nish306 \r\n\r\nI have made sure the PR is passing linting and testing before submitting. I have run `make format`, `make lint`, and `make test` to check this locally.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12950/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12950/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12949",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12949/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12949/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12949/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12949",
        "id": 1980034271,
        "node_id": "I_kwDOIPDwls52BOzf",
        "number": 12949,
        "title": "openai has no ChatCompletion attribute, this is likely due to an old version of the openai package. ",
        "user": {
            "login": "cta2106",
            "id": 32028497,
            "node_id": "MDQ6VXNlcjMyMDI4NDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/32028497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cta2106",
            "html_url": "https://github.com/cta2106",
            "followers_url": "https://api.github.com/users/cta2106/followers",
            "following_url": "https://api.github.com/users/cta2106/following{/other_user}",
            "gists_url": "https://api.github.com/users/cta2106/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cta2106/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cta2106/subscriptions",
            "organizations_url": "https://api.github.com/users/cta2106/orgs",
            "repos_url": "https://api.github.com/users/cta2106/repos",
            "events_url": "https://api.github.com/users/cta2106/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cta2106/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 33,
        "created_at": "2023-11-06T20:49:17Z",
        "updated_at": "2023-11-13T16:23:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain v0.0.323\r\nOpenai v1.0.1 (latest)\r\nPython v3.11.6\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @agola11 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\nllm = ChatOpenAI(\r\n    model_name=\"gpt-4\",\r\n    request_timeout=120,\r\n)\r\n\r\n```\r\n\r\nopenai has no ChatCompletion attribute, this is likely due to an old version of the openai package. Try upgrading it with `pip install --upgrade openai`. (type=value_error)\r\n\r\n### Expected behavior\r\n\r\nThere is an issue with ChatOpenAI that I believe may be related to the newest openai python package update.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12949/reactions",
            "total_count": 22,
            "+1": 19,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 3
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12949/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12948",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12948/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12948/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12948/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12948",
        "id": 1979878575,
        "node_id": "PR_kwDOIPDwls5eulkH",
        "number": 12948,
        "title": "Bagatur/oai v1 scratch",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T19:06:57Z",
        "updated_at": "2023-11-06T21:24:20Z",
        "closed_at": "2023-11-06T21:24:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12948",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12948",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12948.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12948.patch",
            "merged_at": "2023-11-06T21:24:19Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12948/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12946",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12946/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12946/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12946/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12946",
        "id": 1979764177,
        "node_id": "PR_kwDOIPDwls5euLwi",
        "number": 12946,
        "title": "Multi modal RAG + QA Cookbooks",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T18:10:22Z",
        "updated_at": "2023-11-07T17:10:26Z",
        "closed_at": "2023-11-07T17:10:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12946",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12946",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12946.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12946.patch",
            "merged_at": "2023-11-07T17:10:25Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12946/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12946/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12945",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12945/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12945/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12945/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12945",
        "id": 1979752924,
        "node_id": "PR_kwDOIPDwls5euJNl",
        "number": 12945,
        "title": "cli pyproject updating",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T18:05:04Z",
        "updated_at": "2023-11-07T19:06:10Z",
        "closed_at": "2023-11-07T19:06:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12945",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12945",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12945.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12945.patch",
            "merged_at": "2023-11-07T19:06:09Z"
        },
        "body": "`langchain app add` and `langchain app remove` will now keep the dependencies list updated.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12945/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12945/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12944",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12944/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12944/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12944/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12944",
        "id": 1979742044,
        "node_id": "I_kwDOIPDwls52AHdc",
        "number": 12944,
        "title": "Issue: Agent runs on loop, \"Observation: Invalid Format: Missing 'Action:' after 'Thought:\"",
        "user": {
            "login": "annachrome",
            "id": 84694222,
            "node_id": "MDQ6VXNlcjg0Njk0MjIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/84694222?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/annachrome",
            "html_url": "https://github.com/annachrome",
            "followers_url": "https://api.github.com/users/annachrome/followers",
            "following_url": "https://api.github.com/users/annachrome/following{/other_user}",
            "gists_url": "https://api.github.com/users/annachrome/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/annachrome/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/annachrome/subscriptions",
            "organizations_url": "https://api.github.com/users/annachrome/orgs",
            "repos_url": "https://api.github.com/users/annachrome/repos",
            "events_url": "https://api.github.com/users/annachrome/events{/privacy}",
            "received_events_url": "https://api.github.com/users/annachrome/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-06T18:00:50Z",
        "updated_at": "2023-11-08T16:19:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWhenever my agent does not require a tool, (tool has already been used, or query does not require a tool), it continues output.\r\n\r\n```\r\ndatetimetool = Tool(\r\n    name=\"datetimetool\",\r\n    func=lambda x: datetime.now().strftime('%A %d %B %Y, %I:%M%p'), \r\n    description=\"Retrieve and return the current date and/or time. \\\r\n        Input should be an empty string.\",\r\n)\r\n\r\ntools = [datetimetool]\r\n\r\nPREFIX = '''\r\nYou are a truthful, helpful agent.\r\n'''\r\n\r\nFORMAT_INSTRUCTIONS = \"\"\"Please use the following format only when you need to use a tool:\r\n'''\r\nThought: Do I need to use a tool? Yes\r\nAction: the action to take, should be one of [{tool_names}]\r\nAction Input: the input to the action\r\nObservation: the result of the action\r\n'''\r\n\r\nWhen you have gathered all the information regarding the user's query,\\\r\n    use the following format to answer the query and do not repeat yourself.\r\n\r\n'''\r\nThought: Do I need to use a tool? No\r\nAI: [print answer and stop output]\r\n'''\r\n\"\"\"\r\n\r\nSUFFIX = '''\r\n\r\nBegin!\r\n\r\n\r\nInstructions: {input}\r\n{agent_scratchpad}\r\n'''\r\n\r\nagent = initialize_agent(\r\n    tools=tools,\r\n    llm=llm,\r\n    agent=\"zero-shot-react-description\",\r\n    verbose=True,\r\n    return_intermediate_steps=True,\r\n    handle_parsing_errors=True,\r\n    agent_kwargs={\r\n        'prefix': PREFIX, \r\n        'format_instructions': FORMAT_INSTRUCTIONS,\r\n        'suffix': SUFFIX,\r\n        'input variables': [\"chat_history\", \"input\", \"agent_scratchpad\", \"tool_names\"],\r\n    }    \r\n)\r\n\r\nquery = \"How are you?\" # Or: \"What's the time?\"\r\n\r\nres = agent({'input': query})\r\nprint(res['output'])\r\n```\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12944/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12944/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12943",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12943/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12943/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12943/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12943",
        "id": 1979733329,
        "node_id": "I_kwDOIPDwls52AFVR",
        "number": 12943,
        "title": "OpenAIEmbeddings() does not work because of these bugs",
        "user": {
            "login": "pranavgupta2603",
            "id": 88652820,
            "node_id": "MDQ6VXNlcjg4NjUyODIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/88652820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavgupta2603",
            "html_url": "https://github.com/pranavgupta2603",
            "followers_url": "https://api.github.com/users/pranavgupta2603/followers",
            "following_url": "https://api.github.com/users/pranavgupta2603/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavgupta2603/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavgupta2603/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavgupta2603/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavgupta2603/orgs",
            "repos_url": "https://api.github.com/users/pranavgupta2603/repos",
            "events_url": "https://api.github.com/users/pranavgupta2603/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavgupta2603/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 18,
        "created_at": "2023-11-06T17:56:29Z",
        "updated_at": "2023-11-08T21:38:33Z",
        "closed_at": "2023-11-08T21:38:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nPython Version: 3.11\r\nLangChain Version: 0.0.331\r\nOpenAI Version: 1.0.0\r\n\r\n### Who can help?\r\n\r\n@hwchase17, @agola11, @eyurtsev\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nThe following error has been caused due to the recent change in version of OpenAI to 1.0.0\r\n**Use OpenAI==0.28.1 to fix this error**\r\nWith the code:\r\n`embeddings = OpenAIEmbeddings()`\r\n\r\nThe error produced is:\r\n`AttributeError: module 'openai' has no attribute 'Embedding'. Did you mean: 'embeddings'?`\r\n\r\nI went through the `langchain/embeddings/openai.py` file and then changed `value[\"client\"] = openai.Embedding` to `value[\"client\"] = openai.embeddings`, but then I receive this new error:\r\n\r\n`AttributeError: module 'openai' has no attribute 'error'` in the same file (`langchain/embeddings/openai.py`)\r\n\r\n\r\n### Expected behavior\r\n\r\nThere should be no error when calling this function.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12943/reactions",
            "total_count": 4,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12943/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12942",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12942/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12942/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12942/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12942",
        "id": 1979664993,
        "node_id": "I_kwDOIPDwls51_0ph",
        "number": 12942,
        "title": "BaseCombineDocumentsChain's \"input_documents\" parameter not overridden by child classes",
        "user": {
            "login": "kevin-guimard-ext",
            "id": 140074762,
            "node_id": "U_kgDOCFlfCg",
            "avatar_url": "https://avatars.githubusercontent.com/u/140074762?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevin-guimard-ext",
            "html_url": "https://github.com/kevin-guimard-ext",
            "followers_url": "https://api.github.com/users/kevin-guimard-ext/followers",
            "following_url": "https://api.github.com/users/kevin-guimard-ext/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevin-guimard-ext/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevin-guimard-ext/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevin-guimard-ext/subscriptions",
            "organizations_url": "https://api.github.com/users/kevin-guimard-ext/orgs",
            "repos_url": "https://api.github.com/users/kevin-guimard-ext/repos",
            "events_url": "https://api.github.com/users/kevin-guimard-ext/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevin-guimard-ext/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-06T17:23:19Z",
        "updated_at": "2023-11-06T17:41:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain v0.0.287\r\nWindows 10\r\nPython 3.9\n\n### Who can help?\n\n@eyurtsev\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\ntemplate = \"Here is some context:\\n\" \\\r\n           \"{my_documents}\\n\" \\\r\n           \"With the help of the context above, please answer the following query:\\n\" \\\r\n           f\"{query}\"\r\n\r\nchain = LLMChain(llm=llm, prompt=PromptTemplate.from_template(template))\r\n\r\ncombined_chain = StuffDocumentsChain(llm_chain=chain, document_variable_name=\"my_documents\")\r\n\r\nresult = combined_chain.run(my_documents=documents)\r\n```\n\n### Expected behavior\n\nThe code above triggers the following error:\r\n\r\n> ValueError: Missing some input keys: {'input_documents'}\r\n\r\nThough, the document variable has been explicitly named as \"my_documents\" and not \"input_documents\". The reason is that the base class BaseCombineDocumentsChain defines \"input_documents\" variable by default, but the latter is not overridden by the\r\nparameter \"document_variable_name\" in child classes. By consistency, the \"document_variable_name\" should refer both to the variable name specified in the prompt and to the named parameter in the run method of the chain.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12942/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12942/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12941",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12941/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12941/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12941/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12941",
        "id": 1979528755,
        "node_id": "PR_kwDOIPDwls5etXzO",
        "number": 12941,
        "title": "fix guides link",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T16:12:54Z",
        "updated_at": "2023-11-06T16:13:04Z",
        "closed_at": "2023-11-06T16:13:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12941",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12941",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12941.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12941.patch",
            "merged_at": "2023-11-06T16:13:03Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12941/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12940",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12940/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12940/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12940/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12940",
        "id": 1979468104,
        "node_id": "PR_kwDOIPDwls5etKbk",
        "number": 12940,
        "title": "Add support of Cohere Embed v3",
        "user": {
            "login": "kacperlukawski",
            "id": 2649301,
            "node_id": "MDQ6VXNlcjI2NDkzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2649301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kacperlukawski",
            "html_url": "https://github.com/kacperlukawski",
            "followers_url": "https://api.github.com/users/kacperlukawski/followers",
            "following_url": "https://api.github.com/users/kacperlukawski/following{/other_user}",
            "gists_url": "https://api.github.com/users/kacperlukawski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kacperlukawski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kacperlukawski/subscriptions",
            "organizations_url": "https://api.github.com/users/kacperlukawski/orgs",
            "repos_url": "https://api.github.com/users/kacperlukawski/repos",
            "events_url": "https://api.github.com/users/kacperlukawski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kacperlukawski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-06T15:44:49Z",
        "updated_at": "2023-11-07T08:45:46Z",
        "closed_at": "2023-11-06T20:06:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12940",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12940",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12940.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12940.patch",
            "merged_at": "2023-11-06T20:06:58Z"
        },
        "body": "Cohere released the new embedding API (Embed v3: https://txt.cohere.com/introducing-embed-v3/) that treats document and query embeddings differently. This PR updated the `CohereEmbeddings` to use them appropriately. It also works with the old models.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12940/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12940/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12939",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12939/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12939/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12939/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12939",
        "id": 1979408818,
        "node_id": "PR_kwDOIPDwls5es9WI",
        "number": 12939,
        "title": "fix langsmith link",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T15:16:55Z",
        "updated_at": "2023-11-06T15:17:07Z",
        "closed_at": "2023-11-06T15:17:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12939",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12939",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12939.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12939.patch",
            "merged_at": "2023-11-06T15:17:05Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12939/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12938",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12938/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12938/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12938/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12938",
        "id": 1979368880,
        "node_id": "PR_kwDOIPDwls5es0q9",
        "number": 12938,
        "title": "Fix for anyscale chat model api key",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T14:57:33Z",
        "updated_at": "2023-11-06T18:28:03Z",
        "closed_at": "2023-11-06T18:28:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12938",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12938",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12938.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12938.patch",
            "merged_at": "2023-11-06T18:28:02Z"
        },
        "body": "* ChatAnyscale was missing coercion to SecretStr for anyscale api key\r\n* The model inherits from ChatOpenAI so it should not force the openai api key to be secret str until openai model has the same changes\r\n\r\nhttps://github.com/langchain-ai/langchain/issues/12841\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12938/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12938/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12937",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12937/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12937/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12937/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12937",
        "id": 1979347205,
        "node_id": "PR_kwDOIPDwls5esv7-",
        "number": 12937,
        "title": "Fix return metadata when searching for DingoDB",
        "user": {
            "login": "HeChangHaoGary",
            "id": 53417823,
            "node_id": "MDQ6VXNlcjUzNDE3ODIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/53417823?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HeChangHaoGary",
            "html_url": "https://github.com/HeChangHaoGary",
            "followers_url": "https://api.github.com/users/HeChangHaoGary/followers",
            "following_url": "https://api.github.com/users/HeChangHaoGary/following{/other_user}",
            "gists_url": "https://api.github.com/users/HeChangHaoGary/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HeChangHaoGary/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HeChangHaoGary/subscriptions",
            "organizations_url": "https://api.github.com/users/HeChangHaoGary/orgs",
            "repos_url": "https://api.github.com/users/HeChangHaoGary/repos",
            "events_url": "https://api.github.com/users/HeChangHaoGary/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HeChangHaoGary/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T14:47:31Z",
        "updated_at": "2023-11-06T15:35:43Z",
        "closed_at": "2023-11-06T15:35:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12937",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12937",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12937.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12937.patch",
            "merged_at": "2023-11-06T15:35:37Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12937/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12937/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12936",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12936/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12936/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12936/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12936",
        "id": 1979330102,
        "node_id": "PR_kwDOIPDwls5essKD",
        "number": 12936,
        "title": "Fix #12793: Add support for Cohere Embedding V3",
        "user": {
            "login": "ashish-dahal",
            "id": 35001414,
            "node_id": "MDQ6VXNlcjM1MDAxNDE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35001414?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashish-dahal",
            "html_url": "https://github.com/ashish-dahal",
            "followers_url": "https://api.github.com/users/ashish-dahal/followers",
            "following_url": "https://api.github.com/users/ashish-dahal/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashish-dahal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashish-dahal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashish-dahal/subscriptions",
            "organizations_url": "https://api.github.com/users/ashish-dahal/orgs",
            "repos_url": "https://api.github.com/users/ashish-dahal/repos",
            "events_url": "https://api.github.com/users/ashish-dahal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashish-dahal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T14:39:51Z",
        "updated_at": "2023-11-07T10:34:42Z",
        "closed_at": "2023-11-06T20:09:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12936",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12936",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12936.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12936.patch",
            "merged_at": null
        },
        "body": "- **Description:** Fix issue #12793. [Reference](https://txt.cohere.com/introducing-embed-v3/).\r\n     - Added new mandatory parameter ```input_type```\r\n- **Dependencies:** None",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12936/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12936/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12935",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12935/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12935/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12935/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12935",
        "id": 1979310468,
        "node_id": "PR_kwDOIPDwls5esn2o",
        "number": 12935,
        "title": "feat: acquire advisory lock before creating extension in pgvector",
        "user": {
            "login": "VinzenzKlass",
            "id": 76391770,
            "node_id": "MDQ6VXNlcjc2MzkxNzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/76391770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VinzenzKlass",
            "html_url": "https://github.com/VinzenzKlass",
            "followers_url": "https://api.github.com/users/VinzenzKlass/followers",
            "following_url": "https://api.github.com/users/VinzenzKlass/following{/other_user}",
            "gists_url": "https://api.github.com/users/VinzenzKlass/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VinzenzKlass/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VinzenzKlass/subscriptions",
            "organizations_url": "https://api.github.com/users/VinzenzKlass/orgs",
            "repos_url": "https://api.github.com/users/VinzenzKlass/repos",
            "events_url": "https://api.github.com/users/VinzenzKlass/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VinzenzKlass/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T14:30:19Z",
        "updated_at": "2023-11-06T19:00:40Z",
        "closed_at": "2023-11-06T19:00:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12935",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12935",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12935.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12935.patch",
            "merged_at": "2023-11-06T19:00:39Z"
        },
        "body": "  - **Description:** Acquire advisory lock before attempting to create extension on postgres server, preventing errors in concurrent executions.\r\n  - **Issue:** #12933\r\n  - **Dependencies:** None\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12935/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12935/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12934",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12934/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12934/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12934/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12934",
        "id": 1979308611,
        "node_id": "PR_kwDOIPDwls5esndI",
        "number": 12934,
        "title": "Fix normalizing the cosine distance in Qdrant",
        "user": {
            "login": "kacperlukawski",
            "id": 2649301,
            "node_id": "MDQ6VXNlcjI2NDkzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2649301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kacperlukawski",
            "html_url": "https://github.com/kacperlukawski",
            "followers_url": "https://api.github.com/users/kacperlukawski/followers",
            "following_url": "https://api.github.com/users/kacperlukawski/following{/other_user}",
            "gists_url": "https://api.github.com/users/kacperlukawski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kacperlukawski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kacperlukawski/subscriptions",
            "organizations_url": "https://api.github.com/users/kacperlukawski/orgs",
            "repos_url": "https://api.github.com/users/kacperlukawski/repos",
            "events_url": "https://api.github.com/users/kacperlukawski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kacperlukawski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T14:29:30Z",
        "updated_at": "2023-11-06T15:36:59Z",
        "closed_at": "2023-11-06T15:36:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12934",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12934",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12934.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12934.patch",
            "merged_at": "2023-11-06T15:36:59Z"
        },
        "body": "Qdrant was incorrectly calculating the cosine similarity and returning `0.0` for the best match, instead of `1.0`. Internally Qdrant returns a cosine score from `-1.0` (worst match) to `1.0` (best match), and the current formula reflects it.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12934/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12933",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12933/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12933/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12933/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12933",
        "id": 1979277387,
        "node_id": "I_kwDOIPDwls51-WBL",
        "number": 12933,
        "title": "PGVector: support for concurrency",
        "user": {
            "login": "VinzenzKlass",
            "id": 76391770,
            "node_id": "MDQ6VXNlcjc2MzkxNzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/76391770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VinzenzKlass",
            "html_url": "https://github.com/VinzenzKlass",
            "followers_url": "https://api.github.com/users/VinzenzKlass/followers",
            "following_url": "https://api.github.com/users/VinzenzKlass/following{/other_user}",
            "gists_url": "https://api.github.com/users/VinzenzKlass/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VinzenzKlass/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VinzenzKlass/subscriptions",
            "organizations_url": "https://api.github.com/users/VinzenzKlass/orgs",
            "repos_url": "https://api.github.com/users/VinzenzKlass/repos",
            "events_url": "https://api.github.com/users/VinzenzKlass/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VinzenzKlass/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T14:19:17Z",
        "updated_at": "2023-11-06T19:03:36Z",
        "closed_at": "2023-11-06T19:03:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWhen trying to concurrently fetch many collections from a single postgres server using PGVector, this will currently produce this error:\r\n``` \r\n(psycopg2.errors.InternalError_) tuple concurrently updated\r\n```\r\n\r\nThis is the expected behaviour for the code as it is and is produced by this line:\r\n```\r\nstatement = sqlalchemy.text(\"CREATE EXTENSION IF NOT EXISTS vector\")\r\n```\r\n\r\nThere is no support for concurrent `CREATE EXTENSION` Operations in Postgres, as outlined in [this post](https://www.postgresql.org/message-id/3473.1393693757%40sss.pgh.pa.us):\r\n\r\n> It'd be necessary to add some kind of locking scheme if you want to avoid \"tuple concurrently updated\" errors.  This is not really any different from the situation where two transactions both want to update the same row in a user table: unless the application takes extra steps to serialize the updates, you're going to get \"tuple concurrently updated\" errors. \r\n> \r\n> We do have such locking for DDL on tables/indexes, but the theory in the past has been that it's not worth the trouble for objects represented by single catalog rows, such as functions or roles.  You can't corrupt the database with concurrent updates on such a row, you'll just get a \"tuple concurrently updated\" error from all but the first-to-arrive update.\r\n\r\nAs the post suggests, if we want to concurrently run these statements, a locking Scheme is needed. This can easily be achieved by using Postgres' `pg_advisory_xact_lock`, as described [here](https://www.postgresql.org/docs/16/explicit-locking.html#ADVISORY-LOCKS) & [here](https://www.postgresql.org/docs/16/functions-admin.html):\r\n\r\n``` \r\nBEGIN;\r\nSELECT pg_advisory_xact_lock(1573678846307946496);\r\nCREATE EXTENSION IF NOT EXISTS vector;\r\nCOMMIT;\r\n``` \r\n\r\n\r\nThis will acquire an exclusive transaction-level advisory lock, waiting if necessary which is automatically released at the end of the transaction. My proposal is therefore to change the current bare `CREATE EXTENSION IF NOT EXISTS vector` with the above to allow for concurrent execution without errors or having to retry.\n\n### Motivation\n\nWe have a scenario where it would be beneficial to concurrently retrieve a large number of collections from a single server, and this would appear to be the easiest way to achieve this.\n\n### Your contribution\n\nI will submit an according PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12933/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12933/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12932",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12932/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12932/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12932/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12932",
        "id": 1979215706,
        "node_id": "PR_kwDOIPDwls5esSog",
        "number": 12932,
        "title": "bump 331",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T13:53:51Z",
        "updated_at": "2023-11-06T13:58:13Z",
        "closed_at": "2023-11-06T13:58:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12932",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12932",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12932.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12932.patch",
            "merged_at": "2023-11-06T13:58:12Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12932/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12932/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12931",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12931/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12931/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12931/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12931",
        "id": 1979196378,
        "node_id": "I_kwDOIPDwls51-CPa",
        "number": 12931,
        "title": "Example prompt for text classification",
        "user": {
            "login": "eswarthammana",
            "id": 23114153,
            "node_id": "MDQ6VXNlcjIzMTE0MTUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/23114153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eswarthammana",
            "html_url": "https://github.com/eswarthammana",
            "followers_url": "https://api.github.com/users/eswarthammana/followers",
            "following_url": "https://api.github.com/users/eswarthammana/following{/other_user}",
            "gists_url": "https://api.github.com/users/eswarthammana/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eswarthammana/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eswarthammana/subscriptions",
            "organizations_url": "https://api.github.com/users/eswarthammana/orgs",
            "repos_url": "https://api.github.com/users/eswarthammana/repos",
            "events_url": "https://api.github.com/users/eswarthammana/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eswarthammana/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-06T13:44:57Z",
        "updated_at": "2023-11-09T04:59:23Z",
        "closed_at": "2023-11-09T04:59:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, could you please share me an working example for text classification using Langchain with LlamaCPP or llama-cpp-python module, when tried the following with Llama2 7B Q5_K_M\r\n\r\n```\r\n prompt_template = \"\"\"A message can be classified as one of the following categories: book, cancel, change.\r\n\r\nExamples:\r\n- Book: \"I would like to book a room for two nights.\"\r\n- Cancel: \"Please cancel my reservation and refund the payment.\"\r\n- Change: \"I need to change the dates of my booking to next week.\"\r\n\r\nBased on these categories, classify the following message:\r\n```{text}```\r\n\"\"\"\r\n```\r\n\r\nThe LlamaCPP is as follows\r\n```\r\nllm = LlamaCpp(\r\n    n_ctx=256,\r\n    model_path=model,\r\n    temperature=0,\r\n    callback_manager=callback_manager,\r\n    verbose=True,\r\n)\r\n```\r\nresult = run_query(\"I would like to cancel my booking and ask for a refund.\", prompt_template, llm)\r\n\r\noutput:\r\n\r\n> Please help me to solve this issue.\r\n> Please assist in resolving the cancellation of the reservation as soon as possible.\r\n\r\nThe above sample is not classifying the given input.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12931/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12931/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12930",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12930/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12930/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12930/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12930",
        "id": 1979195288,
        "node_id": "PR_kwDOIPDwls5esOGm",
        "number": 12930,
        "title": "Fix typo in e2b_data_analysis.ipynb",
        "user": {
            "login": "cbpetersen",
            "id": 1058981,
            "node_id": "MDQ6VXNlcjEwNTg5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1058981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cbpetersen",
            "html_url": "https://github.com/cbpetersen",
            "followers_url": "https://api.github.com/users/cbpetersen/followers",
            "following_url": "https://api.github.com/users/cbpetersen/following{/other_user}",
            "gists_url": "https://api.github.com/users/cbpetersen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cbpetersen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cbpetersen/subscriptions",
            "organizations_url": "https://api.github.com/users/cbpetersen/orgs",
            "repos_url": "https://api.github.com/users/cbpetersen/repos",
            "events_url": "https://api.github.com/users/cbpetersen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cbpetersen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T13:44:34Z",
        "updated_at": "2023-11-06T15:37:30Z",
        "closed_at": "2023-11-06T15:37:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12930",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12930",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12930.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12930.patch",
            "merged_at": "2023-11-06T15:37:30Z"
        },
        "body": "Just a small typo fix",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12930/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12930/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12929",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12929/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12929/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12929/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12929",
        "id": 1979158541,
        "node_id": "PR_kwDOIPDwls5esGDD",
        "number": 12929,
        "title": "fix regex pattern of structured output parser",
        "user": {
            "login": "hmasdev",
            "id": 73353463,
            "node_id": "MDQ6VXNlcjczMzUzNDYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/73353463?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hmasdev",
            "html_url": "https://github.com/hmasdev",
            "followers_url": "https://api.github.com/users/hmasdev/followers",
            "following_url": "https://api.github.com/users/hmasdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/hmasdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hmasdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hmasdev/subscriptions",
            "organizations_url": "https://api.github.com/users/hmasdev/orgs",
            "repos_url": "https://api.github.com/users/hmasdev/repos",
            "events_url": "https://api.github.com/users/hmasdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hmasdev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T13:26:09Z",
        "updated_at": "2023-11-06T15:53:14Z",
        "closed_at": "2023-11-06T15:53:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12929",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12929",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12929.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12929.patch",
            "merged_at": "2023-11-06T15:53:14Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n\r\n- **Description:**  fix the regex pattern of [StructuredChatOutputParser](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/agents/structured_chat/output_parser.py#L18) and add unit tests for the code change.\r\n- **Issue:** #12158 #12922\r\n- **Dependencies:** None\r\n- **Tag maintainer:** \r\n- **Twitter handle:** @hmdev3\r\n- **NOTE:** This PR conflicts #7495 . After #7495 is merged, I am going to update PR.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12929/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12929/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12928",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12928/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12928/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12928/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12928",
        "id": 1979141037,
        "node_id": "PR_kwDOIPDwls5esCQB",
        "number": 12928,
        "title": "add baidu cloud vectorsearch document",
        "user": {
            "login": "wemysschen",
            "id": 38650638,
            "node_id": "MDQ6VXNlcjM4NjUwNjM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/38650638?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wemysschen",
            "html_url": "https://github.com/wemysschen",
            "followers_url": "https://api.github.com/users/wemysschen/followers",
            "following_url": "https://api.github.com/users/wemysschen/following{/other_user}",
            "gists_url": "https://api.github.com/users/wemysschen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wemysschen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wemysschen/subscriptions",
            "organizations_url": "https://api.github.com/users/wemysschen/orgs",
            "repos_url": "https://api.github.com/users/wemysschen/repos",
            "events_url": "https://api.github.com/users/wemysschen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wemysschen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T13:16:37Z",
        "updated_at": "2023-11-06T15:52:51Z",
        "closed_at": "2023-11-06T15:52:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12928",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12928",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12928.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12928.patch",
            "merged_at": "2023-11-06T15:52:51Z"
        },
        "body": "**Description:** \r\nAdd BaiduCloud VectorSearch document with implement of BESVectorSearch in langchain vectorstores\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12928/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12927",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12927/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12927/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12927/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12927",
        "id": 1979048899,
        "node_id": "PR_kwDOIPDwls5eru3y",
        "number": 12927,
        "title": "Neo4j conversation cypher template",
        "user": {
            "login": "tomasonjo",
            "id": 19948365,
            "node_id": "MDQ6VXNlcjE5OTQ4MzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/19948365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomasonjo",
            "html_url": "https://github.com/tomasonjo",
            "followers_url": "https://api.github.com/users/tomasonjo/followers",
            "following_url": "https://api.github.com/users/tomasonjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomasonjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomasonjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomasonjo/subscriptions",
            "organizations_url": "https://api.github.com/users/tomasonjo/orgs",
            "repos_url": "https://api.github.com/users/tomasonjo/repos",
            "events_url": "https://api.github.com/users/tomasonjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomasonjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6154420538,
                "node_id": "LA_kwDOIPDwls8AAAABbtUBOg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/template",
                "name": "template",
                "color": "145FB1",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T12:37:41Z",
        "updated_at": "2023-11-07T19:05:29Z",
        "closed_at": "2023-11-07T19:05:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12927",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12927",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12927.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12927.patch",
            "merged_at": "2023-11-07T19:05:28Z"
        },
        "body": "Adding custom graph memory to Cypher chain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12927/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12927/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12926",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12926/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12926/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12926/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12926",
        "id": 1978862164,
        "node_id": "I_kwDOIPDwls518wpU",
        "number": 12926,
        "title": "Amazon Bedrock streaming not working with stop sequence",
        "user": {
            "login": "sibijr",
            "id": 8148279,
            "node_id": "MDQ6VXNlcjgxNDgyNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8148279?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sibijr",
            "html_url": "https://github.com/sibijr",
            "followers_url": "https://api.github.com/users/sibijr/followers",
            "following_url": "https://api.github.com/users/sibijr/following{/other_user}",
            "gists_url": "https://api.github.com/users/sibijr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sibijr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sibijr/subscriptions",
            "organizations_url": "https://api.github.com/users/sibijr/orgs",
            "repos_url": "https://api.github.com/users/sibijr/repos",
            "events_url": "https://api.github.com/users/sibijr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sibijr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T11:03:20Z",
        "updated_at": "2023-11-06T11:24:18Z",
        "closed_at": "2023-11-06T11:24:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n\r\n### Issue you'd like to raise.\r\n\r\n\r\nBedrock Streaming support was added in the [PR](https://github.com/langchain-ai/langchain/pull/10393/files#diff-9874347f7fa335df661ff4089b0922b3214e08a92e9879610424522f806358f7R62)\r\n\r\nBut there is an issue if streaming is enabled with `stop sequence`, See the below code, tailing comma is added to the `self.provider_stop_sequence_key_name_map.get(provider),`  which is causing \r\n\r\n```\r\n\"TypeError('keys must be str, int, float, bool or None, not tuple')\"\r\n\r\nline 35, in _prepare_input_and_invoke_stream\r\n    body = json.dumps(input_body)\r\n\r\n\r\n{'temperature': 0, 'max_tokens_to_sample': 4048, ('stop_sequences',): ['<observation>'], 'prompt': '\\n\\nHuman: \r\n\r\n```\r\n\r\n```\r\n        if stop:\r\n            if provider not in self.provider_stop_sequence_key_name_map:\r\n                raise ValueError(\r\n                    f\"Stop sequence key name for {provider} is not supported.\"\r\n                )\r\n\r\n            # stop sequence from _generate() overrides\r\n            # stop sequences in the class attribute\r\n            _model_kwargs[\r\n                self.provider_stop_sequence_key_name_map.get(provider),\r\n            ] = stop\r\n\r\n```\r\n\r\n### Suggested fix\r\nRemove the trailing comma after `self.provider_stop_sequence_key_name_map.get(provider)` in the `_prepare_input_and_invoke_stream` method.\r\n\r\nFor example:\r\n```\r\n_model_kwargs[\r\n    self.provider_stop_sequence_key_name_map.get(provider)\r\n] = stop\r\n```\r\nThis will resolve the TypeError and allow the stop sequence to be properly passed for streaming.\r\n\r\n\r\n\r\n\n\n### Who can help?\n\ncc @3coins @baskaryan @mukitmomi\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nenable bedrock streaming with stop sequence. \r\n\r\n```\r\n\r\n\"TypeError('keys must be str, int, float, bool or None, not tuple')\"\r\n\r\nline 35, in _prepare_input_and_invoke_stream\r\n    body = json.dumps(input_body)\r\n\r\n{'temperature': 0, 'max_tokens_to_sample': 4048, ('stop_sequences',): ['<observation>'], 'prompt': '\\n\\nHuman: \r\n\r\n```\r\n\r\n\r\n\n\n### Expected behavior\n\n{'temperature': 0, 'max_tokens_to_sample': 4048, 'stop_sequences': ['<observation>'], 'prompt': '\\n\\nHuman: \r\n\r\n\r\nstop_sequences as str key. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12926/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12926/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12925",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12925/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12925/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12925/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12925",
        "id": 1978817037,
        "node_id": "I_kwDOIPDwls518loN",
        "number": 12925,
        "title": "Pandas data frame agent hallucinates when asking a quesry: Sending python code insted of actual result",
        "user": {
            "login": "Siddharth-1698",
            "id": 66638045,
            "node_id": "MDQ6VXNlcjY2NjM4MDQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/66638045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Siddharth-1698",
            "html_url": "https://github.com/Siddharth-1698",
            "followers_url": "https://api.github.com/users/Siddharth-1698/followers",
            "following_url": "https://api.github.com/users/Siddharth-1698/following{/other_user}",
            "gists_url": "https://api.github.com/users/Siddharth-1698/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Siddharth-1698/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Siddharth-1698/subscriptions",
            "organizations_url": "https://api.github.com/users/Siddharth-1698/orgs",
            "repos_url": "https://api.github.com/users/Siddharth-1698/repos",
            "events_url": "https://api.github.com/users/Siddharth-1698/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Siddharth-1698/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-06T10:38:37Z",
        "updated_at": "2023-11-07T08:06:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I created a pandas dataframe agent when i am querying over multiple csv files sometimes it is giving correct answer some time it is hallucinates by giving the python code to run to get the answer. \r\nHere's the response I am getting:\r\n```\r\nTo determine the region with the highest total revenue, we can group the data by region and calculate the sum of the total revenue for each region. Then, we can find the region with the highest sum.\r\n\r\nHere is the corresponding Python code to find the region with the highest total revenue, as well as the corresponding country and item type:\r\n\r\n# Group the data by region and calculate the sum of total revenue for each region\r\nregion_revenue = df.groupby('Region')['Total Revenue'].sum()\r\n\r\n# Find the region with the highest total revenue\r\nhighest_revenue_region = region_revenue.idxmax()\r\n\r\n# Find the corresponding country and item type for the highest revenue region\r\ncorresponding_country = df[df['Region'] == highest_revenue_region]['Country'].iloc[0]\r\ncorresponding_item_type = df[df['Region'] == highest_revenue_region]['Item Type'].iloc[0]\r\n\r\nhighest_revenue_region, corresponding_country, corresponding_item_type\r\n\r\nThe region with the highest total revenue is Middle East and North Africa. The corresponding country is Azerbaijan and the corresponding item type is Snacks.\r\n```\r\nhere is the agent i initiated:\r\n\r\n```\r\ncreate_pandas_dataframe_agent(\r\n            ChatOpenAI(temperature=0.0, verbose=True,\r\n                       model='gpt-3.5-turbo'\r\n                       ),\r\n\r\n            self.df,\r\n            verbose=True,\r\n            max_iterations=20,\r\n            agent_type=AgentType.OPENAI_FUNCTIONS,\r\n            # handle_parsing_errors=True,\r\n            agent_executor_kwargs={\r\n                \"handle_parsing_errors\": True\r\n            }\r\n\r\n        )\r\n\r\n```\r\nDo you think the chain is stopping in between before completing the response?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12925/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12925/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12924",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12924/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12924/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12924/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12924",
        "id": 1978785209,
        "node_id": "PR_kwDOIPDwls5eq0pu",
        "number": 12924,
        "title": "fix baiducloud directory loader import file loader",
        "user": {
            "login": "wemysschen",
            "id": 38650638,
            "node_id": "MDQ6VXNlcjM4NjUwNjM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/38650638?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wemysschen",
            "html_url": "https://github.com/wemysschen",
            "followers_url": "https://api.github.com/users/wemysschen/followers",
            "following_url": "https://api.github.com/users/wemysschen/following{/other_user}",
            "gists_url": "https://api.github.com/users/wemysschen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wemysschen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wemysschen/subscriptions",
            "organizations_url": "https://api.github.com/users/wemysschen/orgs",
            "repos_url": "https://api.github.com/users/wemysschen/repos",
            "events_url": "https://api.github.com/users/wemysschen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wemysschen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T10:21:58Z",
        "updated_at": "2023-11-07T14:05:33Z",
        "closed_at": "2023-11-06T15:52:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12924",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12924",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12924.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12924.patch",
            "merged_at": "2023-11-06T15:52:31Z"
        },
        "body": " **Issue:** \r\nfix baiducloud BOS directory loader imports its file loader",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12924/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12924/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12923",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12923/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12923/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12923/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12923",
        "id": 1978615854,
        "node_id": "I_kwDOIPDwls5170gu",
        "number": 12923,
        "title": "Issue: Unable to Merge confluence and githubissues loader",
        "user": {
            "login": "arnavroh45",
            "id": 58484869,
            "node_id": "MDQ6VXNlcjU4NDg0ODY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58484869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arnavroh45",
            "html_url": "https://github.com/arnavroh45",
            "followers_url": "https://api.github.com/users/arnavroh45/followers",
            "following_url": "https://api.github.com/users/arnavroh45/following{/other_user}",
            "gists_url": "https://api.github.com/users/arnavroh45/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arnavroh45/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arnavroh45/subscriptions",
            "organizations_url": "https://api.github.com/users/arnavroh45/orgs",
            "repos_url": "https://api.github.com/users/arnavroh45/repos",
            "events_url": "https://api.github.com/users/arnavroh45/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arnavroh45/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T08:54:54Z",
        "updated_at": "2023-11-06T09:05:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Wanted to merge confluence and githubissue loader. But facing a problem as confluence loader requires additional arguments while loading. So, I am unable to use the MergedDataLoader here. \r\n\r\nCode:\r\nloader = ConfluenceLoader(url=\"URL\", username=\"USER\", api_key=\"API\")\r\nloader1 = GitHubIssuesLoader(repo=\"REPO\", access_token=\"TOKEN\")\r\nloader_all = MergedDataLoader(loaders=[loader1, loader])\r\ndocuments = loader_all.load()\r\ntext_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\n\r\nError:\r\nValueError: Must specify at least one among `space_key`, `page_ids`, `label`, `cql` parameters.\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12923/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12923/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12922",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12922/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12922/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12922/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12922",
        "id": 1978555611,
        "node_id": "I_kwDOIPDwls517lzb",
        "number": 12922,
        "title": "Issue: StructuredChatOutputParser regex may prevent agent's actions",
        "user": {
            "login": "hmasdev",
            "id": 73353463,
            "node_id": "MDQ6VXNlcjczMzUzNDYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/73353463?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hmasdev",
            "html_url": "https://github.com/hmasdev",
            "followers_url": "https://api.github.com/users/hmasdev/followers",
            "following_url": "https://api.github.com/users/hmasdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/hmasdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hmasdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hmasdev/subscriptions",
            "organizations_url": "https://api.github.com/users/hmasdev/orgs",
            "repos_url": "https://api.github.com/users/hmasdev/repos",
            "events_url": "https://api.github.com/users/hmasdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hmasdev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-06T08:20:11Z",
        "updated_at": "2023-11-06T23:43:40Z",
        "closed_at": "2023-11-06T23:43:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython == 3.11.3\r\nLangchain == 0.0.330\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```bash\r\nPython 3.11.3 (tags/v3.11.3:f3909b8, Apr  4 2023, 23:49:59) [MSC v.1934 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import langchain\r\n>>> langchain.__version__\r\n'0.0.330'\r\n>>> from langchain.agents import load_tools, initialize_agent, AgentType\r\n>>> from langchain.chains.conversation.memory import ConversationBufferMemory\r\n>>> from langchain.chat_models import ChatOpenAI\r\n>>> agent = initialize_agent(\r\n...     agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,\r\n...     llm=ChatOpenAI(model='gpt-3.5-turbo', temperature=0),\r\n...     memory=ConversationBufferMemory(),\r\n...     verbose=True,\r\n...     handle_parsing_errors=True,\r\n...     tools=load_tools(tool_names=[\"requests_get\"]),\r\n... )\r\n>>> agent.run('Search the latest version of python')\r\n\r\n\r\n> Entering new AgentExecutor chain...\r\nThought: I can use the requests_get tool to search for the latest version of Python on the official Python website.\r\n\r\nAction:\r\n```{\"action\": \"requests_get\", \"action_input\": {\"url\": \"https://www.python.org/downloads/\"}}```\r\n\r\n> Finished chain.\r\n'Thought: I can use the requests_get tool to search for the latest version of Python on the official Python website.\\n\\nAction:\\n```{\"action\": \"requests_get\", \"action_input\": {\"url\": \"https://www.python.org/downloads/\"}}```'\r\n```\n\n### Expected behavior\n\nI expect agent to execute the action, `requests_get` in the above case.\r\n\r\nNOTE: In the above case, InvalidRequestError would be raised after executing `requests_get` because the number of tokens is very large.\r\n\r\nRelated: #12158",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12922/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12922/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12921",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12921/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12921/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12921/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12921",
        "id": 1978553148,
        "node_id": "PR_kwDOIPDwls5eqCZD",
        "number": 12921,
        "title": "Add ERNIE LLMs family supporting for the Chat-Model Agents",
        "user": {
            "login": "wangwei1237",
            "id": 3480154,
            "node_id": "MDQ6VXNlcjM0ODAxNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3480154?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wangwei1237",
            "html_url": "https://github.com/wangwei1237",
            "followers_url": "https://api.github.com/users/wangwei1237/followers",
            "following_url": "https://api.github.com/users/wangwei1237/following{/other_user}",
            "gists_url": "https://api.github.com/users/wangwei1237/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wangwei1237/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wangwei1237/subscriptions",
            "organizations_url": "https://api.github.com/users/wangwei1237/orgs",
            "repos_url": "https://api.github.com/users/wangwei1237/repos",
            "events_url": "https://api.github.com/users/wangwei1237/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wangwei1237/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T08:18:39Z",
        "updated_at": "2023-11-22T11:33:38Z",
        "closed_at": "2023-11-22T11:33:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12921",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12921",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12921.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12921.patch",
            "merged_at": null
        },
        "body": "\r\n  - **Description:** According to the document https://cloud.baidu.com/doc/WENXINWORKSHOP/s/clntwmv7t and https://cloud.baidu.com/doc/WENXINWORKSHOP/s/4lilb2lpf, add `ERNIE` LLMs family supporting for the *Chat-Model agents* such as `ChatAgent`, `ConversationalChatAgent`, `StructuredChatAgent`.  The chat message list limitations of the ERNIE large language model are as follows: \r\n      - It must have an odd number of members.\r\n      - The role of the message in the message list must be `user`, `assistant`, and then `assistant` again.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12921/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12921/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12920",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12920/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12920/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12920/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12920",
        "id": 1978506912,
        "node_id": "PR_kwDOIPDwls5ep4mw",
        "number": 12920,
        "title": "Added support for filter out AWS Kendra search by score confidence",
        "user": {
            "login": "Smit-Parmar",
            "id": 61695474,
            "node_id": "MDQ6VXNlcjYxNjk1NDc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61695474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Smit-Parmar",
            "html_url": "https://github.com/Smit-Parmar",
            "followers_url": "https://api.github.com/users/Smit-Parmar/followers",
            "following_url": "https://api.github.com/users/Smit-Parmar/following{/other_user}",
            "gists_url": "https://api.github.com/users/Smit-Parmar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Smit-Parmar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Smit-Parmar/subscriptions",
            "organizations_url": "https://api.github.com/users/Smit-Parmar/orgs",
            "repos_url": "https://api.github.com/users/Smit-Parmar/repos",
            "events_url": "https://api.github.com/users/Smit-Parmar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Smit-Parmar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-06T07:49:35Z",
        "updated_at": "2023-12-13T04:02:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12920",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12920",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12920.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12920.patch",
            "merged_at": null
        },
        "body": " **Description:** It will add support for filter out kendra search by score confidence which will make result more accurate.\r\n    For example\r\n   ```\r\nretriever = AmazonKendraRetriever(\r\n        index_id=kendra_index_id, top_k=5, region_name=region,\r\n        score_confidence=\"HIGH\"\r\n    )\r\n```\r\nResult will not include the records which has score confidence \"LOW\" or \"MEDIUM\". \r\nRelevant docs \r\nhttps://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/kendra/client/query.html\r\nhttps://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/kendra/client/retrieve.html\r\n\r\n **Issue:** the issue # it resolve #11801 \r\n**twitter:** [@SmitCode](https://twitter.com/SmitCode)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12920/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12919",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12919/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12919/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12919/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12919",
        "id": 1978337091,
        "node_id": "I_kwDOIPDwls516wdD",
        "number": 12919,
        "title": "Issue: tool get called many times",
        "user": {
            "login": "shaojun",
            "id": 3241829,
            "node_id": "MDQ6VXNlcjMyNDE4Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3241829?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shaojun",
            "html_url": "https://github.com/shaojun",
            "followers_url": "https://api.github.com/users/shaojun/followers",
            "following_url": "https://api.github.com/users/shaojun/following{/other_user}",
            "gists_url": "https://api.github.com/users/shaojun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shaojun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shaojun/subscriptions",
            "organizations_url": "https://api.github.com/users/shaojun/orgs",
            "repos_url": "https://api.github.com/users/shaojun/repos",
            "events_url": "https://api.github.com/users/shaojun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shaojun/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T05:43:34Z",
        "updated_at": "2023-11-06T05:56:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI've created a tool of parsing text content from pdf files, by adding it to the llm, the tool can get called correclty if I input the text, but the problem is the tool get called many times(I just wait there for minitues and then stopped.), could you help:\r\n\r\n```\r\nclass ChatLlmWithTools():\r\n    def __init__(self) -> None:\r\n        from langchain.chat_models import ChatOpenAI\r\n        from langchain.agents.format_scratchpad import format_to_openai_functions\r\n        from langchain.agents.output_parsers import OpenAIFunctionsAgentOutputParser\r\n        from langchain.prompts import ChatPromptTemplate, MessagesPlaceholder\r\n        from langchain.chains.conversation.memory import ConversationBufferWindowMemory\r\n        from langchain.prompts import (\r\n            ChatPromptTemplate,\r\n            MessagesPlaceholder,\r\n            SystemMessagePromptTemplate,\r\n            HumanMessagePromptTemplate,\r\n        )\r\n        import pdf2pdf.tools.pdf_tool\r\n        from langchain.agents import load_tools\r\n        llm = ChatOpenAI(openai_api_key=\"xxxxxxxx\",\r\n                         temperature=0, model_name='gpt-3.5-turbo-16k-0613')\r\n        tools = [Tool(name=\"parse_text_and_images_from_pdf_files_with_pdfminer\",\r\n                      func=pdf2pdf.pdf_utility.parse_text_and_images_from_pdf_files_with_pdfminer,\r\n                      description=\"Parse text and images from pdf files under target folder\")]\r\n        tools[0].callbacks = [AgentAndToolExecutionWatcherHandler()]\r\n        llm_with_tools = llm.bind(\r\n            functions=[format_tool_to_openai_function(t) for t in tools]\r\n        )\r\n        prompt = ChatPromptTemplate(\r\n            messages=[\r\n                SystemMessagePromptTemplate.from_template(\r\n                    \"You are a nice chatbot having a conversation with a human, but bad at parse text and images from pdf files.\"\r\n                ),\r\n                # The `variable_name` here is what must align with memory\r\n                MessagesPlaceholder(variable_name=\"chat_history\"),\r\n                MessagesPlaceholder(variable_name=\"agent_scratchpad\"),\r\n                HumanMessagePromptTemplate.from_template(\"{input}\")\r\n            ]\r\n        )\r\n        agent = ({\r\n            \"input\": lambda x: x[\"input\"],\r\n            \"agent_scratchpad\": lambda x: format_to_openai_functions(x['intermediate_steps']),\r\n            \"chat_history\": lambda x: x[\"chat_history\"],\r\n        } | prompt | llm_with_tools | OpenAIFunctionsAgentOutputParser())\r\n        from langchain.agents import AgentExecutor\r\n        # initialize conversational memory\r\n        memory = ConversationBufferWindowMemory(\r\n            memory_key='chat_history',\r\n            k=3,\r\n            return_messages=True\r\n        )\r\n        self.agent_executor = AgentExecutor(agent=agent, tools=tools, verbose=True, memory=memory, #max_iterations=2,\r\n                                            callbacks=[AgentAndToolExecutionWatcherHandler()])\r\n\r\n    def process(self, param_str_from: str):\r\n        output = self.agent_executor.invoke({\"input\": param_str_from})\r\n        # print(output)\r\n        return output['output']\r\n```\r\n\r\nthis is the unit test for test above agent, and can see the last `process` call can trigger the call to tool, but it's inifinit:\r\n\r\n```\r\nllmWithTool = ChatLlmWithTools()\r\nllm_msg0 = llmWithTool.process('can you do gerneral chatting, pls remember my name is john, my age is 30?')\r\n\r\nllm_msg1 = llmWithTool.process('can you say my name, and tell me what is 1+1?')\r\n\r\nllm_msg2 = llmWithTool.process('can you show my age?')\r\n#below line will trigger call tool function time and time again\r\nllm_msg9 = llmWithTool.process('can you parse text and extract images from pdf files under target folder: {}'.format(\r\n    os.path.join(mygptsite.settings.BASE_DIR, 'uploaded_pdf_folder', '20231106103207672___example')))\r\n ```\r\n\r\nthe part of log in debug console is like:\r\n\r\n> ...\r\n> ...\r\n> > Finished chain.\r\n> Sure, John! Your age is 30.\r\n> \r\n> \r\n> > Entering new AgentExecutor chain...\r\n> on_agent_action, tool: parse_text_and_images_from_pdf_files_with_pdfminer is selected, tool_input: C:\\Users\\xxx\\source\\repos\\xxxxx\\uploaded_pdf_folder\\20231106103207672___example\r\n> \r\n> Invoking: `parse_text_and_images_from_pdf_files_with_pdfminer` with `C:\\Users\\xxxx\\source\\repos\\xxxxx\\uploaded_pdf_folder\\20231106103207672___example`\r\n> \r\n> \r\n> on_tool_start, input_str: C:\\Users\\xxxxx\\source\\repos\\xxxx\\uploaded_pdf_folder\\20231106103207672___example\r\n> on_tool_end, output: I am th test msg parsed from pdf files with pdfminer\r\n> I am th test msg parsed from pdf files with pdfmineron_agent_action, tool: parse_text_and_images_from_pdf_files_with_pdfminer is selected, tool_input: C:\\Users\\xxxx\\source\\repos\\xxxx\\uploaded_pdf_folder\\20231106103207672___example\r\n> \r\n> Invoking: `parse_text_and_images_from_pdf_files_with_pdfminer` with `C:\\Users\\xxxxx\\source\\repos\\xxxx\\uploaded_pdf_folder\\20231106103207672___example`\r\n> \r\n> \r\n> on_tool_start, input_str: C:\\Users\\xxxx\\source\\repos\\xxxx\\uploaded_pdf_folder\\20231106103207672___example\r\n> on_tool_end, output: I am th test msg parsed from pdf files with pdfminer\r\n> I am th test msg parsed from pdf files with pdfmineron_agent_action, tool: parse_text_and_images_from_pdf_files_with_pdfminer is selected, tool_input: C:\\Users\\xxxxx\\source\\repos\\xxxx\\uploaded_pdf_folder\\20231106103207672___example\r\n> \r\n> Invoking: `parse_text_and_images_from_pdf_files_with_pdfminer` with `C:\\Users\\xxxx\\source\\repos\\xxxx\\uploaded_pdf_folder\\20231106103207672___example`\r\n> \r\n> \r\n> on_tool_start, input_str: C:\\Users\\xxxxx\\source\\repos\\xxxx\\uploaded_pdf_folder\\20231106103207672___example\r\n> on_tool_end, output: I am th test msg parsed from pdf files with pdfminer\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12919/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12919/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12918",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12918/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12918/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12918/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12918",
        "id": 1978256675,
        "node_id": "PR_kwDOIPDwls5epCDq",
        "number": 12918,
        "title": "use keys not items",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T04:20:28Z",
        "updated_at": "2023-11-06T06:08:30Z",
        "closed_at": "2023-11-06T06:08:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12918",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12918",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12918.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12918.patch",
            "merged_at": "2023-11-06T06:08:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12918/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12918/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12917",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12917/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12917/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12917/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12917",
        "id": 1978229664,
        "node_id": "I_kwDOIPDwls516WOg",
        "number": 12917,
        "title": "ChatTongyi do not support AsyncIteratorCallbackHandler ",
        "user": {
            "login": "joeylin",
            "id": 2030833,
            "node_id": "MDQ6VXNlcjIwMzA4MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2030833?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joeylin",
            "html_url": "https://github.com/joeylin",
            "followers_url": "https://api.github.com/users/joeylin/followers",
            "following_url": "https://api.github.com/users/joeylin/following{/other_user}",
            "gists_url": "https://api.github.com/users/joeylin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joeylin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joeylin/subscriptions",
            "organizations_url": "https://api.github.com/users/joeylin/orgs",
            "repos_url": "https://api.github.com/users/joeylin/repos",
            "events_url": "https://api.github.com/users/joeylin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joeylin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T03:48:40Z",
        "updated_at": "2023-11-06T03:57:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npython 3.10.0\r\nlangchain 0.3.300\n\n### Who can help?\n\n@hwchase17\r\n@agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nChatTongyi and  AsyncIteratorCallbackHandler  use togther\n\n### Expected behavior\n\n/Users/joeylin/Projects/questionAnswer/venv/lib/python3.10/site-packages/langchain/chat_models/tongyi.py:366: RuntimeWarning: coroutine 'AsyncCallbackManagerForLLMRun.on_llm_new_token' was never awaited\r\n  run_manager.on_llm_new_token(chunk.text, chunk=chunk)\r\nRuntimeWarning: Enable tracemalloc to get the object allocation traceback\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12917/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12917/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12916",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12916/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12916/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12916/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12916",
        "id": 1978179255,
        "node_id": "I_kwDOIPDwls516J63",
        "number": 12916,
        "title": "DocArrayInMemorySearch | Pydantic 2+ Breaking Changes",
        "user": {
            "login": "WalnutStudios",
            "id": 69432365,
            "node_id": "MDQ6VXNlcjY5NDMyMzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/69432365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WalnutStudios",
            "html_url": "https://github.com/WalnutStudios",
            "followers_url": "https://api.github.com/users/WalnutStudios/followers",
            "following_url": "https://api.github.com/users/WalnutStudios/following{/other_user}",
            "gists_url": "https://api.github.com/users/WalnutStudios/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WalnutStudios/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WalnutStudios/subscriptions",
            "organizations_url": "https://api.github.com/users/WalnutStudios/orgs",
            "repos_url": "https://api.github.com/users/WalnutStudios/repos",
            "events_url": "https://api.github.com/users/WalnutStudios/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WalnutStudios/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T02:46:56Z",
        "updated_at": "2023-11-06T02:55:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.330\r\nPython 3.10.8\r\n\r\n### Who can help?\r\n\r\n@agola11 \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nWas using latest release of pydantic (2.4.2).\r\n\r\ngetting errors to install langchain[docarray]\r\n\r\nAbove that:\r\nImportError: cannot import name 'ROOT_KEY' from 'pydantic.main' (...venv\\lib\\site-packages\\pydantic\\main.py)\r\n\r\n\r\nRetried using pydantic 1.10.13. Works fine now. Not sure if worth adding to the error message or building in langchain dependence of pydantic version <2.0\r\n\r\nI didn't try all the versions, but I know 2.4.2 breaks.\r\n\r\n### Expected behavior\r\n\r\nI wasn't able to set my index. Here is where the code broke:\r\nindex = VectorstoreIndexCreator(\r\n    vectorstore_cls=DocArrayInMemorySearch\r\n).from_loaders([loader])\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12916/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12916/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12914",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12914/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12914/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12914/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12914",
        "id": 1978114184,
        "node_id": "PR_kwDOIPDwls5eojls",
        "number": 12914,
        "title": "cli template gitignores",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T01:40:40Z",
        "updated_at": "2023-11-06T06:34:46Z",
        "closed_at": "2023-11-06T06:34:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12914",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12914",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12914.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12914.patch",
            "merged_at": "2023-11-06T06:34:45Z"
        },
        "body": "- ap gitignore\n- package\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12914/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12913",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12913/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12913/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12913/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12913",
        "id": 1978090823,
        "node_id": "I_kwDOIPDwls5150VH",
        "number": 12913,
        "title": "subclassing VectorStoreRetriever causes unjustifiable infinite recursion",
        "user": {
            "login": "thisismygitrepo",
            "id": 46288868,
            "node_id": "MDQ6VXNlcjQ2Mjg4ODY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/46288868?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thisismygitrepo",
            "html_url": "https://github.com/thisismygitrepo",
            "followers_url": "https://api.github.com/users/thisismygitrepo/followers",
            "following_url": "https://api.github.com/users/thisismygitrepo/following{/other_user}",
            "gists_url": "https://api.github.com/users/thisismygitrepo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thisismygitrepo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thisismygitrepo/subscriptions",
            "organizations_url": "https://api.github.com/users/thisismygitrepo/orgs",
            "repos_url": "https://api.github.com/users/thisismygitrepo/repos",
            "events_url": "https://api.github.com/users/thisismygitrepo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thisismygitrepo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T01:17:11Z",
        "updated_at": "2023-11-06T01:48:44Z",
        "closed_at": "2023-11-06T01:48:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nAny system.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [x] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [X] Async\n\n### Reproduction\n\n\r\n```python\r\n\r\n\r\nfrom typing import Any, Dict, List, Optional\r\nfrom langchain.callbacks.manager import Callbacks\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nfrom langchain.vectorstores.chroma import Chroma\r\nfrom langchain.schema.vectorstore import VectorStoreRetriever\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.chat_models import AzureChatOpenAI\r\nfrom langchain.docstore.document import Document\r\nimport os\r\n\r\n\r\nclass MyRetriever(VectorStoreRetriever):\r\n    def get_relevant_documents(self, query: str, *, callbacks: Callbacks = None, tags: List[str] | None = None, metadata: Dict[str, Any] | None = None, run_name: str | None = None, **kwargs: Any) -> List[Document]:\r\n        print('Called get_relevant_documents in MyRetriever')\r\n        res = super(MyRetriever, self).get_relevant_documents(query, callbacks=callbacks, tags=tags, metadata=metadata, run_name=run_name, **kwargs)\r\n        print('Finished get_relevant_documents in MyRetriever')\r\n        tmp_res: dict[str, Document] = {}\r\n        for item in res:\r\n            doc_name = item.page_content.split(\"\\n\", maxsplit=1)[0]\r\n            if doc_name not in tmp_res:\r\n                tmp_res[doc_name] = item\r\n            else:\r\n                orig_doc = tmp_res[doc_name]\r\n                doc_content = \"\\n\".join(item.page_content.split(\"\\n\")[1:])\r\n                new_doc = Document(page_content=orig_doc.page_content + doc_content, metadata=orig_doc.metadata)\r\n                tmp_res[doc_name] = new_doc\r\n        return list(tmp_res.values())\r\n\r\n\r\nembeddings = HuggingFaceEmbeddings(model_name=\"all-MiniLM-L6-v2\")\r\nvectordb = Chroma.from_documents([Document(\"blah\")], embeddings, persist_directory=\"./tmp\")\r\nret = MyRetriever(vectorstore=vectordb, tags=vectordb._get_retriever_tags())\r\nret.get_relevant_documents(\"blah\")  # infinite recursion!\r\n\r\n```\n\n### Expected behavior\n\nSafely call parent class method then customize its behaviour",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12913/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12913/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12912",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12912/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12912/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12912/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12912",
        "id": 1978022115,
        "node_id": "PR_kwDOIPDwls5eoQDk",
        "number": 12912,
        "title": "SQL Query Chain Augmentation",
        "user": {
            "login": "keenborder786",
            "id": 45242107,
            "node_id": "MDQ6VXNlcjQ1MjQyMTA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/45242107?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/keenborder786",
            "html_url": "https://github.com/keenborder786",
            "followers_url": "https://api.github.com/users/keenborder786/followers",
            "following_url": "https://api.github.com/users/keenborder786/following{/other_user}",
            "gists_url": "https://api.github.com/users/keenborder786/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/keenborder786/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/keenborder786/subscriptions",
            "organizations_url": "https://api.github.com/users/keenborder786/orgs",
            "repos_url": "https://api.github.com/users/keenborder786/repos",
            "events_url": "https://api.github.com/users/keenborder786/events{/privacy}",
            "received_events_url": "https://api.github.com/users/keenborder786/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-05T23:20:08Z",
        "updated_at": "2023-11-10T09:42:28Z",
        "closed_at": "2023-11-10T09:40:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12912",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12912",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12912.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12912.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12912/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12912/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12911",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12911/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12911/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12911/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12911",
        "id": 1977943019,
        "node_id": "I_kwDOIPDwls515QPr",
        "number": 12911,
        "title": "create_sql_agent Error: table_names {\"'<table name>'\"} not found in database.",
        "user": {
            "login": "yernenip",
            "id": 33237589,
            "node_id": "MDQ6VXNlcjMzMjM3NTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/33237589?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yernenip",
            "html_url": "https://github.com/yernenip",
            "followers_url": "https://api.github.com/users/yernenip/followers",
            "following_url": "https://api.github.com/users/yernenip/following{/other_user}",
            "gists_url": "https://api.github.com/users/yernenip/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yernenip/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yernenip/subscriptions",
            "organizations_url": "https://api.github.com/users/yernenip/orgs",
            "repos_url": "https://api.github.com/users/yernenip/repos",
            "events_url": "https://api.github.com/users/yernenip/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yernenip/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-05T20:09:44Z",
        "updated_at": "2023-11-05T20:16:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version: 0.0.330\r\nWindows 11\r\nPython 3.11.3\r\nSQLAlchemy version: 2.0.23\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce the behavior.\r\n\r\n1. Follow the steps mentioned in https://python.langchain.com/docs/integrations/toolkits/sql_database\r\n2.  Replace connection string with a PostgreSQL connection string\r\n3.  Run the following code, make sure to update the connection string and the database/tables you are querying.\r\n\r\nimport langchain\r\nfrom langchain.llms import CTransformers\r\nfrom langchain.agents import create_sql_agent\r\nfrom langchain.agents.agent_toolkits import SQLDatabaseToolkit\r\nfrom langchain.sql_database import SQLDatabase\r\nfrom langchain.agents import AgentExecutor\r\nfrom langchain.agents.agent_types import AgentType\r\n\r\n\r\nconfig = {'max_new_tokens': 256, 'repetition_penalty': 1.1, 'temperature': 0, 'context_length': 4096}\r\n\r\nllm = CTransformers(model=\"TheBloke/CodeLlama-7B-Instruct-GGUF\", \r\n                    model_file=\"codellama-7b-instruct.Q4_K_M.gguf\",config=config, verbose=True)\r\n\r\nCONNECTION_STRING = 'postgresql://postgresuser:password@localhost:5432/pharmadb'\r\ndb = SQLDatabase.from_uri(CONNECTION_STRING)\r\n\r\ntoolkit = SQLDatabaseToolkit(db=db, llm=llm)\r\n\r\nagent_executor = create_sql_agent(\r\n    llm=llm,\r\n    toolkit=toolkit,\r\n    verbose=True,\r\n    agent_type=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\r\n)\r\n\r\nagent_executor.run(\"Describe the corporation table\")\r\n\r\nI get the following output in verbose mode..\r\n\r\n> Entering new AgentExecutor chain...\r\nAction: sql_db_list_tables\r\nAction Input: ''\r\nObservation: corporation, molecule, product_mat, productpack\r\nThought: The corporation table is probably one of those tables.\r\nAction: sql_db_schema\r\nAction Input: 'corporation'\r\nObservation: Error: table_names {\"'corporation'\"} not found in database\r\nThought: I must have misspelled the name of the table.  Let me try again.\r\nAction: sql_db_schema\r\nAction Input: 'corporation'\r\nObservation: Error: table_names {\"'corporation'\"} not found in database\r\nThought: I must have misspelled the name of the table.  Let me try again.\r\nAction: sql_db_schema\r\nAction Input: 'corporation'\r\nObservation: Error: table_names {\"'corporation'\"} not found in database\r\nThought: I must have misspelled the name of the table.  Let me try again.\r\nAction: sql_db_schema\r\nAction Input: 'corporation'\r\nObservation: Error: table_names {\"'corporation'\"} not found in database\r\nThought: I must have misspelled the name of the table.  Let me try again.\r\nAction: sql_db_schema\r\nAction Input: 'corporation'\r\nObservation: Error: table_names {\"'corporation'\"} not found in database\r\nThought: I must have misspelled the name of the table.  Let me try again.\r\nAction: sql_db_schema\r\nAction Input: 'corporation'\r\n.\r\n.\r\n.\r\n\r\n> Finished chain.\r\n'Agent stopped due to iteration limit or time limit.'\r\n\r\n\n\n### Expected behavior\n\nExpected to correctly identify the table and its schema, run the query to retrieve top 3 records from the table and provide a description of the table.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12911/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12911/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12910",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12910/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12910/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12910/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12910",
        "id": 1977910131,
        "node_id": "I_kwDOIPDwls515INz",
        "number": 12910,
        "title": "Issue: How to deploy langchain using docker and redis used by langchain",
        "user": {
            "login": "VpkPrasanna",
            "id": 30804112,
            "node_id": "MDQ6VXNlcjMwODA0MTEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/30804112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VpkPrasanna",
            "html_url": "https://github.com/VpkPrasanna",
            "followers_url": "https://api.github.com/users/VpkPrasanna/followers",
            "following_url": "https://api.github.com/users/VpkPrasanna/following{/other_user}",
            "gists_url": "https://api.github.com/users/VpkPrasanna/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VpkPrasanna/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VpkPrasanna/subscriptions",
            "organizations_url": "https://api.github.com/users/VpkPrasanna/orgs",
            "repos_url": "https://api.github.com/users/VpkPrasanna/repos",
            "events_url": "https://api.github.com/users/VpkPrasanna/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VpkPrasanna/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5955630415,
                "node_id": "LA_kwDOIPDwls8AAAABYvu1Tw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20redis",
                "name": "integration: redis",
                "color": "F9D0C4",
                "default": false,
                "description": "Any integration that uses Redis"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-05T18:40:09Z",
        "updated_at": "2023-11-08T12:13:13Z",
        "closed_at": "2023-11-08T12:13:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am using  RedisChatMessageHistory from langchain  and i am trying to deploy it using docker and i am facing issues in connecting to the redis . can someone help me over here @hwchase17 \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12910/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12910/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12909",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12909/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12909/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12909/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12909",
        "id": 1977899806,
        "node_id": "PR_kwDOIPDwls5en3xq",
        "number": 12909,
        "title": "fix redis/base.py result.content to result.prompt",
        "user": {
            "login": "linusic",
            "id": 30204682,
            "node_id": "MDQ6VXNlcjMwMjA0Njgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/30204682?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/linusic",
            "html_url": "https://github.com/linusic",
            "followers_url": "https://api.github.com/users/linusic/followers",
            "following_url": "https://api.github.com/users/linusic/following{/other_user}",
            "gists_url": "https://api.github.com/users/linusic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/linusic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/linusic/subscriptions",
            "organizations_url": "https://api.github.com/users/linusic/orgs",
            "repos_url": "https://api.github.com/users/linusic/repos",
            "events_url": "https://api.github.com/users/linusic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/linusic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5955630415,
                "node_id": "LA_kwDOIPDwls8AAAABYvu1Tw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20redis",
                "name": "integration: redis",
                "color": "F9D0C4",
                "default": false,
                "description": "Any integration that uses Redis"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-05T18:12:02Z",
        "updated_at": "2023-11-09T22:33:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12909",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12909",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12909.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12909.patch",
            "merged_at": null
        },
        "body": "\r\n  - **Description:** fix redis/base.py `result.content` to `result.prompt`\r\n  - **Issue:** AttributeError: 'Document' object has no attribute 'content'\r\n  - **Dependencies:** None\r\n  \r\nCode\r\n```python\r\n...\r\n# llm = GooglePalm(...)\r\n# embedding = GooglePalmEmbeddings(...)\r\nllm = OpenAI(...)\r\nembedding = OpenAIEmbeddings(...)\r\n\r\nredis_cache = RedisSemanticCache(\r\n    redis_url=\"redis://...:6379\", \r\n    embedding=embedding,\r\n    score_threshold=0.01\r\n)\r\nlangchain.llm_cache = redis_cache\r\n...\r\nlangchain.llm_cache._cache_dict['...'].similarity_search_with_score(query=\"hello world\")`\r\n```\r\n\r\n\ud83d\uded1Debug in LangChain src code:\r\n![source](https://github.com/langchain-ai/langchain/assets/30204682/54563ac8-4a61-4fa0-93e6-8b1d4a904ca6)\r\n\r\n\u274cError(OpenAI and PaLM both) and print debug log:\r\n![openai](https://github.com/langchain-ai/langchain/assets/30204682/ccb6a402-01d7-4dfb-98b3-6e0b5576d46b)\r\n\r\n\r\n\r\n\r\n\u2705**Success and output result shape after the fix(`result.content` to `result.prompt`)**:\r\n```python\r\n# PaLM\r\n[(Document(page_content='hello world', metadata={'id': 'doc:cache:4d4460ad591fb739063de9681c18b075:d4e9339a552a4b2aaf936da3fcdb2f5f', 'return_val': '[{\"lc\": 1, \"type\": \"constructor\", \"id\": [\"langchain\", \"schema\", \"output\", \"Generation\"], \"kwargs\": {\"text\": \"```\\\\n#include <stdio.h>\\\\n\\\\nint main() {\\\\n  printf(\\\\\"Hello, world!\\\\\\\\n\\\\\");\\\\n  return 0;\\\\n}\\\\n```\"}}]', 'llm_string': \"[('_type', 'google_palm'), ('stop', None)]\"}),\r\n  0.0),\r\n (Document(page_content='reverse the word: hello', metadata={'id': 'doc:cache:4d4460ad591fb739063de9681c18b075:d55bc99d03f946f3a7dc4e1cf363dc23', 'return_val': '[{\"lc\": 1, \"type\": \"constructor\", \"id\": [\"langchain\", \"schema\", \"output\", \"Generation\"], \"kwargs\": {\"text\": \"```\\\\nolleh\\\\n```\"}}]', 'llm_string': \"[('_type', 'google_palm'), ('stop', None)]\"}),\r\n  0.2481), ...]\r\n```\r\n```python\r\n# OpenAI\r\n[(Document(page_content='hello world', metadata={'id': 'doc:cache:f4d6fdd07c9be488b08c67b57ea4744c:ecc00d18e86a426190b8ed719f41da95', 'return_val': '[{\"lc\": 1, \"type\": \"constructor\", \"id\": [\"langchain\", \"schema\", \"output\", \"Generation\"], \"kwargs\": {\"text\": \"\\\\n\\\\nHello world is a common phrase used to express a greeting or acknowledgment of someone or something. It is often used as a friendly greeting when meeting someone for the first time.\", \"generation_info\": {\"finish_reason\": \"stop\", \"logprobs\": null}}}]', 'llm_string': \"[('_type', 'openai'), ('frequency_penalty', 0), ('logit_bias', {}), ('max_tokens', 256), ('model_name', 'text-davinci-003'), ('n', 1), ('presence_penalty', 0), ('request_timeout', None), ('stop', None), ('temperature', 0.7), ('top_p', 1)]\"}),\r\n  0.0),\r\n (Document(page_content='reverse the word: hello', metadata={'id': 'doc:cache:f4d6fdd07c9be488b08c67b57ea4744c:d8314c01a7454f6ebf02253f238269c8', 'return_val': '[{\"lc\": 1, \"type\": \"constructor\", \"id\": [\"langchain\", \"schema\", \"output\", \"Generation\"], \"kwargs\": {\"text\": \"\\\\n\\\\nolleh\", \"generation_info\": {\"finish_reason\": \"stop\", \"logprobs\": null}}}]', 'llm_string': \"[('_type', 'openai'), ('frequency_penalty', 0), ('logit_bias', {}), ('max_tokens', 256), ('model_name', 'text-davinci-003'), ('n', 1), ('presence_penalty', 0), ('request_timeout', None), ('stop', None), ('temperature', 0.7), ('top_p', 1)]\"}),\r\n  0.1373),...]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12909/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12909/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12908",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12908/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12908/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12908/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12908",
        "id": 1977879082,
        "node_id": "PR_kwDOIPDwls5enzyK",
        "number": 12908,
        "title": "docs: update hf pipeline docs",
        "user": {
            "login": "praveenv",
            "id": 4526224,
            "node_id": "MDQ6VXNlcjQ1MjYyMjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4526224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/praveenv",
            "html_url": "https://github.com/praveenv",
            "followers_url": "https://api.github.com/users/praveenv/followers",
            "following_url": "https://api.github.com/users/praveenv/following{/other_user}",
            "gists_url": "https://api.github.com/users/praveenv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/praveenv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/praveenv/subscriptions",
            "organizations_url": "https://api.github.com/users/praveenv/orgs",
            "repos_url": "https://api.github.com/users/praveenv/repos",
            "events_url": "https://api.github.com/users/praveenv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/praveenv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-05T17:15:27Z",
        "updated_at": "2023-11-06T15:52:36Z",
        "closed_at": "2023-11-06T15:51:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12908",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12908",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12908.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12908.patch",
            "merged_at": "2023-11-06T15:51:32Z"
        },
        "body": "- **Description:** Noticed that the Hugging Face Pipeline documentation was a bit out of date. \r\nUpdated with information about passing in a pipeline directly (consistent with docstring) and a recent contribution of mine on adding support for multi-gpu specifications with Accelerate in 21eeba075c05714f185e5541f25228f7b555f606\r\n\r\n\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12908/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12908/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12907",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12907/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12907/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12907/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12907",
        "id": 1977871108,
        "node_id": "PR_kwDOIPDwls5enyPD",
        "number": 12907,
        "title": "docs: clean up vestigial markdown",
        "user": {
            "login": "thezanke",
            "id": 3709803,
            "node_id": "MDQ6VXNlcjM3MDk4MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3709803?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thezanke",
            "html_url": "https://github.com/thezanke",
            "followers_url": "https://api.github.com/users/thezanke/followers",
            "following_url": "https://api.github.com/users/thezanke/following{/other_user}",
            "gists_url": "https://api.github.com/users/thezanke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thezanke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thezanke/subscriptions",
            "organizations_url": "https://api.github.com/users/thezanke/orgs",
            "repos_url": "https://api.github.com/users/thezanke/repos",
            "events_url": "https://api.github.com/users/thezanke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thezanke/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-05T16:54:30Z",
        "updated_at": "2023-11-06T15:51:56Z",
        "closed_at": "2023-11-06T15:51:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12907",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12907",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12907.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12907.patch",
            "merged_at": "2023-11-06T15:51:56Z"
        },
        "body": "  - **Description:** Remove text \"LangChain currently does not support\" which appears to be vestigial leftovers from a previous change.\r\n  - **Issue:** N/A\r\n  - **Dependencies:** N/A\r\n  - **Tag maintainer:** @baskaryan, @eyurtsev\r\n  - **Twitter handle:** thezanke",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12907/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12907/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12906",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12906/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12906/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12906/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12906",
        "id": 1977870161,
        "node_id": "PR_kwDOIPDwls5enyC7",
        "number": 12906,
        "title": "Remove useless line of code from sql.ipynb",
        "user": {
            "login": "matthieudelaro",
            "id": 2452725,
            "node_id": "MDQ6VXNlcjI0NTI3MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2452725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matthieudelaro",
            "html_url": "https://github.com/matthieudelaro",
            "followers_url": "https://api.github.com/users/matthieudelaro/followers",
            "following_url": "https://api.github.com/users/matthieudelaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthieudelaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matthieudelaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthieudelaro/subscriptions",
            "organizations_url": "https://api.github.com/users/matthieudelaro/orgs",
            "repos_url": "https://api.github.com/users/matthieudelaro/repos",
            "events_url": "https://api.github.com/users/matthieudelaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matthieudelaro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-05T16:51:49Z",
        "updated_at": "2023-11-06T15:59:12Z",
        "closed_at": "2023-11-06T15:59:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12906",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12906",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12906.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12906.patch",
            "merged_at": "2023-11-06T15:59:12Z"
        },
        "body": "This PR remove a single line of code from a notebook of the documentation. This line used to define a variable, which is never used in the code.\r\nFor further context, for reviewers, here is the online documentation: https://python.langchain.com/docs/use_cases/qa_structured/sql#case-3-sql-agents\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12906/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12906/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12905",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12905/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12905/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12905/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12905",
        "id": 1977817267,
        "node_id": "PR_kwDOIPDwls5enn5W",
        "number": 12905,
        "title": "\ud83c\udf9b\ufe0f improve interface with __call__ and __await__",
        "user": {
            "login": "shroominic",
            "id": 34897716,
            "node_id": "MDQ6VXNlcjM0ODk3NzE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34897716?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shroominic",
            "html_url": "https://github.com/shroominic",
            "followers_url": "https://api.github.com/users/shroominic/followers",
            "following_url": "https://api.github.com/users/shroominic/following{/other_user}",
            "gists_url": "https://api.github.com/users/shroominic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shroominic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shroominic/subscriptions",
            "organizations_url": "https://api.github.com/users/shroominic/orgs",
            "repos_url": "https://api.github.com/users/shroominic/repos",
            "events_url": "https://api.github.com/users/shroominic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shroominic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-05T14:40:28Z",
        "updated_at": "2023-11-17T14:52:17Z",
        "closed_at": "2023-11-17T14:40:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12905",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12905",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12905.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12905.patch",
            "merged_at": null
        },
        "body": "Improves the interface of Runnables by making it universally accessible via sync/async.\r\nJust __call__ or __await__ it.\r\n\r\n@nfcampos we talked about this in Slack :)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12905/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12905/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12904",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12904/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12904/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12904/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12904",
        "id": 1977791576,
        "node_id": "I_kwDOIPDwls514rRY",
        "number": 12904,
        "title": "DOC: Links at the bottom of Plan and Execute Agents blog do not work",
        "user": {
            "login": "manankalra",
            "id": 12759088,
            "node_id": "MDQ6VXNlcjEyNzU5MDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12759088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manankalra",
            "html_url": "https://github.com/manankalra",
            "followers_url": "https://api.github.com/users/manankalra/followers",
            "following_url": "https://api.github.com/users/manankalra/following{/other_user}",
            "gists_url": "https://api.github.com/users/manankalra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manankalra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manankalra/subscriptions",
            "organizations_url": "https://api.github.com/users/manankalra/orgs",
            "repos_url": "https://api.github.com/users/manankalra/repos",
            "events_url": "https://api.github.com/users/manankalra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manankalra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-05T13:34:23Z",
        "updated_at": "2023-11-05T13:40:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nhttps://blog.langchain.dev/plan-and-execute-agents/\r\n\r\nLinks at the end of the Conclusion section do not work.\r\n\r\n[here (Python)](https://python.langchain.com/docs/modules/agents/agent_types/plan_and_execute?ref=blog.langchain.dev\r\n) and [here (JS)](https://js.langchain.com/docs/modules/agents/agents/examples/plan_and_execute_agent?ref=blog.langchain.dev) are broken.\r\n\r\n### Idea or request for content:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12904/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12904/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12903",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12903/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12903/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12903/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12903",
        "id": 1977763705,
        "node_id": "I_kwDOIPDwls514kd5",
        "number": 12903,
        "title": "Issue: <[chain/error] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 9:chain:LLMChain] [2.01s] Chain run errored with error: \"IndexError('list index out of range')\">",
        "user": {
            "login": "debrupf2946",
            "id": 126772439,
            "node_id": "U_kgDOB45k1w",
            "avatar_url": "https://avatars.githubusercontent.com/u/126772439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/debrupf2946",
            "html_url": "https://github.com/debrupf2946",
            "followers_url": "https://api.github.com/users/debrupf2946/followers",
            "following_url": "https://api.github.com/users/debrupf2946/following{/other_user}",
            "gists_url": "https://api.github.com/users/debrupf2946/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/debrupf2946/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/debrupf2946/subscriptions",
            "organizations_url": "https://api.github.com/users/debrupf2946/orgs",
            "repos_url": "https://api.github.com/users/debrupf2946/repos",
            "events_url": "https://api.github.com/users/debrupf2946/events{/privacy}",
            "received_events_url": "https://api.github.com/users/debrupf2946/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-05T12:19:52Z",
        "updated_at": "2023-12-09T16:44:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\n``I am using Google Palm,Faiss,HF Instruct Embeddings.When ever I am Quering with RetrievalQAWithSourcesChain.\r\nI am getting\r\n```\r\n [chain/error] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 9:chain:LLMChain] [2.01s] Chain run errored with error:\r\n\"IndexError('list index out of range')\"\r\n[chain/error] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain] [6.45s] Chain run errored with error:\r\n\"IndexError('list index out of range')\"\r\n[chain/error] [1:chain:RetrievalQAWithSourcesChain] [7.13s] Chain run errored with error:\r\n\"IndexError('list index out of range')\"\r\n```\r\n\r\nHere is my whole code\r\n``````\r\nimport` os\r\nimport streamlit as st\r\nimport pickle\r\nimport time\r\nimport langchain\r\nfrom langchain.llms import GooglePalm\r\nfrom langchain.chains import RetrievalQAWithSourcesChain\r\nfrom langchain.chains.qa_with_sources.loading import load_qa_with_sources_chain\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.document_loaders import SeleniumURLLoader\r\nfrom langchain.embeddings import HuggingFaceInstructEmbeddings\r\nfrom langchain.vectorstores import FAISS\r\n\r\nurls = [\"https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS\",\r\n        \"https://www.livemint.com/companies/news/tata-motorss-ev-subsidiary-to-sign-mou-with-jlr-to-strengthen-ev-business-tata-motors-to-pay-royalty-fee-to-jlr-11698925980903.html\"\r\n]\r\n\r\nloader=SeleniumURLLoader(urls=urls)\r\ndata=loader.load()\r\nllm=GooglePalm(google_api_key=\"\", temperature=0.9,max_output_tokens=500)\r\n\r\nr_splitter = RecursiveCharacterTextSplitter(\r\n        separators=[\"\\n\\n\", \"\\n\", \" \",\"\\t\\t\"],\r\n        chunk_size=400,\r\n        chunk_overlap=80\r\n    )\r\ndocs = r_splitter.split_documents(data)\r\n\r\nembeddings = HuggingFaceInstructEmbeddings(\r\n    query_instruction=\"Represent the query for retrieval: \"\r\n)\r\nvector_index = FAISS.from_documents(docs, embeddings)\r\n\r\nchain = RetrievalQAWithSourcesChain.from_llm(llm=llm, retriever=vector_index.as_retriever())\r\nchain\r\nlangchain.debug=True\r\nquery=\"summerise the text\"\r\nchain({\"question\":query},return_only_outputs=True)\r\n```\r\n\r\n```\r\n\r\nOUTPUT:\r\n`[chain/start] [1:chain:RetrievalQAWithSourcesChain] Entering Chain run with input:\r\n{\r\n  \"question\": \"summerise the text\"\r\n}\r\n[chain/start] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain] Entering Chain run with input:\r\n[inputs]\r\n[chain/start] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 4:chain:LLMChain] Entering Chain run with input:\r\n{\r\n  \"input_list\": [\r\n    {\r\n      \"context\": \"View more \\n                                                                            \\n                                    \\n                                        Posted by : kamal20\",\r\n      \"question\": \"summerise the text\"\r\n    },\r\n    {\r\n      \"context\": \"View more \\n                                                                            \\n                                    \\n                                        Posted by : kamal20\",\r\n      \"question\": \"summerise the text\"\r\n    },\r\n    {\r\n      \"context\": \"- - \\n                           - - \\n                           - - \\n                           - - \\n                           - -\",\r\n      \"question\": \"summerise the text\"\r\n    },\r\n    {\r\n      \"context\": \"- - \\n                           - - \\n                           - - \\n                           - - \\n                           - -\",\r\n      \"question\": \"summerise the text\"\r\n    }\r\n  ]\r\n}\r\n[llm/start] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 4:chain:LLMChain > 5:llm:GooglePalm] Entering LLM run with input:\r\n{\r\n  \"prompts\": [\r\n    \"Use the following portion of a long document to see if any of the text is relevant to answer the question. \\nReturn any relevant text verbatim.\\nView more \\n                                                                            \\n                                    \\n                                        Posted by : kamal20\\nQuestion: summerise the text\\nRelevant text, if any:\"\r\n  ]\r\n}\r\n[llm/start] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 4:chain:LLMChain > 6:llm:GooglePalm] Entering LLM run with input:\r\n{\r\n  \"prompts\": [\r\n    \"Use the following portion of a long document to see if any of the text is relevant to answer the question. \\nReturn any relevant text verbatim.\\nView more \\n                                                                            \\n                                    \\n                                        Posted by : kamal20\\nQuestion: summerise the text\\nRelevant text, if any:\"\r\n  ]\r\n}\r\n[llm/start] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 4:chain:LLMChain > 7:llm:GooglePalm] Entering LLM run with input:\r\n{\r\n  \"prompts\": [\r\n    \"Use the following portion of a long document to see if any of the text is relevant to answer the question. \\nReturn any relevant text verbatim.\\n- - \\n                           - - \\n                           - - \\n                           - - \\n                           - -\\nQuestion: summerise the text\\nRelevant text, if any:\"\r\n  ]\r\n}\r\n[llm/start] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 4:chain:LLMChain > 8:llm:GooglePalm] Entering LLM run with input:\r\n{\r\n  \"prompts\": [\r\n    \"Use the following portion of a long document to see if any of the text is relevant to answer the question. \\nReturn any relevant text verbatim.\\n- - \\n                           - - \\n                           - - \\n                           - - \\n                           - -\\nQuestion: summerise the text\\nRelevant text, if any:\"\r\n  ]\r\n}\r\n[llm/end] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 4:chain:LLMChain > 5:llm:GooglePalm] [4.40s] Exiting LLM run with output:\r\n{\r\n  \"generations\": [\r\n    [\r\n      {\r\n        \"text\": \"This article discusses the concept of summarizing documents and provides a detailed overview of the steps involved in the process. It also provides examples of summaries and discusses the different types of summaries that can be created.\",\r\n        \"generation_info\": null\r\n      }\r\n    ]\r\n  ],\r\n  \"llm_output\": null,\r\n  \"run\": null\r\n}\r\n[llm/end] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 4:chain:LLMChain > 6:llm:GooglePalm] [4.40s] Exiting LLM run with output:\r\n{\r\n  \"generations\": [\r\n    [\r\n      {\r\n        \"text\": \"The main points are:\",\r\n        \"generation_info\": null\r\n      }\r\n    ]\r\n  ],\r\n  \"llm_output\": null,\r\n  \"run\": null\r\n}\r\n[llm/end] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 4:chain:LLMChain > 7:llm:GooglePalm] [4.40s] Exiting LLM run with output:\r\n{\r\n  \"generations\": [\r\n    [\r\n      {\r\n        \"text\": \"- - \\n\\n- - \",\r\n        \"generation_info\": null\r\n      }\r\n    ]\r\n  ],\r\n  \"llm_output\": null,\r\n  \"run\": null\r\n}\r\n[llm/end] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 4:chain:LLMChain > 8:llm:GooglePalm] [4.40s] Exiting LLM run with output:\r\n{\r\n  \"generations\": [\r\n    [\r\n      {\r\n        \"text\": \"- - \",\r\n        \"generation_info\": null\r\n      }\r\n    ]\r\n  ],\r\n  \"llm_output\": null,\r\n  \"run\": null\r\n}\r\n[chain/end] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 4:chain:LLMChain] [4.41s] Exiting Chain run with output:\r\n{\r\n  \"outputs\": [\r\n    {\r\n      \"text\": \"This article discusses the concept of summarizing documents and provides a detailed overview of the steps involved in the process. It also provides examples of summaries and discusses the different types of summaries that can be created.\"\r\n    },\r\n    {\r\n      \"text\": \"The main points are:\"\r\n    },\r\n    {\r\n      \"text\": \"- - \\n\\n- - \"\r\n    },\r\n    {\r\n      \"text\": \"- - \"\r\n    }\r\n  ]\r\n}\r\n[chain/start] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 9:chain:LLMChain] Entering Chain run with input:\r\n{\r\n  \"question\": \"summerise the text\",\r\n  \"summaries\": \"Content: This article discusses the concept of summarizing documents and provides a detailed overview of the steps involved in the process. It also provides examples of summaries and discusses the different types of summaries that can be created.\\nSource: [https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS\\n\\nContent](https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS/n/nContent): The main points are:\\nSource: [https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS\\n\\nContent](https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS/n/nContent): - - \\n\\n- - \\nSource: [https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS\\n\\nContent](https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS/n/nContent): - - \\nSource: https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS\"\r\n}\r\n[llm/start] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 9:chain:LLMChain > 10:llm:GooglePalm] Entering LLM run with input:\r\n{\r\n  \"prompts\": [\r\n    \"Given the following extracted parts of a long document and a question, create a final answer with references (\\\"SOURCES\\\"). \\nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\\nALWAYS return a \\\"SOURCES\\\" part in your answer.\\n\\nQUESTION: Which state/country's law governs the interpretation of the contract?\\n=========\\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\\nSource: 28-pl\\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\\nSource: 30-pl\\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\\nSource: 4-pl\\n=========\\nFINAL ANSWER: This Agreement is governed by English law.\\nSOURCES: 28-pl\\n\\nQUESTION: What did the president say about Michael Jackson?\\n=========\\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\\nSource: 0-pl\\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\\nSource: 24-pl\\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\\nSource: 5-pl\\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\\nSource: 34-pl\\n=========\\nFINAL ANSWER: The president did not mention Michael Jackson.\\nSOURCES:\\n\\nQUESTION: summerise the text\\n=========\\nContent: This article discusses the concept of summarizing documents and provides a detailed overview of the steps involved in the process. It also provides examples of summaries and discusses the different types of summaries that can be created.\\nSource: [https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS\\n\\nContent](https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS/n/nContent): The main points are:\\nSource: [https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS\\n\\nContent](https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS/n/nContent): - - \\n\\n- - \\nSource: [https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS\\n\\nContent](https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS/n/nContent): - - \\nSource: [https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS\\n=========\\nFINAL](https://www.moneycontrol.com/india/stockpricequote/ironsteel/tatasteel/TIS/n=========/nFINAL) ANSWER:\"\r\n  ]\r\n}\r\n[llm/end] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 9:chain:LLMChain > 10:llm:GooglePalm] [2.01s] Exiting LLM run with output:\r\n{\r\n  \"generations\": [\r\n    []\r\n  ],\r\n  \"llm_output\": null,\r\n  \"run\": null\r\n}\r\n[chain/error] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain > 9:chain:LLMChain] [2.01s] Chain run errored with error:\r\n\"IndexError('list index out of range')\"\r\n[chain/error] [1:chain:RetrievalQAWithSourcesChain > 3:chain:MapReduceDocumentsChain] [6.45s] Chain run errored with error:\r\n\"IndexError('list index out of range')\"\r\n[chain/error] [1:chain:RetrievalQAWithSourcesChain] [7.13s] Chain run errored with error:\r\n\"IndexError('list index out of range')\"`\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12903/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12903/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12900",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12900/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12900/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12900/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12900",
        "id": 1977689238,
        "node_id": "I_kwDOIPDwls514SSW",
        "number": 12900,
        "title": "Finished chain - None, when I run an csv_agent on a csv file. ",
        "user": {
            "login": "product2023",
            "id": 132627302,
            "node_id": "U_kgDOB-e7Zg",
            "avatar_url": "https://avatars.githubusercontent.com/u/132627302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/product2023",
            "html_url": "https://github.com/product2023",
            "followers_url": "https://api.github.com/users/product2023/followers",
            "following_url": "https://api.github.com/users/product2023/following{/other_user}",
            "gists_url": "https://api.github.com/users/product2023/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/product2023/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/product2023/subscriptions",
            "organizations_url": "https://api.github.com/users/product2023/orgs",
            "repos_url": "https://api.github.com/users/product2023/repos",
            "events_url": "https://api.github.com/users/product2023/events{/privacy}",
            "received_events_url": "https://api.github.com/users/product2023/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-05T09:30:48Z",
        "updated_at": "2023-11-05T09:40:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nMy openai llm see to run fine but some how not getting the answer in Finished chain. \r\n\r\n\r\nModel used\r\n\r\n```\r\ndef llm_function(csv_file_name):\r\n\r\n    agent = create_csv_agent(\r\n        ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\", request_timeout=120),\r\n        csv_file_name,\r\n        verbose=True,\r\n        agent_type=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\r\n    )\r\n\r\n    # Pass a query to the chain\r\n    query = QUESTION\r\n    query = query + \" using tool python_repl_ast\"\r\n    #response = agent.run(query)\r\n\r\n    try:\r\n        response = agent.run(query)\r\n    except ValueError as e:\r\n        response = str(e)\r\n        if not response.startswith(\"Could not parse LLM output: `\"):\r\n            raise e\r\n        response = response.removeprefix(\"Could not parse LLM output: `\").removesuffix(\"`\")\r\n        return response\r\n```\r\n\r\nResults\r\n\r\n```\r\n> Entering new AgentExecutor chain...\r\nThought: To find the least expensive product, I need to sort the dataframe by the \"Price\" column in ascending order and then select the first row.\r\n\r\nAction: python_repl_ast\r\nAction Input: df.sort_values(\"Price\").head(1)\r\n\r\nObservation:                             Product Name  Price        Price per Count   Bought Last Month\r\n296  MAGNESIUM PHOSPHORICUM 6C 30 ML SBL     90  Price_count not found  Data not available\r\nThought:The least expensive product is \"MAGNESIUM PHOSPHORICUM 6C 30 ML SBL\" with a price of 90.\r\nFinal Answer: \"MAGNESIUM PHOSPHORICUM 6C 30 ML SBL\"\r\n\r\n> Finished chain.\r\nNone\r\n```\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12900/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12900/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12901",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12901/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12901/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12901/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12901",
        "id": 1977701382,
        "node_id": "I_kwDOIPDwls514VQG",
        "number": 12901,
        "title": "Langchain connects Neo4j v5.9 error Could not use APOC procedures",
        "user": {
            "login": "ichenhua",
            "id": 16658623,
            "node_id": "MDQ6VXNlcjE2NjU4NjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/16658623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ichenhua",
            "html_url": "https://github.com/ichenhua",
            "followers_url": "https://api.github.com/users/ichenhua/followers",
            "following_url": "https://api.github.com/users/ichenhua/following{/other_user}",
            "gists_url": "https://api.github.com/users/ichenhua/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ichenhua/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ichenhua/subscriptions",
            "organizations_url": "https://api.github.com/users/ichenhua/orgs",
            "repos_url": "https://api.github.com/users/ichenhua/repos",
            "events_url": "https://api.github.com/users/ichenhua/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ichenhua/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-05T09:13:20Z",
        "updated_at": "2023-12-01T19:29:02Z",
        "closed_at": "2023-11-05T09:29:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI have successfully installed the apoc plugin by pressing the neo4j document, and run ` return apoc.version() ` on the neo4j client to return successfully. \r\nHowever, when Neo4jGraph was used in Langchain connection, errors were still reported.\r\n```\r\nValueError: Could not use APOC procedures. Please ensure the APOC plugin is installed in Neo4j and that 'apoc.meta.data()' is allowed in Neo4j configuration \r\n```\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.graphs import Neo4jGraph\r\n\r\ngraph = Neo4jGraph(\r\n    'bolt://localhost:7687',\r\n    'neo4j',\r\n    'chenhuabc'\r\n)\r\n\r\nprint(graph)\r\n\r\n# ValueError: Could not use APOC procedures. Please ensure the APOC plugin is installed in Neo4j and that 'apoc.meta.data()' is allowed in Neo4j configuration \r\n\n\n### Expected behavior\n\nI have successfully installed the apoc plugin by pressing the neo4j document, and run ` return apoc.version() ` on the neo4j client to return successfully. \r\nHowever, when Neo4jGraph was used in Langchain connection, errors were still reported.\r\n```\r\nValueError: Could not use APOC procedures. Please ensure the APOC plugin is installed in Neo4j and that 'apoc.meta.data()' is allowed in Neo4j configuration \r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12901/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12899",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12899/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12899/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12899/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12899",
        "id": 1977674946,
        "node_id": "I_kwDOIPDwls514OzC",
        "number": 12899,
        "title": "Encounter KeyError: 'user_agent' while using CohereRerank()",
        "user": {
            "login": "plaban1981",
            "id": 23618329,
            "node_id": "MDQ6VXNlcjIzNjE4MzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/23618329?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plaban1981",
            "html_url": "https://github.com/plaban1981",
            "followers_url": "https://api.github.com/users/plaban1981/followers",
            "following_url": "https://api.github.com/users/plaban1981/following{/other_user}",
            "gists_url": "https://api.github.com/users/plaban1981/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/plaban1981/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/plaban1981/subscriptions",
            "organizations_url": "https://api.github.com/users/plaban1981/orgs",
            "repos_url": "https://api.github.com/users/plaban1981/repos",
            "events_url": "https://api.github.com/users/plaban1981/events{/privacy}",
            "received_events_url": "https://api.github.com/users/plaban1981/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-05T07:40:49Z",
        "updated_at": "2023-11-29T15:49:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.330\r\nPython 3.10.12\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.retrievers import ContextualCompressionRetriever\r\nfrom langchain.retrievers.document_compressors import CohereRerank\r\n\r\n#\r\ncompressor = CohereRerank()\r\n#\r\n\r\nError Encountered\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n[<ipython-input-29-be190c4da94f>](https://localhost:8080/#) in <cell line: 5>()\r\n      3 \r\n      4 #\r\n----> 5 compressor = CohereRerank()\r\n      6 #\r\n      7 compression_retriever = ContextualCompressionRetriever(\r\n\r\n2 frames\r\n/usr/local/lib/python3.10/dist-packages/pydantic/main.cpython-310-x86_64-linux-gnu.so in pydantic.main.BaseModel.__init__()\r\n\r\n/usr/local/lib/python3.10/dist-packages/pydantic/main.cpython-310-x86_64-linux-gnu.so in pydantic.main.validate_model()\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/retrievers/document_compressors/cohere_rerank.py](https://localhost:8080/#) in validate_environment(cls, values)\r\n     53             values, \"cohere_api_key\", \"COHERE_API_KEY\"\r\n     54         )\r\n---> 55         client_name = values[\"user_agent\"]\r\n     56         values[\"client\"] = cohere.Client(cohere_api_key, client_name=client_name)\r\n     57         return values\r\n\r\nKeyError: 'user_agent'\n\n### Expected behavior\n\nThe below error should not have been encountered as the COHERE API Key has alreday been set and cohere.Client() is workin with the api key provided\r\n\r\n\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n[<ipython-input-29-be190c4da94f>](https://localhost:8080/#) in <cell line: 5>()\r\n      3 \r\n      4 #\r\n----> 5 compressor = CohereRerank()\r\n      6 #\r\n      7 compression_retriever = ContextualCompressionRetriever(\r\n\r\n2 frames\r\n/usr/local/lib/python3.10/dist-packages/pydantic/main.cpython-310-x86_64-linux-gnu.so in pydantic.main.BaseModel.__init__()\r\n\r\n/usr/local/lib/python3.10/dist-packages/pydantic/main.cpython-310-x86_64-linux-gnu.so in pydantic.main.validate_model()\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/retrievers/document_compressors/cohere_rerank.py](https://localhost:8080/#) in validate_environment(cls, values)\r\n     53             values, \"cohere_api_key\", \"COHERE_API_KEY\"\r\n     54         )\r\n---> 55         client_name = values[\"user_agent\"]\r\n     56         values[\"client\"] = cohere.Client(cohere_api_key, client_name=client_name)\r\n     57         return values\r\n\r\nKeyError: 'user_agent'",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12899/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12899/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12898",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12898/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12898/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12898/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12898",
        "id": 1977602520,
        "node_id": "PR_kwDOIPDwls5em-Qg",
        "number": 12898,
        "title": "Harrison/docs smith serve",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-05T02:45:38Z",
        "updated_at": "2023-11-06T15:07:27Z",
        "closed_at": "2023-11-06T15:07:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12898",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12898",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12898.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12898.patch",
            "merged_at": "2023-11-06T15:07:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12898/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12898/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12897",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12897/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12897/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12897/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12897",
        "id": 1977595806,
        "node_id": "PR_kwDOIPDwls5em8-2",
        "number": 12897,
        "title": "add ingest for mongo",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-05T02:13:56Z",
        "updated_at": "2023-11-07T03:28:23Z",
        "closed_at": "2023-11-07T03:28:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12897",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12897",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12897.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12897.patch",
            "merged_at": "2023-11-07T03:28:22Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12897/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12896",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12896/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12896/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12896/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12896",
        "id": 1977594465,
        "node_id": "PR_kwDOIPDwls5em8uB",
        "number": 12896,
        "title": "Add SecretStr for Symbl.ai Nebula API",
        "user": {
            "login": "praveenv",
            "id": 4526224,
            "node_id": "MDQ6VXNlcjQ1MjYyMjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4526224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/praveenv",
            "html_url": "https://github.com/praveenv",
            "followers_url": "https://api.github.com/users/praveenv/followers",
            "following_url": "https://api.github.com/users/praveenv/following{/other_user}",
            "gists_url": "https://api.github.com/users/praveenv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/praveenv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/praveenv/subscriptions",
            "organizations_url": "https://api.github.com/users/praveenv/orgs",
            "repos_url": "https://api.github.com/users/praveenv/repos",
            "events_url": "https://api.github.com/users/praveenv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/praveenv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-05T02:08:16Z",
        "updated_at": "2023-11-06T19:29:23Z",
        "closed_at": "2023-11-06T19:14:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12896",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12896",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12896.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12896.patch",
            "merged_at": "2023-11-06T19:14:00Z"
        },
        "body": "Description: This PR masks API key secrets for the Nebula model from Symbl.ai\r\nIssue: #12165 \r\nMaintainer: @eyurtsev \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12896/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12896/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12895",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12895/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12895/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12895/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12895",
        "id": 1977565160,
        "node_id": "PR_kwDOIPDwls5em3JX",
        "number": 12895,
        "title": "Update ollama.py",
        "user": {
            "login": "glad4enkonm",
            "id": 11142000,
            "node_id": "MDQ6VXNlcjExMTQyMDAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/11142000?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glad4enkonm",
            "html_url": "https://github.com/glad4enkonm",
            "followers_url": "https://api.github.com/users/glad4enkonm/followers",
            "following_url": "https://api.github.com/users/glad4enkonm/following{/other_user}",
            "gists_url": "https://api.github.com/users/glad4enkonm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/glad4enkonm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glad4enkonm/subscriptions",
            "organizations_url": "https://api.github.com/users/glad4enkonm/orgs",
            "repos_url": "https://api.github.com/users/glad4enkonm/repos",
            "events_url": "https://api.github.com/users/glad4enkonm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/glad4enkonm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-05T00:11:46Z",
        "updated_at": "2023-11-15T22:49:01Z",
        "closed_at": "2023-11-13T07:43:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12895",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12895",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12895.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12895.patch",
            "merged_at": "2023-11-13T07:43:59Z"
        },
        "body": "duplicate option removed\r\n**Description:**  An issue fix, http stop option duplicate removed.\r\n**Issue:** the issue #12892 fix\r\n**Dependencies:** no\r\n**Tag maintainer:** @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12895/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12895/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12894",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12894/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12894/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12894/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12894",
        "id": 1977527950,
        "node_id": "I_kwDOIPDwls513q6O",
        "number": 12894,
        "title": "LLMChain does not stream",
        "user": {
            "login": "Tomas2D",
            "id": 15633909,
            "node_id": "MDQ6VXNlcjE1NjMzOTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15633909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tomas2D",
            "html_url": "https://github.com/Tomas2D",
            "followers_url": "https://api.github.com/users/Tomas2D/followers",
            "following_url": "https://api.github.com/users/Tomas2D/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tomas2D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tomas2D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tomas2D/subscriptions",
            "organizations_url": "https://api.github.com/users/Tomas2D/orgs",
            "repos_url": "https://api.github.com/users/Tomas2D/repos",
            "events_url": "https://api.github.com/users/Tomas2D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tomas2D/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-04T22:00:53Z",
        "updated_at": "2023-11-10T11:15:04Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nPlatform: macOS Sonoma 14.0\r\nPython Version: 3.11\r\nLangChain Version: 0.0.330\n\n### Who can help?\n\n\r\n\r\n@agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [x] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nprompt = PromptTemplate.from_template(\"What is a good name for a company that makes {product}?\")\r\nchain = LLMChain(llm=llm, prompt=prompt)\r\n\r\nfor chunk in chain.stream({ \"product\": \"colorful socks\" })\r\n    print(f\"Chunk: {chunk}\")\r\n```\n\n### Expected behavior\n\nOne expects to receive chunks when streaming, but because the `stream` method is not implemented in the `LLMChain class`, it falls back to the `stream` method in the base `Chain` class. This results in a `chunk` variable containing the full response.\r\n\r\nThis can be fixed easily by something like this.\r\n\r\n```python\r\nfrom langchain.chains import LLMChain\r\n\r\nclass MyChain(LLMChain):\r\n    def stream(\r\n            self,\r\n            input: Input,\r\n            config: Optional[RunnableConfig] = None,\r\n            run_manager: Optional[CallbackManagerForChainRun] = None,\r\n            **kwargs: Optional[Any],\r\n    ) -> Iterator[Output]:\r\n        prompts, stop = self.prep_prompts([input], run_manager=run_manager)\r\n        yield from self.llm.stream(input=prompts[0], config=config, **kwargs)\r\n\r\n```\r\n\r\n```python\r\nprompt = PromptTemplate.from_template(\"What is a good name for a company that makes {product}?\")\r\nchain = MyChain(llm=llm, prompt=prompt)\r\n\r\nfor chunk in chain.stream({ \"product\": \"colorful socks\" })\r\n    print(f\"Chunk: {chunk}\") \u2705\r\n```\r\n\r\nIf you agree, I would like to create PR which will fix that.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12894/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12894/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12893",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12893/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12893/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12893/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12893",
        "id": 1977527445,
        "node_id": "PR_kwDOIPDwls5emvw0",
        "number": 12893,
        "title": "Add \"messages\" key to output of AgentExecutor.stream()",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-04T21:59:05Z",
        "updated_at": "2023-11-21T10:32:51Z",
        "closed_at": "2023-11-21T10:32:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12893",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12893",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12893.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12893.patch",
            "merged_at": null
        },
        "body": "```\r\n---- chunk 1\r\n{'actions': [AgentActionMessageLog(tool='Search', tool_input=\"Leo DiCaprio's current girlfriend\", log=\"\\nInvoking: `Search` with `Leo DiCaprio's current girlfriend`\\n\\n\\n\", message_log=[AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Search', 'arguments': '{\\n  \"__arg1\": \"Leo DiCaprio\\'s current girlfriend\"\\n}'}})])],\r\n 'messages': [AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Search', 'arguments': '{\\n  \"__arg1\": \"Leo DiCaprio\\'s current girlfriend\"\\n}'}})]}\r\n---- chunk 2\r\n{'messages': [FunctionMessage(content=\"According to Us, the 48-year-old actor is now \u201cexclusively\u201d dating Italian model Vittoria Ceretti. A source told Us that DiCaprio is \u201ccompletely smitten\u201d with Ceretti, and their relationship is \u201cgoing so well that Leo's actually being exclusive.\u201d\", name='Search')],\r\n 'steps': [AgentStep(action=AgentActionMessageLog(tool='Search', tool_input=\"Leo DiCaprio's current girlfriend\", log=\"\\nInvoking: `Search` with `Leo DiCaprio's current girlfriend`\\n\\n\\n\", message_log=[AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Search', 'arguments': '{\\n  \"__arg1\": \"Leo DiCaprio\\'s current girlfriend\"\\n}'}})]), observation=\"According to Us, the 48-year-old actor is now \u201cexclusively\u201d dating Italian model Vittoria Ceretti. A source told Us that DiCaprio is \u201ccompletely smitten\u201d with Ceretti, and their relationship is \u201cgoing so well that Leo's actually being exclusive.\u201d\")]}\r\n---- chunk 3\r\n{'actions': [AgentActionMessageLog(tool='Search', tool_input='Vittoria Ceretti age', log='\\nInvoking: `Search` with `Vittoria Ceretti age`\\n\\n\\n', message_log=[AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Search', 'arguments': '{\\n  \"__arg1\": \"Vittoria Ceretti age\"\\n}'}})])],\r\n 'messages': [AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Search', 'arguments': '{\\n  \"__arg1\": \"Vittoria Ceretti age\"\\n}'}})]}\r\n---- chunk 4\r\n{'messages': [FunctionMessage(content='25 years', name='Search')],\r\n 'steps': [AgentStep(action=AgentActionMessageLog(tool='Search', tool_input='Vittoria Ceretti age', log='\\nInvoking: `Search` with `Vittoria Ceretti age`\\n\\n\\n', message_log=[AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Search', 'arguments': '{\\n  \"__arg1\": \"Vittoria Ceretti age\"\\n}'}})]), observation='25 years')]}\r\n---- chunk 5\r\n{'actions': [AgentActionMessageLog(tool='Calculator', tool_input='25^0.43', log='\\nInvoking: `Calculator` with `25^0.43`\\n\\n\\n', message_log=[AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Calculator', 'arguments': '{\\n  \"__arg1\": \"25^0.43\"\\n}'}})])],\r\n 'messages': [AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Calculator', 'arguments': '{\\n  \"__arg1\": \"25^0.43\"\\n}'}})]}\r\n---- chunk 6\r\n{'messages': [FunctionMessage(content='Answer: 3.991298452658078', name='Calculator')],\r\n 'steps': [AgentStep(action=AgentActionMessageLog(tool='Calculator', tool_input='25^0.43', log='\\nInvoking: `Calculator` with `25^0.43`\\n\\n\\n', message_log=[AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Calculator', 'arguments': '{\\n  \"__arg1\": \"25^0.43\"\\n}'}})]), observation='Answer: 3.991298452658078')]}\r\n---- chunk 7\r\n{'messages': [AIMessage(content=\"Leonardo DiCaprio's current girlfriend is the Italian model Vittoria Ceretti, who is 25 years old. Her age raised to the 0.43 power is approximately 3.99.\")],\r\n 'output': \"Leonardo DiCaprio's current girlfriend is the Italian model \"\r\n           'Vittoria Ceretti, who is 25 years old. Her age raised to the 0.43 '\r\n           'power is approximately 3.99.'}\r\n---- final\r\n{'actions': [AgentActionMessageLog(tool='Search', tool_input=\"Leo DiCaprio's current girlfriend\", log=\"\\nInvoking: `Search` with `Leo DiCaprio's current girlfriend`\\n\\n\\n\", message_log=[AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Search', 'arguments': '{\\n  \"__arg1\": \"Leo DiCaprio\\'s current girlfriend\"\\n}'}})]),\r\n             AgentActionMessageLog(tool='Search', tool_input='Vittoria Ceretti age', log='\\nInvoking: `Search` with `Vittoria Ceretti age`\\n\\n\\n', message_log=[AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Search', 'arguments': '{\\n  \"__arg1\": \"Vittoria Ceretti age\"\\n}'}})]),\r\n             AgentActionMessageLog(tool='Calculator', tool_input='25^0.43', log='\\nInvoking: `Calculator` with `25^0.43`\\n\\n\\n', message_log=[AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Calculator', 'arguments': '{\\n  \"__arg1\": \"25^0.43\"\\n}'}})])],\r\n 'messages': [AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Search', 'arguments': '{\\n  \"__arg1\": \"Leo DiCaprio\\'s current girlfriend\"\\n}'}}),\r\n              FunctionMessage(content=\"According to Us, the 48-year-old actor is now \u201cexclusively\u201d dating Italian model Vittoria Ceretti. A source told Us that DiCaprio is \u201ccompletely smitten\u201d with Ceretti, and their relationship is \u201cgoing so well that Leo's actually being exclusive.\u201d\", name='Search'),\r\n              AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Search', 'arguments': '{\\n  \"__arg1\": \"Vittoria Ceretti age\"\\n}'}}),\r\n              FunctionMessage(content='25 years', name='Search'),\r\n              AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Calculator', 'arguments': '{\\n  \"__arg1\": \"25^0.43\"\\n}'}}),\r\n              FunctionMessage(content='Answer: 3.991298452658078', name='Calculator'),\r\n              AIMessage(content=\"Leonardo DiCaprio's current girlfriend is the Italian model Vittoria Ceretti, who is 25 years old. Her age raised to the 0.43 power is approximately 3.99.\")],\r\n 'output': \"Leonardo DiCaprio's current girlfriend is the Italian model \"\r\n           'Vittoria Ceretti, who is 25 years old. Her age raised to the 0.43 '\r\n           'power is approximately 3.99.',\r\n 'steps': [AgentStep(action=AgentActionMessageLog(tool='Search', tool_input=\"Leo DiCaprio's current girlfriend\", log=\"\\nInvoking: `Search` with `Leo DiCaprio's current girlfriend`\\n\\n\\n\", message_log=[AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Search', 'arguments': '{\\n  \"__arg1\": \"Leo DiCaprio\\'s current girlfriend\"\\n}'}})]), observation=\"According to Us, the 48-year-old actor is now \u201cexclusively\u201d dating Italian model Vittoria Ceretti. A source told Us that DiCaprio is \u201ccompletely smitten\u201d with Ceretti, and their relationship is \u201cgoing so well that Leo's actually being exclusive.\u201d\"),\r\n           AgentStep(action=AgentActionMessageLog(tool='Search', tool_input='Vittoria Ceretti age', log='\\nInvoking: `Search` with `Vittoria Ceretti age`\\n\\n\\n', message_log=[AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Search', 'arguments': '{\\n  \"__arg1\": \"Vittoria Ceretti age\"\\n}'}})]), observation='25 years'),\r\n           AgentStep(action=AgentActionMessageLog(tool='Calculator', tool_input='25^0.43', log='\\nInvoking: `Calculator` with `25^0.43`\\n\\n\\n', message_log=[AIMessageChunk(content='', additional_kwargs={'function_call': {'name': 'Calculator', 'arguments': '{\\n  \"__arg1\": \"25^0.43\"\\n}'}})]), observation='Answer: 3.991298452658078')]}\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12893/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12893/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12892",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12892/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12892/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12892/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12892",
        "id": 1977518229,
        "node_id": "I_kwDOIPDwls513oiV",
        "number": 12892,
        "title": "It seems that stop does not work with ollama models.",
        "user": {
            "login": "glad4enkonm",
            "id": 11142000,
            "node_id": "MDQ6VXNlcjExMTQyMDAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/11142000?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glad4enkonm",
            "html_url": "https://github.com/glad4enkonm",
            "followers_url": "https://api.github.com/users/glad4enkonm/followers",
            "following_url": "https://api.github.com/users/glad4enkonm/following{/other_user}",
            "gists_url": "https://api.github.com/users/glad4enkonm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/glad4enkonm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glad4enkonm/subscriptions",
            "organizations_url": "https://api.github.com/users/glad4enkonm/orgs",
            "repos_url": "https://api.github.com/users/glad4enkonm/repos",
            "events_url": "https://api.github.com/users/glad4enkonm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/glad4enkonm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-04T21:30:07Z",
        "updated_at": "2023-11-05T10:07:14Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\n pip freeze\r\nattrs==19.3.0\r\nAutomat==0.8.0\r\nblinker==1.4\r\ncertifi==2019.11.28\r\nchardet==3.0.4\r\nClick==7.0\r\ncloud-init==23.3.1\r\ncolorama==0.4.3\r\ncommand-not-found==0.3\r\nconfigobj==5.0.6\r\nconstantly==15.1.0\r\ncryptography==2.8\r\ndbus-python==1.2.16\r\ndiskcache==5.6.3\r\ndistro==1.4.0\r\ndistro-info==0.23+ubuntu1.1\r\nentrypoints==0.3\r\nhttplib2==0.14.0\r\nhyperlink==19.0.0\r\nidna==2.8\r\nimportlib-metadata==1.5.0\r\nincremental==16.10.1\r\nJinja2==2.10.1\r\njsonpatch==1.22\r\njsonpointer==2.0\r\njsonschema==3.2.0\r\nkeyring==18.0.1\r\nlanguage-selector==0.1\r\nlaunchpadlib==1.10.13\r\nlazr.restfulclient==0.14.2\r\nlazr.uri==1.0.3\r\nllama-cpp-python==0.2.11\r\nMarkupSafe==1.1.0\r\nmore-itertools==4.2.0\r\nnetifaces==0.10.4\r\nnumpy==1.24.4\r\noauthlib==3.1.0\r\npexpect==4.6.0\r\npyasn1==0.4.2\r\npyasn1-modules==0.2.1\r\nPyGObject==3.36.0\r\nPyHamcrest==1.9.0\r\nPyJWT==1.7.1\r\npymacaroons==0.13.0\r\nPyNaCl==1.3.0\r\npyOpenSSL==19.0.0\r\npyrsistent==0.15.5\r\npyserial==3.4\r\npython-apt==2.0.1+ubuntu0.20.4.1\r\npython-debian==0.1.36+ubuntu1.1\r\nPyYAML==5.3.1\r\nrequests==2.22.0\r\nrequests-unixsocket==0.2.0\r\nSecretStorage==2.3.1\r\nservice-identity==18.1.0\r\nsimplejson==3.16.0\r\nsix==1.14.0\r\nsos==4.5.6\r\nssh-import-id==5.10\r\nsystemd-python==234\r\nTwisted==18.9.0\r\ntyping-extensions==4.8.0\r\nubuntu-advantage-tools==8001\r\nufw==0.36\r\nunattended-upgrades==0.1\r\nurllib3==1.25.8\r\nwadllib==1.3.3\r\nzipp==1.0.0\r\nzope.interface==4.7.1\r\n\n\n### Who can help?\n\nI'm trying to run an agent based on local `ollama mistral:7b-instruct` and stop is not working. Is it a bug or I configured wrong? Thanks in advance!\r\n\r\n```\r\nfrom langchain.agents import Tool, AgentExecutor, LLMSingleActionAgent, AgentOutputParser\r\nfrom langchain.prompts import StringPromptTemplate\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.utilities import SerpAPIWrapper\r\nfrom langchain.chains import LLMChain\r\nfrom typing import List, Union\r\nfrom langchain.schema import AgentAction, AgentFinish, OutputParserException\r\nimport re\r\nfrom langchain.llms import Ollama\r\nfrom langchain.callbacks.manager import CallbackManager\r\nfrom langchain.callbacks.streaming_stdout_final_only import FinalStreamingStdOutCallbackHandler\r\n\r\nfrom langchain.agents import tool\r\n\r\n@tool\r\ndef get_word_length(word: str) -> int:\r\n    \"\"\"Returns the length of a word.\"\"\"    \r\n    return len(word.strip().split()[0])\r\n\r\ntools = [get_word_length]\r\n\r\n# Set up the base template\r\ntemplate = \"\"\"Answer the following questions as best you can. You have access to the following tools:\r\n\r\n{tools}\r\n\r\nUse the following format:\r\n\r\nQuestion: the input question you must answer\r\nThought: you should always think about what to do\r\nAction: the action to take, should be one of [{tool_names}]\r\nAction Input: the input to the action\r\nObservation: the result of the action\r\n... (this Thought/Action/Action Input/Observation can repeat N times)\r\nThought: I now know the final answer\r\nFinal Answer: the final answer to the original input question \r\n\r\nBegin! If you can use a tool, use it before the final answer. Do not make up an observation before calling an action!\r\n\r\nQuestion: {input}\r\n{agent_scratchpad}\"\"\"\r\n\r\n# Set up a prompt template\r\nclass CustomPromptTemplate(StringPromptTemplate):\r\n    # The template to use\r\n    template: str\r\n    # The list of tools available\r\n    tools: List[Tool]\r\n\r\n    def format(self, **kwargs) -> str:\r\n        # Get the intermediate steps (AgentAction, Observation tuples)\r\n        # Format them in a particular way\r\n        intermediate_steps = kwargs.pop(\"intermediate_steps\")\r\n        thoughts = \"\"\r\n        for action, observation in intermediate_steps:\r\n            thoughts += action.log\r\n            thoughts += f\"\\nObservation: {observation}\\nThought: \"\r\n        # Set the agent_scratchpad variable to that value\r\n        kwargs[\"agent_scratchpad\"] = thoughts\r\n        # Create a tools variable from the list of tools provided\r\n        kwargs[\"tools\"] = \"\\n\".join([f\"{tool.name}: {tool.description}\" for tool in self.tools])\r\n        # Create a list of tool names for the tools provided\r\n        kwargs[\"tool_names\"] = \", \".join([tool.name for tool in self.tools])\r\n        return self.template.format(**kwargs)\r\n    \r\nprompt = CustomPromptTemplate(\r\n    template=template,\r\n    tools=tools,\r\n    # This omits the `agent_scratchpad`, `tools`, and `tool_names` variables because those are generated dynamically\r\n    # This includes the `intermediate_steps` variable because that is needed\r\n    input_variables=[\"input\", \"intermediate_steps\"]\r\n)\r\n\r\nclass CustomOutputParser(AgentOutputParser):\r\n\r\n    def parse(self, llm_output: str) -> Union[AgentAction, AgentFinish]:\r\n        # Check if agent should finish\r\n        if \"Final Answer:\" in llm_output:\r\n            return AgentFinish(\r\n                # Return values is generally always a dictionary with a single `output` key\r\n                # It is not recommended to try anything else at the moment :)\r\n                return_values={\"output\": llm_output.split(\"Final Answer:\")[-1].strip()},\r\n                log=llm_output,\r\n            )\r\n        # Parse out the action and action input\r\n        regex = r\"Action\\s*\\d*\\s*:(.*?)\\nAction\\s*\\d*\\s*Input\\s*\\d*\\s*:[\\s]*(.*)\"\r\n        match = re.search(regex, llm_output, re.DOTALL)\r\n        if not match:\r\n            raise OutputParserException(f\"Could not parse LLM output: `{llm_output}`\")\r\n        action = match.group(1).strip()\r\n        action_input = match.group(2)\r\n        # Return the action and action input\r\n        return AgentAction(tool=action, tool_input=action_input.strip(\" \").strip('\"'), log=llm_output)\r\n\r\n\r\noutput_parser = CustomOutputParser()\r\n\r\nollama = Ollama(model=\"mistral:7b-instruct\", callbacks=[FinalStreamingStdOutCallbackHandler()])\r\n\r\n# LLM chain consisting of the LLM and a prompt\r\nllm_chain = LLMChain(llm=ollama, prompt=prompt)\r\n\r\ntool_names = [tool.name for tool in tools]\r\nagent = LLMSingleActionAgent(\r\n    llm_chain=llm_chain,\r\n    output_parser=output_parser,\r\n    stop=[\"Observation:\"],\r\n    allowed_tools=tool_names\r\n)\r\n\r\nagent_executor = AgentExecutor.from_agent_and_tools(agent=agent, tools=tools, verbose=True)\r\nagent_executor.run(\"How many letters in the word astronomia?\")\r\n```\r\n\r\n\r\n    @hwchase17\r\n    @agola11\r\n\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Run the code above\n\n### Expected behavior\n\nExpected to stop on Observation",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12892/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12891",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12891/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12891/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12891/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12891",
        "id": 1977501097,
        "node_id": "I_kwDOIPDwls513kWp",
        "number": 12891,
        "title": "DOC: Typo under docs for using chat models for ReAct agents",
        "user": {
            "login": "manankalra",
            "id": 12759088,
            "node_id": "MDQ6VXNlcjEyNzU5MDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12759088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manankalra",
            "html_url": "https://github.com/manankalra",
            "followers_url": "https://api.github.com/users/manankalra/followers",
            "following_url": "https://api.github.com/users/manankalra/following{/other_user}",
            "gists_url": "https://api.github.com/users/manankalra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manankalra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manankalra/subscriptions",
            "organizations_url": "https://api.github.com/users/manankalra/orgs",
            "repos_url": "https://api.github.com/users/manankalra/repos",
            "events_url": "https://api.github.com/users/manankalra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manankalra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-04T20:46:53Z",
        "updated_at": "2023-11-04T20:47:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nPage link: https://python.langchain.com/docs/modules/agents/agent_types/react#using-chat-models\r\n\r\nUnder \"Using chat models\", second paragraph: \r\n\r\n```The main difference here is a different prompt. We will use JSON to encode the agent's actions (chat models are a bit tougher to steet, so using JSON helps to enforce the output format).```\r\n\r\n_steet_ should be replaced with _steer_.\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12891/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12891/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12890",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12890/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12890/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12890/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12890",
        "id": 1977475618,
        "node_id": "PR_kwDOIPDwls5emlaa",
        "number": 12890,
        "title": "Fix configurable for non-hashable options",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-04T19:21:11Z",
        "updated_at": "2023-11-05T09:12:43Z",
        "closed_at": "2023-11-05T09:12:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12890",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12890",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12890.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12890.patch",
            "merged_at": "2023-11-05T09:12:41Z"
        },
        "body": "\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12890/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12890/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12887",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12887/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12887/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12887/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12887",
        "id": 1977421037,
        "node_id": "PR_kwDOIPDwls5ema1O",
        "number": 12887,
        "title": "mongo parent document retrieval",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-04T16:35:13Z",
        "updated_at": "2023-11-04T17:16:03Z",
        "closed_at": "2023-11-04T17:16:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12887",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12887",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12887.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12887.patch",
            "merged_at": "2023-11-04T17:16:02Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12887/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12887/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12885",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12885/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12885/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12885/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12885",
        "id": 1977404351,
        "node_id": "PR_kwDOIPDwls5emXlg",
        "number": 12885,
        "title": "Update tool description on uploaded and removed file",
        "user": {
            "login": "jakubno",
            "id": 50249709,
            "node_id": "MDQ6VXNlcjUwMjQ5NzA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/50249709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakubno",
            "html_url": "https://github.com/jakubno",
            "followers_url": "https://api.github.com/users/jakubno/followers",
            "following_url": "https://api.github.com/users/jakubno/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakubno/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakubno/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakubno/subscriptions",
            "organizations_url": "https://api.github.com/users/jakubno/orgs",
            "repos_url": "https://api.github.com/users/jakubno/repos",
            "events_url": "https://api.github.com/users/jakubno/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakubno/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-04T15:46:17Z",
        "updated_at": "2023-11-13T14:36:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12885",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12885",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12885.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12885.patch",
            "merged_at": null
        },
        "body": "For the llm to work properly with the tool, it needs context of the current files. This seems little bit hackish, so if you have better approach, let me know! \r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12885/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12884",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12884/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12884/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12884/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12884",
        "id": 1977369918,
        "node_id": "PR_kwDOIPDwls5emQk-",
        "number": 12884,
        "title": "fixed from_embeddings documentation",
        "user": {
            "login": "LucaSchinnerl",
            "id": 64158457,
            "node_id": "MDQ6VXNlcjY0MTU4NDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/64158457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LucaSchinnerl",
            "html_url": "https://github.com/LucaSchinnerl",
            "followers_url": "https://api.github.com/users/LucaSchinnerl/followers",
            "following_url": "https://api.github.com/users/LucaSchinnerl/following{/other_user}",
            "gists_url": "https://api.github.com/users/LucaSchinnerl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LucaSchinnerl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LucaSchinnerl/subscriptions",
            "organizations_url": "https://api.github.com/users/LucaSchinnerl/orgs",
            "repos_url": "https://api.github.com/users/LucaSchinnerl/repos",
            "events_url": "https://api.github.com/users/LucaSchinnerl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LucaSchinnerl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-04T14:31:35Z",
        "updated_at": "2023-11-14T00:24:54Z",
        "closed_at": "2023-11-14T00:24:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12884",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12884",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12884.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12884.patch",
            "merged_at": null
        },
        "body": "  - **Description:** Updated FAISS documentation that throws an error, \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12884/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12884/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12883",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12883/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12883/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12883/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12883",
        "id": 1977348240,
        "node_id": "I_kwDOIPDwls512_CQ",
        "number": 12883,
        "title": "Langchain Structured_Chat_Zero_Shot_Description agent use no tools ",
        "user": {
            "login": "JoffreyLemery",
            "id": 115782740,
            "node_id": "U_kgDOBua0VA",
            "avatar_url": "https://avatars.githubusercontent.com/u/115782740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JoffreyLemery",
            "html_url": "https://github.com/JoffreyLemery",
            "followers_url": "https://api.github.com/users/JoffreyLemery/followers",
            "following_url": "https://api.github.com/users/JoffreyLemery/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoffreyLemery/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JoffreyLemery/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoffreyLemery/subscriptions",
            "organizations_url": "https://api.github.com/users/JoffreyLemery/orgs",
            "repos_url": "https://api.github.com/users/JoffreyLemery/repos",
            "events_url": "https://api.github.com/users/JoffreyLemery/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JoffreyLemery/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-04T13:49:20Z",
        "updated_at": "2023-11-04T13:58:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nName: langchain\r\nVersion: 0.0.308\r\nMacos ventura 13.2.1\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n@agola11\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI have two Custom tools :\r\n\r\nCustomJiraTicketWriting which use FewShotChatMessagePromptTemplate and StructuredOutputParser.from_response_schemas in order to produce dictionary output with a compatible & developed JSON representing a Jira ticket.\r\nCustomJiraTicketPOST which accept 4 inputs : ticket / email / url / token in order to POST the ticket on Jira.\r\nBoth of these function works great separately, but when I use an Structured_Chat_Zero_Shot_Description agent to create a ReACT decision, it appears that the Agent refuse to use any of the tools.\r\n\r\nI wonder if i do something wrong or if the Structured_Chat_Zero_Shot_Description agent is bugged ?\r\n\r\n\r\n```\r\nimport os\r\nimport re\r\nimport json\r\nimport openai\r\nimport random\r\nimport langchain\r\nimport demjson3\r\nimport requests\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom requests.auth import HTTPBasicAuth\r\nfrom openai import ChatCompletion\r\nfrom typing import Optional, Type, List, Dict, Union\r\nfrom langchain.llms import OpenAI,GPT4All\r\nfrom pydantic import BaseModel, Field\r\nfrom langchain.agents import (AgentType, \r\n                              initialize_agent, \r\n                              AgentOutputParser, \r\n                              LLMSingleActionAgent, \r\n                              AgentExecutor,\r\n                              load_tools)\r\nfrom langchain.schema import AgentAction, AgentFinish\r\nfrom langchain.cache import InMemoryCache\r\nfrom langchain.prompts.few_shot import FewShotPromptTemplate\r\nfrom langchain.prompts.few_shot_with_templates import FewShotPromptWithTemplates\r\nfrom langchain.prompts.few_shot import FewShotPromptTemplate\r\nfrom langchain.pydantic_v1 import BaseModel, Field, validator\r\nfrom langchain.chains import LLMChain, SequentialChain, SimpleSequentialChain, TransformChain\r\nfrom langchain.output_parsers import (OutputFixingParser, \r\n                                      RetryWithErrorOutputParser, \r\n                                      PydanticOutputParser,\r\n                                      CombiningOutputParser,\r\n                                      ResponseSchema, \r\n                                      StructuredOutputParser)\r\nfrom langchain.chains.conversation.memory import ConversationBufferWindowMemory\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\n\r\nfrom langchain.tools import BaseTool, StructuredTool, Tool, tool\r\n\r\nfrom langchain.prompts import (ChatPromptTemplate,\r\n                               PromptTemplate,\r\n                               SystemMessagePromptTemplate,\r\n                               AIMessagePromptTemplate,\r\n                               HumanMessagePromptTemplate,\r\n                               FewShotChatMessagePromptTemplate,\r\n                               StringPromptTemplate,\r\n)\r\n                                      \r\nfrom langchain.schema import (AIMessage,\r\n                              HumanMessage,\r\n                              SystemMessage\r\n)\r\n\r\n\r\nfrom langchain.callbacks.manager import (\r\n    AsyncCallbackManagerForToolRun,\r\n    CallbackManagerForToolRun,\r\n)\r\n\r\n\r\nemail = 'XXXXXXXXXX.jl@gmail.com'\r\nurl = \"https://XXXXXXXXXX.atlassian.net/rest/api/3/issue\"\r\ndebug_mode = True\r\nlangchain.debug = True\r\nlangchain.llm_cache = InMemoryCache()\r\n\r\nos.environ[\"JIRA_API_TOKEN\"]= 'XXXXXXXXXX'\r\napi_token_jira = os.environ[\"JIRA_API_TOKEN\"]\r\nos.environ[\"JIRA_USERNAME\"]= 'XXXXXXXXXX'\r\nos.environ[\"JIRA_INSTANCE_URL\"] = \"XXXXXXXXXX\"\r\nsite_jira = os.environ[\"JIRA_INSTANCE_URL\"]\r\nos.environ['OPENAI_API_KEY']='XXXXXXXXXX'\r\nopenai_api_key = os.getenv('OPENAI_API_KEY')\r\napi_key = os.getenv('OPENAI_API_KEY')\r\n\r\nmodel_name = 'gpt-3.5-turbo'\r\ntemperature = 0.0\r\n\r\n\r\nmodel_llm = OpenAI(model_name=model_name, \r\n                   temperature=temperature, \r\n                   max_tokens=3500)\r\n\r\nmodel_chat = ChatOpenAI(\r\n    temperature=temperature, \r\n    max_tokens=3100,\r\n    model_name=model_name)\r\n\r\n\r\nturbo_llm = ChatOpenAI(\r\n    temperature=temperature,\r\n    model_name=model_name,\r\n    max_tokens=3100,)\r\n\r\nclass CustomJiraTicketWriting(BaseTool):\r\n    name = \"Jira_Ticket_Write\"\r\n    description = (\"\"\"\r\n        Useful to transform a summary into a real JSON Jira ticket.\r\n        The input should be like :\r\n        {{\r\n            Action: Ticket_writing,\r\n            Action Input: \r\n                \"summary\": <ticket summary>, \r\n        }}\r\n        \"\"\")\r\n\r\n\r\n    def _run(self, \r\n            summary: str,\r\n            run_manager: Optional[AsyncCallbackManagerForToolRun] = None,\r\n             ) -> dict:\r\n        \r\n        response_schema = ResponseSchema(\r\n            name=\"jira_ticket\",\r\n            description=\"Jira ticket information\",\r\n            structure={\r\n                \"fields\": {\r\n                    \"project\": {\r\n                        \"key\": str\r\n                    },\r\n                    \"summary\": str,\r\n                    \"issuetype\": {\r\n                        \"name\": str\r\n                    },\r\n                    \"priority\": {\r\n                        \"name\": str\r\n                    },\r\n                    \"description\": {\r\n                        \"type\": str,\r\n                        \"version\": int,\r\n                        \"content\": [\r\n                        {\r\n                            \"type\": str,\r\n                            \"content\": [\r\n                                {\r\n                                    \"type\": str,\r\n                                    \"text\": str\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"type\": str,\r\n                            \"attrs\": {\r\n                                \"level\": int\r\n                            },\r\n                            \"content\": [\r\n                                {\r\n                                    \"type\": str,\r\n                                    \"text\": str\r\n                                }\r\n                            ]\r\n                        }\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        )\r\n\r\n        response_schemas=[response_schema]\r\n        output_parser = StructuredOutputParser.from_response_schemas(response_schemas)\r\n        format_instructions = output_parser.get_format_instructions()     \r\n        \r\n\r\n\r\n        examples = [\r\n          {\r\n            \"Jira_Ticket_Summary\" : \"Creation of the MySQL database\",\r\n            \"output\": \"\"\"{\"fields\":{\"project\":{\"key\":\"AJ\"},\"summary\":\"Create a Jira ticket to integrate my MySQL database into our current assets\",\"issuetype\":{\"name\":\"Story\"},\"priority\":{\"name\":\"High\"},\"description\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"As a developer, I want to integrate my MySQL database with our current assets to improve data management.\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2},\"content\":[{\"type\":\"text\",\"text\":\"Acceptance Criteria:\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- The MySQL database is successfully integrated with the application.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- Data can be efficiently stored and retrieved from the integrated MySQL database.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- The integration process follows best practices and security standards.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- The integration is documented for future reference.\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2},\"content\":[{\"type\":\"text\",\"text\":\"Subtasks:\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- Analyze the structure of the MySQL database.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- Create integration scripts for data migration.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- Implement data synchronization with the application.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- Perform testing and quality assurance of the integration.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- Document the integration process and configurations.\"}]}]}}\"\"\"\r\n          }]\r\n\r\n        example_prompt = ChatPromptTemplate.from_messages(\r\n            [\r\n          (\"human\", \"{Jira_Ticket_Summary}\"),\r\n            (\"ai\", \"{output}\")]\r\n        )\r\n\r\n\r\n        few_shot_prompt = FewShotChatMessagePromptTemplate(\r\n            example_prompt=example_prompt,\r\n            examples=examples,\r\n        )  \r\n\r\n\r\n        prompt_string = \"\"\"\r\n        Jira_Ticket_Summary: {Jira_Ticket_Summary}\r\n\r\n        {format_instructions}\r\n        \"\"\"\r\n\r\n        prompt = ChatPromptTemplate.from_messages(\r\n            [\r\n                (\"system\", \"You are a Jira assistant specialized in creating technical tickets. You always develop the tickets with precise examples of sub-tasks and acceptance criteria. Remember to use double quotes for keys.\"),\r\n                few_shot_prompt,\r\n                (\"human\", prompt_string),\r\n            ]\r\n        )\r\n\r\n        final_prompt = ChatPromptTemplate(\r\n            messages=[\r\n               prompt  \r\n            ],\r\n            input_variables=['Jira_Ticket_Summary'],\r\n            partial_variables={\"format_instructions\": format_instructions},\r\n            output_parser=output_parser\r\n        )\r\n\r\n\r\n        chain = LLMChain(llm=turbo_llm, \r\n                         prompt=final_prompt,\r\n                         output_parser=output_parser,\r\n                         output_key=\"ticket\")\r\n\r\n        sequential_chain = SequentialChain(chains=[chain],\r\n                                           input_variables=['Jira_Ticket_Summary'],\r\n                                           output_variables=['ticket'],\r\n                                           verbose=True)\r\n\r\n        input_data={'Jira_Ticket_Summary' : f'{summary}'}\r\n\r\n        result = sequential_chain(input_data)\r\n\r\n        print(\"\\n\\n\\n result_writing : \",result)\r\n        print(\"\\n\\n\\n result_writing_type : \",type(result),'\\n\\n\\n')\r\n        return result\r\n        \r\n    def _arun(self, \r\n            summary:str,\r\n            run_manager: Optional[AsyncCallbackManagerForToolRun] = None,\r\n             ) -> str:\r\n        raise NotImplementedError(\"This tool does not support async\")\r\n        \r\n        \r\n\r\nclass CustomJiraTicketPOST(BaseTool):\r\n\r\n    name = \"Jira_Ticket_Post\"\r\n    description = (\"\"\"\\\r\n                Useful to POST a ticket in Jira Software\r\n                The input should be like :\r\n        {{\r\n            Action: Jira_Post,\r\n            Action Input: \r\n                \"ticket\": <JSON-string of the ticket>,\r\n                \"email\": <email associated with the Jira Software account>,\r\n                \"url\": <url to POST the ticket at>,\r\n                \"token\": <identification JIRA API token>\r\n        }}\r\n        \"\"\")\r\n\r\n    def _run(\r\n        self,\r\n        ticket: str, \r\n        email: str,\r\n        url: str,\r\n        token: str,\r\n        run_manager: Optional[AsyncCallbackManagerForToolRun] = None\r\n    ) -> str:\r\n\r\n        # Retrieve the values using lowercase keys\r\n        url = url\r\n        email = email\r\n        body = ticket\r\n\r\n        auth = HTTPBasicAuth(email, api_token_jira)\r\n\r\n        headers = {\r\n          \"Accept\": \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        response = requests.request(\r\n           \"POST\",\r\n           url,\r\n           data=body,\r\n           headers=headers,\r\n           auth=auth\r\n        )\r\n        \r\n        return json.dumps(json.loads(response.text), sort_keys=True, indent=4, separators=(\",\", \": \"))\r\n    \r\n    async def _arun(\r\n        self,\r\n        ticket: str, \r\n        email: str,\r\n        url: str,\r\n        token: str,\r\n        run_manager: Optional[AsyncCallbackManagerForToolRun] = None,\r\n    ) -> str:\r\n        \"\"\"Use the tool asynchronously.\"\"\"\r\n        raise NotImplementedError(\"custom_search does not support async\")\r\n\r\n\r\nPREFIX = \"\"\"You are a Jira Assistant.\r\nYou're designed to assist the user with a wide range of tasks related to Jira object management. \r\nIt goes from understand the user's need for its tickets, writing technical and detailed Jira tickets with descriptions, subtasks and acceptance criteria\u2019s to realize API call (POST, PUT or GET) with Jira objects.\r\n\"\"\"\r\n\r\n\r\nFORMAT_INSTRUCTIONS = \"\"\"\\\r\n\\\r\nTo complete the request, think step by step about what you do.\r\n\r\nRequirements :\\\r\n\\\r\nUse a json blob to specify a tool by providing an action key (tool name) and an action_input key (tool input).\r\nProvide only ONE action per $JSON_BLOB, as shown:\r\n        \r\n\"\"\"\r\n{\"action\": \"{TOOL_NAME}\",\r\n\"action_input\": \"{INPUT}\"}\r\n\"\"\"\r\n\r\nTo answer the request, please follow the format:\\\r\n\\\r\n\"\"\"\r\nQuestion: request to answer\r\nThought: You should always think about what to do\r\nAction: the action to take, should be one of [{tool_names}] and must be a $JSON_BLOB\r\nObservation: Action result\r\n... (repeat Thought/Action/Observation N times)\r\nThought: I know what to respond\r\nAction:\r\n\"\"\"\r\n{\"action\": \"Final Answer\",\r\n\"action_input\": \"Final response to human\"}\r\n\"\"\"\r\n\"\"\"\r\n\r\nRemarks :\r\nBefore to POST a ticket, you need to write it.\r\nRemember to act as a Jira assistant and to conclude by \"Final Answer\" when you succeed ALL the tasks.\r\n\"\"\"\r\n\r\n\r\nSUFFIX = \"\"\"\r\n\r\nBegin! Reminder to ALWAYS respond with a valid json blob of a single action. Use tools if necessary. \r\nRespond directly if appropriate. \r\nFormat is Action:```$JSON_BLOB```then Observation.\r\n\r\n\r\nPrevious conversation history:\r\n{chat_history}\r\n\r\nInstructions: {input}\r\n{agent_scratchpad}\r\n\"\"\"\r\n\r\nmemory = ConversationBufferWindowMemory(\r\n    memory_key='chat_history',\r\n    k=3,\r\n    return_messages=True\r\n)\r\n\r\ntools = [CustomJiraTicketPOST(),CustomJiraTicketWriting()]\r\nconversational_agent = initialize_agent(\r\n    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION, \r\n    tools=tools, \r\n    llm=turbo_llm,\r\n    verbose=True,\r\n    max_iterations=3,\r\n    early_stopping_method='generate',\r\n    handle_parsing_errors=\"Check your output and make sure it conforms!\",\r\n    memory=memory,\r\n    agent_kwargs={\r\n        'prefix': PREFIX, \r\n        'format_instructions': FORMAT_INSTRUCTIONS,\r\n        'suffix': SUFFIX,\r\n        \"input_variables\": [\r\n            \"input\",\r\n            \"agent_scratchpad\",\r\n            \"chat_history\"\r\n        ],\r\n        \"verbose\": True\r\n    }\r\n)\r\n\r\nContext = \"Write and POST the ticket with following information : \"\r\n    \r\npayload = {\r\n    \r\n    \"summary\": \"I want to connect our backend to a new MySQL database. The project key is AJ\",\r\n    \"email\": f\"{email}\",\r\n    \"url\": f\"{url}\",\r\n    \"token\": f\"{api_token_jira}\",\r\n}\r\n\r\nanswer = conversational_agent.run(f'{Context}' + json.dumps(payload))\r\n```\r\n\r\n### Expected behavior\r\n\r\nExpected behavior :\r\n\r\nWell at least use the Writing tools, and then use the Post tool. There is just an uncertainty regarding the acception of the Output of the first tool for the second tool.\r\nActual behavior:\r\n\r\n```\r\n[...]\r\n\r\n}\r\n[llm/end] [1:chain:AgentExecutor > 2:chain:LLMChain > 3:llm:ChatOpenAI] [5.15s] Exiting LLM run with output:\r\n{\r\n  \"generations\": [\r\n    [\r\n      {\r\n...\r\n[chain/end] [1:chain:AgentExecutor] [5.15s] Exiting Chain run with output:\r\n{\r\n  \"output\": \"Action: Jira_Ticket_Write\\nAction Input: \\n{\\n    \\\"summary\\\": \\\"I want to connect our backend to a new MySQL database. The project key is AJ\\\"\\n}\"\r\n}\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12883/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12882",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12882/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12882/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12882/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12882",
        "id": 1977343851,
        "node_id": "I_kwDOIPDwls51299r",
        "number": 12882,
        "title": "Langchain OPENAI_MULTI_FUNCTIONS Agent doesn't retrieve the data from the second Input (Chain). Can OPENAI_MULTI_FUNCTIONS Agent realize two actions, one after the other  ? ",
        "user": {
            "login": "JoffreyLemery",
            "id": 115782740,
            "node_id": "U_kgDOBua0VA",
            "avatar_url": "https://avatars.githubusercontent.com/u/115782740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JoffreyLemery",
            "html_url": "https://github.com/JoffreyLemery",
            "followers_url": "https://api.github.com/users/JoffreyLemery/followers",
            "following_url": "https://api.github.com/users/JoffreyLemery/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoffreyLemery/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JoffreyLemery/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoffreyLemery/subscriptions",
            "organizations_url": "https://api.github.com/users/JoffreyLemery/orgs",
            "repos_url": "https://api.github.com/users/JoffreyLemery/repos",
            "events_url": "https://api.github.com/users/JoffreyLemery/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JoffreyLemery/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-04T13:41:28Z",
        "updated_at": "2023-11-04T14:04:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nName: langchain Version: 0.0.308\r\nMacos 13.2.1\r\n\n\n### Who can help?\n\n@hwchase17\r\n@agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHi everybody !\r\n\r\nI have setup a OPENAI_MULTI_FUNCTIONS Agent which seems to do great with a few token, but even if all the information are in the prompt, it is not able to use them for the tool input.\r\n\r\nWhat is the issue :\r\n\r\nI have two Custom tools :\r\n\r\n - CustomJiraTicketWriting which use FewShotChatMessagePromptTemplate\r\n   and StructuredOutputParser.from_response_schemas in order to produce\r\n   dictionary output with a compatible & developed JSON representing a\r\n   Jira ticket. \r\n - CustomJiraTicketPOST which accept 4 inputs : ticket /\r\n   email / url / token in order to POST the ticket on Jira. Both of\r\n   these function works great separately, but when I use an\r\n   Structured_Chat_Zero_Shot_Description agent to create a ReACT\r\n   decision, it appears that the Agent refuse to use any of the tools.\r\n\r\nI presented below, the agent use the first tools, write the ticket, inject it in the new prompt, but after that, the agent decide to use the second tool but miss some information\r\n\r\n```\r\nimport os\r\nimport json\r\nimport langchain\r\nimport requests\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom requests.auth import HTTPBasicAuth\r\nfrom typing import Optional, Type\r\nfrom langchain.llms import OpenAI\r\nfrom pydantic import BaseModel, Field\r\nfrom langchain.agents import (AgentType, \r\n                              initialize_agent, )\r\nfrom langchain.cache import InMemoryCache\r\nfrom langchain.pydantic_v1 import BaseModel, Field\r\nfrom langchain.chains import LLMChain, SequentialChain\r\nfrom langchain.output_parsers import (ResponseSchema, \r\n                                      StructuredOutputParser)\r\n\r\nfrom langchain.tools import BaseTool\r\nfrom langchain.prompts import (ChatPromptTemplate,\r\n                               MessagesPlaceholder,\r\n                               FewShotChatMessagePromptTemplate)\r\n\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.schema import (SystemMessage,\r\n                             )\r\n\r\n\r\nfrom langchain.callbacks.manager import (\r\n    AsyncCallbackManagerForToolRun,\r\n    CallbackManagerForToolRun,\r\n)\r\n\r\ndebug_mode = True\r\nlangchain.debug = True\r\n\r\nemail = 'XXXXXXXXXX'\r\nurl = \"https://XXXXXXXXXX.atlassian.net/rest/api/3/issue\"\r\n\r\nlangchain.llm_cache = InMemoryCache()\r\n\r\nos.environ[\"JIRA_API_TOKEN\"]= 'XXXXXXXXXX'\r\napi_token_jira = os.environ[\"JIRA_API_TOKEN\"]\r\nos.environ[\"JIRA_USERNAME\"]= 'XXXXXXXXXX'\r\nos.environ[\"JIRA_INSTANCE_URL\"] = \"XXXXXXXXXX\"\r\nsite_jira = os.environ[\"JIRA_INSTANCE_URL\"]\r\nos.environ['OPENAI_API_KEY']='XXXXXXXXXX'\r\nopenai_api_key = os.getenv('OPENAI_API_KEY')\r\napi_key = os.getenv('OPENAI_API_KEY')\r\n\r\nmodel_name = 'gpt-3.5-turbo'\r\ntemperature = 0.0\r\n\r\n\r\nmodel_llm = OpenAI(model_name=model_name, \r\n                   temperature=temperature, \r\n                   max_tokens=3500)\r\n\r\nturbo_llm = ChatOpenAI(\r\n    temperature=temperature,\r\n    model_name=model_name,\r\n    max_tokens=3100,)\r\n\r\n\r\nclass SummaryTicket(BaseModel):\r\n    \"\"\"Input for writing Jira Ticket\"\"\"\r\n    summary: str = Field(..., description=\"ticket summary\")\r\n    \r\n\r\nclass POST(BaseModel):\r\n    \"\"\"Input for POST a ticket\"\"\"\r\n    ticket: str = Field(..., description=\"Jira ticket as a dictionnary\")\r\n    email: str = Field(..., description=\"email associated with the Jira Software account\")\r\n    url: str = Field(..., description=\"url to POST a Jira ticket at\")\r\n    token : str = Field(..., description=\"Identification JIRA API token\") \r\n\r\nclass CustomJiraTicketWriting(BaseTool):\r\n    name = \"Jira_Ticket_Write\"\r\n    description = (\"\"\"\r\n        Useful to transform a summary into a real JSON Jira ticket.\r\n        The input should be like :\r\n        {{\r\n            Action: Ticket_writing,\r\n            Action Input: \r\n                \"summary\": <ticket summary>, \r\n        }}\r\n        \"\"\")\r\n\r\n\r\n    def _run(self, \r\n            summary: str,\r\n            run_manager: Optional[AsyncCallbackManagerForToolRun] = None,\r\n             ) -> dict:\r\n        \r\n        response_schema = ResponseSchema(\r\n            name=\"ticket\",\r\n            description=\"Jira ticket information\",\r\n            structure={\r\n                \"fields\": {\r\n                    \"project\": {\r\n                        \"key\": str\r\n                    },\r\n                    \"summary\": str,\r\n                    \"issuetype\": {\r\n                        \"name\": str\r\n                    },\r\n                    \"priority\": {\r\n                        \"name\": str\r\n                    },\r\n                    \"description\": {\r\n                        \"type\": str,\r\n                        \"version\": int,\r\n                        \"content\": [\r\n                        {\r\n                            \"type\": str,\r\n                            \"content\": [\r\n                                {\r\n                                    \"type\": str,\r\n                                    \"text\": str\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"type\": str,\r\n                            \"attrs\": {\r\n                                \"level\": int\r\n                            },\r\n                            \"content\": [\r\n                                {\r\n                                    \"type\": str,\r\n                                    \"text\": str\r\n                                }\r\n                            ]\r\n                        }\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        )\r\n\r\n        response_schemas=[response_schema]\r\n        output_parser = StructuredOutputParser.from_response_schemas(response_schemas)\r\n        format_instructions = output_parser.get_format_instructions()     \r\n        \r\n\r\n\r\n        examples = [\r\n          {\r\n            \"Jira_Ticket_Summary\" : \"Creation of the MySQL database\",\r\n            \"output\": \"\"\"{\"fields\":{\"project\":{\"key\":\"AJ\"},\"summary\":\"Create a Jira ticket to integrate my MySQL database into our current assets\",\"issuetype\":{\"name\":\"Story\"},\"priority\":{\"name\":\"High\"},\"description\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"As a developer, I want to integrate my MySQL database with our current assets to improve data management.\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2},\"content\":[{\"type\":\"text\",\"text\":\"Acceptance Criteria:\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- The MySQL database is successfully integrated with the application.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- Data can be efficiently stored and retrieved from the integrated MySQL database.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- The integration process follows best practices and security standards.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- The integration is documented for future reference.\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2},\"content\":[{\"type\":\"text\",\"text\":\"Subtasks:\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- Analyze the structure of the MySQL database.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- Create integration scripts for data migration.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- Implement data synchronization with the application.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- Perform testing and quality assurance of the integration.\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"- Document the integration process and configurations.\"}]}]}}\"\"\"\r\n          }]\r\n\r\n        example_prompt = ChatPromptTemplate.from_messages(\r\n            [\r\n          (\"human\", \"{Jira_Ticket_Summary}\"),\r\n            (\"ai\", \"{output}\")]\r\n        )\r\n\r\n\r\n        few_shot_prompt = FewShotChatMessagePromptTemplate(\r\n            example_prompt=example_prompt,\r\n            examples=examples,\r\n        )  \r\n\r\n\r\n        prompt_string = \"\"\"\r\n        Jira_Ticket_Summary: {Jira_Ticket_Summary}\r\n\r\n        {format_instructions}\r\n        \"\"\"\r\n\r\n        prompt = ChatPromptTemplate.from_messages(\r\n            [\r\n                (\"system\", \"You are a Jira assistant specialized in creating technical tickets. You always develop the tickets with precise examples of sub-tasks and acceptance criteria. Remember to use double quotes for keys.\"),\r\n                few_shot_prompt,\r\n                (\"human\", prompt_string),\r\n            ]\r\n        )\r\n\r\n        final_prompt = ChatPromptTemplate(\r\n            messages=[\r\n               prompt  \r\n            ],\r\n            input_variables=['Jira_Ticket_Summary'],\r\n            partial_variables={\"format_instructions\": format_instructions},\r\n            output_parser=output_parser\r\n        )\r\n\r\n\r\n        chain = LLMChain(llm=turbo_llm, \r\n                         prompt=final_prompt,\r\n                         output_parser=output_parser,\r\n                         output_key=\"ticket\")\r\n\r\n        sequential_chain = SequentialChain(chains=[chain],\r\n                                           input_variables=['Jira_Ticket_Summary'],\r\n                                           output_variables=['ticket'],\r\n                                           verbose=True)\r\n\r\n        input_data={'Jira_Ticket_Summary' : f'{summary}'}\r\n\r\n        result = sequential_chain(input_data)\r\n\r\n        print(\"\\n\\n\\n result_writing : \",result)\r\n        print(\"\\n\\n\\n result_writing_type : \",type(result),'\\n\\n\\n')\r\n        return json.dumps(result['ticket'])\r\n        \r\n    def _arun(self, \r\n            summary:str,\r\n            run_manager: Optional[AsyncCallbackManagerForToolRun] = None,\r\n             ) -> str:\r\n        raise NotImplementedError(\"This tool does not support async\")\r\n    \r\n    args_schema: Optional[Type[BaseModel]] = SummaryTicket\r\n        \r\n\r\nclass \u2260(BaseTool):\r\n\r\n    name = \"Jira_Ticket_Post\"\r\n    description = (\"\"\"\\\r\n                Useful to POST a ticket in Jira Software after you wrote it.\r\n                The input should be like :\r\n        {{\r\n            Action: Jira_Post,\r\n            Action Input: \r\n                \"ticket\": <JSON of the ticket>,\r\n                \"email\": <email associated with the Jira Software account>,\r\n                \"url\": <url to POST the ticket at>,\r\n                \"token\": <identification JIRA API token>\r\n        }}\r\n        \"\"\")\r\n\r\n    def _run(\r\n        self,\r\n        ticket: str, \r\n        email: str,\r\n        url: str,\r\n        token: str,\r\n        run_manager: Optional[AsyncCallbackManagerForToolRun] = None\r\n    ) -> str:\r\n\r\n        # Retrieve the values using lowercase keys\r\n        ticket = json.loads(ticket)\r\n        body = ticket['Jira_ticket']\r\n\r\n        auth = HTTPBasicAuth(email, api_token_jira)\r\n\r\n        headers = {\r\n          \"Accept\": \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n        response = requests.request(\r\n           \"POST\",\r\n           url,\r\n           data=json.dumps(body),\r\n           headers=headers,\r\n           auth=auth\r\n        )\r\n        print(\"\\n\\nPOST : \", json.dumps(json.loads(response.text), sort_keys=True, indent=4, separators=(\",\", \": \")), \"\\n\\n\")\r\n        \r\n        return json.dumps(json.loads(response.text), sort_keys=True, indent=4, separators=(\",\", \": \"))\r\n    \r\n    async def _arun(\r\n        self,\r\n        ticket: str, \r\n        email: str,\r\n        url: str,\r\n        token: str,\r\n        run_manager: Optional[AsyncCallbackManagerForToolRun] = None,\r\n    ) -> str:\r\n        \"\"\"Use the tool asynchronously.\"\"\"\r\n        raise NotImplementedError(\"custom_search does not support async\")\r\n        \r\n    args_schema: Optional[Type[BaseModel]] = POST\r\n\r\n\r\nPREFIX = \"\"\"You are a Jira Assistant.\r\nYou're designed to assist the user with a wide range of tasks related to Jira object management. \r\nIt goes from understand the user's need for its tickets, writing technical and detailed Jira tickets with descriptions, subtasks and acceptance criteria\u2019s to realize API call (POST, PUT or GET) with Jira objects.\r\nCreate a ticket means Write it then POST it.\r\nBefore to act, retrieve the inputs you need in the prompt.\r\n\"\"\"\r\n\r\n\r\nchat_history = MessagesPlaceholder(variable_name=\"chat_history\")\r\nmemory = ConversationBufferMemory(\r\n    memory_key=\"chat_history\", \r\n    return_messages=True)\r\n\r\nagent_kwargs = {\r\n    \"system_message\": SystemMessage(content=f\"{PREFIX}\"),\r\n    \"input_variables\": [\"chat_history\"]\r\n}\r\n\r\n\r\ntools = [CustomJiraTicketPOST(),CustomJiraTicketWriting()]\r\n\r\nconversational_agent = initialize_agent(\r\n    agent=AgentType.OPENAI_MULTI_FUNCTIONS, \r\n    tools=tools, \r\n    llm=turbo_llm,\r\n    verbose=True,\r\n    max_iterations=10,\r\n    early_stopping_method='generate',\r\n    handle_parsing_errors=\"Check your output and make sure it conforms!\",\r\n    memory=memory,\r\n    agent_kwargs=agent_kwargs\r\n)\r\n\r\npayload = {\\\r\n    \"summary\":\"Create a ticket to connect our backend to a new MySQL database. The project key is AJ\",\\\r\n    \"email\":f\"{email}\",\\\r\n    \"url\":f\"{url}\",\\\r\n    \"token\":f\"{api_token_jira}\",\r\n}\r\n\r\nanswer = conversational_agent.run(json.dumps(payload))\r\n\r\n```\r\n\n\n### Expected behavior\n\n**Expected behaviour :**\r\n\r\n- an 201 code for created ticket on Jira Software\r\n\r\n**Actuel behaviour :**\r\n\r\nAll the data are inside the input but the agent has trouble to use them. \r\n\r\n```\r\nFile ~/miniconda3/envs/torch/lib/python3.10/site-packages/langchain/chains/base.py:501, in Chain.run(self, callbacks, tags, metadata, *args, **kwargs)\r\n    499     if len(args) != 1:\r\n    500         raise ValueError(\"`run` supports only one positional argument.\")\r\n--> 501     return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[\r\n    502         _output_key\r\n    503     ]\r\n    505 if kwargs and not args:\r\n    506     return self(kwargs, callbacks=callbacks, tags=tags, metadata=metadata)[\r\n...\r\n  field required (type=value_error.missing)\r\nurl\r\n  field required (type=value_error.missing)\r\ntoken\r\n  field required (type=value_error.missing)\r\n```\r\n\r\nAnd about the prompt \r\n\r\n```\r\n[llm/start] [1:chain:AgentExecutor > 4:llm:ChatOpenAI] Entering LLM run with input:\r\n{\r\n  \"prompts\": [\r\n    \"System: You are a Jira Assistant.\\nYou're designed to assist the user with a wide range of tasks related to Jira object management. \\nIt goes from understand the user's need for its tickets, writing technical and detailed Jira tickets with descriptions, subtasks and acceptance criteria\u2019s to realize API call (POST, PUT or GET) with Jira objects.\\nCreate a ticket means Write it then POST it.\\nBefore to act, retrieve the inputs you need in the prompt.\\n\\nHuman: {\\\"summary\\\": \\\"Create a ticket to connect our backend to a new MySQL database. The project key is AJ\\\", \\\"email\\\": \\\"XXXXXXX@gmail.com\\\", \\\"url\\\": \\\"https://XXXXXXXX.atlassian.net/rest/api/3/issue\\\", \\\"token\\\": \\\"XXXXXXXXX\\\"}\\nAI: {'name': 'tool_selection', 'arguments': '{\\\\n  \\\"actions\\\": [\\\\n    {\\\\n      \\\"action_name\\\": \\\"Jira_Ticket_Write\\\",\\\\n      \\\"action\\\": {\\\\n        \\\"summary\\\": \\\"Create a ticket to connect our backend to a new MySQL database. The project key is AJ\\\"\\\\n      }\\\\n    }\\\\n  ]\\\\n}'}\\nFunction: {\\\"ticket\\\": {\\\"fields\\\": {\\\"project\\\": {\\\"key\\\": \\\"AJ\\\"}, \\\"summary\\\": \\\"Create a Jira ticket to integrate my MySQL database into our current assets\\\", \\\"issuetype\\\": {\\\"name\\\": \\\"Story\\\"}, \\\"priority\\\": {\\\"name\\\": \\\"High\\\"}, \\\"description\\\": {\\\"type\\\": \\\"doc\\\", \\\"version\\\": 1, \\\"content\\\": [{\\\"type\\\": \\\"paragraph\\\", \\\"content\\\": [{\\\"type\\\": \\\"text\\\", \\\"text\\\": \\\"As a developer, I want to integrate my MySQL database with our current assets to improve data management.\\\"}]}, {\\\"type\\\": \\\"heading\\\", \\\"attrs\\\": {\\\"level\\\": 2}, \\\"content\\\": [{\\\"type\\\": \\\"text\\\", \\\"text\\\": \\\"Acceptance Criteria:\\\"}]}, {\\\"type\\\": \\\"paragraph\\\", \\\"content\\\": [{\\\"type\\\": \\\"text\\\", \\\"text\\\": \\\"- The MySQL database is successfully integrated with the application.\\\"}]}, {\\\"type\\\": \\\"paragraph\\\", \\\"content\\\": [{\\\"type\\\": \\\"text\\\", \\\"text\\\": \\\"- Data can be efficiently stored and retrieved from the integrated MySQL database.\\\"}]}, {\\\"type\\\": \\\"paragraph\\\", \\\"content\\\": [{\\\"type\\\": \\\"text\\\", \\\"text\\\": \\\"- The integration process follows best practices and security standards.\\\"}]}, {\\\"type\\\": \\\"paragraph\\\", \\\"content\\\": [{\\\"type\\\": \\\"text\\\", \\\"text\\\": \\\"- The integration is documented for future reference.\\\"}]}, {\\\"type\\\": \\\"heading\\\", \\\"attrs\\\": {\\\"level\\\": 2}, \\\"content\\\": [{\\\"type\\\": \\\"text\\\", \\\"text\\\": \\\"Subtasks:\\\"}]}, {\\\"type\\\": \\\"paragraph\\\", \\\"content\\\": [{\\\"type\\\": \\\"text\\\", \\\"text\\\": \\\"- Analyze the structure of the MySQL database.\\\"}]}, {\\\"type\\\": \\\"paragraph\\\", \\\"content\\\": [{\\\"type\\\": \\\"text\\\", \\\"text\\\": \\\"- Create integration scripts for data migration.\\\"}]}, {\\\"type\\\": \\\"paragraph\\\", \\\"content\\\": [{\\\"type\\\": \\\"text\\\", \\\"text\\\": \\\"- Implement data synchronization with the application.\\\"}]}, {\\\"type\\\": \\\"paragraph\\\", \\\"content\\\": [{\\\"type\\\": \\\"text\\\", \\\"text\\\": \\\"- Perform testing and quality assurance of the integration.\\\"}]}, {\\\"type\\\": \\\"paragraph\\\", \\\"content\\\": [{\\\"type\\\": \\\"text\\\", \\\"text\\\": \\\"- Document the integration process and configurations.\\\"}]}]}}}}\"\r\n  ]\r\n}\r\n[llm/end] [1:chain:AgentExecutor > 4:llm:ChatOpenAI] [83.60s] Exiting LLM run with output:\r\n{\r\n  \"generations\": [\r\n    [\r\n      {\r\n        \"text\": \"\",\r\n        \"generation_info\": {\r\n          \"finish_reason\": \"function_call\"\r\n        },\r\n        \"message\": {\r\n          \"lc\": 1,\r\n          \"type\": \"constructor\",\r\n          \"id\": [\r\n            \"langchain\",\r\n            \"schema\",\r\n            \"messages\",\r\n            \"AIMessage\"\r\n          ],\r\n          \"kwargs\": {\r\n            \"content\": \"\",\r\n            \"additional_kwargs\": {\r\n              \"function_call\": {\r\n                \"name\": \"tool_selection\",\r\n                \"arguments\": \"{\\n  \\\"actions\\\": [\\n    {\\n      \\\"action_name\\\": \\\"Jira_Ticket_Post\\\",\\n      \\\"action\\\": {\\n        \\\"ticket\\\": \\\"{\\\\\\\"fields\\\\\\\": {\\\\\\\"project\\\\\\\": {\\\\\\\"key\\\\\\\": \\\\\\\"AJ\\\\\\\"}, \\\\\\\"summary\\\\\\\": \\\\\\\"Create a Jira ticket to integrate my MySQL database into our current assets\\\\\\\", \\\\\\\"issuetype\\\\\\\": {\\\\\\\"name\\\\\\\": \\\\\\\"Story\\\\\\\"}, \\\\\\\"priority\\\\\\\": {\\\\\\\"name\\\\\\\": \\\\\\\"High\\\\\\\"}, \\\\\\\"description\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"doc\\\\\\\", \\\\\\\"version\\\\\\\": 1, \\\\\\\"content\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"paragraph\\\\\\\", \\\\\\\"content\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"text\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\"As a developer, I want to integrate my MySQL database with our current assets to improve data management.\\\\\\\"}]}, {\\\\\\\"type\\\\\\\": \\\\\\\"heading\\\\\\\", \\\\\\\"attrs\\\\\\\": {\\\\\\\"level\\\\\\\": 2}, \\\\\\\"content\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"text\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\"Acceptance Criteria:\\\\\\\"}]}, {\\\\\\\"type\\\\\\\": \\\\\\\"paragraph\\\\\\\", \\\\\\\"content\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"text\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\"- The MySQL database is successfully integrated with the application.\\\\\\\"}]}, {\\\\\\\"type\\\\\\\": \\\\\\\"paragraph\\\\\\\", \\\\\\\"content\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"text\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\"- Data can be efficiently stored and retrieved from the integrated MySQL database.\\\\\\\"}]}, {\\\\\\\"type\\\\\\\": \\\\\\\"paragraph\\\\\\\", \\\\\\\"content\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"text\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\"- The integration process follows best practices and security standards.\\\\\\\"}]}, {\\\\\\\"type\\\\\\\": \\\\\\\"paragraph\\\\\\\", \\\\\\\"content\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"text\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\"- The integration is documented for future reference.\\\\\\\"}]}, {\\\\\\\"type\\\\\\\": \\\\\\\"heading\\\\\\\", \\\\\\\"attrs\\\\\\\": {\\\\\\\"level\\\\\\\": 2}, \\\\\\\"content\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"text\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\"Subtasks:\\\\\\\"}]}, {\\\\\\\"type\\\\\\\": \\\\\\\"paragraph\\\\\\\", \\\\\\\"content\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"text\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\"- Analyze the structure of the MySQL database.\\\\\\\"}]}, {\\\\\\\"type\\\\\\\": \\\\\\\"paragraph\\\\\\\", \\\\\\\"content\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"text\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\"- Create integration scripts for data migration.\\\\\\\"}]}, {\\\\\\\"type\\\\\\\": \\\\\\\"paragraph\\\\\\\", \\\\\\\"content\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"text\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\"- Implement data synchronization with the application.\\\\\\\"}]}, {\\\\\\\"type\\\\\\\": \\\\\\\"paragraph\\\\\\\", \\\\\\\"content\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"text\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\"- Perform testing and quality assurance of the integration.\\\\\\\"}]}, {\\\\\\\"type\\\\\\\": \\\\\\\"paragraph\\\\\\\", \\\\\\\"content\\\\\\\": [{\\\\\\\"type\\\\\\\": \\\\\\\"text\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\"- Document the integration process and configurations.\\\\\\\"}]}]}}}\\\"\\n      }\\n    }\\n  ]\\n}\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  ],\r\n  \"llm_output\": {\r\n    \"token_usage\": {\r\n      \"prompt_tokens\": 916,\r\n      \"completion_tokens\": 533,\r\n      \"total_tokens\": 1449\r\n    },\r\n    \"model_name\": \"gpt-3.5-turbo\"\r\n  },\r\n  \"run\": null\r\n}\r\n[chain/error] [1:chain:AgentExecutor] [187.30s] Chain run errored with error:\r\n\"ValidationError(model='POST', errors=[{'loc': ('email',), 'msg': 'field required', 'type': 'value_error.missing'}, {'loc': ('url',), 'msg': 'field required', 'type': 'value_error.missing'}, {'loc': ('token',), 'msg': 'field required', 'type': 'value_error.missing'}])\"\r\n\r\n```\r\n\r\nThus, all the informations are in the Input, but i has difficulties to use them.\r\nHow to handle this situation ?\r\n\r\nBest regards",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12882/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12882/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12881",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12881/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12881/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12881/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12881",
        "id": 1977297476,
        "node_id": "PR_kwDOIPDwls5emBub",
        "number": 12881,
        "title": "Adding LLMEncodedChainExtractor",
        "user": {
            "login": "Sandy247",
            "id": 24295927,
            "node_id": "MDQ6VXNlcjI0Mjk1OTI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24295927?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sandy247",
            "html_url": "https://github.com/Sandy247",
            "followers_url": "https://api.github.com/users/Sandy247/followers",
            "following_url": "https://api.github.com/users/Sandy247/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sandy247/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sandy247/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sandy247/subscriptions",
            "organizations_url": "https://api.github.com/users/Sandy247/orgs",
            "repos_url": "https://api.github.com/users/Sandy247/repos",
            "events_url": "https://api.github.com/users/Sandy247/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sandy247/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-04T11:47:56Z",
        "updated_at": "2023-11-11T05:05:08Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12881",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12881",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12881.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12881.patch",
            "merged_at": null
        },
        "body": "**Description:** Adding an optimized version of the `LLMChainExtractor` called `LLMEncodedChainExtractor` that uses an encoding technique to fetch only the indices of the relevant sequence instead of having the LLM regenerate the sequence verbatim. Unit and integration tests have been added. There is also a demo notebook that compares `LLMEncodedChainExtractor` to the `LLMChainExtractor`\r\n**Dependencies:** Optional dependencies - `spacy^3.7.2` and the `en_core_web_sm-3.7.0` model.\r\n **Tag maintainer:** @hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12881/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12881/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12880",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12880/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12880/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12880/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12880",
        "id": 1977286483,
        "node_id": "PR_kwDOIPDwls5el_li",
        "number": 12880,
        "title": "Update return type for Runnable.__or__",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-04T11:14:01Z",
        "updated_at": "2023-11-10T09:52:40Z",
        "closed_at": "2023-11-10T09:52:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12880",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12880",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12880.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12880.patch",
            "merged_at": "2023-11-10T09:52:39Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12880/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12879",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12879/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12879/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12879/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12879",
        "id": 1977275775,
        "node_id": "I_kwDOIPDwls512tV_",
        "number": 12879,
        "title": " Issue: <getting error in create_structured_output_chain prefix>",
        "user": {
            "login": "philip-shinra",
            "id": 55852835,
            "node_id": "MDQ6VXNlcjU1ODUyODM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/55852835?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/philip-shinra",
            "html_url": "https://github.com/philip-shinra",
            "followers_url": "https://api.github.com/users/philip-shinra/followers",
            "following_url": "https://api.github.com/users/philip-shinra/following{/other_user}",
            "gists_url": "https://api.github.com/users/philip-shinra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/philip-shinra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/philip-shinra/subscriptions",
            "organizations_url": "https://api.github.com/users/philip-shinra/orgs",
            "repos_url": "https://api.github.com/users/philip-shinra/repos",
            "events_url": "https://api.github.com/users/philip-shinra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/philip-shinra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-04T10:40:46Z",
        "updated_at": "2023-11-04T11:02:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nlass Node(BaseModel):\r\n    problem:str=Field(...,description=\"the problem related to fan\")\r\n    causes:List[str]=Field(...,description=\"causes related to particular problem\")\r\n    component:Dict[str,str]=Field(...,description='key should be component of fan and value should be description of how component is getting affected')\r\n\r\n\r\n    # description:list[list[str]]=Field(...,description=\"description for all the causes mentioned)\r\n\r\nclass Final(BaseModel):\r\n    final:List[Node]=Field(...,description=\"list of all the Node types\")\r\n\r\nthis is my pydantic class , and i am trying to get structure output from the llm\r\n\r\nerror is \r\n  pydantic_args = self.pydantic_schema.parse_raw(_result)  # type: ignore\r\n  File \"pydantic\\main.py\", line 549, in pydantic.main.BaseModel.parse_raw\r\n  File \"pydantic\\main.py\", line 526, in pydantic.main.BaseModel.parse_obj\r\n  File \"pydantic\\main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for _OutputFormatter\r\noutput -> component\r\n  field required (type=value_error.missing)\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12879/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12878",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12878/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12878/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12878/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12878",
        "id": 1977258241,
        "node_id": "PR_kwDOIPDwls5el5_a",
        "number": 12878,
        "title": "Update csv.ipynb description",
        "user": {
            "login": "bhatt-priyadutt",
            "id": 68959880,
            "node_id": "MDQ6VXNlcjY4OTU5ODgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/68959880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhatt-priyadutt",
            "html_url": "https://github.com/bhatt-priyadutt",
            "followers_url": "https://api.github.com/users/bhatt-priyadutt/followers",
            "following_url": "https://api.github.com/users/bhatt-priyadutt/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhatt-priyadutt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhatt-priyadutt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhatt-priyadutt/subscriptions",
            "organizations_url": "https://api.github.com/users/bhatt-priyadutt/orgs",
            "repos_url": "https://api.github.com/users/bhatt-priyadutt/repos",
            "events_url": "https://api.github.com/users/bhatt-priyadutt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhatt-priyadutt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-04T09:44:59Z",
        "updated_at": "2023-11-06T11:32:05Z",
        "closed_at": "2023-11-06T11:32:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12878",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12878",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12878.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12878.patch",
            "merged_at": "2023-11-06T11:32:04Z"
        },
        "body": "The line removed is not required as there are no other alternative solutions above than that.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12878/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12878/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12877",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12877/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12877/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12877/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12877",
        "id": 1977229050,
        "node_id": "I_kwDOIPDwls512h76",
        "number": 12877,
        "title": "Cohere embeddings API error . Doesnot work with its new v3 model",
        "user": {
            "login": "nsankar",
            "id": 431890,
            "node_id": "MDQ6VXNlcjQzMTg5MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/431890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nsankar",
            "html_url": "https://github.com/nsankar",
            "followers_url": "https://api.github.com/users/nsankar/followers",
            "following_url": "https://api.github.com/users/nsankar/following{/other_user}",
            "gists_url": "https://api.github.com/users/nsankar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nsankar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nsankar/subscriptions",
            "organizations_url": "https://api.github.com/users/nsankar/orgs",
            "repos_url": "https://api.github.com/users/nsankar/repos",
            "events_url": "https://api.github.com/users/nsankar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nsankar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-04T08:18:38Z",
        "updated_at": "2023-11-04T13:25:35Z",
        "closed_at": "2023-11-04T13:25:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nCohere embeddings v3 model requires a input_type parameter . This is specific to the new models as per cohere API doc. as follows\r\n\r\ninput_type\r\nstring\r\nSpecifies the type of input you're giving to the model. Not required for older versions of the embedding models (i.e. anything lower than v3), but is required for more recent versions (i.e. anything bigger than v2).\r\nhttps://docs.cohere.com/reference/embed\r\n\r\nWhen I try specifying the the new cohere v3 embeddings model in Langchain, I get the following error \r\n![image](https://github.com/langchain-ai/langchain/assets/431890/15de1db1-3610-47d2-837c-9826ba5b47d9)\r\n\r\nThis needs to be addressed / fixed.\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.embeddings import CohereEmbeddings\r\ncohere_api_key = \"xxxx\"   #Get your API key from www.cohere.com\r\nembeddings = CohereEmbeddings(model=\"embed-english-v3.0\",cohere_api_key=cohere_api_key)\n\n### Expected behavior\n\nEmbeddings with cohere v3 should work.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12877/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12877/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12876",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12876/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12876/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12876/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12876",
        "id": 1977208493,
        "node_id": "PR_kwDOIPDwls5elwCk",
        "number": 12876,
        "title": "Update get_message.py",
        "user": {
            "login": "AdityaPratapSingh888",
            "id": 113544669,
            "node_id": "U_kgDOBsSN3Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/113544669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AdityaPratapSingh888",
            "html_url": "https://github.com/AdityaPratapSingh888",
            "followers_url": "https://api.github.com/users/AdityaPratapSingh888/followers",
            "following_url": "https://api.github.com/users/AdityaPratapSingh888/following{/other_user}",
            "gists_url": "https://api.github.com/users/AdityaPratapSingh888/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AdityaPratapSingh888/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AdityaPratapSingh888/subscriptions",
            "organizations_url": "https://api.github.com/users/AdityaPratapSingh888/orgs",
            "repos_url": "https://api.github.com/users/AdityaPratapSingh888/repos",
            "events_url": "https://api.github.com/users/AdityaPratapSingh888/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AdityaPratapSingh888/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-04T07:08:08Z",
        "updated_at": "2023-11-04T07:15:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12876",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12876",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12876.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12876.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n    updated the libs/langchain/langchain/tools/gmail/get_message.py \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n    to enable reading html opts as well\r\n  - **Dependencies:** any dependencies required for this change,\r\n    imported re\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12876/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12876/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12875",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12875/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12875/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12875/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12875",
        "id": 1977200742,
        "node_id": "I_kwDOIPDwls512bBm",
        "number": 12875,
        "title": "Conversation memory example - previous messages not remembered",
        "user": {
            "login": "joshpxyne",
            "id": 25165841,
            "node_id": "MDQ6VXNlcjI1MTY1ODQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25165841?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshpxyne",
            "html_url": "https://github.com/joshpxyne",
            "followers_url": "https://api.github.com/users/joshpxyne/followers",
            "following_url": "https://api.github.com/users/joshpxyne/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshpxyne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshpxyne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshpxyne/subscriptions",
            "organizations_url": "https://api.github.com/users/joshpxyne/orgs",
            "repos_url": "https://api.github.com/users/joshpxyne/repos",
            "events_url": "https://api.github.com/users/joshpxyne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshpxyne/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-04T06:41:49Z",
        "updated_at": "2023-11-04T07:13:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version 0.0.330\r\nChroma version 0.4.15\r\n\r\nThis may either be a true bug or just documentation issue, but I implemented the simplest possible version of a ConversationalRetrievalChain nearly directly from the documentation, and the model doesn't remember previous messages.\r\n\r\n```\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\n\r\nembeddings = OpenAIEmbeddings()\r\nvectorstore = Chroma(embedding_function=embeddings)\r\n\r\nfrom langchain.memory import ConversationBufferMemory\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n\r\nqa = ConversationalRetrievalChain.from_llm(OpenAI(temperature=0,model_name=\"gpt-4-32k\"), vectorstore.as_retriever(), memory=memory)\r\n\r\nquery = \"My name's Bob. How are you?\"\r\nresult = qa({\"question\": query})\r\n\r\nprint(result)\r\n\r\nquery = \"What's my name?\"\r\nresult = qa({\"question\": query})\r\n\r\nprint(\"NEW MESSAGE:\",result)\r\n```\r\n\r\nThe output shows that the model has no memory:\r\n```\r\n{'question': \"My name's bob. How are you?\", 'chat_history': [HumanMessage(content=\"My name's bob. How are you?\", additional_kwargs={}, example=False), AIMessage(content=\"I'm doing well, thank you. How can I assist you today, Bob?\", additional_kwargs={}, example=False)], 'answer': \"I'm doing well, thank you. How can I assist you today, Bob?\"}\r\nNEW MESSAGE: {'question': \"What's my name?\", 'chat_history': [HumanMessage(content=\"My name's bob. How are you?\", additional_kwargs={}, example=False), AIMessage(content=\"I'm doing well, thank you. How can I assist you today, Bob?\", additional_kwargs={}, example=False), HumanMessage(content=\"What's my name?\", additional_kwargs={}, example=False), AIMessage(content='The text does not provide the name of the person who is speaking.', additional_kwargs={}, example=False)], 'answer': 'The text does not provide the name of the person who is speaking.'}\r\n```\r\n\r\nApologies if I missed something dumb but it seemed pretty cut and dry so felt like I at least had to post for posterity's sake.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. run this code:\r\n\r\n```\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\n\r\nembeddings = OpenAIEmbeddings()\r\nvectorstore = Chroma(embedding_function=embeddings)\r\n\r\nfrom langchain.memory import ConversationBufferMemory\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n\r\nqa = ConversationalRetrievalChain.from_llm(OpenAI(temperature=0,model_name=\"gpt-4-32k\"), vectorstore.as_retriever(), memory=memory)\r\n\r\nquery = \"My name's Bob. How are you?\"\r\nresult = qa({\"question\": query})\r\n\r\nprint(result)\r\n\r\nquery = \"What's my name?\"\r\nresult = qa({\"question\": query})\r\n\r\nprint(\"NEW MESSAGE:\",result)\r\n```\n\n### Expected behavior\n\nI'd expect the model to remember \"my name\".",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12875/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12875/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12874",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12874/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12874/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12874/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12874",
        "id": 1977185428,
        "node_id": "PR_kwDOIPDwls5elrZi",
        "number": 12874,
        "title": "added Templates/rag lancedb example",
        "user": {
            "login": "akashAD98",
            "id": 62583018,
            "node_id": "MDQ6VXNlcjYyNTgzMDE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/62583018?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akashAD98",
            "html_url": "https://github.com/akashAD98",
            "followers_url": "https://api.github.com/users/akashAD98/followers",
            "following_url": "https://api.github.com/users/akashAD98/following{/other_user}",
            "gists_url": "https://api.github.com/users/akashAD98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akashAD98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akashAD98/subscriptions",
            "organizations_url": "https://api.github.com/users/akashAD98/orgs",
            "repos_url": "https://api.github.com/users/akashAD98/repos",
            "events_url": "https://api.github.com/users/akashAD98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akashAD98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-04T05:51:40Z",
        "updated_at": "2023-11-10T11:19:42Z",
        "closed_at": "2023-11-07T18:30:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12874",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12874",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12874.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12874.patch",
            "merged_at": null
        },
        "body": "\r\n  - **Description:** a description of the change, \r\n  i wanted to add lancedb as vectordb , I saw there are other vectordb  but not lancedb so i added code for it \r\n  - **Dependencies:** any dependencies required for this change,\r\n   pip install lancedb ,\r\n  which i already added in the poetry\r\n\r\nplease review this pr \r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12874/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12874/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12873",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12873/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12873/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12873/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12873",
        "id": 1977166158,
        "node_id": "PR_kwDOIPDwls5elncX",
        "number": 12873,
        "title": "Feature/encoded chain extract compressor",
        "user": {
            "login": "Sandy247",
            "id": 24295927,
            "node_id": "MDQ6VXNlcjI0Mjk1OTI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24295927?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sandy247",
            "html_url": "https://github.com/Sandy247",
            "followers_url": "https://api.github.com/users/Sandy247/followers",
            "following_url": "https://api.github.com/users/Sandy247/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sandy247/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sandy247/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sandy247/subscriptions",
            "organizations_url": "https://api.github.com/users/Sandy247/orgs",
            "repos_url": "https://api.github.com/users/Sandy247/repos",
            "events_url": "https://api.github.com/users/Sandy247/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sandy247/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-04T04:45:46Z",
        "updated_at": "2023-11-04T04:45:56Z",
        "closed_at": "2023-11-04T04:45:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12873",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12873",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12873.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12873.patch",
            "merged_at": null
        },
        "body": "Adding nltk to test dependencies\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12873/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12871",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12871/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12871/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12871/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12871",
        "id": 1977104837,
        "node_id": "PR_kwDOIPDwls5elavR",
        "number": 12871,
        "title": "fix: load google credentials properly in GoogleDriveLoader",
        "user": {
            "login": "nakamasato",
            "id": 883228,
            "node_id": "MDQ6VXNlcjg4MzIyOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/883228?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nakamasato",
            "html_url": "https://github.com/nakamasato",
            "followers_url": "https://api.github.com/users/nakamasato/followers",
            "following_url": "https://api.github.com/users/nakamasato/following{/other_user}",
            "gists_url": "https://api.github.com/users/nakamasato/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nakamasato/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nakamasato/subscriptions",
            "organizations_url": "https://api.github.com/users/nakamasato/orgs",
            "repos_url": "https://api.github.com/users/nakamasato/repos",
            "events_url": "https://api.github.com/users/nakamasato/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nakamasato/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-04T01:40:50Z",
        "updated_at": "2023-11-09T22:07:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12871",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12871",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12871.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12871.patch",
            "merged_at": null
        },
        "body": "\r\n- **Description:** \r\n\t- Fix #12870: set scope in `default` func (ref: https://google-auth.readthedocs.io/en/master/reference/google.auth.html)\r\n\t- Moved the code to load default credentials to the bottom for clarity of the logic\r\n\t- Add docstring and comment for each credential loading logic\r\n- **Issue:** https://github.com/langchain-ai/langchain/issues/12870\r\n- **Dependencies:** no dependencies change\r\n- **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n- **Twitter handle:** @gymnstcs\r\n\r\n<!-- If no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12871/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12871/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12870",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12870/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12870/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12870/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12870",
        "id": 1977102464,
        "node_id": "I_kwDOIPDwls512DCA",
        "number": 12870,
        "title": "GoogleDriveLoader with ADC default error",
        "user": {
            "login": "nakamasato",
            "id": 883228,
            "node_id": "MDQ6VXNlcjg4MzIyOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/883228?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nakamasato",
            "html_url": "https://github.com/nakamasato",
            "followers_url": "https://api.github.com/users/nakamasato/followers",
            "following_url": "https://api.github.com/users/nakamasato/following{/other_user}",
            "gists_url": "https://api.github.com/users/nakamasato/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nakamasato/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nakamasato/subscriptions",
            "organizations_url": "https://api.github.com/users/nakamasato/orgs",
            "repos_url": "https://api.github.com/users/nakamasato/repos",
            "events_url": "https://api.github.com/users/nakamasato/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nakamasato/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-04T01:36:09Z",
        "updated_at": "2023-11-04T01:43:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n- OS: macOS Monterey Version 12.6 Chip Apple M1\r\n- Python: 3.10.8\r\n- langchain: 0.0.330\r\n- google-auth: 2.23.4\r\n\r\nDetails:\r\n\r\n```\r\npython -V\r\nPython 3.10.8\r\n```\r\n\r\n```\r\npip freeze\r\naiohttp==3.8.6\r\naiosignal==1.3.1\r\nannotated-types==0.6.0\r\nanyio==3.7.1\r\nasync-timeout==4.0.3\r\nattrs==23.1.0\r\ncachetools==5.3.2\r\ncertifi==2023.7.22\r\ncharset-normalizer==3.3.2\r\ndataclasses-json==0.6.1\r\nexceptiongroup==1.1.3\r\nfrozenlist==1.4.0\r\ngoogle-api-core==2.12.0\r\ngoogle-api-python-client==2.106.0\r\ngoogle-auth==2.23.4\r\ngoogle-auth-httplib2==0.1.1\r\ngoogle-auth-oauthlib==1.1.0\r\ngoogleapis-common-protos==1.61.0\r\nhttplib2==0.22.0\r\nidna==3.4\r\njsonpatch==1.33\r\njsonpointer==2.4\r\nlangchain==0.0.330\r\nlangsmith==0.0.57\r\nmarshmallow==3.20.1\r\nmultidict==6.0.4\r\nmypy-extensions==1.0.0\r\nnumpy==1.26.1\r\noauthlib==3.2.2\r\npackaging==23.2\r\nprotobuf==4.25.0\r\npyasn1==0.5.0\r\npyasn1-modules==0.3.0\r\npydantic==2.4.2\r\npydantic_core==2.10.1\r\npyparsing==3.1.1\r\nPyYAML==6.0.1\r\nrequests==2.31.0\r\nrequests-oauthlib==1.3.1\r\nrsa==4.9\r\nsniffio==1.3.0\r\nSQLAlchemy==2.0.23\r\ntenacity==8.2.3\r\ntyping-inspect==0.9.0\r\ntyping_extensions==4.8.0\r\nuritemplate==4.1.1\r\nurllib3==2.0.7\r\nyarl==1.9.2\r\n```\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n`main.py`:\r\n\r\n```python\r\nfrom langchain.document_loaders import GoogleDriveLoader\r\n\r\n\r\ndef main():\r\n    loader = GoogleDriveLoader(\r\n        document_ids=[\"xxx\"],\r\n    )\r\n    docs = loader.load()\r\n    print(docs)\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\n\r\n```\r\npython main.py\r\nTraceback (most recent call last):\r\n  File \"/Users/m.naka/repos/nakamasato/langchain_google_drive/main.py\", line 12, in <module>\r\n    main()\r\n  File \"/Users/m.naka/repos/nakamasato/langchain_google_drive/main.py\", line 8, in main\r\n    docs = loader.load()\r\n  File \"/Users/m.naka/repos/nakamasato/langchain_google_drive/venv/lib/python3.10/site-packages/langchain/document_loaders/googledrive.py\", line 355, in load\r\n    return self._load_documents_from_ids()\r\n  File \"/Users/m.naka/repos/nakamasato/langchain_google_drive/venv/lib/python3.10/site-packages/langchain/document_loaders/googledrive.py\", line 293, in _load_documents_from_ids\r\n    return [self._load_document_from_id(doc_id) for doc_id in self.document_ids]\r\n  File \"/Users/m.naka/repos/nakamasato/langchain_google_drive/venv/lib/python3.10/site-packages/langchain/document_loaders/googledrive.py\", line 293, in <listcomp>\r\n    return [self._load_document_from_id(doc_id) for doc_id in self.document_ids]\r\n  File \"/Users/m.naka/repos/nakamasato/langchain_google_drive/venv/lib/python3.10/site-packages/langchain/document_loaders/googledrive.py\", line 200, in _load_document_from_id\r\n    creds = self._load_credentials()\r\n  File \"/Users/m.naka/repos/nakamasato/langchain_google_drive/venv/lib/python3.10/site-packages/langchain/document_loaders/googledrive.py\", line 135, in _load_credentials\r\n    creds = creds.with_scopes(SCOPES)\r\nAttributeError: 'Credentials' object has no attribute 'with_scopes'. Did you mean: 'has_scopes'?\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nEnable to read the credentials",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12870/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12870/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]